void sub_23CDAC244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;

  google::LogMessageFatal::~LogMessageFatal((google::LogMessageFatal *)&a71);
}

void sub_23CDAC24C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void sub_23CDAC93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  google::LogMessageFatal::~LogMessageFatal((google::LogMessageFatal *)&a65);
}

void sub_23CDAC944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  std::__tree<std::__value_type<unsigned long,void *>,std::__map_value_compare<unsigned long,std::__value_type<unsigned long,void *>,std::less<unsigned long>,true>,std::allocator<std::__value_type<unsigned long,void *>>>::destroy((uint64_t)&a71, *(void **)(v71 + 248));
  _Unwind_Resume(a1);
}

void **std::set<long long>::set[abi:ne180100]<std::__wrap_iter<long long const*>>(void **a1, uint64_t *a2, uint64_t *a3)
{
  a1[1] = 0;
  v4 = a1 + 1;
  a1[2] = 0;
  *a1 = a1 + 1;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v7 = (uint64_t **)std::__tree<long long>::__find_equal<long long>(a1, v4, &v13, &v12, v6);
      if (!*v7)
      {
        v8 = (uint64_t *)operator new(0x28uLL);
        v8[4] = *v6;
        uint64_t v9 = v13;
        uint64_t *v8 = 0;
        v8[1] = 0;
        v8[2] = v9;
        *v7 = v8;
        v10 = (void *)**a1;
        if (v10)
        {
          *a1 = v10;
          v8 = *v7;
        }
        std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v8);
        a1[2] = (void *)((char *)a1[2] + 1);
      }
      ++v6;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_23CDACA3C(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<unsigned long,void *>,std::__map_value_compare<unsigned long,std::__value_type<unsigned long,void *>,std::less<unsigned long>,true>,std::allocator<std::__value_type<unsigned long,void *>>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

long long *absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>,operations_research::sat::Literal>,absl::lts_2020_02_25::hash_internal::Hash<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::equal_to<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::allocator<std::pair<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long> const,operations_research::sat::Literal>>>::operator=(long long *a1, char **a2)
{
  absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>,operations_research::sat::Literal>,absl::lts_2020_02_25::hash_internal::Hash<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::equal_to<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::allocator<std::pair<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long> const,operations_research::sat::Literal>>>::raw_hash_set((uint64_t)&v12, a2);
  long long v3 = *a1;
  long long v4 = v12;
  long long v5 = v13;
  long long v12 = *a1;
  v6 = (void *)*((void *)a1 + 4);
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v8 = v15;
  *((void *)a1 + 4) = v14;
  *((void *)a1 + 5) = v8;
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  *a1 = v4;
  a1[1] = v5;
  *(void *)&long long v13 = v9;
  *((void *)&v13 + 1) = v10;
  v14 = v6;
  uint64_t v15 = v7;
  if (v10)
  {
    operator delete((void *)v3);
    uint64_t v15 = 0;
    *(void *)&long long v12 = &absl::lts_2020_02_25::container_internal::EmptyGroup(void)::empty_group;
    *((void *)&v12 + 1) = 0;
    long long v13 = 0uLL;
    v6 = v14;
  }
  if (v6) {
    absl::lts_2020_02_25::container_internal::UnsampleSlow(v6);
  }
  return a1;
}

uint64_t absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>,operations_research::sat::Literal>,absl::lts_2020_02_25::hash_internal::Hash<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::equal_to<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::allocator<std::pair<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long> const,operations_research::sat::Literal>>>::raw_hash_set(uint64_t a1, char **a2)
{
  *(void *)a1 = &absl::lts_2020_02_25::container_internal::EmptyGroup(void)::empty_group;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  long long v4 = a2[2];
  if (v4 == (char *)7)
  {
    unint64_t v5 = 8;
  }
  else
  {
    unint64_t v5 = (unint64_t)&v4[(uint64_t)(v4 - 1) / 7];
    if (!v5) {
      goto LABEL_5;
    }
  }
  absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>,operations_research::sat::Literal>,absl::lts_2020_02_25::hash_internal::Hash<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::equal_to<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::allocator<std::pair<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long> const,operations_research::sat::Literal>>>::resize((char **)a1, (char *)(0xFFFFFFFFFFFFFFFFLL >> __clz(v5)));
LABEL_5:
  v6 = *a2;
  uint64_t v7 = a2[1];
  if (**a2 > -2)
  {
    uint64_t v8 = *a2;
    v11 = a2[3];
    uint64_t v10 = &v11[(void)v6];
    if (v6 == &v11[(void)v6]) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v8 = *a2;
    do
    {
      unint64_t v9 = (__clz(__rbit64(((*(void *)v8 >> 7) & ~*(void *)v8 | 0xFEFEFEFEFEFEFELL) + 1)) + 7) >> 3;
      v8 += v9;
      v7 += 12 * v9;
    }
    while (*v8 < -1);
    uint64_t v10 = &a2[3][(void)v6];
    if (v8 == v10) {
      goto LABEL_20;
    }
  }
  do
  {
    unint64_t v12 = ((((unint64_t)&absl::lts_2020_02_25::hash_internal::CityHashState::kSeed + *(void *)v7)
          * (unsigned __int128)0x9DDFEA08EB382D69) >> 64) ^ (0x9DDFEA08EB382D69
                                                             * ((void)&absl::lts_2020_02_25::hash_internal::CityHashState::kSeed
                                                              + *(void *)v7));
    long long v13 = *(char **)a1;
    uint64_t v14 = *(void *)(a1 + 24);
    unint64_t v15 = ((v12 >> 7) ^ (*(void *)a1 >> 12)) & v14;
    unint64_t v16 = 0;
    for (unint64_t i = *(void *)(*(void *)a1 + v15) & (~*(void *)(*(void *)a1 + v15) << 7) & 0x8080808080808080;
          !i;
          unint64_t i = *(void *)&v13[v15] & (~*(void *)&v13[v15] << 7) & 0x8080808080808080)
    {
      v16 += 8;
      unint64_t v15 = (v16 + v15) & v14;
    }
    unint64_t v18 = (v15 + (__clz(__rbit64(i)) >> 3)) & v14;
    v13[v18] = v12 & 0x7F;
    *(unsigned char *)((*(void *)(a1 + 24) & 7) + *(void *)a1 + ((v18 - 8) & *(void *)(a1 + 24)) + 1) = v12 & 0x7F;
    uint64_t v19 = *(void *)(a1 + 8) + 12 * v18;
    *(void *)uint64_t v19 = *(void *)v7;
    *(_DWORD *)(v19 + 8) = *((_DWORD *)v7 + 2);
    v20 = *(atomic_ullong **)(a1 + 32);
    if (v20) {
      absl::lts_2020_02_25::container_internal::RecordInsertSlow(v20, v12, v16);
    }
    int v21 = *++v8;
    v7 += 12;
    if (v21 <= -2)
    {
      do
      {
        unint64_t v22 = (__clz(__rbit64(((*(void *)v8 >> 7) & ~*(void *)v8 | 0xFEFEFEFEFEFEFELL) + 1)) + 7) >> 3;
        v8 += v22;
        v7 += 12 * v22;
      }
      while (*v8 < -1);
    }
  }
  while (v8 != v10);
LABEL_20:
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 40) -= a2[2];
  return a1;
}

void sub_23CDACD6C(_Unwind_Exception *a1)
{
  absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>,operations_research::sat::Literal>,absl::lts_2020_02_25::hash_internal::Hash<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::equal_to<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::allocator<std::pair<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long> const,operations_research::sat::Literal>>>::~raw_hash_set(v1);
  _Unwind_Resume(a1);
}

void sub_23CDACD80(_Unwind_Exception *a1)
{
  absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>,operations_research::sat::Literal>,absl::lts_2020_02_25::hash_internal::Hash<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::equal_to<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>,std::allocator<std::pair<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long> const,operations_research::sat::Literal>>>::~raw_hash_set(v1);
  _Unwind_Resume(a1);
}

uint64_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::ThetaLambdaTree(uint64_t result)
{
  *(unsigned char *)(result + 12) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  return result;
}

_OWORD *operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::Reset(_DWORD *a1, int a2)
{
  int v3 = (a2 & 1) + a2;
  int64x2_t v4 = vdupq_n_s64(0x8000000000000002);
  int v5 = 2;
  if (v3 <= 2) {
    int v3 = 2;
  }
  *a1 = a2;
  a1[1] = v3;
  int64x2_t v8 = v4;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  result = std::vector<operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::TreeNode,std::allocator<operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::TreeNode>>::assign((uint64_t)(a1 + 4), (2 * v3), &v8);
  do
  {
    int v7 = v5;
    v5 *= 2;
  }
  while (v7 < a1[1]);
  a1[2] = v7;
  return result;
}

_OWORD *std::vector<operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::TreeNode,std::allocator<operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::TreeNode>>::assign(uint64_t a1, unint64_t a2, _OWORD *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  result = *(_OWORD **)a1;
  if (a2 > (v6 - (uint64_t)result) >> 5)
  {
    if (result)
    {
      *(void *)(a1 + 8) = result;
      operator delete(result);
      uint64_t v6 = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
    }
    if (a2 >> 59) {
      goto LABEL_24;
    }
    uint64_t v8 = v6 >> 4;
    if (v6 >> 4 <= a2) {
      uint64_t v8 = a2;
    }
    BOOL v9 = (unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0;
    unint64_t v10 = 0x7FFFFFFFFFFFFFFLL;
    if (!v9) {
      unint64_t v10 = v8;
    }
    if (v10 >> 59) {
LABEL_24:
    }
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    uint64_t v11 = 2 * v10;
    result = operator new(32 * v10);
    *(void *)a1 = result;
    *(void *)(a1 + 8) = result;
    *(void *)(a1 + 16) = &result[v11];
    uint64_t v12 = 32 * a2;
    uint64_t v13 = (uint64_t)&result[2 * a2];
    do
    {
      long long v14 = a3[1];
      _OWORD *result = *a3;
      result[1] = v14;
      result += 2;
      v12 -= 32;
    }
    while (v12);
    goto LABEL_23;
  }
  unint64_t v15 = (uint64_t)(*(void *)(a1 + 8) - (void)result) >> 5;
  if (v15 >= a2) {
    uint64_t v16 = a2;
  }
  else {
    uint64_t v16 = (uint64_t)(*(void *)(a1 + 8) - (void)result) >> 5;
  }
  for (; v16; --v16)
  {
    long long v17 = a3[1];
    _OWORD *result = *a3;
    result[1] = v17;
    result += 2;
  }
  if (a2 <= v15)
  {
    uint64_t v13 = *(void *)a1 + 32 * a2;
LABEL_23:
    *(void *)(a1 + 8) = v13;
    return result;
  }
  unint64_t v18 = *(_OWORD **)(a1 + 8);
  uint64_t v19 = &v18[2 * (a2 - v15)];
  uint64_t v20 = 32 * a2 - 32 * v15;
  do
  {
    long long v21 = a3[1];
    *unint64_t v18 = *a3;
    v18[1] = v21;
    v18 += 2;
    v20 -= 32;
  }
  while (v20);
  *(void *)(a1 + 8) = v19;
  return result;
}

int8x16_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::AddOrUpdateEvent(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5 = *(_DWORD *)(a1 + 4);
  int v6 = *(_DWORD *)(a1 + 8) + a2;
  if (v6 < 2 * v5) {
    int v5 = 0;
  }
  int v7 = v6 - v5;
  uint64_t v8 = *(void *)(a1 + 16);
  BOOL v9 = (void *)(v8 + 32 * v7);
  *BOOL v9 = a4 + a3;
  v9[1] = a5 + a3;
  v9[2] = a4;
  v9[3] = a5 - a4;
  do
  {
    unint64_t v10 = (uint64_t *)(v8 + 32 * (v7 & 0x7FFFFFFFFFFFFFELL));
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    uint64_t v13 = (int64x2_t *)(v8 + ((32 * v7) | 0x20));
    unint64_t v14 = v13[1].u64[0];
    uint64_t v15 = v13[1].i64[1];
    if (v12 <= v15 + *v10) {
      uint64_t v12 = v15 + *v10;
    }
    uint64_t v16 = v10[2];
    uint64_t v17 = v10[3];
    uint64_t v18 = v14 + v16;
    if (v15 > v17) {
      uint64_t v17 = v13[1].i64[1];
    }
    uint64_t v19 = (int8x16_t *)(v8 + 32 * ((uint64_t)v7 >> 1));
    v20.i64[0] = v11;
    v20.i64[1] = v12;
    int64x2_t v21 = vaddq_s64(v20, vdupq_n_s64(v14));
    int8x16_t result = vbslq_s8((int8x16_t)vcgtq_s64(*v13, v21), *(int8x16_t *)v13, (int8x16_t)v21);
    *uint64_t v19 = result;
    v19[1].i64[0] = v18;
    v19[1].i64[1] = v17;
    BOOL v23 = v7 <= 3;
    v7 >>= 1;
  }
  while (!v23);
  return result;
}

uint64_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::GetLeafFromEvent(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  int v3 = *(_DWORD *)(a1 + 8) + a2;
  if (v3 < 2 * v2) {
    int v2 = 0;
  }
  return (v3 - v2);
}

int8x16_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::AddOrUpdateOptionalEvent(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v4 = *(_DWORD *)(a1 + 4);
  int v5 = *(_DWORD *)(a1 + 8) + a2;
  if (v5 < 2 * v4) {
    int v4 = 0;
  }
  int v6 = v5 - v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = (void *)(v7 + 32 * v6);
  void *v8 = 0x8000000000000002;
  v8[1] = a4 + a3;
  v8[2] = 0;
  v8[3] = a4;
  do
  {
    BOOL v9 = (uint64_t *)(v7 + 32 * (v6 & 0x7FFFFFFFFFFFFFELL));
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = (int64x2_t *)(v7 + ((32 * v6) | 0x20));
    unint64_t v13 = v12[1].u64[0];
    uint64_t v14 = v12[1].i64[1];
    if (v11 <= v14 + *v9) {
      uint64_t v11 = v14 + *v9;
    }
    uint64_t v15 = v9[2];
    uint64_t v16 = v9[3];
    uint64_t v17 = v13 + v15;
    if (v14 > v16) {
      uint64_t v16 = v12[1].i64[1];
    }
    uint64_t v18 = (int8x16_t *)(v7 + 32 * ((uint64_t)v6 >> 1));
    v19.i64[0] = v10;
    v19.i64[1] = v11;
    int64x2_t v20 = vaddq_s64(v19, vdupq_n_s64(v13));
    int8x16_t result = vbslq_s8((int8x16_t)vcgtq_s64(*v12, v20), *(int8x16_t *)v12, (int8x16_t)v20);
    *uint64_t v18 = result;
    v18[1].i64[0] = v17;
    v18[1].i64[1] = v16;
    BOOL v22 = v6 <= 3;
    v6 >>= 1;
  }
  while (!v22);
  return result;
}

int8x16_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::RemoveEvent(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  int v3 = *(_DWORD *)(a1 + 8) + a2;
  if (v3 < 2 * v2) {
    int v2 = 0;
  }
  int v4 = v3 - v2;
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = (int64x2_t *)(v5 + 32 * v4);
  int64x2_t *v6 = vdupq_n_s64(0x8000000000000002);
  v6[1].i64[0] = 0;
  v6[1].i64[1] = 0;
  do
  {
    uint64_t v7 = (uint64_t *)(v5 + 32 * (v4 & 0x7FFFFFFFFFFFFFELL));
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = (int64x2_t *)(v5 + ((32 * v4) | 0x20));
    unint64_t v11 = v10[1].u64[0];
    uint64_t v12 = v10[1].i64[1];
    if (v9 <= v12 + *v7) {
      uint64_t v9 = v12 + *v7;
    }
    uint64_t v13 = v7[2];
    uint64_t v14 = v7[3];
    uint64_t v15 = v11 + v13;
    if (v12 > v14) {
      uint64_t v14 = v10[1].i64[1];
    }
    uint64_t v16 = (int8x16_t *)(v5 + 32 * ((uint64_t)v4 >> 1));
    v17.i64[0] = v8;
    v17.i64[1] = v9;
    int64x2_t v18 = vaddq_s64(v17, vdupq_n_s64(v11));
    int8x16_t result = vbslq_s8((int8x16_t)vcgtq_s64(*v10, v18), *(int8x16_t *)v10, (int8x16_t)v18);
    *uint64_t v16 = result;
    v16[1].i64[0] = v15;
    v16[1].i64[1] = v14;
    BOOL v20 = v4 <= 3;
    v4 >>= 1;
  }
  while (!v20);
  return result;
}

uint64_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::GetEnvelope(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 16) + 32);
}

uint64_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::GetOptionalEnvelope(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 16) + 40);
}

uint64_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::GetMaxEventWithEnvelopeGreaterThan(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  if (v2 < 2)
  {
    LODWORD(v4) = 1;
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 16);
    LODWORD(v4) = 1;
    do
    {
      int v5 = 2 * v4;
      uint64_t v4 = (2 * (int)v4) | 1;
      if (a2 >= *(void *)(v3 + 32 * v4))
      {
        a2 -= *(void *)(v3 + 32 * v4 + 16);
        LODWORD(v4) = v5;
      }
    }
    while ((int)v4 < v2);
  }
  return (v2 & (((int)v4 - *(_DWORD *)(a1 + 8)) >> 31)) + v4 - *(_DWORD *)(a1 + 8);
}

uint64_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::GetEnvelopeOf(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 4);
  int v3 = *(_DWORD *)(a1 + 8) + a2;
  if (v3 < 2 * v2) {
    int v2 = 0;
  }
  int v4 = v3 - v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = *(void *)(v5 + 32 * v4);
  if (v4 >= 2)
  {
    do
    {
      uint64_t v8 = v4 | 1u;
      if (v4 != v8) {
        result += *(void *)(v5 + 32 * v8 + 16);
      }
      BOOL v7 = v4 > 3;
      int v4 = v4 >> 1;
    }
    while (v7);
  }
  return result;
}

uint64_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::GetEventsWithOptionalEnvelopeGreaterThan(uint64_t a1, uint64_t a2, int *a3, int *a4, void *a5)
{
  uint64_t v11 = 0;
  uint64_t result = operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::GetLeavesWithOptionalEnvelopeGreaterThan(a1, a2, (_DWORD *)&v11 + 1, (int *)&v11, a5);
  int v9 = HIDWORD(v11) - *(_DWORD *)(a1 + 8);
  if (v9 < 0)
  {
    *a3 = *(_DWORD *)(a1 + 4) + v9;
    int v10 = v11 - *(_DWORD *)(a1 + 8);
    if (v10 >= 0) {
      goto LABEL_3;
    }
  }
  else
  {
    *a3 = v9;
    int v10 = v11 - *(_DWORD *)(a1 + 8);
    if (v10 >= 0)
    {
LABEL_3:
      *a4 = v10;
      return result;
    }
  }
  *a4 = *(_DWORD *)(a1 + 4) + v10;
  return result;
}

uint64_t operations_research::sat::ThetaLambdaTree<gtl::IntType<operations_research::sat::IntegerValue_tag_,long long>>::GetLeavesWithOptionalEnvelopeGreaterThan(uint64_t result, uint64_t a2, _DWORD *a3, int *a4, void *a5)
{
  int v5 = *(_DWORD *)(result + 4);
  uint64_t v6 = *(void *)(result + 16);
  LODWORD(v7) = 1;
  if (v5 >= 2)
  {
    while (1)
    {
      while (1)
      {
        LODWORD(v7) = 2 * v7;
        uint64_t v8 = (int)v7 | 1;
        int v9 = (void *)(v6 + 32 * v8);
        if (a2 >= v9[1]) {
          break;
        }
        LODWORD(v7) = v7 | 1;
        if ((int)v8 >= v5) {
          goto LABEL_7;
        }
      }
      uint64_t v11 = v9[2];
      uint64_t v10 = v9[3];
      uint64_t v12 = *(void *)(v6 + 32 * (int)v7);
      if (a2 < v10 + v11 + v12) {
        break;
      }
      a2 -= v11;
      if ((int)v7 >= v5) {
        goto LABEL_7;
      }
    }
    while ((int)v8 < v5)
    {
      LODWORD(v8) = 2 * v8;
      if (*(void *)(v6 + 32 * ((int)v8 | 1) + 24) == v10) {
        LODWORD(v8) = v8 | 1;
      }
    }
    *a4 = v8;
    uint64_t v13 = a2 - (v10 + v11);
    int v14 = *(_DWORD *)(result + 4);
    if (v14 > (int)v7)
    {
      do
      {
        int v15 = 2 * v7;
        uint64_t v7 = (2 * (int)v7) | 1;
        if (v13 >= *(void *)(v6 + 32 * v7))
        {
          v13 -= *(void *)(v6 + 32 * v7 + 16);
          LODWORD(v7) = v15;
        }
      }
      while ((int)v7 < v14);
      uint64_t v12 = *(void *)(v6 + 32 * (int)v7);
    }
    *a3 = v7;
    *a5 = v13 - v12 + *(void *)(v6 + 32 * *a4 + 16) + *(void *)(v6 + 32 * *a4 + 24);
  }
  else
  {
LABEL_7:
    *a3 = v7;
    *a4 = v7;
    *a5 = a2
        - *(void *)(v6 + 32 * (int)v7 + 8)
        + *(void *)(v6 + 32 * (int)v7 + 16)
        + *(void *)(v6 + 32 * (int)v7 + 24);
  }
  return result;
}

uint64_t operations_research::sat::TimeTablingPerTask::TimeTablingPerTask(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = &unk_26F0C4848;
  unint64_t v9 = *(void *)(a5 + 40) - *(void *)(a5 + 32);
  unint64_t v10 = v9 >> 2;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 8) = v9 >> 2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v12 = *(const void **)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  int64_t v13 = v11 - *(void *)a2;
  if (v11 != *(void *)a2)
  {
    if (0xCCCCCCCCCCCCCCCDLL * (v13 >> 2) >= 0xCCCCCCCCCCCCCCDLL) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    int v14 = (char *)operator new(v13);
    *(void *)(a1 + 16) = v14;
    *(void *)(a1 + 24) = v14;
    int v15 = &v14[4 * (v13 >> 2)];
    *(void *)(a1 + 32) = v15;
    memcpy(v14, v12, v13);
    *(void *)(a1 + 24) = v15;
  }
  long long v16 = *a3;
  int v17 = *((_DWORD *)a3 + 4);
  *(_OWORD *)(a1 + 184) = 0u;
  *(_DWORD *)(a1 + 56) = v17;
  *(_OWORD *)(a1 + 40) = v16;
  *(void *)(a1 + 64) = a4;
  *(void *)(a1 + 72) = a5;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  int v18 = 2 * v10 + 4;
  if (2 * v10 != -4)
  {
    if ((int)v10 <= -3) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v19 = v18;
    BOOL v20 = (char *)operator new(16 * v18);
    *(void *)(a1 + 80) = v20;
    *(void *)(a1 + 88) = v20;
    *(void *)(a1 + 96) = &v20[16 * v19];
  }
  *(_DWORD *)(a1 + 176) = v10;
  std::vector<int>::size_type v21 = (int)((uint64_t)v9 >> 2);
  if ((v9 >> 2))
  {
    std::vector<int>::__append((std::vector<int> *)(a1 + 128), v21);
    LODWORD(v10) = *(_DWORD *)(a1 + 8);
    uint64_t v22 = *(void *)(a1 + 152);
    uint64_t v26 = *(void *)(a1 + 160);
    std::vector<int>::size_type v21 = (int)v10;
    *(_DWORD *)(a1 + 180) = v10;
    unint64_t v27 = (v26 - v22) >> 2;
    BOOL v24 = (int)v10 >= v27;
    std::vector<int>::size_type v25 = (int)v10 - v27;
    if (v25 == 0 || !v24) {
      goto LABEL_12;
    }
LABEL_10:
    std::vector<int>::__append((std::vector<int> *)(a1 + 152), v25);
    LODWORD(v10) = *(_DWORD *)(a1 + 8);
    std::vector<int>::size_type v21 = (int)v10;
    goto LABEL_14;
  }
  uint64_t v22 = 0;
  *(_DWORD *)(a1 + 180) = v10;
  unint64_t v23 = (uint64_t)(v9 >> 2) >> 2;
  BOOL v24 = v21 >= v23;
  std::vector<int>::size_type v25 = v21 - v23;
  if (v25 != 0 && v24) {
    goto LABEL_10;
  }
LABEL_12:
  if (!v24) {
    *(void *)(a1 + 160) = v22 + 4 * v21;
  }
LABEL_14:
  *(_DWORD *)(a1 + 232) = 0;
  uint64_t v28 = *(void *)(a1 + 184);
  unint64_t v29 = (*(void *)(a1 + 192) - v28) >> 2;
  BOOL v30 = v21 >= v29;
  std::vector<int>::size_type v31 = v21 - v29;
  if (v31 != 0 && v30)
  {
    std::vector<int>::__append((std::vector<int> *)(a1 + 184), v31);
    LODWORD(v10) = *(_DWORD *)(a1 + 8);
    std::vector<int>::size_type v21 = (int)v10;
  }
  else if (!v30)
  {
    *(void *)(a1 + 192) = v28 + 4 * v21;
  }
  uint64_t v32 = *(void *)(a1 + 208);
  unint64_t v33 = (*(void *)(a1 + 216) - v32) >> 2;
  BOOL v34 = v21 >= v33;
  std::vector<int>::size_type v35 = v21 - v33;
  if (v35 != 0 && v34)
  {
    std::vector<int>::__append((std::vector<int> *)(a1 + 208), v35);
    LODWORD(v10) = *(_DWORD *)(a1 + 8);
  }
  else if (!v34)
  {
    *(void *)(a1 + 216) = v32 + 4 * v21;
  }
  *(void *)(a1 + 112) = 0;
  if ((int)v10 >= 1)
  {
    uint64_t v36 = 0;
    uint64_t v37 = *(void *)(a1 + 128);
    uint64_t v38 = *(void *)(a1 + 152);
    uint64_t v39 = *(void *)(a1 + 184);
    uint64_t v40 = *(void *)(a1 + 208);
    do
    {
      uint64_t v41 = 4 * v36;
      *(_DWORD *)(v37 + v41) = v36;
      *(_DWORD *)(v38 + v41) = v36;
      *(_DWORD *)(v39 + v41) = v36;
      *(_DWORD *)(v40 + v41) = v36++;
    }
    while (v36 < *(int *)(a1 + 8));
  }
  return a1;
}

void sub_23CDAD6EC(_Unwind_Exception *exception_object)
{
  int v4 = *v2;
  if (!*v2) {
    _Unwind_Resume(exception_object);
  }
  *(void *)(v1 + 24) = v4;
  operator delete(v4);
  _Unwind_Resume(exception_object);
}

void operations_research::sat::TimeTablingPerTask::RegisterWith(operations_research::sat::TimeTablingPerTask *this, operations_research::sat::GenericLiteralWatcher *a2)
{
  unsigned int v4 = operations_research::sat::GenericLiteralWatcher::Register((uint64_t)a2, (uint64_t)this);
  operations_research::sat::SchedulingConstraintHelper::WatchAllTasks(*((operations_research::sat::SchedulingConstraintHelper **)this + 9), v4, a2, 1, 1);
  uint64_t v5 = *((unsigned int *)this + 10);
  if (v5 != -1) {
    operations_research::sat::GenericLiteralWatcher::WatchLowerBound((uint64_t)a2, v5 ^ 1, v4, 0xFFFFFFFFLL);
  }
  if (*((int *)this + 2) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      operations_research::sat::GenericLiteralWatcher::WatchLowerBound((uint64_t)a2, *(unsigned int *)(*((void *)this + 2) + v6), v4, 0xFFFFFFFFLL);
      ++v7;
      v6 += 20;
    }
    while (v7 < *((int *)this + 2));
  }
  operations_research::sat::GenericLiteralWatcher::RegisterReversibleInt(a2, v4, (int *)this + 44);
  operations_research::sat::GenericLiteralWatcher::RegisterReversibleInt(a2, v4, (int *)this + 45);

  operations_research::sat::GenericLiteralWatcher::RegisterReversibleInt(a2, v4, (int *)this + 58);
}

uint64_t operations_research::sat::TimeTablingPerTask::Propagate(operations_research::sat::TimeTablingPerTask *this)
{
  while (1)
  {
    *((unsigned char *)this + 120) = 0;
    uint64_t result = operations_research::sat::TimeTablingPerTask::BuildProfile((operations_research::sat::SchedulingConstraintHelper **)this);
    if (!result) {
      return result;
    }
    uint64_t result = operations_research::sat::TimeTablingPerTask::SweepAllTasks(this, 1);
    if (!result) {
      return result;
    }
    operations_research::sat::SchedulingConstraintHelper::SetTimeDirection(*((operations_research::sat::SchedulingConstraintHelper **)this + 9), 0);
    uint64_t v3 = *((void *)this + 10);
    uint64_t v4 = *((void *)this + 11);
    if ((unint64_t)(v4 - v3) < 0x21) {
      goto LABEL_13;
    }
    unint64_t v5 = (v4 - v3) >> 4;
    if (v5 <= 3) {
      unint64_t v5 = 3;
    }
    unint64_t v6 = v5 - 2;
    if (v5 - 2 < 2)
    {
      uint64_t v7 = 1;
      unint64_t v8 = 2;
LABEL_11:
      unint64_t v12 = ~v7 + v5;
      int64_t v13 = (void *)(v3 + 16 * v7);
      int v14 = (uint64_t *)(v3 + 16 * v8);
      do
      {
        uint64_t v15 = *v14;
        v14 += 2;
        *int64_t v13 = -v15;
        v13 += 2;
        --v12;
      }
      while (v12);
      goto LABEL_13;
    }
    uint64_t v7 = v6 | 1;
    unint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFFELL) + 2;
    unint64_t v9 = (void *)(v3 + 32);
    unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      uint64_t v11 = -v9[2];
      *(v9 - 2) = -*v9;
      *unint64_t v9 = v11;
      v9 += 4;
      v10 -= 2;
    }
    while (v10);
    if (v6 != (v6 & 0xFFFFFFFFFFFFFFFELL)) {
      goto LABEL_11;
    }
LABEL_13:
    if (v3 + 16 != v4 - 16)
    {
      long long v16 = (_OWORD *)(v4 - 32);
      if ((unint64_t)v16 > v3 + 16)
      {
        unint64_t v17 = v3 + 32;
        do
        {
          long long v18 = *(_OWORD *)(v17 - 16);
          *(_OWORD *)(v17 - 16) = *v16;
          *v16-- = v18;
          BOOL v19 = v17 >= (unint64_t)v16;
          v17 += 16;
        }
        while (!v19);
      }
    }
    if ((operations_research::sat::TimeTablingPerTask::SweepAllTasks(this, 0) & 1) == 0) {
      return 0;
    }
    if (!*((unsigned char *)this + 120)) {
      return 1;
    }
  }
}

uint64_t operations_research::sat::TimeTablingPerTask::BuildProfile(operations_research::sat::SchedulingConstraintHelper **this)
{
  operations_research::sat::SchedulingConstraintHelper::SetTimeDirection(this[9], 1);
  int v2 = *((_DWORD *)this + 58);
  int v3 = *((_DWORD *)this + 2);
  uint64_t v4 = this[9];
  if (v2 < v3)
  {
    uint64_t v5 = v2;
    unint64_t v6 = this[23];
    uint64_t v7 = *((void *)v4 + 16);
    do
    {
      int v8 = *((_DWORD *)v6 + v5);
      unint64_t v9 = *(int *)(v7 + 4 * v8);
      if (v9 == -1
        || ((*(void *)(*(void *)(*(void *)v4 + 24) + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
      {
        uint64_t v10 = v8;
        if (*(void *)(*(void *)(*((void *)v4 + 1) + 40) + 12 * *(int *)(*((void *)v4 + 7) + 4 * v8)) > -*(void *)(*(void *)(*((void *)v4 + 1) + 40) + 12 * (*(_DWORD *)(*((void *)v4 + 4) + 4 * v8) ^ 1)))
        {
          uint64_t v11 = *((int *)v6 + v2);
          *((_DWORD *)v6 + v5) = v11;
          *((_DWORD *)v6 + *((int *)this + 58)) = v8;
          unint64_t v12 = this[26];
          *((_DWORD *)v12 + v10) = *((_DWORD *)this + 58);
          *((_DWORD *)v12 + v11) = v5;
          int v2 = *((_DWORD *)this + 58) + 1;
          *((_DWORD *)this + 58) = v2;
          int v3 = *((_DWORD *)this + 2);
        }
      }
      ++v5;
    }
    while (v5 < v3);
  }
  started = operations_research::sat::SchedulingConstraintHelper::TaskByDecreasingStartMax(v4);
  int v14 = operations_research::sat::SchedulingConstraintHelper::TaskByIncreasingEndMin(this[9]);
  uint64_t v15 = (void **)(this + 10);
  long long v16 = this[10];
  this[11] = v16;
  this[13] = (operations_research::sat::SchedulingConstraintHelper *)0x8000000000000002;
  unint64_t v17 = this[12];
  v83 = v14;
  v84 = started;
  if (v16 >= v17)
  {
    uint64_t v19 = v17 - v16;
    uint64_t v20 = v19 >> 3;
    if ((unint64_t)(v19 >> 3) <= 1) {
      uint64_t v20 = 1;
    }
    BOOL v21 = (unint64_t)v19 >= 0x7FFFFFFFFFFFFFF0;
    unint64_t v22 = 0xFFFFFFFFFFFFFFFLL;
    if (!v21) {
      unint64_t v22 = v20;
    }
    if (v22 >> 60) {
      goto LABEL_96;
    }
    uint64_t v23 = v22;
    BOOL v24 = operator new(16 * v22);
    *BOOL v24 = xmmword_23CE88DB0;
    long long v18 = (operations_research::sat::SchedulingConstraintHelper *)(v24 + 1);
    this[10] = (operations_research::sat::SchedulingConstraintHelper *)v24;
    this[11] = (operations_research::sat::SchedulingConstraintHelper *)(v24 + 1);
    this[12] = (operations_research::sat::SchedulingConstraintHelper *)&v24[v23];
    if (v16) {
      operator delete(v16);
    }
    int v14 = v83;
    started = v84;
  }
  else
  {
    *(_OWORD *)long long v16 = xmmword_23CE88DB0;
    long long v18 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v16 + 16);
  }
  uint64_t v85 = 0x8000000000000002;
  this[11] = v18;
  int v25 = *((_DWORD *)this + 2);
  unsigned int v26 = v25 - 1;
  if (v25 >= 1)
  {
    int v27 = 0;
    uint64_t v28 = this[14];
    unint64_t v29 = 0x8000000000000002;
    while (1)
    {
      std::vector<int>::size_type v31 = v28;
      uint64_t v32 = *(void *)v14 + 12 * v27;
      int64_t v34 = *(void *)(v32 + 4);
      unint64_t v33 = (void *)(v32 + 4);
      int64_t v30 = v34;
      if ((v26 & 0x80000000) != 0)
      {
        if (v27 >= v25) {
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v35 = v26;
        uint64_t v36 = *(void *)started + 12 * v26;
        int64_t v39 = *(void *)(v36 + 4);
        uint64_t v37 = (void *)(v36 + 4);
        int64_t v38 = v39;
        if (v39 < v30) {
          int64_t v30 = v38;
        }
        do
        {
          if (*v37 != v30)
          {
            unsigned int v26 = v35;
            if (v27 < v25) {
              goto LABEL_37;
            }
            goto LABEL_45;
          }
          uint64_t v41 = *((int *)v37 - 1);
          if (*((_DWORD *)this[26] + v41) < *((_DWORD *)this + 58))
          {
            v42 = (int *)((char *)this[2] + 20 * (int)v41);
            uint64_t v43 = *(void *)(v42 + 3);
            if (*v42 != -1) {
              v43 += *(void *)(*((void *)this[8] + 5) + 12 * *v42) * *(void *)(v42 + 1);
            }
            uint64_t v28 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v28 + v43);
          }
          uint64_t v37 = (void *)((char *)v37 - 12);
        }
        while (v35-- > 0);
        unsigned int v26 = -1;
        if (v27 >= v25) {
          goto LABEL_45;
        }
      }
LABEL_37:
      uint64_t v44 = v25 - (uint64_t)v27;
      while (*v33 == v30)
      {
        uint64_t v45 = *((int *)v33 - 1);
        if (*((_DWORD *)this[26] + v45) < *((_DWORD *)this + 58))
        {
          v46 = (int *)((char *)this[2] + 20 * (int)v45);
          uint64_t v47 = *(void *)(v46 + 3);
          if (*v46 != -1) {
            v47 += *(void *)(*((void *)this[8] + 5) + 12 * *v46) * *(void *)(v46 + 1);
          }
          uint64_t v28 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v28 - v47);
        }
        ++v27;
        unint64_t v33 = (void *)((char *)v33 + 12);
        if (!--v44)
        {
          int v27 = v25;
          break;
        }
      }
LABEL_45:
      if (v28 == v31)
      {
        int64_t v30 = v29;
      }
      else
      {
        v48 = this[12];
        if (v18 >= v48)
        {
          v49 = v15;
          v50 = (operations_research::sat::SchedulingConstraintHelper *)*v15;
          uint64_t v51 = (v18 - (operations_research::sat::SchedulingConstraintHelper *)*v15) >> 4;
          unint64_t v52 = v51 + 1;
          if ((unint64_t)(v51 + 1) >> 60) {
            std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
          }
          unsigned int v87 = v26;
          uint64_t v53 = v48 - v50;
          if (v53 >> 3 > v52) {
            unint64_t v52 = v53 >> 3;
          }
          BOOL v21 = (unint64_t)v53 >= 0x7FFFFFFFFFFFFFF0;
          unint64_t v54 = 0xFFFFFFFFFFFFFFFLL;
          if (!v21) {
            unint64_t v54 = v52;
          }
          if (v54 >> 60) {
            goto LABEL_96;
          }
          uint64_t v86 = 16 * v54;
          v55 = (char *)operator new(16 * v54);
          v56 = (unint64_t *)&v55[16 * v51];
          unint64_t *v56 = v29;
          v56[1] = (unint64_t)v31;
          if (v18 == v50)
          {
            v58 = (operations_research::sat::SchedulingConstraintHelper *)&v55[16 * v51];
            uint64_t v15 = v49;
          }
          else
          {
            v57 = &v55[16 * v51];
            uint64_t v15 = v49;
            do
            {
              v58 = (operations_research::sat::SchedulingConstraintHelper *)(v57 - 16);
              *((_OWORD *)v57 - 1) = *((_OWORD *)v18 - 1);
              long long v18 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v18 - 16);
              v57 -= 16;
            }
            while (v18 != v50);
          }
          long long v18 = (operations_research::sat::SchedulingConstraintHelper *)(v56 + 2);
          this[10] = v58;
          this[11] = (operations_research::sat::SchedulingConstraintHelper *)(v56 + 2);
          this[12] = (operations_research::sat::SchedulingConstraintHelper *)&v55[v86];
          started = v84;
          if (v50) {
            operator delete(v50);
          }
          int v14 = v83;
          unsigned int v26 = v87;
          this[11] = v18;
          if ((uint64_t)v28 > (uint64_t)this[13])
          {
LABEL_63:
            this[13] = v28;
            uint64_t v85 = v30;
          }
        }
        else
        {
          *(void *)long long v18 = v29;
          *((void *)v18 + 1) = v31;
          long long v18 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v18 + 16);
          this[11] = v18;
          if ((uint64_t)v28 > (uint64_t)this[13]) {
            goto LABEL_63;
          }
        }
      }
      int v25 = *((_DWORD *)this + 2);
      unint64_t v29 = v30;
      if (v27 >= v25) {
        goto LABEL_65;
      }
    }
  }
  int64_t v30 = 0x8000000000000002;
LABEL_65:
  v59 = this[12];
  if (v18 < v59)
  {
    *(void *)long long v18 = v30;
    *((void *)v18 + 1) = 0;
    v60 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v18 + 16);
    goto LABEL_77;
  }
  v61 = (operations_research::sat::SchedulingConstraintHelper *)*v15;
  uint64_t v62 = (v18 - (operations_research::sat::SchedulingConstraintHelper *)*v15) >> 4;
  unint64_t v63 = v62 + 1;
  if ((unint64_t)(v62 + 1) >> 60) {
    goto LABEL_98;
  }
  uint64_t v64 = v59 - v61;
  if (v64 >> 3 > v63) {
    unint64_t v63 = v64 >> 3;
  }
  BOOL v21 = (unint64_t)v64 >= 0x7FFFFFFFFFFFFFF0;
  unint64_t v65 = 0xFFFFFFFFFFFFFFFLL;
  if (!v21) {
    unint64_t v65 = v63;
  }
  if (v65 >> 60) {
LABEL_96:
  }
    std::__throw_bad_array_new_length[abi:ne180100]();
  uint64_t v66 = 16 * v65;
  v67 = (char *)operator new(16 * v65);
  v68 = (int64_t *)&v67[16 * v62];
  v59 = (operations_research::sat::SchedulingConstraintHelper *)&v67[v66];
  int64_t *v68 = v30;
  v68[1] = 0;
  v60 = (operations_research::sat::SchedulingConstraintHelper *)(v68 + 2);
  if (v18 == v61)
  {
    this[10] = (operations_research::sat::SchedulingConstraintHelper *)v68;
    this[11] = v60;
    this[12] = v59;
    if (v61)
    {
LABEL_76:
      operator delete(v61);
      v59 = this[12];
    }
  }
  else
  {
    do
    {
      v69 = (operations_research::sat::SchedulingConstraintHelper *)(v68 - 2);
      *((_OWORD *)v68 - 1) = *((_OWORD *)v18 - 1);
      long long v18 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v18 - 16);
      v68 -= 2;
    }
    while (v18 != v61);
    this[10] = v69;
    this[11] = v60;
    this[12] = v59;
    if (v61) {
      goto LABEL_76;
    }
  }
LABEL_77:
  this[11] = v60;
  if (v60 < v59)
  {
    *(_OWORD *)v60 = xmmword_23CE90D40;
    v70 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v60 + 16);
    goto LABEL_89;
  }
  uint64_t v71 = (operations_research::sat::SchedulingConstraintHelper *)*v15;
  uint64_t v72 = (v60 - (operations_research::sat::SchedulingConstraintHelper *)*v15) >> 4;
  unint64_t v73 = v72 + 1;
  if ((unint64_t)(v72 + 1) >> 60) {
LABEL_98:
  }
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  uint64_t v74 = v59 - v71;
  if (v74 >> 3 > v73) {
    unint64_t v73 = v74 >> 3;
  }
  BOOL v21 = (unint64_t)v74 >= 0x7FFFFFFFFFFFFFF0;
  unint64_t v75 = 0xFFFFFFFFFFFFFFFLL;
  if (!v21) {
    unint64_t v75 = v73;
  }
  if (v75 >> 60) {
    goto LABEL_96;
  }
  uint64_t v76 = 16 * v75;
  v77 = (char *)operator new(16 * v75);
  v78 = (operations_research::sat::SchedulingConstraintHelper *)&v77[16 * v72];
  v79 = (operations_research::sat::SchedulingConstraintHelper *)&v77[v76];
  *(_OWORD *)v78 = xmmword_23CE90D40;
  v70 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v78 + 16);
  if (v60 != v71)
  {
    do
    {
      v80 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v78 - 16);
      *((_OWORD *)v78 - 1) = *((_OWORD *)v60 - 1);
      v60 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v60 - 16);
      v78 = (operations_research::sat::SchedulingConstraintHelper *)((char *)v78 - 16);
    }
    while (v60 != v71);
    this[10] = v80;
    this[11] = v70;
    this[12] = v79;
    if (!v71) {
      goto LABEL_89;
    }
    goto LABEL_88;
  }
  this[10] = v78;
  this[11] = v70;
  this[12] = v79;
  if (v71) {
LABEL_88:
  }
    operator delete(v71);
LABEL_89:
  this[11] = v70;
  uint64_t v81 = (uint64_t)this[13];

  return operations_research::sat::TimeTablingPerTask::IncreaseCapacity((uint64_t)this, v85, v81);
}

uint64_t operations_research::sat::TimeTablingPerTask::SweepAllTasks(operations_research::sat::TimeTablingPerTask *this, int a2)
{
  int v3 = *((_DWORD *)this + 10);
  unint64_t v4 = *(void *)((char *)this + 52);
  BOOL v5 = __OFADD__(v3, 1);
  if (v3 != -1) {
    v4 -= *(void *)(*(void *)(*((void *)this + 8) + 40) + 12 * (v3 ^ 1)) * *(void *)((char *)this + 44);
  }
  uint64_t v6 = *((void *)this + 13);
  uint64_t v7 = v4 - v6;
  uint64_t v8 = (v4 - v6) ^ v4;
  uint64_t v9 = v6 ^ v4;
  uint64_t v10 = (v4 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
  if ((v8 & v9) < 0 != v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = v7;
  }
  if (a2) {
    uint64_t v12 = 176;
  }
  else {
    uint64_t v12 = 180;
  }
  if (a2) {
    uint64_t v13 = 128;
  }
  else {
    uint64_t v13 = 152;
  }
  uint64_t v14 = *(unsigned int *)((char *)this + v12);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = v14 + 1;
    unsigned int v16 = v14 - 1;
    do
    {
      uint64_t v19 = *(void *)((char *)this + v13);
      uint64_t v20 = *(int *)(v19 + 4 * v16);
      uint64_t v21 = v16;
      unint64_t v22 = (void *)*((void *)this + 9);
      unint64_t v23 = *(int *)(v22[16] + 4 * v20);
      if (v23 == -1) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(*(void *)(*v22 + 24) + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8));
      char v25 = v23 & 0x3F;
      if ((v24 >> (v25 ^ 1u))) {
        goto LABEL_14;
      }
      if ((v24 >> v25))
      {
LABEL_36:
        int v26 = *(_DWORD *)(v22[4] + 4 * v20);
        if (!(*(void *)(*(void *)(v22[1] + 40) + 12 * v26)
             + *(void *)(*(void *)(v22[1] + 40) + 12 * (v26 ^ 1))))
          goto LABEL_14;
      }
      uint64_t v27 = *((void *)this + 2) + 20 * (int)v20;
      int v28 = *(_DWORD *)v27;
      uint64_t v29 = *(void *)(v27 + 12);
      if (*(_DWORD *)v27 == -1)
      {
        if (v29 <= v11) {
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(v27 + 4);
        uint64_t v31 = *(void *)(*((void *)this + 8) + 40);
        if (v29 + *(void *)(v31 + 12 * v28) * v30 <= v11)
        {
          v29 -= *(void *)(v31 + 12 * (v28 ^ 1)) * v30;
LABEL_28:
          if (v29) {
            goto LABEL_15;
          }
LABEL_14:
          uint64_t v17 = *(int *)((char *)this + v12) - 1;
          *(_DWORD *)((char *)this + v12) = v17;
          v17 *= 4;
          int v18 = *(_DWORD *)(v19 + 4 * v21);
          *(_DWORD *)(v19 + 4 * v21) = *(_DWORD *)(v19 + v17);
          *(_DWORD *)(v19 + v17) = v18;
          goto LABEL_15;
        }
      }
      int v32 = *(_DWORD *)(v22[10] + 4 * v20);
      if (v32 == -1)
      {
        if (!*(void *)(v22[13] + 8 * v20)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v33 = *(void *)(v22[1] + 40);
        if (!*(void *)(v33 + 12 * v32))
        {
          if (*(void *)(v33 + 12 * (v32 ^ 1))) {
            goto LABEL_15;
          }
          goto LABEL_14;
        }
      }
      if ((operations_research::sat::TimeTablingPerTask::SweepTask(this, v20) & 1) == 0) {
        return 0;
      }
LABEL_15:
      --v15;
      unsigned int v16 = v21 - 1;
    }
    while (v15 > 1);
  }
  return 1;
}

uint64_t operations_research::sat::TimeTablingPerTask::IncreaseCapacity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a1 + 40;
  int v6 = *(_DWORD *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 52);
  if (v6 != -1) {
    v8 += *(void *)(*(void *)(*(void *)(a1 + 64) + 40) + 12 * v6) * *(void *)(a1 + 44);
  }
  if (v8 >= a3) {
    return 1;
  }
  operations_research::sat::SchedulingConstraintHelper::ClearReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 72));
  operations_research::sat::TimeTablingPerTask::AddProfileReason(a1, a2, a2 + 1);
  int v9 = *(_DWORD *)(a1 + 40);
  uint64_t v10 = *(void **)(a1 + 72);
  if (v9 == -1)
  {
    uint64_t v15 = *(operations_research::sat::SchedulingConstraintHelper **)(a1 + 72);
    return operations_research::sat::SchedulingConstraintHelper::ReportConflict(v15);
  }
  else
  {
    *(_DWORD *)int v28 = v9 ^ 1;
    *(void *)&v28[4] = *(void *)(*(void *)(*(void *)(a1 + 64) + 40) + 12 * (v9 ^ 1));
    uint64_t v12 = (_DWORD *)v10[49];
    unint64_t v11 = v10[50];
    if ((unint64_t)v12 >= v11)
    {
      unsigned int v16 = (_DWORD **)(v10 + 48);
      uint64_t v17 = (_DWORD *)v10[48];
      unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * (v12 - v17) + 1;
      if (v18 > 0x1555555555555555) {
        std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - (void)v17) >> 2);
      if (2 * v19 > v18) {
        unint64_t v18 = 2 * v19;
      }
      if (v19 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v20 = 0x1555555555555555;
      }
      else {
        unint64_t v20 = v18;
      }
      if (v20)
      {
        if (v20 > 0x1555555555555555) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        uint64_t v21 = (char *)operator new(12 * v20);
        unsigned int v16 = (_DWORD **)(v10 + 48);
      }
      else
      {
        uint64_t v21 = 0;
      }
      unint64_t v22 = &v21[4 * (v12 - v17)];
      *(void *)unint64_t v22 = *(void *)v28;
      *((_DWORD *)v22 + 2) = *(_DWORD *)&v28[8];
      uint64_t v13 = v22 + 12;
      if (v12 != v17)
      {
        do
        {
          uint64_t v23 = *(void *)(v12 - 3);
          v12 -= 3;
          int v24 = v12[2];
          *(void *)(v22 - 12) = v23;
          v22 -= 12;
          *((_DWORD *)v22 + 2) = v24;
        }
        while (v12 != v17);
        uint64_t v12 = *v16;
      }
      v10[48] = v22;
      v10[49] = v13;
      v10[50] = &v21[12 * v20];
      if (v12) {
        operator delete(v12);
      }
    }
    else
    {
      *(void *)uint64_t v12 = *(void *)v28;
      v12[2] = *(_DWORD *)&v28[8];
      uint64_t v13 = v12 + 3;
    }
    v10[49] = v13;
    char v25 = *(void **)(a1 + 72);
    uint64_t v27 = operations_research::sat::AffineExpression::GreaterOrEqual(v7, a3);
    return operations_research::sat::SchedulingConstraintHelper::PushIntegerLiteral(v25, v27, v26);
  }
}

uint64_t operations_research::sat::TimeTablingPerTask::SweepTask(operations_research::sat::TimeTablingPerTask *this, int a2)
{
  int v3 = (void *)*((void *)this + 9);
  uint64_t v4 = a2;
  uint64_t v5 = 4 * a2;
  int v6 = *(_DWORD *)(v3[4] + v5);
  uint64_t v7 = *(void *)(v3[1] + 40);
  int v8 = *(_DWORD *)(v3[10] + v5);
  if (v8 == -1) {
    int v9 = (uint64_t *)(v3[13] + 8 * a2);
  }
  else {
    int v9 = (uint64_t *)(v7 + 12 * v8);
  }
  uint64_t v10 = 12 * (v6 ^ 1);
  uint64_t v11 = *(void *)(v7 + 12 * v6);
  int v12 = *(_DWORD *)(v3[7] + 4 * a2);
  uint64_t v13 = (char *)*((void *)this + 10);
  uint64_t v14 = (char *)*((void *)this + 11);
  if (v14 != v13)
  {
    unint64_t v15 = (v14 - v13) >> 4;
    uint64_t v14 = (char *)*((void *)this + 10);
    do
    {
      unint64_t v16 = v15 >> 1;
      uint64_t v17 = (uint64_t *)&v14[16 * (v15 >> 1)];
      uint64_t v19 = *v17;
      unint64_t v18 = (char *)(v17 + 2);
      v15 += ~(v15 >> 1);
      if (v19 > v11) {
        unint64_t v15 = v16;
      }
      else {
        uint64_t v14 = v18;
      }
    }
    while (v15);
  }
  uint64_t v20 = 12 * v12;
  uint64_t v21 = *(void *)(v7 + v10);
  int v22 = *((_DWORD *)this + 10);
  uint64_t v23 = *(void *)((char *)this + 52);
  if (v22 != -1) {
    v23 -= *(void *)(*(void *)(*((void *)this + 8) + 40) + 12 * (v22 ^ 1)) * *(void *)((char *)this + 44);
  }
  uint64_t v24 = *(void *)(v7 + v20);
  uint64_t v25 = -v21;
  uint64_t v26 = v14 - v13;
  uint64_t v27 = (int *)(*((void *)this + 2) + 20 * a2);
  uint64_t v28 = *(void *)(v27 + 3);
  if (*v27 != -1) {
    v28 += *(void *)(*(void *)(*((void *)this + 8) + 40) + 12 * *v27) * *(void *)(v27 + 1);
  }
  if (v24 >= v25) {
    uint64_t v29 = -v21;
  }
  else {
    uint64_t v29 = v24;
  }
  uint64_t v30 = ((v26 << 28) - 0x100000000) >> 32;
  uint64_t v31 = *(void *)&v13[16 * v30];
  if (v31 >= v29) {
    return 1;
  }
  char v32 = 0;
  uint64_t v33 = *v9;
  uint64_t v34 = v23 - v28;
  uint64_t v35 = 1 - v21;
  uint64_t v36 = (uint64_t *)&v13[16 * v30 + 16];
  uint64_t v37 = 0x8000000000000002;
  uint64_t v38 = v11;
  uint64_t v39 = v24;
  do
  {
    uint64_t v42 = *v36;
    if (*(v36 - 1) > v34)
    {
      uint64_t v38 = *v36;
      if (v42 > v25)
      {
        if (*(_DWORD *)(*((void *)this + 26) + 4 * a2) >= *((_DWORD *)this + 58)) {
          uint64_t v38 = v35;
        }
        else {
          uint64_t v38 = v25;
        }
      }
      if (v39 <= v38 + v33) {
        uint64_t v39 = v38 + v33;
      }
      if (v39 >= v25) {
        uint64_t v29 = v25;
      }
      else {
        uint64_t v29 = v39;
      }
      if (v24 >= v38) {
        uint64_t v40 = v38;
      }
      else {
        uint64_t v40 = v24;
      }
      uint64_t v41 = v40 - 1;
      if (v31 < v24) {
        uint64_t v37 = v41;
      }
      char v32 = 1;
    }
    v36 += 2;
    uint64_t v31 = v42;
  }
  while (v42 < v29);
  if ((v32 & (v11 != v38)) != 1) {
    return 1;
  }
  uint64_t result = operations_research::sat::TimeTablingPerTask::UpdateStartingTime((uint64_t)this, a2, v37, v38);
  if (result)
  {
    uint64_t result = 1;
    if (*(void *)(*(void *)(*(void *)(*((void *)this + 9) + 8) + 40)
                   + 12 * *(int *)(*(void *)(*((void *)this + 9) + 32) + 4 * v4)) != v11)
      *((unsigned char *)this + 120) = 1;
  }
  return result;
}

uint64_t operations_research::sat::TimeTablingPerTask::UpdateStartingTime(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  operations_research::sat::SchedulingConstraintHelper::ClearReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 72));
  operations_research::sat::TimeTablingPerTask::AddProfileReason(a1, a3, a4);
  int v8 = *(_DWORD *)(a1 + 40);
  if (v8 != -1)
  {
    int v9 = *(void **)(a1 + 72);
    *(_DWORD *)uint64_t v41 = v8 ^ 1;
    *(void *)&v41[4] = *(void *)(*(void *)(*(void *)(a1 + 64) + 40) + 12 * (v8 ^ 1));
    uint64_t v11 = (_DWORD *)v9[49];
    unint64_t v10 = v9[50];
    if ((unint64_t)v11 >= v10)
    {
      uint64_t v39 = a4;
      uint64_t v13 = (_DWORD **)(v9 + 48);
      uint64_t v14 = (_DWORD *)v9[48];
      unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * (v11 - v14) + 1;
      if (v15 > 0x1555555555555555) {
        std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - (void)v14) >> 2);
      if (2 * v16 > v15) {
        unint64_t v15 = 2 * v16;
      }
      if (v16 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v17 = 0x1555555555555555;
      }
      else {
        unint64_t v17 = v15;
      }
      if (v17)
      {
        if (v17 > 0x1555555555555555) {
          goto LABEL_46;
        }
        unint64_t v18 = (char *)operator new(12 * v17);
        uint64_t v13 = (_DWORD **)(v9 + 48);
      }
      else
      {
        unint64_t v18 = 0;
      }
      uint64_t v19 = &v18[4 * (v11 - v14)];
      uint64_t v20 = &v18[12 * v17];
      *(void *)uint64_t v19 = *(void *)v41;
      *((_DWORD *)v19 + 2) = *(_DWORD *)&v41[8];
      int v12 = v19 + 12;
      if (v11 == v14)
      {
        a4 = v39;
        v9[48] = v19;
        v9[49] = v12;
        v9[50] = v20;
        if (!v11) {
          goto LABEL_19;
        }
      }
      else
      {
        a4 = v39;
        do
        {
          uint64_t v21 = *(void *)(v11 - 3);
          v11 -= 3;
          int v22 = v11[2];
          *(void *)(v19 - 12) = v21;
          v19 -= 12;
          *((_DWORD *)v19 + 2) = v22;
        }
        while (v11 != v14);
        uint64_t v11 = *v13;
        v9[48] = v19;
        v9[49] = v12;
        v9[50] = v20;
        if (!v11) {
          goto LABEL_19;
        }
      }
      operator delete(v11);
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v41;
      v11[2] = *(_DWORD *)&v41[8];
      int v12 = v11 + 3;
    }
LABEL_19:
    v9[49] = v12;
  }
  operations_research::sat::SchedulingConstraintHelper::AddEndMinReason(*(void **)(a1 + 72), a2, a3 + 1);
  operations_research::sat::SchedulingConstraintHelper::AddDurationMinReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 72), a2, 1uLL);
  int v23 = *(_DWORD *)(*(void *)(a1 + 16) + 20 * a2);
  if (v23 == -1) {
    goto LABEL_41;
  }
  uint64_t v24 = *(void **)(a1 + 72);
  *(_DWORD *)uint64_t v42 = *(_DWORD *)(*(void *)(a1 + 16) + 20 * a2);
  *(void *)&v42[4] = *(void *)(*(void *)(*(void *)(a1 + 64) + 40) + 12 * v23);
  uint64_t v26 = (char *)v24[49];
  unint64_t v25 = v24[50];
  if ((unint64_t)v26 < v25)
  {
    *(void *)uint64_t v26 = *(void *)v42;
    *((_DWORD *)v26 + 2) = *(_DWORD *)&v42[8];
    uint64_t v27 = v26 + 12;
    goto LABEL_40;
  }
  uint64_t v40 = a4;
  uint64_t v28 = (unsigned char *)v24[48];
  unint64_t v29 = 0xAAAAAAAAAAAAAAABLL * ((v26 - v28) >> 2) + 1;
  if (v29 > 0x1555555555555555) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  unint64_t v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v25 - (void)v28) >> 2);
  if (2 * v30 > v29) {
    unint64_t v29 = 2 * v30;
  }
  if (v30 >= 0xAAAAAAAAAAAAAAALL) {
    unint64_t v31 = 0x1555555555555555;
  }
  else {
    unint64_t v31 = v29;
  }
  if (!v31)
  {
    char v32 = 0;
    goto LABEL_35;
  }
  if (v31 > 0x1555555555555555) {
LABEL_46:
  }
    std::__throw_bad_array_new_length[abi:ne180100]();
  char v32 = (char *)operator new(12 * v31);
LABEL_35:
  uint64_t v33 = &v32[4 * ((v26 - v28) >> 2)];
  uint64_t v34 = &v32[12 * v31];
  *(void *)uint64_t v33 = *(void *)v42;
  *((_DWORD *)v33 + 2) = *(_DWORD *)&v42[8];
  uint64_t v27 = v33 + 12;
  if (v26 == v28)
  {
    a4 = v40;
    v24[48] = v33;
    v24[49] = v27;
    v24[50] = v34;
    if (!v26) {
      goto LABEL_40;
    }
  }
  else
  {
    a4 = v40;
    do
    {
      uint64_t v35 = *(void *)(v26 - 12);
      v26 -= 12;
      int v36 = *((_DWORD *)v26 + 2);
      *(void *)(v33 - 12) = v35;
      v33 -= 12;
      *((_DWORD *)v33 + 2) = v36;
    }
    while (v26 != v28);
    uint64_t v26 = (char *)v24[48];
    v24[48] = v33;
    v24[49] = v27;
    v24[50] = v34;
    if (!v26) {
      goto LABEL_40;
    }
  }
  operator delete(v26);
LABEL_40:
  v24[49] = v27;
LABEL_41:
  uint64_t v37 = *(unint64_t **)(a1 + 72);

  return operations_research::sat::SchedulingConstraintHelper::IncreaseStartMin(v37, a2, a4);
}

void operations_research::sat::TimeTablingPerTask::AddProfileReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(int *)(a1 + 232) >= 1)
  {
    uint64_t v4 = a2;
    uint64_t v6 = 0;
    do
    {
      uint64_t v8 = *(int *)(*(void *)(a1 + 184) + 4 * v6);
      int v9 = *(operations_research::sat::SchedulingConstraintHelper **)(a1 + 72);
      uint64_t v10 = *(void *)(*((void *)v9 + 1) + 40);
      uint64_t v11 = -*(void *)(v10 + 12 * (*(_DWORD *)(*((void *)v9 + 4) + 4 * v8) ^ 1));
      if (v11 < a3)
      {
        uint64_t v12 = *(void *)(v10 + 12 * *(int *)(*((void *)v9 + 7) + 4 * v8));
        if (v12 > v4)
        {
          operations_research::sat::SchedulingConstraintHelper::AddPresenceReason(v9, *(_DWORD *)(*(void *)(a1 + 184) + 4 * v6));
          int64_t v13 = v11 <= v4 ? v4 : v11;
          operations_research::sat::SchedulingConstraintHelper::AddStartMaxReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 72), v8, v13);
          unint64_t v14 = v12 >= a3 ? a3 : v12;
          operations_research::sat::SchedulingConstraintHelper::AddEndMinReason(*(void **)(a1 + 72), v8, v14);
          int v15 = *(_DWORD *)(*(void *)(a1 + 16) + 20 * (int)v8);
          if (v15 != -1)
          {
            unint64_t v16 = *(void **)(a1 + 72);
            *(_DWORD *)char v32 = *(_DWORD *)(*(void *)(a1 + 16) + 20 * (int)v8);
            *(void *)&v32[4] = *(void *)(*(void *)(*(void *)(a1 + 64) + 40) + 12 * v15);
            uint64_t v17 = *(void *)v32;
            uint64_t v19 = (char *)v16[49];
            unint64_t v18 = v16[50];
            if ((unint64_t)v19 < v18)
            {
              *(void *)uint64_t v19 = *(void *)v32;
              *((_DWORD *)v19 + 2) = *(_DWORD *)&v32[8];
              uint64_t v7 = v19 + 12;
            }
            else
            {
              uint64_t v20 = (void **)(v16 + 48);
              uint64_t v21 = (unsigned char *)v16[48];
              unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((v19 - v21) >> 2) + 1;
              if (v22 > 0x1555555555555555) {
                std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
              }
              unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v18 - (void)v21) >> 2);
              if (2 * v23 > v22) {
                unint64_t v22 = 2 * v23;
              }
              if (v23 >= 0xAAAAAAAAAAAAAAALL) {
                unint64_t v24 = 0x1555555555555555;
              }
              else {
                unint64_t v24 = v22;
              }
              unint64_t v31 = v24;
              if (v24)
              {
                if (v24 > 0x1555555555555555) {
                  std::__throw_bad_array_new_length[abi:ne180100]();
                }
                unint64_t v25 = (char *)operator new(12 * v24);
                uint64_t v20 = (void **)(v16 + 48);
                uint64_t v17 = *(void *)v32;
                uint64_t v4 = a2;
              }
              else
              {
                unint64_t v25 = 0;
              }
              uint64_t v26 = &v25[4 * ((v19 - v21) >> 2)];
              *(void *)uint64_t v26 = v17;
              *((_DWORD *)v26 + 2) = *(_DWORD *)&v32[8];
              uint64_t v27 = v26;
              if (v19 != v21)
              {
                do
                {
                  uint64_t v28 = *(void *)(v19 - 12);
                  v19 -= 12;
                  int v29 = *((_DWORD *)v19 + 2);
                  *(void *)(v27 - 12) = v28;
                  v27 -= 12;
                  *((_DWORD *)v27 + 2) = v29;
                }
                while (v19 != v21);
                uint64_t v19 = (char *)*v20;
              }
              uint64_t v7 = v26 + 12;
              v16[48] = v27;
              v16[49] = v26 + 12;
              v16[50] = &v25[12 * v31];
              if (v19) {
                operator delete(v19);
              }
            }
            v16[49] = v7;
          }
        }
      }
      ++v6;
    }
    while (v6 < *(int *)(a1 + 232));
  }
}

void operations_research::sat::SchedulingConstraintHelper::AddDurationMinReason(operations_research::sat::SchedulingConstraintHelper *a1, int a2, unint64_t a3)
{
  operations_research::sat::SchedulingConstraintHelper::AddOtherReason(a1, a2);
  if (*(_DWORD *)(*((void *)a1 + 10) + 4 * a2) != -1)
  {
    LODWORD(v18) = *(_DWORD *)(*((void *)a1 + 10) + 4 * a2);
    HIDWORD(v18) = a3;
    unint64_t v6 = HIDWORD(a3);
    uint64_t v8 = (_DWORD *)*((void *)a1 + 49);
    unint64_t v7 = *((void *)a1 + 50);
    if ((unint64_t)v8 >= v7)
    {
      uint64_t v10 = (_DWORD *)*((void *)a1 + 48);
      unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * (v8 - v10) + 1;
      if (v11 > 0x1555555555555555) {
        std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (void)v10) >> 2);
      if (2 * v12 > v11) {
        unint64_t v11 = 2 * v12;
      }
      if (v12 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v13 = 0x1555555555555555;
      }
      else {
        unint64_t v13 = v11;
      }
      if (v13)
      {
        if (v13 > 0x1555555555555555) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        unint64_t v14 = (char *)operator new(12 * v13);
      }
      else
      {
        unint64_t v14 = 0;
      }
      int v15 = &v14[4 * (v8 - v10)];
      *(void *)int v15 = v18;
      *((_DWORD *)v15 + 2) = v6;
      int v9 = v15 + 12;
      if (v8 != v10)
      {
        do
        {
          uint64_t v16 = *(void *)(v8 - 3);
          v8 -= 3;
          int v17 = v8[2];
          *(void *)(v15 - 12) = v16;
          v15 -= 12;
          *((_DWORD *)v15 + 2) = v17;
        }
        while (v8 != v10);
        uint64_t v8 = (_DWORD *)*((void *)a1 + 48);
      }
      *((void *)a1 + 48) = v15;
      *((void *)a1 + 49) = v9;
      *((void *)a1 + 50) = &v14[12 * v13];
      if (v8) {
        operator delete(v8);
      }
    }
    else
    {
      *(void *)uint64_t v8 = v18;
      v8[2] = v6;
      int v9 = v8 + 3;
    }
    *((void *)a1 + 49) = v9;
  }
}

void operations_research::sat::TimeTablingPerTask::~TimeTablingPerTask(operations_research::sat::TimeTablingPerTask *this)
{
  *(void *)this = &unk_26F0C4848;
  int v2 = (void *)*((void *)this + 26);
  if (v2)
  {
    *((void *)this + 27) = v2;
    operator delete(v2);
  }
  int v3 = (void *)*((void *)this + 23);
  if (v3)
  {
    *((void *)this + 24) = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)*((void *)this + 19);
  if (v4)
  {
    *((void *)this + 20) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 16);
  if (v5)
  {
    *((void *)this + 17) = v5;
    operator delete(v5);
  }
  unint64_t v6 = (void *)*((void *)this + 10);
  if (v6)
  {
    *((void *)this + 11) = v6;
    operator delete(v6);
  }
  unint64_t v7 = (void *)*((void *)this + 2);
  if (v7)
  {
    *((void *)this + 3) = v7;
    operator delete(v7);
  }
}

{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t vars8;

  *(void *)this = &unk_26F0C4848;
  int v2 = (void *)*((void *)this + 26);
  if (v2)
  {
    *((void *)this + 27) = v2;
    operator delete(v2);
  }
  int v3 = (void *)*((void *)this + 23);
  if (v3)
  {
    *((void *)this + 24) = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)*((void *)this + 19);
  if (v4)
  {
    *((void *)this + 20) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 16);
  if (v5)
  {
    *((void *)this + 17) = v5;
    operator delete(v5);
  }
  unint64_t v6 = (void *)*((void *)this + 10);
  if (v6)
  {
    *((void *)this + 11) = v6;
    operator delete(v6);
  }
  unint64_t v7 = (void *)*((void *)this + 2);
  if (v7)
  {
    *((void *)this + 3) = v7;
    operator delete(v7);
  }

  JUMPOUT(0x23ECF2BC0);
}

uint64_t operations_research::sat::TimeTableEdgeFinding::TimeTableEdgeFinding(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = &unk_26F0C4890;
  unint64_t v9 = *(void *)(a4 + 40) - *(void *)(a4 + 32);
  unint64_t v10 = v9 >> 2;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 8) = v9 >> 2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  unint64_t v12 = *(const void **)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  int64_t v13 = v11 - *(void *)a2;
  if (v11 != *(void *)a2)
  {
    if (0xCCCCCCCCCCCCCCCDLL * (v13 >> 2) >= 0xCCCCCCCCCCCCCCDLL) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v14 = (char *)operator new(v13);
    *(void *)(a1 + 16) = v14;
    *(void *)(a1 + 24) = v14;
    int v15 = &v14[4 * (v13 >> 2)];
    *(void *)(a1 + 32) = v15;
    memcpy(v14, v12, v13);
    *(void *)(a1 + 24) = v15;
  }
  long long v16 = *a3;
  int v17 = *((_DWORD *)a3 + 4);
  *(_OWORD *)(a1 + 176) = 0u;
  *(_DWORD *)(a1 + 56) = v17;
  *(_OWORD *)(a1 + 40) = v16;
  *(void *)(a1 + 64) = a4;
  *(void *)(a1 + 72) = a5;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  if ((v9 >> 2))
  {
    std::vector<gtl::IntType<operations_research::glop::EntryIndex_tag_,long long>>::__append(a1 + 200, (int)((uint64_t)v9 >> 2));
    uint64_t v18 = *(void *)(a1 + 176);
    unint64_t v19 = *(int *)(a1 + 8);
    unint64_t v22 = (*(void *)(a1 + 184) - v18) >> 3;
    BOOL v20 = v19 >= v22;
    unint64_t v21 = v19 - v22;
    if (v19 > v22) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v19 = (int)v10;
    BOOL v20 = 1;
    unint64_t v21 = (int)v10;
    if (v10)
    {
LABEL_6:
      std::vector<gtl::IntType<operations_research::glop::EntryIndex_tag_,long long>>::__append(a1 + 176, v21);
      unint64_t v19 = *(int *)(a1 + 8);
      goto LABEL_10;
    }
  }
  if (!v20) {
    *(void *)(a1 + 184) = v18 + 8 * v19;
  }
LABEL_10:
  uint64_t v23 = *(void *)(a1 + 128);
  unint64_t v24 = (*(void *)(a1 + 136) - v23) >> 3;
  if (v19 <= v24)
  {
    if (v19 < v24) {
      *(void *)(a1 + 136) = v23 + 8 * v19;
    }
  }
  else
  {
    std::vector<gtl::IntType<operations_research::glop::EntryIndex_tag_,long long>>::__append(a1 + 128, v19 - v24);
    unint64_t v19 = *(int *)(a1 + 8);
  }
  uint64_t v25 = *(void *)(a1 + 152);
  unint64_t v26 = (*(void *)(a1 + 160) - v25) >> 3;
  if (v19 <= v26)
  {
    if (v19 < v26) {
      *(void *)(a1 + 160) = v25 + 8 * v19;
    }
  }
  else
  {
    std::vector<gtl::IntType<operations_research::glop::EntryIndex_tag_,long long>>::__append(a1 + 152, v19 - v26);
  }
  return a1;
}

void sub_23CDAF1A0(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (!*v2) {
    _Unwind_Resume(exception_object);
  }
  *(void *)(v1 + 24) = v4;
  operator delete(v4);
  _Unwind_Resume(exception_object);
}

void operations_research::sat::TimeTableEdgeFinding::RegisterWith(operations_research::sat::SchedulingConstraintHelper **this, operations_research::sat::GenericLiteralWatcher *a2)
{
  unsigned int v4 = operations_research::sat::GenericLiteralWatcher::Register((uint64_t)a2, (uint64_t)this);
  uint64_t v5 = *((unsigned int *)this + 10);
  if (v5 != -1) {
    operations_research::sat::GenericLiteralWatcher::WatchLowerBound((uint64_t)a2, v5 ^ 1, v4, 0xFFFFFFFFLL);
  }
  operations_research::sat::SchedulingConstraintHelper::WatchAllTasks(this[8], v4, a2, 1, 1);
  if (*((int *)this + 2) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      operations_research::sat::GenericLiteralWatcher::WatchLowerBound((uint64_t)a2, *(unsigned int *)((char *)this[2] + v6), v4, 0xFFFFFFFFLL);
      ++v7;
      v6 += 20;
    }
    while (v7 < *((int *)this + 2));
  }
}

uint64_t operations_research::sat::TimeTableEdgeFinding::Propagate(operations_research::sat::TimeTableEdgeFinding *this)
{
  uint64_t v2 = *(void *)(*((void *)this + 9) + 848);
  while (1)
  {
    operations_research::sat::SchedulingConstraintHelper::SetTimeDirection(*((operations_research::sat::SchedulingConstraintHelper **)this + 8), 1);
    uint64_t result = operations_research::sat::TimeTableEdgeFinding::TimeTableEdgeFindingPass(this);
    if (!result) {
      break;
    }
    operations_research::sat::SchedulingConstraintHelper::SetTimeDirection(*((operations_research::sat::SchedulingConstraintHelper **)this + 8), 0);
    uint64_t result = operations_research::sat::TimeTableEdgeFinding::TimeTableEdgeFindingPass(this);
    if (!result) {
      break;
    }
    BOOL v4 = v2 == *(void *)(*((void *)this + 9) + 848);
    uint64_t v2 = *(void *)(*((void *)this + 9) + 848);
    if (v4) {
      return 1;
    }
  }
  return result;
}

uint64_t operations_research::sat::TimeTableEdgeFinding::TimeTableEdgeFindingPass(operations_research::sat::TimeTableEdgeFinding *this)
{
  uint64_t v2 = *((unsigned int *)this + 2);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = 0;
    BOOL v4 = (void *)*((void *)this + 8);
    uint64_t v5 = (int *)v4[4];
    uint64_t v6 = *(void *)(v4[1] + 40);
    uint64_t v7 = (int *)v4[7];
    uint64_t v8 = *((void *)this + 16);
    unint64_t v9 = (int *)*((void *)this + 2);
    uint64_t v10 = *((void *)this + 19);
    uint64_t v11 = (int *)v4[10];
    uint64_t v12 = 8 * v2;
    while (1)
    {
      int v13 = *v5++;
      uint64_t v14 = *(void *)(v6 + 12 * (v13 ^ 1));
      int v15 = *v7++;
      uint64_t v16 = *(void *)(v6 + 12 * v15);
      int v18 = *v11++;
      int v17 = v18;
      if (v16 > -v14) {
        break;
      }
      if (v17 != -1)
      {
        uint64_t v20 = *(void *)(v6 + 12 * v17);
        *(void *)(v8 + v3) = v20;
        int v21 = *v9;
        uint64_t v22 = *(void *)(v9 + 3);
        if (*v9 == -1) {
          goto LABEL_3;
        }
        goto LABEL_14;
      }
      uint64_t v20 = *(void *)(v4[13] + v3);
      *(void *)(v8 + v3) = v20;
      int v21 = *v9;
      uint64_t v22 = *(void *)(v9 + 3);
      if (*v9 != -1) {
        goto LABEL_14;
      }
LABEL_3:
      *(void *)(v10 + v3) = v22 * v20;
      v3 += 8;
      v9 += 5;
      if (v12 == v3) {
        goto LABEL_15;
      }
    }
    if (v17 == -1) {
      unint64_t v19 = (void *)(v4[13] + v3);
    }
    else {
      unint64_t v19 = (void *)(v6 + 12 * v17);
    }
    uint64_t v20 = *v19 - v16 - v14;
    *(void *)(v8 + v3) = v20;
    int v21 = *v9;
    uint64_t v22 = *(void *)(v9 + 3);
    if (*v9 == -1) {
      goto LABEL_3;
    }
LABEL_14:
    v22 += *(void *)(*(void *)(*((void *)this + 9) + 40) + 12 * v21) * *(void *)(v9 + 1);
    goto LABEL_3;
  }
LABEL_15:
  operations_research::sat::TimeTableEdgeFinding::BuildTimeTable(this);
  started = operations_research::sat::SchedulingConstraintHelper::TaskByIncreasingStartMin(*((operations_research::sat::SchedulingConstraintHelper **)this
                                                                                           + 8));
  uint64_t v23 = operations_research::sat::SchedulingConstraintHelper::TaskByDecreasingEndMax(*((operations_research::sat::SchedulingConstraintHelper **)this
                                                                                     + 8));
  uint64_t v25 = *(int **)v23;
  unint64_t v24 = (int *)*((void *)v23 + 1);
  if (*(int **)v23 != v24)
  {
    uint64_t v26 = 0x7FFFFFFFFFFFFFFELL;
    uint64_t v66 = (int *)*((void *)v23 + 1);
    do
    {
      uint64_t v27 = *v25;
      int64_t v28 = *(void *)(v25 + 1);
      int v29 = (void *)*((void *)this + 8);
      unint64_t v30 = *(int *)(v29[16] + 4 * v27);
      if ((v30 == -1
         || ((*(void *)(*(void *)(*v29 + 24) + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> *(_DWORD *)(v29[16] + 4 * v27)) & 1) != 0)
        && *(void *)(*((void *)this + 19) + 8 * v27)
        && v28 != v26)
      {
        uint64_t v32 = *(void *)started;
        uint64_t v33 = *((void *)started + 1);
        if (v33 == *(void *)started)
        {
          uint64_t v26 = *(void *)(v25 + 1);
        }
        else
        {
          uint64_t v34 = 0;
          uint64_t v35 = 0;
          int64_t v36 = 0x8000000000000002;
          int v37 = -1;
          do
          {
            uint64_t v39 = *(int *)(v33 - 12);
            v33 -= 12;
            uint64_t v38 = v39;
            int64_t v40 = *(void *)(v33 + 4);
            uint64_t v41 = (void *)*((void *)this + 8);
            unint64_t v42 = *(int *)(v41[16] + 4 * v39);
            if (v42 == -1
              || ((*(void *)(*(void *)(*v41 + 24) + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v42) & 1) != 0)
            {
              uint64_t v43 = *(void *)(*((void *)this + 19) + 8 * v38);
              if (v43 && v28 > v40)
              {
                uint64_t v45 = v41[7];
                uint64_t v46 = *(void *)(v41[1] + 40);
                uint64_t v47 = *(void *)(v46 + 12 * (*(_DWORD *)(v45 + 4 * v38) ^ 1));
                if (v28 < -v47)
                {
                  v48 = (int *)(*((void *)this + 2) + 20 * (int)v38);
                  uint64_t v49 = *(void *)(v48 + 3);
                  if (*v48 != -1) {
                    v49 += *(void *)(*(void *)(*((void *)this + 9) + 40) + 12 * *v48) * *(void *)(v48 + 1);
                  }
                  int64_t v50 = v28 - v40;
                  int64_t v51 = *(void *)(*((void *)this + 16) + 8 * v38);
                  if (v28 - v40 >= v51) {
                    int64_t v50 = *(void *)(*((void *)this + 16) + 8 * v38);
                  }
                  int64_t v52 = v50 * v49;
                  uint64_t v53 = ((v47 + v28 + v51) & ~((v47 + v28 + v51) >> 63)) * v49;
                  BOOL v54 = v52 <= v36;
                  if (v52 <= v36) {
                    uint64_t v43 = v53;
                  }
                  else {
                    uint64_t v43 = v35;
                  }
                  if (v52 > v36)
                  {
                    uint64_t v35 = v53;
                    int64_t v36 = v52;
                  }
                  if (!v54) {
                    int v37 = v38;
                  }
                }
                v34 += v43;
                if (v37 == -1)
                {
                  int v37 = -1;
                }
                else
                {
                  int v55 = *((_DWORD *)this + 10);
                  uint64_t v56 = *(void *)((char *)this + 52);
                  if (v55 != -1) {
                    v56 -= *(void *)(*(void *)(*((void *)this + 9) + 40) + 12 * (v55 ^ 1))
                  }
                         * *(void *)((char *)this + 44);
                  int64_t v57 = *(void *)(*((void *)this + 22) + 8 * v38)
                      - *(void *)(*((void *)this + 25) + 8 * v27)
                      + v56 * (v28 - v40)
                      - v34;
                  if (v36 > v57)
                  {
                    int64_t v58 = *(void *)(v46 + 12 * *(int *)(v45 + 4 * v37));
                    if (v58 >= v28) {
                      int64_t v58 = v28;
                    }
                    int v59 = *(_DWORD *)(v41[4] + 4 * v37);
                    uint64_t v60 = *(void *)(v46 + 12 * (v59 ^ 1));
                    uint64_t v61 = v40 <= -v60 ? -v60 : *(void *)(v33 + 4);
                    uint64_t v62 = (int *)(*((void *)this + 2) + 20 * v37);
                    uint64_t v63 = *(void *)(v62 + 3);
                    if (*v62 != -1) {
                      v63 += *(void *)(*(void *)(*((void *)this + 9) + 40) + 12 * *v62) * *(void *)(v62 + 1);
                    }
                    uint64_t v64 = v28 - ((v58 - v61) & ~((v58 - v61) >> 63)) - v57 / v63;
                    if (*(void *)(v46 + 12 * v59) < v64)
                    {
                      uint64_t result = operations_research::sat::TimeTableEdgeFinding::IncreaseStartMin((uint64_t)this, v40, v28, v37, v64);
                      if (!result) {
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }
          while (v33 != v32);
          uint64_t v26 = v28;
          unint64_t v24 = v66;
        }
      }
      v25 += 3;
    }
    while (v25 != v24);
  }
  return 1;
}

char *operations_research::sat::TimeTableEdgeFinding::BuildTimeTable(operations_research::sat::TimeTableEdgeFinding *this)
{
  uint64_t v2 = (void **)((char *)this + 80);
  *((void *)this + 11) = *((void *)this + 10);
  uint64_t v76 = (void **)((char *)this + 104);
  *((void *)this + 14) = *((void *)this + 13);
  started = operations_research::sat::SchedulingConstraintHelper::TaskByDecreasingStartMax(*((operations_research::sat::SchedulingConstraintHelper **)this
                                                                                           + 8));
  uint64_t v5 = *(void *)started;
  uint64_t v4 = *((void *)started + 1);
  if (v4 != *(void *)started)
  {
    do
    {
      int v8 = *(_DWORD *)(v4 - 12);
      v4 -= 12;
      int v7 = v8;
      uint64_t v9 = *(void *)(v4 + 4);
      uint64_t v10 = (void *)*((void *)this + 8);
      unint64_t v11 = *(int *)(v10[16] + 4 * v8);
      if ((v11 == -1
         || ((*(void *)(*(void *)(*v10 + 24) + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
        && v9 < *(void *)(*(void *)(v10[1] + 40) + 12 * *(int *)(v10[7] + 4 * v7)))
      {
        int v13 = (char *)*((void *)this + 11);
        unint64_t v12 = *((void *)this + 12);
        if ((unint64_t)v13 < v12)
        {
          *(_DWORD *)int v13 = v7;
          *(void *)(v13 + 4) = v9;
          uint64_t v6 = v13 + 12;
        }
        else
        {
          uint64_t v14 = (char *)*v2;
          unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((v13 - (unsigned char *)*v2) >> 2);
          unint64_t v16 = v15 + 1;
          if (v15 + 1 > 0x1555555555555555) {
            std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (void)v14) >> 2);
          if (2 * v17 > v16) {
            unint64_t v16 = 2 * v17;
          }
          if (v17 >= 0xAAAAAAAAAAAAAAALL) {
            unint64_t v18 = 0x1555555555555555;
          }
          else {
            unint64_t v18 = v16;
          }
          if (v18)
          {
            if (v18 > 0x1555555555555555) {
LABEL_94:
            }
              std::__throw_bad_array_new_length[abi:ne180100]();
            unint64_t v19 = (char *)operator new(12 * v18);
          }
          else
          {
            unint64_t v19 = 0;
          }
          uint64_t v20 = &v19[12 * v15];
          *(_DWORD *)uint64_t v20 = v7;
          *(void *)(v20 + 4) = v9;
          int v21 = v20;
          if (v13 != v14)
          {
            do
            {
              uint64_t v22 = *(void *)(v13 - 12);
              v13 -= 12;
              int v23 = *((_DWORD *)v13 + 2);
              *(void *)(v21 - 12) = v22;
              v21 -= 12;
              *((_DWORD *)v21 + 2) = v23;
            }
            while (v13 != v14);
            int v13 = (char *)*v2;
          }
          uint64_t v6 = v20 + 12;
          *((void *)this + 10) = v21;
          *((void *)this + 11) = v20 + 12;
          *((void *)this + 12) = &v19[12 * v18];
          if (v13) {
            operator delete(v13);
          }
        }
        *((void *)this + 11) = v6;
      }
    }
    while (v4 != v5);
  }
  unint64_t v24 = operations_research::sat::SchedulingConstraintHelper::TaskByIncreasingEndMin(*((operations_research::sat::SchedulingConstraintHelper **)this
                                                                                     + 8));
  uint64_t v25 = *(int **)v24;
  uint64_t v26 = (int *)*((void *)v24 + 1);
  if (*(int **)v24 != v26)
  {
    while (1)
    {
      int v28 = *v25;
      uint64_t v29 = *(void *)(v25 + 1);
      unint64_t v30 = (void *)*((void *)this + 8);
      unint64_t v31 = *(int *)(v30[16] + 4 * *v25);
      if (v31 != -1
        && ((*(void *)(*(void *)(*v30 + 24) + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v31) & 1) == 0
        || v29 <= -*(void *)(*(void *)(v30[1] + 40) + 12 * (*(_DWORD *)(v30[4] + 4 * v28) ^ 1)))
      {
        goto LABEL_30;
      }
      uint64_t v33 = (char *)*((void *)this + 14);
      unint64_t v32 = *((void *)this + 15);
      if ((unint64_t)v33 >= v32) {
        break;
      }
      *(_DWORD *)uint64_t v33 = v28;
      *(void *)(v33 + 4) = v29;
      uint64_t v27 = v33 + 12;
LABEL_29:
      *((void *)this + 14) = v27;
LABEL_30:
      v25 += 3;
      if (v25 == v26) {
        goto LABEL_51;
      }
    }
    uint64_t v34 = (char *)*v76;
    unint64_t v35 = 0xAAAAAAAAAAAAAAABLL * ((v33 - (unsigned char *)*v76) >> 2);
    unint64_t v36 = v35 + 1;
    if (v35 + 1 > 0x1555555555555555) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v37 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - (void)v34) >> 2);
    if (2 * v37 > v36) {
      unint64_t v36 = 2 * v37;
    }
    if (v37 >= 0xAAAAAAAAAAAAAAALL) {
      unint64_t v38 = 0x1555555555555555;
    }
    else {
      unint64_t v38 = v36;
    }
    if (v38)
    {
      if (v38 > 0x1555555555555555) {
        goto LABEL_94;
      }
      uint64_t v39 = (char *)operator new(12 * v38);
      uint64_t v40 = (uint64_t)&v39[12 * v35];
      *(_DWORD *)uint64_t v40 = v28;
      *(void *)(v40 + 4) = v29;
      uint64_t v41 = v40;
      if (v33 == v34) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v39 = 0;
      uint64_t v40 = 4 * ((v33 - (unsigned char *)*v76) >> 2);
      *(_DWORD *)uint64_t v40 = v28;
      *(void *)(v40 + 4) = v29;
      uint64_t v41 = 12 * v35;
      if (v33 == v34) {
        goto LABEL_48;
      }
    }
    do
    {
      uint64_t v42 = *(void *)(v33 - 12);
      v33 -= 12;
      int v43 = *((_DWORD *)v33 + 2);
      *(void *)(v41 - 12) = v42;
      v41 -= 12;
      *(_DWORD *)(v41 + 8) = v43;
    }
    while (v33 != v34);
    uint64_t v33 = (char *)*v76;
LABEL_48:
    uint64_t v27 = (char *)(v40 + 12);
    *((void *)this + 13) = v41;
    *((void *)this + 14) = v40 + 12;
    *((void *)this + 15) = &v39[12 * v38];
    if (v33) {
      operator delete(v33);
    }
    goto LABEL_29;
  }
LABEL_51:
  uint64_t v44 = operations_research::sat::SchedulingConstraintHelper::TaskByDecreasingEndMax(*((operations_research::sat::SchedulingConstraintHelper **)this
                                                                                     + 8));
  uint64_t result = operations_research::sat::SchedulingConstraintHelper::TaskByIncreasingStartMin(*((operations_research::sat::SchedulingConstraintHelper **)this
                                                                                          + 8));
  uint64_t v46 = *((unsigned int *)this + 2);
  if ((int)v46 >= 1)
  {
    int v47 = 0;
    int v48 = 0;
    int v49 = 0;
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    unsigned int v53 = v46 - 1;
    uint64_t v54 = *(void *)v44;
    uint64_t v55 = *(void *)result;
    uint64_t v56 = *((void *)this + 10);
    unint64_t v57 = 0xAAAAAAAAAAAAAAABLL * ((*((void *)this + 11) - v56) >> 2);
    uint64_t v58 = *((void *)this + 13);
    unint64_t v59 = 0xAAAAAAAAAAAAAAABLL * ((*((void *)this + 14) - v58) >> 2);
    uint64_t result = (char *)(*(void *)result + 4);
    do
    {
      uint64_t v60 = *(void *)(v54 + 12 * v53 + 4);
      if (v49 < (int)v46)
      {
        if (*(void *)(v55 + 12 * v49 + 4) < v60) {
          uint64_t v60 = *(void *)(v55 + 12 * v49 + 4);
        }
        unint64_t v61 = v47;
        if (v57 <= v47)
        {
LABEL_57:
          unint64_t v62 = v48;
          if (v59 <= v48) {
            goto LABEL_58;
          }
          goto LABEL_66;
        }
      }
      else
      {
        unint64_t v61 = v47;
        if (v57 <= v47) {
          goto LABEL_57;
        }
      }
      if (*(void *)(v56 + 12 * (int)v61 + 4) < v60) {
        uint64_t v60 = *(void *)(v56 + 12 * (int)v61 + 4);
      }
      unint64_t v62 = v48;
      if (v59 <= v48)
      {
LABEL_58:
        v52 += (v60 - v51) * v50;
        if (v49 >= (int)v46) {
          goto LABEL_75;
        }
LABEL_69:
        uint64_t v63 = v49;
        uint64_t v64 = &result[12 * v49];
        while (*(void *)v64 == v60)
        {
          *(void *)(*((void *)this + 22) + 8 * *((int *)v64 - 1)) = v52;
          ++v63;
          v64 += 12;
          if (v46 == v63)
          {
            int v49 = v46;
            if ((v53 & 0x80000000) == 0) {
              goto LABEL_75;
            }
            goto LABEL_79;
          }
        }
        int v49 = v63;
        if ((v53 & 0x80000000) == 0) {
          goto LABEL_75;
        }
        goto LABEL_79;
      }
LABEL_66:
      if (*(void *)(v58 + 12 * (int)v62 + 4) < v60) {
        uint64_t v60 = *(void *)(v58 + 12 * (int)v62 + 4);
      }
      v52 += (v60 - v51) * v50;
      if (v49 < (int)v46) {
        goto LABEL_69;
      }
LABEL_75:
      while (*(void *)(v54 + 12 * v53 + 4) == v60)
      {
        *(void *)(*((void *)this + 25) + 8 * *(int *)(v54 + 12 * v53)) = v52;
        if ((int)v53-- <= 0)
        {
          unsigned int v53 = -1;
          break;
        }
      }
LABEL_79:
      if (v57 > v61)
      {
        uint64_t v66 = v56 + 4 + 12 * (int)v61;
        v67 = (uint64_t *)v66;
        do
        {
          uint64_t v68 = *v67;
          v67 = (uint64_t *)((char *)v67 + 12);
          if (v68 != v60) {
            break;
          }
          v69 = (int *)(*((void *)this + 2) + 20 * *(int *)(v66 - 4));
          uint64_t v70 = *(void *)(v69 + 3);
          if (*v69 != -1) {
            v70 += *(void *)(*(void *)(*((void *)this + 9) + 40) + 12 * *v69) * *(void *)(v69 + 1);
          }
          v50 += v70;
          ++v61;
          uint64_t v66 = (uint64_t)v67;
        }
        while (v57 > v61);
        int v47 = v61;
        if (v59 <= v62) {
          goto LABEL_54;
        }
LABEL_88:
        uint64_t v71 = v58 + 4 + 12 * (int)v62;
        uint64_t v72 = (uint64_t *)v71;
        do
        {
          uint64_t v73 = *v72;
          uint64_t v72 = (uint64_t *)((char *)v72 + 12);
          if (v73 != v60) {
            break;
          }
          uint64_t v74 = (int *)(*((void *)this + 2) + 20 * *(int *)(v71 - 4));
          uint64_t v75 = *(void *)(v74 + 3);
          if (*v74 != -1) {
            v75 += *(void *)(*(void *)(*((void *)this + 9) + 40) + 12 * *v74) * *(void *)(v74 + 1);
          }
          v50 -= v75;
          ++v62;
          uint64_t v71 = (uint64_t)v72;
        }
        while (v59 > v62);
        int v48 = v62;
        goto LABEL_54;
      }
      if (v59 > v62) {
        goto LABEL_88;
      }
LABEL_54:
      uint64_t v51 = v60;
    }
    while ((v53 & 0x80000000) == 0);
  }
  return result;
}

uint64_t operations_research::sat::TimeTableEdgeFinding::IncreaseStartMin(uint64_t a1, int64_t a2, int64_t a3, int a4, uint64_t a5)
{
  operations_research::sat::SchedulingConstraintHelper::ClearReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 64));
  uint64_t v75 = *(void **)(a1 + 64);
  uint64_t v10 = v75;
  uint64_t v76 = v75 + 48;
  int v11 = *(_DWORD *)(a1 + 40);
  int64_t v74 = a2;
  if (v11 != -1)
  {
    *(_DWORD *)v77 = v11 ^ 1;
    *(void *)&v77[4] = *(void *)(*(void *)(*(void *)(a1 + 72) + 40) + 12 * (v11 ^ 1));
    int v13 = (char *)v75[49];
    unint64_t v12 = v75[50];
    if ((unint64_t)v13 >= v12)
    {
      unint64_t v15 = (char *)*v76;
      unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v13[-*v76] >> 2);
      unint64_t v17 = v16 + 1;
      if (v16 + 1 > 0x1555555555555555) {
        goto LABEL_80;
      }
      int64_t v18 = a3;
      unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (void)v15) >> 2);
      if (2 * v19 > v17) {
        unint64_t v17 = 2 * v19;
      }
      if (v19 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v20 = 0x1555555555555555;
      }
      else {
        unint64_t v20 = v17;
      }
      if (v20)
      {
        if (v20 > 0x1555555555555555) {
          goto LABEL_81;
        }
        int v21 = (char *)operator new(12 * v20);
      }
      else
      {
        int v21 = 0;
      }
      uint64_t v22 = &v21[12 * v16];
      int v23 = &v21[12 * v20];
      *(void *)uint64_t v22 = *(void *)v77;
      *((_DWORD *)v22 + 2) = *(_DWORD *)&v77[8];
      uint64_t v14 = v22 + 12;
      a3 = v18;
      if (v13 == v15)
      {
        a2 = v74;
        uint64_t v10 = v75;
        v75[48] = v22;
        v75[49] = v14;
        v75[50] = v23;
        if (!v13) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v10 = v75;
        do
        {
          uint64_t v24 = *(void *)(v13 - 12);
          v13 -= 12;
          int v25 = *((_DWORD *)v13 + 2);
          *(void *)(v22 - 12) = v24;
          v22 -= 12;
          *((_DWORD *)v22 + 2) = v25;
        }
        while (v13 != v15);
        int v13 = (char *)*v76;
        v75[48] = v22;
        v75[49] = v14;
        v75[50] = v23;
        a2 = v74;
        if (!v13) {
          goto LABEL_19;
        }
      }
      operator delete(v13);
    }
    else
    {
      *(void *)int v13 = *(void *)v77;
      *((_DWORD *)v13 + 2) = *(_DWORD *)&v77[8];
      uint64_t v14 = v13 + 12;
    }
LABEL_19:
    v10[49] = v14;
  }
  uint64_t v73 = a5;
  int v26 = *(_DWORD *)(*(void *)(a1 + 16) + 20 * a4);
  if (v26 == -1) {
    goto LABEL_41;
  }
  *(_DWORD *)v78 = *(_DWORD *)(*(void *)(a1 + 16) + 20 * a4);
  *(void *)&v78[4] = *(void *)(*(void *)(*(void *)(a1 + 72) + 40) + 12 * v26);
  int v28 = (char *)v10[49];
  unint64_t v27 = v10[50];
  if ((unint64_t)v28 >= v27)
  {
    unint64_t v30 = v10;
    unint64_t v31 = (char *)*v76;
    unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v28[-*v76] >> 2);
    unint64_t v33 = v32 + 1;
    if (v32 + 1 <= 0x1555555555555555)
    {
      int64_t v34 = a3;
      unint64_t v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - (void)v31) >> 2);
      if (2 * v35 > v33) {
        unint64_t v33 = 2 * v35;
      }
      if (v35 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v36 = 0x1555555555555555;
      }
      else {
        unint64_t v36 = v33;
      }
      if (!v36)
      {
        unint64_t v37 = 0;
        goto LABEL_35;
      }
      if (v36 <= 0x1555555555555555)
      {
        unint64_t v37 = (char *)operator new(12 * v36);
LABEL_35:
        unint64_t v38 = &v37[12 * v32];
        uint64_t v39 = &v37[12 * v36];
        *(void *)unint64_t v38 = *(void *)v78;
        *((_DWORD *)v38 + 2) = *(_DWORD *)&v78[8];
        uint64_t v29 = v38 + 12;
        a3 = v34;
        uint64_t v10 = v30;
        if (v28 != v31)
        {
          do
          {
            uint64_t v40 = *(void *)(v28 - 12);
            v28 -= 12;
            int v41 = *((_DWORD *)v28 + 2);
            *(void *)(v38 - 12) = v40;
            v38 -= 12;
            *((_DWORD *)v38 + 2) = v41;
          }
          while (v28 != v31);
          int v28 = (char *)*v76;
        }
        v30[48] = v38;
        v30[49] = v29;
        v30[50] = v39;
        a2 = v74;
        if (v28) {
          operator delete(v28);
        }
        goto LABEL_40;
      }
LABEL_81:
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
LABEL_80:
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  *(void *)int v28 = *(void *)v78;
  *((_DWORD *)v28 + 2) = *(_DWORD *)&v78[8];
  uint64_t v29 = v28 + 12;
LABEL_40:
  v10[49] = v29;
LABEL_41:
  operations_research::sat::SchedulingConstraintHelper::AddStartMinReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 64), a4, a2);
  operations_research::sat::SchedulingConstraintHelper::AddDurationMinReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 64), a4);
  int v42 = *(_DWORD *)(a1 + 8);
  if (v42 >= 1)
  {
    uint64_t v43 = 0;
    uint64_t v44 = a4;
    int v72 = a4;
    while (1)
    {
      if (v43 == v44) {
        goto LABEL_52;
      }
      uint64_t v46 = *(operations_research::sat::SchedulingConstraintHelper **)(a1 + 64);
      unint64_t v52 = *(int *)(*((void *)v46 + 16) + 4 * v43);
      if (v52 != -1
        && ((*(void *)(*(void *)(*(void *)v46 + 24) + ((v52 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v52) & 1) == 0)
      {
        goto LABEL_52;
      }
      uint64_t v53 = *(void *)(*((void *)v46 + 1) + 40);
      if (-*(void *)(v53 + 12 * (*(_DWORD *)(*((void *)v46 + 7) + 4 * v43) ^ 1)) <= a2) {
        goto LABEL_52;
      }
      int64_t v47 = *(void *)(v53 + 12 * *(int *)(*((void *)v46 + 4) + 4 * v43));
      if (v47 >= a3) {
        goto LABEL_52;
      }
      int v54 = *(_DWORD *)(*(void *)(a1 + 16) + 20 * v43);
      if (v54 != -1) {
        break;
      }
LABEL_45:
      if (v47 >= a2) {
        unint64_t v48 = a2;
      }
      else {
        unint64_t v48 = v47;
      }
      operations_research::sat::SchedulingConstraintHelper::AddStartMinReason(v46, v43, v48);
      int v49 = *(operations_research::sat::SchedulingConstraintHelper **)(a1 + 64);
      uint64_t v50 = *(void *)(*(void *)(*((void *)v49 + 1) + 40)
                      + 12 * (*(_DWORD *)(*((void *)v49 + 7) + 4 * v43) ^ 1));
      if (-v50 > a3) {
        int64_t v51 = -v50;
      }
      else {
        int64_t v51 = a3;
      }
      operations_research::sat::SchedulingConstraintHelper::AddEndMaxReason(v49, v43, v51);
      operations_research::sat::SchedulingConstraintHelper::AddDurationMinReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 64), v43);
      operations_research::sat::SchedulingConstraintHelper::AddPresenceReason(*(operations_research::sat::SchedulingConstraintHelper **)(a1 + 64), v43);
      int v42 = *(_DWORD *)(a1 + 8);
LABEL_52:
      if (++v43 >= v42) {
        goto LABEL_77;
      }
    }
    *(_DWORD *)v79 = *(_DWORD *)(*(void *)(a1 + 16) + 20 * v43);
    *(void *)&v79[4] = *(void *)(*(void *)(*(void *)(a1 + 72) + 40) + 12 * v54);
    uint64_t v56 = (char *)v10[49];
    unint64_t v55 = v10[50];
    if ((unint64_t)v56 < v55)
    {
      *(void *)uint64_t v56 = *(void *)v79;
      *((_DWORD *)v56 + 2) = *(_DWORD *)&v79[8];
      uint64_t v45 = v56 + 12;
      a4 = v72;
      uint64_t v10 = v75;
    }
    else
    {
      int64_t v57 = a3;
      uint64_t v58 = (char *)*v76;
      unint64_t v59 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v56[-*v76] >> 2);
      unint64_t v60 = v59 + 1;
      if (v59 + 1 > 0x1555555555555555) {
        goto LABEL_80;
      }
      unint64_t v61 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v55 - (void)v58) >> 2);
      if (2 * v61 > v60) {
        unint64_t v60 = 2 * v61;
      }
      if (v61 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v62 = 0x1555555555555555;
      }
      else {
        unint64_t v62 = v60;
      }
      if (v62)
      {
        if (v62 > 0x1555555555555555) {
          goto LABEL_81;
        }
        uint64_t v63 = (char *)operator new(12 * v62);
      }
      else
      {
        uint64_t v63 = 0;
      }
      uint64_t v64 = &v63[12 * v59];
      *(void *)uint64_t v64 = *(void *)v79;
      *((_DWORD *)v64 + 2) = *(_DWORD *)&v79[8];
      unint64_t v65 = v64;
      if (v56 != v58)
      {
        a4 = v72;
        a3 = v57;
        uint64_t v10 = v75;
        do
        {
          uint64_t v66 = *(void *)(v56 - 12);
          v56 -= 12;
          int v67 = *((_DWORD *)v56 + 2);
          *(void *)(v65 - 12) = v66;
          v65 -= 12;
          *((_DWORD *)v65 + 2) = v67;
        }
        while (v56 != v58);
        uint64_t v56 = (char *)*v76;
        a2 = v74;
        uint64_t v68 = &v63[12 * v62];
        uint64_t v45 = v64 + 12;
        v75[48] = v65;
        v75[49] = v64 + 12;
        v75[50] = v68;
        if (!v56) {
          goto LABEL_44;
        }
        goto LABEL_76;
      }
      a4 = v72;
      a3 = v57;
      a2 = v74;
      uint64_t v10 = v75;
      v69 = &v63[12 * v62];
      uint64_t v45 = v64 + 12;
      v75[48] = v64;
      v75[49] = v64 + 12;
      v75[50] = v69;
      if (v56) {
LABEL_76:
      }
        operator delete(v56);
    }
LABEL_44:
    v10[49] = v45;
    uint64_t v46 = *(operations_research::sat::SchedulingConstraintHelper **)(a1 + 64);
    int64_t v47 = *(void *)(*(void *)(*((void *)v46 + 1) + 40) + 12 * *(int *)(*((void *)v46 + 4) + 4 * v43));
    goto LABEL_45;
  }
LABEL_77:
  uint64_t v70 = *(unint64_t **)(a1 + 64);

  return operations_research::sat::SchedulingConstraintHelper::IncreaseStartMin(v70, a4, v73);
}

void operations_research::sat::SchedulingConstraintHelper::AddDurationMinReason(operations_research::sat::SchedulingConstraintHelper *this, int a2)
{
  operations_research::sat::SchedulingConstraintHelper::AddOtherReason(this, a2);
  int v4 = *(_DWORD *)(*((void *)this + 10) + 4 * a2);
  if (v4 != -1)
  {
    *(_DWORD *)unint64_t v16 = *(_DWORD *)(*((void *)this + 10) + 4 * a2);
    *(void *)&v16[4] = *(void *)(*(void *)(*((void *)this + 1) + 40) + 12 * v4);
    uint64_t v6 = (_DWORD *)*((void *)this + 49);
    unint64_t v5 = *((void *)this + 50);
    if ((unint64_t)v6 >= v5)
    {
      int v8 = (_DWORD *)*((void *)this + 48);
      unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (v6 - v8) + 1;
      if (v9 > 0x1555555555555555) {
        std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - (void)v8) >> 2);
      if (2 * v10 > v9) {
        unint64_t v9 = 2 * v10;
      }
      if (v10 >= 0xAAAAAAAAAAAAAAALL) {
        unint64_t v11 = 0x1555555555555555;
      }
      else {
        unint64_t v11 = v9;
      }
      if (v11)
      {
        if (v11 > 0x1555555555555555) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        unint64_t v12 = (char *)operator new(12 * v11);
      }
      else
      {
        unint64_t v12 = 0;
      }
      int v13 = &v12[4 * (v6 - v8)];
      *(void *)int v13 = *(void *)v16;
      *((_DWORD *)v13 + 2) = *(_DWORD *)&v16[8];
      int v7 = v13 + 12;
      if (v6 != v8)
      {
        do
        {
          uint64_t v14 = *(void *)(v6 - 3);
          v6 -= 3;
          int v15 = v6[2];
          *(void *)(v13 - 12) = v14;
          v13 -= 12;
          *((_DWORD *)v13 + 2) = v15;
        }
        while (v6 != v8);
        uint64_t v6 = (_DWORD *)*((void *)this + 48);
      }
      *((void *)this + 48) = v13;
      *((void *)this + 49) = v7;
      *((void *)this + 50) = &v12[12 * v11];
      if (v6) {
        operator delete(v6);
      }
    }
    else
    {
      *(void *)uint64_t v6 = *(void *)v16;
      v6[2] = *(_DWORD *)&v16[8];
      int v7 = v6 + 3;
    }
    *((void *)this + 49) = v7;
  }
}

void operations_research::sat::TimeTableEdgeFinding::~TimeTableEdgeFinding(operations_research::sat::TimeTableEdgeFinding *this)
{
  operations_research::sat::TimeTableEdgeFinding::~TimeTableEdgeFinding(this);

  JUMPOUT(0x23ECF2BC0);
}

{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  *(void *)this = &unk_26F0C4890;
  uint64_t v2 = (void *)*((void *)this + 25);
  if (v2)
  {
    *((void *)this + 26) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 22);
  if (v3)
  {
    *((void *)this + 23) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 19);
  if (v4)
  {
    *((void *)this + 20) = v4;
    operator delete(v4);
  }
  unint64_t v5 = (void *)*((void *)this + 16);
  if (v5)
  {
    *((void *)this + 17) = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)*((void *)this + 13);
  if (v6)
  {
    *((void *)this + 14) = v6;
    operator delete(v6);
  }
  int v7 = (void *)*((void *)this + 10);
  if (v7)
  {
    *((void *)this + 11) = v7;
    operator delete(v7);
  }
  int v8 = (void *)*((void *)this + 2);
  if (v8)
  {
    *((void *)this + 3) = v8;
    operator delete(v8);
  }
}

uint64_t operations_research::sat::MoveOneUnprocessedLiteralLast(uint64_t a1, int a2, unsigned __int8 **a3)
{
  uint64_t v3 = *a3;
  int v4 = a3[1];
  if (*a3 == v4) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v5 = a1 + 8;
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    int v7 = *((_DWORD *)v4 - 1);
    uint64_t v8 = a1 + 8;
    uint64_t v9 = *(void *)(a1 + 8);
    do
    {
      int v10 = *(_DWORD *)(v9 + 25);
      BOOL v11 = v10 < v7;
      if (v10 >= v7) {
        unint64_t v12 = (uint64_t *)v9;
      }
      else {
        unint64_t v12 = (uint64_t *)(v9 + 8);
      }
      if (!v11) {
        uint64_t v8 = v9;
      }
      uint64_t v9 = *v12;
    }
    while (*v12);
    if (v8 != v5 && v7 >= *(_DWORD *)(v8 + 25))
    {
      int v15 = 0;
      int v16 = 0;
      unint64_t v17 = (unint64_t)(v4 - v3) >> 2;
      int v18 = v17 - 1;
      while (1)
      {
        LODWORD(v17) = v17 - 1;
        if ((v17 & 0x80000000) != 0) {
          break;
        }
        int v19 = *(_DWORD *)&v3[4 * v17];
        uint64_t v20 = a1 + 8;
        uint64_t v21 = *(void *)(a1 + 8);
        do
        {
          int v22 = *(_DWORD *)(v21 + 25);
          BOOL v23 = v22 < v19;
          if (v22 >= v19) {
            uint64_t v24 = (uint64_t *)v21;
          }
          else {
            uint64_t v24 = (uint64_t *)(v21 + 8);
          }
          if (!v23) {
            uint64_t v20 = v21;
          }
          uint64_t v21 = *v24;
        }
        while (*v24);
        if (v20 == v5 || v19 < *(_DWORD *)(v20 + 25))
        {
          ++v15;
          int v18 = v17;
          if (v15 >= v16) {
            break;
          }
        }
        else if (v15 >= ++v16)
        {
          break;
        }
      }
      if (v15)
      {
        if (v18 >= a2) {
          uint64_t v25 = a2;
        }
        else {
          uint64_t v25 = v18;
        }
        int v26 = (int32x2_t *)&v3[4 * (int)v25];
        uint64_t v43 = a1;
        if (v26 != (int32x2_t *)v4)
        {
          while (1)
          {
            __int32 v27 = v26->i32[0];
            uint64_t v28 = a1 + 8;
            uint64_t v29 = v6;
            do
            {
              __int32 v30 = *(_DWORD *)(v29 + 25);
              BOOL v31 = v30 < v27;
              if (v30 >= v27) {
                unint64_t v32 = (uint64_t *)v29;
              }
              else {
                unint64_t v32 = (uint64_t *)(v29 + 8);
              }
              if (!v31) {
                uint64_t v28 = v29;
              }
              uint64_t v29 = *v32;
            }
            while (*v32);
            if (v28 == v5 || *(_DWORD *)(v28 + 25) > v27) {
              break;
            }
            int v26 = (int32x2_t *)((char *)v26 + 4);
            if (v26 == (int32x2_t *)v4) {
              return v25;
            }
          }
          while (1)
          {
            v4 -= 4;
            if (v26 == (int32x2_t *)v4) {
              break;
            }
            int v34 = *(_DWORD *)v4;
            uint64_t v33 = a1 + 8;
            uint64_t v35 = v6;
            do
            {
              int v36 = *(_DWORD *)(v35 + 25);
              BOOL v37 = v36 < v34;
              if (v36 >= v34) {
                unint64_t v38 = (uint64_t *)v35;
              }
              else {
                unint64_t v38 = (uint64_t *)(v35 + 8);
              }
              if (!v37) {
                uint64_t v33 = v35;
              }
              uint64_t v35 = *v38;
            }
            while (*v38);
            if (v33 == v5 || *(_DWORD *)(v33 + 25) > v34) {
              uint64_t v33 = a1 + 8;
            }
            if (v33 != v5)
            {
              if (v4 - (unsigned __int8 *)v26 < 9)
              {
LABEL_67:
                int v42 = 0;
                unint64_t v39 = 0;
              }
              else
              {
                if (((v4 - (unsigned __int8 *)v26) >> 2) + 1 >= 0x1FFFFFFFFFFFFFFFLL) {
                  unint64_t v39 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v39 = ((v4 - (unsigned __int8 *)v26) >> 2) + 1;
                }
                uint64_t v40 = (const std::nothrow_t *)MEMORY[0x263F8C180];
                while (1)
                {
                  int v41 = operator new(4 * v39, v40);
                  if (v41) {
                    break;
                  }
                  BOOL v11 = v39 > 1;
                  v39 >>= 1;
                  if (!v11) {
                    goto LABEL_67;
                  }
                }
                int v42 = v41;
              }
              std::__stable_partition_impl<std::_ClassicAlgPolicy,operations_research::sat::MoveOneUnprocessedLiteralLast(std::set<gtl::IntType<operations_research::sat::LiteralIndex_tag_,int>> const&,int,std::vector<operations_research::sat::Literal> *)::$_0 &,std::__wrap_iter<operations_research::sat::Literal*>,long,std::pair<operations_research::sat::Literal*,long>>(v26, v4, &v43, ((v4 - (unsigned __int8 *)v26) >> 2) + 1, (unint64_t)v42, v39);
              if (v42) {
                operator delete(v42);
              }
              return v25;
            }
          }
        }
        return v25;
      }
      return 0xFFFFFFFFLL;
    }
  }
  unint64_t v13 = (unint64_t)(v4 - v3) >> 2;
  if ((int)v13 >= a2) {
    return a2;
  }
  else {
    return v13;
  }
}

uint64_t operations_research::sat::IncrementalAverage::Reset(uint64_t this, double a2)
{
  *(void *)(this + 8) = 0;
  *(double *)this = a2;
  return this;
}

double operations_research::sat::IncrementalAverage::AddData(operations_research::sat::IncrementalAverage *this, double a2)
{
  uint64_t v2 = *((void *)this + 1) + 1;
  *((void *)this + 1) = v2;
  double result = *(double *)this + (a2 - *(double *)this) / (double)v2;
  *(double *)this = result;
  return result;
}

void operations_research::sat::CompressTuples(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)a4 == *(void *)(a4 + 8)) {
    return;
  }
  gtl::STLSortAndRemoveDuplicates<std::vector<std::vector<long long>>>((const void ***)a4);
  v192 = (uint64_t *)a4;
  unint64_t v5 = *(void *)(*(void *)a4 + 8) - **(void **)a4;
  v204 = 0;
  v205 = 0;
  v206 = 0;
  unint64_t v6 = (v5 << 29) - 0x100000000;
  v201 = 0;
  v202 = 0;
  v203 = 0;
  if (v5 << 29 == 0x100000000)
  {
    int v7 = 0;
    v196 = 0;
    uint64_t v8 = v192;
    if ((int)(v5 >> 3) >= 1) {
      goto LABEL_5;
    }
LABEL_178:
    v175 = 0;
    if (v7) {
      goto LABEL_173;
    }
    goto LABEL_174;
  }
  if ((v6 & 0x8000000000000000) != 0) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  int v7 = (absl::lts_2020_02_25::hash_internal *)operator new(v6 >> 29);
  v201 = v7;
  v203 = (char *)v7 + 8 * ((uint64_t)v6 >> 32);
  bzero(v7, v6 >> 29);
  v196 = (absl::lts_2020_02_25::hash_internal *)((char *)v7 + (v6 >> 29));
  v202 = v196;
  uint64_t v8 = v192;
  if ((int)(v5 >> 3) < 1) {
    goto LABEL_178;
  }
LABEL_5:
  __dst = 0;
  uint64_t v9 = 0;
  uint64_t v191 = (v5 >> 3);
  while (2)
  {
    if (*(_DWORD *)(a1 + 8 * v9) == 1) {
      goto LABEL_10;
    }
    int v179 = *(_DWORD *)(a1 + 8 * v9);
    __p = &absl::lts_2020_02_25::container_internal::EmptyGroup(void)::empty_group;
    long long v198 = 0u;
    long long v199 = 0u;
    uint64_t v200 = 0;
    uint64_t v10 = *v8;
    uint64_t v190 = v9;
    if (v8[1] == *v8)
    {
      unint64_t v65 = &absl::lts_2020_02_25::container_internal::EmptyGroup(void)::empty_group;
      uint64_t v66 = 0;
      v205 = __dst;
      int v67 = &absl::lts_2020_02_25::container_internal::EmptyGroup(void)::empty_group;
      if ((char)absl::lts_2020_02_25::container_internal::EmptyGroup(void)::empty_group <= -2) {
        goto LABEL_69;
      }
      goto LABEL_70;
    }
    unint64_t v11 = 0;
    do
    {
      uint64_t v14 = 0;
      int v15 = 0;
      int v16 = (void *)(v10 + 24 * v11);
      unint64_t v17 = v201;
      do
      {
        if (v9 != v14) {
          *((void *)v17 + v15++) = *(void *)(*v16 + 8 * v14);
        }
        ++v14;
      }
      while (v191 != v14);
      unint64_t v18 = v196 - v17;
      unint64_t v193 = v11;
      if ((unint64_t)(v196 - v17) < 0x11)
      {
        if (v18 < 9)
        {
          if (v18 < 4)
          {
            if (v196 == v17)
            {
              uint64_t v21 = &absl::lts_2020_02_25::hash_internal::CityHashState::kSeed;
              goto LABEL_31;
            }
            unint64_t v19 = (*((unsigned __int8 *)v17 + (v18 >> 1)) << ((4 * v18) & 0xF8)) | *(unsigned __int8 *)v17 | (*((unsigned __int8 *)v196 - 1) << (8 * (v18 - 1)));
          }
          else
          {
            unint64_t v19 = ((unint64_t)*((unsigned int *)v196 - 1) << (8 * (v196 - v17)
                                                                   - 32)) | *(unsigned int *)v17;
          }
          uint64_t v20 = &absl::lts_2020_02_25::hash_internal::CityHashState::kSeed;
        }
        else
        {
          unint64_t v19 = *((void *)v196 - 1) >> (-8 * (v196 - v17));
          uint64_t v20 = (_UNKNOWN **)(((((unint64_t)&absl::lts_2020_02_25::hash_internal::CityHashState::kSeed
                               + *(void *)v17)
                              * (unsigned __int128)0x9DDFEA08EB382D69) >> 64) ^ (0x9DDFEA08EB382D69
                                                                                 * ((void)&absl::lts_2020_02_25::hash_internal::CityHashState::kSeed
                                                                                  + *(void *)v17)));
        }
      }
      else
      {
        if (v18 >= 0x401)
        {
          uint64_t v21 = (_UNKNOWN **)absl::lts_2020_02_25::hash_internal::CityHashState::CombineLargeContiguousImpl64((absl::lts_2020_02_25::hash_internal::CityHashState *)&absl::lts_2020_02_25::hash_internal::CityHashState::kSeed, v17, (char *)v18);
          goto LABEL_31;
        }
        unint64_t v19 = absl::lts_2020_02_25::hash_internal::CityHash64(v17, v196 - v17);
        uint64_t v20 = &absl::lts_2020_02_25::hash_internal::CityHashState::kSeed;
      }
      uint64_t v21 = (_UNKNOWN **)(((((unint64_t)v20 + v19) * (unsigned __int128)0x9DDFEA08EB382D69) >> 64) ^ (0x9DDFEA08EB382D69 * ((void)v20 + v19)));
LABEL_31:
      uint64_t v22 = 0;
      BOOL v23 = (char *)__p;
      size_t v24 = v196 - v17;
      unint64_t v25 = ((((unint64_t)v21 + ((v196 - v17) >> 3)) * (unsigned __int128)0x9DDFEA08EB382D69) >> 64) ^ (0x9DDFEA08EB382D69 * ((void)v21 + ((v196 - v17) >> 3)));
      uint64_t v26 = v198;
      unint64_t v27 = (v25 >> 7) ^ ((unint64_t)__p >> 12);
      uint64_t v28 = v199;
      uint64_t v29 = 0x101010101010101 * (v25 & 0x7F);
      while (1)
      {
        unint64_t v30 = v27 & v28;
        uint64_t v31 = *(void *)&v23[v27 & v28];
        unint64_t v32 = ((v31 ^ v29) - 0x101010101010101) & ~(v31 ^ v29) & 0x8080808080808080;
        if (v32) {
          break;
        }
LABEL_37:
        if ((v31 & (~v31 << 6) & 0x8080808080808080) != 0)
        {
          uint64_t v8 = v192;
          unint64_t v41 = absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::prepare_insert((uint64_t *)&__p, v25);
          int v42 = (void *)(v198 + 48 * v41);
          void *v42 = 0;
          v42[1] = 0;
          v42[2] = 0;
          int64_t v43 = v196 - v17;
          if (v196 != v17)
          {
            if (v43 < 0) {
              std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v44 = (char *)operator new(v196 - v17);
            void *v42 = v44;
            v42[1] = v44;
            uint64_t v45 = &v44[8 * (v43 >> 3)];
            v42[2] = v45;
            memcpy(v44, v17, v43);
            v42[1] = v45;
          }
          v42[3] = 0;
          v42[4] = 0;
          v42[5] = 0;
          uint64_t v46 = v198 + 48 * v41;
          unint64_t v47 = *(void *)(v46 + 40);
          BOOL v37 = (void *)(v46 + 40);
          unint64_t v36 = v47;
          unint64_t v39 = v37 - 1;
          uint64_t v40 = (char *)*(v37 - 1);
          if ((unint64_t)v40 >= v47) {
            goto LABEL_45;
          }
LABEL_14:
          unint64_t v12 = v193;
          *(_DWORD *)uint64_t v40 = v193;
          uint64_t v13 = (uint64_t)(v40 + 4);
          uint64_t v9 = v190;
          goto LABEL_15;
        }
        v22 += 8;
        unint64_t v27 = v22 + v30;
      }
      uint64_t v183 = v29;
      uint64_t v186 = v22;
      while (1)
      {
        unint64_t v33 = (v30 + (__clz(__rbit64(v32)) >> 3)) & v28;
        uint64_t v34 = v26 + 48 * v33;
        if (*(void *)(v34 + 8) - *(void *)v34 == v24 && !memcmp(*(const void **)v34, v17, v24)) {
          break;
        }
        v32 &= v32 - 1;
        uint64_t v29 = v183;
        uint64_t v22 = v186;
        if (!v32) {
          goto LABEL_37;
        }
      }
      uint64_t v8 = v192;
      uint64_t v35 = v26 + 48 * v33;
      unint64_t v38 = *(void *)(v35 + 40);
      BOOL v37 = (void *)(v35 + 40);
      unint64_t v36 = v38;
      unint64_t v39 = v37 - 1;
      uint64_t v40 = (char *)*(v37 - 1);
      if ((unint64_t)v40 < v38) {
        goto LABEL_14;
      }
LABEL_45:
      unint64_t v48 = (char *)*(v37 - 2);
      uint64_t v49 = (v40 - v48) >> 2;
      unint64_t v50 = v49 + 1;
      if ((unint64_t)(v49 + 1) >> 62) {
        std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v51 = v36 - (void)v48;
      if (v51 >> 1 > v50) {
        unint64_t v50 = v51 >> 1;
      }
      if ((unint64_t)v51 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v52 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v52 = v50;
      }
      if (v52)
      {
        if (v52 >> 62) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        unint64_t v53 = v52;
        int v54 = operator new(4 * v52);
        unint64_t v52 = v53;
        unint64_t v55 = &v54[4 * v49];
        _DWORD *v55 = v193;
        uint64_t v13 = (uint64_t)(v55 + 1);
        if (v40 == v48)
        {
LABEL_57:
          uint64_t v9 = v190;
          goto LABEL_63;
        }
      }
      else
      {
        int v54 = 0;
        unint64_t v55 = (_DWORD *)(4 * v49);
        *(_DWORD *)(4 * v49) = v193;
        uint64_t v13 = 4 * v49 + 4;
        if (v40 == v48) {
          goto LABEL_57;
        }
      }
      unint64_t v56 = v40 - 4 - v48;
      if (v56 >= 0x2C)
      {
        uint64_t v9 = v190;
        if ((unint64_t)(v48 - v54) >= 0x20)
        {
          uint64_t v57 = (v56 >> 2) + 1;
          uint64_t v58 = 4 * (v57 & 0x7FFFFFFFFFFFFFF8);
          unint64_t v59 = &v40[-v58];
          unint64_t v55 = (_DWORD *)((char *)v55 - v58);
          unint64_t v60 = &v54[4 * v49 - 16];
          unint64_t v61 = v40 - 16;
          uint64_t v62 = v57 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v63 = *(_OWORD *)v61;
            *(v60 - 1) = *((_OWORD *)v61 - 1);
            _OWORD *v60 = v63;
            v60 -= 2;
            v61 -= 32;
            v62 -= 8;
          }
          while (v62);
          uint64_t v40 = v59;
          if (v57 == (v57 & 0x7FFFFFFFFFFFFFF8)) {
            goto LABEL_63;
          }
        }
      }
      else
      {
        uint64_t v9 = v190;
      }
      do
      {
        int v64 = *((_DWORD *)v40 - 1);
        v40 -= 4;
        *--unint64_t v55 = v64;
      }
      while (v40 != v48);
LABEL_63:
      *(v37 - 2) = v55;
      *unint64_t v39 = v13;
      *BOOL v37 = &v54[4 * v52];
      if (v48) {
        operator delete(v48);
      }
      unint64_t v12 = v193;
LABEL_15:
      *unint64_t v39 = v13;
      unint64_t v11 = v12 + 1;
      uint64_t v10 = *v8;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((v8[1] - *v8) >> 3) > v11);
    unint64_t v65 = (uint64_t *)__p;
    uint64_t v66 = v198;
    v205 = __dst;
    int v67 = (uint64_t *)__p;
    if (*(char *)__p <= -2)
    {
      do
      {
LABEL_69:
        unint64_t v68 = (__clz(__rbit64((((unint64_t)*v67 >> 7) & ~*v67 | 0xFEFEFEFEFEFEFELL) + 1)) + 7) >> 3;
        int v67 = (uint64_t *)((char *)v67 + v68);
        v66 += 48 * v68;
      }
      while (*(char *)v67 < -1);
    }
LABEL_70:
    v69 = (uint64_t *)((char *)v65 + v199);
    if (v67 != (uint64_t *)((char *)v65 + v199))
    {
      uint64_t v70 = v179;
      v194 = (uint64_t *)((char *)v65 + v199);
      uint64_t v187 = v179;
      while (1)
      {
        int v72 = *(int **)(v66 + 24);
        uint64_t v71 = *(int **)(v66 + 32);
        if (v70 != v71 - v72
          || (uint64_t v73 = v72 + 1,
              *(void *)(*(void *)(*v8 + 24 * *v72) + 8 * v9) = a3,
              uint64_t v74 = (char *)v71 - (char *)(v72 + 1),
              v74 < 1))
        {
          int v93 = *((char *)v67 + 1);
          int v67 = (uint64_t *)((char *)v67 + 1);
          v66 += 48;
          if (v93 <= -2) {
            goto LABEL_86;
          }
          goto LABEL_72;
        }
        uint64_t v75 = v74 >> 2;
        uint64_t v76 = v204;
        v77 = __dst;
        uint64_t v78 = __dst - v204;
        uint64_t v79 = (__dst - v204) >> 2;
        v80 = &v76[(__dst - v76) & 0xFFFFFFFFFFFFFFFCLL];
        if (v74 >> 2 <= (v206 - __dst) >> 2)
        {
          uint64_t v95 = __dst - v80;
          uint64_t v96 = (__dst - v80) >> 2;
          if (v96 >= v75)
          {
            uint64_t v97 = v75 + 1;
            v100 = __dst;
            uint64_t v8 = v192;
LABEL_94:
            v101 = &v80[4 * v75];
            size_t v102 = v100 - v101;
            uint64_t v103 = (v100 - v101) >> 2;
            v104 = &v100[-4 * v75];
            v105 = v100;
            if (v104 < v77)
            {
              unint64_t v106 = (v78 & 0xFFFFFFFFFFFFFFFCLL) + v102;
              unint64_t v107 = (unint64_t)&v76[v106 + 4];
              if ((unint64_t)v77 > v107) {
                unint64_t v107 = (unint64_t)v77;
              }
              unint64_t v108 = v107 + ~(unint64_t)v76 - v106;
              if (v108 < 0x2C)
              {
                v105 = v100;
                v109 = __dst;
                goto LABEL_123;
              }
              v105 = v100;
              v109 = __dst;
              if ((unint64_t)(v101 - &v76[v78 & 0xFFFFFFFFFFFFFFFCLL]) < 0x20) {
                goto LABEL_189;
              }
              uint64_t v128 = (v108 >> 2) + 1;
              uint64_t v129 = 4 * (v128 & 0x7FFFFFFFFFFFFFF8);
              v104 += v129;
              v105 = &v100[v129];
              v130 = v100 + 16;
              v131 = &v76[4 * v103 + 16 + 4 * v79];
              uint64_t v132 = v128 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                long long v133 = *(_OWORD *)v131;
                *(v130 - 1) = *((_OWORD *)v131 - 1);
                _OWORD *v130 = v133;
                v130 += 2;
                v131 += 32;
                v132 -= 8;
              }
              while (v132);
              v109 = __dst;
              if (v128 != (v128 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_189:
                do
                {
LABEL_123:
                  int v134 = *(_DWORD *)v104;
                  v104 += 4;
                  *(_DWORD *)v105 = v134;
                  v105 += 4;
                }
                while (v104 < v109);
              }
            }
            v205 = v105;
            if (v100 != v101)
            {
              uint64_t v135 = v97;
              v136 = v80;
              memmove(&v100[-4 * v103], v80, v102);
              uint64_t v97 = v135;
              v69 = v194;
              v80 = v136;
            }
            memmove(v80, v73, 4 * v97 - 4);
            __dst = v105;
            uint64_t v70 = v187;
            int v137 = *((char *)v67 + 1);
            int v67 = (uint64_t *)((char *)v67 + 1);
            v66 += 48;
            if (v137 > -2) {
              goto LABEL_72;
            }
            do
            {
LABEL_86:
              unint64_t v94 = (__clz(__rbit64((((unint64_t)*v67 >> 7) & ~*v67 | 0xFEFEFEFEFEFEFELL) + 1)) + 7) >> 3;
              int v67 = (uint64_t *)((char *)v67 + v94);
              v66 += 48 * v94;
            }
            while (*(char *)v67 < -1);
            goto LABEL_72;
          }
          uint64_t v97 = v96 + 1;
          v98 = &v72[v96 + 1];
          int64_t v99 = (char *)v71 - (char *)v98;
          if (v71 != v98)
          {
            uint64_t v176 = v96 + 1;
            uint64_t v177 = (__dst - v204) >> 2;
            v185 = &v204[(__dst - v204) & 0xFFFFFFFFFFFFFFFCLL];
            uint64_t v181 = __dst - v204;
            memmove(__dst, v98, (char *)v71 - (char *)v98);
            uint64_t v97 = v176;
            uint64_t v79 = v177;
            uint64_t v78 = v181;
            v80 = v185;
          }
          v100 = &__dst[v99];
          v205 = &__dst[v99];
          if (v95 >= 1)
          {
            uint64_t v8 = v192;
            v69 = v194;
            v77 = __dst;
            goto LABEL_94;
          }
          __dst += v99;
          uint64_t v8 = v192;
          goto LABEL_117;
        }
        unint64_t v81 = v79 + v75;
        if ((unint64_t)(v79 + v75) >> 62) {
          std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v82 = v206 - v204;
        if ((v206 - v204) >> 1 > v81) {
          unint64_t v81 = v82 >> 1;
        }
        BOOL v83 = (unint64_t)v82 >= 0x7FFFFFFFFFFFFFFCLL;
        unint64_t v84 = 0x3FFFFFFFFFFFFFFFLL;
        if (!v83) {
          unint64_t v84 = v81;
        }
        unint64_t v184 = v84;
        if (v84)
        {
          uint64_t v180 = __dst - v204;
          if (v84 >> 62) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v85 = (__dst - v204) >> 2;
          uint64_t v86 = &v204[(__dst - v204) & 0xFFFFFFFFFFFFFFFCLL];
          unsigned int v87 = operator new(4 * v84);
          v80 = v86;
          uint64_t v79 = v85;
          uint64_t v8 = v192;
          uint64_t v78 = v180;
          v88 = &v87[4 * v79];
          v89 = &v88[4 * v75];
          unint64_t v90 = v74 - 4;
          if ((unint64_t)(v74 - 4) < 0x1C)
          {
LABEL_84:
            v91 = v88;
            v92 = __dst;
            do
            {
LABEL_104:
              int v116 = *v73++;
              *(_DWORD *)v91 = v116;
              v91 += 4;
            }
            while (v91 != v89);
            goto LABEL_105;
          }
        }
        else
        {
          unsigned int v87 = 0;
          v88 = (char *)(4 * v79);
          v89 = (char *)(4 * v79 + 4 * v75);
          unint64_t v90 = v74 - 4;
          if ((unint64_t)(v74 - 4) < 0x1C) {
            goto LABEL_84;
          }
        }
        v91 = v88;
        v92 = __dst;
        if ((unint64_t)(&v87[v78 & 0xFFFFFFFFFFFFFFFCLL] - (unsigned char *)v73) < 0x20) {
          goto LABEL_104;
        }
        uint64_t v110 = (v90 >> 2) + 1;
        uint64_t v111 = 4 * (v110 & 0x7FFFFFFFFFFFFFF8);
        v91 = &v88[v111];
        uint64_t v73 = (int *)((char *)v73 + v111);
        v112 = (long long *)(v72 + 5);
        v113 = &v87[4 * v79 + 16];
        uint64_t v114 = v110 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v115 = *v112;
          *(v113 - 1) = *(v112 - 1);
          _OWORD *v113 = v115;
          v112 += 2;
          v113 += 2;
          v114 -= 8;
        }
        while (v114);
        if (v110 != (v110 & 0x7FFFFFFFFFFFFFF8)) {
          goto LABEL_104;
        }
LABEL_105:
        if (v76 != v92)
        {
          if ((unint64_t)(v78 - 4) >= 0x3C)
          {
            v117 = v80;
            if ((unint64_t)(&v76[v78 & 0xFFFFFFFFFFFFFFFCLL] - &v87[v78 & 0xFFFFFFFFFFFFFFFCLL]) >= 0x20)
            {
              unint64_t v118 = ((unint64_t)(v78 - 4) >> 2) + 1;
              uint64_t v119 = 4 * (v118 & 0x7FFFFFFFFFFFFFF8);
              v117 = &v80[-v119];
              v88 -= v119;
              v120 = &v87[4 * v79 - 16];
              v121 = &v76[4 * v79 - 16];
              uint64_t v122 = v118 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                long long v123 = *(_OWORD *)v121;
                *(v120 - 1) = *((_OWORD *)v121 - 1);
                _OWORD *v120 = v123;
                v120 -= 2;
                v121 -= 32;
                v122 -= 8;
              }
              while (v122);
              if (v118 == (v118 & 0x7FFFFFFFFFFFFFF8)) {
                goto LABEL_113;
              }
            }
          }
          else
          {
            v117 = v80;
          }
          do
          {
            int v124 = *((_DWORD *)v117 - 1);
            v117 -= 4;
            *((_DWORD *)v88 - 1) = v124;
            v88 -= 4;
          }
          while (v117 != v76);
        }
LABEL_113:
        int64_t v125 = v92 - v80;
        if (v92 != v80)
        {
          v126 = v87;
          memmove(v89, v80, v92 - v80);
          unsigned int v87 = v126;
        }
        v204 = v88;
        v205 = &v89[v125];
        __dst = &v89[v125];
        v206 = &v87[4 * v184];
        if (v76) {
          operator delete(v76);
        }
LABEL_117:
        v69 = v194;
        uint64_t v70 = v187;
        int v127 = *((char *)v67 + 1);
        int v67 = (uint64_t *)((char *)v67 + 1);
        v66 += 48;
        if (v127 <= -2) {
          goto LABEL_86;
        }
LABEL_72:
        if (v67 == v69)
        {
          v138 = v205;
          goto LABEL_133;
        }
      }
    }
    v138 = __dst;
LABEL_133:
    unint64_t v139 = 126 - 2 * __clz((v138 - v204) >> 2);
    if (v138 == v204) {
      uint64_t v140 = 0;
    }
    else {
      uint64_t v140 = v139;
    }
    std::__introsort<std::_ClassicAlgPolicy,std::greater<int> &,int *,false>(v204, v138, (uint64_t)v207, v140, 1);
    __dst = v204;
    v195 = v205;
    if (v204 != v205)
    {
      uint64_t v141 = v8[1];
      v142 = v204;
      while (1)
      {
        int v145 = *(_DWORD *)v142;
        uint64_t v146 = *v8;
        uint64_t v147 = *v8 + 24 * *(int *)v142;
        if (v147 != v141 - 24) {
          break;
        }
        uint64_t v144 = v141 - 24;
        v143 = *(void **)(v141 - 24);
        if (v143) {
          goto LABEL_139;
        }
LABEL_140:
        v8[1] = v144;
        v142 += 4;
        uint64_t v141 = v144;
        if (v142 == v195) {
          goto LABEL_164;
        }
      }
      v149 = *(char **)(v141 - 24);
      v148 = *(unsigned char **)(v141 - 16);
      size_t v150 = v148 - v149;
      unint64_t v151 = (v148 - v149) >> 3;
      uint64_t v152 = v146 + 24 * v145;
      uint64_t v155 = *(void *)(v152 + 16);
      v154 = (void *)(v152 + 16);
      uint64_t v153 = v155;
      v156 = *(char **)v147;
      if (v151 <= (v155 - *(void *)v147) >> 3)
      {
        uint64_t v162 = v146 + 24 * v145;
        v164 = *(char **)(v162 + 8);
        v161 = (void **)(v162 + 8);
        v163 = v164;
        size_t v165 = v164 - v156;
        unint64_t v166 = (v164 - v156) >> 3;
        if (v166 >= v151)
        {
          if (v148 != v149) {
            memmove(*(void **)v147, v149, v148 - v149);
          }
        }
        else
        {
          if (v163 != v156)
          {
            v167 = v148;
            memmove(*(void **)v147, v149, v165);
            v148 = v167;
            v156 = (char *)*v161;
          }
          v168 = &v149[8 * v166];
          size_t v150 = v148 - v168;
          if (v148 != v168) {
            memmove(v156, v168, v148 - v168);
          }
        }
      }
      else
      {
        v188 = v148;
        if (v156)
        {
          *(void *)(v146 + 24 * v145 + 8) = v156;
          operator delete(v156);
          uint64_t v153 = 0;
          *(void *)uint64_t v147 = 0;
          *(void *)(v147 + 8) = 0;
          *(void *)(v147 + 16) = 0;
        }
        if ((v150 & 0x8000000000000000) != 0) {
          goto LABEL_180;
        }
        uint64_t v157 = v153 >> 2;
        if (v153 >> 2 <= v151) {
          uint64_t v157 = v151;
        }
        unint64_t v158 = (unint64_t)v153 >= 0x7FFFFFFFFFFFFFF8 ? 0x1FFFFFFFFFFFFFFFLL : v157;
        if (v158 >> 61) {
LABEL_180:
        }
          std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
        v159 = (char *)operator new(8 * v158);
        v156 = v159;
        *(void *)uint64_t v147 = v159;
        uint64_t v160 = v146 + 24 * v145;
        *(void *)(v160 + 8) = v159;
        v161 = (void **)(v160 + 8);
        void *v154 = &v159[8 * v158];
        if (v188 != v149) {
          memcpy(v159, v149, v150);
        }
        uint64_t v8 = v192;
      }
      *v161 = &v156[v150];
      uint64_t v141 = v8[1];
      uint64_t v144 = v141 - 24;
      v143 = *(void **)(v141 - 24);
      if (!v143) {
        goto LABEL_140;
      }
LABEL_139:
      *(void *)(v141 - 16) = v143;
      operator delete(v143);
      goto LABEL_140;
    }
LABEL_164:
    if ((void)v199)
    {
      uint64_t v169 = 0;
      uint64_t v170 = 0;
      do
      {
        if ((*((char *)__p + v170) & 0x80000000) == 0)
        {
          uint64_t v171 = v198;
          uint64_t v172 = v198 + v169;
          v173 = *(void **)(v198 + v169 + 24);
          if (v173)
          {
            *(void *)(v172 + 32) = v173;
            operator delete(v173);
          }
          v174 = *(void **)v172;
          if (*(void *)v172)
          {
            *(void *)(v171 + v169 + 8) = v174;
            operator delete(v174);
          }
        }
        ++v170;
        v169 += 48;
      }
      while (v170 != (void)v199);
      operator delete(__p);
      __p = &absl::lts_2020_02_25::container_internal::EmptyGroup(void)::empty_group;
      uint64_t v200 = 0;
      *(void *)&long long v199 = 0;
      long long v198 = 0uLL;
      uint64_t v8 = v192;
    }
    if (*((void *)&v199 + 1)) {
      absl::lts_2020_02_25::container_internal::UnsampleSlow(*((void **)&v199 + 1));
    }
    uint64_t v9 = v190;
LABEL_10:
    if (++v9 != v191) {
      continue;
    }
    break;
  }
  int v7 = v201;
  v175 = __dst;
  if (v201)
  {
LABEL_173:
    v202 = v7;
    operator delete(v7);
    v175 = v204;
  }
LABEL_174:
  if (v175)
  {
    v205 = v175;
    operator delete(v175);
  }
}

void sub_23CDB1734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  unint64_t v27 = *(void **)(v25 - 144);
  if (v27)
  {
    *(void *)(v25 - 136) = v27;
    operator delete(v27);
  }
  uint64_t v28 = *(void **)(v25 - 120);
  if (v28)
  {
    *(void *)(v25 - 112) = v28;
    operator delete(v28);
  }
  _Unwind_Resume(exception_object);
}

uint64_t absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::~raw_hash_set(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    int v4 = (uint64_t *)(a1 + 8);
    do
    {
      if ((*(char *)(*(void *)a1 + v3) & 0x80000000) == 0)
      {
        uint64_t v5 = *v4;
        uint64_t v6 = *v4 + v2;
        int v7 = *(void **)(v6 + 24);
        if (v7)
        {
          *(void *)(v6 + 32) = v7;
          operator delete(v7);
        }
        uint64_t v8 = *(void **)v6;
        if (*(void *)v6)
        {
          *(void *)(v5 + v2 + 8) = v8;
          operator delete(v8);
        }
      }
      ++v3;
      v2 += 48;
    }
    while (v3 != *(void *)(a1 + 24));
    operator delete(*(void **)a1);
    *(void *)a1 = &absl::lts_2020_02_25::container_internal::EmptyGroup(void)::empty_group;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    uint64_t *v4 = 0;
  }
  uint64_t v9 = *(void **)(a1 + 32);
  if (v9) {
    absl::lts_2020_02_25::container_internal::UnsampleSlow(v9);
  }
  return a1;
}

int32x2_t *std::__stable_partition_impl<std::_ClassicAlgPolicy,operations_research::sat::MoveOneUnprocessedLiteralLast(std::set<gtl::IntType<operations_research::sat::LiteralIndex_tag_,int>> const&,int,std::vector<operations_research::sat::Literal> *)::$_0 &,std::__wrap_iter<operations_research::sat::Literal*>,long,std::pair<operations_research::sat::Literal*,long>>(int32x2_t *a1, unsigned __int8 *a2, uint64_t *a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v8 = a1;
  if (a4 == 3)
  {
    unint64_t v11 = (char *)a1 + 4;
    __int32 v12 = a1->i32[1];
    uint64_t v13 = *(void *)(*a3 + 8);
    if (!v13) {
      goto LABEL_14;
    }
    uint64_t v14 = *a3 + 8;
    do
    {
      __int32 v15 = *(_DWORD *)(v13 + 25);
      char v16 = v15 < v12;
      if (v15 >= v12) {
        unint64_t v17 = (uint64_t *)v13;
      }
      else {
        unint64_t v17 = (uint64_t *)(v13 + 8);
      }
      if (!v16) {
        uint64_t v14 = v13;
      }
      uint64_t v13 = *v17;
    }
    while (*v17);
    if (v14 != *a3 + 8 && *(_DWORD *)(v14 + 25) <= v12)
    {
      __int32 v63 = a1->i32[0];
      a1->i32[0] = v12;
      a1->i32[1] = v63;
      a1->i32[1] = *(_DWORD *)a2;
      *(_DWORD *)a2 = v63;
      return (int32x2_t *)a2;
    }
    else
    {
LABEL_14:
      a1->i32[1] = *(_DWORD *)a2;
      *(_DWORD *)a2 = v12;
      *a1 = vrev64_s32(*a1);
    }
  }
  else if (a4 == 2)
  {
    __int32 v10 = a1->i32[0];
    a1->i32[0] = *(_DWORD *)a2;
    *(_DWORD *)a2 = v10;
    return (int32x2_t *)a2;
  }
  else if (a6 >= a4)
  {
    uint64_t v34 = (unsigned __int8 *)a1 + 4;
    *(_DWORD *)a5 = a1->i32[0];
    uint64_t v35 = (__int32 *)(a5 + 4);
    if (&a1->u8[4] != a2)
    {
      unint64_t v36 = (void *)(*a3 + 8);
      uint64_t v37 = *v36;
      if (*v36)
      {
        do
        {
          while (1)
          {
            __int32 v46 = *(_DWORD *)v34;
            unint64_t v47 = v36;
            uint64_t v48 = v37;
            do
            {
              __int32 v49 = *(_DWORD *)(v48 + 25);
              BOOL v50 = v49 < v46;
              if (v49 >= v46) {
                uint64_t v51 = (uint64_t *)v48;
              }
              else {
                uint64_t v51 = (uint64_t *)(v48 + 8);
              }
              if (!v50) {
                unint64_t v47 = (void *)v48;
              }
              uint64_t v48 = *v51;
            }
            while (*v51);
            if (v47 != v36 && *(_DWORD *)((char *)v47 + 25) <= v46) {
              break;
            }
            *v35++ = v46;
            v34 += 4;
            if (v34 == a2) {
              goto LABEL_52;
            }
          }
          v8->i32[0] = v46;
          uint64_t v8 = (int32x2_t *)((char *)v8 + 4);
          v34 += 4;
        }
        while (v34 != a2);
      }
      else
      {
        unint64_t v38 = a2 - (unsigned __int8 *)a1 - 8;
        if (v38 < 0x1C) {
          goto LABEL_108;
        }
        if (a5 - (unint64_t)a1 < 0x20) {
          goto LABEL_108;
        }
        uint64_t v39 = 0;
        uint64_t v40 = (v38 >> 2) + 1;
        uint64_t v41 = 4 * (v40 & 0x7FFFFFFFFFFFFFF8);
        v34 += v41;
        uint64_t v35 = (__int32 *)((char *)v35 + v41);
        uint64_t v42 = v40 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          int64_t v43 = (_DWORD *)(a5 + v39 * 8);
          long long v44 = *(_OWORD *)&a1[v39 + 2].u8[4];
          *(_OWORD *)(v43 + 1) = *(_OWORD *)&a1[v39].u8[4];
          *(_OWORD *)(v43 + 5) = v44;
          v39 += 4;
          v42 -= 8;
        }
        while (v42);
        if (v40 != (v40 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_108:
          do
          {
            int v45 = *(_DWORD *)v34;
            v34 += 4;
            *v35++ = v45;
          }
          while (v34 != a2);
        }
      }
    }
LABEL_52:
    v8->i32[0] = *(_DWORD *)a2;
    unint64_t v11 = (char *)v8 + 4;
    if ((unint64_t)v35 > a5)
    {
      unint64_t v52 = (__int32 *)(a5 + 4);
      if ((unint64_t)v35 > a5 + 4) {
        unint64_t v52 = v35;
      }
      unint64_t v53 = (unint64_t)v52 + ~a5;
      int v54 = (__int32 *)a5;
      unint64_t v55 = (char *)v8 + 4;
      if (v53 < 0x1C) {
        goto LABEL_109;
      }
      int v54 = (__int32 *)a5;
      unint64_t v55 = (char *)v8 + 4;
      if ((unint64_t)v8 - a5 + 4 < 0x20) {
        goto LABEL_109;
      }
      uint64_t v56 = (v53 >> 2) + 1;
      uint64_t v57 = 4 * (v56 & 0x7FFFFFFFFFFFFFF8);
      int v54 = (__int32 *)(a5 + v57);
      unint64_t v55 = &v11[v57];
      uint64_t v58 = (_OWORD *)((char *)&v8[2] + 4);
      unint64_t v59 = (long long *)(a5 + 16);
      uint64_t v60 = v56 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v61 = *v59;
        *(v58 - 1) = *(v59 - 1);
        _OWORD *v58 = v61;
        v58 += 2;
        v59 += 2;
        v60 -= 8;
      }
      while (v60);
      if (v56 != (v56 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_109:
        do
        {
          int v62 = *v54++;
          *(_DWORD *)unint64_t v55 = v62;
          v55 += 4;
        }
        while (v54 < v35);
      }
    }
  }
  else
  {
    if (a4 >= 0) {
      uint64_t v20 = a4;
    }
    else {
      uint64_t v20 = a4 + 1;
    }
    uint64_t v21 = v20 >> 1;
    uint64_t v22 = (int32x2_t *)((char *)a1 + 4 * (v20 >> 1));
    uint64_t v23 = *a3;
    uint64_t v24 = *(void *)(*a3 + 8);
    if (v24)
    {
      uint64_t v25 = v22;
      for (uint64_t i = v21; ; --i)
      {
        __int32 v28 = v25[-1].i32[1];
        uint64_t v25 = (int32x2_t *)((char *)v25 - 4);
        __int32 v27 = v28;
        uint64_t v29 = *a3 + 8;
        uint64_t v30 = *(void *)v29;
        do
        {
          int v31 = *(_DWORD *)(v30 + 25);
          BOOL v32 = v31 < v27;
          if (v31 >= v27) {
            unint64_t v33 = (uint64_t *)v30;
          }
          else {
            unint64_t v33 = (uint64_t *)(v30 + 8);
          }
          if (!v32) {
            uint64_t v29 = v30;
          }
          uint64_t v30 = *v33;
        }
        while (*v33);
        if (v29 != *a3 + 8 && *(_DWORD *)(v29 + 25) <= v27) {
          break;
        }
        if (v25 == a1)
        {
          int v64 = a1;
          uint64_t v65 = a4 - v21;
          goto LABEL_66;
        }
      }
      int v64 = (int32x2_t *)std::__stable_partition_impl<std::_ClassicAlgPolicy,operations_research::sat::MoveOneUnprocessedLiteralLast(std::set<gtl::IntType<operations_research::sat::LiteralIndex_tag_,int>> const&,int,std::vector<operations_research::sat::Literal> *)::$_0 &,std::__wrap_iter<operations_research::sat::Literal*>,long,std::pair<operations_research::sat::Literal*,long>>(a1, v25, a3, i, a5, a6);
      uint64_t v23 = *a3;
      uint64_t v24 = *(void *)(*a3 + 8);
      uint64_t v65 = a4 - v21;
      if (!v24) {
        goto LABEL_78;
      }
LABEL_66:
      unint64_t v11 = (char *)(a2 + 4);
      uint64_t v66 = v23 + 8;
      int v67 = v22;
      while (1)
      {
        __int32 v68 = v67->i32[0];
        uint64_t v69 = v66;
        uint64_t v70 = v24;
        do
        {
          int v71 = *(_DWORD *)(v70 + 25);
          BOOL v72 = v71 < v68;
          if (v71 >= v68) {
            uint64_t v73 = (uint64_t *)v70;
          }
          else {
            uint64_t v73 = (uint64_t *)(v70 + 8);
          }
          if (!v72) {
            uint64_t v69 = v70;
          }
          uint64_t v70 = *v73;
        }
        while (*v73);
        if (v69 == v66 || *(_DWORD *)(v69 + 25) > v68) {
          break;
        }
        int v67 = (int32x2_t *)((char *)v67 + 4);
        if (v67 == (int32x2_t *)a2) {
          goto LABEL_80;
        }
        --v65;
      }
    }
    else
    {
      uint64_t v65 = a4 - v21;
      int v64 = a1;
LABEL_78:
      int v67 = v22;
    }
    unint64_t v11 = (char *)std::__stable_partition_impl<std::_ClassicAlgPolicy,operations_research::sat::MoveOneUnprocessedLiteralLast(std::set<gtl::IntType<operations_research::sat::LiteralIndex_tag_,int>> const&,int,std::vector<operations_research::sat::Literal> *)::$_0 &,std::__wrap_iter<operations_research::sat::Literal*>,long,std::pair<operations_research::sat::Literal*,long>>(v67, a2, a3, v65, a5, a6);
LABEL_80:
    if (v64 != v22)
    {
      if (v22 == (int32x2_t *)v11)
      {
        return v64;
      }
      else if (&v64->u8[4] == (unsigned __int8 *)v22)
      {
        __int32 v80 = v64->i32[0];
        memmove(v64, v22, v11 - (char *)v22);
        unint64_t v11 = (char *)v64 + v11 - (char *)v22;
        *(_DWORD *)unint64_t v11 = v80;
      }
      else if (&v22->u8[4] == (unsigned __int8 *)v11)
      {
        unint64_t v81 = (int32x2_t *)(v11 - 4);
        __int32 v82 = *((_DWORD *)v11 - 1);
        unint64_t v11 = (char *)v64 + 4;
        if (v81 != v64) {
          memmove((char *)v64 + 4, v64, (char *)v81 - (char *)v64);
        }
        v64->i32[0] = v82;
      }
      else
      {
        uint64_t v74 = ((char *)v22 - (char *)v64) >> 2;
        uint64_t v75 = (v11 - (char *)v22) >> 2;
        if (v74 == v75)
        {
          uint64_t v76 = (int32x2_t *)((char *)v64 + 4);
          uint64_t v77 = (uint64_t)v8 + 4 * v21 + 4;
          do
          {
            __int32 v78 = v76[-1].i32[1];
            v76[-1].i32[1] = *(_DWORD *)(v77 - 4);
            *(_DWORD *)(v77 - 4) = v78;
            if (v76 == v22) {
              break;
            }
            uint64_t v76 = (int32x2_t *)((char *)v76 + 4);
            BOOL v79 = v77 == (void)v11;
            v77 += 4;
          }
          while (!v79);
          return v22;
        }
        else
        {
          uint64_t v83 = (v11 - (char *)v22) >> 2;
          uint64_t v84 = ((char *)v22 - (char *)v64) >> 2;
          do
          {
            uint64_t v85 = v84;
            uint64_t v84 = v83;
            uint64_t v83 = v85 % v83;
          }
          while (v83);
          if (v84)
          {
            uint64_t v86 = (int32x2_t *)((char *)v64 + 4 * v84);
            do
            {
              __int32 v88 = v86[-1].i32[1];
              uint64_t v86 = (int32x2_t *)((char *)v86 - 4);
              int v87 = v88;
              v89 = (int32x2_t *)((char *)v86 + 4 * v74);
              unint64_t v90 = v86;
              do
              {
                v91 = v89;
                v90->i32[0] = v89->i32[0];
                uint64_t v92 = (v11 - (char *)v89) >> 2;
                BOOL v93 = __OFSUB__(v74, v92);
                uint64_t v94 = v74 - v92;
                char v16 = (v94 < 0) ^ v93;
                v89 = (int32x2_t *)((char *)v64 + 4 * v94);
                if (v16) {
                  v89 = (int32x2_t *)((char *)v91 + 4 * v74);
                }
                unint64_t v90 = v91;
              }
              while (v89 != v86);
              v91->i32[0] = v87;
            }
            while (v86 != v64);
          }
          return (int32x2_t *)((char *)v64 + 4 * v75);
        }
      }
    }
  }
  return (int32x2_t *)v11;
}

unint64_t absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::prepare_insert(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[3];
  unint64_t v6 = (((unint64_t)*a1 >> 12) ^ (a2 >> 7)) & v5;
  unint64_t v7 = 0;
  for (unint64_t i = *(void *)(*a1 + v6) & (~*(void *)(*a1 + v6) << 7) & 0x8080808080808080;
        !i;
        unint64_t i = *(void *)(v4 + v6) & (~*(void *)(v4 + v6) << 7) & 0x8080808080808080)
  {
    v7 += 8;
    unint64_t v6 = (v7 + v6) & v5;
  }
  unint64_t first_non_full = (v6 + (__clz(__rbit64(i)) >> 3)) & v5;
  uint64_t v10 = a1[5];
  if (!v10)
  {
    if (*(unsigned __int8 *)(v4 + first_non_full) == 254)
    {
      uint64_t v10 = 0;
    }
    else
    {
      absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::rehash_and_grow_if_necessary((uint64_t)a1);
      unint64_t first_non_full = absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<gtl::IntType<operations_research::sat::IntegerVariable_tag_,int>,int>,absl::lts_2020_02_25::hash_internal::Hash<gtl::IntType<operations_research::sat::IntegerVariable_tag_,int>>,std::equal_to<gtl::IntType<operations_research::sat::IntegerVariable_tag_,int>>,std::allocator<std::pair<gtl::IntType<operations_research::sat::IntegerVariable_tag_,int> const,int>>>::find_first_non_full(a1, a2);
      unint64_t v7 = v13;
      uint64_t v4 = *a1;
      uint64_t v10 = a1[5];
    }
  }
  ++a1[2];
  a1[5] = v10 - (*(unsigned __int8 *)(v4 + first_non_full) == 128);
  *(unsigned char *)(v4 + first_non_full) = a2 & 0x7F;
  *(unsigned char *)((a1[3] & (first_non_full - 8)) + (a1[3] & 7) + *a1 + 1) = a2 & 0x7F;
  unint64_t v11 = (atomic_ullong *)a1[4];
  if (v11) {
    absl::lts_2020_02_25::container_internal::RecordInsertSlow(v11, a2, v7);
  }
  return first_non_full;
}

void absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::rehash_and_grow_if_necessary(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (!v1)
  {
    uint64_t v2 = 1;
    goto LABEL_4;
  }
  if (*(void *)(a1 + 16) > (v1 - (v1 >> 3)) >> 1)
  {
    uint64_t v2 = (2 * v1) | 1;
LABEL_4:
    absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::resize((char **)a1, (char *)v2);
    return;
  }
  absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::drop_deletes_without_resize(a1);
}

void absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::resize(char **a1, char *a2)
{
  unint64_t v2 = (unint64_t)a2;
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  unint64_t v6 = a1[3];
  a1[3] = a2;
  uint64_t v26 = v4;
  if (!v4)
  {
    unint64_t v7 = a1[4];
    if (v7)
    {
      absl::lts_2020_02_25::container_internal::UnsampleSlow(v7);
      unint64_t v2 = (unint64_t)a1[3];
    }
    a1[4] = 0;
  }
  unint64_t v8 = (v2 & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v9 = (char *)operator new(v8 + 48 * v2);
  *a1 = v9;
  a1[1] = &v9[v8];
  memset(v9, 128, v2 + 8);
  v9[v2] = -1;
  uint64_t v10 = v2 - (v2 >> 3);
  if (v2 == 7) {
    uint64_t v10 = 6;
  }
  unint64_t v11 = a1[2];
  a1[5] = (char *)(v10 - (void)v11);
  __int32 v12 = a1[4];
  if (v12)
  {
    *((void *)v12 + 1) = v11;
    *(void *)__int32 v12 = v2;
    if (!v11)
    {
      *((void *)v12 + 4) = 0;
      *((void *)v12 + 2) = 0;
    }
  }
  if (!v6)
  {
    unint64_t v14 = 0;
    uint64_t v25 = a1[4];
    if (!v25) {
      return;
    }
LABEL_21:
    *((void *)v25 + 4) = v14 >> 3;
    *((void *)v25 + 2) = 0;
    return;
  }
  unint64_t v13 = 0;
  unint64_t v14 = 0;
  do
  {
    if ((v13[(void)v5] & 0x80000000) == 0)
    {
      uint64_t v18 = (uint64_t)&v26[48 * (void)v13];
      unint64_t v19 = (unint64_t)absl::lts_2020_02_25::hash_internal::CityHashState::combine_contiguous((absl::lts_2020_02_25::hash_internal::CityHashState *)&absl::lts_2020_02_25::hash_internal::CityHashState::kSeed, *(absl::lts_2020_02_25::hash_internal **)v18, *(void *)(v18 + 8) - *(void *)v18)+ ((uint64_t)(*(void *)(v18 + 8) - *(void *)v18) >> 3);
      unint64_t v20 = ((v19 * (unsigned __int128)0x9DDFEA08EB382D69) >> 64) ^ (0x9DDFEA08EB382D69 * v19);
      uint64_t v21 = *a1;
      uint64_t v22 = a1[3];
      unint64_t v23 = ((v20 >> 7) ^ ((unint64_t)*a1 >> 12)) & (unint64_t)v22;
      unint64_t v24 = *(void *)&(*a1)[v23] & (~*(void *)&(*a1)[v23] << 7) & 0x8080808080808080;
      if (v24)
      {
        uint64_t v15 = 0;
      }
      else
      {
        uint64_t v15 = 0;
        do
        {
          v15 += 8;
          unint64_t v23 = (v15 + v23) & (unint64_t)v22;
          unint64_t v24 = *(void *)&v21[v23] & (~*(void *)&v21[v23] << 7) & 0x8080808080808080;
        }
        while (!v24);
      }
      unint64_t v16 = (v23 + (__clz(__rbit64(v24)) >> 3)) & (unint64_t)v22;
      v14 += v15;
      char v17 = v20 & 0x7F;
      v21[v16] = v17;
      (*a1)[((unint64_t)a1[3] & 7) + 1 + ((v16 - 8) & (unint64_t)a1[3])] = v17;
      absl::lts_2020_02_25::container_internal::map_slot_policy<std::vector<long long> const,std::vector<int>>::transfer<std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>((uint64_t)(a1 + 5), &a1[1][48 * v16], v18);
    }
    ++v13;
  }
  while (v13 != v6);
  operator delete(v5);
  uint64_t v25 = a1[4];
  if (v25) {
    goto LABEL_21;
  }
}

void absl::lts_2020_02_25::container_internal::raw_hash_set<absl::lts_2020_02_25::container_internal::FlatHashMapPolicy<std::vector<long long> const,std::vector<int>>,absl::lts_2020_02_25::hash_internal::Hash<std::vector<long long> const>,std::equal_to<std::vector<long long> const>,std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>::drop_deletes_without_resize(uint64_t a1)
{
  v32[6] = *MEMORY[0x263EF8340];
  unint64_t v2 = *(int8x16_t **)a1;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)a1 + v3;
  if (v4 + 1 != *(void *)a1)
  {
    unint64_t v5 = v3 - 7;
    unint64_t v6 = *(unint64_t **)a1;
    if (v5 < 0x18) {
      goto LABEL_29;
    }
    uint64_t v7 = (v5 >> 3) + 1;
    unint64_t v6 = (unint64_t *)v2 + (v7 & 0x3FFFFFFFFFFFFFFCLL);
    unint64_t v8 = v2 + 1;
    v9.i64[0] = 0x8080808080808080;
    v9.i64[1] = 0x8080808080808080;
    v10.i64[0] = 0xFEFEFEFEFEFEFEFELL;
    v10.i64[1] = 0xFEFEFEFEFEFEFEFELL;
    uint64_t v11 = v7 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      int8x16_t v12 = vandq_s8(v8[-1], v9);
      int8x16_t v13 = vandq_s8(*v8, v9);
      v8[-1] = vandq_s8((int8x16_t)vsraq_n_u64((uint64x2_t)vmvnq_s8(v12), (uint64x2_t)v12, 7uLL), v10);
      int8x16_t *v8 = vandq_s8((int8x16_t)vsraq_n_u64((uint64x2_t)vmvnq_s8(v13), (uint64x2_t)v13, 7uLL), v10);
      v8 += 2;
      v11 -= 4;
    }
    while (v11);
    if (v7 != (v7 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_29:
      do
      {
        unint64_t *v6 = (~(*v6 & 0x8080808080808080) + ((*v6 & 0x8080808080808080) >> 7)) & 0xFEFEFEFEFEFEFEFELL;
        ++v6;
      }
      while (v6 != (unint64_t *)(v4 + 1));
    }
  }
  *(void *)(v4 + 1) = v2->i64[0];
  *(unsigned char *)uint64_t v4 = -1;
  if (!*(void *)(a1 + 24))
  {
    unint64_t v15 = 0;
    *(void *)(a1 + 40) = -*(void *)(a1 + 16);
    uint64_t v31 = *(void *)(a1 + 32);
    if (!v31) {
      return;
    }
LABEL_26:
    *(void *)(v31 + 32) = v15 >> 3;
    *(void *)(v31 + 16) = 0;
    return;
  }
  unint64_t v14 = 0;
  unint64_t v15 = 0;
  do
  {
    if (*(unsigned __int8 *)(*(void *)a1 + v14) == 254)
    {
      uint64_t v20 = *(void *)(a1 + 8) + 48 * v14;
      unint64_t v21 = (unint64_t)absl::lts_2020_02_25::hash_internal::CityHashState::combine_contiguous((absl::lts_2020_02_25::hash_internal::CityHashState *)&absl::lts_2020_02_25::hash_internal::CityHashState::kSeed, *(absl::lts_2020_02_25::hash_internal **)v20, *(void *)(v20 + 8) - *(void *)v20)+ ((uint64_t)(*(void *)(v20 + 8) - *(void *)v20) >> 3);
      unint64_t v22 = ((v21 * (unsigned __int128)0x9DDFEA08EB382D69) >> 64) ^ (0x9DDFEA08EB382D69 * v21);
      unint64_t v23 = *(int8x16_t **)a1;
      uint64_t v24 = *(void *)(a1 + 24);
      unint64_t v25 = ((v22 >> 7) ^ (*(void *)a1 >> 12)) & v24;
      unint64_t v26 = *(void *)(*(void *)a1 + v25) & (~*(void *)(*(void *)a1 + v25) << 7) & 0x8080808080808080;
      if (v26)
      {
        uint64_t v16 = 0;
        unint64_t v17 = ((v22 >> 7) ^ (*(void *)a1 >> 12)) & v24;
      }
      else
      {
        uint64_t v16 = 0;
        unint64_t v17 = ((v22 >> 7) ^ (*(void *)a1 >> 12)) & v24;
        do
        {
          v16 += 8;
          unint64_t v17 = (v16 + v17) & v24;
          unint64_t v26 = *(uint64_t *)((unsigned char *)v23->i64 + v17) & (~*(uint64_t *)((char *)v23->i64 + v17) << 7) & 0x8080808080808080;
        }
        while (!v26);
      }
      unint64_t v18 = (v17 + (__clz(__rbit64(v26)) >> 3)) & v24;
      v15 += v16;
      if ((((v18 - v25) ^ (v14 - v25)) & v24) > 7)
      {
        int v27 = v23->u8[v18];
        __int8 v28 = v22 & 0x7F;
        v23->i8[v18] = v28;
        *(unsigned char *)((*(void *)(a1 + 24) & (v18 - 8)) + (*(void *)(a1 + 24) & 7) + *(void *)a1 + 1) = v28;
        uint64_t v29 = *(void *)(a1 + 8);
        if (v27 == 128)
        {
          absl::lts_2020_02_25::container_internal::map_slot_policy<std::vector<long long> const,std::vector<int>>::transfer<std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>(a1 + 40, (void *)(v29 + 48 * v18), v29 + 48 * v14);
          *(unsigned char *)(*(void *)a1 + v14) = 0x80;
          *(unsigned char *)((*(void *)(a1 + 24) & (v14 - 8)) + (*(void *)(a1 + 24) & 7) + *(void *)a1 + 1) = 0x80;
        }
        else
        {
          absl::lts_2020_02_25::container_internal::map_slot_policy<std::vector<long long> const,std::vector<int>>::transfer<std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>(a1 + 40, v32, v29 + 48 * v14);
          absl::lts_2020_02_25::container_internal::map_slot_policy<std::vector<long long> const,std::vector<int>>::transfer<std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>(a1 + 40, (void *)(*(void *)(a1 + 8) + 48 * v14), *(void *)(a1 + 8) + 48 * v18);
          absl::lts_2020_02_25::container_internal::map_slot_policy<std::vector<long long> const,std::vector<int>>::transfer<std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>(a1 + 40, (void *)(*(void *)(a1 + 8) + 48 * v18), (uint64_t)v32);
          --v14;
        }
      }
      else
      {
        __int8 v19 = v22 & 0x7F;
        v23->i8[v14] = v19;
        *(unsigned char *)((*(void *)(a1 + 24) & (v14 - 8)) + (*(void *)(a1 + 24) & 7) + *(void *)a1 + 1) = v19;
      }
    }
    ++v14;
  }
  while (v14 != *(void *)(a1 + 24));
  uint64_t v30 = v14 - (v14 >> 3);
  if (v14 == 7) {
    uint64_t v30 = 6;
  }
  *(void *)(a1 + 40) = v30 - *(void *)(a1 + 16);
  uint64_t v31 = *(void *)(a1 + 32);
  if (v31) {
    goto LABEL_26;
  }
}

void absl::lts_2020_02_25::container_internal::map_slot_policy<std::vector<long long> const,std::vector<int>>::transfer<std::allocator<std::pair<std::vector<long long> const,std::vector<int>>>>(uint64_t a1, void *a2, uint64_t a3)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  unint64_t v6 = *(const void **)a3;
  uint64_t v5 = *(void *)(a3 + 8);
  int64_t v7 = v5 - *(void *)a3;
  if (v5 != *(void *)a3)
  {
    if (v7 < 0) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v8 = (char *)operator new(v5 - *(void *)a3);
    *a2 = v8;
    a2[1] = v8;
    int8x16_t v9 = &v8[8 * (v7 >> 3)];
    a2[2] = v9;
    memcpy(v8, v6, v7);
    a2[1] = v9;
  }
  a2[3] = 0;
  a2[4] = 0;
  a2[5] = 0;
  *(_OWORD *)(a2 + 3) = *(_OWORD *)(a3 + 24);
  a2[5] = *(void *)(a3 + 40);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  int8x16_t v10 = *(void **)a3;
  if (*(void *)a3)
  {
    *(void *)(a3 + 8) = v10;
    operator delete(v10);
  }
}

void sub_23CDB2598(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::__introsort<std::_ClassicAlgPolicy,std::greater<int> &,int *,false>(char *result, char *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v11 = result;
  while (2)
  {
    unint64_t v12 = (unint64_t)v11;
    while (1)
    {
      while (1)
      {
        uint64_t v11 = (_DWORD *)v12;
        uint64_t v13 = (uint64_t)&a2[-v12];
        unint64_t v14 = (uint64_t)&a2[-v12] >> 2;
        if (v6 || !v5)
        {
          switch(v14)
          {
            case 0uLL:
            case 1uLL:
              return result;
            case 2uLL:
              int v69 = *((_DWORD *)a2 - 1);
              int v70 = *(_DWORD *)v12;
              if (v69 > *(_DWORD *)v12)
              {
                *(_DWORD *)unint64_t v12 = v69;
                *((_DWORD *)a2 - 1) = v70;
              }
              break;
            case 3uLL:
              int v71 = *(_DWORD *)(v12 + 4);
              int v72 = *((_DWORD *)a2 - 1);
              if (v71 <= v72) {
                int v73 = *((_DWORD *)a2 - 1);
              }
              else {
                int v73 = *(_DWORD *)(v12 + 4);
              }
              if (v71 >= v72) {
                int v71 = *((_DWORD *)a2 - 1);
              }
              *((_DWORD *)a2 - 1) = v71;
              *(_DWORD *)(v12 + 4) = v73;
              int v74 = *((_DWORD *)a2 - 1);
              if (v74 <= *(_DWORD *)v12) {
                int v75 = *(_DWORD *)v12;
              }
              else {
                int v75 = *((_DWORD *)a2 - 1);
              }
              if (v74 >= *(_DWORD *)v12) {
                int v74 = *(_DWORD *)v12;
              }
              *((_DWORD *)a2 - 1) = v74;
              int v77 = *(_DWORD *)v12;
              int v76 = *(_DWORD *)(v12 + 4);
              if (v75 <= v76) {
                int v77 = *(_DWORD *)(v12 + 4);
              }
              if (v75 < v76) {
                int v76 = v75;
              }
              *(_DWORD *)unint64_t v12 = v77;
              *(_DWORD *)(v12 + 4) = v76;
              break;
            case 4uLL:
              int v79 = *(_DWORD *)(v12 + 4);
              int v78 = *(_DWORD *)(v12 + 8);
              if (*(_DWORD *)v12 <= v78) {
                int v80 = *(_DWORD *)(v12 + 8);
              }
              else {
                int v80 = *(_DWORD *)v12;
              }
              if (*(_DWORD *)v12 < v78) {
                int v78 = *(_DWORD *)v12;
              }
              *(_DWORD *)(v12 + 8) = v78;
              *(_DWORD *)unint64_t v12 = v80;
              int v81 = *((_DWORD *)a2 - 1);
              if (v79 <= v81) {
                int v82 = *((_DWORD *)a2 - 1);
              }
              else {
                int v82 = v79;
              }
              if (v79 < v81) {
                int v81 = v79;
              }
              *((_DWORD *)a2 - 1) = v81;
              int v83 = *(_DWORD *)v12;
              if (*(_DWORD *)v12 <= v82) {
                int v84 = v82;
              }
              else {
                int v84 = *(_DWORD *)v12;
              }
              if (v83 >= v82) {
                int v83 = v82;
              }
              *(_DWORD *)unint64_t v12 = v84;
              *(_DWORD *)(v12 + 4) = v83;
              int v85 = *(_DWORD *)(v12 + 8);
              int v86 = *((_DWORD *)a2 - 1);
              if (v85 <= v86) {
                int v87 = *((_DWORD *)a2 - 1);
              }
              else {
                int v87 = *(_DWORD *)(v12 + 8);
              }
              if (v85 >= v86) {
                int v85 = *((_DWORD *)a2 - 1);
              }
              *((_DWORD *)a2 - 1) = v85;
              int v88 = *(_DWORD *)(v12 + 4);
              if (v88 <= v87) {
                int v89 = v87;
              }
              else {
                int v89 = *(_DWORD *)(v12 + 4);
              }
              if (v88 >= v87) {
                int v88 = v87;
              }
              *(_DWORD *)(v12 + 4) = v89;
              *(_DWORD *)(v12 + 8) = v88;
              break;
            case 5uLL:
              int v90 = *(_DWORD *)v12;
              int v91 = *(_DWORD *)(v12 + 4);
              if (*(_DWORD *)v12 <= v91) {
                int v92 = *(_DWORD *)(v12 + 4);
              }
              else {
                int v92 = *(_DWORD *)v12;
              }
              if (v90 >= v91) {
                int v90 = *(_DWORD *)(v12 + 4);
              }
              *(_DWORD *)unint64_t v12 = v92;
              *(_DWORD *)(v12 + 4) = v90;
              int v93 = *(_DWORD *)(v12 + 12);
              int v94 = *((_DWORD *)a2 - 1);
              if (v93 <= v94) {
                int v95 = *((_DWORD *)a2 - 1);
              }
              else {
                int v95 = *(_DWORD *)(v12 + 12);
              }
              if (v93 >= v94) {
                int v93 = *((_DWORD *)a2 - 1);
              }
              *((_DWORD *)a2 - 1) = v93;
              *(_DWORD *)(v12 + 12) = v95;
              int v96 = *((_DWORD *)a2 - 1);
              int v97 = *(_DWORD *)(v12 + 8);
              if (v96 <= v97) {
                int v98 = *(_DWORD *)(v12 + 8);
              }
              else {
                int v98 = *((_DWORD *)a2 - 1);
              }
              if (v96 >= v97) {
                int v96 = *(_DWORD *)(v12 + 8);
              }
              *((_DWORD *)a2 - 1) = v96;
              int v100 = *(_DWORD *)(v12 + 8);
              int v99 = *(_DWORD *)(v12 + 12);
              int v101 = *(_DWORD *)(v12 + 4);
              if (v98 <= v99) {
                int v100 = *(_DWORD *)(v12 + 12);
              }
              if (v98 < v99) {
                int v99 = v98;
              }
              *(_DWORD *)(v12 + 8) = v100;
              *(_DWORD *)(v12 + 12) = v99;
              int v102 = *((_DWORD *)a2 - 1);
              if (v101 <= v102) {
                int v103 = *((_DWORD *)a2 - 1);
              }
              else {
                int v103 = v101;
              }
              if (v101 < v102) {
                int v102 = v101;
              }
              *((_DWORD *)a2 - 1) = v102;
              int v104 = *(_DWORD *)v12;
              int v106 = *(_DWORD *)(v12 + 8);
              int v105 = *(_DWORD *)(v12 + 12);
              if (v105 <= *(_DWORD *)v12) {
                int v107 = *(_DWORD *)v12;
              }
              else {
                int v107 = *(_DWORD *)(v12 + 12);
              }
              if (v105 >= v104) {
                int v105 = *(_DWORD *)v12;
              }
              if (v107 <= v106) {
                int v104 = *(_DWORD *)(v12 + 8);
              }
              if (v107 < v106) {
                int v106 = v107;
              }
              if (v105 <= v103) {
                int v108 = v103;
              }
              else {
                int v108 = v105;
              }
              if (v105 >= v103) {
                int v105 = v103;
              }
              if (v108 <= v106) {
                int v103 = v106;
              }
              *(_DWORD *)unint64_t v12 = v104;
              *(_DWORD *)(v12 + 4) = v103;
              if (v108 >= v106) {
                int v109 = v106;
              }
              else {
                int v109 = v108;
              }
              *(_DWORD *)(v12 + 8) = v109;
              *(_DWORD *)(v12 + 12) = v105;
              break;
            default:
              JUMPOUT(0);
          }
          return result;
        }
        if (v13 <= 95)
        {
          uint64_t v110 = (char *)(v12 + 4);
          BOOL v112 = (char *)v12 == a2 || v110 == a2;
          if (a5)
          {
            if (!v112)
            {
              uint64_t v113 = 0;
              uint64_t v114 = (_DWORD *)v12;
              do
              {
                int v117 = *v114;
                int v116 = v114[1];
                uint64_t v114 = v110;
                if (v116 > v117)
                {
                  uint64_t v118 = v113;
                  do
                  {
                    *(_DWORD *)(v12 + v118 + 4) = v117;
                    if (!v118)
                    {
                      long long v115 = (_DWORD *)v12;
                      goto LABEL_198;
                    }
                    int v117 = *(_DWORD *)(v12 + v118 - 4);
                    v118 -= 4;
                  }
                  while (v116 > v117);
                  long long v115 = (_DWORD *)(v12 + v118 + 4);
LABEL_198:
                  *long long v115 = v116;
                }
                uint64_t v110 = (char *)(v114 + 1);
                v113 += 4;
              }
              while (v114 + 1 != (_DWORD *)a2);
            }
          }
          else if (!v112)
          {
            do
            {
              int v120 = *v11;
              int v119 = v11[1];
              uint64_t v11 = v110;
              if (v119 > v120)
              {
                do
                {
                  *(_DWORD *)uint64_t v110 = v120;
                  int v120 = *((_DWORD *)v110 - 2);
                  v110 -= 4;
                }
                while (v119 > v120);
                *(_DWORD *)uint64_t v110 = v119;
              }
              uint64_t v110 = (char *)(v11 + 1);
            }
            while (v11 + 1 != (_DWORD *)a2);
          }
          return result;
        }
        if (!a4)
        {
          if ((char *)v12 != a2)
          {
            return std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,std::greater<int> &,int *,int *>((char *)v12, a2, a2);
          }
          return result;
        }
        unint64_t v15 = v14 >> 1;
        uint64_t v16 = (int *)(v12 + 4 * (v14 >> 1));
        int v17 = *((_DWORD *)a2 - 1);
        if ((unint64_t)v13 >= 0x201) {
          break;
        }
        int v20 = *(_DWORD *)v12;
        int v21 = *v16;
        if (*(_DWORD *)v12 > *v16)
        {
          if (v17 <= v20)
          {
            *uint64_t v16 = v20;
            *(_DWORD *)unint64_t v12 = v21;
            int v33 = *((_DWORD *)a2 - 1);
            if (v33 <= v21) {
              goto LABEL_33;
            }
            *(_DWORD *)unint64_t v12 = v33;
          }
          else
          {
            *uint64_t v16 = v17;
          }
          *((_DWORD *)a2 - 1) = v21;
LABEL_33:
          --a4;
          int v24 = *(_DWORD *)v12;
          if (a5) {
            goto LABEL_57;
          }
          goto LABEL_56;
        }
        if (v17 <= v20) {
          goto LABEL_33;
        }
        *(_DWORD *)unint64_t v12 = v17;
        *((_DWORD *)a2 - 1) = v20;
        int v23 = *v16;
        if (*(_DWORD *)v12 <= *v16) {
          goto LABEL_33;
        }
        *uint64_t v16 = *(_DWORD *)v12;
        *(_DWORD *)unint64_t v12 = v23;
        --a4;
        int v24 = v23;
        if (a5) {
          goto LABEL_57;
        }
LABEL_56:
        if (*(_DWORD *)(v12 - 4) > v24) {
          goto LABEL_57;
        }
        if (v24 > *((_DWORD *)a2 - 1))
        {
          do
          {
            int v60 = *(_DWORD *)(v12 + 4);
            v12 += 4;
          }
          while (v24 <= v60);
        }
        else
        {
          unint64_t v61 = v12 + 4;
          do
          {
            unint64_t v12 = v61;
            if (v61 >= (unint64_t)a2) {
              break;
            }
            v61 += 4;
          }
          while (v24 <= *(_DWORD *)v12);
        }
        int v62 = a2;
        if (v12 < (unint64_t)a2)
        {
          int v62 = a2;
          do
          {
            int v63 = *((_DWORD *)v62 - 1);
            v62 -= 4;
          }
          while (v24 > v63);
        }
        if (v12 < (unint64_t)v62)
        {
          int v64 = *(_DWORD *)v12;
          int v65 = *(_DWORD *)v62;
          do
          {
            *(_DWORD *)unint64_t v12 = v65;
            *(_DWORD *)int v62 = v64;
            do
            {
              int v66 = *(_DWORD *)(v12 + 4);
              v12 += 4;
              int v64 = v66;
            }
            while (v24 <= v66);
            do
            {
              int v67 = *((_DWORD *)v62 - 1);
              v62 -= 4;
              int v65 = v67;
            }
            while (v24 > v67);
          }
          while (v12 < (unint64_t)v62);
        }
        __int32 v68 = (int *)(v12 - 4);
        BOOL v5 = v12 - 4 >= (unint64_t)v11;
        BOOL v6 = v12 - 4 == (void)v11;
        if ((_DWORD *)(v12 - 4) != v11) {
          _DWORD *v11 = *v68;
        }
        a5 = 0;
        int *v68 = v24;
      }
      int v18 = *v16;
      int v19 = *(_DWORD *)v12;
      if (*v16 <= *(_DWORD *)v12)
      {
        if (v17 > v18)
        {
          *uint64_t v16 = v17;
          *((_DWORD *)a2 - 1) = v18;
          int v22 = *(_DWORD *)v12;
          if (*v16 > *(_DWORD *)v12)
          {
            *(_DWORD *)unint64_t v12 = *v16;
            *uint64_t v16 = v22;
          }
        }
      }
      else
      {
        if (v17 <= v18)
        {
          *(_DWORD *)unint64_t v12 = v18;
          *uint64_t v16 = v19;
          int v25 = *((_DWORD *)a2 - 1);
          if (v25 <= v19) {
            goto LABEL_24;
          }
          *uint64_t v16 = v25;
        }
        else
        {
          *(_DWORD *)unint64_t v12 = v17;
        }
        *((_DWORD *)a2 - 1) = v19;
      }
LABEL_24:
      unint64_t v26 = v12 + 4 * v15;
      int v29 = *(_DWORD *)(v26 - 4);
      int v27 = (int *)(v26 - 4);
      int v28 = v29;
      int v30 = *(_DWORD *)(v12 + 4);
      int v31 = *((_DWORD *)a2 - 2);
      if (v29 <= v30)
      {
        if (v31 > v28)
        {
          *int v27 = v31;
          *((_DWORD *)a2 - 2) = v28;
          int v32 = *(_DWORD *)(v12 + 4);
          if (*v27 > v32)
          {
            *(_DWORD *)(v12 + 4) = *v27;
            *int v27 = v32;
          }
        }
      }
      else
      {
        if (v31 <= v28)
        {
          *(_DWORD *)(v12 + 4) = v28;
          *int v27 = v30;
          int v34 = *((_DWORD *)a2 - 2);
          if (v34 <= v30) {
            goto LABEL_38;
          }
          *int v27 = v34;
        }
        else
        {
          *(_DWORD *)(v12 + 4) = v31;
        }
        *((_DWORD *)a2 - 2) = v30;
      }
LABEL_38:
      unint64_t v35 = v12 + 4 * v15;
      int v38 = *(_DWORD *)(v35 + 4);
      unint64_t v36 = (_DWORD *)(v35 + 4);
      int v37 = v38;
      int v39 = *(_DWORD *)(v12 + 8);
      int v40 = *((_DWORD *)a2 - 3);
      if (v38 <= v39)
      {
        if (v40 > v37)
        {
          *unint64_t v36 = v40;
          *((_DWORD *)a2 - 3) = v37;
          int v41 = *(_DWORD *)(v12 + 8);
          if (*v36 > v41)
          {
            *(_DWORD *)(v12 + 8) = *v36;
            *unint64_t v36 = v41;
          }
        }
      }
      else
      {
        if (v40 <= v37)
        {
          *(_DWORD *)(v12 + 8) = v37;
          *unint64_t v36 = v39;
          int v42 = *((_DWORD *)a2 - 3);
          if (v42 <= v39) {
            goto LABEL_47;
          }
          *unint64_t v36 = v42;
        }
        else
        {
          *(_DWORD *)(v12 + 8) = v40;
        }
        *((_DWORD *)a2 - 3) = v39;
      }
LABEL_47:
      int v43 = *v16;
      int v44 = *v27;
      int v45 = *v36;
      if (*v16 <= *v27)
      {
        if (v45 <= v43) {
          goto LABEL_55;
        }
        *uint64_t v16 = v45;
        *unint64_t v36 = v43;
        unint64_t v36 = (_DWORD *)(v12 + 4 * (v14 >> 1));
        int v43 = v44;
        if (v45 <= v44)
        {
          int v43 = v45;
          goto LABEL_55;
        }
      }
      else if (v45 <= v43)
      {
        *int v27 = v43;
        *uint64_t v16 = v44;
        int v27 = (int *)(v12 + 4 * (v14 >> 1));
        int v43 = v45;
        if (v45 <= v44)
        {
          int v43 = v44;
          goto LABEL_55;
        }
      }
      *int v27 = v45;
      *unint64_t v36 = v44;
LABEL_55:
      int v46 = *(_DWORD *)v12;
      *(_DWORD *)unint64_t v12 = v43;
      *uint64_t v16 = v46;
      --a4;
      int v24 = *(_DWORD *)v12;
      if ((a5 & 1) == 0) {
        goto LABEL_56;
      }
LABEL_57:
      uint64_t v47 = 0;
      do
      {
        int v48 = *(_DWORD *)(v12 + v47 + 4);
        v47 += 4;
      }
      while (v48 > v24);
      unint64_t v49 = v12 + v47;
      BOOL v50 = a2;
      if (v47 == 4)
      {
        BOOL v50 = a2;
        do
        {
          if (v49 >= (unint64_t)v50) {
            break;
          }
          int v52 = *((_DWORD *)v50 - 1);
          v50 -= 4;
        }
        while (v52 <= v24);
      }
      else
      {
        do
        {
          int v51 = *((_DWORD *)v50 - 1);
          v50 -= 4;
        }
        while (v51 <= v24);
      }
      if (v49 >= (unint64_t)v50)
      {
        uint64_t v58 = (int *)(v49 - 4);
        if (v49 - 4 == v12) {
          goto LABEL_75;
        }
LABEL_74:
        *(_DWORD *)unint64_t v12 = *v58;
        goto LABEL_75;
      }
      int v53 = *(_DWORD *)v50;
      int v54 = (char *)(v12 + v47);
      unint64_t v55 = v50;
      do
      {
        *(_DWORD *)int v54 = v53;
        *(_DWORD *)unint64_t v55 = v48;
        do
        {
          int v56 = *((_DWORD *)v54 + 1);
          v54 += 4;
          int v48 = v56;
        }
        while (v56 > v24);
        do
        {
          int v57 = *((_DWORD *)v55 - 1);
          v55 -= 4;
          int v53 = v57;
        }
        while (v57 <= v24);
      }
      while (v54 < v55);
      uint64_t v58 = (int *)(v54 - 4);
      if (v54 - 4 != (char *)v12) {
        goto LABEL_74;
      }
LABEL_75:
      int *v58 = v24;
      if (v49 < (unint64_t)v50) {
        goto LABEL_78;
      }
      BOOL v59 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::greater<int> &,int *>((int *)v12, v58);
      unint64_t v12 = (unint64_t)(v58 + 1);
      double result = (char *)std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::greater<int> &,int *>(v58 + 1, (int *)a2);
      if (result) {
        break;
      }
      if (!v59)
      {
LABEL_78:
        double result = (char *)std::__introsort<std::_ClassicAlgPolicy,std::greater<int> &,int *,false>(v11, v58, a3, a4, a5 & 1);
        a5 = 0;
        unint64_t v12 = (unint64_t)(v58 + 1);
      }
    }
    a2 = (char *)v58;
    if (!v59) {
      continue;
    }
    return result;
  }
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::greater<int> &,int *>(int *a1, int *a2)
{
  switch(a2 - a1)
  {
    case 0:
    case 1:
      BOOL result = 1;
      break;
    case 2:
      int v17 = *(a2 - 1);
      int v18 = *a1;
      if (v17 <= *a1) {
        goto LABEL_28;
      }
      *a1 = v17;
      *(a2 - 1) = v18;
      BOOL result = 1;
      break;
    case 3:
      int v19 = a1[1];
      int v20 = *(a2 - 1);
      if (v19 <= v20) {
        int v21 = *(a2 - 1);
      }
      else {
        int v21 = a1[1];
      }
      if (v19 >= v20) {
        int v19 = *(a2 - 1);
      }
      *(a2 - 1) = v19;
      a1[1] = v21;
      int v22 = *(a2 - 1);
      if (v22 <= *a1) {
        int v23 = *a1;
      }
      else {
        int v23 = *(a2 - 1);
      }
      if (v22 >= *a1) {
        int v22 = *a1;
      }
      *(a2 - 1) = v22;
      int v25 = *a1;
      int v24 = a1[1];
      if (v23 <= v24) {
        int v25 = a1[1];
      }
      if (v23 < v24) {
        int v24 = v23;
      }
      *a1 = v25;
      a1[1] = v24;
      BOOL result = 1;
      break;
    case 4:
      int v47 = a1[1];
      int v46 = a1[2];
      if (*a1 <= v46) {
        int v48 = a1[2];
      }
      else {
        int v48 = *a1;
      }
      if (*a1 < v46) {
        int v46 = *a1;
      }
      a1[2] = v46;
      *a1 = v48;
      int v49 = *(a2 - 1);
      if (v47 <= v49) {
        int v50 = *(a2 - 1);
      }
      else {
        int v50 = v47;
      }
      if (v47 < v49) {
        int v49 = v47;
      }
      *(a2 - 1) = v49;
      int v51 = *a1;
      if (*a1 <= v50) {
        int v52 = v50;
      }
      else {
        int v52 = *a1;
      }
      if (v51 >= v50) {
        int v51 = v50;
      }
      *a1 = v52;
      a1[1] = v51;
      int v53 = a1[2];
      int v54 = *(a2 - 1);
      if (v53 <= v54) {
        int v55 = *(a2 - 1);
      }
      else {
        int v55 = a1[2];
      }
      if (v53 >= v54) {
        int v53 = *(a2 - 1);
      }
      *(a2 - 1) = v53;
      int v56 = a1[1];
      if (v56 <= v55) {
        int v57 = v55;
      }
      else {
        int v57 = a1[1];
      }
      if (v56 >= v55) {
        int v56 = v55;
      }
      a1[1] = v57;
      a1[2] = v56;
      BOOL result = 1;
      break;
    case 5:
      int v26 = *a1;
      int v27 = a1[1];
      if (*a1 <= v27) {
        int v28 = a1[1];
      }
      else {
        int v28 = *a1;
      }
      if (v26 >= v27) {
        int v26 = a1[1];
      }
      *a1 = v28;
      a1[1] = v26;
      int v29 = a1[3];
      int v30 = *(a2 - 1);
      if (v29 <= v30) {
        int v31 = *(a2 - 1);
      }
      else {
        int v31 = a1[3];
      }
      if (v29 >= v30) {
        int v29 = *(a2 - 1);
      }
      *(a2 - 1) = v29;
      a1[3] = v31;
      int v32 = *(a2 - 1);
      int v33 = a1[2];
      if (v32 <= v33) {
        int v34 = a1[2];
      }
      else {
        int v34 = *(a2 - 1);
      }
      if (v32 >= v33) {
        int v32 = a1[2];
      }
      *(a2 - 1) = v32;
      int v36 = a1[2];
      int v35 = a1[3];
      int v37 = a1[1];
      if (v34 <= v35) {
        int v36 = a1[3];
      }
      if (v34 < v35) {
        int v35 = v34;
      }
      a1[2] = v36;
      a1[3] = v35;
      int v38 = *(a2 - 1);
      if (v37 <= v38) {
        int v39 = *(a2 - 1);
      }
      else {
        int v39 = v37;
      }
      if (v37 < v38) {
        int v38 = v37;
      }
      *(a2 - 1) = v38;
      int v40 = *a1;
      int v42 = a1[2];
      int v41 = a1[3];
      if (v41 <= *a1) {
        int v43 = *a1;
      }
      else {
        int v43 = a1[3];
      }
      if (v41 >= v40) {
        int v41 = *a1;
      }
      if (v43 <= v42) {
        int v40 = a1[2];
      }
      if (v43 < v42) {
        int v42 = v43;
      }
      if (v41 <= v39) {
        int v44 = v39;
      }
      else {
        int v44 = v41;
      }
      if (v41 >= v39) {
        int v41 = v39;
      }
      if (v44 <= v42) {
        int v39 = v42;
      }
      *a1 = v40;
      a1[1] = v39;
      if (v44 >= v42) {
        int v45 = v42;
      }
      else {
        int v45 = v44;
      }
      a1[2] = v45;
      a1[3] = v41;
      BOOL result = 1;
      break;
    default:
      uint64_t v4 = a1 + 2;
      int v3 = a1[2];
      int v6 = *a1;
      int v5 = a1[1];
      if (v5 <= v3) {
        int v7 = a1[2];
      }
      else {
        int v7 = a1[1];
      }
      if (v5 < v3) {
        int v3 = a1[1];
      }
      if (v3 <= v6) {
        int v8 = *a1;
      }
      else {
        int v8 = v3;
      }
      if (v3 >= v6) {
        int v3 = *a1;
      }
      int *v4 = v3;
      if (v8 <= v7) {
        int v9 = v7;
      }
      else {
        int v9 = v6;
      }
      if (v8 >= v7) {
        int v8 = v7;
      }
      *a1 = v9;
      a1[1] = v8;
      int8x16_t v10 = a1 + 3;
      if (a1 + 3 == a2)
      {
LABEL_28:
        BOOL result = 1;
      }
      else
      {
        int v11 = 0;
        uint64_t v12 = 12;
        while (1)
        {
          int v13 = *v10;
          int v14 = *v4;
          if (*v10 > v14) {
            break;
          }
LABEL_27:
          uint64_t v4 = v10;
          v12 += 4;
          if (++v10 == a2) {
            goto LABEL_28;
          }
        }
        uint64_t v15 = v12;
        do
        {
          *(int *)((char *)a1 + v15) = v14;
          uint64_t v16 = v15 - 4;
          if (v15 == 4)
          {
            *a1 = v13;
            if (++v11 != 8) {
              goto LABEL_27;
            }
            goto LABEL_116;
          }
          int v14 = *(int *)((char *)a1 + v15 - 8);
          v15 -= 4;
        }
        while (v13 > v14);
        *(int *)((char *)a1 + v16) = v13;
        if (++v11 != 8) {
          goto LABEL_27;
        }
LABEL_116:
        BOOL result = v10 + 1 == a2;
      }
      break;
  }
  return result;
}

char *std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,std::greater<int> &,int *,int *>(char *a1, char *a2, char *a3)
{
  if (a1 == a2) {
    return a3;
  }
  uint64_t v3 = a2 - a1;
  uint64_t v4 = (a2 - a1) >> 2;
  if (a2 - a1 >= 5 && (unint64_t)v3 >= 8)
  {
    int64_t v34 = (unint64_t)(v4 - 2) >> 1;
    int64_t v35 = v34;
    do
    {
      if (v34 >= v35)
      {
        uint64_t v36 = (2 * v35) | 1;
        int v37 = &a1[4 * v36];
        if (2 * v35 + 2 >= v4)
        {
          int v38 = *(_DWORD *)v37;
          int v40 = &a1[4 * v35];
          int v41 = *(_DWORD *)v40;
          if (*(_DWORD *)v37 <= *(_DWORD *)v40) {
            goto LABEL_78;
          }
        }
        else
        {
          int v38 = *((_DWORD *)v37 + 1);
          BOOL v39 = *(_DWORD *)v37 <= v38;
          if (*(_DWORD *)v37 < v38) {
            int v38 = *(_DWORD *)v37;
          }
          if (!v39)
          {
            v37 += 4;
            uint64_t v36 = 2 * v35 + 2;
          }
          int v40 = &a1[4 * v35];
          int v41 = *(_DWORD *)v40;
          if (v38 <= *(_DWORD *)v40)
          {
LABEL_78:
            while (1)
            {
              *(_DWORD *)int v40 = v38;
              int v40 = v37;
              if (v34 < v36) {
                break;
              }
              uint64_t v43 = (2 * v36) | 1;
              int v37 = &a1[4 * v43];
              uint64_t v36 = 2 * v36 + 2;
              if (v36 < v4)
              {
                int v38 = *(_DWORD *)v37;
                int v42 = *((_DWORD *)v37 + 1);
                if (*(_DWORD *)v37 >= v42) {
                  int v38 = *((_DWORD *)v37 + 1);
                }
                if (*(_DWORD *)v37 <= v42) {
                  uint64_t v36 = v43;
                }
                else {
                  v37 += 4;
                }
                if (v38 > v41) {
                  break;
                }
              }
              else
              {
                int v38 = *(_DWORD *)v37;
                uint64_t v36 = v43;
                if (*(_DWORD *)v37 > v41) {
                  break;
                }
              }
            }
            *(_DWORD *)int v40 = v41;
          }
        }
      }
      BOOL v15 = v35-- <= 0;
    }
    while (!v15);
  }
  int v5 = a2;
  if (a2 != a3)
  {
    if (v3 < 8)
    {
      int v6 = *(_DWORD *)a1;
      int v7 = a2;
      do
      {
        int v8 = *(_DWORD *)v7;
        if (*(_DWORD *)v7 > v6)
        {
          *(_DWORD *)int v7 = v6;
          *(_DWORD *)a1 = v8;
          int v6 = v8;
        }
        v7 += 4;
      }
      while (v7 != a3);
LABEL_37:
      int v5 = a3;
      goto LABEL_38;
    }
    int v9 = a2;
    while (1)
    {
      int v10 = *(_DWORD *)v9;
      if (*(_DWORD *)v9 > *(_DWORD *)a1)
      {
        *(_DWORD *)int v9 = *(_DWORD *)a1;
        *(_DWORD *)a1 = v10;
        int v11 = *((_DWORD *)a1 + 1);
        if (v3 == 8)
        {
          uint64_t v12 = a1 + 4;
          uint64_t v13 = 1;
          if (v11 <= v10) {
            goto LABEL_26;
          }
        }
        else
        {
          int v14 = *((_DWORD *)a1 + 2);
          BOOL v15 = v11 <= v14;
          if (v11 >= v14) {
            int v11 = *((_DWORD *)a1 + 2);
          }
          if (v15) {
            uint64_t v12 = a1 + 4;
          }
          else {
            uint64_t v12 = a1 + 8;
          }
          if (v15) {
            uint64_t v13 = 1;
          }
          else {
            uint64_t v13 = 2;
          }
          if (v11 <= v10)
          {
LABEL_26:
            uint64_t v16 = a1;
            while (1)
            {
              *(_DWORD *)uint64_t v16 = v11;
              uint64_t v16 = v12;
              if ((uint64_t)((unint64_t)(v4 - 2) >> 1) < v13) {
                break;
              }
              uint64_t v18 = (2 * v13) | 1;
              uint64_t v12 = &a1[4 * v18];
              uint64_t v13 = 2 * v13 + 2;
              if (v13 < v4)
              {
                int v11 = *(_DWORD *)v12;
                int v17 = *((_DWORD *)v12 + 1);
                if (*(_DWORD *)v12 >= v17) {
                  int v11 = *((_DWORD *)v12 + 1);
                }
                if (*(_DWORD *)v12 <= v17) {
                  uint64_t v13 = v18;
                }
                else {
                  v12 += 4;
                }
                if (v11 > v10) {
                  break;
                }
              }
              else
              {
                int v11 = *(_DWORD *)v12;
                uint64_t v13 = v18;
                if (*(_DWORD *)v12 > v10) {
                  break;
                }
              }
            }
            *(_DWORD *)uint64_t v16 = v10;
          }
        }
      }
      v9 += 4;
      if (v9 == a3) {
        goto LABEL_37;
      }
    }
  }
LABEL_38:
  if (v3 >= 5)
  {
    uint64_t v19 = (unint64_t)v3 >> 2;
    do
    {
      uint64_t v20 = 0;
      int v21 = *(_DWORD *)a1;
      int64_t v22 = (unint64_t)(v19 - 2) >> 1;
      int v23 = a1;
      do
      {
        while (1)
        {
          int v26 = &v23[4 * v20 + 4];
          uint64_t v27 = (2 * v20) | 1;
          uint64_t v20 = 2 * v20 + 2;
          if (v20 < v19) {
            break;
          }
          uint64_t v20 = v27;
          *(_DWORD *)int v23 = *(_DWORD *)v26;
          int v23 = v26;
          if (v27 > v22) {
            goto LABEL_51;
          }
        }
        int v24 = *(_DWORD *)v26;
        int v25 = *((_DWORD *)v26 + 1);
        if (*(_DWORD *)v26 >= v25) {
          int v24 = *((_DWORD *)v26 + 1);
        }
        if (*(_DWORD *)v26 <= v25) {
          uint64_t v20 = v27;
        }
        else {
          v26 += 4;
        }
        *(_DWORD *)int v23 = v24;
        int v23 = v26;
      }
      while (v20 <= v22);
LABEL_51:
      a2 -= 4;
      if (v26 == a2)
      {
        *(_DWORD *)int v26 = v21;
      }
      else
      {
        *(_DWORD *)int v26 = *(_DWORD *)a2;
        *(_DWORD *)a2 = v21;
        uint64_t v28 = v26 - a1 + 4;
        if (v28 >= 5)
        {
          unint64_t v29 = (((unint64_t)v28 >> 2) - 2) >> 1;
          int v30 = &a1[4 * v29];
          int v31 = *(_DWORD *)v30;
          int v32 = *(_DWORD *)v26;
          if (*(_DWORD *)v30 > *(_DWORD *)v26)
          {
            do
            {
              *(_DWORD *)int v26 = v31;
              int v26 = v30;
              if (!v29) {
                break;
              }
              unint64_t v29 = (v29 - 1) >> 1;
              int v30 = &a1[4 * v29];
              int v31 = *(_DWORD *)v30;
            }
            while (*(_DWORD *)v30 > v32);
            *(_DWORD *)int v26 = v32;
          }
        }
      }
      BOOL v15 = v19-- <= 2;
    }
    while (!v15);
  }
  return v5;
}

uint64_t operations_research::RationalApproximation(operations_research *this, double a2, double a3)
{
  double v3 = fabs(a2);
  uint64_t v4 = vcvtmd_s64_f64(v3);
  if (v4 < 0)
  {
    if (a2 >= 0.0) {
      return 1;
    }
    else {
      return -1;
    }
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 1;
    uint64_t v7 = v4;
    uint64_t v8 = 1;
    double v9 = v3;
    do
    {
      uint64_t v10 = v4;
      uint64_t v11 = v6;
      if (vabdd_f64(v3 * (double)v6, (double)v4) <= v3 * (double)v6 * a3) {
        break;
      }
      double v9 = 1.0 / (v9 - (double)v7);
      uint64_t v7 = vcvtmd_s64_f64(v9);
      uint64_t v4 = v8 + v4 * v7;
      if (v4 < 0) {
        break;
      }
      uint64_t v6 = v5 + v6 * v7;
      uint64_t v8 = v10;
      uint64_t v5 = v11;
    }
    while ((v6 & 0x8000000000000000) == 0);
    if (a2 >= 0.0) {
      return v10;
    }
    else {
      return -v10;
    }
  }
}

BOOL operations_research::IntervalsAreSortedAndNonAdjacent(uint64_t *a1, unint64_t a2)
{
  if (a2 < 2)
  {
    return !a2 || a1[2 * a2 - 2] <= a1[2 * a2 - 1];
  }
  else
  {
    unint64_t v2 = a1 + 2;
    uint64_t v3 = *a1;
    unint64_t v4 = a2 - 1;
    while (1)
    {
      uint64_t v5 = *(v2 - 1);
      if (v3 > v5) {
        return 0;
      }
      uint64_t v3 = *v2;
      uint64_t v6 = v5 + 1;
      if (v5 < *v2)
      {
        BOOL v8 = __OFSUB__(v6, v3);
        BOOL v7 = v6 - v3 < 0;
      }
      else
      {
        BOOL v8 = 0;
        BOOL v7 = 0;
      }
      if (v7 == v8) {
        return 0;
      }
      v2 += 2;
      if (!--v4) {
        return !a2 || a1[2 * a2 - 2] <= a1[2 * a2 - 1];
      }
    }
  }
}

void *operations_research::operator<<(void *a1, unint64_t *a2)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  memset(&v19, 0, sizeof(v19));
  unint64_t v3 = *a2;
  uint64_t v6 = (uint64_t *)a2[1];
  unint64_t v4 = (uint64_t *)(a2 + 1);
  uint64_t v5 = v6;
  if (v3) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v4;
  }
  if (v3 >= 2)
  {
    uint64_t v11 = &v7[2 * (v3 >> 1)];
    do
    {
      uint64_t v12 = v7[1];
      if (*v7 == v12)
      {
        uint64_t v22 = *v7;
        int v23 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
        absl::lts_2020_02_25::str_format_internal::FormatPack("[%d]", 4, (uint64_t)&v22, 1, (uint64_t)__p);
      }
      else
      {
        uint64_t v22 = *v7;
        int v23 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
        uint64_t v24 = v12;
        int v25 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
        absl::lts_2020_02_25::str_format_internal::FormatPack("[%d,%d]", 7, (uint64_t)&v22, 2, (uint64_t)__p);
      }
      if ((v21 & 0x80u) == 0) {
        uint64_t v13 = __p;
      }
      else {
        uint64_t v13 = (void **)__p[0];
      }
      if ((v21 & 0x80u) == 0) {
        std::string::size_type v14 = v21;
      }
      else {
        std::string::size_type v14 = (std::string::size_type)__p[1];
      }
      std::string::append(&v19, (const std::string::value_type *)v13, v14);
      if ((char)v21 < 0) {
        operator delete(__p[0]);
      }
      v7 += 2;
    }
    while (v7 != v11);
    unsigned int v10 = HIBYTE(v19.__r_.__value_.__r.__words[2]);
    std::string::size_type size = v19.__r_.__value_.__l.__size_;
    std::string::size_type v9 = v19.__r_.__value_.__r.__words[0];
  }
  else
  {
    std::string::size_type size = 0;
    std::string::size_type v9 = 0;
    unsigned int v10 = 0;
  }
  if ((v10 & 0x80u) == 0) {
    BOOL v15 = &v19;
  }
  else {
    BOOL v15 = (std::string *)v9;
  }
  if ((v10 & 0x80u) == 0) {
    uint64_t v16 = v10;
  }
  else {
    uint64_t v16 = size;
  }
  int v17 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)v15, v16);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return v17;
}

void sub_23CDB3660(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a15 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void *operations_research::Domain::Domain(void *this, uint64_t a2)
{
  this[1] = a2;
  this[2] = a2;
  *this = 2;
  return this;
}

void *operations_research::Domain::Domain(void *this, uint64_t a2, uint64_t a3)
{
  this[1] = a2;
  this[2] = a3;
  *this = 2 * (a2 <= a3);
  return this;
}

double operations_research::Domain::AllValues@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 16) = 0x7FFFFFFFFFFFFFFFLL;
  *(void *)&double result = 2;
  *(_OWORD *)a1 = xmmword_23CE90DC0;
  return result;
}

void operations_research::Domain::FromValues(int64_t **a1@<X0>, unint64_t *a2@<X8>)
{
  std::__sort<std::__less<long long,long long> &,long long *>();
  *a2 = 0;
  unint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    unint64_t v6 = 0;
    BOOL v7 = (int64x2_t *)(a2 + 1);
    do
    {
      while (1)
      {
        int64_t v8 = *v4;
        if (v6 >= 2) {
          break;
        }
        unint64_t v9 = 0;
        uint64_t v10 = v6;
LABEL_6:
        uint64_t v11 = a2[2];
        if (v10) {
          uint64_t v12 = (int64x2_t *)a2[1];
        }
        else {
          uint64_t v12 = v7;
        }
        if (!v10) {
          uint64_t v11 = 1;
        }
        if (v9 == v11)
        {
          __p = (void *)a2[1];
          if (v9 >> 59) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v13 = a2;
          std::string::size_type v14 = (int64x2_t *)operator new(32 * v9);
          v14[v9] = vdupq_n_s64(v8);
          BOOL v15 = v14;
          unint64_t v16 = v9;
          if (v6 >= 2)
          {
            do
            {
              int64x2_t v17 = *v12++;
              *v15++ = v17;
              --v16;
            }
            while (v16);
          }
          if (v10) {
            operator delete(__p);
          }
          v13[1] = (unint64_t)v14;
          v13[2] = 2 * v9;
          a2 = v13;
          unint64_t v6 = (v6 | 1) + 2;
          *uint64_t v13 = v6;
          if (++v4 == v5) {
            return;
          }
        }
        else
        {
          v12[v9] = vdupq_n_s64(v8);
          v6 += 2;
          *a2 = v6;
          if (++v4 == v5) {
            return;
          }
        }
      }
      unint64_t v9 = v6 >> 1;
      if (v6)
      {
        std::string v19 = (uint64_t *)v7->i64[0];
        unint64_t v18 = v9 - 1;
        if (v8 > *(void *)(v7->i64[0] + 16 * (v9 - 1) + 8) + 1)
        {
          uint64_t v10 = 1;
          goto LABEL_6;
        }
      }
      else
      {
        unint64_t v18 = v9 - 1;
        std::string v19 = (uint64_t *)v7;
        if (v8 > v7[v9 - 1].i64[1] + 1)
        {
          uint64_t v10 = 0;
          goto LABEL_6;
        }
      }
      v19[2 * v18 + 1] = v8;
      ++v4;
    }
    while (v4 != v5);
  }
}

void sub_23CDB38A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  if (v9) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void operations_research::anonymous namespace'::UnionOfSortedIntervals(unint64_t *a1)
{
  unint64_t v3 = (unint64_t **)(a1 + 1);
  unint64_t v2 = *a1;
  unint64_t v4 = a1 + 1;
  if (*a1) {
    unint64_t v4 = *v3;
  }
  if (v2 >= 2)
  {
    int v5 = 0;
    uint64_t v6 = 16 * (v2 >> 1);
    while (1)
    {
      while (v5 <= 0)
      {
        uint64_t v11 = *a1 & 1;
LABEL_19:
        BOOL v15 = a1 + 1;
        if (v11) {
          BOOL v15 = *v3;
        }
        uint64_t v16 = v5++;
        long long v17 = *(_OWORD *)v4;
        v4 += 2;
        *(_OWORD *)&v15[2 * v16] = v17;
        v6 -= 16;
        if (!v6) {
          goto LABEL_22;
        }
      }
      uint64_t v9 = a1 + 1;
      if (*a1) {
        uint64_t v9 = *v3;
      }
      uint64_t v10 = (v5 - 1);
      uint64_t v11 = *a1 & 1;
      unint64_t v12 = v9[2 * v10 + 1];
      if (((v12 + 1) & ~v12 & 0x8000000000000000) == 0) {
        uint64_t v13 = v12 + 1;
      }
      else {
        uint64_t v13 = (v12 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
      }
      if ((uint64_t)*v4 > v13) {
        goto LABEL_19;
      }
      std::string::size_type v14 = a1 + 1;
      if (v11) {
        std::string::size_type v14 = *v3;
      }
      BOOL v7 = &v14[2 * v10];
      int64_t v8 = v4[1];
      if (v8 <= (uint64_t)v7[1]) {
        int64_t v8 = v7[1];
      }
      v7[1] = v8;
      v4 += 2;
      v6 -= 16;
      if (!v6) {
        goto LABEL_22;
      }
    }
  }
  int v5 = 0;
LABEL_22:
  absl::lts_2020_02_25::inlined_vector_internal::Storage<operations_research::ClosedInterval,1ul,std::allocator<operations_research::ClosedInterval>>::Resize<absl::lts_2020_02_25::inlined_vector_internal::DefaultValueAdapter<std::allocator<operations_research::ClosedInterval>>>(a1, v5);
  unint64_t v18 = *a1;
  if (*a1)
  {
    unint64_t v19 = v18 >> 1;
    if (v18 >> 1 != a1[2])
    {
      uint64_t v20 = (char *)a1[1];
      if (v18 < 4)
      {
        if (v18 <= 1)
        {
          operator delete((void *)a1[1]);
          goto LABEL_35;
        }
        unsigned __int8 v21 = 0;
        unint64_t v22 = 0;
      }
      else
      {
        if (v18 >> 61) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        unint64_t v3 = (unint64_t **)operator new(16 * v19);
        unsigned __int8 v21 = v3;
        unint64_t v22 = v19;
      }
      uint64_t v23 = 0;
      do
      {
        *(_OWORD *)&v3[v23] = *(_OWORD *)&v20[v23 * 8];
        v23 += 2;
        --v19;
      }
      while (v19);
      operator delete(v20);
      if (v21)
      {
        a1[1] = (unint64_t)v21;
        a1[2] = v22;
        return;
      }
LABEL_35:
      *a1 &= ~1uLL;
    }
  }
}

void operations_research::Domain::FromFlatSpanOfIntervals(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>, __n128 a4@<Q0>)
{
  unint64_t v26 = a2;
  *a3 = 0;
  int v5 = (__n128 **)(a3 + 1);
  int v25 = (__n128 **)(a3 + 1);
  if (a2 < 4)
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0;
    if (!a2) {
      goto LABEL_20;
    }
  }
  else
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    unint64_t v6 = a2 >> 1;
    a3[1] = (unint64_t)operator new(16 * (a2 >> 1));
    a3[2] = v6;
    uint64_t v7 = 1;
    *a3 = 1;
    a2 = v26;
  }
  unint64_t v8 = 0;
  unint64_t v9 = v7;
  do
  {
    while (1)
    {
      unint64_t v11 = *(void *)(a1 + 8 * v8);
      unint64_t v12 = *(void *)(a1 + ((8 * v8) | 8));
      uint64_t v13 = (void *)a3[1];
      std::string::size_type v14 = (v9 & 1) != 0 ? (__n128 *)a3[1] : (__n128 *)v5;
      unint64_t v15 = (v9 & 1) != 0 ? a3[2] : 1;
      if (v9 >> 1 == v15) {
        break;
      }
      uint64_t v10 = &v14[v9 >> 1];
      v10->n128_u64[0] = v11;
      v10->n128_u64[1] = v12;
      v9 += 2;
      *a3 = v9;
      v8 += 2;
      if (a2 <= v8) {
        goto LABEL_20;
      }
    }
    if (((v15 >> 59) & 0xF) != 0) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v16 = operator new(32 * v15);
    long long v17 = v16;
    unint64_t v18 = (unint64_t *)&v16[v15];
    *unint64_t v18 = v11;
    v18[1] = v12;
    if (v9 >= 2)
    {
      unint64_t v19 = (__n128 *)v16;
      unint64_t v20 = v15;
      do
      {
        __n128 v21 = *v14++;
        a4 = v21;
        *v19++ = v21;
        --v20;
      }
      while (v20);
    }
    if (v9) {
      operator delete(v13);
    }
    a3[1] = (unint64_t)v17;
    a3[2] = 2 * v15;
    int v5 = v25;
    a2 = v26;
    unint64_t v9 = (v9 | 1) + 2;
    *a3 = v9;
    v8 += 2;
  }
  while (v26 > v8);
LABEL_20:
  if (v9) {
    unint64_t v22 = *v5;
  }
  else {
    unint64_t v22 = (__n128 *)v5;
  }
  unint64_t v23 = 126 - 2 * __clz(v9 >> 1);
  if (v9 >= 2) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 0;
  }
  std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *,false>(v22, &v22[v9 >> 1], (uint64_t)&v28, v24, 1, a4);
}

void sub_23CDB3C20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **a9)
{
  if (*v9) {
    operator delete(*a9);
  }
  _Unwind_Resume(exception_object);
}

BOOL operations_research::Domain::IsEmpty(operations_research::Domain *this)
{
  return *(void *)this < 2uLL;
}

BOOL operations_research::Domain::IsFixed(operations_research::Domain *this, const char *a2)
{
  unint64_t v2 = *(void *)this;
  if (*(void *)this <= 1uLL) {
  unint64_t v3 = (void *)((char *)this + 8);
  }
  if (v2) {
    unint64_t v3 = (void *)*v3;
  }
  return *v3 == v3[2 * (v2 >> 1) - 1];
}

uint64_t operations_research::Domain::Min(operations_research::Domain *this, const char *a2)
{
  if (*(void *)this <= 1uLL) {
  unint64_t v2 = (char *)this + 8;
  }
  if (*(void *)this) {
    unint64_t v2 = *(char **)v2;
  }
  return *(void *)v2;
}

uint64_t operations_research::Domain::Max(operations_research::Domain *this, const char *a2)
{
  unint64_t v2 = *(void *)this;
  if (*(void *)this <= 1uLL) {
  unint64_t v3 = (void *)((char *)this + 8);
  }
  if (v2) {
    unint64_t v3 = (void *)*v3;
  }
  return v3[2 * (v2 >> 1) - 1];
}

unint64_t operations_research::Domain::Size(operations_research::Domain *this)
{
  unint64_t v3 = *(void *)this;
  uint64_t v1 = (unint64_t *)((char *)this + 8);
  unint64_t v2 = v3;
  if (v3) {
    uint64_t v1 = (unint64_t *)*v1;
  }
  unint64_t v4 = v2 >> 1;
  BOOL v5 = __OFSUB__(v2, 2);
  if (v2 >= 2)
  {
    unint64_t v7 = 0;
    unint64_t v8 = &v1[2 * v4];
    do
    {
      unint64_t v9 = *v1;
      unint64_t v10 = v1[1];
      v1 += 2;
      uint64_t v11 = v10 - v9;
      unint64_t v12 = (v10 - v9) ^ v10;
      unint64_t v13 = v10 ^ v9;
      uint64_t v14 = (v10 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
      if (((v12 & v13 & 0x8000000000000000) != 0) != v5) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = v11;
      }
      unint64_t v16 = v15 + v7;
      unint64_t v17 = (v15 + v7) ^ v7;
      unint64_t v18 = (v15 + v7) ^ v15;
      unint64_t v7 = (v7 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
      if (((v17 & v18 & 0x8000000000000000) != 0) == v5) {
        unint64_t v7 = v16;
      }
      BOOL v5 = __OFSUB__(v1, v8);
    }
    while (v1 != v8);
    unint64_t v19 = v7 + v4;
    if (((v19 & ~v7 & 0x8000000000000000) != 0) != __OFSUB__(v1, v8)) {
      return (v7 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      return v19;
    }
  }
  else if (__OFSUB__(v2, 2))
  {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    return v2 >> 1;
  }
}

BOOL operations_research::Domain::Contains(operations_research::Domain *this, uint64_t a2)
{
  unint64_t v4 = *(void *)this;
  unint64_t v2 = (void *)((char *)this + 8);
  unint64_t v3 = v4;
  BOOL v5 = v2;
  if (v4) {
    BOOL v5 = (void *)*v2;
  }
  unint64_t v6 = v3 >> 1;
  if (v3 >= 2)
  {
    do
    {
      unint64_t v7 = v6 >> 1;
      unint64_t v8 = &v5[2 * (v6 >> 1)];
      uint64_t v10 = *v8;
      unint64_t v9 = v8 + 2;
      v6 += ~(v6 >> 1);
      if (v10 > a2) {
        unint64_t v6 = v7;
      }
      else {
        BOOL v5 = v9;
      }
    }
    while (v6);
  }
  else
  {
    v5 += 2 * v6;
  }
  if (v3) {
    unint64_t v2 = (void *)*v2;
  }
  return v5 != v2 && *(v5 - 1) >= a2;
}

uint64_t operations_research::Domain::IsIncludedIn(operations_research::Domain *this, const operations_research::Domain *a2)
{
  unint64_t v4 = *(void *)this;
  unint64_t v2 = (void *)((char *)this + 8);
  unint64_t v3 = v4;
  if (v4) {
    unint64_t v2 = (void *)*v2;
  }
  if (v3 < 2) {
    return 1;
  }
  int v6 = 0;
  unint64_t v7 = &v2[2 * (v3 >> 1)];
  uint64_t v8 = *(void *)a2;
  unint64_t v9 = *(void *)a2 >> 1;
  unint64_t v12 = (char *)*((void *)a2 + 1);
  uint64_t v10 = (char *)a2 + 8;
  uint64_t v11 = v12;
  if (v8) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = v10;
  }
  while (1)
  {
    unint64_t v14 = v6;
    if (v9 > v6)
    {
      uint64_t v15 = &v13[16 * v6 + 8];
      do
      {
        uint64_t v16 = *(void *)v15;
        v15 += 16;
        if (v2[1] <= v16) {
          break;
        }
        ++v14;
      }
      while (v9 > v14);
      int v6 = v14;
    }
    if (v9 == v14 || *v2 < *(void *)&v13[16 * v14]) {
      break;
    }
    v2 += 2;
    if (v2 == v7) {
      return 1;
    }
  }
  return 0;
}

void operations_research::Domain::Complement(operations_research::Domain *this@<X0>, unint64_t *a2@<X8>)
{
  *a2 = 0;
  int v32 = (long long *)(a2 + 1);
  unint64_t v4 = *(void *)this;
  uint64_t v5 = *(void *)this >> 1;
  if (*(void *)this < 2uLL)
  {
    unint64_t v6 = 0;
    unint64_t v7 = (void *)((char *)this + 8);
    if (v4) {
LABEL_4:
    }
      unint64_t v7 = (void *)*v7;
  }
  else
  {
    if (v4 >= 0x1FFFFFFFFFFFFFFELL) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    a2[1] = (unint64_t)operator new(16 * (v5 + 1));
    a2[2] = v5 + 1;
    unint64_t v6 = 1;
    *a2 = 1;
    unint64_t v7 = (void *)((char *)this + 8);
    if (v4) {
      goto LABEL_4;
    }
  }
  if (v4 >= 2)
  {
    unint64_t v9 = &v7[2 * v5];
    unint64_t v8 = 0x8000000000000000;
    while (1)
    {
      if (*v7 != 0x8000000000000000)
      {
        uint64_t v10 = *v7 - 1;
        uint64_t v11 = (void *)a2[1];
        if (v6) {
          unint64_t v12 = (long long *)a2[1];
        }
        else {
          unint64_t v12 = v32;
        }
        if (v6) {
          unint64_t v13 = a2[2];
        }
        else {
          unint64_t v13 = 1;
        }
        if (v6 >> 1 == v13)
        {
          if (((v13 >> 59) & 0xF) != 0) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          unint64_t v14 = operator new(32 * v13);
          uint64_t v15 = v14;
          uint64_t v16 = (unint64_t *)&v14[v13];
          *uint64_t v16 = v8;
          v16[1] = v10;
          if (v6 >= 2)
          {
            unint64_t v17 = v14;
            unint64_t v18 = v13;
            do
            {
              long long v19 = *v12++;
              *v17++ = v19;
              --v18;
            }
            while (v18);
          }
          if (v6) {
            operator delete(v11);
          }
          a2[1] = (unint64_t)v15;
          a2[2] = 2 * v13;
          v6 |= 1uLL;
        }
        else
        {
          unint64_t v20 = (unint64_t *)&v12[v6 >> 1];
          unint64_t *v20 = v8;
          v20[1] = v10;
        }
        v6 += 2;
        *a2 = v6;
      }
      uint64_t v21 = v7[1];
      if (v21 == 0x7FFFFFFFFFFFFFFFLL) {
        break;
      }
      unint64_t v8 = v21 + 1;
      v7 += 2;
      if (v7 == v9) {
        goto LABEL_27;
      }
    }
  }
  else
  {
    unint64_t v8 = 0x8000000000000000;
LABEL_27:
    unint64_t v22 = (void *)a2[1];
    if (v6) {
      unint64_t v23 = (long long *)a2[1];
    }
    else {
      unint64_t v23 = v32;
    }
    if (v6) {
      unint64_t v24 = a2[2];
    }
    else {
      unint64_t v24 = 1;
    }
    if (v6 >> 1 == v24)
    {
      if (((v24 >> 59) & 0xF) != 0) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      int v25 = operator new(32 * v24);
      unint64_t v26 = v25;
      uint64_t v27 = (unint64_t *)&v25[v24];
      *uint64_t v27 = v8;
      v27[1] = 0x7FFFFFFFFFFFFFFFLL;
      if (v6 >= 2)
      {
        char v28 = v25;
        unint64_t v29 = v24;
        do
        {
          long long v30 = *v23++;
          *v28++ = v30;
          --v29;
        }
        while (v29);
      }
      if (v6) {
        operator delete(v22);
      }
      a2[1] = (unint64_t)v26;
      a2[2] = 2 * v24;
      v6 |= 1uLL;
    }
    else
    {
      int v31 = (unint64_t *)&v23[v6 >> 1];
      *int v31 = v8;
      v31[1] = 0x7FFFFFFFFFFFFFFFLL;
    }
    *a2 = v6 + 2;
  }
}

void sub_23CDB4100(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10)
{
  if (v10) {
    operator delete(*a10);
  }
  _Unwind_Resume(exception_object);
}

unint64_t *operations_research::Domain::Negation@<X0>(operations_research::Domain *this@<X0>, const char *a2@<X1>, unint64_t *a3@<X8>)
{
  *a3 = 0;
  unint64_t v4 = *(void *)this;
  if (*(void *)this)
  {
    uint64_t v5 = (long long *)*((void *)this + 1);
    unint64_t v6 = v4 >> 1;
    if (v4 < 4)
    {
      if (v4 < 2)
      {
        unint64_t v8 = 0;
LABEL_11:
        *a3 = v8 + (v4 & 0xFFFFFFFFFFFFFFFELL);
        return operations_research::Domain::NegateInPlace(a3, a2);
      }
      unint64_t v7 = a3 + 1;
    }
    else
    {
      if (v4 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      unint64_t v7 = operator new(16 * v6);
      a3[1] = (unint64_t)v7;
      a3[2] = v6;
      *a3 = 1;
    }
    do
    {
      long long v9 = *v5++;
      *v7++ = v9;
      --v6;
    }
    while (v6);
    unint64_t v8 = *a3;
    goto LABEL_11;
  }
  *a3 = v4;
  *(_OWORD *)(a3 + 1) = *(_OWORD *)((char *)this + 8);
  return operations_research::Domain::NegateInPlace(a3, a2);
}

void sub_23CDB41D8(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)v1) {
    operator delete(*(void **)(v1 + 8));
  }
  _Unwind_Resume(exception_object);
}

unint64_t *operations_research::Domain::NegateInPlace(unint64_t *this, const char *a2)
{
  unint64_t v2 = *this;
  if (*this < 2) {
    return this;
  }
  unint64_t v3 = (int8x16_t *)(this + 1);
  unint64_t v4 = (int8x16_t *)(this + 1);
  if (v2) {
    unint64_t v4 = (int8x16_t *)v3->i64[0];
  }
  uint64_t v5 = &v4[(v2 >> 1) - 1];
  if (v5 > v4)
  {
    unint64_t v6 = (unint64_t)&v4[1];
    do
    {
      int8x16_t v22 = *(int8x16_t *)(v6 - 16);
      *(int8x16_t *)(v6 - 16) = *v5;
      *v5-- = v22;
      BOOL v7 = v6 >= (unint64_t)v5;
      v6 += 16;
    }
    while (!v7);
    unint64_t v2 = *this;
    if (*this <= 1) {
  }
    }
  unint64_t v8 = this + 1;
  if (v2) {
    unint64_t v8 = (void *)v3->i64[0];
  }
  uint64_t v9 = v8[2 * (v2 >> 1) - 1];
  unint64_t v10 = v2;
  if (v9 != 0x8000000000000000)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_16:
    unint64_t v3 = (int8x16_t *)v3->i64[0];
    if (v10 < 2) {
      return this;
    }
    goto LABEL_17;
  }
  unint64_t v10 = v2 - 2;
  *this = v2 - 2;
  if (v2) {
    goto LABEL_16;
  }
LABEL_13:
  if (v10 < 2) {
    return this;
  }
LABEL_17:
  unint64_t v11 = v10 >> 1;
  unint64_t v12 = v3;
  if (((v11 - 1) & 0xFFFFFFFFFFFFFFFLL) == 0) {
    goto LABEL_21;
  }
  uint64_t v13 = ((v11 - 1) & 0xFFFFFFFFFFFFFFFLL) + 1;
  int64x2_t v14 = vdupq_n_s64(0x8000000000000000);
  unint64_t v12 = &v3[v13 & 0x1FFFFFFFFFFFFFFELL];
  int8x16_t v15 = (int8x16_t)vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
  uint64_t v16 = v13 & 0x1FFFFFFFFFFFFFFELL;
  unint64_t v17 = (double *)v3;
  do
  {
    float64x2x2_t v23 = vld2q_f64(v17);
    v24.val[0] = (float64x2_t)vbslq_s8((int8x16_t)vceqq_s64((int64x2_t)v23.val[1], v14), v15, (int8x16_t)vnegq_s64((int64x2_t)v23.val[1]));
    v24.val[1] = (float64x2_t)vbslq_s8((int8x16_t)vceqq_s64((int64x2_t)v23.val[0], v14), v15, (int8x16_t)vnegq_s64((int64x2_t)v23.val[0]));
    vst2q_f64(v17, v24);
    v17 += 4;
    v16 -= 2;
  }
  while (v16);
  if (v13 != (v13 & 0x1FFFFFFFFFFFFFFELL))
  {
LABEL_21:
    unint64_t v18 = &v3[v11];
    int64x2_t v19 = vdupq_n_s64(0x8000000000000000);
    int8x16_t v20 = (int8x16_t)vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    do
    {
      int64x2_t v21 = (int64x2_t)vextq_s8(*v12, *v12, 8uLL);
      *v12++ = vbslq_s8((int8x16_t)vceqq_s64(v21, v19), v20, (int8x16_t)vnegq_s64(v21));
    }
    while (v12 != v18);
  }
  return this;
}

void *operations_research::Domain::IntersectionWith@<X0>(void *this@<X0>, const operations_research::Domain *a2@<X1>, unint64_t *a3@<X8>)
{
  *a3 = 0;
  uint64_t v3 = *this;
  if (*this >= 2uLL)
  {
    unint64_t v4 = a2;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    unint64_t v10 = this + 1;
    unint64_t v11 = (void *)((char *)a2 + 8);
    unint64_t v12 = (long long *)(a3 + 1);
    int v72 = this;
    int v76 = v4;
    do
    {
      uint64_t v14 = *(void *)v4;
      if ((unint64_t)(int)v7 >= *(void *)v4 >> 1) {
        return this;
      }
      int8x16_t v15 = v10;
      if (v3) {
        int8x16_t v15 = (void *)*v10;
      }
      uint64_t v16 = v15[2 * v6];
      if (v14)
      {
        unint64_t v17 = (void *)*v11;
        if (v16 > *(void *)(*v11 + 16 * (int)v7))
        {
LABEL_40:
          int v37 = v10;
          if (v3) {
            int v37 = (void *)*v10;
          }
          if (v17[2 * (int)v7 + 1] < v37[2 * v6])
          {
            uint64_t v7 = (v7 + 1);
            goto LABEL_7;
          }
          if (v14) {
            int v38 = (void *)*v11;
          }
          else {
            int v38 = v11;
          }
          uint64_t v39 = v38[2 * (int)v7 + 1];
          if (v3)
          {
            int v41 = (void *)*v10;
            uint64_t v40 = *(void *)(*v10 + 16 * v6 + 8);
            if (v39 <= v40)
            {
LABEL_49:
              uint64_t v42 = v41[2 * v6];
              uint64_t v43 = a3[2];
              if (v9) {
                int v44 = (long long *)a3[1];
              }
              else {
                int v44 = v12;
              }
              if ((v9 & 1) == 0) {
                uint64_t v43 = 1;
              }
              unint64_t v45 = v9 >> 1;
              if (v9 >> 1 == v43)
              {
                uint64_t v78 = v8;
                unint64_t v80 = v9 & 1;
                __pa = (void *)a3[1];
                if (v9 >> 60) {
                  std::__throw_bad_array_new_length[abi:ne180100]();
                }
                int v46 = v7;
                int v47 = operator new(32 * v45);
                int v48 = v47;
                int v49 = &v47[v45];
                *int v49 = v42;
                v49[1] = v39;
                if (v9 >= 2)
                {
                  int v50 = v47;
                  do
                  {
                    long long v51 = *v44++;
                    *v50++ = v51;
                    --v45;
                  }
                  while (v45);
                }
LABEL_71:
                if (v80) {
                  operator delete(__pa);
                }
                a3[1] = (unint64_t)v48;
                a3[2] = v9 & 0xFFFFFFFFFFFFFFFELL;
                v9 |= 1uLL;
                unint64_t v12 = (long long *)(a3 + 1);
                this = v72;
                LODWORD(v7) = v46;
                unint64_t v4 = v76;
                uint64_t v8 = v78;
              }
              else
              {
                int v69 = &v44[v45];
                *(void *)int v69 = v42;
                *((void *)v69 + 1) = v39;
              }
              goto LABEL_90;
            }
          }
          else
          {
            uint64_t v40 = v10[2 * v6 + 1];
            int v41 = v10;
            if (v39 <= v40) {
              goto LABEL_49;
            }
          }
          uint64_t v59 = v41[2 * v6];
          uint64_t v60 = a3[2];
          if (v9) {
            unint64_t v61 = (long long *)a3[1];
          }
          else {
            unint64_t v61 = v12;
          }
          if ((v9 & 1) == 0) {
            uint64_t v60 = 1;
          }
          unint64_t v62 = v9 >> 1;
          if (v9 >> 1 == v60)
          {
            int v79 = v8;
            __pb = (void *)a3[1];
            if (v9 >> 60) {
              std::__throw_bad_array_new_length[abi:ne180100]();
            }
            uint64_t v63 = v7;
            int v64 = operator new(32 * v62);
            int v65 = v64;
            int v66 = &v64[v62];
            *int v66 = v59;
            v66[1] = v40;
            if (v9 >= 2)
            {
              int v67 = v64;
              do
              {
                long long v68 = *v61++;
                *v67++ = v68;
                --v62;
              }
              while (v62);
            }
            if (v9) {
              operator delete(__pb);
            }
            a3[1] = (unint64_t)v65;
            a3[2] = v9 & 0xFFFFFFFFFFFFFFFELL;
            v9 |= 1uLL;
            unint64_t v12 = (long long *)(a3 + 1);
            this = v72;
            uint64_t v7 = v63;
            unint64_t v4 = v76;
            LODWORD(v8) = v79;
          }
          else
          {
            int v71 = &v61[v62];
            *(void *)int v71 = v59;
            *((void *)v71 + 1) = v40;
          }
          goto LABEL_5;
        }
      }
      else
      {
        unint64_t v17 = v11;
        if (v16 > v11[2 * (int)v7]) {
          goto LABEL_40;
        }
      }
      unint64_t v18 = v10;
      if (v3) {
        unint64_t v18 = (void *)*v10;
      }
      int64x2_t v19 = (void *)*v11;
      if (v14) {
        int8x16_t v20 = (void *)*v11;
      }
      else {
        int8x16_t v20 = v11;
      }
      if (v18[2 * v6 + 1] < v20[2 * (int)v7]) {
        goto LABEL_6;
      }
      int64x2_t v21 = v10;
      if (v3) {
        int64x2_t v21 = (void *)*v10;
      }
      uint64_t v22 = v21[2 * v6 + 1];
      unint64_t v23 = v9 >> 1;
      if (v14)
      {
        uint64_t v24 = v19[2 * (int)v7 + 1];
        if (v22 > v24)
        {
LABEL_61:
          uint64_t v52 = v19[2 * (int)v7];
          uint64_t v53 = a3[2];
          if (v9) {
            int v54 = (long long *)a3[1];
          }
          else {
            int v54 = v12;
          }
          if ((v9 & 1) == 0) {
            uint64_t v53 = 1;
          }
          if (v23 == v53)
          {
            uint64_t v78 = v8;
            unint64_t v80 = v9 & 1;
            __pa = (void *)a3[1];
            if (v9 >> 60) {
              std::__throw_bad_array_new_length[abi:ne180100]();
            }
            int v46 = v7;
            int v55 = operator new(32 * v23);
            int v48 = v55;
            int v56 = &v55[v23];
            void *v56 = v52;
            v56[1] = v24;
            if (v9 >= 2)
            {
              int v57 = v55;
              do
              {
                long long v58 = *v54++;
                *v57++ = v58;
                --v23;
              }
              while (v23);
            }
            goto LABEL_71;
          }
          int v70 = &v54[v23];
          *(void *)int v70 = v52;
          *((void *)v70 + 1) = v24;
LABEL_90:
          v9 += 2;
          *a3 = v9;
          uint64_t v7 = (v7 + 1);
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v24 = v11[2 * (int)v7 + 1];
        int64x2_t v19 = v11;
        if (v22 > v24) {
          goto LABEL_61;
        }
      }
      int v25 = v10;
      if (v3) {
        int v25 = (void *)*v10;
      }
      uint64_t v26 = v19[2 * (int)v7];
      uint64_t v27 = v25[2 * v6 + 1];
      if (v9) {
        char v28 = (long long *)a3[1];
      }
      else {
        char v28 = v12;
      }
      if (v9) {
        unint64_t v29 = a3[2];
      }
      else {
        unint64_t v29 = 1;
      }
      if (v23 == v29)
      {
        int v77 = v8;
        __p = (void *)a3[1];
        if (((v29 >> 59) & 0xF) != 0) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        uint64_t v30 = v7;
        int v31 = operator new(32 * v29);
        int v32 = v31;
        int v33 = &v31[v29];
        *int v33 = v26;
        v33[1] = v27;
        if (v9 >= 2)
        {
          int64_t v34 = v31;
          unint64_t v35 = v29;
          do
          {
            long long v36 = *v28++;
            *v34++ = v36;
            --v35;
          }
          while (v35);
        }
        unint64_t v4 = v76;
        if (v9) {
          operator delete(__p);
        }
        a3[1] = (unint64_t)v32;
        a3[2] = 2 * v29;
        v9 |= 1uLL;
        unint64_t v12 = (long long *)(a3 + 1);
        this = v72;
        uint64_t v7 = v30;
        LODWORD(v8) = v77;
      }
      else
      {
        uint64_t v13 = &v28[v23];
        *(void *)uint64_t v13 = v26;
        *((void *)v13 + 1) = v27;
        unint64_t v4 = v76;
      }
LABEL_5:
      v9 += 2;
      *a3 = v9;
LABEL_6:
      uint64_t v8 = (v8 + 1);
LABEL_7:
      uint64_t v6 = (int)v8;
      uint64_t v3 = *this;
    }
    while ((unint64_t)(int)v8 < *this >> 1);
  }
  return this;
}

void sub_23CDB47C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void operations_research::Domain::UnionWith(operations_research::Domain *this@<X0>, const operations_research::Domain *a2@<X1>, unint64_t *a3@<X8>)
{
  *a3 = 0;
  absl::lts_2020_02_25::inlined_vector_internal::Storage<operations_research::ClosedInterval,1ul,std::allocator<operations_research::ClosedInterval>>::Resize<absl::lts_2020_02_25::inlined_vector_internal::DefaultValueAdapter<std::allocator<operations_research::ClosedInterval>>>(a3, (*(void *)a2 >> 1) + (*(void *)this >> 1));
  unint64_t v8 = *(void *)this;
  uint64_t v7 = (char *)this + 8;
  unint64_t v6 = v8;
  if (v8) {
    uint64_t v7 = *(char **)v7;
  }
  unint64_t v9 = *(void *)a2;
  unint64_t v12 = (char *)*((void *)a2 + 1);
  unint64_t v11 = (char *)a2 + 8;
  unint64_t v10 = v12;
  if (v9) {
    uint64_t v13 = v10;
  }
  else {
    uint64_t v13 = v11;
  }
  uint64_t v14 = &v13[16 * (v9 >> 1)];
  if (*(unsigned char *)a3) {
    int8x16_t v15 = (_OWORD *)a3[1];
  }
  else {
    int8x16_t v15 = a3 + 1;
  }
  if (v6 >= 2)
  {
    unint64_t v17 = &v7[16 * (v6 >> 1)];
    while (v13 != v14)
    {
      if (*(void *)v13 >= *(void *)v7)
      {
        long long v18 = *(_OWORD *)v7;
        v7 += 16;
        *v15++ = v18;
        if (v7 == v17) {
          goto LABEL_10;
        }
      }
      else
      {
        long long v19 = *(_OWORD *)v13;
        v13 += 16;
        *v15++ = v19;
        if (v7 == v17) {
          goto LABEL_10;
        }
      }
    }
    size_t v16 = v17 - v7;
    uint64_t v13 = v7;
    goto LABEL_19;
  }
LABEL_10:
  if (v13 != v14)
  {
    size_t v16 = v14 - v13;
LABEL_19:
    memmove(v15, v13, v16);
  }
}

void sub_23CDB48F4(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)v1) {
    operator delete(*(void **)(v1 + 8));
  }
  _Unwind_Resume(exception_object);
}

void operations_research::Domain::AdditionWith(operations_research::Domain *this@<X0>, const operations_research::Domain *a2@<X1>, void *a3@<X8>, int8x16_t a4@<Q0>)
{
  *a3 = 0;
  uint64_t v5 = (__n128 **)(a3 + 1);
  unint64_t v6 = *(void *)this;
  uint64_t v7 = *(void *)this >> 1;
  unint64_t v8 = (*(void *)a2 >> 1) * v7;
  if (v8 < 2)
  {
    unint64_t v11 = 0;
    unint64_t v10 = a3;
    unint64_t v12 = (int64x2_t *)((char *)this + 8);
    if (v6) {
LABEL_4:
    }
      unint64_t v12 = (int64x2_t *)v12->i64[0];
  }
  else
  {
    if (v8 >> 60) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    unint64_t v9 = operator new(16 * v8);
    unint64_t v10 = a3;
    a3[1] = v9;
    a3[2] = v8;
    unint64_t v11 = 1;
    *a3 = 1;
    unint64_t v12 = (int64x2_t *)((char *)this + 8);
    if (v6) {
      goto LABEL_4;
    }
  }
  if (v6 >= 2)
  {
    unint64_t v29 = this;
    uint64_t v30 = &v12[v7];
    uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(0x7FFFFFFFFFFFFFFFuLL);
    uint64x2_t v32 = v13;
    do
    {
      unint64_t v14 = *(void *)a2;
      if (*(void *)a2) {
        int8x16_t v15 = (int64x2_t *)*((void *)a2 + 1);
      }
      else {
        int8x16_t v15 = (int64x2_t *)((char *)a2 + 8);
      }
      if (v14 >= 2)
      {
        size_t v16 = &v15[v14 >> 1];
        do
        {
          while (1)
          {
            int8x16_t v17 = (int8x16_t)vaddq_s64(*v15, *v12);
            a4 = vbslq_s8((int8x16_t)vcltzq_s64((int64x2_t)vandq_s8(veorq_s8(v17, *(int8x16_t *)v12), veorq_s8(v17, *(int8x16_t *)v15))), (int8x16_t)vsraq_n_u64(v13, *(uint64x2_t *)v12, 0x3FuLL), v17);
            long long v18 = (void *)v10[1];
            long long v19 = (v11 & 1) != 0 ? (__n128 *)v10[1] : (__n128 *)v5;
            unint64_t v20 = (v11 & 1) != 0 ? v10[2] : 1;
            if (v11 >> 1 == v20) {
              break;
            }
            v19[v11 >> 1] = (__n128)a4;
            v11 += 2;
            unint64_t *v10 = v11;
            if (++v15 == v16) {
              goto LABEL_7;
            }
          }
          __n128 v34 = (__n128)a4;
          if (((v20 >> 59) & 0xF) != 0) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          int64x2_t v21 = (__n128 *)operator new(32 * v20);
          a4 = (int8x16_t)v34;
          v21[v20] = v34;
          uint64_t v22 = v21;
          unint64_t v23 = v20;
          unint64_t v10 = a3;
          if (v11 >= 2)
          {
            do
            {
              __n128 v24 = *v19++;
              a4 = (int8x16_t)v24;
              *v22++ = v24;
              --v23;
            }
            while (v23);
          }
          if (v11)
          {
            operator delete(v18);
            unint64_t v10 = a3;
          }
          v10[1] = (unint64_t)v21;
          v10[2] = 2 * v20;
          uint64x2_t v13 = v32;
          unint64_t v11 = (v11 | 1) + 2;
          unint64_t *v10 = v11;
          ++v15;
        }
        while (v15 != v16);
      }
LABEL_7:
      ++v12;
    }
    while (v12 != v30);
    if (*(void *)v29 >= 4uLL && *(void *)a2 > 3uLL)
    {
      if (v11) {
        uint64_t v26 = *v5;
      }
      else {
        uint64_t v26 = (__n128 *)v5;
      }
      unint64_t v27 = 126 - 2 * __clz(v11 >> 1);
      if (v11 >= 2) {
        uint64_t v28 = v27;
      }
      else {
        uint64_t v28 = 0;
      }
      std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *,false>(v26, &v26[v11 >> 1], (uint64_t)&v35, v28, 1, (__n128)a4);
      unint64_t v10 = a3;
    }
  }
}

void sub_23CDB4B6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  if (*a16) {
    operator delete(*v16);
  }
  _Unwind_Resume(exception_object);
}

unint64_t *operations_research::Domain::RelaxIfTooComplex@<X0>(unint64_t *this@<X0>, const char *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4 = *this;
  unint64_t v5 = *this >> 1;
  if ((int)v5 < 101)
  {
    *a3 = 0;
    if ((v4 & 1) == 0)
    {
      *a3 = v4;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(this + 1);
      return this;
    }
    unint64_t v9 = (long long *)this[1];
    if (v4 < 4)
    {
      if (v4 < 2)
      {
        uint64_t v10 = 0;
LABEL_16:
        *a3 = v10 + (v4 & 0xFFFFFFFFFFFFFFFELL);
        return this;
      }
      this = a3 + 1;
    }
    else
    {
      if (v4 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      this = (unint64_t *)operator new(16 * v5);
      a3[1] = (unint64_t)this;
      a3[2] = v5;
      *a3 = 1;
    }
    do
    {
      long long v11 = *v9++;
      *(_OWORD *)this = v11;
      this += 2;
      --v5;
    }
    while (v5);
    uint64_t v10 = *a3;
    goto LABEL_16;
  }
  if (v4 <= 1) {
  unint64_t v6 = this + 1;
  }
  if (v4) {
    unint64_t v6 = (void *)*v6;
  }
  uint64_t v7 = (void *)*v6;
  uint64_t v8 = v6[2 * v5 - 1];
  a3[1] = (unint64_t)v7;
  a3[2] = v8;
  *a3 = 2 * ((uint64_t)v7 <= v8);
  return this;
}

void operations_research::Domain::MultiplicationBy(operations_research::Domain *this@<X0>, BOOL *a2@<X2>, uint64_t a3@<X1>, unint64_t *a4@<X8>)
{
  if (a2) {
    *a2 = 1;
  }
  if (!a3 || (uint64_t v5 = *(void *)this, *(void *)this <= 1uLL))
  {
    *a4 = 0;
    return;
  }
  if (a3 >= 0) {
    unint64_t v6 = a3;
  }
  else {
    unint64_t v6 = -a3;
  }
  unint64_t v46 = v6;
  BOOL v7 = __OFSUB__(v6, 1);
  if (v6 <= 1)
  {
    uint64_t v44 = a3;
    *a4 = 0;
    if (a4 != (unint64_t *)this)
    {
      uint64_t v26 = (long long *)*((void *)this + 1);
      __n128 v24 = (long long *)((char *)this + 8);
      int v25 = v26;
      if (v5) {
        unint64_t v27 = v25;
      }
      else {
        unint64_t v27 = v24;
      }
      absl::lts_2020_02_25::inlined_vector_internal::Storage<operations_research::ClosedInterval,1ul,std::allocator<operations_research::ClosedInterval>>::Assign<absl::lts_2020_02_25::inlined_vector_internal::IteratorValueAdapter<std::allocator<operations_research::ClosedInterval>,operations_research::ClosedInterval const*>>(a4, v27, v5 >> 1);
    }
    goto LABEL_33;
  }
  uint64_t v8 = (uint64_t *)((char *)this + 8);
  unint64_t v9 = (uint64_t *)((char *)this + 8);
  if (v5) {
    unint64_t v9 = (uint64_t *)*v8;
  }
  unint64_t v10 = 0;
  unint64_t v11 = (unint64_t)v5 >> 1;
  unint64_t v12 = &v9[2 * ((unint64_t)v5 >> 1)];
  do
  {
    uint64_t v13 = *v9;
    unint64_t v14 = v9[1];
    v9 += 2;
    uint64_t v15 = v14 - v13;
    uint64_t v16 = (v14 - v13) ^ v14;
    uint64_t v17 = v14 ^ v13;
    uint64_t v18 = (v14 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
    if ((v16 & v17) < 0 != v7) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = v15;
    }
    unint64_t v20 = v19 + v10;
    unint64_t v21 = (v19 + v10) ^ v10;
    unint64_t v22 = (v19 + v10) ^ v19;
    unint64_t v10 = (v10 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
    if (((v21 & v22 & 0x8000000000000000) != 0) == v7) {
      unint64_t v10 = v20;
    }
    BOOL v7 = __OFSUB__(v9, v12);
  }
  while (v9 != v12);
  if ((((v10 + v11) & ~v10 & 0x8000000000000000) != 0) != __OFSUB__(v9, v12)) {
    uint64_t v23 = (v10 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v23 = v10 + v11;
  }
  if (v23 >= 101)
  {
    if (a2) {
      *a2 = 0;
    }
    operations_research::Domain::ContinuousMultiplicationBy(this, a3, a4);
    return;
  }
  uint64_t v44 = a3;
  *a4 = 0;
  if ((unint64_t)v23 >= 2)
  {
    if ((unint64_t)v23 >> 60) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    a4[1] = (unint64_t)operator new(16 * v23);
    a4[2] = v23;
    unint64_t v28 = 1;
    *a4 = 1;
    if ((v5 & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  unint64_t v28 = 0;
  if (v5) {
LABEL_39:
  }
    uint64_t v8 = (uint64_t *)*v8;
LABEL_40:
  unint64_t v45 = &v8[2 * v11];
  int v29 = __clz(v46) ^ 0x3F;
  do
  {
    for (uint64_t i = *(int *)v8; v8[1] >= i; ++i)
    {
      if (i >= 0) {
        unint64_t v31 = i;
      }
      else {
        unint64_t v31 = -i;
      }
      int v32 = 63 - __clz(v31);
      if (!i) {
        int v32 = 0;
      }
      int v33 = v32 + v29;
      if (v33 > 61)
      {
        if (i)
        {
          int64_t v34 = ((unint64_t)i >> 63) + 0x7FFFFFFFFFFFFFFFLL;
          unint64_t v35 = v31 * v46;
          if (v33 <= 0x3E && v35 < v34)
          {
            if (v34 >= 0) {
              int64_t v34 = v35;
            }
            else {
              int64_t v34 = -(uint64_t)v35;
            }
          }
        }
        else
        {
          int64_t v34 = 0;
        }
      }
      else
      {
        int64_t v34 = i * v46;
      }
      int v37 = (void *)a4[1];
      if (v28) {
        int v38 = (int64x2_t *)a4[1];
      }
      else {
        int v38 = (int64x2_t *)(a4 + 1);
      }
      if (v28) {
        unint64_t v39 = a4[2];
      }
      else {
        unint64_t v39 = 1;
      }
      if (v28 >> 1 == v39)
      {
        if (((v39 >> 59) & 0xF) != 0) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        uint64_t v40 = (int64x2_t *)operator new(32 * v39);
        v40[v39] = vdupq_n_s64(v34);
        int v41 = v40;
        unint64_t v42 = v39;
        if (v28 >= 2)
        {
          do
          {
            int64x2_t v43 = *v38++;
            *v41++ = v43;
            --v42;
          }
          while (v42);
        }
        if (v28)
        {
          operator delete(v37);
          unint64_t v28 = *a4;
        }
        a4[1] = (unint64_t)v40;
        a4[2] = 2 * v39;
        v28 |= 1uLL;
      }
      else
      {
        v38[v28 >> 1] = vdupq_n_s64(v34);
      }
      v28 += 2;
      *a4 = v28;
    }
    v8 += 2;
  }
  while (v8 != v45);
LABEL_33:
  if (v44 < 0) {
    operations_research::Domain::NegateInPlace(a4, (const char *)a3);
  }
}

void sub_23CDB4FA4(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)v1) {
    operator delete(*(void **)(v1 + 8));
  }
  _Unwind_Resume(exception_object);
}

void operations_research::Domain::ContinuousMultiplicationBy(operations_research::Domain *this@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  *a3 = 0;
  unint64_t v5 = *(void *)this;
  if ((*(void *)this & 1) == 0)
  {
    *a3 = v5;
    unint64_t v6 = (uint64_t *)(a3 + 1);
    *(_OWORD *)(a3 + 1) = *(_OWORD *)((char *)this + 8);
    if (a2 >= 0) {
      unint64_t v7 = a2;
    }
    else {
      unint64_t v7 = -a2;
    }
LABEL_17:
    uint64_t v13 = v6;
    goto LABEL_18;
  }
  uint64_t v8 = (long long *)*((void *)this + 1);
  unint64_t v9 = v5 >> 1;
  if (v5 < 4)
  {
    if (v5 < 2)
    {
      unint64_t v11 = 0;
      goto LABEL_13;
    }
    unint64_t v10 = a3 + 1;
  }
  else
  {
    if (v5 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    unint64_t v10 = operator new(16 * v9);
    a3[1] = (unint64_t)v10;
    a3[2] = v9;
    *a3 = 1;
  }
  do
  {
    long long v12 = *v8++;
    *v10++ = v12;
    --v9;
  }
  while (v9);
  unint64_t v11 = *a3;
LABEL_13:
  unint64_t v5 = v11 + (v5 & 0xFFFFFFFFFFFFFFFELL);
  *a3 = v5;
  if (a2 >= 0) {
    unint64_t v7 = a2;
  }
  else {
    unint64_t v7 = -a2;
  }
  unint64_t v6 = (uint64_t *)(a3 + 1);
  uint64_t v13 = (uint64_t *)a3[1];
  if ((v11 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_18:
  if (v5 >= 2)
  {
    unint64_t v14 = &v13[2 * (v5 >> 1)];
    int v15 = 63 - __clz(v7);
    if (a2)
    {
      do
      {
        uint64_t v17 = *v13;
        if (*v13 >= 0) {
          unint64_t v18 = *v13;
        }
        else {
          unint64_t v18 = -v17;
        }
        int v19 = 63 - __clz(v18);
        if (!v17) {
          int v19 = 0;
        }
        int v20 = v19 + v15;
        if (v20 > 61)
        {
          if (v17)
          {
            uint64_t v17 = ((unint64_t)v17 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
            unint64_t v21 = v18 * v7;
            if (v20 <= 0x3E && v21 < v17)
            {
              if (v17 >= 0) {
                uint64_t v17 = v21;
              }
              else {
                uint64_t v17 = -(uint64_t)v21;
              }
            }
          }
        }
        else
        {
          v17 *= v7;
        }
        uint64_t v23 = v13[1];
        if (v23 >= 0) {
          unint64_t v24 = v13[1];
        }
        else {
          unint64_t v24 = -v23;
        }
        int v25 = 63 - __clz(v24);
        *uint64_t v13 = v17;
        if (v23) {
          int v26 = v25;
        }
        else {
          int v26 = 0;
        }
        unsigned int v27 = v26 + v15;
        if (v26 + v15 <= 61)
        {
          uint64_t v16 = v23 * v7;
        }
        else if (v23)
        {
          uint64_t v16 = ((unint64_t)v23 >> 63) + 0x7FFFFFFFFFFFFFFFLL;
          unint64_t v28 = v24 * v7;
          if (v27 <= 0x3E && v28 < v16)
          {
            if (v16 >= 0) {
              uint64_t v16 = v24 * v7;
            }
            else {
              uint64_t v16 = -(uint64_t)v28;
            }
          }
        }
        else
        {
          uint64_t v16 = 0;
        }
        v13[1] = v16;
        v13 += 2;
      }
      while (v13 != v14);
    }
    else
    {
      uint64_t v30 = ((v5 >> 1) - 1) & 0xFFFFFFFFFFFFFFFLL;
      if (v30)
      {
        uint64_t v31 = v30 + 1;
        uint64_t v32 = (v30 + 1) & 0x1FFFFFFFFFFFFFFELL;
        int v33 = &v13[2 * v32];
        int64x2_t v34 = vdupq_n_s64(v7);
        __asm { FMOV            V1.2D, #2.0 }
        uint64_t v39 = v32;
        do
        {
          float64x2x2_t v49 = vld2q_f64((const double *)v13);
          uint64x2_t v40 = (uint64x2_t)vabsq_s64((int64x2_t)v49.val[0]);
          *(void *)&v49.val[0].f64[0] *= v34.i64[0];
          *(void *)&v49.val[0].f64[1] *= v34.i64[1];
          v49.val[0] = (float64x2_t)vandq_s8((int8x16_t)v49.val[0], (int8x16_t)vcgtq_u64(_Q1, v40));
          v41.i64[0] = *(void *)&v49.val[1].f64[0] * v34.i64[0];
          v41.i64[1] = *(void *)&v49.val[1].f64[1] * v34.i64[1];
          v49.val[1] = (float64x2_t)vandq_s8(v41, (int8x16_t)vcgtq_u64(_Q1, (uint64x2_t)vabsq_s64((int64x2_t)v49.val[1])));
          vst2q_f64((double *)v13, v49);
          v13 += 4;
          v39 -= 2;
        }
        while (v39);
        if (v31 == v32) {
          goto LABEL_71;
        }
      }
      else
      {
        int v33 = v13;
      }
      do
      {
        uint64_t v42 = *v33;
        uint64_t v43 = v33[1];
        if (*v33 >= 0) {
          unint64_t v44 = *v33;
        }
        else {
          unint64_t v44 = -v42;
        }
        unint64_t v45 = v42 * v7;
        if (v44 >> 62) {
          unint64_t v45 = 0;
        }
        if (v43 >= 0) {
          unint64_t v46 = v33[1];
        }
        else {
          unint64_t v46 = -v43;
        }
        unint64_t v47 = v43 * v7;
        if (v46 >> 62) {
          unint64_t v47 = 0;
        }
        *int v33 = v45;
        v33[1] = v47;
        v33 += 2;
      }
      while (v33 != v14);
    }
  }
LABEL_71:
  if (a2 < 0) {
    operations_research::Domain::NegateInPlace(a3, v48);
  }
}

void sub_23CDB5278(_Unwind_Exception *exception_object)
{
  if (*v1) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void operations_research::Domain::ContinuousMultiplicationBy(operations_research::Domain *this@<X0>, const operations_research::Domain *a2@<X1>, unint64_t *a3@<X8>, __n128 a4@<Q0>)
{
  unint64_t v4 = a3;
  *a3 = 0;
  unint64_t v7 = *(void *)this;
  unint64_t v5 = (uint64_t *)((char *)this + 8);
  unint64_t v6 = v7;
  if (v7) {
    unint64_t v5 = (uint64_t *)*v5;
  }
  if (v6 >= 2)
  {
    unint64_t v8 = 0;
    long long v58 = &v5[2 * (v6 >> 1)];
    uint64_t v59 = (uint64_t *)((char *)a2 + 8);
    long long v12 = v4 + 1;
    unint64_t v61 = v4 + 1;
    do
    {
      unint64_t v13 = *(void *)a2;
      if (*(void *)a2) {
        unint64_t v14 = (uint64_t *)*((void *)a2 + 1);
      }
      else {
        unint64_t v14 = v59;
      }
      if (v13 >= 2)
      {
        int v15 = &v14[2 * (v13 >> 1)];
        unint64_t v62 = v15;
        do
        {
          while (1)
          {
            uint64_t v17 = *v14;
            unint64_t v18 = *v14 >= 0 ? *v14 : -v17;
            int v19 = 63 - __clz(v18);
            uint64_t v20 = *v5;
            int v21 = v17 ? v19 : 0;
            unint64_t v22 = v20 >= 0 ? *v5 : -v20;
            int v23 = 63 - __clz(v22);
            int v24 = v20 ? v23 : 0;
            if (v21 + v24 > 61)
            {
              uint64_t v25 = 0;
              if (v20 && v17)
              {
                uint64_t v25 = ((v17 ^ (unint64_t)v20) >> 63) + 0x7FFFFFFFFFFFFFFFLL;
                unint64_t v26 = v18 * v22;
                if ((v21 + v24) <= 0x3E && v26 < v25)
                {
                  if (v25 >= 0) {
                    uint64_t v25 = v18 * v22;
                  }
                  else {
                    uint64_t v25 = -(uint64_t)v26;
                  }
                }
              }
            }
            else
            {
              uint64_t v25 = v17 * v20;
            }
            uint64_t v28 = v14[1];
            unint64_t v29 = v28 >= 0 ? v14[1] : -v28;
            int v30 = 63 - __clz(v29);
            uint64_t v31 = v5[1];
            int v32 = v28 ? v30 : 0;
            unint64_t v33 = v31 >= 0 ? v5[1] : -v31;
            int v34 = 63 - __clz(v33);
            int v35 = v31 ? v34 : 0;
            if (v32 + v35 > 61)
            {
              uint64_t v36 = 0;
              if (v31)
              {
                if (v28)
                {
                  uint64_t v36 = ((v28 ^ (unint64_t)v31) >> 63) + 0x7FFFFFFFFFFFFFFFLL;
                  if ((v32 + v35) <= 0x3E && v29 * v33 < v36)
                  {
                    if (v36 >= 0) {
                      uint64_t v36 = v29 * v33;
                    }
                    else {
                      uint64_t v36 = -(uint64_t)(v29 * v33);
                    }
                  }
                }
              }
            }
            else
            {
              uint64_t v36 = v28 * v31;
            }
            int v37 = v32 + v24;
            if (v37 > 61)
            {
              uint64_t v38 = 0;
              if (v20)
              {
                if (v28)
                {
                  uint64_t v38 = ((v28 ^ (unint64_t)v20) >> 63) + 0x7FFFFFFFFFFFFFFFLL;
                  if (v37 <= 0x3E)
                  {
                    unint64_t v56 = v29 * v22;
                    if (v56 < v38)
                    {
                      if (v38 >= 0) {
                        uint64_t v38 = v56;
                      }
                      else {
                        uint64_t v38 = -(uint64_t)v56;
                      }
                    }
                  }
                }
              }
            }
            else
            {
              uint64_t v38 = v28 * v20;
            }
            unsigned int v39 = v35 + v21;
            if (v35 + v21 > 61)
            {
              uint64_t v40 = 0;
              if (v17)
              {
                if (v31)
                {
                  uint64_t v40 = ((v31 ^ (unint64_t)v17) >> 63) + 0x7FFFFFFFFFFFFFFFLL;
                  if (v39 <= 0x3E)
                  {
                    unint64_t v57 = v33 * v18;
                    if (v57 < v40)
                    {
                      if (v40 >= 0) {
                        uint64_t v40 = v57;
                      }
                      else {
                        uint64_t v40 = -(uint64_t)v57;
                      }
                    }
                  }
                }
              }
            }
            else
            {
              uint64_t v40 = v31 * v17;
            }
            if (v36 >= v25) {
              uint64_t v41 = v25;
            }
            else {
              uint64_t v41 = v36;
            }
            if (v38 < v41) {
              uint64_t v41 = v38;
            }
            if (v40 >= v41) {
              uint64_t v42 = v41;
            }
            else {
              uint64_t v42 = v40;
            }
            if (v25 <= v36) {
              uint64_t v25 = v36;
            }
            if (v25 <= v38) {
              uint64_t v43 = v38;
            }
            else {
              uint64_t v43 = v25;
            }
            if (v25 < v38) {
              uint64_t v25 = v38;
            }
            uint64_t v44 = v43 >= v40 ? v25 : v40;
            unint64_t v45 = (void *)v4[1];
            unint64_t v46 = (v8 & 1) != 0 ? (__n128 *)v4[1] : (__n128 *)v12;
            unint64_t v47 = (v8 & 1) != 0 ? v4[2] : 1;
            if (v8 >> 1 == v47) {
              break;
            }
            uint64_t v16 = &v46[v8 >> 1];
            v16->n128_u64[0] = v42;
            v16->n128_u64[1] = v44;
            v8 += 2;
            unint64_t *v4 = v8;
            v14 += 2;
            if (v14 == v15) {
              goto LABEL_13;
            }
          }
          if (((v47 >> 59) & 0xF) != 0) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          int v48 = v5;
          float64x2x2_t v49 = v4;
          int v50 = operator new(32 * v47);
          long long v51 = v50;
          uint64_t v52 = (uint64_t *)&v50[v47];
          *uint64_t v52 = v42;
          v52[1] = v44;
          if (v8 >= 2)
          {
            uint64_t v53 = (__n128 *)v50;
            unint64_t v54 = v47;
            do
            {
              __n128 v55 = *v46++;
              a4 = v55;
              *v53++ = v55;
              --v54;
            }
            while (v54);
          }
          if (v8) {
            operator delete(v45);
          }
          v49[1] = (unint64_t)v51;
          v49[2] = 2 * v47;
          unint64_t v4 = v49;
          unint64_t v5 = v48;
          long long v12 = v61;
          int v15 = v62;
          unint64_t v8 = (v8 | 1) + 2;
          unint64_t *v4 = v8;
          v14 += 2;
        }
        while (v14 != v62);
      }
LABEL_13:
      v5 += 2;
    }
    while (v5 != v58);
  }
  else
  {
    unint64_t v8 = 0;
  }
  if (v8) {
    unint64_t v9 = (__n128 *)v4[1];
  }
  else {
    unint64_t v9 = (__n128 *)(v4 + 1);
  }
  unint64_t v10 = 126 - 2 * __clz(v8 >> 1);
  if (v8 >= 2) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *,false>(v9, &v9[v8 >> 1], (uint64_t)&v63, v11, 1, a4);
}

void sub_23CDB5620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (*(void *)v15) {
    operator delete(*(void **)(v15 + 8));
  }
  _Unwind_Resume(exception_object);
}

void operations_research::Domain::DivisionBy(operations_research::Domain *this@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v17 = a2;
  int v18 = 0;
  if (!a2) {
    google::MakeCheckOpString<long long,int>((int)&v17, (int)&v18, "coeff != 0");
  }
  *a3 = 0;
  unint64_t v5 = *(void *)this;
  if ((*(void *)this & 1) == 0)
  {
    *a3 = v5;
    unint64_t v6 = (uint64_t *)(a3 + 1);
    *(_OWORD *)(a3 + 1) = *(_OWORD *)((char *)this + 8);
    if (a2 >= 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = -a2;
    }
LABEL_18:
    unint64_t v13 = v6;
    goto LABEL_19;
  }
  unint64_t v8 = (long long *)*((void *)this + 1);
  unint64_t v9 = v5 >> 1;
  if (v5 < 4)
  {
    if (v5 < 2)
    {
      unint64_t v11 = 0;
      goto LABEL_14;
    }
    unint64_t v10 = a3 + 1;
  }
  else
  {
    if (v5 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    unint64_t v10 = operator new(16 * v9);
    a3[1] = (unint64_t)v10;
    a3[2] = v9;
    *a3 = 1;
  }
  do
  {
    long long v12 = *v8++;
    *v10++ = v12;
    --v9;
  }
  while (v9);
  unint64_t v11 = *a3;
LABEL_14:
  unint64_t v5 = v11 + (v5 & 0xFFFFFFFFFFFFFFFELL);
  *a3 = v5;
  if (a2 >= 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = -a2;
  }
  unint64_t v6 = (uint64_t *)(a3 + 1);
  unint64_t v13 = (uint64_t *)a3[1];
  if ((v11 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_19:
  if (v5 >= 2)
  {
    unint64_t v14 = &v13[2 * (v5 >> 1)];
    do
    {
      uint64_t v15 = v13[1] / v7;
      *v13 /= v7;
      v13[1] = v15;
      v13 += 2;
    }
    while (v13 != v14);
  }
  if (a2 < 0) {
    operations_research::Domain::NegateInPlace(a3, v16);
  }
}

void sub_23CDB57CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDB57D4(_Unwind_Exception *exception_object)
{
  if (*v1) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void operations_research::Domain::InverseMultiplicationBy(operations_research::Domain *this@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  if (a2)
  {
    *a3 = 0;
    unint64_t v5 = *(void *)this;
    if ((*(void *)this & 1) == 0)
    {
      *a3 = v5;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)((char *)this + 8);
LABEL_28:
      if (a2 >= 0) {
        uint64_t v21 = a2;
      }
      else {
        uint64_t v21 = -a2;
      }
      unint64_t v22 = (unint64_t **)(a3 + 1);
      if (v5) {
        int v23 = (void *)a3[1];
      }
      else {
        int v23 = a3 + 1;
      }
      if (v5 < 2)
      {
        int v24 = 0;
LABEL_36:
        absl::lts_2020_02_25::inlined_vector_internal::Storage<operations_research::ClosedInterval,1ul,std::allocator<operations_research::ClosedInterval>>::Resize<absl::lts_2020_02_25::inlined_vector_internal::DefaultValueAdapter<std::allocator<operations_research::ClosedInterval>>>(a3, v24);
        unint64_t v26 = *a3;
        if ((*a3 & 1) == 0 || (unint64_t v27 = v26 >> 1, v26 >> 1 == a3[2]))
        {
LABEL_64:
          if ((a2 & 0x8000000000000000) == 0) {
            return;
          }
LABEL_67:
          operations_research::Domain::NegateInPlace(a3, v25);
          return;
        }
        uint64_t v28 = (char *)a3[1];
        if (v26 < 4)
        {
          if (v26 <= 1)
          {
            operator delete((void *)a3[1]);
            goto LABEL_66;
          }
          int v30 = 0;
          unint64_t v31 = 0;
          unint64_t v29 = (char *)(a3 + 1);
        }
        else
        {
          if (v26 >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          unint64_t v29 = (char *)operator new(16 * v27);
          int v30 = v29;
          unint64_t v31 = v27;
        }
        uint64_t v40 = 0;
        do
        {
          *(_OWORD *)&v29[v40] = *(_OWORD *)&v28[v40];
          v40 += 16;
          --v27;
        }
        while (v27);
        operator delete(v28);
        if (v30)
        {
          a3[1] = (unint64_t)v30;
          a3[2] = v31;
          goto LABEL_64;
        }
LABEL_66:
        *a3 &= ~1uLL;
        if ((a2 & 0x8000000000000000) == 0) {
          return;
        }
        goto LABEL_67;
      }
      int v24 = 0;
      int v32 = &v23[2 * (v5 >> 1)];
      while (1)
      {
        uint64_t v37 = *v23 / v21;
        if (v37 * v21 < *v23) {
          ++v37;
        }
        uint64_t v38 = v23[1] / v21 - (v23[1] / v21 * v21 > v23[1]);
        if (v37 > v38) {
          goto LABEL_46;
        }
        uint64_t v39 = (v24 - 1);
        if (v24 < 1)
        {
          uint64_t v33 = v24;
          int v34 = *v22;
          if ((v5 & 1) == 0) {
            int v34 = a3 + 1;
          }
        }
        else if (v5)
        {
          int v34 = *v22;
          if (v37 == (*v22)[2 * v39 + 1] + 1)
          {
LABEL_55:
            uint64_t v36 = (uint64_t *)&v34[2 * v39 + 1];
            goto LABEL_45;
          }
          uint64_t v33 = v24;
        }
        else
        {
          int v34 = a3 + 1;
          if ((unint64_t *)v37 == (unint64_t *)((char *)v22[2 * v39 + 1] + 1)) {
            goto LABEL_55;
          }
          uint64_t v33 = v24;
          int v34 = a3 + 1;
        }
        ++v24;
        int v35 = (uint64_t *)&v34[2 * v33];
        *int v35 = v37;
        uint64_t v36 = v35 + 1;
LABEL_45:
        *uint64_t v36 = v38;
LABEL_46:
        v23 += 2;
        if (v23 == v32) {
          goto LABEL_36;
        }
      }
    }
    uint64_t v16 = (long long *)*((void *)this + 1);
    unint64_t v17 = v5 >> 1;
    if (v5 < 4)
    {
      if (v5 < 2)
      {
        unint64_t v19 = 0;
LABEL_27:
        unint64_t v5 = v19 + (v5 & 0xFFFFFFFFFFFFFFFELL);
        *a3 = v5;
        goto LABEL_28;
      }
      int v18 = a3 + 1;
    }
    else
    {
      if (v5 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      int v18 = operator new(16 * v17);
      a3[1] = (unint64_t)v18;
      a3[2] = v17;
      *a3 = 1;
    }
    do
    {
      long long v20 = *v16++;
      *v18++ = v20;
      --v17;
    }
    while (v17);
    unint64_t v19 = *a3;
    goto LABEL_27;
  }
  unint64_t v8 = *(void *)this;
  unint64_t v6 = (void *)((char *)this + 8);
  unint64_t v7 = v8;
  unint64_t v9 = v6;
  if (v8) {
    unint64_t v9 = (void *)*v6;
  }
  unint64_t v10 = v7 >> 1;
  if (v7 >= 2)
  {
    do
    {
      unint64_t v11 = v10 >> 1;
      long long v12 = &v9[2 * (v10 >> 1)];
      uint64_t v14 = *v12;
      unint64_t v13 = v12 + 2;
      v10 += ~(v10 >> 1);
      if (v14 > 0) {
        unint64_t v10 = v11;
      }
      else {
        unint64_t v9 = v13;
      }
    }
    while (v10);
  }
  else
  {
    v9 += 2 * v10;
  }
  if (v7) {
    unint64_t v6 = (void *)*v6;
  }
  if (v9 == v6 || (*(v9 - 1) & 0x8000000000000000) != 0)
  {
    uint64_t v15 = 0;
  }
  else
  {
    *(_OWORD *)(a3 + 1) = xmmword_23CE909A0;
    uint64_t v15 = 2;
  }
  *a3 = v15;
}

void sub_23CDB5AF4(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)v1) {
    operator delete(*(void **)(v1 + 8));
  }
  _Unwind_Resume(exception_object);
}

void operations_research::Domain::SimplifyUsingImpliedDomain(operations_research::Domain *this@<X0>, const operations_research::Domain *a2@<X1>, unint64_t *a3@<X8>)
{
  *a3 = 0;
  unint64_t v3 = *(void *)a2;
  if (*(void *)a2 >= 2uLL)
  {
    unint64_t v4 = a3;
    unint64_t v6 = (void *)((char *)this + 8);
    unint64_t v5 = *(void *)this;
    if (*(void *)this) {
      unint64_t v6 = (void *)*v6;
    }
    if (v5 >= 2)
    {
      char v7 = 0;
      uint64_t v8 = 0;
      unint64_t v9 = 0;
      int v10 = 0;
      unint64_t v11 = 0;
      long long v12 = (void *)((char *)a2 + 8);
      unint64_t v13 = (long long *)(v4 + 1);
      uint64_t v14 = &v6[2 * (v5 >> 1)];
      uint64_t v53 = (long long *)(v4 + 1);
      unint64_t v54 = v4;
      long long v51 = v14;
      uint64_t v52 = v12;
      while (1)
      {
        uint64_t v16 = (void *)*v6;
        uint64_t v15 = v6[1];
        unint64_t v17 = v10;
        if (v7)
        {
          int v18 = (void *)*v12;
          if ((v3 & 1) == 0) {
            int v18 = v12;
          }
          if (v18[2 * v10] < (uint64_t)v16)
          {
            __p = (void *)v4[1];
            unint64_t v58 = v11 & 1;
            if (v11) {
              unint64_t v19 = (long long *)v4[1];
            }
            else {
              unint64_t v19 = v13;
            }
            if (v11) {
              unint64_t v20 = v4[2];
            }
            else {
              unint64_t v20 = 1;
            }
            if (v11 >> 1 == v20)
            {
              unint64_t v55 = v3;
              unint64_t v56 = v11;
              if (((v20 >> 59) & 0xF) != 0) {
                std::__throw_bad_array_new_length[abi:ne180100]();
              }
              uint64_t v21 = operator new(32 * v20);
              unint64_t v22 = &v21[v20];
              *unint64_t v22 = v9;
              v22[1] = v8;
              unint64_t v3 = v55;
              unint64_t v23 = v56;
              unint64_t v4 = v54;
              if (v56 >= 2)
              {
                int v24 = v21;
                unint64_t v25 = v20;
                do
                {
                  long long v26 = *v19++;
                  *v24++ = v26;
                  --v25;
                }
                while (v25);
              }
              if (v58)
              {
                unint64_t v27 = v21;
                operator delete(__p);
                uint64_t v21 = v27;
                unint64_t v23 = v56;
                unint64_t v4 = v54;
                unint64_t v3 = *(void *)a2;
              }
              v4[1] = (unint64_t)v21;
              v4[2] = 2 * v20;
              unint64_t v11 = v23 | 1;
              long long v12 = v52;
              unint64_t v13 = v53;
              uint64_t v14 = v51;
            }
            else
            {
              unint64_t v29 = &v19[v11 >> 1];
              *(void *)unint64_t v29 = v9;
              *((void *)v29 + 1) = v8;
            }
            char v7 = 0;
            v11 += 2;
            unint64_t *v4 = v11;
            unint64_t v28 = v3 >> 1;
            if (v3 >> 1 <= v10) {
              goto LABEL_55;
            }
LABEL_30:
            int v30 = (void *)*v12;
            if ((v3 & 1) == 0) {
              int v30 = v12;
            }
            unint64_t v31 = &v30[2 * v10 + 1];
            do
            {
              uint64_t v32 = *(v31 - 1);
              uint64_t v33 = *v31;
              if (*v31 >= v15) {
                uint64_t v34 = v15;
              }
              else {
                uint64_t v34 = *v31;
              }
              if ((uint64_t)v16 <= v32) {
                int v35 = (void *)*(v31 - 1);
              }
              else {
                int v35 = v16;
              }
              if (v7) {
                int v35 = v9;
              }
              BOOL v36 = v33 >= (uint64_t)v16 && v32 <= v15;
              if (v36) {
                unint64_t v9 = v35;
              }
              if (v36) {
                uint64_t v8 = v34;
              }
              if (v36) {
                char v7 = 1;
              }
              if (v33 > v15) {
                break;
              }
              v31 += 2;
              ++v17;
              ++v10;
            }
            while (v28 > v17);
            goto LABEL_55;
          }
          char v7 = 1;
          unint64_t v28 = v3 >> 1;
          if (v3 >> 1 > v10) {
            goto LABEL_30;
          }
        }
        else
        {
          char v7 = 0;
          unint64_t v28 = v3 >> 1;
          if (v3 >> 1 > v10) {
            goto LABEL_30;
          }
        }
LABEL_55:
        if (v28 != v17)
        {
          v6 += 2;
          if (v6 != v14) {
            continue;
          }
        }
        if (v7)
        {
          unint64_t v37 = v11 & 1;
          uint64_t v38 = (void *)v4[1];
          if (v11) {
            uint64_t v39 = (long long *)v4[1];
          }
          else {
            uint64_t v39 = v13;
          }
          if (v11) {
            unint64_t v40 = v4[2];
          }
          else {
            unint64_t v40 = 1;
          }
          if (v11 >> 1 == v40)
          {
            if (((v40 >> 59) & 0xF) != 0) {
              std::__throw_bad_array_new_length[abi:ne180100]();
            }
            unint64_t v41 = v11;
            uint64_t v42 = operator new(32 * v40);
            uint64_t v43 = v42;
            uint64_t v44 = &v42[v40];
            *uint64_t v44 = v9;
            v44[1] = v8;
            unint64_t v45 = v41;
            unint64_t v4 = v54;
            if (v41 >= 2)
            {
              unint64_t v46 = v42;
              unint64_t v47 = v40;
              do
              {
                long long v48 = *v39++;
                *v46++ = v48;
                --v47;
              }
              while (v47);
            }
            if (v37)
            {
              operator delete(v38);
              unint64_t v45 = v41;
              unint64_t v4 = v54;
            }
            v4[1] = (unint64_t)v43;
            v4[2] = 2 * v40;
            unint64_t v11 = v45 | 1;
          }
          else
          {
            float64x2x2_t v49 = &v39[v11 >> 1];
            *(void *)float64x2x2_t v49 = v9;
            *((void *)v49 + 1) = v8;
          }
          unint64_t *v4 = v11 + 2;
        }
        return;
      }
    }
  }
}

void sub_23CDB5DFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (v19) {
    operator delete(v18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t operations_research::Domain::operator<(void *a1, uint64_t *a2)
{
  unint64_t v2 = *a1 >> 1;
  uint64_t v3 = *a2;
  unint64_t v4 = (unint64_t)*a2 >> 1;
  if (v4 >= v2) {
    uint64_t v5 = *a1 >> 1;
  }
  else {
    uint64_t v5 = (unint64_t)*a2 >> 1;
  }
  if ((int)v5 < 1) {
    return v2 < v4;
  }
  uint64_t v8 = (void *)a2[1];
  unint64_t v6 = a2 + 1;
  char v7 = v8;
  if (v3) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = v6;
  }
  if (*a1)
  {
    uint64_t v5 = v5;
    uint64_t v14 = (void *)(a1[1] + 8);
    for (uint64_t i = v9 + 1; ; i += 2)
    {
      uint64_t v16 = *(v14 - 1);
      uint64_t v17 = *(i - 1);
      if (v16 < v17) {
        break;
      }
      if (v16 > v17) {
        return 0;
      }
      if (*v14 < *i) {
        return 1;
      }
      if (*v14 > *i) {
        return 0;
      }
      v14 += 2;
      if (!--v5) {
        return v2 < v4;
      }
    }
  }
  else
  {
    uint64_t v5 = v5;
    int v10 = a1 + 2;
    for (j = v9 + 1; ; j += 2)
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v13 = *(j - 1);
      if (v12 < v13) {
        break;
      }
      if (v12 > v13) {
        return 0;
      }
      if (*v10 < *j) {
        break;
      }
      if (*v10 > *j) {
        return 0;
      }
      v10 += 2;
      if (!--v5) {
        return v2 < v4;
      }
    }
  }
  return 1;
}

void operations_research::Domain::ToString(operations_research::Domain *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  unint64_t v3 = *(void *)this;
  unint64_t v6 = (uint64_t *)*((void *)this + 1);
  unint64_t v4 = (char *)this + 8;
  uint64_t v5 = v6;
  if (v3) {
    char v7 = v5;
  }
  else {
    char v7 = (uint64_t *)v4;
  }
  if (v3 >= 2)
  {
    uint64_t v8 = &v7[2 * (v3 >> 1)];
    do
    {
      uint64_t v9 = v7[1];
      if (*v7 == v9)
      {
        uint64_t v14 = *v7;
        uint64_t v15 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
        absl::lts_2020_02_25::str_format_internal::FormatPack("[%d]", 4, (uint64_t)&v14, 1, (uint64_t)__p);
      }
      else
      {
        uint64_t v14 = *v7;
        uint64_t v15 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
        uint64_t v16 = v9;
        uint64_t v17 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
        absl::lts_2020_02_25::str_format_internal::FormatPack("[%d,%d]", 7, (uint64_t)&v14, 2, (uint64_t)__p);
      }
      if ((v13 & 0x80u) == 0) {
        int v10 = __p;
      }
      else {
        int v10 = (void **)__p[0];
      }
      if ((v13 & 0x80u) == 0) {
        std::string::size_type v11 = v13;
      }
      else {
        std::string::size_type v11 = (std::string::size_type)__p[1];
      }
      std::string::append(a2, (const std::string::value_type *)v10, v11);
      if ((char)v13 < 0) {
        operator delete(__p[0]);
      }
      v7 += 2;
    }
    while (v7 != v8);
  }
}

void sub_23CDB6048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v14 + 23) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v14 + 23) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)v14);
  _Unwind_Resume(exception_object);
}

uint64_t operations_research::SumOfKMinValueInDomain(operations_research *this, const operations_research::Domain *a2)
{
  unint64_t v2 = *(void *)this;
  uint64_t v5 = (char *)*((void *)this + 1);
  unint64_t v3 = (char *)this + 8;
  unint64_t v4 = v5;
  if (v2) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v3;
  }
  if (v2 < 2) {
    return 0;
  }
  uint64_t result = 0;
  int v8 = 0;
  uint64_t v9 = 16 * (v2 >> 1);
  int v10 = (uint64_t *)(v6 + 8);
  do
  {
    if (v8 >= (int)a2) {
      break;
    }
    std::string::size_type v11 = v10 + 2;
    uint64_t v12 = *v10;
    uint64_t v13 = *(v10 - 1);
    uint64_t v14 = (int)v13;
    if (v12 >= (int)v13)
    {
      uint64_t v15 = ((v13 << 32) + 0x100000000) >> 32;
      if (v12 <= v15 - 1) {
        uint64_t v12 = v15 - 1;
      }
      uint64_t v16 = v12 - v15;
      if (v16 + 1 < (unint64_t)(~v8 + a2)) {
        uint64_t v17 = v16 + 1;
      }
      else {
        uint64_t v17 = (~v8 + a2);
      }
      v8 += v17 + 1;
      result += v14
              + v17
              + v17 * v14
              + ((__int128)((unint64_t)v17 * (unsigned __int128)(unint64_t)(v17 - 1)) >> 1);
    }
    int v10 = v11;
    v9 -= 16;
  }
  while (v9);
  return result;
}

uint64_t operations_research::SumOfKMaxValueInDomain(operations_research *this, const operations_research::Domain *a2)
{
  int v2 = (int)a2;
  operations_research::Domain::Negation(this, (const char *)a2, &v15);
  if (v15) {
    unint64_t v3 = v16;
  }
  else {
    unint64_t v3 = (void **)&v16;
  }
  if (v15 >= 2)
  {
    uint64_t v4 = 0;
    int v6 = 0;
    unint64_t v7 = 16 * (v15 >> 1);
    int v8 = (uint64_t *)(v3 + 1);
    do
    {
      if (v6 >= v2) {
        break;
      }
      uint64_t v10 = *(v8 - 1);
      uint64_t v9 = *v8;
      uint64_t v11 = (int)v10;
      if (*v8 >= (int)v10)
      {
        uint64_t v12 = ((v10 << 32) + 0x100000000) >> 32;
        if (v9 <= v12 - 1) {
          uint64_t v9 = v12 - 1;
        }
        uint64_t v13 = v9 - v12;
        if (v13 + 1 < (unint64_t)(~v6 + v2)) {
          uint64_t v14 = v13 + 1;
        }
        else {
          uint64_t v14 = (~v6 + v2);
        }
        v6 += v14 + 1;
        v4 += v11
            + v14
            + v14 * v11
            + ((__int128)((unint64_t)v14 * (unsigned __int128)(unint64_t)(v14 - 1)) >> 1);
      }
      v8 += 2;
      v7 -= 16;
    }
    while (v7);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (v15) {
    operator delete(v16);
  }
  return -v4;
}

void absl::lts_2020_02_25::inlined_vector_internal::Storage<operations_research::ClosedInterval,1ul,std::allocator<operations_research::ClosedInterval>>::Resize<absl::lts_2020_02_25::inlined_vector_internal::DefaultValueAdapter<std::allocator<operations_research::ClosedInterval>>>(unint64_t *a1, unint64_t a2)
{
  uint64_t v5 = (long long *)(a1 + 1);
  unint64_t v4 = *a1;
  if ((*a1 & 1) == 0)
  {
    unint64_t v6 = 1;
    unint64_t v7 = v4 >> 1;
    if (a2 <= 1) {
      goto LABEL_3;
    }
LABEL_7:
    if (2 * v6 <= a2) {
      unint64_t v10 = a2;
    }
    else {
      unint64_t v10 = 2 * v6;
    }
    if (v10 >> 60) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int v8 = (long long *)operator new(16 * v10);
    unint64_t v9 = v7;
    uint64_t v11 = v8;
    unint64_t v12 = a2 - v7;
    if (a2 == v7) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (long long *)a1[1];
  unint64_t v6 = a1[2];
  unint64_t v7 = v4 >> 1;
  if (v6 < a2) {
    goto LABEL_7;
  }
LABEL_3:
  if (a2 <= v7) {
    goto LABEL_21;
  }
  int v8 = 0;
  unint64_t v9 = 0;
  unint64_t v10 = 0;
  uint64_t v11 = v5;
  unint64_t v12 = a2 - v7;
  if (a2 != v7) {
LABEL_12:
  }
    bzero(&v11[v7], 16 * v12);
LABEL_13:
  if (v9)
  {
    uint64_t v13 = v8;
    do
    {
      long long v14 = *v5++;
      *v13++ = v14;
      --v9;
    }
    while (v9);
    unint64_t v4 = *a1;
  }
  else
  {
    unint64_t v4 = *a1;
    if (!v8) {
      goto LABEL_21;
    }
  }
  if (v4)
  {
    operator delete((void *)a1[1]);
    unint64_t v4 = *a1;
  }
  a1[1] = (unint64_t)v8;
  a1[2] = v10;
  LOBYTE(v4) = v4 | 1;
LABEL_21:
  *a1 = v4 & 1 | (2 * a2);
}

__n128 std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *,false>(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4, char a5, __n128 result)
{
  while (2)
  {
    uint64_t v13 = a2 - 1;
    int v90 = a2 - 2;
    long long v14 = a2 - 3;
    unint64_t v15 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v15;
          uint64_t v16 = (char *)a2 - (char *)v15;
          unint64_t v17 = a2 - v15;
          if (v7 || !v6)
          {
            switch(v17)
            {
              case 0uLL:
              case 1uLL:
                return result;
              case 2uLL:
                int64_t v66 = a2[-1].n128_i64[0];
                int v65 = a2 - 1;
                if (v66 >= (int64_t)v15->n128_u64[0]) {
                  return result;
                }
                goto LABEL_101;
              case 3uLL:
                int v67 = v15 + 1;
                int64_t v68 = v15[1].n128_i64[0];
                unint64_t v70 = a2[-1].n128_u64[0];
                int v65 = a2 - 1;
                int64_t v69 = v70;
                if (v68 < (int64_t)v15->n128_u64[0])
                {
                  if (v69 >= v68)
                  {
                    __n128 v113 = *v15;
                    *unint64_t v15 = *v67;
                    uint64_t result = v113;
                    __n128 *v67 = v113;
                    if ((int64_t)v65->n128_u64[0] < (int64_t)v15[1].n128_u64[0])
                    {
                      uint64_t result = *v67;
                      __n128 *v67 = *v65;
                      *int v65 = result;
                    }
                  }
                  else
                  {
LABEL_101:
                    __n128 v110 = *v15;
                    *unint64_t v15 = *v65;
                    uint64_t result = v110;
                    *int v65 = v110;
                  }
                  return result;
                }
                if (v69 >= v68) {
                  return result;
                }
                uint64_t result = *v67;
                __n128 *v67 = *v65;
                *int v65 = result;
                goto LABEL_149;
              case 4uLL:
                int v67 = v15 + 1;
                int64_t v71 = v15[1].n128_i64[0];
                int v72 = v15 + 2;
                int64_t v73 = v15[2].n128_i64[0];
                if (v71 >= (int64_t)v15->n128_u64[0])
                {
                  if (v73 < v71)
                  {
                    uint64_t result = *v67;
                    __n128 *v67 = *v72;
                    *int v72 = result;
                    if ((int64_t)v15[1].n128_u64[0] < (int64_t)v15->n128_u64[0])
                    {
                      __n128 v112 = *v15;
                      *unint64_t v15 = *v67;
                      uint64_t result = v112;
                      __n128 *v67 = v112;
                    }
                  }
                }
                else
                {
                  if (v73 >= v71)
                  {
                    __n128 v114 = *v15;
                    *unint64_t v15 = *v67;
                    uint64_t result = v114;
                    __n128 *v67 = v114;
                    if (v73 >= (int64_t)v15[1].n128_u64[0]) {
                      goto LABEL_146;
                    }
                    uint64_t result = *v67;
                    __n128 *v67 = *v72;
                  }
                  else
                  {
                    __n128 v111 = *v15;
                    *unint64_t v15 = *v72;
                    uint64_t result = v111;
                  }
                  *int v72 = result;
                }
LABEL_146:
                if ((int64_t)v13->n128_u64[0] < (int64_t)v72->n128_u64[0])
                {
                  uint64_t result = *v72;
                  *int v72 = *v13;
                  *uint64_t v13 = result;
                  if ((int64_t)v72->n128_u64[0] < (int64_t)v67->n128_u64[0])
                  {
                    uint64_t result = *v67;
                    __n128 *v67 = *v72;
                    *int v72 = result;
LABEL_149:
                    if ((int64_t)v15[1].n128_u64[0] < (int64_t)v15->n128_u64[0])
                    {
                      __n128 v115 = *v15;
                      *unint64_t v15 = *v67;
                      uint64_t result = v115;
                      __n128 *v67 = v115;
                    }
                  }
                }
                break;
              case 5uLL:
                result.n128_u64[0] = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *>(v15, v15 + 1, (uint64_t *)&v15[2], (__n128 *)v15[3].n128_u64, (__n128 *)a2[-1].n128_u64, result).n128_u64[0];
                return result;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v16 <= 383)
          {
            int v74 = v15 + 1;
            BOOL v76 = v15 == a2 || v74 == a2;
            if (a5)
            {
              if (!v76)
              {
                uint64_t v77 = 0;
                uint64_t v78 = v15;
                do
                {
                  unint64_t v80 = v74;
                  int64_t v81 = v78[1].n128_i64[0];
                  if (v81 < (int64_t)v78->n128_u64[0])
                  {
                    uint64_t v82 = v78[1].n128_i64[1];
                    uint64_t v83 = v77;
                    do
                    {
                      uint64_t result = *(__n128 *)((char *)v15 + v83);
                      *(__n128 *)((char *)v15 + v83 + 16) = result;
                      if (!v83)
                      {
                        int v79 = v15;
                        goto LABEL_118;
                      }
                      uint64_t v84 = *(uint64_t *)((char *)v15[-1].n128_i64 + v83);
                      v83 -= 16;
                    }
                    while (v81 < v84);
                    int v79 = (__n128 *)((char *)v15 + v83 + 16);
LABEL_118:
                    v79->n128_u64[0] = v81;
                    v79->n128_u64[1] = v82;
                  }
                  int v74 = v80 + 1;
                  v77 += 16;
                  uint64_t v78 = v80;
                }
                while (&v80[1] != a2);
              }
            }
            else if (!v76)
            {
              do
              {
                int v85 = v74;
                int64_t v86 = a1[1].n128_i64[0];
                if (v86 < (int64_t)a1->n128_u64[0])
                {
                  unint64_t v87 = a1[1].n128_u64[1];
                  int v88 = v85;
                  do
                  {
                    uint64_t result = v88[-1];
                    __n128 *v88 = result;
                    int64_t v89 = v88[-2].n128_i64[0];
                    --v88;
                  }
                  while (v86 < v89);
                  v88->n128_u64[0] = v86;
                  v88->n128_u64[1] = v87;
                }
                int v74 = v85 + 1;
                a1 = v85;
              }
              while (&v85[1] != a2);
            }
            return result;
          }
          if (!a4)
          {
            if (v15 != a2)
            {
              std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *,operations_research::ClosedInterval *>((char *)v15, (char *)a2, (char *)a2);
            }
            return result;
          }
          unint64_t v18 = v17 >> 1;
          uint64_t v19 = &v15[v17 >> 1];
          int64_t v20 = v13->n128_u64[0];
          if ((unint64_t)v16 >= 0x801) {
            break;
          }
          int64_t v22 = v15->n128_u64[0];
          if ((int64_t)v15->n128_u64[0] < (int64_t)v19->n128_u64[0])
          {
            if (v20 >= v22)
            {
              __n128 v99 = *v19;
              *uint64_t v19 = *v15;
              uint64_t result = v99;
              *unint64_t v15 = v99;
              if ((int64_t)v13->n128_u64[0] >= (int64_t)v15->n128_u64[0]) {
                goto LABEL_32;
              }
              __n128 v92 = *v15;
              *unint64_t v15 = *v13;
            }
            else
            {
              __n128 v92 = *v19;
              *uint64_t v19 = *v13;
            }
            uint64_t result = v92;
            *uint64_t v13 = v92;
LABEL_32:
            --a4;
            int64_t v23 = v15->n128_u64[0];
            if (a5) {
              goto LABEL_56;
            }
            goto LABEL_55;
          }
          if (v20 >= v22) {
            goto LABEL_32;
          }
          __n128 v95 = *v15;
          *unint64_t v15 = *v13;
          uint64_t result = v95;
          *uint64_t v13 = v95;
          if ((int64_t)v15->n128_u64[0] >= (int64_t)v19->n128_u64[0]) {
            goto LABEL_32;
          }
          __n128 v96 = *v19;
          *uint64_t v19 = *v15;
          uint64_t result = v96;
          *unint64_t v15 = v96;
          --a4;
          int64_t v23 = v15->n128_u64[0];
          if (a5) {
            goto LABEL_56;
          }
LABEL_55:
          if ((int64_t)v15[-1].n128_u64[0] < v23) {
            goto LABEL_56;
          }
          if (v23 < (int64_t)v13->n128_u64[0])
          {
            do
            {
              int64_t v57 = v15[1].n128_i64[0];
              ++v15;
            }
            while (v23 >= v57);
          }
          else
          {
            unint64_t n128_u64 = (unint64_t)v15[1].n128_u64;
            do
            {
              unint64_t v15 = (__n128 *)n128_u64;
              if (n128_u64 >= (unint64_t)a2) {
                break;
              }
              n128_u64 += 16;
            }
            while (v23 >= (int64_t)v15->n128_u64[0]);
          }
          uint64_t v59 = a2;
          if (v15 < a2)
          {
            uint64_t v59 = a2;
            do
            {
              int64_t v60 = v59[-1].n128_i64[0];
              --v59;
            }
            while (v23 < v60);
          }
          unint64_t v61 = a1->n128_u64[1];
          while (v15 < v59)
          {
            __n128 v109 = *v15;
            *unint64_t v15 = *v59;
            uint64_t result = v109;
            __n128 *v59 = v109;
            do
            {
              int64_t v62 = v15[1].n128_i64[0];
              ++v15;
            }
            while (v23 >= v62);
            do
            {
              int64_t v63 = v59[-1].n128_i64[0];
              --v59;
            }
            while (v23 < v63);
          }
          int v64 = v15 - 1;
          BOOL v6 = &v15[-1] >= a1;
          BOOL v7 = &v15[-1] == a1;
          if (&v15[-1] != a1)
          {
            uint64_t result = *v64;
            *a1 = *v64;
          }
          a5 = 0;
          v15[-1].n128_u64[0] = v23;
          v15[-1].n128_u64[1] = v61;
        }
        int64_t v21 = v19->n128_u64[0];
        if ((int64_t)v19->n128_u64[0] >= (int64_t)v15->n128_u64[0])
        {
          if (v20 < v21)
          {
            __n128 v93 = *v19;
            *uint64_t v19 = *v13;
            *uint64_t v13 = v93;
            if ((int64_t)v19->n128_u64[0] < (int64_t)v15->n128_u64[0])
            {
              __n128 v94 = *v15;
              *unint64_t v15 = *v19;
              *uint64_t v19 = v94;
            }
          }
        }
        else
        {
          if (v20 >= v21)
          {
            __n128 v97 = *v15;
            *unint64_t v15 = *v19;
            *uint64_t v19 = v97;
            if ((int64_t)v13->n128_u64[0] >= (int64_t)v19->n128_u64[0]) {
              goto LABEL_23;
            }
            __n128 v91 = *v19;
            *uint64_t v19 = *v13;
          }
          else
          {
            __n128 v91 = *v15;
            *unint64_t v15 = *v13;
          }
          *uint64_t v13 = v91;
        }
LABEL_23:
        int v24 = v15 + 1;
        unint64_t v25 = &v15[v18];
        int64_t v28 = v25[-1].n128_i64[0];
        long long v26 = v25 - 1;
        int64_t v27 = v28;
        int64_t v29 = v90->n128_u64[0];
        if (v28 >= (int64_t)v15[1].n128_u64[0])
        {
          if (v29 < v27)
          {
            __n128 v98 = *v26;
            *long long v26 = *v90;
            *int v90 = v98;
            if ((int64_t)v26->n128_u64[0] < (int64_t)v24->n128_u64[0])
            {
              __n128 v31 = *v24;
              *int v24 = *v26;
              *long long v26 = v31;
            }
          }
        }
        else if (v29 >= v27)
        {
          __n128 v32 = *v24;
          *int v24 = *v26;
          *long long v26 = v32;
          if ((int64_t)v90->n128_u64[0] < (int64_t)v26->n128_u64[0])
          {
            __n128 v100 = *v26;
            *long long v26 = *v90;
            *int v90 = v100;
          }
        }
        else
        {
          __n128 v30 = *v24;
          *int v24 = *v90;
          *int v90 = v30;
        }
        uint64_t v33 = v15 + 2;
        uint64_t v34 = &v15[v18];
        int64_t v37 = v34[1].n128_i64[0];
        int v35 = v34 + 1;
        int64_t v36 = v37;
        int64_t v38 = v14->n128_u64[0];
        if (v37 >= (int64_t)v15[2].n128_u64[0])
        {
          if (v38 < v36)
          {
            __n128 v101 = *v35;
            *int v35 = *v14;
            __n128 *v14 = v101;
            if ((int64_t)v35->n128_u64[0] < (int64_t)v33->n128_u64[0])
            {
              __n128 v40 = *v33;
              *uint64_t v33 = *v35;
              *int v35 = v40;
            }
          }
        }
        else
        {
          if (v38 >= v36)
          {
            __n128 v41 = *v33;
            *uint64_t v33 = *v35;
            *int v35 = v41;
            if ((int64_t)v14->n128_u64[0] >= (int64_t)v35->n128_u64[0]) {
              goto LABEL_45;
            }
            __n128 v102 = *v35;
            *int v35 = *v14;
            __n128 v39 = v102;
          }
          else
          {
            __n128 v39 = *v33;
            *uint64_t v33 = *v14;
          }
          __n128 *v14 = v39;
        }
LABEL_45:
        int64_t v42 = v19->n128_u64[0];
        int64_t v43 = v35->n128_u64[0];
        if ((int64_t)v19->n128_u64[0] >= (int64_t)v26->n128_u64[0])
        {
          if (v43 < v42)
          {
            __n128 v104 = *v19;
            *uint64_t v19 = *v35;
            *int v35 = v104;
            if ((int64_t)v19->n128_u64[0] < (int64_t)v26->n128_u64[0])
            {
              __n128 v105 = *v26;
              *long long v26 = *v19;
              *uint64_t v19 = v105;
            }
          }
        }
        else
        {
          if (v43 >= v42)
          {
            __n128 v106 = *v26;
            *long long v26 = *v19;
            *uint64_t v19 = v106;
            if ((int64_t)v35->n128_u64[0] >= (int64_t)v19->n128_u64[0]) {
              goto LABEL_54;
            }
            __n128 v103 = *v19;
            *uint64_t v19 = *v35;
          }
          else
          {
            __n128 v103 = *v26;
            *long long v26 = *v35;
          }
          *int v35 = v103;
        }
LABEL_54:
        __n128 v107 = *v15;
        *unint64_t v15 = *v19;
        uint64_t result = v107;
        *uint64_t v19 = v107;
        --a4;
        int64_t v23 = v15->n128_u64[0];
        if ((a5 & 1) == 0) {
          goto LABEL_55;
        }
LABEL_56:
        uint64_t v44 = 0;
        unint64_t v45 = v15->n128_u64[1];
        do
          int64_t v46 = v15[++v44].n128_i64[0];
        while (v46 < v23);
        unint64_t v47 = &v15[v44];
        long long v48 = a2;
        if (v44 == 1)
        {
          long long v48 = a2;
          do
          {
            if (v47 >= v48) {
              break;
            }
            int64_t v50 = v48[-1].n128_i64[0];
            --v48;
          }
          while (v50 >= v23);
        }
        else
        {
          do
          {
            int64_t v49 = v48[-1].n128_i64[0];
            --v48;
          }
          while (v49 >= v23);
        }
        unint64_t v15 = (__n128 *)((char *)v15 + v44 * 16);
        if (v47 < v48)
        {
          long long v51 = v48;
          do
          {
            __n128 v108 = *v15;
            *unint64_t v15 = *v51;
            uint64_t result = v108;
            *long long v51 = v108;
            do
            {
              int64_t v52 = v15[1].n128_i64[0];
              ++v15;
            }
            while (v52 < v23);
            do
            {
              int64_t v53 = v51[-1].n128_i64[0];
              --v51;
            }
            while (v53 >= v23);
          }
          while (v15 < v51);
        }
        unint64_t v54 = v15 - 1;
        if (&v15[-1] != a1)
        {
          uint64_t result = *v54;
          *a1 = *v54;
        }
        v15[-1].n128_u64[0] = v23;
        v15[-1].n128_u64[1] = v45;
        if (v47 >= v48) {
          break;
        }
LABEL_75:
        std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *,false>(a1, &v15[-1], a3, a4, a5 & 1);
        a5 = 0;
      }
      BOOL v55 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *>(a1, v15 - 1, result);
      if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *>(v15, a2, v56))
      {
        break;
      }
      if (!v55) {
        goto LABEL_75;
      }
    }
    a2 = v15 - 1;
    if (!v55) {
      continue;
    }
    return result;
  }
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *>(__n128 *a1, __n128 *a2, __n128 a3)
{
  switch(a2 - a1)
  {
    case 0:
    case 1:
      return 1;
    case 2:
      uint64_t v11 = a2[-1].n128_i64[0];
      unint64_t v10 = a2 - 1;
      if (v11 < (int64_t)a1->n128_u64[0]) {
        goto LABEL_10;
      }
      return 1;
    case 3:
      unint64_t v12 = (long long *)&a1[1];
      uint64_t v13 = a1[1].n128_i64[0];
      uint64_t v15 = a2[-1].n128_i64[0];
      unint64_t v10 = a2 - 1;
      uint64_t v14 = v15;
      if (v13 >= (int64_t)a1->n128_u64[0])
      {
        if (v14 < v13)
        {
          long long v25 = *v12;
          *unint64_t v12 = (__int128)*v10;
          __n128 *v10 = (__n128)v25;
          if ((int64_t)a1[1].n128_u64[0] < (int64_t)a1->n128_u64[0])
          {
LABEL_46:
            long long v41 = (__int128)*a1;
            *a1 = (__n128)*v12;
            *unint64_t v12 = v41;
            return 1;
          }
        }
      }
      else
      {
        if (v14 < v13)
        {
LABEL_10:
          __n128 v16 = *a1;
          *a1 = *v10;
LABEL_11:
          __n128 *v10 = v16;
          return 1;
        }
        long long v37 = (__int128)*a1;
        *a1 = (__n128)*v12;
        *unint64_t v12 = v37;
        if ((int64_t)v10->n128_u64[0] < (int64_t)a1[1].n128_u64[0])
        {
          __n128 v16 = (__n128)*v12;
          *unint64_t v12 = (__int128)*v10;
          goto LABEL_11;
        }
      }
      return 1;
    case 4:
      unint64_t v12 = (long long *)&a1[1];
      uint64_t v17 = a1[1].n128_i64[0];
      unint64_t v18 = (long long *)&a1[2];
      uint64_t v19 = a1[2].n128_i64[0];
      int64_t v20 = a2 - 1;
      uint64_t v21 = a1->n128_u64[0];
      if (v17 >= (int64_t)a1->n128_u64[0])
      {
        if (v19 < v17)
        {
          long long v26 = *v12;
          *unint64_t v12 = *v18;
          *unint64_t v18 = v26;
          if (*(void *)v12 < v21)
          {
            long long v27 = (__int128)*a1;
            *a1 = (__n128)*v12;
            *unint64_t v12 = v27;
          }
        }
      }
      else
      {
        if (v19 >= v17)
        {
          long long v38 = (__int128)*a1;
          *a1 = (__n128)*v12;
          *unint64_t v12 = v38;
          if (v19 >= (int64_t)a1[1].n128_u64[0]) {
            goto LABEL_43;
          }
          long long v22 = *v12;
          *unint64_t v12 = *v18;
        }
        else
        {
          long long v22 = (__int128)*a1;
          *a1 = (__n128)*v18;
        }
        *unint64_t v18 = v22;
      }
LABEL_43:
      if ((int64_t)v20->n128_u64[0] < *(void *)v18)
      {
        __n128 v39 = (__n128)*v18;
        *unint64_t v18 = (__int128)*v20;
        __n128 *v20 = v39;
        if (*(void *)v18 < *(void *)v12)
        {
          long long v40 = *v12;
          *unint64_t v12 = *v18;
          *unint64_t v18 = v40;
          if ((int64_t)a1[1].n128_u64[0] < (int64_t)a1->n128_u64[0]) {
            goto LABEL_46;
          }
        }
      }
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *>(a1, a1 + 1, (uint64_t *)&a1[2], (__n128 *)a1[3].n128_u64, (__n128 *)a2[-1].n128_u64, a3);
      return 1;
    default:
      unint64_t v4 = a1 + 2;
      uint64_t v5 = a1[2].n128_i64[0];
      BOOL v6 = a1 + 1;
      uint64_t v7 = a1[1].n128_i64[0];
      int64_t v8 = a1->n128_u64[0];
      if (v7 >= (int64_t)a1->n128_u64[0])
      {
        if (v5 < v7)
        {
          __n128 v23 = *v6;
          __n128 *v6 = *v4;
          __n128 *v4 = v23;
          if ((int64_t)v6->n128_u64[0] < v8)
          {
            __n128 v24 = *a1;
            *a1 = *v6;
            __n128 *v6 = v24;
          }
        }
      }
      else
      {
        if (v5 >= v7)
        {
          __n128 v28 = *a1;
          *a1 = *v6;
          __n128 *v6 = v28;
          if (v5 >= (int64_t)a1[1].n128_u64[0]) {
            goto LABEL_28;
          }
          __n128 v9 = *v6;
          __n128 *v6 = *v4;
        }
        else
        {
          __n128 v9 = *a1;
          *a1 = *v4;
        }
        __n128 *v4 = v9;
      }
LABEL_28:
      int64_t v29 = a1 + 3;
      if (&a1[3] == a2) {
        return 1;
      }
      uint64_t v30 = 0;
      int v31 = 0;
      while (1)
      {
        int64_t v32 = v29->n128_u64[0];
        if ((int64_t)v29->n128_u64[0] < (int64_t)v4->n128_u64[0]) {
          break;
        }
LABEL_31:
        unint64_t v4 = v29;
        v30 += 16;
        if (++v29 == a2) {
          return 1;
        }
      }
      uint64_t v33 = v29->n128_i64[1];
      uint64_t v34 = v30;
      do
      {
        *(__n128 *)((char *)a1 + v34 + 48) = *(__n128 *)((char *)a1 + v34 + 32);
        if (v34 == -32)
        {
          a1->n128_u64[0] = v32;
          a1->n128_u64[1] = v33;
          if (++v31 != 8) {
            goto LABEL_31;
          }
          return &v29[1] == a2;
        }
        uint64_t v35 = *(uint64_t *)((char *)a1[1].n128_i64 + v34);
        v34 -= 16;
      }
      while (v32 < v35);
      uint64_t v36 = (uint64_t)a1 + v34;
      *(void *)(v36 + 48) = v32;
      *(void *)(v36 + 56) = v33;
      if (++v31 != 8) {
        goto LABEL_31;
      }
      return &v29[1] == a2;
  }
}

__n128 std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *>(__n128 *a1, __n128 *a2, uint64_t *a3, _OWORD *a4, _OWORD *a5, __n128 result)
{
  uint64_t v6 = a2->n128_u64[0];
  uint64_t v7 = *a3;
  if ((int64_t)a2->n128_u64[0] >= (int64_t)a1->n128_u64[0])
  {
    if (v7 < v6)
    {
      uint64_t result = *a2;
      *a2 = *(__n128 *)a3;
      *(__n128 *)a3 = result;
      if ((int64_t)a2->n128_u64[0] < (int64_t)a1->n128_u64[0])
      {
        uint64_t result = *a1;
        *a1 = *a2;
        *a2 = result;
      }
    }
  }
  else
  {
    if (v7 < v6)
    {
      uint64_t result = *a1;
      *a1 = *(__n128 *)a3;
LABEL_9:
      *(__n128 *)a3 = result;
      goto LABEL_10;
    }
    uint64_t result = *a1;
    *a1 = *a2;
    *a2 = result;
    if (*a3 < (int64_t)a2->n128_u64[0])
    {
      uint64_t result = *a2;
      *a2 = *(__n128 *)a3;
      goto LABEL_9;
    }
  }
LABEL_10:
  if (*(void *)a4 < *a3)
  {
    uint64_t result = *(__n128 *)a3;
    *(_OWORD *)a3 = *a4;
    *a4 = result;
    if (*a3 < (int64_t)a2->n128_u64[0])
    {
      uint64_t result = *a2;
      *a2 = *(__n128 *)a3;
      *(__n128 *)a3 = result;
      if ((int64_t)a2->n128_u64[0] < (int64_t)a1->n128_u64[0])
      {
        uint64_t result = *a1;
        *a1 = *a2;
        *a2 = result;
      }
    }
  }
  if (*(void *)a5 < *(void *)a4)
  {
    uint64_t result = *(__n128 *)a4;
    *a4 = *a5;
    *a5 = result;
    if (*(void *)a4 < *a3)
    {
      uint64_t result = *(__n128 *)a3;
      *(_OWORD *)a3 = *a4;
      *a4 = result;
      if (*a3 < (int64_t)a2->n128_u64[0])
      {
        uint64_t result = *a2;
        *a2 = *(__n128 *)a3;
        *(__n128 *)a3 = result;
        if ((int64_t)a2->n128_u64[0] < (int64_t)a1->n128_u64[0])
        {
          uint64_t result = *a1;
          *a1 = *a2;
          *a2 = result;
        }
      }
    }
  }
  return result;
}

char *std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,operations_research::ClosedInterval *,operations_research::ClosedInterval *>(char *a1, char *a2, char *a3)
{
  if (a1 == a2) {
    return a3;
  }
  uint64_t v3 = a2 - a1;
  uint64_t v4 = (a2 - a1) >> 4;
  if (a2 - a1 >= 17 && (unint64_t)v3 >= 0x20)
  {
    int64_t v35 = (unint64_t)(v4 - 2) >> 1;
    int64_t v36 = v35;
    do
    {
      if (v35 >= v36)
      {
        uint64_t v37 = (2 * v36) | 1;
        long long v38 = (uint64_t *)&a1[16 * v37];
        if (2 * v36 + 2 >= v4)
        {
          long long v41 = (uint64_t *)&a1[16 * v36];
          uint64_t v42 = *v41;
          if (*v38 >= *v41) {
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v39 = v38[2];
          BOOL v40 = *v38 < v39;
          if (*v38 > v39) {
            uint64_t v39 = *v38;
          }
          if (v40)
          {
            v38 += 2;
            uint64_t v37 = 2 * v36 + 2;
          }
          long long v41 = (uint64_t *)&a1[16 * v36];
          uint64_t v42 = *v41;
          if (v39 >= *v41)
          {
LABEL_69:
            uint64_t v43 = v41[1];
            while (1)
            {
              int64_t v46 = v41;
              long long v41 = v38;
              *(_OWORD *)int64_t v46 = *(_OWORD *)v38;
              if (v35 < v37) {
                break;
              }
              uint64_t v47 = (2 * v37) | 1;
              long long v38 = (uint64_t *)&a1[16 * v47];
              uint64_t v37 = 2 * v37 + 2;
              if (v37 < v4)
              {
                uint64_t v44 = *v38;
                uint64_t v45 = v38[2];
                if (*v38 <= v45) {
                  uint64_t v44 = v38[2];
                }
                if (*v38 >= v45) {
                  uint64_t v37 = v47;
                }
                else {
                  v38 += 2;
                }
                if (v44 < v42) {
                  break;
                }
              }
              else
              {
                uint64_t v37 = v47;
                if (*v38 < v42) {
                  break;
                }
              }
            }
            *long long v41 = v42;
            v41[1] = v43;
          }
        }
      }
      BOOL v15 = v36-- <= 0;
    }
    while (!v15);
  }
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    if (v3 < 32)
    {
      uint64_t v6 = (long long *)a2;
      do
      {
        if (*(void *)v6 < *(void *)a1)
        {
          long long v7 = *v6;
          long long *v6 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v7;
        }
        ++v6;
      }
      while (v6 != (long long *)a3);
LABEL_37:
      uint64_t v5 = a3;
      goto LABEL_38;
    }
    int64_t v8 = (uint64_t *)(a1 + 32);
    __n128 v9 = (long long *)a2;
    while (1)
    {
      if (*(void *)v9 < *(void *)a1)
      {
        long long v10 = *v9;
        *__n128 v9 = *(_OWORD *)a1;
        *(_OWORD *)a1 = v10;
        uint64_t v11 = *((void *)a1 + 2);
        if (v3 == 32)
        {
          unint64_t v12 = (uint64_t *)(a1 + 16);
          uint64_t v13 = 1;
          uint64_t v14 = *(void *)a1;
          if (v11 >= *(void *)a1) {
            goto LABEL_26;
          }
        }
        else
        {
          BOOL v15 = v11 < *v8;
          if (v11 <= *v8) {
            uint64_t v11 = *v8;
          }
          if (v15) {
            unint64_t v12 = (uint64_t *)(a1 + 32);
          }
          else {
            unint64_t v12 = (uint64_t *)(a1 + 16);
          }
          if (v15) {
            uint64_t v13 = 2;
          }
          else {
            uint64_t v13 = 1;
          }
          uint64_t v14 = *(void *)a1;
          if (v11 >= *(void *)a1)
          {
LABEL_26:
            uint64_t v16 = *((void *)a1 + 1);
            uint64_t v17 = a1;
            while (1)
            {
              int64_t v20 = v17;
              uint64_t v17 = v12;
              _OWORD *v20 = *(_OWORD *)v12;
              if ((uint64_t)((unint64_t)(v4 - 2) >> 1) < v13) {
                break;
              }
              uint64_t v21 = (2 * v13) | 1;
              unint64_t v12 = (uint64_t *)&a1[16 * v21];
              uint64_t v13 = 2 * v13 + 2;
              if (v13 < v4)
              {
                uint64_t v18 = *v12;
                uint64_t v19 = v12[2];
                if (*v12 <= v19) {
                  uint64_t v18 = v12[2];
                }
                if (*v12 >= v19) {
                  uint64_t v13 = v21;
                }
                else {
                  v12 += 2;
                }
                if (v18 < v14) {
                  break;
                }
              }
              else
              {
                uint64_t v13 = v21;
                if (*v12 < v14) {
                  break;
                }
              }
            }
            *uint64_t v17 = v14;
            v17[1] = v16;
          }
        }
      }
      if (++v9 == (long long *)a3) {
        goto LABEL_37;
      }
    }
  }
LABEL_38:
  if (v3 >= 17)
  {
    uint64_t v22 = (unint64_t)v3 >> 4;
    do
    {
      uint64_t v23 = 0;
      long long v48 = *(_OWORD *)a1;
      __n128 v24 = a1;
      do
      {
        long long v25 = (uint64_t *)&v24[16 * v23 + 16];
        uint64_t v26 = (2 * v23) | 1;
        uint64_t v27 = 2 * v23 + 2;
        if (v27 < v22 && *v25 < v25[2])
        {
          v25 += 2;
          uint64_t v26 = v27;
        }
        *(_OWORD *)__n128 v24 = *(_OWORD *)v25;
        __n128 v24 = (char *)v25;
        uint64_t v23 = v26;
      }
      while (v26 <= (uint64_t)((unint64_t)(v22 - 2) >> 1));
      a2 -= 16;
      if (v25 == (uint64_t *)a2)
      {
        *(_OWORD *)long long v25 = v48;
      }
      else
      {
        *(_OWORD *)long long v25 = *(_OWORD *)a2;
        *(_OWORD *)a2 = v48;
        uint64_t v28 = (char *)v25 - a1 + 16;
        if (v28 >= 17)
        {
          unint64_t v29 = (((unint64_t)v28 >> 4) - 2) >> 1;
          uint64_t v30 = (uint64_t *)&a1[16 * v29];
          uint64_t v31 = *v25;
          if (*v30 < *v25)
          {
            uint64_t v32 = v25[1];
            do
            {
              uint64_t v33 = v25;
              long long v25 = v30;
              *(_OWORD *)uint64_t v33 = *(_OWORD *)v30;
              if (!v29) {
                break;
              }
              unint64_t v29 = (v29 - 1) >> 1;
              uint64_t v30 = (uint64_t *)&a1[16 * v29];
            }
            while (*v30 < v31);
            *long long v25 = v31;
            v25[1] = v32;
          }
        }
      }
      BOOL v15 = v22-- <= 2;
    }
    while (!v15);
  }
  return v5;
}

unint64_t operations_research::MemoryUsage@<X0>(operations_research *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  uint64_t v3 = operations_research::sysinfo::MemoryUsageProcess(this);
  if (v3 < 2147483649)
  {
    if (v3 <= 0x200000)
    {
      if (v3 < 2049)
      {
        double v5 = *(double *)&v3;
        uint64_t v6 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
        return absl::lts_2020_02_25::str_format_internal::FormatPack("%d", 2, (uint64_t)&v5, 1, a2);
      }
      else
      {
        double v5 = (double)v3 * 0.0009765625;
        uint64_t v6 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
        return absl::lts_2020_02_25::str_format_internal::FormatPack("%2lf KB", 7, (uint64_t)&v5, 1, a2);
      }
    }
    else
    {
      double v5 = (double)v3 * 0.000000953674316;
      uint64_t v6 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
      return absl::lts_2020_02_25::str_format_internal::FormatPack("%.2lf MB", 8, (uint64_t)&v5, 1, a2);
    }
  }
  else
  {
    double v5 = (double)v3 * 9.31322575e-10;
    uint64_t v6 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
    return absl::lts_2020_02_25::str_format_internal::FormatPack("%.2lf GB", 8, (uint64_t)&v5, 1, a2);
  }
}

void operations_research::StatsGroup::Register(operations_research::StatsGroup *this, operations_research::Stat *a2)
{
  double v5 = (char *)*((void *)this + 5);
  unint64_t v4 = *((void *)this + 6);
  uint64_t v6 = v5;
  if ((unint64_t)v5 < v4)
  {
    *(void *)double v5 = a2;
    uint64_t v7 = (uint64_t)(v5 + 8);
    goto LABEL_23;
  }
  int64_t v8 = (void **)((char *)this + 32);
  __n128 v9 = (char *)*((void *)this + 4);
  uint64_t v10 = (v5 - v9) >> 3;
  unint64_t v11 = v10 + 1;
  if ((unint64_t)(v10 + 1) >> 61) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v12 = v4 - (void)v9;
  if (v12 >> 2 > v11) {
    unint64_t v11 = v12 >> 2;
  }
  if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v13 = v11;
  }
  if (v13)
  {
    if (v13 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v14 = (char *)operator new(8 * v13);
    BOOL v15 = &v14[8 * v10];
    uint64_t v16 = &v14[8 * v13];
    *(void *)BOOL v15 = a2;
    uint64_t v7 = (uint64_t)(v15 + 8);
    uint64_t v17 = (char *)(v5 - v9);
    if (v5 == v9) {
      goto LABEL_21;
    }
    goto LABEL_14;
  }
  uint64_t v14 = 0;
  BOOL v15 = (char *)(8 * v10);
  uint64_t v16 = 0;
  *(void *)(8 * v10) = a2;
  uint64_t v7 = 8 * v10 + 8;
  uint64_t v17 = (char *)(v5 - v9);
  if (v5 != v9)
  {
LABEL_14:
    unint64_t v18 = (unint64_t)(v17 - 8);
    if (v18 < 0x58) {
      goto LABEL_28;
    }
    if ((unint64_t)(v9 - v14) < 0x20) {
      goto LABEL_28;
    }
    uint64_t v19 = (v18 >> 3) + 1;
    uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
    uint64_t v6 = &v5[-v20];
    v15 -= v20;
    uint64_t v21 = &v14[8 * v10 - 16];
    uint64_t v22 = (long long *)(v5 - 16);
    uint64_t v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v24 = *v22;
      *((_OWORD *)v21 - 1) = *(v22 - 1);
      *(_OWORD *)uint64_t v21 = v24;
      v21 -= 32;
      v22 -= 2;
      v23 -= 4;
    }
    while (v23);
    if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_28:
      do
      {
        uint64_t v25 = *((void *)v6 - 1);
        v6 -= 8;
        *((void *)v15 - 1) = v25;
        v15 -= 8;
      }
      while (v6 != v9);
    }
    uint64_t v6 = (char *)*v8;
  }
LABEL_21:
  *((void *)this + 4) = v15;
  *((void *)this + 5) = v7;
  *((void *)this + 6) = v16;
  if (v6) {
    operator delete(v6);
  }
LABEL_23:
  *((void *)this + 5) = v7;
}

void operations_research::StatsGroup::~StatsGroup(operations_research::StatsGroup *this)
{
  uint64_t v3 = (char *)this + 56;
  int v2 = (char *)*((void *)this + 7);
  unint64_t v4 = (char *)this + 64;
  if (v2 != (char *)this + 64)
  {
    do
    {
      uint64_t v6 = (char *)*((void *)v2 + 1);
      uint64_t v7 = v2;
      if (v6)
      {
        do
        {
          int64_t v8 = v6;
          uint64_t v6 = *(char **)v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          int64_t v8 = (char *)*((void *)v7 + 2);
          BOOL v9 = *(void *)v8 == (void)v7;
          uint64_t v7 = v8;
        }
        while (!v9);
      }
      uint64_t v10 = *((void *)v2 + 7);
      if (v10) {
        (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
      }
      int v2 = v8;
    }
    while (v8 != v4);
  }
  std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)v3, *((char **)this + 8));
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 7) = v4;
  std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)v3, 0);
  double v5 = (void *)*((void *)this + 4);
  if (v5)
  {
    *((void *)this + 5) = v5;
    operator delete(v5);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

void operations_research::StatsGroup::StatString(size_t *this@<X0>, std::string *a2@<X8>)
{
  int v2 = (operations_research::StatsGroup *)this;
  int v75 = 0;
  BOOL v76 = 0;
  uint64_t v77 = 0;
  size_t v3 = this[4];
  unint64_t v4 = 0;
  if (this[5] != v3)
  {
    uint64_t v5 = 0;
    int v70 = 0;
    while (1)
    {
      char v7 = (*(uint64_t (**)(void))(**(void **)(v3 + 8 * v5) + 40))(*(void *)(v3 + 8 * v5));
      size_t v3 = *((void *)v2 + 4);
      if ((v7 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v8 = *(void *)(v3 + 8 * v5);
      if (*(char *)(v8 + 31) < 0)
      {
        std::string::__init_copy_ctor_external(&v74, *(const std::string::value_type **)(v8 + 8), *(void *)(v8 + 16));
      }
      else
      {
        long long v9 = *(_OWORD *)(v8 + 8);
        v74.__r_.__value_.__r.__words[2] = *(void *)(v8 + 24);
        *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v9;
      }
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v10 = (std::string *)v74.__r_.__value_.__r.__words[0];
        int v2 = (operations_research::StatsGroup *)this;
        if (!v74.__r_.__value_.__l.__size_)
        {
          int v12 = 0;
          goto LABEL_31;
        }
      }
      else
      {
        int v2 = (operations_research::StatsGroup *)this;
        if (!*((unsigned char *)&v74.__r_.__value_.__s + 23))
        {
          int v12 = 0;
          goto LABEL_32;
        }
        uint64_t v10 = &v74;
      }
      unsigned int v11 = v10->__r_.__value_.__s.__data_[0];
      if (!v10->__r_.__value_.__s.__data_[0])
      {
        int v12 = 0;
        if ((SHIBYTE(v74.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_32;
        }
LABEL_29:
        uint64_t v10 = (std::string *)v74.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v10);
        goto LABEL_32;
      }
      int v12 = 0;
      do
      {
        if (v11 < 0xF0) {
          uint64_t v13 = 3;
        }
        else {
          uint64_t v13 = 4;
        }
        if (v11 < 0xE0) {
          uint64_t v13 = 2;
        }
        if (v11 >= 0xC0) {
          uint64_t v14 = v13;
        }
        else {
          uint64_t v14 = 1;
        }
        uint64_t v10 = (std::string *)((char *)v10 + v14);
        unsigned int v11 = v10->__r_.__value_.__s.__data_[0];
        ++v12;
      }
      while (v10->__r_.__value_.__s.__data_[0]);
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_29;
      }
LABEL_32:
      int v15 = v70;
      if (v70 <= v12) {
        int v15 = v12;
      }
      int v70 = v15;
      uint64_t v16 = *((void *)v2 + 4);
      if (v4 < v77)
      {
        v4->i64[0] = *(void *)(v16 + 8 * v5);
        uint64_t v6 = (uint64_t)&v4->i64[1];
      }
      else
      {
        uint64_t v17 = v75;
        int64_t v18 = (char *)v4 - (char *)v75;
        uint64_t v19 = ((char *)v4 - (char *)v75) >> 3;
        unint64_t v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 61) {
          std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v21 = (char *)v77 - (char *)v75;
        if (((char *)v77 - (char *)v75) >> 2 > v20) {
          unint64_t v20 = v21 >> 2;
        }
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v22 = v20;
        }
        if (v22)
        {
          if (v22 >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v23 = operator new(8 * v22);
          long long v24 = (int8x16_t *)&v23[8 * v19];
          v24->i64[0] = *(void *)(v16 + 8 * v5);
          uint64_t v6 = (uint64_t)&v24->i64[1];
          if (v4 != v17)
          {
LABEL_44:
            unint64_t v25 = (char *)&v4[-1].u64[1] - (char *)v17;
            if (v25 < 0x168)
            {
              uint64_t v26 = v4;
              goto LABEL_46;
            }
            if (&v23[v18 - 8 - (v25 & 0xFFFFFFFFFFFFFFF8)] > &v23[v18 - 8])
            {
              uint64_t v26 = v4;
              goto LABEL_46;
            }
            if ((unint64_t *)((char *)&v4[-1].u64[1] - (v25 & 0xFFFFFFFFFFFFFFF8)) > &v4[-1].u64[1])
            {
              uint64_t v26 = v4;
              goto LABEL_46;
            }
            if ((unint64_t)((char *)v17 - v23) < 0x20)
            {
              uint64_t v26 = v4;
              goto LABEL_46;
            }
            uint64_t v28 = (v25 >> 3) + 1;
            uint64_t v29 = 8 * (v28 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v26 = (int8x16_t *)((char *)v4 - v29);
            long long v24 = (int8x16_t *)((char *)v24 - v29);
            uint64_t v30 = (int8x16_t *)&v23[8 * v19 - 16];
            uint64_t v31 = v4 - 1;
            uint64_t v32 = v28 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              int8x16_t v33 = *v31;
              v30[-1] = v31[-1];
              *uint64_t v30 = v33;
              v30 -= 2;
              v31 -= 2;
              v32 -= 4;
            }
            while (v32);
            if (v28 != (v28 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_46:
                uint64_t v27 = v26[-1].i64[1];
                uint64_t v26 = (int8x16_t *)((char *)v26 - 8);
                v24[-1].i64[1] = v27;
                long long v24 = (int8x16_t *)((char *)v24 - 8);
              }
              while (v26 != v17);
            }
            unint64_t v4 = v75;
            int v75 = v24;
            BOOL v76 = (int8x16_t *)v6;
            uint64_t v77 = (int8x16_t *)&v23[8 * v22];
            int v2 = (operations_research::StatsGroup *)this;
            if (!v4) {
              goto LABEL_4;
            }
LABEL_51:
            operator delete(v4);
            goto LABEL_4;
          }
        }
        else
        {
          uint64_t v23 = 0;
          long long v24 = (int8x16_t *)(8 * v19);
          *(void *)(8 * v19) = *(void *)(v16 + 8 * v5);
          uint64_t v6 = 8 * v19 + 8;
          if (v4 != v17) {
            goto LABEL_44;
          }
        }
        int v75 = v24;
        BOOL v76 = (int8x16_t *)v6;
        uint64_t v77 = (int8x16_t *)&v23[8 * v22];
        int v2 = (operations_research::StatsGroup *)this;
        if (v4) {
          goto LABEL_51;
        }
      }
LABEL_4:
      BOOL v76 = (int8x16_t *)v6;
      size_t v3 = *((void *)v2 + 4);
      unint64_t v4 = (int8x16_t *)v6;
LABEL_5:
      if (++v5 >= (unint64_t)((uint64_t)(*((void *)v2 + 5) - v3) >> 3)) {
        goto LABEL_63;
      }
    }
  }
  int v70 = 0;
LABEL_63:
  int v34 = *((_DWORD *)v2 + 6);
  if (v34)
  {
    if (v34 != 1)
    {
      google::LogMessageFatal::LogMessageFatal((google::LogMessageFatal *)&__p, (google::glog_internal_namespace_ *)"./ortools/util/stats.cc", 94);
      int v67 = (void *)google::LogMessage::stream((google::LogMessage *)&__p);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v67, (uint64_t)"Unknown print order: ", 21);
      std::ostream::operator<<();
      google::LogMessageFatal::~LogMessageFatal((google::LogMessageFatal *)&__p);
    }
    unint64_t v35 = 126 - 2 * __clz(((char *)v4 - (char *)v75) >> 3);
    if (v4 == v75) {
      uint64_t v36 = 0;
    }
    else {
      uint64_t v36 = v35;
    }
    std::__introsort<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **,false>(v75, v4, v36, 1);
  }
  else
  {
    unint64_t v37 = 126 - 2 * __clz(((char *)v4 - (char *)v75) >> 3);
    if (v4 == v75) {
      uint64_t v38 = 0;
    }
    else {
      uint64_t v38 = v37;
    }
    std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**,false>((uint64_t)v75, v4, (unsigned int (**)(uint64_t))&__p, v38, 1);
  }
  BOOL v40 = v75;
  uint64_t v39 = v76;
  if (v75 == v76)
  {
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
    a2->__r_.__value_.__s.__data_[0] = 0;
    if (v40) {
      goto LABEL_137;
    }
    return;
  }
  long long v41 = (const void **)this;
  int v42 = *((char *)this + 23);
  if (v42 >= 0) {
    size_t v43 = *((unsigned __int8 *)this + 23);
  }
  else {
    size_t v43 = this[1];
  }
  unint64_t v44 = v43 + 3;
  if (v43 + 3 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (v44 >= 0x17)
  {
    uint64_t v47 = (v44 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v44 | 7) != 0x17) {
      uint64_t v47 = v44 | 7;
    }
    uint64_t v48 = v47 + 1;
    uint64_t v45 = (char *)operator new(v47 + 1);
    long long v41 = (const void **)this;
    a2->__r_.__value_.__l.__size_ = v44;
    a2->__r_.__value_.__r.__words[2] = v48 | 0x8000000000000000;
    a2->__r_.__value_.__r.__words[0] = (std::string::size_type)v45;
    int64_t v46 = a2;
    goto LABEL_86;
  }
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  a2->__r_.__value_.__r.__words[0] = 0;
  uint64_t v45 = (char *)a2;
  *((unsigned char *)&a2->__r_.__value_.__s + 23) = v44;
  int64_t v46 = a2;
  if (v43)
  {
LABEL_86:
    if (v42 >= 0) {
      int64_t v49 = v41;
    }
    else {
      int64_t v49 = *v41;
    }
    memmove(v45, v49, v43);
  }
  unint64_t v50 = 0;
  *(_DWORD *)&v45[v43] = 686880;
  unint64_t v51 = ((char *)v39 - (char *)v40) >> 3;
  do
  {
    while (1)
    {
      std::string::append(v46, "  ");
      uint64_t v52 = v40->i64[v50];
      if (*(char *)(v52 + 31) < 0)
      {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v52 + 8), *(void *)(v52 + 16));
      }
      else
      {
        long long v53 = *(_OWORD *)(v52 + 8);
        __p.__r_.__value_.__r.__words[2] = *(void *)(v52 + 24);
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v53;
      }
      unint64_t v54 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? &__p
          : (std::string *)__p.__r_.__value_.__r.__words[0];
      std::string::size_type v55 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? HIBYTE(__p.__r_.__value_.__r.__words[2])
          : __p.__r_.__value_.__l.__size_;
      std::string::append(v46, (const std::string::value_type *)v54, v55);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        uint64_t v56 = v40->i64[v50];
        if ((*(char *)(v56 + 31) & 0x80000000) == 0)
        {
LABEL_104:
          long long v57 = *(_OWORD *)(v56 + 8);
          v72.__r_.__value_.__r.__words[2] = *(void *)(v56 + 24);
          *(_OWORD *)&v72.__r_.__value_.__l.__data_ = v57;
          goto LABEL_107;
        }
      }
      else
      {
        uint64_t v56 = v40->i64[v50];
        if ((*(char *)(v56 + 31) & 0x80000000) == 0) {
          goto LABEL_104;
        }
      }
      std::string::__init_copy_ctor_external(&v72, *(const std::string::value_type **)(v56 + 8), *(void *)(v56 + 16));
LABEL_107:
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
      {
        if (!v72.__r_.__value_.__l.__size_
          || (unint64_t v58 = (std::string *)v72.__r_.__value_.__r.__words[0],
              unsigned int v59 = *v72.__r_.__value_.__l.__data_,
              !*v72.__r_.__value_.__l.__data_))
        {
LABEL_124:
          int v60 = 0;
          goto LABEL_125;
        }
      }
      else
      {
        if (!*((unsigned char *)&v72.__r_.__value_.__s + 23)) {
          goto LABEL_124;
        }
        unint64_t v58 = &v72;
        unsigned int v59 = v72.__r_.__value_.__s.__data_[0];
        if (!v72.__r_.__value_.__s.__data_[0]) {
          goto LABEL_124;
        }
      }
      int v60 = 0;
      do
      {
        if (v59 < 0xF0) {
          uint64_t v61 = 3;
        }
        else {
          uint64_t v61 = 4;
        }
        if (v59 < 0xE0) {
          uint64_t v61 = 2;
        }
        if (v59 >= 0xC0) {
          uint64_t v62 = v61;
        }
        else {
          uint64_t v62 = 1;
        }
        unint64_t v58 = (std::string *)((char *)v58 + v62);
        unsigned int v59 = v58->__r_.__value_.__s.__data_[0];
        ++v60;
      }
      while (v58->__r_.__value_.__s.__data_[0]);
LABEL_125:
      std::string::append(v46, v70 - v60, 32);
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v72.__r_.__value_.__l.__data_);
      }
      (*(void (**)(std::string *__return_ptr))(*(void *)v40->i64[v50] + 32))(&v71);
      int64_t v63 = std::string::insert(&v71, 0, " : ");
      long long v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v63->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v64;
      v63->__r_.__value_.__l.__size_ = 0;
      v63->__r_.__value_.__r.__words[2] = 0;
      v63->__r_.__value_.__r.__words[0] = 0;
      int v65 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? &__p
          : (std::string *)__p.__r_.__value_.__r.__words[0];
      std::string::size_type v66 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? HIBYTE(__p.__r_.__value_.__r.__words[2])
          : __p.__r_.__value_.__l.__size_;
      std::string::append(v46, (const std::string::value_type *)v65, v66);
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        break;
      }
      operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_135;
      }
LABEL_92:
      if (v51 <= ++v50) {
        goto LABEL_136;
      }
    }
    if ((SHIBYTE(v71.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_92;
    }
LABEL_135:
    operator delete(v71.__r_.__value_.__l.__data_);
    ++v50;
  }
  while (v51 > v50);
LABEL_136:
  std::string::append(v46, "}\n");
LABEL_137:
  operator delete(v40);
}

void sub_23CDB8150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  google::LogMessageFatal::~LogMessageFatal((google::LogMessageFatal *)va);
}

void sub_23CDB8158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  uint64_t v32 = *(void **)(v30 - 112);
  if (v32)
  {
    *(void *)(v30 - 104) = v32;
    operator delete(v32);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL operations_research::anonymous namespace'::CompareStatPointers(const std::string::value_type **this, const std::string::value_type **a2, const operations_research::Stat *a3)
{
  int v5 = (*((uint64_t (**)(const std::string::value_type **, const std::string::value_type **, const operations_research::Stat *))*this
        + 2))(this, a2, a3);
  int v6 = (*((uint64_t (**)(const std::string::value_type **))*a2 + 2))(a2);
  char v7 = *this;
  if (v5 == v6)
  {
    double v8 = (*((double (**)(const std::string::value_type **))v7 + 3))(this);
    if (v8 == (*((double (**)(const std::string::value_type **))*a2 + 3))(a2))
    {
      if (*((char *)this + 31) < 0)
      {
        std::string::__init_copy_ctor_external(&v24, this[1], (std::string::size_type)this[2]);
        if ((*((char *)a2 + 31) & 0x80000000) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        std::string v24 = *(std::string *)(this + 1);
        if ((*((char *)a2 + 31) & 0x80000000) == 0)
        {
LABEL_5:
          std::string v23 = *(std::string *)(a2 + 1);
          goto LABEL_13;
        }
      }
      std::string::__init_copy_ctor_external(&v23, a2[1], (std::string::size_type)a2[2]);
LABEL_13:
      int v13 = SHIBYTE(v23.__r_.__value_.__r.__words[2]);
      uint64_t v14 = (void *)v23.__r_.__value_.__r.__words[0];
      char v15 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
      if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v24.__r_.__value_.__l.__size_;
      }
      if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v17 = &v24;
      }
      else {
        uint64_t v17 = (std::string *)v24.__r_.__value_.__r.__words[0];
      }
      if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v18 = HIBYTE(v23.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v18 = v23.__r_.__value_.__l.__size_;
      }
      if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v19 = &v23;
      }
      else {
        uint64_t v19 = (std::string *)v23.__r_.__value_.__r.__words[0];
      }
      if (v18 >= size) {
        size_t v20 = size;
      }
      else {
        size_t v20 = v18;
      }
      int v21 = memcmp(v17, v19, v20);
      if (v21) {
        BOOL v12 = v21 < 0;
      }
      else {
        BOOL v12 = size < v18;
      }
      if (v13 < 0)
      {
        operator delete(v14);
        if ((*((unsigned char *)&v24.__r_.__value_.__s + 23) & 0x80) == 0) {
          return v12;
        }
      }
      else if ((v15 & 0x80) == 0)
      {
        return v12;
      }
      operator delete(v24.__r_.__value_.__l.__data_);
      return v12;
    }
    double v11 = (*((double (**)(const std::string::value_type **))*this + 3))(this);
    BOOL v10 = v11 <= (*((double (**)(const std::string::value_type **))*a2 + 3))(a2);
  }
  else
  {
    int v9 = (*((uint64_t (**)(const std::string::value_type **))v7 + 2))(this);
    BOOL v10 = v9 <= (*((int (**)(const std::string::value_type **))*a2 + 2))(a2);
  }
  return !v10;
}

void sub_23CDB84C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

operations_research::Stat *operations_research::DistributionStat::DistributionStat(operations_research::Stat *a1, long long *a2, operations_research::StatsGroup *this)
{
  *(void *)a1 = &unk_26F0BCDD8;
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)a1 + 8), *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)a1 + 3) = *((void *)a2 + 2);
    *(_OWORD *)((char *)a1 + 8) = v5;
  }
  operations_research::StatsGroup::Register(this, a1);
  *(void *)a1 = &unk_26F0C48D8;
  *((_OWORD *)a1 + 2) = 0u;
  *((_OWORD *)a1 + 3) = 0u;
  *((_OWORD *)a1 + 4) = 0u;
  return a1;
}

void sub_23CDB8590(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

double operations_research::DistributionStat::Reset(operations_research::DistributionStat *this)
{
  double result = 0.0;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return result;
}

unint64_t operations_research::TimeDistribution::PrintCyclesAsTime@<X0>(double a1@<D0>, uint64_t a2@<X8>)
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  double v3 = a1 * 0.000000001;
  double v4 = v3 * 1.001;
  if (v3 * 1.001 >= 3600.0)
  {
    double v6 = v3 / 3600.0;
    char v7 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
    return absl::lts_2020_02_25::str_format_internal::FormatPack("%.2fh", 5, (uint64_t)&v6, 1, a2);
  }
  else if (v4 >= 60.0)
  {
    double v6 = v3 / 60.0;
    char v7 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
    return absl::lts_2020_02_25::str_format_internal::FormatPack("%.2fm", 5, (uint64_t)&v6, 1, a2);
  }
  else if (v4 >= 1.0)
  {
    double v6 = v3;
    char v7 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
    return absl::lts_2020_02_25::str_format_internal::FormatPack("%.2fs", 5, (uint64_t)&v6, 1, a2);
  }
  else if (v4 >= 0.001)
  {
    double v6 = v3 * 1000.0;
    char v7 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
    return absl::lts_2020_02_25::str_format_internal::FormatPack("%.2fms", 6, (uint64_t)&v6, 1, a2);
  }
  else if (v4 >= 0.000001)
  {
    double v6 = v3 * 1000000.0;
    char v7 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
    return absl::lts_2020_02_25::str_format_internal::FormatPack("%.2fus", 6, (uint64_t)&v6, 1, a2);
  }
  else
  {
    double v6 = v3 * 1000000000.0;
    char v7 = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
    return absl::lts_2020_02_25::str_format_internal::FormatPack("%.2fns", 6, (uint64_t)&v6, 1, a2);
  }
}

void operations_research::TimeDistribution::ValueAsString(operations_research::TimeDistribution *this@<X0>, uint64_t a2@<X8>)
{
  unsigned char v16[12] = *MEMORY[0x263EF8340];
  operations_research::TimeDistribution::PrintCyclesAsTime(*((double *)this + 7), (uint64_t)v14);
  operations_research::TimeDistribution::PrintCyclesAsTime(*((double *)this + 8), (uint64_t)v12);
  operations_research::TimeDistribution::PrintCyclesAsTime(*((double *)this + 5), (uint64_t)v10);
  uint64_t v4 = *((void *)this + 9);
  if (v4) {
    double v5 = sqrt(*((double *)this + 6) / (double)v4);
  }
  else {
    double v5 = 0.0;
  }
  operations_research::TimeDistribution::PrintCyclesAsTime(v5, (uint64_t)v8);
  operations_research::TimeDistribution::PrintCyclesAsTime(*((double *)this + 4), (uint64_t)__p);
  v16[0] = *((void *)this + 9);
  v16[1] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
  v16[2] = v14;
  v16[3] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<std::string>;
  v16[4] = v12;
  v16[5] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<std::string>;
  v16[6] = v10;
  v16[7] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<std::string>;
  v16[8] = v8;
  v16[9] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<std::string>;
  v16[10] = __p;
  v16[11] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<std::string>;
  absl::lts_2020_02_25::str_format_internal::FormatPack("%8u [%8s, %8s] %8s %8s %8s\n", 27, (uint64_t)v16, 6, a2);
  if (v7 < 0)
  {
    operator delete(__p[0]);
    if ((v9 & 0x80000000) == 0)
    {
LABEL_6:
      if ((v11 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      goto LABEL_12;
    }
  }
  else if ((v9 & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(v8[0]);
  if ((v11 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(v10[0]);
  if ((v13 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_14:
    operator delete(v14[0]);
    return;
  }
LABEL_13:
  operator delete(v12[0]);
  if (v15 < 0) {
    goto LABEL_14;
  }
}

void sub_23CDB8974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a21);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a38 & 0x80000000) == 0) {
LABEL_12:
    }
      _Unwind_Resume(exception_object);
LABEL_11:
    operator delete(a33);
    _Unwind_Resume(exception_object);
  }
LABEL_10:
  operator delete(a27);
  if ((a38 & 0x80000000) == 0) {
    goto LABEL_12;
  }
  goto LABEL_11;
}

uint64_t operations_research::RatioDistribution::Add(uint64_t this, double a2)
{
  uint64_t v2 = *(void *)(this + 72);
  if (v2)
  {
    double v4 = *(double *)(this + 48);
    double v3 = *(double *)(this + 56);
    if (v3 > a2) {
      double v3 = a2;
    }
    double v5 = *(double *)(this + 64);
    if (v5 < a2) {
      double v5 = a2;
    }
    *(double *)(this + 56) = v3;
    *(double *)(this + 64) = v5;
    double v6 = *(double *)(this + 32) + a2;
    uint64_t v7 = v2 + 1;
    double v8 = a2 - *(double *)(this + 40);
    double v9 = v6 / (double)v7;
    *(double *)(this + 32) = v6;
    *(double *)(this + 40) = v9;
    *(double *)(this + 48) = v4 + v8 * (a2 - v9);
    *(void *)(this + 72) = v7;
  }
  else
  {
    *(double *)(this + 56) = a2;
    *(double *)(this + 64) = a2;
    *(double *)(this + 32) = a2;
    *(double *)(this + 40) = a2;
    *(void *)(this + 72) = 1;
  }
  return this;
}

unint64_t operations_research::RatioDistribution::ValueAsString@<X0>(operations_research::RatioDistribution *this@<X0>, uint64_t a2@<X8>)
{
  v8[10] = *MEMORY[0x263EF8340];
  double v2 = *((double *)this + 8);
  uint64_t v3 = *((void *)this + 9);
  if (v3) {
    double v4 = sqrt(*((double *)this + 6) / (double)v3) * 100.0;
  }
  else {
    double v4 = 0.0;
  }
  double v5 = *((double *)this + 5) * 100.0;
  double v6 = *((double *)this + 7) * 100.0;
  v8[0] = *((void *)this + 9);
  v8[1] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
  *(double *)&v8[2] = v6;
  v8[3] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  *(double *)&v8[4] = v2 * 100.0;
  v8[5] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  *(double *)&v8[6] = v5;
  v8[7] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  *(double *)&v8[8] = v4;
  v8[9] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  return absl::lts_2020_02_25::str_format_internal::FormatPack("%8u [%7.2f%%, %7.2f%%] %7.2f%% %7.2f%%\n", 39, (uint64_t)v8, 5, a2);
}

unint64_t operations_research::DoubleDistribution::ValueAsString@<X0>(operations_research::DoubleDistribution *this@<X0>, uint64_t a2@<X8>)
{
  v8[10] = *MEMORY[0x263EF8340];
  uint64_t v2 = *((void *)this + 5);
  uint64_t v3 = *((void *)this + 9);
  if (v3) {
    double v4 = sqrt(*((double *)this + 6) / (double)v3);
  }
  else {
    double v4 = 0.0;
  }
  v8[0] = *((void *)this + 9);
  uint64_t v5 = *((void *)this + 7);
  v8[1] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
  v8[2] = v5;
  uint64_t v6 = *((void *)this + 8);
  v8[3] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  v8[4] = v6;
  v8[5] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  v8[6] = v2;
  v8[7] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  *(double *)&v8[8] = v4;
  v8[9] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  return absl::lts_2020_02_25::str_format_internal::FormatPack("%8u [%8.1e, %8.1e] %8.1e %8.1e\n", 31, (uint64_t)v8, 5, a2);
}

uint64_t operations_research::IntegerDistribution::Add(uint64_t this, uint64_t a2)
{
  double v2 = (double)a2;
  uint64_t v3 = *(void *)(this + 72);
  if (v3)
  {
    double v5 = *(double *)(this + 48);
    double v4 = *(double *)(this + 56);
    if (v4 > v2) {
      double v4 = (double)a2;
    }
    double v6 = *(double *)(this + 64);
    if (v6 < v2) {
      double v6 = (double)a2;
    }
    *(double *)(this + 56) = v4;
    *(double *)(this + 64) = v6;
    double v7 = *(double *)(this + 32) + v2;
    uint64_t v8 = v3 + 1;
    double v9 = v2 - *(double *)(this + 40);
    double v10 = v7 / (double)v8;
    *(double *)(this + 32) = v7;
    *(double *)(this + 40) = v10;
    *(double *)(this + 48) = v5 + v9 * (v2 - v10);
    *(void *)(this + 72) = v8;
  }
  else
  {
    *(double *)(this + 56) = v2;
    *(double *)(this + 64) = v2;
    *(double *)(this + 32) = v2;
    *(double *)(this + 40) = v2;
    *(void *)(this + 72) = 1;
  }
  return this;
}

unint64_t operations_research::IntegerDistribution::ValueAsString@<X0>(operations_research::IntegerDistribution *this@<X0>, uint64_t a2@<X8>)
{
  v9[12] = *MEMORY[0x263EF8340];
  uint64_t v2 = *((void *)this + 5);
  uint64_t v3 = *((void *)this + 9);
  if (v3) {
    double v4 = sqrt(*((double *)this + 6) / (double)v3);
  }
  else {
    double v4 = 0.0;
  }
  v9[0] = *((void *)this + 9);
  uint64_t v5 = *((void *)this + 7);
  v9[1] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<long long>;
  v9[2] = v5;
  uint64_t v6 = *((void *)this + 8);
  v9[3] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  v9[4] = v6;
  v9[5] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  v9[6] = v2;
  v9[7] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  *(double *)&v9[8] = v4;
  uint64_t v7 = *((void *)this + 4);
  v9[9] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  v9[10] = v7;
  v9[11] = absl::lts_2020_02_25::str_format_internal::FormatArgImpl::Dispatch<double>;
  return absl::lts_2020_02_25::str_format_internal::FormatPack("%8u [%8.f, %8.f] %8.2f %8.2f %8.f\n", 34, (uint64_t)v9, 6, a2);
}

double operations_research::DistributionStat::Sum(operations_research::DistributionStat *this)
{
  return *((double *)this + 4);
}

BOOL operations_research::DistributionStat::WorthPrinting(operations_research::DistributionStat *this)
{
  return *((void *)this + 9) != 0;
}

void operations_research::TimeDistribution::~TimeDistribution(void **this)
{
  *this = &unk_26F0BCDD8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

{
  uint64_t vars8;

  *this = &unk_26F0BCDD8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  JUMPOUT(0x23ECF2BC0);
}

uint64_t operations_research::TimeDistribution::Priority(operations_research::TimeDistribution *this)
{
  return 100;
}

void operations_research::RatioDistribution::~RatioDistribution(void **this)
{
  *this = &unk_26F0BCDD8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

{
  uint64_t vars8;

  *this = &unk_26F0BCDD8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  JUMPOUT(0x23ECF2BC0);
}

void operations_research::DoubleDistribution::~DoubleDistribution(void **this)
{
  *this = &unk_26F0BCDD8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

{
  uint64_t vars8;

  *this = &unk_26F0BCDD8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  JUMPOUT(0x23ECF2BC0);
}

void operations_research::IntegerDistribution::~IntegerDistribution(void **this)
{
  *this = &unk_26F0BCDD8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
}

{
  uint64_t vars8;

  *this = &unk_26F0BCDD8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }

  JUMPOUT(0x23ECF2BC0);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**,false>(uint64_t result, int8x16_t *a2, unsigned int (**a3)(uint64_t), uint64_t a4, int a5)
{
  char v11 = (int8x16_t *)result;
  while (2)
  {
    BOOL v12 = v11;
LABEL_3:
    int v103 = a5;
    while (1)
    {
      char v11 = v12;
      uint64_t v13 = (char *)a2 - (char *)v12;
      unint64_t v14 = ((char *)a2 - (char *)v12) >> 3;
      if (v6 || !v5)
      {
        switch(v14)
        {
          case 0uLL:
          case 1uLL:
            return result;
          case 2uLL:
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(a2[-1].i64[1], v12->i64[0]);
            if (!result) {
              return result;
            }
            uint64_t v76 = v12->i64[0];
            v12->i64[0] = a2[-1].i64[1];
            goto LABEL_146;
          case 3uLL:
            char v77 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v12->i64[1], v12->i64[0]);
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(a2[-1].i64[1], v12->i64[1]);
            if (v77)
            {
              uint64_t v78 = v12->i64[0];
              if (result)
              {
                v12->i64[0] = a2[-1].i64[1];
                a2[-1].i64[1] = v78;
              }
              else
              {
                v12->i64[0] = v12->i64[1];
                v12->i64[1] = v78;
                double result = ((uint64_t (*)(uint64_t))*a3)(a2[-1].i64[1]);
                if (result)
                {
                  uint64_t v76 = v12->i64[1];
                  v12->i64[1] = a2[-1].i64[1];
LABEL_146:
                  a2[-1].i64[1] = v76;
                }
              }
            }
            else if (result)
            {
              uint64_t v96 = v12->i64[1];
              v12->i64[1] = a2[-1].i64[1];
              a2[-1].i64[1] = v96;
              double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v12->i64[1], v12->i64[0]);
LABEL_135:
              if (result) {
                *BOOL v12 = vextq_s8(*v12, *v12, 8uLL);
              }
            }
            break;
          case 4uLL:
            return std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**>(v12, &v12->i64[1], (int8x16_t *)v12[1].i64, &a2[-1].i64[1], a3);
          case 5uLL:
            int v79 = v12 + 1;
            unint64_t v80 = &v12[1].i64[1];
            std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**>(v12, &v12->i64[1], (int8x16_t *)v12[1].i64, &v12[1].i64[1], a3);
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(a2[-1].i64[1], v12[1].i64[1]);
            if (!result) {
              return result;
            }
            uint64_t v81 = *v80;
            uint64_t *v80 = a2[-1].i64[1];
            a2[-1].i64[1] = v81;
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(*v80, v79->i64[0]);
            if (!result) {
              return result;
            }
            uint64_t v82 = v79->i64[0];
            v79->i64[0] = *v80;
            uint64_t *v80 = v82;
            double result = ((uint64_t (*)(void))*a3)();
            if (!result) {
              return result;
            }
            uint64_t v84 = v12->i64[1];
            uint64_t v83 = v12[1].i64[0];
            uint64_t v85 = v12->i64[0];
            v12->i64[1] = v83;
            v12[1].i64[0] = v84;
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v83, v85);
            goto LABEL_135;
          default:
            JUMPOUT(0);
        }
        return result;
      }
      if (v13 <= 191)
      {
        int64_t v86 = (int8x16_t *)&v12->u64[1];
        BOOL v88 = v12 == a2 || v86 == a2;
        if (a5)
        {
          if (!v88)
          {
            uint64_t v89 = 0;
            int v90 = (uint64_t *)v12;
            do
            {
              uint64_t v93 = *v90;
              uint64_t v92 = v90[1];
              int v90 = (uint64_t *)v86;
              double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v92, v93);
              if (result)
              {
                uint64_t v94 = *v90;
                uint64_t v95 = v89;
                do
                {
                  *(uint64_t *)((char *)&v11->i64[1] + v95) = *(uint64_t *)((char *)v11->i64 + v95);
                  if (!v95)
                  {
                    __n128 v91 = (uint64_t *)v11;
                    goto LABEL_122;
                  }
                  double result = ((uint64_t (*)(uint64_t, void))*a3)(v94, *(uint64_t *)((char *)&v11->i64[-1] + v95));
                  v95 -= 8;
                }
                while ((result & 1) != 0);
                __n128 v91 = (uint64_t *)((char *)&v11->i64[1] + v95);
LABEL_122:
                uint64_t *v91 = v94;
              }
              int64_t v86 = (int8x16_t *)(v90 + 1);
              v89 += 8;
            }
            while (v90 + 1 != (uint64_t *)a2);
          }
        }
        else if (!v88)
        {
          do
          {
            uint64_t v98 = v11->i64[0];
            uint64_t v97 = v11->i64[1];
            char v11 = v86;
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v97, v98);
            if (result)
            {
              uint64_t v99 = v11->i64[0];
              __n128 v100 = (uint64_t *)v11;
              do
              {
                __n128 v101 = v100;
                uint64_t v102 = *--v100;
                uint64_t *v101 = v102;
                double result = ((uint64_t (*)(uint64_t, void))*a3)(v99, *(v101 - 2));
              }
              while ((result & 1) != 0);
              uint64_t *v100 = v99;
            }
            int64_t v86 = (int8x16_t *)&v11->u64[1];
          }
          while (&v11->u64[1] != (unint64_t *)a2);
        }
        return result;
      }
      if (!a4)
      {
        if (v12 != a2)
        {
          return (uint64_t)std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**,operations_research::Stat**>(v12, a2, a2, (unsigned int (**)(void, uint64_t))a3);
        }
        return result;
      }
      unint64_t v15 = v14 >> 1;
      uint64_t v16 = *a3;
      if ((unint64_t)v13 >= 0x401)
      {
        char v17 = ((uint64_t (*)(uint64_t, uint64_t))v16)(v11->i64[v15], v11->i64[0]);
        int v18 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(a2[-1].i64[1], v11->i64[v15]);
        uint64_t v104 = a4;
        if (v17)
        {
          uint64_t v19 = v11->i64[0];
          if (v18)
          {
            v11->i64[0] = a2[-1].i64[1];
            a2[-1].i64[1] = v19;
          }
          else
          {
            v11->i64[0] = v11->i64[v15];
            v11->i64[v15] = v19;
            if ((*a3)(a2[-1].i64[1]))
            {
              uint64_t v28 = v11->i64[v15];
              v11->i64[v15] = a2[-1].i64[1];
              a2[-1].i64[1] = v28;
            }
          }
        }
        else if (v18)
        {
          uint64_t v24 = v11->i64[v15];
          v11->i64[v15] = a2[-1].i64[1];
          a2[-1].i64[1] = v24;
          if (((unsigned int (*)(uint64_t, uint64_t))*a3)(v11->i64[v15], v11->i64[0]))
          {
            uint64_t v25 = v11->i64[0];
            v11->i64[0] = v11->i64[v15];
            v11->i64[v15] = v25;
          }
        }
        unint64_t v29 = v15 - 1;
        uint64_t v30 = v15 - 1;
        char v31 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v11->i64[v30], v11->i64[1]);
        int v32 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(a2[-1].i64[0], v11->i64[v30]);
        if (v31)
        {
          uint64_t v33 = v11->i64[1];
          if (v32)
          {
            v11->i64[1] = a2[-1].i64[0];
            a2[-1].i64[0] = v33;
          }
          else
          {
            v11->i64[1] = v11->i64[v30];
            v11->i64[v30] = v33;
            if ((*a3)(a2[-1].i64[0]))
            {
              uint64_t v37 = v11->i64[v30];
              v11->i64[v30] = a2[-1].i64[0];
              a2[-1].i64[0] = v37;
            }
          }
        }
        else if (v32)
        {
          uint64_t v34 = v11->i64[v30];
          v11->i64[v30] = a2[-1].i64[0];
          a2[-1].i64[0] = v34;
          if (((unsigned int (*)(uint64_t, uint64_t))*a3)(v11->i64[v30], v11->i64[1]))
          {
            uint64_t v35 = v11->i64[1];
            v11->i64[1] = v11->i64[v30];
            v11->i64[v30] = v35;
          }
        }
        unint64_t v38 = v15 + 1;
        uint64_t v39 = v15 + 1;
        char v40 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v11->i64[v39], v11[1].i64[0]);
        int v41 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(a2[-2].i64[1], v11->i64[v39]);
        if (v40)
        {
          uint64_t v42 = v11[1].i64[0];
          if (v41)
          {
            v11[1].i64[0] = a2[-2].i64[1];
            a2[-2].i64[1] = v42;
          }
          else
          {
            v11[1].i64[0] = v11->i64[v39];
            v11->i64[v39] = v42;
            if ((*a3)(a2[-2].i64[1]))
            {
              uint64_t v45 = v11->i64[v39];
              v11->i64[v39] = a2[-2].i64[1];
              a2[-2].i64[1] = v45;
            }
          }
        }
        else if (v41)
        {
          uint64_t v43 = v11->i64[v39];
          v11->i64[v39] = a2[-2].i64[1];
          a2[-2].i64[1] = v43;
          if (((unsigned int (*)(uint64_t, uint64_t))*a3)(v11->i64[v39], v11[1].i64[0]))
          {
            uint64_t v44 = v11[1].i64[0];
            v11[1].i64[0] = v11->i64[v39];
            v11->i64[v39] = v44;
          }
        }
        char v46 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v11->i64[v15], v11->i64[v29]);
        int v47 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v11->i64[v38], v11->i64[v15]);
        if (v46)
        {
          uint64_t v48 = v11->i64[v29];
          if (v47)
          {
            v11->i64[v29] = v11->i64[v39];
            v11->i64[v39] = v48;
            uint64_t v49 = v11->i64[v15];
            goto LABEL_55;
          }
          v11->i64[v29] = v11->i64[v15];
          v11->i64[v15] = v48;
          unsigned int v52 = (*a3)(v11->i64[v38]);
          uint64_t v49 = v11->i64[v15];
          if (v52)
          {
            uint64_t v51 = v11->i64[v39];
            v11->i64[v15] = v51;
            v11->i64[v39] = v49;
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v49 = v11->i64[v15];
          if (v47)
          {
            v11->i64[v15] = v11->i64[v39];
            v11->i64[v39] = v49;
            int v50 = ((uint64_t (*)(void))*a3)();
            uint64_t v49 = v11->i64[v15];
            if (v50)
            {
              uint64_t v51 = v11->i64[v30];
              v11->i64[v30] = v49;
              v11->i64[v15] = v51;
LABEL_54:
              uint64_t v49 = v51;
            }
          }
        }
LABEL_55:
        a5 = v103;
        uint64_t v53 = v11->i64[0];
        v11->i64[0] = v49;
        v11->i64[v15] = v53;
        a4 = v104 - 1;
        uint64_t v23 = v11->i64[0];
        if (v103) {
          goto LABEL_57;
        }
        goto LABEL_56;
      }
      char v20 = ((uint64_t (*)(uint64_t, uint64_t))v16)(v11->i64[0], v11->i64[v15]);
      int v21 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(a2[-1].i64[1], v11->i64[0]);
      if (v20)
      {
        uint64_t v22 = v11->i64[v15];
        if (v21)
        {
          v11->i64[v15] = a2[-1].i64[1];
          a2[-1].i64[1] = v22;
          --a4;
          uint64_t v23 = v11->i64[0];
          if (a5) {
            goto LABEL_57;
          }
          goto LABEL_56;
        }
        v11->i64[v15] = v11->i64[0];
        v11->i64[0] = v22;
        if ((*a3)(a2[-1].i64[1]))
        {
          uint64_t v36 = v11->i64[0];
          v11->i64[0] = a2[-1].i64[1];
          a2[-1].i64[1] = v36;
        }
      }
      else if (v21)
      {
        uint64_t v26 = v11->i64[0];
        v11->i64[0] = a2[-1].i64[1];
        a2[-1].i64[1] = v26;
        if (((unsigned int (*)(uint64_t, uint64_t))*a3)(v11->i64[0], v11->i64[v15]))
        {
          uint64_t v27 = v11->i64[v15];
          v11->i64[v15] = v11->i64[0];
          v11->i64[0] = v27;
          --a4;
          uint64_t v23 = v27;
          if (a5) {
            goto LABEL_57;
          }
          goto LABEL_56;
        }
      }
      --a4;
      uint64_t v23 = v11->i64[0];
      if (a5) {
        goto LABEL_57;
      }
LABEL_56:
      char v54 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v11[-1].i64[1], v23);
      uint64_t v23 = v11->i64[0];
      if ((v54 & 1) == 0)
      {
        double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v11->i64[0], a2[-1].i64[1]);
        if (result)
        {
          BOOL v12 = v11;
          do
          {
            uint64_t v68 = v12->i64[1];
            BOOL v12 = (int8x16_t *)((char *)v12 + 8);
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v23, v68);
          }
          while ((result & 1) == 0);
        }
        else
        {
          int64_t v69 = (int8x16_t *)&v11->u64[1];
          do
          {
            BOOL v12 = v69;
            if (v69 >= a2) {
              break;
            }
            int64_t v69 = (int8x16_t *)((char *)v69 + 8);
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v23, v12->i64[0]);
          }
          while (!result);
        }
        int v70 = a2;
        if (v12 < a2)
        {
          int v70 = a2;
          do
          {
            uint64_t v71 = v70[-1].i64[1];
            int v70 = (int8x16_t *)((char *)v70 - 8);
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v23, v71);
          }
          while ((result & 1) != 0);
        }
        while (v12 < v70)
        {
          uint64_t v72 = v12->i64[0];
          v12->i64[0] = v70->i64[0];
          v70->i64[0] = v72;
          do
          {
            uint64_t v73 = v12->i64[1];
            BOOL v12 = (int8x16_t *)((char *)v12 + 8);
          }
          while (!((unsigned int (*)(uint64_t, uint64_t))*a3)(v23, v73));
          do
          {
            uint64_t v74 = v70[-1].i64[1];
            int v70 = (int8x16_t *)((char *)v70 - 8);
            double result = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v23, v74);
          }
          while ((result & 1) != 0);
        }
        int v75 = &v12[-1].i64[1];
        BOOL v5 = &v12[-1].u64[1] >= (unint64_t *)v11;
        BOOL v6 = &v12[-1].u64[1] == (unint64_t *)v11;
        if (&v12[-1].u64[1] != (unint64_t *)v11) {
          v11->i64[0] = *v75;
        }
        a5 = 0;
        *int v75 = v23;
        goto LABEL_3;
      }
LABEL_57:
      uint64_t v55 = 0;
      do
        char v56 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v11->i64[++v55], v23);
      while ((v56 & 1) != 0);
      long long v57 = (int8x16_t *)((char *)v11 + v55 * 8);
      unint64_t v58 = a2;
      if (v55 == 1)
      {
        unint64_t v58 = a2;
        do
        {
          if (v57 >= v58) {
            break;
          }
          uint64_t v60 = v58[-1].i64[1];
          unint64_t v58 = (int8x16_t *)((char *)v58 - 8);
        }
        while ((((uint64_t (*)(uint64_t, uint64_t))*a3)(v60, v23) & 1) == 0);
      }
      else
      {
        do
        {
          uint64_t v59 = v58[-1].i64[1];
          unint64_t v58 = (int8x16_t *)((char *)v58 - 8);
        }
        while (!((unsigned int (*)(uint64_t, uint64_t))*a3)(v59, v23));
      }
      if (v57 >= v58)
      {
        std::string::size_type v66 = &v57[-1].i64[1];
        if (&v57[-1].u64[1] == (unint64_t *)v11) {
          goto LABEL_75;
        }
LABEL_74:
        v11->i64[0] = *v66;
        goto LABEL_75;
      }
      uint64_t v61 = &v11->i64[v55];
      uint64_t v62 = (uint64_t *)v58;
      do
      {
        uint64_t v63 = *v61;
        uint64_t *v61 = *v62;
        *uint64_t v62 = v63;
        do
        {
          uint64_t v64 = v61[1];
          ++v61;
        }
        while ((((uint64_t (*)(uint64_t, uint64_t))*a3)(v64, v23) & 1) != 0);
        do
          uint64_t v65 = *--v62;
        while (!((unsigned int (*)(uint64_t, uint64_t))*a3)(v65, v23));
      }
      while (v61 < v62);
      std::string::size_type v66 = v61 - 1;
      if (v61 - 1 != (uint64_t *)v11) {
        goto LABEL_74;
      }
LABEL_75:
      *std::string::size_type v66 = v23;
      if (v57 < v58) {
        goto LABEL_78;
      }
      BOOL v67 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**>(v11, v66, a3);
      BOOL v12 = (int8x16_t *)(v66 + 1);
      double result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**>(v66 + 1, a2, a3);
      if (result) {
        break;
      }
      if (!v67)
      {
LABEL_78:
        double result = std::__introsort<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**,false>(v11, v66, a3, a4, a5 & 1);
        a5 = 0;
        BOOL v12 = (int8x16_t *)(v66 + 1);
        goto LABEL_3;
      }
    }
    a2 = (int8x16_t *)v66;
    if (!v67) {
      continue;
    }
    return result;
  }
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**>(void *a1, void *a2, unsigned int (**a3)(uint64_t))
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (((unsigned int (*)(void, void))*a3)(*(a2 - 1), *a1))
      {
        uint64_t v8 = *a1;
        *a1 = *(a2 - 1);
        *(a2 - 1) = v8;
      }
      return 1;
    case 3:
      char v9 = ((uint64_t (*)(void, void))*a3)(a1[1], *a1);
      int v10 = ((uint64_t (*)(void, void))*a3)(*(a2 - 1), a1[1]);
      if (v9)
      {
        uint64_t v11 = *a1;
        if (v10)
        {
          *a1 = *(a2 - 1);
          *(a2 - 1) = v11;
        }
        else
        {
          *a1 = a1[1];
          a1[1] = v11;
          if ((*a3)(*(a2 - 1)))
          {
            uint64_t v26 = a1[1];
            a1[1] = *(a2 - 1);
            *(a2 - 1) = v26;
          }
        }
      }
      else if (v10)
      {
        uint64_t v24 = a1[1];
        a1[1] = *(a2 - 1);
        *(a2 - 1) = v24;
        int v19 = ((uint64_t (*)(void, void))*a3)(a1[1], *a1);
LABEL_17:
        if (v19) {
          *(int8x16_t *)a1 = vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL);
        }
      }
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**>(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      BOOL v12 = a1 + 2;
      uint64_t v13 = a1 + 3;
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**>(a1, a1 + 1, a1 + 2, a1 + 3, a3);
      if (!((unsigned int (*)(void, void))*a3)(*(a2 - 1), a1[3])) {
        return 1;
      }
      uint64_t v14 = *v13;
      *uint64_t v13 = *(a2 - 1);
      *(a2 - 1) = v14;
      if (!((unsigned int (*)(void, void))*a3)(*v13, *v12)) {
        return 1;
      }
      uint64_t v15 = *v12;
      *BOOL v12 = *v13;
      *uint64_t v13 = v15;
      if (!((unsigned int (*)(void))*a3)()) {
        return 1;
      }
      uint64_t v17 = a1[1];
      uint64_t v16 = a1[2];
      uint64_t v18 = *a1;
      a1[1] = v16;
      a1[2] = v17;
      int v19 = ((uint64_t (*)(uint64_t, uint64_t))*a3)(v16, v18);
      goto LABEL_17;
    default:
      char v20 = ((uint64_t (*)(void, void))*a3)(a1[1], *a1);
      int v21 = a1 + 2;
      int v22 = ((uint64_t (*)(void, void))*a3)(a1[2], a1[1]);
      if (v20)
      {
        uint64_t v23 = *a1;
        if (v22)
        {
          *a1 = a1[2];
          a1[2] = v23;
        }
        else
        {
          uint64_t v27 = a1[2];
          *a1 = a1[1];
          a1[1] = v23;
          if ((*a3)(v27)) {
            *(int8x16_t *)(a1 + 1) = vextq_s8(*(int8x16_t *)(a1 + 1), *(int8x16_t *)(a1 + 1), 8uLL);
          }
        }
      }
      else if (v22)
      {
        uint64_t v25 = a1[1];
        a1[1] = a1[2];
        a1[2] = v25;
        if (((unsigned int (*)(void))*a3)()) {
          *(int8x16_t *)a1 = vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL);
        }
      }
      uint64_t v28 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v29 = 0;
      int v30 = 0;
      break;
  }
  while (!((unsigned int (*)(void, void))*a3)(*v28, *v21))
  {
LABEL_35:
    int v21 = v28;
    v29 += 8;
    if (++v28 == a2) {
      return 1;
    }
  }
  uint64_t v31 = *v28;
  uint64_t v32 = v29;
  do
  {
    uint64_t v33 = (char *)a1 + v32;
    *(void *)((char *)a1 + v32 + 24) = *(void *)((char *)a1 + v32 + 16);
    if (v32 == -16)
    {
      *a1 = v31;
      if (++v30 != 8) {
        goto LABEL_35;
      }
      return v28 + 1 == a2;
    }
    v32 -= 8;
  }
  while ((((uint64_t (*)(uint64_t, void))*a3)(v31, *((void *)v33 + 1)) & 1) != 0);
  *(void *)((char *)a1 + v32 + 24) = v31;
  if (++v30 != 8) {
    goto LABEL_35;
  }
  return v28 + 1 == a2;
}

uint64_t std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**>(void *a1, void *a2, void *a3, void *a4, unsigned int (**a5)(void))
{
  char v10 = ((uint64_t (*)(void, void))*a5)(*a2, *a1);
  int v11 = ((uint64_t (*)(void, void))*a5)(*a3, *a2);
  if (v10)
  {
    uint64_t v12 = *a1;
    if (v11)
    {
      *a1 = *a3;
      *a3 = v12;
    }
    else
    {
      *a1 = *a2;
      *a2 = v12;
      if ((*a5)(*a3))
      {
        uint64_t v15 = *a2;
        *a2 = *a3;
        *a3 = v15;
      }
    }
  }
  else if (v11)
  {
    uint64_t v13 = *a2;
    *a2 = *a3;
    *a3 = v13;
    if (((unsigned int (*)(void, void))*a5)(*a2, *a1))
    {
      uint64_t v14 = *a1;
      *a1 = *a2;
      *a2 = v14;
    }
  }
  uint64_t result = ((uint64_t (*)(void, void))*a5)(*a4, *a3);
  if (result)
  {
    uint64_t v17 = *a3;
    *a3 = *a4;
    *a4 = v17;
    uint64_t result = ((uint64_t (*)(void, void))*a5)(*a3, *a2);
    if (result)
    {
      uint64_t v18 = *a2;
      *a2 = *a3;
      *a3 = v18;
      uint64_t result = ((uint64_t (*)(void, void))*a5)(*a2, *a1);
      if (result)
      {
        uint64_t v19 = *a1;
        *a1 = *a2;
        *a2 = v19;
      }
    }
  }
  return result;
}

void *std::__partial_sort_impl[abi:ne180100]<std::_ClassicAlgPolicy,BOOL (*&)(operations_research::Stat const*,operations_research::Stat const*),operations_research::Stat**,operations_research::Stat**>(void *a1, void *a2, void *a3, unsigned int (**a4)(void, uint64_t))
{
  if (a1 != a2)
  {
    int v47 = a2;
    uint64_t v48 = a2 - a1;
    uint64_t v45 = a3;
    uint64_t v46 = (char *)a2 - (char *)a1;
    if ((char *)a2 - (char *)a1 >= 9 && (unint64_t)v46 >= 0x10)
    {
      int64_t v37 = (unint64_t)(v48 - 2) >> 1;
      int64_t v38 = v37;
      do
      {
        if (v37 >= v38)
        {
          uint64_t v39 = (2 * v38) | 1;
          char v40 = &a1[v39];
          if (2 * v38 + 2 < v48 && (*a4)(*v40, v40[1]))
          {
            ++v40;
            uint64_t v39 = 2 * v38 + 2;
          }
          int v41 = &a1[v38];
          if ((((uint64_t (*)(void, void))*a4)(*v40, *v41) & 1) == 0)
          {
            uint64_t v42 = *v41;
            do
            {
              uint64_t v43 = v40;
              *int v41 = *v40;
              if (v37 < v39) {
                break;
              }
              uint64_t v44 = (2 * v39) | 1;
              char v40 = &a1[v44];
              if (2 * v39 + 2 < v48 && (*a4)(*v40, v40[1]))
              {
                ++v40;
                uint64_t v44 = 2 * v39 + 2;
              }
              int v41 = v43;
              uint64_t v39 = v44;
            }
            while (!(*a4)(*v40, v42));
            *uint64_t v43 = v42;
          }
        }
        BOOL v22 = v38-- <= 0;
      }
      while (!v22);
    }
    uint64_t v7 = v46;
    uint64_t v6 = v47;
    a3 = v47;
    uint64_t v8 = v45;
    if (v47 != v45)
    {
      if (v46 >= 16)
      {
        char v9 = a1 + 1;
        while (1)
        {
          if (((unsigned int (*)(void, void, void *))*a4)(*v6, *a1, a3))
          {
            uint64_t v11 = *v6;
            void *v6 = *a1;
            *a1 = v11;
            if (v7 == 16)
            {
              uint64_t v12 = v9;
              int64_t v13 = 1;
              if ((((uint64_t (*)(void))*a4)(*v9) & 1) == 0) {
                goto LABEL_23;
              }
            }
            else
            {
              unsigned int v14 = (*a4)(a1[1], a1[2]);
              if (v14) {
                uint64_t v12 = a1 + 2;
              }
              else {
                uint64_t v12 = v9;
              }
              if (v14) {
                int64_t v13 = 2;
              }
              else {
                int64_t v13 = 1;
              }
              if ((((uint64_t (*)(void, void))*a4)(*v12, *a1) & 1) == 0)
              {
LABEL_23:
                uint64_t v15 = *a1;
                uint64_t v16 = a1;
                do
                {
                  uint64_t v18 = v12;
                  *uint64_t v16 = *v12;
                  if ((uint64_t)((unint64_t)(v48 - 2) >> 1) < v13) {
                    break;
                  }
                  uint64_t v19 = (2 * v13) | 1;
                  uint64_t v12 = &a1[v19];
                  uint64_t v20 = 2 * v13 + 2;
                  if (v20 < v48 && (*a4)(*v12, v12[1]))
                  {
                    ++v12;
                    uint64_t v19 = v20;
                  }
                  unsigned int v17 = (*a4)(*v12, v15);
                  uint64_t v16 = v18;
                  int64_t v13 = v19;
                }
                while (!v17);
                *uint64_t v18 = v15;
                uint64_t v8 = v45;
                uint64_t v7 = v46;
                char v9 = a1 + 1;
              }
            }
          }
          if (++v6 == v8) {
            goto LABEL_30;
          }
        }
      }
      do
      {
        if (((unsigned int (*)(void, void, void *))*a4)(*v6, *a1, a3))
        {
          uint64_t v10 = *v6;
          void *v6 = *a1;
          *a1 = v10;
        }
        ++v6;
      }
      while (v6 != v45);
LABEL_30:
      a3 = v8;
    }
    if (v7 >= 9)
    {
      uint64_t v49 = a3;
      uint64_t v21 = (unint64_t)v7 >> 3;
      do
      {
        uint64_t v23 = 0;
        uint64_t v24 = *a1;
        uint64_t v25 = a1;
        do
        {
          uint64_t v26 = &v25[v23 + 1];
          uint64_t v27 = (2 * v23) | 1;
          uint64_t v28 = 2 * v23 + 2;
          if (v28 < v21 && (*a4)(v25[v23 + 1], v25[v23 + 2]))
          {
            ++v26;
            uint64_t v27 = v28;
          }
          *uint64_t v25 = *v26;
          uint64_t v25 = v26;
          uint64_t v23 = v27;
        }
        while (v27 <= (uint64_t)((unint64_t)(v21 - 2) >> 1));
        uint64_t v29 = v47 - 1;
        if (v26 == --v47)
        {
          *uint64_t v26 = v24;
        }
        else
        {
          *uint64_t v26 = *v29;
          *uint64_t v29 = v24;
          uint64_t v31 = (char *)v26 - (char *)a1 + 8;
          if (v31 >= 9)
          {
            unint64_t v32 = (((unint64_t)v31 >> 3) - 2) >> 1;
            uint64_t v33 = &a1[v32];
            if ((*a4)(*v33, *v26))
            {
              uint64_t v34 = *v26;
              do
              {
                uint64_t v35 = v33;
                *uint64_t v26 = *v33;
                if (!v32) {
                  break;
                }
                unint64_t v32 = (v32 - 1) >> 1;
                uint64_t v33 = &a1[v32];
                uint64_t v26 = v35;
              }
              while ((((uint64_t (*)(void, uint64_t))*a4)(*v33, v34) & 1) != 0);
              *uint64_t v35 = v34;
            }
          }
        }
        BOOL v22 = v21-- <= 2;
      }
      while (!v22);
      return v49;
    }
  }
  return a3;
}

void std::__introsort<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **,false>(int8x16_t *a1, int8x16_t *a2, uint64_t a3, char a4)
{
void sub_23CDBB2F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL operations_research::StatsGroup::StatString(void)const::$_0::operator()(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a1 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)(a1 + 8), *(void *)(a1 + 16));
    if ((*(char *)(a2 + 31) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    std::string v14 = *(std::string *)(a1 + 8);
    if ((*(char *)(a2 + 31) & 0x80000000) == 0)
    {
LABEL_3:
      std::string v13 = *(std::string *)(a2 + 8);
      goto LABEL_6;
    }
  }
  std::string::__init_copy_ctor_external(&v13, *(const std::string::value_type **)(a2 + 8), *(void *)(a2 + 16));
LABEL_6:
  int v3 = SHIBYTE(v13.__r_.__value_.__r.__words[2]);
  BOOL v4 = (void *)v13.__r_.__value_.__r.__words[0];
  char v5 = HIBYTE(v14.__r_.__value_.__r.__words[2]);
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v14.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v14.__r_.__value_.__l.__size_;
  }
  if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v7 = &v14;
  }
  else {
    uint64_t v7 = (std::string *)v14.__r_.__value_.__r.__words[0];
  }
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v8 = HIBYTE(v13.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v8 = v13.__r_.__value_.__l.__size_;
  }
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v9 = &v13;
  }
  else {
    char v9 = (std::string *)v13.__r_.__value_.__r.__words[0];
  }
  if (v8 >= size) {
    size_t v10 = size;
  }
  else {
    size_t v10 = v8;
  }
  int v11 = memcmp(v7, v9, v10);
  if (v3 < 0)
  {
    operator delete(v4);
    if ((*((unsigned char *)&v14.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_23;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_23;
  }
  operator delete(v14.__r_.__value_.__l.__data_);
LABEL_23:
  if (v11) {
    return v11 < 0;
  }
  else {
    return size < v8;
  }
}

void sub_23CDBB460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **,0>(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **>(a1, a2, a3);
  if (operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a4, *a3))
  {
    uint64_t v10 = *a3;
    *a3 = *a4;
    *a4 = v10;
    if (operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a3, *a2))
    {
      uint64_t v11 = *a2;
      *a2 = *a3;
      *a3 = v11;
      if (operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a2, *a1))
      {
        uint64_t v12 = *a1;
        *a1 = *a2;
        *a2 = v12;
      }
    }
  }
  BOOL result = operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a5, *a4);
  if (result)
  {
    uint64_t v14 = *a4;
    *a4 = *a5;
    *a5 = v14;
    BOOL result = operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a4, *a3);
    if (result)
    {
      uint64_t v15 = *a3;
      *a3 = *a4;
      *a4 = v15;
      BOOL result = operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a3, *a2);
      if (result)
      {
        uint64_t v16 = *a2;
        *a2 = *a3;
        *a3 = v16;
        BOOL result = operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a2, *a1);
        if (result)
        {
          uint64_t v17 = *a1;
          *a1 = *a2;
          *a2 = v17;
        }
      }
    }
  }
  return result;
}

BOOL std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **>(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  BOOL v6 = operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a2, *a1);
  BOOL result = operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a3, *a2);
  if (v6)
  {
    uint64_t v8 = *a1;
    if (result)
    {
      *a1 = *a3;
      *a3 = v8;
    }
    else
    {
      *a1 = *a2;
      *a2 = v8;
      BOOL result = operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a3, v8);
      if (result)
      {
        uint64_t v11 = *a2;
        *a2 = *a3;
        *a3 = v11;
      }
    }
  }
  else if (result)
  {
    uint64_t v9 = *a2;
    *a2 = *a3;
    *a3 = v9;
    BOOL result = operations_research::StatsGroup::StatString(void)const::$_0::operator()(*a2, *a1);
    if (result)
    {
      uint64_t v10 = *a1;
      *a1 = *a2;
      *a2 = v10;
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **>(int8x16_t *a1, int8x16_t *a2)
{
  uint64_t v4 = ((char *)a2 - (char *)a1) >> 3;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (operations_research::StatsGroup::StatString(void)const::$_0::operator()(a2[-1].i64[1], a1->i64[0]))
      {
        uint64_t v13 = a1->i64[0];
        a1->i64[0] = a2[-1].i64[1];
        a2[-1].i64[1] = v13;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **>(a1->i64, &a1->i64[1], &a2[-1].i64[1]);
      return 1;
    case 4:
      i64 = a1[1].i64;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **>(a1->i64, &a1->i64[1], a1[1].i64);
      if (operations_research::StatsGroup::StatString(void)const::$_0::operator()(a2[-1].i64[1], a1[1].i64[0]))
      {
        uint64_t v15 = *i64;
        uint64_t *i64 = a2[-1].i64[1];
        a2[-1].i64[1] = v15;
        if (operations_research::StatsGroup::StatString(void)const::$_0::operator()(*i64, a1->i64[1]))
        {
          uint64_t v17 = a1->i64[1];
          uint64_t v16 = a1[1].i64[0];
          uint64_t v18 = a1->i64[0];
          a1->i64[1] = v16;
          a1[1].i64[0] = v17;
          if (operations_research::StatsGroup::StatString(void)const::$_0::operator()(v16, v18)) {
            *a1 = vextq_s8(*a1, *a1, 8uLL);
          }
        }
      }
      return 1;
    case 5:
      std::__sort5_maybe_branchless[abi:ne180100]<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **,0>(a1->i64, &a1->i64[1], a1[1].i64, &a1[1].i64[1], &a2[-1].i64[1]);
      return 1;
    default:
      BOOL v6 = a1[1].i64;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,operations_research::StatsGroup::StatString(void)::$_0 &,operations_research::Stat **>(a1->i64, &a1->i64[1], a1[1].i64);
      uint64_t v7 = &a1[1].i64[1];
      if (&a1[1].u64[1] == (unint64_t *)a2) {
        return 1;
      }
      uint64_t v8 = 0;
      int v9 = 0;
      break;
  }
  while (!operations_research::StatsGroup::StatString(void)const::$_0::operator()(*v7, *v6))
  {
LABEL_11:
    BOOL v6 = v7;
    v8 += 8;
    if (++v7 == (uint64_t *)a2) {
      return 1;
    }
  }
  uint64_t v10 = *v7;
  uint64_t v11 = v8;
  do
  {
    uint64_t v12 = &a1->i8[v11];
    *(uint64_t *)((char *)&a1[1].i64[1] + v11) = *(uint64_t *)((char *)a1[1].i64 + v11);
    if (v11 == -16)
    {
      a1->i64[0] = v10;
      if (++v9 != 8) {
        goto LABEL_11;
      }
      return v7 + 1 == (uint64_t *)a2;
    }
    v11 -= 8;
  }
  while (operations_research::StatsGroup::StatString(void)const::$_0::operator()(v10, *((void *)v12 + 1)));
  *(uint64_t *)((char *)&a1[1].i64[1] + v11) = v10;
  if (++v9 != 8) {
    goto LABEL_11;
  }
  return v7 + 1 == (uint64_t *)a2;
}

BOOL google::protobuf::internal::GetAnyFieldDescriptors(google::protobuf::internal *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor **a3, const google::protobuf::FieldDescriptor **a4)
{
  BOOL v6 = (google::protobuf::Descriptor *)(*(uint64_t (**)(google::protobuf::internal *, const google::protobuf::Message *, const google::protobuf::FieldDescriptor **, const google::protobuf::FieldDescriptor **))(*(void *)this + 152))(this, a2, a3, a4);
  uint64_t v7 = (const void **)*((void *)v6 + 1);
  size_t v8 = strlen("google.protobuf.Any");
  if ((*((char *)v7 + 23) & 0x80000000) == 0)
  {
    if (v8 != *((unsigned __int8 *)v7 + 23)) {
      return 0;
    }
    if (v8 != -1)
    {
      if (!memcmp(v7, "google.protobuf.Any", v8)) {
        goto LABEL_9;
      }
      return 0;
    }
LABEL_20:
    std::string::__throw_out_of_range[abi:ne180100]();
  }
  if ((const void *)v8 != v7[1]) {
    return 0;
  }
  if (v8 == -1) {
    goto LABEL_20;
  }
  if (memcmp(*v7, "google.protobuf.Any", v8)) {
    return 0;
  }
LABEL_9:
  *(void *)a2 = google::protobuf::Descriptor::FindFieldByNumber(v6, 1);
  *a3 = (const google::protobuf::FieldDescriptor *)google::protobuf::Descriptor::FindFieldByNumber(v6, 2);
  uint64_t v9 = *(void *)a2;
  if (!v9) {
    return 0;
  }
  uint64_t v10 = *(std::once_flag::_State_type **)(v9 + 48);
  if (v10)
  {
    uint64_t v14 = v9;
    uint64_t v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      uint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v10, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(v9 + 56) != 9) {
    return 0;
  }
  uint64_t v11 = (uint64_t)*a3;
  if (!v11) {
    return 0;
  }
  uint64_t v12 = *(std::once_flag::_State_type **)(v11 + 48);
  if (v12)
  {
    uint64_t v14 = v11;
    uint64_t v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      uint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v12, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *(_DWORD *)(v11 + 56) == 12;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>(uint64_t a1)
{
  return (***(uint64_t (****)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t google::protobuf::internal::ParseAnyTypeUrl(char **a1, uint64_t a2, uint64_t a3)
{
  char v5 = a1;
  uint64_t v6 = 0;
  int v7 = *((char *)a1 + 23);
  if (v7 >= 0) {
    size_t v8 = (char *)a1;
  }
  else {
    size_t v8 = *a1;
  }
  if (v7 >= 0) {
    unint64_t v9 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    unint64_t v9 = (unint64_t)a1[1];
  }
  uint64_t v10 = -1;
  do
  {
    if (-(uint64_t)v9 == v6) {
      return 0;
    }
    int v11 = v8[v9 - 1 + v6--];
    ++v10;
  }
  while (v11 != 47);
  unint64_t v12 = v9 + v6;
  if (v9 + v6 == -1 || v6 == -1) {
    return 0;
  }
  if (a2)
  {
    if (v9 >= v12 + 1) {
      size_t v13 = v12 + 1;
    }
    else {
      size_t v13 = v9;
    }
    if (v13 > 0x7FFFFFFFFFFFFFF7) {
      goto LABEL_43;
    }
    if (v13 >= 0x17)
    {
      uint64_t v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17) {
        uint64_t v16 = v13 | 7;
      }
      uint64_t v22 = v16 + 1;
      p_dst = (long long *)operator new(v16 + 1);
      *((void *)&__dst + 1) = v13;
      unint64_t v24 = v22 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v24) = v13;
      p_dst = &__dst;
      if (!v13) {
        goto LABEL_25;
      }
    }
    memmove(p_dst, v8, v13);
LABEL_25:
    *((unsigned char *)p_dst + v13) = 0;
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    *(_OWORD *)a2 = __dst;
    *(void *)(a2 + 16) = v24;
    LOBYTE(v7) = *((unsigned char *)v5 + 23);
  }
  if ((v7 & 0x80) == 0)
  {
    unint64_t v17 = v7;
    if (v12 < v7)
    {
      size_t v18 = ~v6 + v7 - v9;
      if (v18 <= 0x7FFFFFFFFFFFFFF7) {
        goto LABEL_31;
      }
LABEL_43:
      std::string::__throw_length_error[abi:ne180100]();
    }
LABEL_44:
    std::string::__throw_out_of_range[abi:ne180100]();
  }
  unint64_t v17 = (unint64_t)v5[1];
  if (v17 <= v12) {
    goto LABEL_44;
  }
  char v5 = (char **)*v5;
  size_t v18 = ~v6 + v17 - v9;
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_43;
  }
LABEL_31:
  if (v18 >= 0x17)
  {
    uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v20 = v18 | 7;
    }
    uint64_t v21 = v20 + 1;
    uint64_t v19 = (long long *)operator new(v20 + 1);
    *((void *)&__dst + 1) = v18;
    unint64_t v24 = v21 | 0x8000000000000000;
    *(void *)&long long __dst = v19;
  }
  else
  {
    HIBYTE(v24) = v18;
    uint64_t v19 = &__dst;
    if (v9 - v17 + v6 == -1) {
      goto LABEL_38;
    }
  }
  memmove(v19, (char *)v5 + v9 + v6 + 1, v18);
LABEL_38:
  *((unsigned char *)v19 + v17 - v9 + v10) = 0;
  if (*(char *)(a3 + 23) < 0) {
    operator delete(*(void **)a3);
  }
  *(_OWORD *)a3 = __dst;
  *(void *)(a3 + 16) = v24;
  return 1;
}

void *google::protobuf::internal::ArenaImpl::thread_cache(google::protobuf::internal::ArenaImpl *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AED1E78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AED1E78))
  {
    operator new();
  }
  BOOL result = pthread_getspecific(*(void *)_MergedGlobals_30);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_23CDBBDFC(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1000C4000313F17);
  __cxa_guard_abort(&qword_26AED1E78);
  _Unwind_Resume(a1);
}

void sub_23CDBBE2C(_Unwind_Exception *a1)
{
}

google::protobuf::internal::ArenaImpl **google::protobuf::internal::ArenaImpl::Init(google::protobuf::internal::ArenaImpl **this)
{
  uint64_t v1 = this;
  this[4] = (google::protobuf::internal::ArenaImpl *)atomic_fetch_add_explicit(&google::protobuf::internal::ArenaImpl::lifecycle_id_generator_, 1uLL, memory_order_relaxed);
  this[1] = 0;
  *this = 0;
  uint64_t v2 = this[3];
  if (v2)
  {
    int v3 = this[8];
    *(void *)uint64_t v2 = 0;
    *((void *)v2 + 1) = 24;
    *((void *)v2 + 2) = v3;
    uint64_t v4 = google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
    char v5 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::SerialArena::New(v2, (uint64_t)v4, (uint64_t)v1);
    *((void *)v5 + 4) = 0;
    *uint64_t v1 = v5;
    v1[2] = v1[8];
    uint64_t v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache(v5);
    *((void *)v6 + 1) = v5;
    int v7 = v1[4];
    this = (google::protobuf::internal::ArenaImpl **)google::protobuf::internal::ArenaImpl::thread_cache(v6);
    *this = v7;
    atomic_store((unint64_t)v5, (unint64_t *)v1 + 1);
  }
  else
  {
    this[2] = 0;
  }
  return this;
}

void *google::protobuf::internal::ArenaImpl::SerialArena::New(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1[1] != 24)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/arena.cc", 317);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (b->pos()) == (kBlockHeaderSize): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  unint64_t v7 = a1[2];
  if (v7 <= 0x5F)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/arena.cc", 318);
    size_t v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (kBlockHeaderSize + kSerialArenaSize) <= (b->size()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    unint64_t v7 = a1[2];
    if (v7 <= 0x17)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/arena_impl.h", 260);
      unint64_t v9 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: n <= size_: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v9);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
      unint64_t v7 = a1[2];
    }
  }
  a1[3] = a3;
  a1[1] = 96;
  a1[4] = a2;
  a1[5] = a1;
  if (v7 <= 0x5F)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/arena_impl.h", 260);
    uint64_t v10 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: n <= size_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v10);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    unint64_t v7 = a1[2];
  }
  a1[8] = a1 + 12;
  a1[9] = (char *)a1 + v7;
  a1[6] = 0;
  a1[10] = 0;
  a1[11] = 0;
  return a1 + 3;
}

void sub_23CDBC090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC0A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ArenaImpl::~ArenaImpl(google::protobuf::internal::ArenaImpl *this)
{
  uint64_t v2 = *(void **)this;
  if (*(void *)this)
  {
    do
    {
      size_t v8 = (uint64_t *)v2[3];
      if (v8)
      {
        uint64_t v9 = (v2[7] - (void)v8 - 16) >> 4;
        if (!v9) {
          goto LABEL_15;
        }
LABEL_13:
        uint64_t v10 = &v8[2 * v9 + 1];
        do
        {
          ((void (*)(void))*v10)(*(v10 - 1));
          v10 -= 2;
          --v9;
        }
        while (v9);
LABEL_15:
        while (1)
        {
          size_t v8 = (uint64_t *)v8[1];
          if (!v8) {
            break;
          }
          uint64_t v9 = *v8;
          if (*v8) {
            goto LABEL_13;
          }
        }
      }
      uint64_t v2 = (void *)v2[4];
    }
    while (v2);
  }
  int v3 = *(void **)this;
  if (*(void *)this)
  {
    do
    {
      uint64_t v4 = (void *)v3[2];
      int v3 = (void *)v3[4];
      if (v4)
      {
        char v5 = (void *)*((void *)this + 3);
        uint64_t v6 = (void (*)(void *, void))*((void *)this + 10);
        do
        {
          unint64_t v7 = (void *)*v4;
          if (v4 != v5) {
            v6(v4, v4[2]);
          }
          uint64_t v4 = v7;
        }
        while (v7);
      }
    }
    while (v3);
  }
}

void *google::protobuf::internal::ArenaImpl::NewBlock(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (!a2)
  {
    unint64_t v6 = *(void *)(a1 + 40);
    if (a3 < 0xFFFFFFFFFFFFFFE8) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (*(void *)(a1 + 48) >= (unint64_t)(2 * *(void *)(a2 + 16))) {
    unint64_t v6 = 2 * *(void *)(a2 + 16);
  }
  else {
    unint64_t v6 = *(void *)(a1 + 48);
  }
  if (a3 >= 0xFFFFFFFFFFFFFFE8)
  {
LABEL_8:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/arena.cc", 118);
    unint64_t v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
LABEL_9:
  if (v6 <= a3 + 24) {
    unint64_t v8 = a3 + 24;
  }
  else {
    unint64_t v8 = v6;
  }
  BOOL result = (void *)(*(uint64_t (**)(unint64_t))(a1 + 72))(v8);
  void *result = a2;
  result[1] = 24;
  result[2] = v8;
  atomic_fetch_add_explicit((atomic_ullong *volatile)(a1 + 16), v8, memory_order_relaxed);
  return result;
}

void sub_23CDBC300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(google::protobuf::internal::ArenaImpl::SerialArena *this, void *a2, void (*a3)(void *))
{
  BOOL result = (void *)*((void *)this + 3);
  do
  {
    if (result)
    {
      if ((unint64_t)(2 * *result) >= 0x40) {
        uint64_t v7 = 64;
      }
      else {
        uint64_t v7 = 2 * *result;
      }
    }
    else
    {
      uint64_t v7 = 8;
    }
    BOOL result = (void *)google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(this, (16 * (_WORD)v7 + 23) & 0xFF0);
    uint64_t v8 = *((void *)this + 3);
    void *result = v7;
    result[1] = v8;
    *((void *)this + 3) = result;
    *((void *)this + 7) = result + 2;
    *((void *)this + 8) = &result[2 * v7 + 2];
  }
  while (!(16 * v7));
  result[2] = a2;
  result[3] = a3;
  *((void *)this + 7) = result + 4;
  return result;
}

unint64_t google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(google::protobuf::internal::ArenaImpl::SerialArena *this, unint64_t a2)
{
  if (((a2 + 7) & 0xFFFFFFFFFFFFFFF8) != a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/arena_impl.h", 184);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (internal::AlignUpTo8(n)) == (n): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  unint64_t result = *((void *)this + 5);
  unint64_t v6 = *((void *)this + 6);
  if (v6 < result)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/arena_impl.h", 185);
    uint64_t v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (limit_) >= (ptr_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    unint64_t result = *((void *)this + 5);
    unint64_t v6 = *((void *)this + 6);
  }
  if (v6 - result < a2) {
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedFallback(this, a2);
  }
  *((void *)this + 5) = result + a2;
  return result;
}

void sub_23CDBC4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBC500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(atomic_ullong *this, unint64_t a2, void (*a3)(void *))
{
  unint64_t v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*(void *)v6 == this[4])
  {
    explicit = (google::protobuf::internal::ArenaImpl::SerialArena *)*((void *)v6 + 1);
LABEL_3:
    unint64_t result = (void *)google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(explicit, a2);
    uint64_t v9 = result;
    char v10 = (void *)*((void *)explicit + 7);
    if (v10 == *((void **)explicit + 8))
    {
      google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(explicit, result, a3);
      return v9;
    }
    else
    {
      void *v10 = result;
      v10[1] = a3;
      *((void *)explicit + 7) = v10 + 2;
    }
    return result;
  }
  int v11 = google::protobuf::internal::ArenaImpl::thread_cache(v6);
  explicit = (google::protobuf::internal::ArenaImpl::SerialArena *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (explicit && *((void **)explicit + 1) == v11) {
    goto LABEL_3;
  }

  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(this, a2, a3);
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(atomic_ullong *this, unint64_t a2, void (*a3)(void *))
{
  unint64_t v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*(void *)v6 == this[4])
  {
    explicit = (google::protobuf::internal::ArenaImpl *)*((void *)v6 + 1);
  }
  else
  {
    int v11 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache(v6);
    explicit = (google::protobuf::internal::ArenaImpl *)atomic_load_explicit(this + 1, memory_order_acquire);
    if (!explicit || *((google::protobuf::internal::ArenaImpl **)explicit + 1) != v11)
    {
      char v12 = google::protobuf::internal::ArenaImpl::thread_cache(v11);
      explicit = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(this, v12);
    }
  }
  unint64_t result = (void *)google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(explicit, a2);
  uint64_t v9 = result;
  char v10 = (void *)*((void *)explicit + 7);
  if (v10 == *((void **)explicit + 8))
  {
    google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(explicit, result, a3);
    return v9;
  }
  else
  {
    void *v10 = result;
    v10[1] = a3;
    *((void *)explicit + 7) = v10 + 2;
  }
  return result;
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::AddCleanup(atomic_ullong *this, void *a2, void (*a3)(void *))
{
  unint64_t v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*(void *)v6 == this[4])
  {
    unint64_t result = (google::protobuf::internal::ArenaImpl *)*((void *)v6 + 1);
    goto LABEL_3;
  }
  uint64_t v9 = google::protobuf::internal::ArenaImpl::thread_cache(v6);
  unint64_t result = (google::protobuf::internal::ArenaImpl *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (result && *((void **)result + 1) == v9)
  {
LABEL_3:
    char v8 = (void *)*((void *)result + 7);
    if (v8 == *((void **)result + 8))
    {
      return (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(result, a2, a3);
    }
    else
    {
      void *v8 = a2;
      v8[1] = a3;
      *((void *)result + 7) = v8 + 2;
    }
    return result;
  }

  return google::protobuf::internal::ArenaImpl::AddCleanupFallback(this, a2, a3);
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::AddCleanupFallback(atomic_ullong *this, void *a2, void (*a3)(void *))
{
  unint64_t v6 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*(void *)v6 == this[4])
  {
    unint64_t result = (google::protobuf::internal::ArenaImpl *)*((void *)v6 + 1);
  }
  else
  {
    uint64_t v9 = google::protobuf::internal::ArenaImpl::thread_cache(v6);
    unint64_t result = (google::protobuf::internal::ArenaImpl *)atomic_load_explicit(this + 1, memory_order_acquire);
    if (!result || *((void **)result + 1) != v9)
    {
      char v10 = google::protobuf::internal::ArenaImpl::thread_cache(result);
      unint64_t result = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(this, v10);
    }
  }
  char v8 = (void *)*((void *)result + 7);
  if (v8 == *((void **)result + 8))
  {
    return (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(result, a2, a3);
  }
  else
  {
    void *v8 = a2;
    v8[1] = a3;
    *((void *)result + 7) = v8 + 2;
  }
  return result;
}

unint64_t google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(atomic_ullong *this, unint64_t a2)
{
  uint64_t v4 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*(void *)v4 == this[4])
  {
    explicit = (google::protobuf::internal::ArenaImpl *)*((void *)v4 + 1);
    goto LABEL_3;
  }
  char v8 = google::protobuf::internal::ArenaImpl::thread_cache(v4);
  explicit = (google::protobuf::internal::ArenaImpl *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (explicit && *((void **)explicit + 1) == v8)
  {
LABEL_3:
    unint64_t v6 = a2;
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(explicit, v6);
  }
  uint64_t v9 = google::protobuf::internal::ArenaImpl::thread_cache(explicit);
  explicit = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(this, v9);
  unint64_t v6 = a2;

  return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(explicit, v6);
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(atomic_ullong *this, void *a2)
{
  int v3 = (google::protobuf::internal::ArenaImpl *)this;
  explicit = (google::protobuf::internal::ArenaImpl *)atomic_load_explicit(this, memory_order_acquire);
  if (explicit)
  {
    while (*((void **)explicit + 1) != a2)
    {
      explicit = (google::protobuf::internal::ArenaImpl *)*((void *)explicit + 4);
      if (!explicit) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    if ((unint64_t)this[5] <= 0x60) {
      unint64_t v5 = 96;
    }
    else {
      unint64_t v5 = this[5];
    }
    unint64_t v6 = (void *)((uint64_t (*)(unint64_t))this[9])(v5);
    void *v6 = 0;
    v6[1] = 24;
    v6[2] = v5;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v3 + 2, v5, memory_order_relaxed);
    this = google::protobuf::internal::ArenaImpl::SerialArena::New(v6, (uint64_t)a2, (uint64_t)v3);
    explicit = (google::protobuf::internal::ArenaImpl *)this;
    atomic_ullong v7 = *(void *)v3;
    this[4] = *(void *)v3;
    atomic_ullong v8 = v7;
    atomic_compare_exchange_strong_explicit((atomic_ullong *volatile)v3, (unint64_t *)&v8, (unint64_t)this, memory_order_release, memory_order_relaxed);
    if (v8 != v7)
    {
      atomic_ullong v9 = v8;
      do
      {
        this[4] = v8;
        atomic_compare_exchange_strong_explicit((atomic_ullong *volatile)v3, (unint64_t *)&v9, (unint64_t)this, memory_order_release, memory_order_relaxed);
        BOOL v10 = v9 == v8;
        atomic_ullong v8 = v9;
      }
      while (!v10);
    }
  }
  int v11 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  *((void *)v11 + 1) = explicit;
  uint64_t v12 = *((void *)v3 + 4);
  *(void *)google::protobuf::internal::ArenaImpl::thread_cache(v11) = v12;
  atomic_store((unint64_t)explicit, (unint64_t *)v3 + 1);
  return explicit;
}

uint64_t google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedFallback(google::protobuf::internal::ArenaImpl::SerialArena *this, unint64_t a2)
{
  uint64_t v4 = *((void *)this + 2);
  *(void *)(v4 + 8) = *(void *)(v4 + 16) - *((void *)this + 6) + *((void *)this + 5);
  unint64_t v5 = google::protobuf::internal::ArenaImpl::NewBlock(*(void *)this, v4, a2);
  unint64_t v6 = v5;
  *((void *)this + 2) = v5;
  unint64_t v8 = v5[1];
  unint64_t v7 = v5[2];
  if (v7 >= v8)
  {
    BOOL v10 = v5;
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/arena_impl.h", 260);
    atomic_ullong v9 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: n <= size_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v9);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    BOOL v10 = (void *)*((void *)this + 2);
    unint64_t v7 = v10[2];
  }
  *((void *)this + 5) = (char *)v6 + v8;
  *((void *)this + 6) = (char *)v10 + v7;
  return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(this, a2);
}

void sub_23CDBCA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBCA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ArenaImpl::SpaceAllocated(google::protobuf::internal::ArenaImpl *this)
{
  return *((void *)this + 2);
}

unint64_t google::protobuf::Arena::AllocateAlignedNoHook(atomic_ullong *this, unint64_t a2)
{
  uint64_t v4 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  if (*(void *)v4 == this[4])
  {
    explicit = (google::protobuf::internal::ArenaImpl::SerialArena *)*((void *)v4 + 1);
    goto LABEL_3;
  }
  unint64_t v7 = google::protobuf::internal::ArenaImpl::thread_cache(v4);
  explicit = (google::protobuf::internal::ArenaImpl::SerialArena *)atomic_load_explicit(this + 1, memory_order_acquire);
  if (explicit && *((void **)explicit + 1) == v7)
  {
LABEL_3:
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(explicit, a2);
  }

  return google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(this, a2);
}

void *google::protobuf::Arena::CallDestructorHooks(void *this)
{
  uint64_t v1 = this;
  uint64_t v2 = this[2];
  int v3 = (uint64_t (*)(void *, void, void))this[12];
  if (v3) {
    this = (void *)v3(this, this[14], this[2]);
  }
  uint64_t v4 = (uint64_t (*)(void *, uint64_t, uint64_t))v1[13];
  if (v4)
  {
    uint64_t v5 = v1[14];
    return (void *)v4(v1, v5, v2);
  }
  return this;
}

uint64_t google::protobuf::Arena::OnArenaAllocation(uint64_t this, const std::type_info *a2, uint64_t a3)
{
  int v3 = *(uint64_t (**)(const std::type_info *, uint64_t, void))(this + 88);
  if (v3) {
    return v3(a2, a3, *(void *)(this + 112));
  }
  return this;
}

uint64_t google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Delete(uint64_t result)
{
  if (result) {
    JUMPOUT(0x23ECF2BC0);
  }
  return result;
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2)
  {
    if (*((_DWORD *)this + 7) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this >= 1)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
      unsigned int v3 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) + *(void *)this - *((_DWORD *)this + 2);
      *((void *)this + 1) = *(void *)this;
      *((_DWORD *)this + 11) = 0;
      *((void *)this + 3) = v3;
    }
  }
}

void google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(google::protobuf::io::CodedInputStream *this)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 193);
  uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v6, "A protocol message was rejected because it was too big (more than ");
  unsigned int v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 12));
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v3, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in third_party/protobuf/src/google/protobuf/io/coded_stream.h.");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
}

void sub_23CDBCD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBCD28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::SkipFallback(google::protobuf::io::CodedInputStream *this, int a2, int a3)
{
  if (*((int *)this + 11) < 1)
  {
    uint64_t v5 = (a2 - a3);
    *(void *)this = 0;
    *((void *)this + 1) = 0;
    int v6 = *((_DWORD *)this + 12);
    if (v6 >= *((_DWORD *)this + 10)) {
      int v6 = *((_DWORD *)this + 10);
    }
    int v7 = v6 - *((_DWORD *)this + 6);
    if (v7 >= (int)v5)
    {
      if ((*(uint64_t (**)(void, uint64_t))(**((void **)this + 2) + 32))(*((void *)this + 2), v5))
      {
        *((_DWORD *)this + 6) += v5;
        return 1;
      }
      else
      {
        int v8 = (*(uint64_t (**)(void))(**((void **)this + 2) + 40))(*((void *)this + 2));
        uint64_t result = 0;
        *((_DWORD *)this + 6) = v8;
      }
    }
    else
    {
      if (v7 >= 1)
      {
        *((_DWORD *)this + 6) = v6;
        (*(void (**)(void))(**((void **)this + 2) + 32))(*((void *)this + 2));
      }
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    *(void *)this += a3;
  }
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  if (*((_DWORD *)this + 2) != *(_DWORD *)this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 617);
    uint64_t v2 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (0) == (BufferSize()): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v23, v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  int v3 = *((_DWORD *)this + 11);
  if (v3 > 0 || *((int *)this + 7) > 0 || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
  {
    int v4 = *((_DWORD *)this + 6) - v3;
    int v5 = *((_DWORD *)this + 12);
    if (v4 >= v5 && v5 != *((_DWORD *)this + 10)) {
      google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(this);
    }
    return 0;
  }
  else
  {
    uint64_t v23 = 0;
    int v22 = 0;
    uint64_t v7 = *((void *)this + 2);
    do
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(void *)v7 + 16))(v7, &v23, &v22);
      uint64_t v8 = result;
      if (!result)
      {
        *(void *)this = 0;
        *((void *)this + 1) = 0;
        return result;
      }
      int v9 = v22;
    }
    while (!v22);
    uint64_t v10 = v23 + v22;
    *(void *)this = v23;
    *((void *)this + 1) = v10;
    if (v9 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 638);
      int v11 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, v11);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
      int v9 = v22;
    }
    int v12 = *((_DWORD *)this + 6);
    int v13 = v12 - (v9 ^ 0x7FFFFFFF);
    if (v12 <= (v9 ^ 0x7FFFFFFF))
    {
      int v15 = v9 + v12;
      uint64_t v14 = *((void *)this + 1);
    }
    else
    {
      *((_DWORD *)this + 7) = v13;
      uint64_t v14 = *((void *)this + 1) - v13;
      *((void *)this + 1) = v14;
      int v15 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v15;
    int v16 = *((_DWORD *)this + 10);
    uint64_t v17 = v14 + *((int *)this + 11);
    *((void *)this + 1) = v17;
    int v18 = *((_DWORD *)this + 12);
    if (v18 >= v16) {
      int v18 = v16;
    }
    BOOL v19 = __OFSUB__(v15, v18);
    int v20 = v15 - v18;
    if ((v20 < 0) ^ v19 | (v20 == 0))
    {
      *((_DWORD *)this + 11) = 0;
    }
    else
    {
      *((void *)this + 1) = v17 - v20;
      *((_DWORD *)this + 11) = v20;
    }
    return v8;
  }
}

void sub_23CDBD0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBD0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBD0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBD0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadString(const void **this, std::string *a2, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0) {
    return 0;
  }
  int v3 = a2;
  if (*((_DWORD *)this + 2) - *(_DWORD *)this >= (int)__n)
  {
    size_t v6 = __n;
    std::string::resize(a2, __n, 0);
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      int v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
      if (!v3)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 267);
        uint64_t v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: z.first != NULL: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v7);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
        int v3 = 0;
      }
    }
    memcpy(v3, *this, v6);
    *this = (char *)*this + v6;
    return 1;
  }
  else
  {
    return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)this, a2, __n);
  }
}

void sub_23CDBD210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBD224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((unsigned char *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  int v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10)) {
    int v6 = *((_DWORD *)this + 10);
  }
  if (v6 != 0x7FFFFFFF)
  {
    int v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this;
    BOOL v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1) {
      std::string::reserve(a2, __requested_capacity);
    }
  }
  while (1)
  {
    int v10 = v3;
    int v11 = *(const std::string::value_type **)this;
    uint64_t v12 = *((void *)this + 1) - *(void *)this;
    if (v3 <= (int)v12) {
      break;
    }
    if (v12)
    {
      std::string::append(a2, v11, (int)v12);
      *(void *)this += (int)v12;
      v3 -= v12;
    }
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v10 <= (int)v12;
    }
  }
  std::string::append(a2, v11, v3);
  *(void *)this += v3;
  return v10 <= (int)v12;
}

uint64_t google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(unsigned int **this, unsigned int *a2)
{
  int v4 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFFC) != 0)
  {
    int v5 = v4 + 1;
  }
  else
  {
    int v6 = 4;
    int v7 = __dst;
    while (1)
    {
      BOOL v8 = *this;
      int64_t v9 = (char *)this[1] - (char *)*this;
      int v10 = v6 - v9;
      if (v6 <= (int)v9) {
        break;
      }
      uint64_t v11 = (int)v9;
      memcpy(v7, *this, (int)v9);
      v7 += v11;
      *this = (unsigned int *)((char *)v8 + v11);
      char v12 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
      int v6 = v10;
      if ((v12 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v14 = v6;
    memcpy(v7, *this, v6);
    int v5 = (unsigned int *)((char *)v8 + v14);
    int v4 = (unsigned int *)__dst;
  }
  *this = v5;
  *a2 = *v4;
  return 1;
}

uint64_t google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(unint64_t **this, unint64_t *a2)
{
  v15[1] = *MEMORY[0x263EF8340];
  int v4 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFF8) != 0)
  {
    int v5 = v4 + 1;
  }
  else
  {
    int v6 = 8;
    int v7 = v15;
    while (1)
    {
      BOOL v8 = *this;
      int64_t v9 = (char *)this[1] - (char *)*this;
      int v10 = v6 - v9;
      if (v6 <= (int)v9) {
        break;
      }
      uint64_t v11 = (int)v9;
      memcpy(v7, *this, (int)v9);
      int v7 = (void *)((char *)v7 + v11);
      *this = (unint64_t *)((char *)v8 + v11);
      char v12 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
      int v6 = v10;
      if ((v12 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v14 = v6;
    memcpy(v7, *this, v6);
    int v5 = (unint64_t *)((char *)v8 + v14);
    int v4 = v15;
  }
  *this = v5;
  *a2 = *v4;
  return 1;
}

std::string::size_type google::protobuf::io::CodedInputStream::ReadVarint64Fallback(google::protobuf::io::CodedInputStream *this, uint8x8_t a2)
{
  int v4 = *(unsigned __int8 **)this;
  unint64_t v3 = *((void *)this + 1);
  if ((int)(v3 - *(void *)this) <= 9 && (v3 <= (unint64_t)v4 || *(char *)(v3 - 1) < 0))
  {
    v22[0].__r_.__value_.__r.__words[0] = 0;
    google::protobuf::io::CodedInputStream::ReadVarint64Slow((char **)this, (unint64_t *)v22);
    return v22[0].__r_.__value_.__r.__words[0];
  }
  uint64_t v20 = 0;
  if (((char)*v4 & 0x80000000) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 417);
    int v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (buffer[0]) >= (128): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v21, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  uint64_t v6 = v4[1];
  if (((char)v4[1] & 0x80000000) == 0)
  {
    unsigned int v8 = *v4;
    int v7 = (char *)(v4 + 2);
    uint64_t v9 = v8 + (v6 << 7) - 128;
LABEL_16:
    uint64_t v20 = v9;
LABEL_17:
    *(void *)this = v7;
    return v20;
  }
  uint64_t v11 = v4[2];
  if (((char)v4[2] & 0x80000000) == 0)
  {
    unsigned int v12 = *v4;
    int v7 = (char *)(v4 + 3);
    unint64_t v13 = (v6 << 7) + (v11 << 14);
    uint64_t v14 = v12 - 16512;
LABEL_15:
    uint64_t v9 = v13 + v14;
    goto LABEL_16;
  }
  uint64_t v15 = v4[3];
  if (((char)v4[3] & 0x80000000) == 0)
  {
    unsigned int v16 = *v4;
    int v7 = (char *)(v4 + 4);
    unint64_t v13 = (v6 << 7) + (v11 << 14) + (v15 << 21);
    uint64_t v14 = v16 - 2113664;
    goto LABEL_15;
  }
  int v17 = (char)v4[4];
  if ((v17 & 0x80000000) == 0)
  {
    unsigned int v18 = *v4;
    int v7 = (char *)(v4 + 5);
    unint64_t v13 = (v6 << 7) + (v11 << 14) + (v15 << 21) + ((unint64_t)v17 << 28);
    uint64_t v14 = v18 - 270549120;
    goto LABEL_15;
  }
  if (((char)v4[5] & 0x80000000) == 0)
  {
LABEL_28:
    int v7 = (char *)v19;
    goto LABEL_17;
  }
  if (((char)v4[6] & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  if (((char)v4[7] & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  if (((char)v4[8] & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  if (((char)v4[9] & 0x80000000) == 0)
  {
    goto LABEL_28;
  }
  return 0;
}

void sub_23CDBD744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBD758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, int a2, uint8x8_t a3)
{
  uint64_t v6 = *(unsigned __int8 **)this;
  unint64_t v5 = *((void *)this + 1);
  if ((int)(v5 - *(void *)this) <= 9 && (v5 <= (unint64_t)v6 || *(char *)(v5 - 1) < 0))
  {
    LODWORD(result) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, a3);
    if (v10) {
      return result;
    }
    else {
      return -1;
    }
  }
  if (a2)
  {
    if (*v6 == a2) {
      goto LABEL_6;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 462);
    uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (first_byte_or_zero) != (0): ");
    unsigned int v12 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "Caller should provide us with *buffer_ when buffer is non-empty");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, v12);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    uint64_t v6 = *(unsigned __int8 **)this;
    if (!**(unsigned char **)this)
    {
LABEL_6:
      if ((a2 & 0x80) != 0) {
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 373);
  unint64_t v13 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (*buffer) == (first_byte): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, v13);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  if ((a2 & 0x80) != 0)
  {
LABEL_7:
    unsigned int v7 = a2 + (v6[1] << 7) - 128;
    if (((char)v6[1] & 0x80000000) == 0)
    {
LABEL_8:
      unsigned int v8 = v6 + 2;
LABEL_32:
      *(void *)this = v8;
      return v7;
    }
    goto LABEL_16;
  }
LABEL_15:
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 374);
  uint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (first_byte & 0x80) == (0x80): ");
  uint64_t v15 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, a2);
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v17, v15);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  unsigned int v7 = a2 + (v6[1] << 7) - 128;
  if (((char)v6[1] & 0x80000000) == 0) {
    goto LABEL_8;
  }
LABEL_16:
  unsigned int v7 = v7 + (v6[2] << 14) - 0x4000;
  if (((char)v6[2] & 0x80000000) == 0)
  {
    unsigned int v8 = v6 + 3;
    goto LABEL_32;
  }
  unsigned int v7 = v7 + (v6[3] << 21) - 0x200000;
  if (((char)v6[3] & 0x80000000) == 0)
  {
    unsigned int v8 = v6 + 4;
    goto LABEL_32;
  }
  int v16 = (char)v6[4];
  unsigned int v7 = v7 + (v16 << 28) - 0x10000000;
  if ((v16 & 0x80000000) == 0)
  {
    unsigned int v8 = v6 + 5;
    goto LABEL_32;
  }
  if (((char)v6[5] & 0x80000000) == 0)
  {
    unsigned int v8 = v6 + 6;
    goto LABEL_32;
  }
  if (((char)v6[6] & 0x80000000) == 0)
  {
    unsigned int v8 = v6 + 7;
    goto LABEL_32;
  }
  if (((char)v6[7] & 0x80000000) == 0)
  {
    unsigned int v8 = v6 + 8;
    goto LABEL_32;
  }
  if (((char)v6[8] & 0x80000000) == 0)
  {
    unsigned int v8 = v6 + 9;
    goto LABEL_32;
  }
  if (((char)v6[9] & 0x80000000) == 0)
  {
    unsigned int v8 = v6 + 10;
    goto LABEL_32;
  }
  return -1;
}

void sub_23CDBD9C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBD9DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBD9F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBDA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBDA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBDA2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::size_type google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this, int a2, uint8x8_t a3)
{
  unint64_t v5 = *(char **)this;
  uint64_t v6 = (unsigned __int8 *)*((void *)this + 1);
  int v7 = v6 - *(void *)this;
  if (v7 > 9) {
    goto LABEL_4;
  }
  if (v7 < 1)
  {
    if (!v7)
    {
      int v15 = *((_DWORD *)this + 11);
      int v16 = *((_DWORD *)this + 6);
      if ((v15 > 0 || v16 == *((_DWORD *)this + 10)) && v16 - v15 < *((_DWORD *)this + 12)) {
        goto LABEL_33;
      }
    }
  }
  else if (((char)*(v6 - 1) & 0x80000000) == 0)
  {
LABEL_4:
    if (*v5 != a2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 537);
      unsigned int v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (first_byte_or_zero) == (buffer_[0]): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, v8);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
    uint64_t v9 = *(char **)this;
    if (!a2)
    {
      std::string::size_type result = 0;
      *(void *)this = v9 + 1;
      return result;
    }
    if (*v9 != a2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 373);
      char v10 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (*buffer) == (first_byte): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, v10);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
    if ((a2 & 0x80) == 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 374);
      uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (first_byte & 0x80) == (0x80): ");
      unsigned int v12 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, a2);
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v19, v12);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
    std::string::size_type result = a2 + (v9[1] << 7) - 128;
    if ((v9[1] & 0x80000000) == 0)
    {
      *(void *)this = v9 + 2;
      return result;
    }
    std::string::size_type result = result + (v9[2] << 14) - 0x4000;
    if ((v9[2] & 0x80000000) == 0)
    {
      *(void *)this = v9 + 3;
      return result;
    }
    std::string::size_type result = result + (v9[3] << 21) - 0x200000;
    if ((v9[3] & 0x80000000) == 0)
    {
      *(void *)this = v9 + 4;
      return result;
    }
    int v18 = v9[4];
    std::string::size_type result = (result + (v18 << 28) - 0x10000000);
    if ((v18 & 0x80000000) == 0)
    {
      *(void *)this = v9 + 5;
      return result;
    }
    if ((v9[5] & 0x80000000) == 0)
    {
      *(void *)this = v9 + 6;
      return result;
    }
    if ((v9[6] & 0x80000000) == 0)
    {
      *(void *)this = v9 + 7;
      return result;
    }
    if ((v9[7] & 0x80000000) == 0)
    {
      *(void *)this = v9 + 8;
      return result;
    }
    if ((v9[8] & 0x80000000) == 0)
    {
      *(void *)this = v9 + 9;
      return result;
    }
    if ((v9[9] & 0x80000000) == 0)
    {
      *(void *)this = v9 + 10;
      return result;
    }
    return 0;
  }
  if (v5 == (char *)v6)
  {
    if (google::protobuf::io::CodedInputStream::Refresh(this))
    {
      unint64_t v5 = *(char **)this;
      uint64_t v6 = (unsigned __int8 *)*((void *)this + 1);
      goto LABEL_19;
    }
    int v17 = *((_DWORD *)this + 12);
    if (*((_DWORD *)this + 6) - *((_DWORD *)this + 11) >= v17)
    {
      std::string::size_type result = 0;
      *((unsigned char *)this + 36) = *((_DWORD *)this + 10) == v17;
      return result;
    }
LABEL_33:
    std::string::size_type result = 0;
    *((unsigned char *)this + 36) = 1;
    return result;
  }
LABEL_19:
  if (v5 < (char *)v6 && (*v5 & 0x80000000) == 0)
  {
    std::string::size_type result = *v5;
    *(void *)this = v5 + 1;
    return result;
  }
  std::string::size_type result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, a3);
  if ((v14 & 1) == 0) {
    return 0;
  }
  return result;
}

void sub_23CDBDDF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBDE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBDE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBDE2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBDE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBDE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint64Slow(char **this, unint64_t *a2)
{
  while (1)
  {
    int v4 = *this;
    if (*this != this[1]) {
      break;
    }
    if ((google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this) & 1) == 0) {
      goto LABEL_3;
    }
  }
  char v6 = *v4;
  unint64_t v7 = *v4 & 0x7F;
  *this = v4 + 1;
  if ((v6 & 0x80) == 0) {
    goto LABEL_6;
  }
  while (1)
  {
    unsigned int v8 = *this;
    if (*this != this[1]) {
      break;
    }
    if ((google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this) & 1) == 0) {
      goto LABEL_3;
    }
  }
  int v9 = *v8;
  unint64_t v10 = v7 | ((unint64_t)(v9 & 0x7F) << 7);
  *this = v8 + 1;
  unint64_t v7 = v10;
  if ((v9 & 0x80000000) == 0) {
    goto LABEL_6;
  }
  while (1)
  {
    unsigned int v12 = *this;
    if (*this != this[1]) {
      break;
    }
    char v11 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
    uint64_t result = 0;
    if ((v11 & 1) == 0) {
      goto LABEL_4;
    }
  }
  int v13 = *v12;
  unint64_t v14 = v10 | ((unint64_t)(v13 & 0x7F) << 14);
  *this = v12 + 1;
  unint64_t v7 = v14;
  if ((v13 & 0x80000000) == 0) {
    goto LABEL_6;
  }
  while (1)
  {
    int v16 = *this;
    if (*this != this[1]) {
      break;
    }
    char v15 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
    uint64_t result = 0;
    if ((v15 & 1) == 0) {
      goto LABEL_4;
    }
  }
  int v17 = *v16;
  unint64_t v18 = v14 | ((unint64_t)(v17 & 0x7F) << 21);
  *this = v16 + 1;
  unint64_t v7 = v18;
  if ((v17 & 0x80000000) == 0) {
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v20 = *this;
    if (*this != this[1]) {
      break;
    }
    char v19 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
    uint64_t result = 0;
    if ((v19 & 1) == 0) {
      goto LABEL_4;
    }
  }
  int v21 = *v20;
  unint64_t v22 = v18 | ((unint64_t)(v21 & 0x7F) << 28);
  *this = v20 + 1;
  unint64_t v7 = v22;
  if ((v21 & 0x80000000) == 0) {
    goto LABEL_6;
  }
  while (1)
  {
    unint64_t v24 = *this;
    if (*this != this[1]) {
      break;
    }
    char v23 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
    uint64_t result = 0;
    if ((v23 & 1) == 0) {
      goto LABEL_4;
    }
  }
  int v25 = *v24;
  unint64_t v26 = v22 | ((unint64_t)(v25 & 0x7F) << 35);
  *this = v24 + 1;
  unint64_t v7 = v26;
  if ((v25 & 0x80000000) == 0) {
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v28 = *this;
    if (*this != this[1]) {
      break;
    }
    char v27 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
    uint64_t result = 0;
    if ((v27 & 1) == 0) {
      goto LABEL_4;
    }
  }
  int v29 = *v28;
  unint64_t v30 = v26 | ((unint64_t)(v29 & 0x7F) << 42);
  *this = v28 + 1;
  unint64_t v7 = v30;
  if ((v29 & 0x80000000) == 0) {
    goto LABEL_6;
  }
  while (1)
  {
    int v32 = *this;
    if (*this != this[1]) {
      break;
    }
    char v31 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
    uint64_t result = 0;
    if ((v31 & 1) == 0) {
      goto LABEL_4;
    }
  }
  int v33 = *v32;
  unint64_t v34 = v30 | ((unint64_t)(v33 & 0x7F) << 49);
  *this = v32 + 1;
  unint64_t v7 = v34;
  if ((v33 & 0x80000000) == 0) {
    goto LABEL_6;
  }
  while (1)
  {
    uint64_t v36 = *this;
    if (*this != this[1]) {
      break;
    }
    char v35 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
    uint64_t result = 0;
    if ((v35 & 1) == 0) {
      goto LABEL_4;
    }
  }
  int v37 = *v36;
  unint64_t v38 = v34 | ((unint64_t)(v37 & 0x7F) << 56);
  *this = v36 + 1;
  unint64_t v7 = v38;
  if ((v37 & 0x80000000) == 0)
  {
LABEL_6:
    uint64_t result = 1;
    *a2 = v7;
    return result;
  }
  while (1)
  {
    uint64_t v39 = *this;
    if (*this != this[1]) {
      break;
    }
    char v40 = google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this);
    uint64_t result = 0;
    if ((v40 & 1) == 0) {
      goto LABEL_4;
    }
  }
  char v42 = *v39;
  uint64_t v41 = *v39;
  *this = v39 + 1;
  if ((v42 & 0x80) == 0)
  {
    uint64_t result = 1;
    *a2 = v38 | (v41 << 63);
    return result;
  }
LABEL_3:
  uint64_t result = 0;
LABEL_4:
  *a2 = 0;
  return result;
}

unint64_t google::protobuf::io::EpsCopyOutputStream::Flush(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  do
  {
    unint64_t v5 = *(void *)this;
    int v4 = (void *)*((void *)this + 1);
    if (!v4)
    {
      unint64_t v9 = v5 - (void)a2;
      unint64_t v10 = v9 + 16;
      *((void *)this + 1) = a2;
      if (((v9 + 16) & 0x80000000) == 0) {
        return v10;
      }
LABEL_12:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 700);
      unsigned int v12 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: s >= 0: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, v12);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
      return v10;
    }
    int v6 = a2 - v5;
    if ((unint64_t)a2 <= v5)
    {
      memcpy(v4, (char *)this + 16, a2 - ((char *)this + 16));
      unint64_t v11 = *(void *)this;
      *((void *)this + 1) += a2 - ((char *)this + 16);
      unint64_t v10 = v11 - (void)a2;
      if (((v11 - a2) & 0x80000000) == 0) {
        return v10;
      }
      goto LABEL_12;
    }
    if (*((unsigned char *)this + 56))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 685);
      unint64_t v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !had_error_: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, v7);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    if (v6 >= 17)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 686);
      unsigned int v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: overrun <= kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, v8);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    a2 = &google::protobuf::io::EpsCopyOutputStream::Next(this)[v6];
  }
  while (!*((unsigned char *)this + 56));
  return 0;
}

void sub_23CDBE298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE2C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE2D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE2FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::Next(google::protobuf::io::EpsCopyOutputStream *this)
{
  if (*((unsigned char *)this + 56))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 788);
    uint64_t v2 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: !had_error_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (*((void *)this + 6))
  {
    unint64_t v3 = (char *)this + 16;
    unint64_t v5 = *(char **)this;
    int v4 = (void *)*((void *)this + 1);
    if (v4)
    {
      memcpy(v4, (char *)this + 16, v5 - v3);
      int v12 = 0;
      do
      {
        v13[0].__r_.__value_.__r.__words[0] = 0;
        if (((*(uint64_t (**)(void, std::string *, int *))(**((void **)this + 6) + 16))(*((void *)this + 6), v13, &v12) & 1) == 0)
        {
          *((unsigned char *)this + 56) = 1;
          goto LABEL_12;
        }
        uint64_t v6 = v12;
      }
      while (!v12);
      std::string::size_type v7 = v13[0].__r_.__value_.__r.__words[0];
      if (v12 < 17)
      {
        if (v12 <= 0)
        {
          std::string::size_type v10 = v13[0].__r_.__value_.__r.__words[0];
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 810);
          unint64_t v9 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: size > 0: ");
          google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, v9);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
          LODWORD(v6) = v12;
          std::string::size_type v7 = v10;
        }
        *(_OWORD *)unint64_t v3 = *(_OWORD *)*(void *)this;
        *(void *)this = &v3[(int)v6];
        *((void *)this + 1) = v7;
        return (char *)this + 16;
      }
      else
      {
        *(_OWORD *)v13[0].__r_.__value_.__l.__data_ = *(_OWORD *)*(void *)this;
        *(void *)this = v7 + v6 - 16;
        *((void *)this + 1) = 0;
        return (char *)v7;
      }
    }
    else
    {
      *(_OWORD *)unint64_t v3 = *(_OWORD *)v5;
      *(void *)this = (char *)this + 32;
      *((void *)this + 1) = v5;
      return (char *)this + 16;
    }
  }
  else
  {
    *((unsigned char *)this + 56) = 1;
    unint64_t v3 = (char *)this + 16;
LABEL_12:
    *(void *)this = (char *)this + 32;
    return v3;
  }
}

void sub_23CDBE4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  if (*((unsigned char *)this + 56)) {
    return (uint64_t)this + 16;
  }
  int v4 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
  if (*((unsigned char *)this + 56)) {
    return (uint64_t)this + 16;
  }
  unint64_t v5 = (char *)(*((void *)this + 1) + v4 - 16);
  if (v4 > 16)
  {
    uint64_t v6 = 0;
  }
  else
  {
    unint64_t v5 = (char *)this + v4 + 16;
    uint64_t v6 = *((void *)this + 1);
  }
  if (v4 <= 16) {
    uint64_t result = (uint64_t)this + 16;
  }
  else {
    uint64_t result = *((void *)this + 1);
  }
  *(void *)this = v5;
  *((void *)this + 1) = v6;
  return result;
}

char *google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  while (!*((unsigned char *)this + 56))
  {
    unint64_t v3 = &a2[-*(void *)this];
    if ((v3 & 0x80000000) != 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 829);
      unint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: overrun >= 0: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    }
    else
    {
      if (v3 <= 0x10) {
        goto LABEL_3;
      }
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.cc", 830);
      int v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: overrun <= kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
LABEL_3:
    a2 = &google::protobuf::io::EpsCopyOutputStream::Next(this)[(int)v3];
    if ((unint64_t)a2 < *(void *)this) {
      return a2;
    }
  }
  return (char *)this + 16;
}

void sub_23CDBE6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(google::protobuf::io::EpsCopyOutputStream *this, char *__src, int a3, char *__dst)
{
  int v4 = __dst;
  uint64_t v8 = *(void *)this;
  if (*(void *)this + 16 < (unint64_t)__dst)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 838);
    unint64_t v9 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: ptr <= end_ + kSlopBytes: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, v9);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    uint64_t v8 = *(void *)this;
  }
  for (int i = v8 - v4 + 16; a3 > i; int i = v11 - v4 + 16)
  {
    memcpy(v4, __src, i);
    int v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, &v4[i]);
    uint64_t v11 = *(void *)this;
    if (*(void *)this + 16 < (unint64_t)v4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 838);
      int v12 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: ptr <= end_ + kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, v12);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
      uint64_t v11 = *(void *)this;
    }
    a3 -= i;
    __src += i;
  }
  memcpy(v4, __src, a3);
  return &v4[a3];
}

void sub_23CDBE854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBE890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(google::protobuf::io::EpsCopyOutputStream *this, char *__src, uint64_t a3, char *a4)
{
  int v4 = a4;
  uint64_t v8 = *(void *)this;
  if (*(void *)this + 16 < (unint64_t)a4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 838);
    unint64_t v9 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: ptr <= end_ + kSlopBytes: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v9);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    uint64_t v8 = *(void *)this;
  }
  uint64_t v10 = v8 - (void)v4;
  if (v10 + 16 <= (int)a3)
  {
    if (!*((unsigned char *)this + 56))
    {
      unint64_t v11 = google::protobuf::io::EpsCopyOutputStream::Flush(this, v4);
      if (v11) {
        (*(void (**)(void, unint64_t))(**((void **)this + 6) + 24))(*((void *)this + 6), v11);
      }
      int v4 = (char *)this + 16;
      *(void *)this = (char *)this + 16;
      *((void *)this + 1) = (char *)this + 16;
    }
    if (((*(uint64_t (**)(void, char *, uint64_t))(**((void **)this + 6) + 40))(*((void *)this + 6), __src, a3) & 1) == 0)
    {
      *((unsigned char *)this + 56) = 1;
      int v4 = (char *)this + 16;
      *(void *)this = (char *)this + 32;
    }
  }
  else if (v10 < (int)a3)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, __src, a3, v4);
  }
  else
  {
    memcpy(v4, __src, (int)a3);
    v4 += (int)a3;
  }
  return v4;
}

void sub_23CDBEA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBEA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, char *a4)
{
  int v4 = a4;
  unint64_t v8 = *(void *)this;
  if (*(void *)this <= (unint64_t)a4)
  {
    int v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
    unint64_t v8 = *(void *)this;
  }
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v9 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v9 = *(void *)(a3 + 8);
  }
  if (v8 <= (unint64_t)v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 858);
    uint64_t v10 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: ptr < end_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v22, v10);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  unsigned int v11 = (8 * a2) | 2;
  if (v11 > 0x7F)
  {
    char *v4 = (8 * a2) | 0x82;
    unsigned int v13 = (8 * a2) >> 7;
    if (v11 >> 14)
    {
      int v12 = v4 + 2;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        ++v12;
        unsigned int v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      v4[1] = v13;
      int v12 = v4 + 2;
    }
  }
  else
  {
    char *v4 = v11;
    int v12 = v4 + 1;
  }
  if (v9 >= 0x80)
  {
    unsigned int v20 = v9;
    do
    {
      *v12++ = v20 | 0x80;
      unsigned int v16 = v20 >> 7;
      unsigned int v21 = v20 >> 14;
      v20 >>= 7;
    }
    while (v21);
  }
  else
  {
    LOBYTE(v16) = v9;
  }
  *int v12 = v16;
  int v17 = v12 + 1;
  if (*(char *)(a3 + 23) >= 0) {
    unint64_t v18 = (char *)a3;
  }
  else {
    unint64_t v18 = *(char **)a3;
  }
  if (*((unsigned char *)this + 57)) {
    return google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(this, v18, v9, v17);
  }
  if (*(void *)this - (void)v17 < (int)v9) {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v18, v9, v17);
  }
  memcpy(v17, v18, (int)v9);
  return &v17[(int)v9];
}

void sub_23CDBEC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBEC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, char *a4)
{
  int v4 = a4;
  unint64_t v8 = *(void *)this;
  if (*(void *)this <= (unint64_t)a4)
  {
    int v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
    unint64_t v8 = *(void *)this;
  }
  if (*(char *)(a3 + 23) >= 0) {
    LODWORD(v9) = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v9 = *(void *)(a3 + 8);
  }
  if (v8 <= (unint64_t)v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 858);
    uint64_t v10 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: ptr < end_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v22, v10);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  unsigned int v11 = (8 * a2) | 2;
  if (v11 > 0x7F)
  {
    char *v4 = (8 * a2) | 0x82;
    unsigned int v13 = (8 * a2) >> 7;
    if (v11 >> 14)
    {
      int v12 = v4 + 2;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        ++v12;
        unsigned int v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      v4[1] = v13;
      int v12 = v4 + 2;
    }
  }
  else
  {
    char *v4 = v11;
    int v12 = v4 + 1;
  }
  if (v9 >= 0x80)
  {
    unsigned int v20 = v9;
    do
    {
      *v12++ = v20 | 0x80;
      unsigned int v16 = v20 >> 7;
      unsigned int v21 = v20 >> 14;
      v20 >>= 7;
    }
    while (v21);
  }
  else
  {
    LOBYTE(v16) = v9;
  }
  *int v12 = v16;
  int v17 = v12 + 1;
  if (*(char *)(a3 + 23) >= 0) {
    unint64_t v18 = (char *)a3;
  }
  else {
    unint64_t v18 = *(char **)a3;
  }
  if (*(void *)this - (void)v17 < (int)v9) {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v18, v9, v17);
  }
  memcpy(v17, v18, (int)v9);
  return &v17[(int)v9];
}

void sub_23CDBEDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDBEE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedOutputStream::CodedOutputStream(uint64_t a1, uint64_t a2, int a3)
{
  char v6 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
  uint64_t v7 = a1 + 16;
  *(void *)a1 = a1 + 16;
  *(void *)(a1 + 8) = a1 + 16;
  *(void *)(a1 + 48) = a2;
  *(_WORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 58) = v6;
  *(void *)(a1 + 64) = a1 + 16;
  *(void *)(a1 + 72) = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2);
  if (a3)
  {
    uint64_t v14 = 0;
    int v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t *, int *))(*(void *)a2 + 16))(a2, &v14, &v13) && v13 != 0)
    {
      uint64_t v9 = v14;
      if (v13 <= 16) {
        uint64_t v10 = v7 + v13;
      }
      else {
        uint64_t v10 = v14 + v13 - 16;
      }
      if (v13 <= 16) {
        uint64_t v11 = v14;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v13 <= 16) {
        uint64_t v9 = v7;
      }
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 64) = v9;
    }
  }
  return a1;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
  uint64_t v2 = (char *)*((void *)this + 8);
  if (*((unsigned char *)this + 56))
  {
    *((void *)this + 8) = v2;
  }
  else
  {
    if (google::protobuf::io::EpsCopyOutputStream::Flush(this, v2)) {
      (*(void (**)(void))(**((void **)this + 6) + 24))(*((void *)this + 6));
    }
    *(void *)this = (char *)this + 16;
    *((void *)this + 1) = (char *)this + 16;
    *((void *)this + 8) = (char *)this + 16;
  }
}

unsigned __int8 *google::protobuf::io::anonymous namespace'::DecodeVarint64KnownSize<6ul>(unsigned __int8 *a1, void *a2, uint8x8_t a3)
{
  a3.i32[0] = *(_DWORD *)(a1 + 1);
  uint32x4_t v3 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a3));
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  v5.i64[0] = 255;
  v5.i64[1] = 255;
  uint64x2_t v6 = (uint64x2_t)vandq_s8(v4, v5);
  v4.i64[0] = v3.u32[2];
  v4.i64[1] = v3.u32[3];
  *a2 = vaddvq_s64(vaddq_s64((int64x2_t)vshlq_u64(v6, (uint64x2_t)xmmword_23CE90F10), (int64x2_t)vshlq_u64((uint64x2_t)vandq_s8(v4, v5), (uint64x2_t)xmmword_23CE90F00)))+ ((unint64_t)a1[5] << 35)+ *a1- 0x810204080;
  return a1 + 6;
}

unsigned __int8 *google::protobuf::io::anonymous namespace'::DecodeVarint64KnownSize<7ul>(unsigned __int8 *a1, void *a2, uint8x8_t a3)
{
  a3.i32[0] = *(_DWORD *)(a1 + 1);
  uint32x4_t v3 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a3));
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  v5.i64[0] = 255;
  v5.i64[1] = 255;
  uint64x2_t v6 = (uint64x2_t)vandq_s8(v4, v5);
  v4.i64[0] = v3.u32[2];
  v4.i64[1] = v3.u32[3];
  *a2 = vaddvq_s64(vaddq_s64((int64x2_t)vshlq_u64(v6, (uint64x2_t)xmmword_23CE90F10), (int64x2_t)vshlq_u64((uint64x2_t)vandq_s8(v4, v5), (uint64x2_t)xmmword_23CE90F00)))+ ((unint64_t)a1[6] << 42)+ (*a1 | ((unint64_t)a1[5] << 35))- 0x40810204080;
  return a1 + 7;
}

unsigned __int8 *google::protobuf::io::anonymous namespace'::DecodeVarint64KnownSize<8ul>(unsigned __int8 *a1, void *a2, uint8x8_t a3)
{
  a3.i32[0] = *(_DWORD *)(a1 + 1);
  uint32x4_t v3 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a3));
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  v5.i64[0] = 255;
  v5.i64[1] = 255;
  uint64x2_t v6 = (uint64x2_t)vandq_s8(v4, v5);
  v4.i64[0] = v3.u32[2];
  v4.i64[1] = v3.u32[3];
  *a2 = vaddvq_s64(vaddq_s64((int64x2_t)vshlq_u64(v6, (uint64x2_t)xmmword_23CE90F10), (int64x2_t)vshlq_u64((uint64x2_t)vandq_s8(v4, v5), (uint64x2_t)xmmword_23CE90F00)))+ ((unint64_t)a1[7] << 49)+ ((unint64_t)a1[5] << 35)+ ((unint64_t)a1[6] << 42)+ *a1- 0x2040810204080;
  return a1 + 8;
}

unsigned __int8 *google::protobuf::io::anonymous namespace'::DecodeVarint64KnownSize<9ul>(unsigned __int8 *a1, void *a2)
{
  uint16x8_t v2 = vmovl_u8(*(uint8x8_t *)(a1 + 1));
  uint32x4_t v3 = vmovl_u16(*(uint16x4_t *)v2.i8);
  v4.i64[0] = v3.u32[2];
  v4.i64[1] = v3.u32[3];
  uint64x2_t v5 = v4;
  uint32x4_t v6 = vmovl_high_u16(v2);
  v4.i64[0] = v6.u32[2];
  v4.i64[1] = v6.u32[3];
  uint64x2_t v7 = v4;
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  uint64x2_t v8 = v4;
  v4.i64[0] = v6.u32[0];
  v4.i64[1] = v6.u32[1];
  *a2 = vaddvq_s64(vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_u64(v8, (uint64x2_t)xmmword_23CE90F10), (int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_23CE90F20)), (int64x2_t)vorrq_s8((int8x16_t)vshlq_u64(v5, (uint64x2_t)xmmword_23CE90F00), (int8x16_t)vshlq_u64(v7, (uint64x2_t)xmmword_23CE90F30))))+ *a1- 0x102040810204080;
  return a1 + 9;
}

unsigned __int8 *google::protobuf::io::anonymous namespace'::DecodeVarint64KnownSize<10ul>(unsigned __int8 *a1, void *a2, uint8x8_t a3)
{
  a3.i32[0] = *(_DWORD *)(a1 + 1);
  uint32x4_t v3 = vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(a3));
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  v5.i64[0] = 255;
  v5.i64[1] = 255;
  uint64x2_t v6 = (uint64x2_t)vandq_s8(v4, v5);
  v4.i64[0] = v3.u32[2];
  v4.i64[1] = v3.u32[3];
  *a2 = vaddvq_s64(vaddq_s64((int64x2_t)vshlq_u64(v6, (uint64x2_t)xmmword_23CE90F10), (int64x2_t)vshlq_u64((uint64x2_t)vandq_s8(v4, v5), (uint64x2_t)xmmword_23CE90F00)))+ ((unint64_t)a1[9] << 63)+ ((unint64_t)a1[5] << 35)+ ((unint64_t)a1[6] << 42)+ ((((unint64_t)a1[7] << 49) + ((unint64_t)a1[8] << 56)) | *a1)+ 0x7EFDFBF7EFDFBF80;
  return a1 + 10;
}

void google::protobuf::internal::VerifyVersion(google::protobuf::internal *this, google::protobuf::internal *a2, const std::string::value_type *a3, const char *a4)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  if ((int)a2 <= 3012002) {
    goto LABEL_31;
  }
  unsigned int v37 = 3;
  unint64_t v38 = "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/"
        "protobuf/stubs/common.cc";
  int v39 = 76;
  memset(&v40, 0, sizeof(v40));
  std::string::append(&v40, "This program requires version ");
  google::protobuf::internal::VersionString(a2, &__p);
  if ((v36 & 0x80u) == 0) {
    p_p = (const std::string::value_type *)&__p;
  }
  else {
    p_p = (const std::string::value_type *)__p;
  }
  if ((v36 & 0x80u) == 0) {
    std::string::size_type v8 = v36;
  }
  else {
    std::string::size_type v8 = v35;
  }
  std::string::append(&v40, p_p, v8);
  std::string::append(&v40, " of the Protocol Buffer runtime library, but the installed version is ");
  snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 12, 2);
  char v42 = 0;
  size_t v9 = strlen(__str);
  if (v9 > 0x7FFFFFFFFFFFFFF7) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v12 = v9 | 7;
    }
    uint64_t v13 = v12 + 1;
    p_dst = (void **)operator new(v12 + 1);
    std::string::size_type v32 = v10;
    int64_t v33 = v13 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_15;
  }
  HIBYTE(v33) = v9;
  p_dst = (void **)&__dst;
  if (v9) {
LABEL_15:
  }
    memcpy(p_dst, __str, v10);
  *((unsigned char *)p_dst + v10) = 0;
  if (v33 >= 0) {
    uint64_t v14 = (const std::string::value_type *)&__dst;
  }
  else {
    uint64_t v14 = (const std::string::value_type *)__dst;
  }
  if (v33 >= 0) {
    std::string::size_type v15 = HIBYTE(v33);
  }
  else {
    std::string::size_type v15 = v32;
  }
  std::string::append(&v40, v14, v15);
  std::string::append(&v40, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
  std::string::append(&v40, a3);
  std::string::append(&v40, "\".)");
  if (v37 == 3)
  {
    uint64_t v16 = 3;
LABEL_26:
    google::protobuf::internal::log_handler_(v16, v38, v39, (uint64_t)&v40);
    goto LABEL_27;
  }
  int v17 = atomic_load((unsigned int *)&google::protobuf::internal::log_silencer_count_);
  if (v17 <= 0)
  {
    uint64_t v16 = v37;
    goto LABEL_26;
  }
LABEL_27:
  if (v37 == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException((uint64_t)exception, (uint64_t)v38, v39, (long long *)&v40);
  }
  if (SHIBYTE(v33) < 0)
  {
    operator delete(__dst);
    if (((char)v36 & 0x80000000) == 0)
    {
LABEL_30:
      if ((SHIBYTE(v40.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_31;
      }
LABEL_64:
      operator delete(v40.__r_.__value_.__l.__data_);
      if ((int)this >= 3012000) {
        return;
      }
      goto LABEL_32;
    }
  }
  else if (((char)v36 & 0x80000000) == 0)
  {
    goto LABEL_30;
  }
  operator delete(__p);
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_64;
  }
LABEL_31:
  if ((int)this >= 3012000) {
    return;
  }
LABEL_32:
  unsigned int v37 = 3;
  unint64_t v38 = "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/"
        "protobuf/stubs/common.cc";
  int v39 = 87;
  memset(&v40, 0, sizeof(v40));
  std::string::append(&v40, "This program was compiled against version ");
  google::protobuf::internal::VersionString(this, &__p);
  if ((v36 & 0x80u) == 0) {
    unint64_t v18 = (const std::string::value_type *)&__p;
  }
  else {
    unint64_t v18 = (const std::string::value_type *)__p;
  }
  if ((v36 & 0x80u) == 0) {
    std::string::size_type v19 = v36;
  }
  else {
    std::string::size_type v19 = v35;
  }
  std::string::append(&v40, v18, v19);
  std::string::append(&v40, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
  snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 12, 2);
  char v42 = 0;
  size_t v20 = strlen(__str);
  if (v20 > 0x7FFFFFFFFFFFFFF7) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v21 = v20;
  if (v20 >= 0x17)
  {
    uint64_t v23 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v20 | 7) != 0x17) {
      uint64_t v23 = v20 | 7;
    }
    uint64_t v24 = v23 + 1;
    char v22 = (void **)operator new(v23 + 1);
    std::string::size_type v32 = v21;
    int64_t v33 = v24 | 0x8000000000000000;
    long long __dst = v22;
    goto LABEL_45;
  }
  HIBYTE(v33) = v20;
  char v22 = (void **)&__dst;
  if (v20) {
LABEL_45:
  }
    memcpy(v22, __str, v21);
  *((unsigned char *)v22 + v21) = 0;
  if (v33 >= 0) {
    int v25 = (const std::string::value_type *)&__dst;
  }
  else {
    int v25 = (const std::string::value_type *)__dst;
  }
  if (v33 >= 0) {
    std::string::size_type v26 = HIBYTE(v33);
  }
  else {
    std::string::size_type v26 = v32;
  }
  std::string::append(&v40, v25, v26);
  std::string::append(&v40, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
  std::string::append(&v40, a3);
  std::string::append(&v40, "\".)");
  if (v37 == 3)
  {
    uint64_t v27 = 3;
  }
  else
  {
    int v28 = atomic_load((unsigned int *)&google::protobuf::internal::log_silencer_count_);
    if (v28 > 0) {
      goto LABEL_57;
    }
    uint64_t v27 = v37;
  }
  google::protobuf::internal::log_handler_(v27, v38, v39, (uint64_t)&v40);
LABEL_57:
  if (v37 == 3)
  {
    unint64_t v30 = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException((uint64_t)v30, (uint64_t)v38, v39, (long long *)&v40);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if (((char)v36 & 0x80000000) == 0) {
      goto LABEL_60;
    }
LABEL_67:
    operator delete(__p);
    if ((SHIBYTE(v40.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_68;
  }
  operator delete(__dst);
  if ((char)v36 < 0) {
    goto LABEL_67;
  }
LABEL_60:
  if ((SHIBYTE(v40.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    return;
  }
LABEL_68:
  operator delete(v40.__r_.__value_.__l.__data_);
}

void sub_23CDBF77C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  __cxa_free_exception(v32);
  if (a17 < 0)
  {
    operator delete(__p);
    if ((a23 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a32 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a23 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a18);
  if ((a32 & 0x80000000) == 0) {
LABEL_4:
  }
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(a27);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  uint32x4_t v3 = a1 + 1;
  int8x16_t v4 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    int8x16_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    int8x16_t v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

unint64_t google::protobuf::internal::VersionString@<X0>(google::protobuf::internal *this@<X0>, void *a2@<X8>)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  char __str[127] = 0;
  unint64_t result = strlen(__str);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v4 = result;
  if (result >= 0x17)
  {
    uint64_t v5 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v5 = result | 7;
    }
    uint64_t v6 = v5 + 1;
    uint64x2_t v7 = operator new(v5 + 1);
    a2[1] = v4;
    a2[2] = v6 | 0x8000000000000000;
    *a2 = v7;
    a2 = v7;
  }
  else
  {
    *((unsigned char *)a2 + 23) = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  unint64_t result = (unint64_t)memcpy(a2, __str, v4);
LABEL_9:
  *((unsigned char *)a2 + v4) = 0;
  return result;
}

void google::protobuf::internal::LogFinisher::operator=(uint64_t a1, unsigned int *a2)
{
  if (*a2 == 3)
  {
    uint64_t v3 = 3;
  }
  else
  {
    int v4 = atomic_load((unsigned int *)&google::protobuf::internal::log_silencer_count_);
    if (v4 > 0) {
      goto LABEL_6;
    }
    uint64_t v3 = *a2;
  }
  google::protobuf::internal::log_handler_(v3, *((const char **)a2 + 1), a2[4], (uint64_t)(a2 + 6));
LABEL_6:
  if (*a2 == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException((uint64_t)exception, *((void *)a2 + 1), a2[4], (long long *)(a2 + 6));
  }
}

void sub_23CDBFAE4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

uint64_t google::protobuf::internal::DefaultLogHandler(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  if ((result & 0x80000000) == 0)
  {
    int v4 = (FILE **)MEMORY[0x263EF8348];
    if (*(char *)(a4 + 23) >= 0) {
      uint64_t v5 = (const char *)a4;
    }
    else {
      uint64_t v5 = *(const char **)a4;
    }
    fprintf((FILE *)*MEMORY[0x263EF8348], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[result], a2, a3, v5);
    uint64_t v6 = *v4;
    return fflush(v6);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%d", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

{
  char __str[128];
  uint64_t v5;

  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%u", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, uint64_t a2)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  snprintf(__str, 0x80uLL, "%lu", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &unk_26F0C4AD0;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_23CDBFDB4(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  uint64_t v1 = this;
  this->__vftable = (std::exception_vtbl *)&unk_26F0C4AD0;
  if (SHIBYTE(this[5].__vftable) < 0)
  {
    operator delete(this[3].__vftable);
    this = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_26F0C4AD0;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  std::exception::~exception(this);

  JUMPOUT(0x23ECF2BC0);
}

uint64_t google::protobuf::ghtonl(google::protobuf *this)
{
  return bswap32(this);
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

google::protobuf::DescriptorPool::Tables *google::protobuf::DescriptorPool::Tables::Tables(google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v83 = *MEMORY[0x263EF8340];
  uint16x8_t v2 = (char *)this + 24;
  *((void *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  *((_DWORD *)this + 14) = 1065353216;
  size_t prime = std::__next_prime(3uLL);
  unint64_t v4 = prime;
  int8x8_t v5 = *(int8x8_t *)((char *)this + 32);
  if (prime > *(void *)&v5) {
    goto LABEL_2;
  }
  if (prime < *(void *)&v5)
  {
    unint64_t v6 = vcvtps_u32_f32((float)*((unint64_t *)this + 6) / *((float *)this + 14));
    if (*(void *)&v5 < 3uLL || (uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5), v7.i16[0] = vaddlv_u8(v7), v7.u32[0] > 1uLL))
    {
      unint64_t v6 = std::__next_prime(v6);
    }
    else
    {
      uint64_t v8 = 1 << -(char)__clz(v6 - 1);
      if (v6 >= 2) {
        unint64_t v6 = v8;
      }
    }
    if (v4 <= v6) {
      unint64_t v4 = v6;
    }
    if (v4 < *(void *)&v5) {
LABEL_2:
    }
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>((uint64_t)v2, v4);
  }
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 1065353216;
  size_t v9 = std::__next_prime(3uLL);
  unint64_t v10 = v9;
  int8x8_t v11 = *(int8x8_t *)((char *)this + 72);
  if (v9 > *(void *)&v11) {
    goto LABEL_14;
  }
  if (v9 < *(void *)&v11)
  {
    unint64_t v12 = vcvtps_u32_f32((float)*((unint64_t *)this + 11) / *((float *)this + 24));
    if (*(void *)&v11 < 3uLL || (uint8x8_t v13 = (uint8x8_t)vcnt_s8(v11), v13.i16[0] = vaddlv_u8(v13), v13.u32[0] > 1uLL))
    {
      unint64_t v12 = std::__next_prime(v12);
    }
    else
    {
      uint64_t v14 = 1 << -(char)__clz(v12 - 1);
      if (v12 >= 2) {
        unint64_t v12 = v14;
      }
    }
    if (v10 <= v12) {
      unint64_t v10 = v12;
    }
    if (v10 < *(void *)&v11) {
LABEL_14:
    }
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>((uint64_t)this + 64, v10);
  }
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_DWORD *)this + 34) = 1065353216;
  size_t v15 = std::__next_prime(3uLL);
  unint64_t v16 = v15;
  int8x8_t v17 = *(int8x8_t *)((char *)this + 112);
  if (v15 > *(void *)&v17) {
    goto LABEL_26;
  }
  if (v15 < *(void *)&v17)
  {
    unint64_t v18 = vcvtps_u32_f32((float)*((unint64_t *)this + 16) / *((float *)this + 34));
    if (*(void *)&v17 < 3uLL || (uint8x8_t v19 = (uint8x8_t)vcnt_s8(v17), v19.i16[0] = vaddlv_u8(v19), v19.u32[0] > 1uLL))
    {
      unint64_t v18 = std::__next_prime(v18);
    }
    else
    {
      uint64_t v20 = 1 << -(char)__clz(v18 - 1);
      if (v18 >= 2) {
        unint64_t v18 = v20;
      }
    }
    if (v16 <= v18) {
      unint64_t v16 = v18;
    }
    if (v16 < *(void *)&v17) {
LABEL_26:
    }
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>((uint64_t)this + 104, v16);
  }
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_DWORD *)this + 44) = 1065353216;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *((void *)this + 41) = 0;
  *((_DWORD *)this + 84) = 1065353216;
  size_t v21 = std::__next_prime(3uLL);
  unint64_t v22 = v21;
  int8x8_t v23 = *(int8x8_t *)((char *)this + 312);
  if (v21 > *(void *)&v23) {
    goto LABEL_38;
  }
  if (v21 < *(void *)&v23)
  {
    unint64_t v24 = vcvtps_u32_f32((float)*((unint64_t *)this + 41) / *((float *)this + 84));
    if (*(void *)&v23 < 3uLL || (uint8x8_t v25 = (uint8x8_t)vcnt_s8(v23), v25.i16[0] = vaddlv_u8(v25), v25.u32[0] > 1uLL))
    {
      unint64_t v24 = std::__next_prime(v24);
    }
    else
    {
      uint64_t v26 = 1 << -(char)__clz(v24 - 1);
      if (v24 >= 2) {
        unint64_t v24 = v26;
      }
    }
    if (v22 <= v24) {
      unint64_t v22 = v24;
    }
    if (v22 < *(void *)&v23) {
LABEL_38:
    }
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>((uint64_t)this + 304, v22);
  }
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  *((_DWORD *)this + 94) = 1065353216;
  size_t v27 = std::__next_prime(3uLL);
  unint64_t v28 = v27;
  int8x8_t v29 = *(int8x8_t *)((char *)this + 352);
  if (v27 > *(void *)&v29) {
    goto LABEL_50;
  }
  if (v27 < *(void *)&v29)
  {
    unint64_t v30 = vcvtps_u32_f32((float)*((unint64_t *)this + 46) / *((float *)this + 94));
    if (*(void *)&v29 < 3uLL || (uint8x8_t v31 = (uint8x8_t)vcnt_s8(v29), v31.i16[0] = vaddlv_u8(v31), v31.u32[0] > 1uLL))
    {
      unint64_t v30 = std::__next_prime(v30);
    }
    else
    {
      uint64_t v32 = 1 << -(char)__clz(v30 - 1);
      if (v30 >= 2) {
        unint64_t v30 = v32;
      }
    }
    if (v28 <= v30) {
      unint64_t v28 = v30;
    }
    if (v28 < *(void *)&v29) {
LABEL_50:
    }
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>((uint64_t)this + 344, v28);
  }
  *((void *)this + 49) = 0;
  *((void *)this + 50) = 0;
  *((void *)this + 48) = (char *)this + 392;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 440) = 0u;
  *(_OWORD *)((char *)this + 456) = 0u;
  *(_OWORD *)((char *)this + 472) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  unsigned int v37 = operator new(0x20uLL);
  long long v38 = xmmword_23CE7EC70;
  strcpy((char *)v37, "google.protobuf.DoubleValue");
  int v39 = 1;
  std::string v40 = operator new(0x20uLL);
  long long v41 = xmmword_23CE7E7C0;
  strcpy((char *)v40, "google.protobuf.FloatValue");
  int v42 = 2;
  uint64_t v43 = operator new(0x20uLL);
  long long v44 = xmmword_23CE7E7C0;
  strcpy((char *)v43, "google.protobuf.Int64Value");
  int v45 = 3;
  std::string::size_type v46 = operator new(0x20uLL);
  long long v47 = xmmword_23CE7EC70;
  strcpy((char *)v46, "google.protobuf.UInt64Value");
  int v48 = 4;
  uint64_t v49 = operator new(0x20uLL);
  long long v50 = xmmword_23CE7E7C0;
  strcpy((char *)v49, "google.protobuf.Int32Value");
  int v51 = 5;
  BOOL v52 = operator new(0x20uLL);
  long long v53 = xmmword_23CE7EC70;
  strcpy((char *)v52, "google.protobuf.UInt32Value");
  int v54 = 6;
  long long v55 = operator new(0x20uLL);
  long long v56 = xmmword_23CE7EC70;
  strcpy((char *)v55, "google.protobuf.StringValue");
  int v57 = 7;
  unint64_t v58 = operator new(0x20uLL);
  long long v59 = xmmword_23CE7E7C0;
  strcpy((char *)v58, "google.protobuf.BytesValue");
  int v60 = 8;
  v61[0] = operator new(0x20uLL);
  v61[1] = (void *)25;
  unint64_t v62 = 0x8000000000000020;
  strcpy((char *)v61[0], "google.protobuf.BoolValue");
  int v63 = 9;
  HIBYTE(v64[2]) = 19;
  strcpy((char *)v64, "google.protobuf.Any");
  int v65 = 10;
  v66[0] = operator new(0x20uLL);
  v66[1] = (void *)25;
  unint64_t v67 = 0x8000000000000020;
  strcpy((char *)v66[0], "google.protobuf.FieldMask");
  int v68 = 11;
  int64_t v33 = operator new(0x20uLL);
  unint64_t v70 = 0x8000000000000020;
  v69[0] = v33;
  v69[1] = (void *)24;
  strcpy((char *)v33, "google.protobuf.Duration");
  int v71 = 12;
  unint64_t v34 = operator new(0x20uLL);
  unint64_t v73 = 0x8000000000000020;
  v72[0] = v34;
  v72[1] = (void *)25;
  strcpy((char *)v34, "google.protobuf.Timestamp");
  int v74 = 13;
  HIBYTE(v75[2]) = 21;
  strcpy((char *)v75, "google.protobuf.Value");
  int v76 = 14;
  std::string::size_type v35 = operator new(0x20uLL);
  unint64_t v78 = 0x8000000000000020;
  v77[0] = v35;
  v77[1] = (void *)25;
  strcpy((char *)v35, "google.protobuf.ListValue");
  int v79 = 15;
  strcpy(__p, "google.protobuf.Struct");
  char v81 = 22;
  int v82 = 16;
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)&v37, (uint64_t)&v37);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)&v40, (uint64_t)&v40);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)&v43, (uint64_t)&v43);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)&v46, (uint64_t)&v46);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)&v49, (uint64_t)&v49);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)&v52, (uint64_t)&v52);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)&v55, (uint64_t)&v55);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)&v58, (uint64_t)&v58);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)v61, (uint64_t)v61);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)v64, (uint64_t)v64);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)v66, (uint64_t)v66);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)v69, (uint64_t)v69);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)v72, (uint64_t)v72);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)v75, (uint64_t)v75);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)v77, (uint64_t)v77);
  std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>((uint64_t)this + 144, (uint64_t)__p, (uint64_t)__p);
  if (v81 < 0)
  {
    operator delete(*(void **)__p);
    if ((SHIBYTE(v78) & 0x80000000) == 0)
    {
LABEL_63:
      if ((SHIBYTE(v75[2]) & 0x80000000) == 0) {
        goto LABEL_64;
      }
      goto LABEL_80;
    }
  }
  else if ((SHIBYTE(v78) & 0x80000000) == 0)
  {
    goto LABEL_63;
  }
  operator delete(v77[0]);
  if ((SHIBYTE(v75[2]) & 0x80000000) == 0)
  {
LABEL_64:
    if ((SHIBYTE(v73) & 0x80000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_81;
  }
LABEL_80:
  operator delete(v75[0]);
  if ((SHIBYTE(v73) & 0x80000000) == 0)
  {
LABEL_65:
    if ((SHIBYTE(v70) & 0x80000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_82;
  }
LABEL_81:
  operator delete(v72[0]);
  if ((SHIBYTE(v70) & 0x80000000) == 0)
  {
LABEL_66:
    if ((SHIBYTE(v67) & 0x80000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_83;
  }
LABEL_82:
  operator delete(v69[0]);
  if ((SHIBYTE(v67) & 0x80000000) == 0)
  {
LABEL_67:
    if ((SHIBYTE(v64[2]) & 0x80000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_84;
  }
LABEL_83:
  operator delete(v66[0]);
  if ((SHIBYTE(v64[2]) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v62) & 0x80000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_85;
  }
LABEL_84:
  operator delete(v64[0]);
  if ((SHIBYTE(v62) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v59) & 0x80000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_86;
  }
LABEL_85:
  operator delete(v61[0]);
  if ((SHIBYTE(v59) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v56) & 0x80000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_87;
  }
LABEL_86:
  operator delete(v58);
  if ((SHIBYTE(v56) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v53) & 0x80000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_88;
  }
LABEL_87:
  operator delete(v55);
  if ((SHIBYTE(v53) & 0x80000000) == 0)
  {
LABEL_72:
    if ((SHIBYTE(v50) & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_89;
  }
LABEL_88:
  operator delete(v52);
  if ((SHIBYTE(v50) & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v47) & 0x80000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_90;
  }
LABEL_89:
  operator delete(v49);
  if ((SHIBYTE(v47) & 0x80000000) == 0)
  {
LABEL_74:
    if ((SHIBYTE(v44) & 0x80000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_91;
  }
LABEL_90:
  operator delete(v46);
  if ((SHIBYTE(v44) & 0x80000000) == 0)
  {
LABEL_75:
    if ((SHIBYTE(v41) & 0x80000000) == 0) {
      goto LABEL_76;
    }
LABEL_92:
    operator delete(v40);
    if ((SHIBYTE(v38) & 0x80000000) == 0) {
      return this;
    }
LABEL_93:
    operator delete(v37);
    return this;
  }
LABEL_91:
  operator delete(v43);
  if (SHIBYTE(v41) < 0) {
    goto LABEL_92;
  }
LABEL_76:
  if (SHIBYTE(v38) < 0) {
    goto LABEL_93;
  }
  return this;
}

void sub_23CDC09B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _Unwind_Exception *exception_objecta, void **a10, void **a11, uint64_t a12, uint64_t a13, void *a14, void *a15, void **a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p)
{
  uint64_t v32 = v31;
  do
  {
    if (*((char *)v32 - 9) < 0) {
      operator delete(*(v32 - 4));
    }
    v32 -= 4;
  }
  while (v32 != &__p);
  int64_t v33 = *(void **)(v29 + 480);
  if (v33)
  {
    *(void *)(v29 + 488) = v33;
    operator delete(v33);
    unint64_t v34 = *(void **)(v29 + 456);
    if (!v34)
    {
LABEL_7:
      uint64_t v35 = v29 + 384;
      unsigned __int8 v36 = *(void **)(v29 + 432);
      if (!v36) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v34 = *(void **)(v29 + 456);
    if (!v34) {
      goto LABEL_7;
    }
  }
  *(void *)(v29 + 464) = v34;
  operator delete(v34);
  uint64_t v35 = v29 + 384;
  unsigned __int8 v36 = *(void **)(v29 + 432);
  if (!v36)
  {
LABEL_8:
    unsigned int v37 = *a10;
    if (!*a10) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_13:
  *(void *)(v29 + 440) = v36;
  operator delete(v36);
  unsigned int v37 = *a10;
  if (!*a10)
  {
LABEL_10:
    std::__tree<std::__value_type<unsigned long,void *>,std::__map_value_compare<unsigned long,std::__value_type<unsigned long,void *>,std::less<unsigned long>,true>,std::allocator<std::__value_type<unsigned long,void *>>>::destroy(v35, *a11);
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(a12);
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(a13);
    std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~vector[abi:ne180100](a14);
    std::vector<std::unique_ptr<std::once_flag>>::~vector[abi:ne180100]((void *)(v30 + 112));
    std::vector<std::unique_ptr<google::protobuf::Message>>::~vector[abi:ne180100](a15);
    std::vector<std::unique_ptr<std::string>>::~vector[abi:ne180100]((void *)(v30 + 64));
    std::vector<std::vector<int>>::~vector[abi:ne180100](a16);
    std::unordered_map<std::string,google::protobuf::Descriptor::WellKnownType>::~unordered_map[abi:ne180100](v30);
    std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(a17);
    std::unordered_map<std::string,google::protobuf::Descriptor::WellKnownType>::~unordered_map[abi:ne180100](a18);
    std::unordered_map<std::string,google::protobuf::Descriptor::WellKnownType>::~unordered_map[abi:ne180100](a19);
    operations_research::glop::StrictITIVector<gtl::IntType<operations_research::glop::ColIndex_tag_,int>,std::string>::~StrictITIVector((void **)v29);
    _Unwind_Resume(a1);
  }
LABEL_9:
  *(void *)(v29 + 416) = v37;
  operator delete(v37);
  goto LABEL_10;
}

void *std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~vector[abi:ne180100](void *a1)
{
  uint16x8_t v2 = (void *)*a1;
  if (*a1)
  {
    uint64_t v3 = (void *)a1[1];
    unint64_t v4 = (void *)*a1;
    if (v3 != v2)
    {
      do
      {
        unint64_t v6 = (std::mutex *)*--v3;
        int8x8_t v5 = v6;
        *uint64_t v3 = 0;
        if (v6)
        {
          google::protobuf::FileDescriptorTables::~FileDescriptorTables(v5);
          MEMORY[0x23ECF2BC0]();
        }
      }
      while (v3 != v2);
      unint64_t v4 = (void *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void *std::vector<std::unique_ptr<std::once_flag>>::~vector[abi:ne180100](void *a1)
{
  uint16x8_t v2 = (void *)*a1;
  if (*a1)
  {
    uint64_t v3 = (void *)a1[1];
    unint64_t v4 = (void *)*a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v6 = *--v3;
        uint64_t v5 = v6;
        *uint64_t v3 = 0;
        if (v6) {
          MEMORY[0x23ECF2BC0](v5, 0x1000C4000313F17);
        }
      }
      while (v3 != v2);
      unint64_t v4 = (void *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void *std::vector<std::unique_ptr<google::protobuf::Message>>::~vector[abi:ne180100](void *a1)
{
  uint16x8_t v2 = (void *)*a1;
  if (*a1)
  {
    uint64_t v3 = (void *)a1[1];
    unint64_t v4 = (void *)*a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v6 = *--v3;
        uint64_t v5 = v6;
        *uint64_t v3 = 0;
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        }
      }
      while (v3 != v2);
      unint64_t v4 = (void *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void *std::vector<std::unique_ptr<std::string>>::~vector[abi:ne180100](void *a1)
{
  uint16x8_t v2 = (void *)*a1;
  if (*a1)
  {
    uint64_t v3 = (void *)a1[1];
    unint64_t v4 = (void *)*a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v6 = *--v3;
        uint64_t v5 = v6;
        *uint64_t v3 = 0;
        if (v6)
        {
          if (*(char *)(v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
        }
      }
      while (v3 != v2);
      unint64_t v4 = (void *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t std::unordered_map<std::string,google::protobuf::Descriptor::WellKnownType>::~unordered_map[abi:ne180100](uint64_t a1)
{
  uint16x8_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v5 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint16x8_t v2 = v5;
    }
    while (v5);
  }
  uint64_t v3 = *(void **)a1;
  *(void *)a1 = 0;
  if (v3) {
    operator delete(v3);
  }
  return a1;
}

void google::protobuf::DescriptorPool::Tables::~Tables(google::protobuf::DescriptorPool::Tables *this)
{
  if (*((void *)this + 51) != *((void *)this + 52))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v55, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 830);
    uint16x8_t v2 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v55, "CHECK failed: checkpoints_.empty(): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v54, v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v55[0].__r_.__value_.__l.__data_);
  }
  uint64_t v3 = (void *)*((void *)this + 60);
  if (v3)
  {
    *((void *)this + 61) = v3;
    operator delete(v3);
  }
  unint64_t v4 = (void *)*((void *)this + 57);
  if (v4)
  {
    *((void *)this + 58) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 54);
  if (v5)
  {
    *((void *)this + 55) = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)*((void *)this + 51);
  if (v6)
  {
    *((void *)this + 52) = v6;
    operator delete(v6);
  }
  std::__tree<std::__value_type<unsigned long,void *>,std::__map_value_compare<unsigned long,std::__value_type<unsigned long,void *>,std::less<unsigned long>,true>,std::allocator<std::__value_type<unsigned long,void *>>>::destroy((uint64_t)this + 384, *((void **)this + 49));
  uint8x8_t v7 = (void *)*((void *)this + 45);
  if (v7)
  {
    do
    {
      uint64_t v8 = (void *)*v7;
      operator delete(v7);
      uint8x8_t v7 = v8;
    }
    while (v8);
  }
  size_t v9 = (void *)*((void *)this + 43);
  *((void *)this + 43) = 0;
  if (v9) {
    operator delete(v9);
  }
  unint64_t v10 = (void *)*((void *)this + 40);
  if (v10)
  {
    do
    {
      int8x8_t v11 = (void *)*v10;
      operator delete(v10);
      unint64_t v10 = v11;
    }
    while (v11);
  }
  unint64_t v12 = (void *)*((void *)this + 38);
  *((void *)this + 38) = 0;
  if (v12) {
    operator delete(v12);
  }
  uint8x8_t v13 = (void *)*((void *)this + 35);
  if (v13)
  {
    uint64_t v14 = (void *)*((void *)this + 36);
    size_t v15 = (void *)*((void *)this + 35);
    if (v14 != v13)
    {
      do
      {
        int8x8_t v17 = (std::mutex *)*--v14;
        unint64_t v16 = v17;
        void *v14 = 0;
        if (v17)
        {
          google::protobuf::FileDescriptorTables::~FileDescriptorTables(v16);
          MEMORY[0x23ECF2BC0]();
        }
      }
      while (v14 != v13);
      size_t v15 = (void *)*((void *)this + 35);
    }
    *((void *)this + 36) = v13;
    operator delete(v15);
  }
  unint64_t v18 = (void *)*((void *)this + 32);
  if (v18)
  {
    uint8x8_t v19 = (void *)*((void *)this + 33);
    uint64_t v20 = (void *)*((void *)this + 32);
    if (v19 != v18)
    {
      do
      {
        uint64_t v22 = *--v19;
        uint64_t v21 = v22;
        *uint8x8_t v19 = 0;
        if (v22) {
          MEMORY[0x23ECF2BC0](v21, 0x1000C4000313F17);
        }
      }
      while (v19 != v18);
      uint64_t v20 = (void *)*((void *)this + 32);
    }
    *((void *)this + 33) = v18;
    operator delete(v20);
  }
  int8x8_t v23 = (void *)*((void *)this + 29);
  if (v23)
  {
    unint64_t v24 = (void *)*((void *)this + 30);
    uint8x8_t v25 = (void *)*((void *)this + 29);
    if (v24 != v23)
    {
      do
      {
        uint64_t v27 = *--v24;
        uint64_t v26 = v27;
        *unint64_t v24 = 0;
        if (v27) {
          (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
        }
      }
      while (v24 != v23);
      uint8x8_t v25 = (void *)*((void *)this + 29);
    }
    *((void *)this + 30) = v23;
    operator delete(v25);
  }
  unint64_t v28 = (void *)*((void *)this + 26);
  if (v28)
  {
    uint64_t v29 = (void *)*((void *)this + 27);
    uint64_t v30 = (void *)*((void *)this + 26);
    if (v29 != v28)
    {
      do
      {
        uint64_t v32 = *--v29;
        uint64_t v31 = v32;
        *uint64_t v29 = 0;
        if (v32)
        {
          if (*(char *)(v31 + 23) < 0) {
            operator delete(*(void **)v31);
          }
          MEMORY[0x23ECF2BC0](v31, 0x1012C40EC159624);
        }
      }
      while (v29 != v28);
      uint64_t v30 = (void *)*((void *)this + 26);
    }
    *((void *)this + 27) = v28;
    operator delete(v30);
  }
  uint64_t v33 = *((void *)this + 23);
  if (v33)
  {
    uint64_t v34 = *((void *)this + 24);
    uint64_t v35 = (void *)*((void *)this + 23);
    if (v34 != v33)
    {
      uint64_t v36 = *((void *)this + 24);
      do
      {
        long long v38 = *(void **)(v36 - 24);
        v36 -= 24;
        unsigned int v37 = v38;
        if (v38)
        {
          *(void *)(v34 - 16) = v37;
          operator delete(v37);
        }
        uint64_t v34 = v36;
      }
      while (v36 != v33);
      uint64_t v35 = (void *)*((void *)this + 23);
    }
    *((void *)this + 24) = v33;
    operator delete(v35);
  }
  int v39 = (void **)*((void *)this + 20);
  if (v39)
  {
    do
    {
      int v51 = (void **)*v39;
      if (*((char *)v39 + 39) < 0) {
        operator delete(v39[2]);
      }
      operator delete(v39);
      int v39 = v51;
    }
    while (v51);
  }
  std::string v40 = (void *)*((void *)this + 18);
  *((void *)this + 18) = 0;
  if (v40) {
    operator delete(v40);
  }
  long long v41 = (void *)*((void *)this + 15);
  if (v41)
  {
    do
    {
      int v42 = (void *)*v41;
      operator delete(v41);
      long long v41 = v42;
    }
    while (v42);
  }
  uint64_t v43 = (void *)*((void *)this + 13);
  *((void *)this + 13) = 0;
  if (v43) {
    operator delete(v43);
  }
  long long v44 = (void **)*((void *)this + 10);
  if (v44)
  {
    do
    {
      BOOL v52 = (void **)*v44;
      if (*((char *)v44 + 39) < 0) {
        operator delete(v44[2]);
      }
      operator delete(v44);
      long long v44 = v52;
    }
    while (v52);
  }
  int v45 = (void *)*((void *)this + 8);
  *((void *)this + 8) = 0;
  if (v45) {
    operator delete(v45);
  }
  std::string::size_type v46 = (void **)*((void *)this + 5);
  if (v46)
  {
    do
    {
      long long v53 = (void **)*v46;
      if (*((char *)v46 + 39) < 0) {
        operator delete(v46[2]);
      }
      operator delete(v46);
      std::string::size_type v46 = v53;
    }
    while (v53);
  }
  long long v47 = (void *)*((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v47) {
    operator delete(v47);
  }
  uint64_t v48 = *(void *)this;
  if (*(void *)this)
  {
    uint64_t v49 = *((void *)this + 1);
    long long v50 = *(void **)this;
    if (v49 != v48)
    {
      do
      {
        if (*(char *)(v49 - 1) < 0) {
          operator delete(*(void **)(v49 - 24));
        }
        v49 -= 24;
      }
      while (v49 != v48);
      long long v50 = *(void **)this;
    }
    *((void *)this + 1) = v48;
    operator delete(v50);
  }
}

void google::protobuf::FileDescriptorTables::FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 1065353216;
  operator new();
}

void sub_23CDC160C(_Unwind_Exception *a1)
{
  uint64_t v8 = (void *)v1[31];
  if (v8)
  {
    do
    {
      size_t v9 = (void *)*v8;
      operator delete(v8);
      uint64_t v8 = v9;
    }
    while (v9);
  }
  unint64_t v10 = *v6;
  void *v6 = 0;
  if (v10) {
    operator delete(v10);
  }
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v5);
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v4);
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v3);
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v2);
  std::__hash_table<unsigned long long,std::hash<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table((uint64_t)v1);
  _Unwind_Resume(a1);
}

uint64_t *std::unique_ptr<std::unordered_map<std::pair<void const*,char const*>,google::protobuf::FieldDescriptor const*,google::protobuf::anonymous namespace'::PointerStringPairHash,google::protobuf::anonymous namespace'::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const*,char const*> const,google::protobuf::FieldDescriptor const*>>>>::~unique_ptr[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v4 = (void *)*v3;
        operator delete(v3);
        uint64_t v3 = v4;
      }
      while (v4);
    }
    uint64_t v5 = *(void **)v2;
    *(void *)uint64_t v2 = 0;
    if (v5) {
      operator delete(v5);
    }
    MEMORY[0x23ECF2BC0](v2, 0x10A0C408EF24B1CLL);
  }
  return a1;
}

void google::protobuf::FileDescriptorTables::~FileDescriptorTables(std::mutex *this)
{
  std::mutex::~mutex(this + 5);
  uint64_t v2 = *(void ***)&this[4].__m_.__opaque[32];
  if (v2)
  {
    do
    {
      uint64_t v30 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v30;
    }
    while (v30);
  }
  uint64_t v3 = *(void **)&this[4].__m_.__opaque[16];
  *(void *)&this[4].__m_.__opaque[16] = 0;
  if (v3) {
    operator delete(v3);
  }
  uint64_t v4 = *(void **)&this[3].__m_.__opaque[48];
  if (v4)
  {
    do
    {
      uint64_t v5 = (void *)*v4;
      operator delete(v4);
      uint64_t v4 = v5;
    }
    while (v5);
  }
  uint64_t v6 = *(void **)&this[3].__m_.__opaque[32];
  *(void *)&this[3].__m_.__opaque[32] = 0;
  if (v6) {
    operator delete(v6);
  }
  uint8x8_t v7 = *(void **)&this[3].__m_.__opaque[8];
  if (v7)
  {
    do
    {
      uint64_t v8 = (void *)*v7;
      operator delete(v7);
      uint8x8_t v7 = v8;
    }
    while (v8);
  }
  sig = (void *)this[3].__m_.__sig;
  this[3].__m_.__sig = 0;
  if (sig) {
    operator delete(sig);
  }
  unint64_t v10 = *(void **)&this[2].__m_.__opaque[32];
  if (v10)
  {
    do
    {
      int8x8_t v11 = (void *)*v10;
      operator delete(v10);
      unint64_t v10 = v11;
    }
    while (v11);
  }
  unint64_t v12 = *(void **)&this[2].__m_.__opaque[16];
  *(void *)&this[2].__m_.__opaque[16] = 0;
  if (v12) {
    operator delete(v12);
  }
  uint64_t v13 = *(void *)this[2].__m_.__opaque;
  *(void *)this[2].__m_.__opaque = 0;
  if (v13)
  {
    uint64_t v14 = *(void **)(v13 + 16);
    if (v14)
    {
      do
      {
        size_t v15 = (void *)*v14;
        operator delete(v14);
        uint64_t v14 = v15;
      }
      while (v15);
    }
    unint64_t v16 = *(void **)v13;
    *(void *)uint64_t v13 = 0;
    if (v16) {
      operator delete(v16);
    }
    MEMORY[0x23ECF2BC0](v13, 0x10A0C408EF24B1CLL);
  }
  int8x8_t v17 = *(void **)&this[1].__m_.__opaque[40];
  if (v17)
  {
    do
    {
      unint64_t v18 = (void *)*v17;
      operator delete(v17);
      int8x8_t v17 = v18;
    }
    while (v18);
  }
  uint8x8_t v19 = *(void **)&this[1].__m_.__opaque[24];
  *(void *)&this[1].__m_.__opaque[24] = 0;
  if (v19) {
    operator delete(v19);
  }
  uint64_t v20 = *(void *)&this[1].__m_.__opaque[8];
  *(void *)&this[1].__m_.__opaque[8] = 0;
  if (v20)
  {
    uint64_t v21 = *(void **)(v20 + 16);
    if (v21)
    {
      do
      {
        uint64_t v22 = (void *)*v21;
        operator delete(v21);
        uint64_t v21 = v22;
      }
      while (v22);
    }
    int8x8_t v23 = *(void **)v20;
    *(void *)uint64_t v20 = 0;
    if (v23) {
      operator delete(v23);
    }
    MEMORY[0x23ECF2BC0](v20, 0x10A0C408EF24B1CLL);
  }
  unint64_t v24 = *(void **)&this->__m_.__opaque[48];
  if (v24)
  {
    do
    {
      uint8x8_t v25 = (void *)*v24;
      operator delete(v24);
      unint64_t v24 = v25;
    }
    while (v25);
  }
  uint64_t v26 = *(void **)&this->__m_.__opaque[32];
  *(void *)&this->__m_.__opaque[32] = 0;
  if (v26) {
    operator delete(v26);
  }
  uint64_t v27 = *(void **)&this->__m_.__opaque[8];
  if (v27)
  {
    do
    {
      unint64_t v28 = (void *)*v27;
      operator delete(v27);
      uint64_t v27 = v28;
    }
    while (v28);
  }
  uint64_t v29 = (void *)this->__m_.__sig;
  this->__m_.__sig = 0;
  if (v29) {
    operator delete(v29);
  }
}

void google::protobuf::DescriptorPool::Tables::AddCheckpoint(google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v2 = (*((void *)this + 27) - *((void *)this + 26)) >> 3;
  uint64_t v3 = (*((void *)this + 30) - *((void *)this + 29)) >> 3;
  uint64_t v4 = (*((void *)this + 33) - *((void *)this + 32)) >> 3;
  uint64_t v5 = (*((void *)this + 36) - *((void *)this + 35)) >> 3;
  int v6 = -1431655765 * ((*((void *)this + 24) - *((void *)this + 23)) >> 3);
  uint64_t v7 = (*((void *)this + 55) - *((void *)this + 54)) >> 3;
  uint64_t v8 = (*((void *)this + 58) - *((void *)this + 57)) >> 3;
  uint64_t v9 = (*((void *)this + 61) - *((void *)this + 60)) >> 4;
  int8x8_t v11 = (char *)*((void *)this + 52);
  unint64_t v10 = *((void *)this + 53);
  if ((unint64_t)v11 >= v10)
  {
    uint64_t v13 = (char **)((char *)this + 408);
    uint64_t v14 = (char *)*((void *)this + 51);
    uint64_t v15 = (v11 - v14) >> 5;
    unint64_t v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) >> 59) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v17 = v10 - (void)v14;
    if (v17 >> 4 > v16) {
      unint64_t v16 = v17 >> 4;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v18 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v16;
    }
    if (v18)
    {
      uint64_t v22 = (char **)((char *)this + 408);
      uint64_t v23 = (*((void *)this + 33) - *((void *)this + 32)) >> 3;
      uint64_t v24 = (*((void *)this + 30) - *((void *)this + 29)) >> 3;
      uint64_t v25 = (*((void *)this + 27) - *((void *)this + 26)) >> 3;
      if (v18 >> 59) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint8x8_t v19 = (char *)operator new(32 * v18);
      LODWORD(v3) = v24;
      LODWORD(v2) = v25;
      uint64_t v13 = v22;
      LODWORD(v4) = v23;
    }
    else
    {
      uint8x8_t v19 = 0;
    }
    uint64_t v20 = &v19[32 * v15];
    *(_DWORD *)uint64_t v20 = v2;
    *((_DWORD *)v20 + 1) = v3;
    *((_DWORD *)v20 + 2) = v4;
    *((_DWORD *)v20 + 3) = v5;
    *((_DWORD *)v20 + 4) = v6;
    *((_DWORD *)v20 + 5) = v7;
    unint64_t v12 = v20 + 32;
    *((_DWORD *)v20 + 6) = v8;
    *((_DWORD *)v20 + 7) = v9;
    if (v11 != v14)
    {
      do
      {
        long long v21 = *((_OWORD *)v11 - 1);
        *((_OWORD *)v20 - 2) = *((_OWORD *)v11 - 2);
        *((_OWORD *)v20 - 1) = v21;
        v20 -= 32;
        v11 -= 32;
      }
      while (v11 != v14);
      int8x8_t v11 = *v13;
    }
    *((void *)this + 51) = v20;
    *((void *)this + 52) = v12;
    *((void *)this + 53) = &v19[32 * v18];
    if (v11) {
      operator delete(v11);
    }
  }
  else
  {
    *(_DWORD *)int8x8_t v11 = v2;
    *((_DWORD *)v11 + 1) = v3;
    *((_DWORD *)v11 + 2) = v4;
    *((_DWORD *)v11 + 3) = v5;
    *((_DWORD *)v11 + 4) = v6;
    *((_DWORD *)v11 + 5) = v7;
    unint64_t v12 = v11 + 32;
    *((_DWORD *)v11 + 6) = v8;
    *((_DWORD *)v11 + 7) = v9;
  }
  *((void *)this + 52) = v12;
}

void google::protobuf::DescriptorPool::Tables::ClearLastCheckpoint(google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v2 = *((void *)this + 51);
  uint64_t v3 = *((void *)this + 52);
  if (v2 != v3)
  {
    uint64_t v4 = v3 - 32;
    *((void *)this + 52) = v4;
    if (v2 != v4) {
      return;
    }
LABEL_5:
    *((void *)this + 55) = *((void *)this + 54);
    *((void *)this + 58) = *((void *)this + 57);
    *((void *)this + 61) = *((void *)this + 60);
    return;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 857);
  uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: !checkpoints_.empty(): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  uint64_t v6 = *((void *)this + 51);
  uint64_t v7 = *((void *)this + 52) - 32;
  *((void *)this + 52) = v7;
  if (v6 == v7) {
    goto LABEL_5;
  }
}

void sub_23CDC1C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC1C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint(google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v2 = *((void *)this + 52);
  if (*((void *)this + 51) == v2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 869);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: !checkpoints_.empty(): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v63, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 52);
    unint64_t v3 = *(int *)(v2 - 12);
    uint64_t v4 = *((void *)this + 54);
    if (v3 >= (*((void *)this + 55) - v4) >> 3) {
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v3 = *(int *)(v2 - 12);
    uint64_t v4 = *((void *)this + 54);
    if (v3 >= (*((void *)this + 55) - v4) >> 3) {
      goto LABEL_10;
    }
  }
  uint64_t v6 = 8 * v3;
  do
  {
    uint64_t v7 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>((void *)this + 38, (const char **)(v4 + v6));
    if (v7)
    {
      std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::remove((void *)this + 38, v7, (uint64_t)__p);
      char v8 = (void *)__p[0].__r_.__value_.__r.__words[0];
      __p[0].__r_.__value_.__r.__words[0] = 0;
      if (v8) {
        operator delete(v8);
      }
    }
    ++v3;
    uint64_t v4 = *((void *)this + 54);
    v6 += 8;
  }
  while (v3 < (*((void *)this + 55) - v4) >> 3);
LABEL_10:
  unint64_t v9 = *(int *)(v2 - 8);
  uint64_t v10 = *((void *)this + 57);
  if (v9 < (*((void *)this + 58) - v10) >> 3)
  {
    uint64_t v11 = 8 * v9;
    do
    {
      unint64_t v12 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>((void *)this + 43, (const char **)(v10 + v11));
      if (v12)
      {
        std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::remove((void *)this + 43, v12, (uint64_t)__p);
        uint64_t v13 = (void *)__p[0].__r_.__value_.__r.__words[0];
        __p[0].__r_.__value_.__r.__words[0] = 0;
        if (v13) {
          operator delete(v13);
        }
      }
      ++v9;
      uint64_t v10 = *((void *)this + 57);
      v11 += 8;
    }
    while (v9 < (*((void *)this + 58) - v10) >> 3);
  }
  unint64_t v14 = *(int *)(v2 - 4);
  uint64_t v15 = *((void *)this + 60);
  if (v14 < (*((void *)this + 61) - v15) >> 4)
  {
    uint64_t v16 = 16 * v14;
    do
    {
      std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t **)this + 48, (unint64_t *)(v15 + v16));
      ++v14;
      uint64_t v15 = *((void *)this + 60);
      v16 += 16;
    }
    while (v14 < (*((void *)this + 61) - v15) >> 4);
  }
  unint64_t v17 = *(int *)(v2 - 12);
  uint64_t v18 = *((void *)this + 54);
  unint64_t v19 = (*((void *)this + 55) - v18) >> 3;
  if (v17 <= v19)
  {
    if (v17 < v19) {
      *((void *)this + 55) = v18 + 8 * v17;
    }
  }
  else
  {
    std::vector<std::pair<gtl::IntType<operations_research::sat::GenericLiteralWatcher::IdType_tag_,int>,int>>::__append((void **)this + 54, v17 - v19);
  }
  unint64_t v20 = *(int *)(v2 - 8);
  uint64_t v21 = *((void *)this + 57);
  unint64_t v22 = (*((void *)this + 58) - v21) >> 3;
  if (v20 <= v22)
  {
    if (v20 < v22) {
      *((void *)this + 58) = v21 + 8 * v20;
    }
  }
  else
  {
    std::vector<std::pair<gtl::IntType<operations_research::sat::GenericLiteralWatcher::IdType_tag_,int>,int>>::__append((void **)this + 57, v20 - v22);
  }
  unint64_t v23 = *(int *)(v2 - 4);
  uint64_t v24 = *((void *)this + 60);
  unint64_t v25 = (*((void *)this + 61) - v24) >> 4;
  if (v23 <= v25)
  {
    if (v23 < v25) {
      *((void *)this + 61) = v24 + 16 * v23;
    }
  }
  else
  {
    std::vector<std::pair<int *,int>>::__append((uint64_t *)this + 60, v23 - v25);
  }
  uint64_t v26 = *((void *)this + 26);
  uint64_t v27 = (void *)*((void *)this + 27);
  unint64_t v28 = *(int *)(v2 - 32);
  unint64_t v29 = ((uint64_t)v27 - v26) >> 3;
  if (v28 <= v29)
  {
    if (v28 < v29)
    {
      uint64_t v30 = (void *)(v26 + 8 * v28);
      while (v27 != v30)
      {
        uint64_t v32 = *--v27;
        uint64_t v31 = v32;
        *uint64_t v27 = 0;
        if (v32)
        {
          if (*(char *)(v31 + 23) < 0) {
            operator delete(*(void **)v31);
          }
          MEMORY[0x23ECF2BC0](v31, 0x1012C40EC159624);
        }
      }
      *((void *)this + 27) = v30;
    }
  }
  else
  {
    std::vector<std::unique_ptr<std::string>>::__append((void **)this + 26, v28 - v29);
  }
  uint64_t v33 = *((void *)this + 29);
  uint64_t v34 = (void *)*((void *)this + 30);
  unint64_t v35 = *(int *)(v2 - 28);
  unint64_t v36 = ((uint64_t)v34 - v33) >> 3;
  unint64_t v37 = v35 - v36;
  if (v35 <= v36)
  {
    if (v35 < v36)
    {
      long long v38 = (void *)(v33 + 8 * v35);
      while (v34 != v38)
      {
        uint64_t v40 = *--v34;
        uint64_t v39 = v40;
        *uint64_t v34 = 0;
        if (v40) {
          (*(void (**)(uint64_t, unint64_t))(*(void *)v39 + 8))(v39, v37);
        }
      }
      *((void *)this + 30) = v38;
    }
  }
  else
  {
    std::vector<std::unique_ptr<google::protobuf::Message>>::__append((void **)this + 29, v37);
  }
  unint64_t v41 = *(int *)(v2 - 24);
  uint64_t v42 = *((void *)this + 32);
  uint64_t v43 = (void *)*((void *)this + 33);
  unint64_t v44 = ((uint64_t)v43 - v42) >> 3;
  if (v41 <= v44)
  {
    if (v41 < v44)
    {
      int v45 = (void *)(v42 + 8 * v41);
      while (v43 != v45)
      {
        uint64_t v47 = *--v43;
        uint64_t v46 = v47;
        *uint64_t v43 = 0;
        if (v47) {
          MEMORY[0x23ECF2BC0](v46, 0x1000C4000313F17);
        }
      }
      *((void *)this + 33) = v45;
    }
  }
  else
  {
    std::vector<std::unique_ptr<std::once_flag>>::__append((void **)this + 32, v41 - v44);
  }
  unint64_t v48 = *(int *)(v2 - 20);
  uint64_t v49 = *((void *)this + 35);
  long long v50 = (void *)*((void *)this + 36);
  unint64_t v51 = ((uint64_t)v50 - v49) >> 3;
  if (v48 <= v51)
  {
    if (v48 < v51)
    {
      BOOL v52 = (void *)(v49 + 8 * v48);
      while (v50 != v52)
      {
        char v54 = (std::mutex *)*--v50;
        long long v53 = v54;
        void *v50 = 0;
        if (v54)
        {
          google::protobuf::FileDescriptorTables::~FileDescriptorTables(v53);
          MEMORY[0x23ECF2BC0]();
        }
      }
      *((void *)this + 36) = v52;
    }
  }
  else
  {
    std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__append((void **)this + 35, v48 - v51);
  }
  uint64_t v56 = *((void *)this + 23);
  uint64_t v55 = *((void *)this + 24);
  unint64_t v57 = *(int *)(v2 - 16);
  unint64_t v58 = 0xAAAAAAAAAAAAAAABLL * ((v55 - v56) >> 3);
  if (v57 <= v58)
  {
    if (v57 < v58)
    {
      uint64_t v59 = v56 + 24 * (int)v57;
      if (v55 != v59)
      {
        uint64_t v60 = *((void *)this + 24);
        do
        {
          unint64_t v62 = *(void **)(v60 - 24);
          v60 -= 24;
          uint64_t v61 = v62;
          if (v62)
          {
            *(void *)(v55 - 16) = v61;
            operator delete(v61);
          }
          uint64_t v55 = v60;
        }
        while (v60 != v59);
      }
      *((void *)this + 24) = v59;
    }
  }
  else
  {
    std::vector<std::vector<gtl::IntType<operations_research::glop::ColIndex_tag_,int>>>::__append((uint64_t)this + 184, v57 - v58);
  }
  *((void *)this + 52) -= 32;
}

void sub_23CDC20FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC2110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unint64_t google::protobuf::DescriptorPool::Tables::FindByNameHelper(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(std::mutex **)a2;
  if (!*(void *)a2) {
    goto LABEL_7;
  }
  std::mutex::lock(*(std::mutex **)a2);
  if (!a1[11] && !a1[6])
  {
    unint64_t v25 = *(char *)(a3 + 23) >= 0 ? (const char *)a3 : *(const char **)a3;
    uint64_t v27 = v25;
    uint64_t v26 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(a1 + 38, &v27);
    if (v26)
    {
      unint64_t v17 = v26[3];
      if (v17)
      {
        unint64_t v16 = (unint64_t)v17 >> 32;
        goto LABEL_44;
      }
    }
  }
  std::mutex::unlock(v6);
  uint64_t v6 = *(std::mutex **)a2;
  if (*(void *)a2)
  {
    std::mutex::lock(*(std::mutex **)a2);
    char v7 = 0;
    if (!*(void *)(a2 + 8)) {
      goto LABEL_20;
    }
  }
  else
  {
LABEL_7:
    char v7 = 1;
    if (!*(void *)(a2 + 8)) {
      goto LABEL_20;
    }
  }
  if (a1[11])
  {
    char v8 = (void **)a1[10];
    if (v8)
    {
      do
      {
        unint64_t v19 = (void **)*v8;
        if (*((char *)v8 + 39) < 0) {
          operator delete(v8[2]);
        }
        operator delete(v8);
        char v8 = v19;
      }
      while (v19);
    }
    a1[10] = 0;
    uint64_t v9 = a1[9];
    if (v9)
    {
      for (uint64_t i = 0; i != v9; ++i)
        *(void *)(a1[8] + 8 * i) = 0;
    }
    a1[11] = 0;
  }
  if (a1[6])
  {
    uint64_t v11 = (void **)a1[5];
    if (v11)
    {
      do
      {
        unint64_t v20 = (void **)*v11;
        if (*((char *)v11 + 39) < 0) {
          operator delete(v11[2]);
        }
        operator delete(v11);
        uint64_t v11 = v20;
      }
      while (v20);
    }
    a1[5] = 0;
    uint64_t v12 = a1[4];
    if (v12)
    {
      for (uint64_t j = 0; j != v12; ++j)
        *(void *)(a1[3] + 8 * j) = 0;
    }
    a1[6] = 0;
  }
LABEL_20:
  if (*(char *)(a3 + 23) >= 0) {
    unint64_t v14 = (const char *)a3;
  }
  else {
    unint64_t v14 = *(const char **)a3;
  }
  uint64_t v27 = v14;
  uint64_t v15 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(a1 + 38, &v27);
  if (v15)
  {
    LODWORD(v17) = *((_DWORD *)v15 + 6);
    unint64_t v16 = *((unsigned int *)v15 + 7);
    if (v17) {
      goto LABEL_43;
    }
    uint64_t v18 = *(void *)(a2 + 24);
    if (!v18) {
      goto LABEL_35;
    }
LABEL_34:
    unint64_t v21 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(void *)(v18 + 32), v18, a3);
    unint64_t v16 = HIDWORD(v21);
    LODWORD(v17) = v21;
    if (v21) {
      goto LABEL_43;
    }
    goto LABEL_35;
  }
  unint64_t v16 = 0;
  uint64_t v18 = *(void *)(a2 + 24);
  if (v18) {
    goto LABEL_34;
  }
LABEL_35:
  if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((google::protobuf::DescriptorPool *)a2, a3))
  {
    if (*(char *)(a3 + 23) >= 0) {
      unint64_t v22 = (const char *)a3;
    }
    else {
      unint64_t v22 = *(const char **)a3;
    }
    uint64_t v27 = v22;
    unint64_t v23 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(a1 + 38, &v27);
    if (v23)
    {
      unint64_t v17 = v23[3];
      unint64_t v16 = (unint64_t)v17 >> 32;
      if (v7) {
        return v17 | (v16 << 32);
      }
    }
    else
    {
      LODWORD(v17) = 0;
      unint64_t v16 = 0;
      if (v7) {
        return v17 | (v16 << 32);
      }
    }
    goto LABEL_44;
  }
  LODWORD(v17) = 0;
LABEL_43:
  if ((v7 & 1) == 0) {
LABEL_44:
  }
    std::mutex::unlock(v6);
  return v17 | (v16 << 32);
}

void sub_23CDC2398(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(google::protobuf::DescriptorPool *a1, uint64_t a2)
{
  if (!*((void *)a1 + 1)
    || std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((void *)(*((void *)a1 + 4) + 64), a2))
  {
    return 0;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v9, 0);
  if ((google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType((uint64_t)a1, a2) & 1) != 0
    || !(*(unsigned int (**)(void, uint64_t, unsigned char *))(**((void **)a1 + 1) + 24))(*((void *)a1 + 1), a2, v9)|| ((uint64_t v5 = (void *)(*((void *)a1 + 4) + 344), *(char *)(v10 + 23) >= 0)? (v6 = (const char *)v10): (v6 = *(const char **)v10), (v11 = v6, (v7 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v5, &v11)) != 0)&& v7[3]|| !google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v9)))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((void *)a1 + 4) + 64, a2, a2);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v9);
  return v8;
}

void sub_23CDC24E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitStatic(uint64_t this, const google::protobuf::FileDescriptorTables *a2)
{
  uint64_t v2 = *(void **)(this + 168);
  if (v2)
  {
    uint64_t v3 = this + 40;
    do
    {
      uint64_t v4 = v2[4];
      if (*(unsigned char *)(v4 + 67))
      {
        uint64_t v5 = *(void *)(v4 + 96);
        if (v5)
        {
          uint64_t v6 = *(void *)(v4 + 16);
          if (*(char *)(v6 + 23) < 0) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(v4 + 40);
          uint64_t v6 = *(void *)(v4 + 16);
          if (*(char *)(v6 + 23) < 0) {
LABEL_11:
          }
            uint64_t v6 = *(void *)v6;
        }
      }
      else
      {
        uint64_t v5 = *(void *)(v4 + 80);
        uint64_t v6 = *(void *)(v4 + 16);
        if (*(char *)(v6 + 23) < 0) {
          goto LABEL_11;
        }
      }
      v7[0] = v5;
      v7[1] = v6;
      uint64_t v2 = (void *)*v2;
    }
    while (v2);
  }
  return this;
}

uint64_t google::protobuf::InsertIfNotPresent<std::unordered_map<std::pair<void const*,char const*>,google::protobuf::FieldDescriptor const*,google::protobuf::anonymous namespace'::PointerStringPairHash,google::protobuf::anonymous namespace'::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const*,char const*> const,google::protobuf::FieldDescriptor const*>>>>(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = *a2;
  uint64_t v6 = (const char *)a2[1];
  char v8 = *v6;
  if (*v6)
  {
    uint64_t v9 = 0;
    uint64_t v10 = (unsigned __int8 *)(v6 + 1);
    do
    {
      uint64_t v9 = 5 * v9 + v8;
      int v11 = *v10++;
      char v8 = v11;
    }
    while (v11);
    unint64_t v12 = v9 ^ (16777619 * v7);
    unint64_t v13 = *(void *)(a1 + 8);
    if (!v13) {
      goto LABEL_29;
    }
  }
  else
  {
    unint64_t v12 = 16777619 * v7;
    unint64_t v13 = *(void *)(a1 + 8);
    if (!v13) {
      goto LABEL_29;
    }
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v3 = v12;
    if (v12 >= v13) {
      unint64_t v3 = v12 % v13;
    }
  }
  else
  {
    unint64_t v3 = (v13 - 1) & v12;
  }
  uint64_t v15 = *(uint64_t ****)(*(void *)a1 + 8 * v3);
  if (v15)
  {
    unint64_t v16 = *v15;
    if (*v15)
    {
      if (v14.u32[0] < 2uLL)
      {
        while (1)
        {
          unint64_t v19 = v16[1];
          if (v19 == (uint64_t *)v12)
          {
            if (v16[2] == (uint64_t *)v7)
            {
              uint64_t result = strcmp((const char *)v16[3], v6);
              if (!result) {
                return result;
              }
            }
          }
          else if (((unint64_t)v19 & (v13 - 1)) != v3)
          {
            goto LABEL_29;
          }
          unint64_t v16 = (uint64_t **)*v16;
          if (!v16) {
            goto LABEL_29;
          }
        }
      }
      do
      {
        unint64_t v17 = (unint64_t)v16[1];
        if (v17 == v12)
        {
          if (v16[2] == (uint64_t *)v7)
          {
            uint64_t result = strcmp((const char *)v16[3], v6);
            if (!result) {
              return result;
            }
          }
        }
        else
        {
          if (v17 >= v13) {
            v17 %= v13;
          }
          if (v17 != v3) {
            break;
          }
        }
        unint64_t v16 = (uint64_t **)*v16;
      }
      while (v16);
    }
  }
LABEL_29:
  unint64_t v20 = operator new(0x28uLL);
  void *v20 = 0;
  v20[1] = v12;
  std::string v20[2] = v7;
  v20[3] = v6;
  v20[4] = a3;
  float v21 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v22 = *(float *)(a1 + 32);
  if (v13 && (float)(v22 * (float)v13) >= v21) {
    goto LABEL_41;
  }
  BOOL v23 = 1;
  if (v13 >= 3) {
    BOOL v23 = (v13 & (v13 - 1)) != 0;
  }
  unint64_t v24 = v23 | (2 * v13);
  unint64_t v25 = vcvtps_u32_f32(v21 / v22);
  if (v24 <= v25) {
    size_t v26 = v25;
  }
  else {
    size_t v26 = v24;
  }
  unint64_t v13 = *(void *)(a1 + 8);
  unint64_t v27 = v13 - 1;
  if ((v13 & (v13 - 1)) != 0)
  {
    if (v12 >= v13)
    {
      unint64_t v3 = v12 % v13;
      uint64_t v28 = *(void *)a1;
      unint64_t v29 = *(void **)(*(void *)a1 + 8 * (v12 % v13));
      if (!v29) {
        goto LABEL_44;
      }
LABEL_42:
      void *v20 = *v29;
LABEL_50:
      *unint64_t v29 = v20;
      goto LABEL_51;
    }
    unint64_t v3 = v12;
LABEL_41:
    uint64_t v28 = *(void *)a1;
    unint64_t v29 = *(void **)(*(void *)a1 + 8 * v3);
    if (!v29) {
      goto LABEL_44;
    }
    goto LABEL_42;
  }
  unint64_t v3 = v27 & v12;
  uint64_t v28 = *(void *)a1;
  unint64_t v29 = *(void **)(*(void *)a1 + 8 * (v27 & v12));
  if (v29) {
    goto LABEL_42;
  }
LABEL_44:
  void *v20 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v20;
  *(void *)(v28 + 8 * v3) = a1 + 16;
  if (*v20)
  {
    unint64_t v30 = *(void *)(*v20 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v30 >= v13) {
        v30 %= v13;
      }
    }
    else
    {
      v30 &= v13 - 1;
    }
    unint64_t v29 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_50;
  }
LABEL_51:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_23CDC285C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddSymbol(void *a1, const char *a2, const char *a3, const char *a4)
{
  uint64_t v6 = (uint64_t)(a1 + 38);
  if (a2[23] >= 0) {
    uint64_t v7 = a2;
  }
  else {
    uint64_t v7 = *(const char **)a2;
  }
  v33[0] = v7;
  v33[1] = a3;
  v33[2] = a4;
  std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,google::protobuf::Symbol> const&>(v6, v33, (uint64_t)v33);
  char v9 = v8;
  if (v8)
  {
    if (a2[23] >= 0) {
      uint64_t v10 = a2;
    }
    else {
      uint64_t v10 = *(const char **)a2;
    }
    unint64_t v12 = (char *)a1[55];
    unint64_t v11 = a1[56];
    if ((unint64_t)v12 < v11)
    {
      *(void *)unint64_t v12 = v10;
      uint64_t v13 = (uint64_t)(v12 + 8);
LABEL_30:
      a1[55] = v13;
      return v9 & 1;
    }
    uint8x8_t v14 = (char *)a1[54];
    uint64_t v15 = (v12 - v14) >> 3;
    unint64_t v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) >> 61) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v17 = v11 - (void)v14;
    if (v17 >> 2 > v16) {
      unint64_t v16 = v17 >> 2;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v18 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v16;
    }
    if (v18)
    {
      if (v18 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      unint64_t v19 = (char *)operator new(8 * v18);
      unint64_t v20 = &v19[8 * v15];
      float v21 = &v19[8 * v18];
      *(void *)unint64_t v20 = v10;
      uint64_t v13 = (uint64_t)(v20 + 8);
      float v22 = (char *)(v12 - v14);
      if (v12 == v14) {
        goto LABEL_28;
      }
    }
    else
    {
      unint64_t v19 = 0;
      unint64_t v20 = (char *)(8 * v15);
      float v21 = 0;
      *(void *)(8 * v15) = v10;
      uint64_t v13 = 8 * v15 + 8;
      float v22 = (char *)(v12 - v14);
      if (v12 == v14)
      {
LABEL_28:
        a1[54] = v20;
        a1[55] = v13;
        a1[56] = v21;
        if (v12) {
          operator delete(v12);
        }
        goto LABEL_30;
      }
    }
    unint64_t v23 = (unint64_t)(v22 - 8);
    if (v23 < 0x58) {
      goto LABEL_36;
    }
    if ((unint64_t)(v14 - v19) < 0x20) {
      goto LABEL_36;
    }
    uint64_t v24 = (v23 >> 3) + 1;
    uint64_t v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
    size_t v26 = &v12[-v25];
    v20 -= v25;
    unint64_t v27 = &v19[8 * v15 - 16];
    uint64_t v28 = v12 - 16;
    uint64_t v29 = v24 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v30 = *(_OWORD *)v28;
      *((_OWORD *)v27 - 1) = *((_OWORD *)v28 - 1);
      *(_OWORD *)unint64_t v27 = v30;
      v27 -= 32;
      v28 -= 32;
      v29 -= 4;
    }
    while (v29);
    unint64_t v12 = v26;
    if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_36:
      do
      {
        uint64_t v31 = *((void *)v12 - 1);
        v12 -= 8;
        *((void *)v20 - 1) = v31;
        v20 -= 8;
      }
      while (v12 != v14);
    }
    unint64_t v12 = (char *)a1[54];
    goto LABEL_28;
  }
  return v9 & 1;
}

uint64_t google::protobuf::FileDescriptorTables::AddAliasUnderParent(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v10 = (const char *)a3;
  }
  else {
    uint64_t v10 = *(const char **)a3;
  }
  char v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = 0;
    uint64_t v13 = (unsigned __int8 *)(v10 + 1);
    do
    {
      uint64_t v12 = 5 * v12 + v11;
      int v14 = *v13++;
      char v11 = v14;
    }
    while (v14);
    unint64_t v15 = v12 ^ (16777619 * (void)a2);
    unint64_t v16 = *(void *)(a1 + 8);
    if (!v16) {
      goto LABEL_32;
    }
  }
  else
  {
    unint64_t v15 = 16777619 * (void)a2;
    unint64_t v16 = *(void *)(a1 + 8);
    if (!v16) {
      goto LABEL_32;
    }
  }
  uint8x8_t v17 = (uint8x8_t)vcnt_s8((int8x8_t)v16);
  v17.i16[0] = vaddlv_u8(v17);
  if (v17.u32[0] > 1uLL)
  {
    unint64_t v5 = v15;
    if (v15 >= v16) {
      unint64_t v5 = v15 % v16;
    }
  }
  else
  {
    unint64_t v5 = (v16 - 1) & v15;
  }
  unint64_t v18 = *(uint64_t ****)(*(void *)a1 + 8 * v5);
  if (v18)
  {
    unint64_t v19 = *v18;
    if (*v18)
    {
      if (v17.u32[0] < 2uLL)
      {
        while (1)
        {
          float v22 = v19[1];
          if (v22 == (uint64_t *)v15)
          {
            if (v19[2] == a2)
            {
              uint64_t result = strcmp((const char *)v19[3], v10);
              if (!result) {
                return result;
              }
            }
          }
          else if (((unint64_t)v22 & (v16 - 1)) != v5)
          {
            goto LABEL_32;
          }
          unint64_t v19 = (uint64_t **)*v19;
          if (!v19) {
            goto LABEL_32;
          }
        }
      }
      do
      {
        unint64_t v20 = (unint64_t)v19[1];
        if (v20 == v15)
        {
          if (v19[2] == a2)
          {
            uint64_t result = strcmp((const char *)v19[3], v10);
            if (!result) {
              return result;
            }
          }
        }
        else
        {
          if (v20 >= v16) {
            v20 %= v16;
          }
          if (v20 != v5) {
            break;
          }
        }
        unint64_t v19 = (uint64_t **)*v19;
      }
      while (v19);
    }
  }
LABEL_32:
  unint64_t v23 = operator new(0x30uLL);
  *unint64_t v23 = 0;
  v23[1] = v15;
  std::string v23[2] = a2;
  v23[3] = v10;
  v23[4] = a4;
  v23[5] = a5;
  float v24 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v25 = *(float *)(a1 + 32);
  if (v16 && (float)(v25 * (float)v16) >= v24) {
    goto LABEL_44;
  }
  BOOL v26 = 1;
  if (v16 >= 3) {
    BOOL v26 = (v16 & (v16 - 1)) != 0;
  }
  unint64_t v27 = v26 | (2 * v16);
  unint64_t v28 = vcvtps_u32_f32(v24 / v25);
  if (v27 <= v28) {
    size_t v29 = v28;
  }
  else {
    size_t v29 = v27;
  }
  unint64_t v16 = *(void *)(a1 + 8);
  unint64_t v30 = v16 - 1;
  if ((v16 & (v16 - 1)) != 0)
  {
    if (v15 >= v16)
    {
      unint64_t v5 = v15 % v16;
      uint64_t v31 = *(void *)a1;
      uint64_t v32 = *(void **)(*(void *)a1 + 8 * (v15 % v16));
      if (!v32) {
        goto LABEL_47;
      }
LABEL_45:
      *unint64_t v23 = *v32;
LABEL_53:
      *uint64_t v32 = v23;
      goto LABEL_54;
    }
    unint64_t v5 = v15;
LABEL_44:
    uint64_t v31 = *(void *)a1;
    uint64_t v32 = *(void **)(*(void *)a1 + 8 * v5);
    if (!v32) {
      goto LABEL_47;
    }
    goto LABEL_45;
  }
  unint64_t v5 = v30 & v15;
  uint64_t v31 = *(void *)a1;
  uint64_t v32 = *(void **)(*(void *)a1 + 8 * (v30 & v15));
  if (v32) {
    goto LABEL_45;
  }
LABEL_47:
  *unint64_t v23 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v23;
  *(void *)(v31 + 8 * v5) = a1 + 16;
  if (*v23)
  {
    unint64_t v33 = *(void *)(*v23 + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v33 >= v16) {
        v33 %= v16;
      }
    }
    else
    {
      v33 &= v16 - 1;
    }
    uint64_t v32 = (void *)(*(void *)a1 + 8 * v33);
    goto LABEL_53;
  }
LABEL_54:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_23CDC2D10(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddFile(void *a1, void **a2)
{
  uint64_t v4 = (uint64_t)(a1 + 43);
  if ((*((char *)*a2 + 23) & 0x80000000) == 0)
  {
    *(void *)&long long v31 = *a2;
    *((void *)&v31 + 1) = a2;
    std::__hash_table<std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,google::protobuf::FileDescriptor const*> const&>(v4, (const char **)&v31, &v31);
    char v6 = v5;
    if ((v5 & 1) == 0) {
      return v6 & 1;
    }
LABEL_5:
    char v8 = *a2;
    if (*((char *)*a2 + 23) < 0)
    {
      char v8 = (void *)*v8;
      uint64_t v10 = (char *)a1[58];
      unint64_t v9 = a1[59];
      if ((unint64_t)v10 < v9) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v10 = (char *)a1[58];
      unint64_t v9 = a1[59];
      if ((unint64_t)v10 < v9)
      {
LABEL_7:
        *(void *)uint64_t v10 = v8;
        uint64_t v11 = (uint64_t)(v10 + 8);
LABEL_29:
        a1[58] = v11;
        return v6 & 1;
      }
    }
    uint64_t v12 = (char *)a1[57];
    uint64_t v13 = (v10 - v12) >> 3;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 61) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v15 = v9 - (void)v12;
    if (v15 >> 2 > v14) {
      unint64_t v14 = v15 >> 2;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      if (v16 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint8x8_t v17 = (char *)operator new(8 * v16);
      unint64_t v18 = &v17[8 * v13];
      unint64_t v19 = &v17[8 * v16];
      *(void *)unint64_t v18 = v8;
      uint64_t v11 = (uint64_t)(v18 + 8);
      unint64_t v20 = (char *)(v10 - v12);
      if (v10 == v12) {
        goto LABEL_27;
      }
    }
    else
    {
      uint8x8_t v17 = 0;
      unint64_t v18 = (char *)(8 * v13);
      unint64_t v19 = 0;
      *(void *)(8 * v13) = v8;
      uint64_t v11 = 8 * v13 + 8;
      unint64_t v20 = (char *)(v10 - v12);
      if (v10 == v12)
      {
LABEL_27:
        a1[57] = v18;
        a1[58] = v11;
        a1[59] = v19;
        if (v10) {
          operator delete(v10);
        }
        goto LABEL_29;
      }
    }
    unint64_t v21 = (unint64_t)(v20 - 8);
    if (v21 < 0x58) {
      goto LABEL_35;
    }
    if ((unint64_t)(v12 - v17) < 0x20) {
      goto LABEL_35;
    }
    uint64_t v22 = (v21 >> 3) + 1;
    uint64_t v23 = 8 * (v22 & 0x3FFFFFFFFFFFFFFCLL);
    float v24 = &v10[-v23];
    v18 -= v23;
    float v25 = &v17[8 * v13 - 16];
    BOOL v26 = v10 - 16;
    uint64_t v27 = v22 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v28 = *(_OWORD *)v26;
      *((_OWORD *)v25 - 1) = *((_OWORD *)v26 - 1);
      *(_OWORD *)float v25 = v28;
      v25 -= 32;
      v26 -= 32;
      v27 -= 4;
    }
    while (v27);
    uint64_t v10 = v24;
    if (v22 != (v22 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_35:
      do
      {
        uint64_t v29 = *((void *)v10 - 1);
        v10 -= 8;
        *((void *)v18 - 1) = v29;
        v18 -= 8;
      }
      while (v10 != v12);
    }
    uint64_t v10 = (char *)a1[57];
    goto LABEL_27;
  }
  *(void *)&long long v31 = **a2;
  *((void *)&v31 + 1) = a2;
  std::__hash_table<std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,google::protobuf::FileDescriptor const*> const&>(v4, (const char **)&v31, &v31);
  char v6 = v7;
  if (v7) {
    goto LABEL_5;
  }
  return v6 & 1;
}

uint64_t google::protobuf::FileDescriptorTables::FinalizeTables(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 80);
  *(void *)(this + 80) = 0;
  if (v2)
  {
    unint64_t v3 = *(void **)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v4 = (void *)*v3;
        operator delete(v3);
        unint64_t v3 = v4;
      }
      while (v4);
    }
    char v5 = *(void **)v2;
    *(void *)uint64_t v2 = 0;
    if (v5) {
      operator delete(v5);
    }
    this = MEMORY[0x23ECF2BC0](v2, 0x10A0C408EF24B1CLL);
  }
  uint64_t v6 = *(void *)(v1 + 136);
  *(void *)(v1 + 136) = 0;
  if (v6)
  {
    char v7 = *(void **)(v6 + 16);
    if (v7)
    {
      do
      {
        char v8 = (void *)*v7;
        operator delete(v7);
        char v7 = v8;
      }
      while (v8);
    }
    unint64_t v9 = *(void **)v6;
    *(void *)uint64_t v6 = 0;
    if (v9) {
      operator delete(v9);
    }
    JUMPOUT(0x23ECF2BC0);
  }
  return this;
}

uint64_t google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(google::protobuf::FileDescriptorTables *this, const google::protobuf::FieldDescriptor *a2)
{
  if (!*((unsigned char *)a2 + 67))
  {
    uint64_t v4 = (uint64_t *)*((void *)a2 + 10);
    char v5 = (char *)*((void *)a2 + 2);
    if (v5[23] < 0) {
      goto LABEL_11;
    }
LABEL_4:
    uint64_t v12 = v4;
    uint64_t v13 = v5;
    goto LABEL_12;
  }
  uint64_t v4 = (uint64_t *)*((void *)a2 + 12);
  if (!v4)
  {
    uint64_t v4 = (uint64_t *)*((void *)a2 + 5);
    char v5 = (char *)*((void *)a2 + 2);
    if (v5[23] < 0) {
      goto LABEL_11;
    }
    goto LABEL_4;
  }
  char v5 = (char *)*((void *)a2 + 2);
  if ((v5[23] & 0x80000000) == 0) {
    goto LABEL_4;
  }
LABEL_11:
  char v5 = *(char **)v5;
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  {
LABEL_5:
    uint64_t v6 = (char *)*((void *)a2 + 3);
    if ((v6[23] & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v6 = (char *)*((void *)a2 + 3);
  if ((v6[23] & 0x80000000) == 0)
  {
LABEL_6:
    uint64_t v10 = v4;
    uint64_t v11 = v6;
    if (result) {
      return result;
    }
LABEL_14:
  }
LABEL_13:
  uint64_t v6 = *(char **)v6;
  uint64_t v10 = v4;
  uint64_t v11 = v6;
  if ((result & 1) == 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t *google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<void const*,char const*>,google::protobuf::FieldDescriptor const*,google::protobuf::anonymous namespace'::PointerStringPairHash,google::protobuf::anonymous namespace'::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const*,char const*> const,google::protobuf::FieldDescriptor const*>>>>(uint64_t a1, unint64_t a2, uint64_t *a3, char *__s2)
{
  char v7 = *__s2;
  if (*__s2)
  {
    uint64_t v8 = 0;
    unint64_t v9 = __s2 + 1;
    do
    {
      uint64_t v8 = 5 * v8 + v7;
      int v10 = *v9++;
      char v7 = v10;
    }
    while (v10);
    if (!a2) {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (!a2) {
      return 0;
    }
  }
  unint64_t v11 = v8 ^ (16777619 * (void)a3);
  uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    uint64_t v13 = v8 ^ (16777619 * (void)a3);
    if (v11 >= a2) {
      uint64_t v13 = v11 % a2;
    }
  }
  else
  {
    uint64_t v13 = v11 & (a2 - 1);
  }
  unint64_t v14 = *(uint64_t ****)(a1 + 8 * v13);
  if (v14)
  {
    uint64_t v15 = *v14;
    if (*v14)
    {
      if (v12.u32[0] < 2uLL)
      {
        unint64_t v16 = a2 - 1;
        while (1)
        {
          unint64_t v18 = v15[1];
          if (v18 == (uint64_t *)v11)
          {
            if (v15[2] == a3 && !strcmp((const char *)v15[3], __s2)) {
              return v15[4];
            }
          }
          else if (((unint64_t)v18 & v16) != v13)
          {
            return 0;
          }
          uint64_t v15 = (uint64_t **)*v15;
          if (!v15) {
            return 0;
          }
        }
      }
      do
      {
        unint64_t v17 = (unint64_t)v15[1];
        if (v17 == v11)
        {
          if (v15[2] == a3 && !strcmp((const char *)v15[3], __s2)) {
            return v15[4];
          }
        }
        else
        {
          if (v17 >= a2) {
            v17 %= a2;
          }
          if (v17 != v13) {
            return 0;
          }
        }
        uint64_t v15 = (uint64_t **)*v15;
      }
      while (v15);
    }
  }
  return 0;
}

uint64_t google::protobuf::FileDescriptorTables::AddFieldByNumber(google::protobuf::FileDescriptorTables *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v5 = *((void *)a2 + 10);
  int v6 = *((_DWORD *)a2 + 17);
  char v7 = (uint64_t *)((char *)this + 152);
  uint64_t v8 = 16777619 * v6;
  unint64_t v9 = v8 ^ (16777499 * v5);
  unint64_t v10 = *((void *)this + 20);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      uint64_t v2 = v8 ^ (16777499 * v5);
      if (v9 >= v10) {
        uint64_t v2 = v9 % v10;
      }
    }
    else
    {
      uint64_t v2 = v9 & (v10 - 1);
    }
    uint8x8_t v12 = *(uint64_t ***)(*v7 + 8 * v2);
    if (v12)
    {
      uint64_t v13 = *v12;
      if (v13)
      {
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v16 = v13[1];
            if (v16 == v9)
            {
              if (v13[2] == v5 && *((_DWORD *)v13 + 6) == v6) {
                return 0;
              }
            }
            else if ((v16 & (v10 - 1)) != v2)
            {
              goto LABEL_31;
            }
            uint64_t v13 = (uint64_t *)*v13;
            if (!v13) {
              goto LABEL_31;
            }
          }
        }
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == v5 && *((_DWORD *)v13 + 6) == v6) {
              return 0;
            }
          }
          else
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
            if (v14 != v2) {
              break;
            }
          }
          uint64_t v13 = (uint64_t *)*v13;
        }
        while (v13);
      }
    }
  }
LABEL_31:
  unint64_t v19 = operator new(0x28uLL);
  *unint64_t v19 = 0;
  v19[1] = v9;
  v19[2] = v5;
  *((_DWORD *)v19 + 6) = v6;
  v19[4] = a2;
  float v20 = (float)(unint64_t)(*((void *)this + 22) + 1);
  float v21 = *((float *)this + 46);
  if (v10 && (float)(v21 * (float)v10) >= v20)
  {
    uint64_t v22 = *v7;
    uint64_t v23 = *(void **)(*v7 + 8 * v2);
    if (v23)
    {
LABEL_34:
      *unint64_t v19 = *v23;
LABEL_53:
      *uint64_t v23 = v19;
      goto LABEL_54;
    }
  }
  else
  {
    BOOL v24 = 1;
    if (v10 >= 3) {
      BOOL v24 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v10);
    unint64_t v26 = vcvtps_u32_f32(v20 / v21);
    if (v25 <= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v25;
    }
    unint64_t v10 = *((void *)this + 20);
    unint64_t v28 = v10 - 1;
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
      {
        uint64_t v2 = v9 % v10;
        uint64_t v22 = *v7;
        uint64_t v23 = *(void **)(*v7 + 8 * (v9 % v10));
        if (v23) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v2 = v9;
        uint64_t v22 = *v7;
        uint64_t v23 = *(void **)(*v7 + 8 * v9);
        if (v23) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      uint64_t v2 = v28 & v9;
      uint64_t v22 = *v7;
      uint64_t v23 = *(void **)(*v7 + 8 * (v28 & v9));
      if (v23) {
        goto LABEL_34;
      }
    }
  }
  *unint64_t v19 = *((void *)this + 21);
  *((void *)this + 21) = v19;
  *(void *)(v22 + 8 * v2) = (char *)this + 168;
  if (*v19)
  {
    unint64_t v29 = *(void *)(*v19 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v29 >= v10) {
        v29 %= v10;
      }
    }
    else
    {
      v29 &= v10 - 1;
    }
    uint64_t v23 = (void *)(*v7 + 8 * v29);
    goto LABEL_53;
  }
LABEL_54:
  ++*((void *)this + 22);
  return 1;
}

void sub_23CDC3570(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::InsertIfNotPresent<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  unint64_t v8 = (16777619 * (int)v7) ^ (16777499 * *a2);
  unint64_t v9 = *(void *)(a1 + 8);
  uint64_t v29 = v7;
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      uint64_t v3 = (16777619 * (int)v7) ^ (16777499 * *a2);
      if (v8 >= v9) {
        uint64_t v3 = v8 % v9;
      }
    }
    else
    {
      uint64_t v3 = v8 & (v9 - 1);
    }
    uint8x8_t v11 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      uint8x8_t v12 = *v11;
      if (v12)
      {
        if (v10.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v15 = v12[1];
            if (v15 == v8)
            {
              if (v12[2] == v6 && *((_DWORD *)v12 + 6) == v7) {
                return 0;
              }
            }
            else if ((v15 & (v9 - 1)) != v3)
            {
              goto LABEL_31;
            }
            uint8x8_t v12 = (uint64_t *)*v12;
            if (!v12) {
              goto LABEL_31;
            }
          }
        }
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v8)
          {
            if (v12[2] == v6 && *((_DWORD *)v12 + 6) == v7) {
              return 0;
            }
          }
          else
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
            if (v13 != v3) {
              break;
            }
          }
          uint8x8_t v12 = (uint64_t *)*v12;
        }
        while (v12);
      }
    }
  }
LABEL_31:
  unint64_t v18 = operator new(0x28uLL);
  *unint64_t v18 = 0;
  v18[1] = v8;
  std::string v18[2] = v6;
  v18[3] = v29;
  v18[4] = a3;
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (v9 && (float)(v20 * (float)v9) >= v19)
  {
    uint64_t v21 = *(void *)a1;
    uint64_t v22 = *(void **)(*(void *)a1 + 8 * v3);
    if (v22)
    {
LABEL_34:
      *unint64_t v18 = *v22;
LABEL_53:
      *uint64_t v22 = v18;
      goto LABEL_54;
    }
  }
  else
  {
    BOOL v23 = 1;
    if (v9 >= 3) {
      BOOL v23 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v24 = v23 | (2 * v9);
    unint64_t v25 = vcvtps_u32_f32(v19 / v20);
    if (v24 <= v25) {
      size_t v26 = v25;
    }
    else {
      size_t v26 = v24;
    }
    unint64_t v9 = *(void *)(a1 + 8);
    unint64_t v27 = v9 - 1;
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
      {
        uint64_t v3 = v8 % v9;
        uint64_t v21 = *(void *)a1;
        uint64_t v22 = *(void **)(*(void *)a1 + 8 * (v8 % v9));
        if (v22) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v3 = v8;
        uint64_t v21 = *(void *)a1;
        uint64_t v22 = *(void **)(*(void *)a1 + 8 * v8);
        if (v22) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      uint64_t v3 = v27 & v8;
      uint64_t v21 = *(void *)a1;
      uint64_t v22 = *(void **)(*(void *)a1 + 8 * (v27 & v8));
      if (v22) {
        goto LABEL_34;
      }
    }
  }
  *unint64_t v18 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v18;
  *(void *)(v21 + 8 * v3) = a1 + 16;
  if (*v18)
  {
    unint64_t v28 = *(void *)(*v18 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v28 >= v9) {
        v28 %= v9;
      }
    }
    else
    {
      v28 &= v9 - 1;
    }
    uint64_t v22 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_53;
  }
LABEL_54:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_23CDC3824(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddExtension(google::protobuf::DescriptorPool::Tables *this, const google::protobuf::FieldDescriptor *a2)
{
  unint64_t v4 = *((void *)a2 + 10);
  int v5 = *((_DWORD *)a2 + 17);
  uint64_t v6 = (char *)*((void *)this + 49);
  if (v6)
  {
    while (1)
    {
      unint64_t v8 = v6;
      unint64_t v9 = *((void *)v6 + 4);
      if (v4 < v9) {
        goto LABEL_3;
      }
      if (v9 < v4) {
        goto LABEL_8;
      }
      int v10 = *((_DWORD *)v8 + 10);
      if (v5 < v10)
      {
LABEL_3:
        uint64_t v6 = *(char **)v8;
        uint64_t v7 = (uint64_t **)v8;
        if (!*(void *)v8) {
          goto LABEL_10;
        }
      }
      else
      {
        if (v10 >= v5) {
          return 0;
        }
LABEL_8:
        uint64_t v6 = (char *)*((void *)v8 + 1);
        if (!v6)
        {
          uint64_t v7 = (uint64_t **)(v8 + 8);
          goto LABEL_10;
        }
      }
    }
  }
  uint64_t v7 = (uint64_t **)((char *)this + 392);
  unint64_t v8 = (char *)this + 392;
LABEL_10:
  uint8x8_t v11 = operator new(0x38uLL);
  v11[4] = v4;
  *((_DWORD *)v11 + 10) = v5;
  v11[6] = a2;
  void *v11 = 0;
  v11[1] = 0;
  std::string v11[2] = v8;
  *uint64_t v7 = v11;
  uint64_t v12 = **((void **)this + 48);
  if (v12)
  {
    *((void *)this + 48) = v12;
    unint64_t v13 = *v7;
  }
  else
  {
    unint64_t v13 = v11;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*((uint64_t **)this + 49), v13);
  ++*((void *)this + 50);
  uint64_t v15 = (char *)*((void *)this + 61);
  unint64_t v14 = *((void *)this + 62);
  if ((unint64_t)v15 >= v14)
  {
    unint64_t v17 = (char *)*((void *)this + 60);
    uint64_t v18 = (v15 - v17) >> 4;
    unint64_t v19 = v18 + 1;
    if ((unint64_t)(v18 + 1) >> 60) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v20 = v14 - (void)v17;
    if (v20 >> 3 > v19) {
      unint64_t v19 = v20 >> 3;
    }
    if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v21 = v19;
    }
    if (v21)
    {
      if (v21 >> 60) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v22 = (char *)operator new(16 * v21);
    }
    else
    {
      uint64_t v22 = 0;
    }
    BOOL v23 = &v22[16 * v18];
    *(void *)BOOL v23 = v4;
    *((_DWORD *)v23 + 2) = v5;
    uint64_t v16 = v23 + 16;
    if (v15 != v17)
    {
      do
      {
        *((_OWORD *)v23 - 1) = *((_OWORD *)v15 - 1);
        v23 -= 16;
        v15 -= 16;
      }
      while (v15 != v17);
      uint64_t v15 = (char *)*((void *)this + 60);
    }
    *((void *)this + 60) = v23;
    *((void *)this + 61) = v16;
    *((void *)this + 62) = &v22[16 * v21];
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    *(void *)uint64_t v15 = v4;
    *((_DWORD *)v15 + 2) = v5;
    uint64_t v16 = v15 + 16;
  }
  *((void *)this + 61) = v16;
  return 1;
}

void google::protobuf::DescriptorPool::Tables::AllocateString()
{
}

void sub_23CDC3AC0(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorTables::BuildLocationsByPath(void *a1)
{
  int v1 = *(_DWORD *)(a1[1] + 24);
  if (v1 >= 1)
  {
    for (int i = 0; i != v1; ++i)
    {
      unint64_t v4 = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(a1[1] + 16, i);
      uint64_t v5 = *a1 + 280;
      google::protobuf::Join<google::protobuf::RepeatedField<int>>(v4 + 1, ",", v6, &__p);
      p_p = &__p;
      *((void *)std::__hash_table<std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v5, (uint64_t)&__p, (uint64_t)&std::piecewise_construct, (long long **)&p_p)+ 5) = v4;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
  }
}

void sub_23CDC3BBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::Join<google::protobuf::RepeatedField<int>>@<X0>(std::string *result@<X0>, const std::string::value_type *a2@<X1>, char *a3@<X2>, std::string *a4@<X8>)
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  a4->__r_.__value_.__r.__words[0] = 0;
  a4->__r_.__value_.__l.__size_ = 0;
  a4->__r_.__value_.__r.__words[2] = 0;
  uint64_t data_low = SLODWORD(result->__r_.__value_.__l.__data_);
  if (data_low)
  {
    std::string::size_type size = (unsigned int *)result->__r_.__value_.__l.__size_;
    unint64_t v8 = (google::protobuf *)*size;
    unint64_t v13 = v15;
    int64_t v14 = google::protobuf::FastInt32ToBufferLeft(v8, v15, a3) - v15;
    uint64_t result = google::protobuf::StrAppend(a4, (uint64_t)&v13);
    if (data_low != 1)
    {
      uint64_t v10 = 4 * data_low;
      uint64_t v11 = 4;
      do
      {
        if (v11) {
          std::string::append(a4, a2);
        }
        uint64_t v12 = (google::protobuf *)size[(unint64_t)v11 / 4];
        unint64_t v13 = v15;
        int64_t v14 = google::protobuf::FastInt32ToBufferLeft(v12, v15, v9) - v15;
        uint64_t result = google::protobuf::StrAppend(a4, (uint64_t)&v13);
        v11 += 4;
      }
      while (v10 != v11);
    }
  }
  return result;
}

void sub_23CDC3CD0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptorTables::GetSourceLocation(uint64_t a1, std::string *a2, char *a3)
{
  v11[0] = a1;
  v11[1] = a3;
  uint64_t v5 = (std::once_flag::_State_type *)(a1 + 272);
  uint64_t v10 = v11;
  if (atomic_load_explicit((atomic_ullong *volatile)v5, memory_order_acquire) != -1)
  {
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FileDescriptorTables::BuildLocationsByPath;
    __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v10;
    p_p = &__p;
    std::__call_once(v5, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *),std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *&&>>);
  }
  google::protobuf::Join<std::vector<int>>(a2, ",", a3, &__p);
  uint64_t v6 = std::__hash_table<std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>>>::find<std::string>((void *)(a1 + 280), (uint64_t)&__p);
  if (v6)
  {
    uint64_t v7 = v6[5];
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return v7;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return v7;
    }
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  return v7;
}

void sub_23CDC3DCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::Join<std::vector<int>>@<X0>(std::string *result@<X0>, const std::string::value_type *a2@<X1>, char *a3@<X2>, std::string *a4@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  a4->__r_.__value_.__r.__words[0] = 0;
  a4->__r_.__value_.__l.__size_ = 0;
  a4->__r_.__value_.__r.__words[2] = 0;
  uint64_t v5 = (unsigned int *)result->__r_.__value_.__r.__words[0];
  std::string::size_type size = (unsigned int *)result->__r_.__value_.__l.__size_;
  if ((unsigned int *)result->__r_.__value_.__l.__data_ != size)
  {
    unint64_t v8 = (google::protobuf *)*v5;
    uint64_t v12 = v14;
    int64_t v13 = google::protobuf::FastInt32ToBufferLeft(v8, v14, a3) - v14;
    uint64_t result = google::protobuf::StrAppend(a4, (uint64_t)&v12);
    if (v5 + 1 != size)
    {
      uint64_t v10 = 1;
      do
      {
        if (v10 * 4) {
          std::string::append(a4, a2);
        }
        uint64_t v11 = (google::protobuf *)v5[v10];
        uint64_t v12 = v14;
        int64_t v13 = google::protobuf::FastInt32ToBufferLeft(v11, v14, v9) - v14;
        uint64_t result = google::protobuf::StrAppend(a4, (uint64_t)&v12);
        ++v10;
      }
      while (&v5[v10] != size);
    }
  }
  return result;
}

void sub_23CDC3EE4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::internal_generated_pool(google::protobuf::DescriptorPool *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AED1E88, memory_order_acquire) & 1) == 0)
  {
    uint64_t v2 = (google::protobuf::_anonymous_namespace_ *)__cxa_guard_acquire(&qword_26AED1E88);
    if (v2) {
  }
    }
  return _MergedGlobals_31;
}

void sub_23CDC3F8C(_Unwind_Exception *a1)
{
}

void google::protobuf::anonymous namespace'::NewGeneratedPool(google::protobuf::_anonymous_namespace_ *this)
{
}

void sub_23CDC4068(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  MEMORY[0x23ECF2BC0](v3, 0x10A0C40292B2256);
  MEMORY[0x23ECF2BC0](v1, 0x1060C40AEB7C726);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::generated_pool(google::protobuf::DescriptorPool *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AED1E88, memory_order_acquire) & 1) == 0)
  {
    uint64_t v3 = (google::protobuf::_anonymous_namespace_ *)__cxa_guard_acquire(&qword_26AED1E88);
    if (v3) {
  }
    }
  uint64_t v1 = _MergedGlobals_31;
  google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return v1;
}

void sub_23CDC413C(_Unwind_Exception *a1)
{
}

void google::protobuf::DescriptorPool::InternalAddGeneratedFile(google::protobuf::DescriptorPool *this, const void *a2)
{
  unsigned int v2 = a2;
  if ((google::protobuf::EncodedDescriptorDatabase::Add(v4, (char *)this, v2) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 1382);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GeneratedDatabase()->Add(encoded_file_descriptor, size): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v6, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDC41D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC41E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::anonymous namespace'::GeneratedDatabase(google::protobuf::_anonymous_namespace_ *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AED1E98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26AED1E98))
  {
    operator new();
  }
  return qword_26AED1E90;
}

void sub_23CDC4298(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x10A1C40C1D13B9CLL);
  __cxa_guard_abort(&qword_26AED1E98);
  _Unwind_Resume(a1);
}

void sub_23CDC42C8(_Unwind_Exception *a1)
{
}

uint64_t google::protobuf::DescriptorPool::FindFileByName(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(std::mutex **)a1;
  if (*(void *)a1) {
    std::mutex::lock(*(std::mutex **)a1);
  }
  if (*(void *)(a1 + 8))
  {
    uint64_t v5 = *(void **)(a1 + 32);
    if (v5[11])
    {
      char v6 = (void **)v5[10];
      if (v6)
      {
        do
        {
          unint64_t v21 = (void **)*v6;
          if (*((char *)v6 + 39) < 0) {
            operator delete(v6[2]);
          }
          operator delete(v6);
          char v6 = v21;
        }
        while (v21);
      }
      v5[10] = 0;
      uint64_t v7 = v5[9];
      if (v7)
      {
        for (uint64_t i = 0; i != v7; ++i)
          *(void *)(v5[8] + 8 * i) = 0;
      }
      v5[11] = 0;
      uint64_t v5 = *(void **)(a1 + 32);
    }
    if (v5[6])
    {
      unint64_t v9 = (void **)v5[5];
      if (v9)
      {
        do
        {
          uint64_t v22 = (void **)*v9;
          if (*((char *)v9 + 39) < 0) {
            operator delete(v9[2]);
          }
          operator delete(v9);
          unint64_t v9 = v22;
        }
        while (v22);
      }
      v5[5] = 0;
      uint64_t v10 = v5[4];
      if (v10)
      {
        for (uint64_t j = 0; j != v10; ++j)
          *(void *)(v5[3] + 8 * j) = 0;
      }
      v5[6] = 0;
    }
  }
  uint64_t v12 = (void *)(*(void *)(a1 + 32) + 344);
  if (*(char *)(a2 + 23) >= 0) {
    int64_t v13 = (const char *)a2;
  }
  else {
    int64_t v13 = *(const char **)a2;
  }
  BOOL v23 = v13;
  int64_t v14 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v12, &v23);
  if (!v14 || (uint64_t FileByName = (uint64_t)v14[3]) == 0)
  {
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16 || (uint64_t FileByName = google::protobuf::DescriptorPool::FindFileByName(v16, a2)) == 0)
    {
      if (!google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase((google::protobuf::DescriptorPool *)a1, a2)|| ((v17 = (void *)(*(void *)(a1 + 32) + 344), *(char *)(a2 + 23) >= 0)? (uint64_t v18 = (const char *)a2): (uint64_t v18 = *(const char **)a2), (v23 = v18, (v19 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v17, &v23)) == 0)|| (FileByName = (uint64_t)v19[3]) == 0))
      {
        uint64_t FileByName = 0;
      }
    }
  }
  if (v4) {
    std::mutex::unlock(v4);
  }
  return FileByName;
}

void sub_23CDC4498(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(google::protobuf::DescriptorPool *a1, uint64_t a2)
{
  if (!*((void *)a1 + 1)
    || std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((void *)(*((void *)a1 + 4) + 24), a2))
  {
    return 0;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6, 0);
  if ((*(unsigned int (**)(void, uint64_t, unsigned char *))(**((void **)a1 + 1) + 16))(*((void *)a1 + 1), a2, v6)&& google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v6))
  {
    uint64_t v5 = 1;
  }
  else
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((void *)a1 + 4) + 24, a2, a2);
    uint64_t v5 = 0;
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6);
  return v5;
}

void sub_23CDC4594(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::FindMessageTypeByName(uint64_t a1, uint64_t a2)
{
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(void **)(a1 + 32), a1, a2) == 1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByNumber(std::mutex **this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  if (!*((_DWORD *)a2 + 31)) {
    return 0;
  }
  char v6 = *this;
  if (!*this) {
    goto LABEL_22;
  }
  std::mutex::lock(*this);
  uint64_t v7 = this[4];
  unint64_t v8 = *(char **)v7[6].__m_.__opaque;
  if (!v8) {
    goto LABEL_18;
  }
  opaque = v7[6].__m_.__opaque;
  uint64_t v10 = v7[6].__m_.__opaque;
  do
  {
    unint64_t v11 = *((void *)v8 + 4);
    if (v11 < (unint64_t)a2)
    {
      v8 += 8;
    }
    else if (v11 <= (unint64_t)a2)
    {
      if (*((_DWORD *)v8 + 10) < (int)a3) {
        v8 += 8;
      }
      else {
        uint64_t v10 = v8;
      }
    }
    else
    {
      uint64_t v10 = v8;
    }
    unint64_t v8 = *(char **)v8;
  }
  while (v8);
  if (v10 != opaque
    && (unint64_t v13 = *((void *)v10 + 4), v13 <= (unint64_t)a2)
    && (v13 < (unint64_t)a2 || *((_DWORD *)v10 + 10) <= (int)a3))
  {
    uint64_t ExtensionByNumber = *((void *)v10 + 6);
    std::mutex::unlock(v6);
    if (ExtensionByNumber) {
      return ExtensionByNumber;
    }
  }
  else
  {
LABEL_18:
    std::mutex::unlock(v6);
  }
  char v6 = *this;
  if (!*this)
  {
LABEL_22:
    char v14 = 1;
    if (!this[1]) {
      goto LABEL_35;
    }
LABEL_23:
    uint64_t v15 = this[4];
    if (*(void *)&v15[1].__m_.__opaque[16])
    {
      uint64_t v16 = *(void ***)&v15[1].__m_.__opaque[8];
      if (v16)
      {
        do
        {
          unint64_t v27 = (void **)*v16;
          if (*((char *)v16 + 39) < 0) {
            operator delete(v16[2]);
          }
          operator delete(v16);
          uint64_t v16 = v27;
        }
        while (v27);
      }
      *(void *)&v15[1].__m_.__opaque[8] = 0;
      uint64_t v17 = *(void *)v15[1].__m_.__opaque;
      if (v17)
      {
        for (uint64_t i = 0; i != v17; ++i)
          *(void *)(v15[1].__m_.__sig + 8 * i) = 0;
      }
      *(void *)&v15[1].__m_.__opaque[16] = 0;
      uint64_t v15 = this[4];
    }
    if (*(void *)&v15->__m_.__opaque[40])
    {
      unint64_t v19 = *(void ***)&v15->__m_.__opaque[32];
      if (v19)
      {
        do
        {
          unint64_t v28 = (void **)*v19;
          if (*((char *)v19 + 39) < 0) {
            operator delete(v19[2]);
          }
          operator delete(v19);
          unint64_t v19 = v28;
        }
        while (v28);
      }
      *(void *)&v15->__m_.__opaque[32] = 0;
      uint64_t v20 = *(void *)&v15->__m_.__opaque[24];
      if (v20)
      {
        for (uint64_t j = 0; j != v20; ++j)
          *(void *)(*(void *)&v15->__m_.__opaque[16] + 8 * j) = 0;
      }
      *(void *)&v15->__m_.__opaque[40] = 0;
    }
    goto LABEL_35;
  }
  std::mutex::lock(*this);
  char v14 = 0;
  if (this[1]) {
    goto LABEL_23;
  }
LABEL_35:
  uint64_t v22 = this[4];
  BOOL v23 = *(char **)v22[6].__m_.__opaque;
  if (!v23) {
    goto LABEL_56;
  }
  unint64_t v24 = v22[6].__m_.__opaque;
  unint64_t v25 = v22[6].__m_.__opaque;
  do
  {
    unint64_t v26 = *((void *)v23 + 4);
    if (v26 < (unint64_t)a2)
    {
      v23 += 8;
    }
    else if (v26 <= (unint64_t)a2)
    {
      if (*((_DWORD *)v23 + 10) < (int)a3) {
        v23 += 8;
      }
      else {
        unint64_t v25 = v23;
      }
    }
    else
    {
      unint64_t v25 = v23;
    }
    BOOL v23 = *(char **)v23;
  }
  while (v23);
  if (v25 == v24
    || (unint64_t v29 = *((void *)v25 + 4), v29 > (unint64_t)a2)
    || v29 >= (unint64_t)a2 && *((_DWORD *)v25 + 10) > (int)a3
    || (uint64_t ExtensionByNumber = *((void *)v25 + 6)) == 0)
  {
LABEL_56:
    unint64_t v30 = (google::protobuf::DescriptorPool *)this[3];
    if (!v30 || (uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v30, a2, a3)) == 0)
    {
      if (!google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase((google::protobuf::DescriptorPool *)this, a2, a3))goto LABEL_74; {
      long long v31 = this[4];
      }
      uint64_t v32 = *(char **)v31[6].__m_.__opaque;
      if (!v32) {
        goto LABEL_74;
      }
      unint64_t v33 = v31[6].__m_.__opaque;
      uint64_t v34 = v31[6].__m_.__opaque;
      do
      {
        unint64_t v35 = *((void *)v32 + 4);
        if (v35 < (unint64_t)a2)
        {
          v32 += 8;
        }
        else if (v35 <= (unint64_t)a2)
        {
          if (*((_DWORD *)v32 + 10) < (int)a3) {
            v32 += 8;
          }
          else {
            uint64_t v34 = v32;
          }
        }
        else
        {
          uint64_t v34 = v32;
        }
        uint64_t v32 = *(char **)v32;
      }
      while (v32);
      if (v34 == v33
        || (unint64_t v36 = *((void *)v34 + 4), v36 > (unint64_t)a2)
        || v36 >= (unint64_t)a2 && *((_DWORD *)v34 + 10) > (int)a3
        || (uint64_t ExtensionByNumber = *((void *)v34 + 6)) == 0)
      {
LABEL_74:
        uint64_t ExtensionByNumber = 0;
      }
    }
  }
  if ((v14 & 1) == 0) {
    std::mutex::unlock(v6);
  }
  return ExtensionByNumber;
}

void sub_23CDC4900(_Unwind_Exception *exception_object)
{
  if ((v2 & 1) == 0) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  if (!*((void *)this + 1)) {
    return 0;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v11, 0);
  BOOL v9 = ((*(uint64_t (**)(void, void, uint64_t, unsigned char *))(**((void **)this + 1) + 32))(*((void *)this + 1), *((void *)a2 + 1), a3, v11) & 1) != 0&& ((v6 = (void *)(*((void *)this + 4) + 344), *(char *)(v12 + 23) >= 0)? (v7 = (const char *)v12): (v7 = *(const char **)v12), (v13 = v7, (v8 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v6, &v13)) == 0)|| !v8[3])&& google::protobuf::DescriptorPool::BuildFileFromDatabase(this, (const google::protobuf::FileDescriptorProto *)v11) != 0;
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v11);
  return v9;
}

void sub_23CDC4A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(uint64_t a1, unint64_t a2, int a3)
{
  if (!*(_DWORD *)(a2 + 124)) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  unint64_t v4 = *(uint64_t **)(v3 + 392);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 392);
    char v6 = (uint64_t *)(v3 + 392);
    do
    {
      unint64_t v7 = v4[4];
      if (v7 < a2)
      {
        ++v4;
      }
      else if (v7 <= a2)
      {
        if (*((_DWORD *)v4 + 10) < a3) {
          ++v4;
        }
        else {
          char v6 = v4;
        }
      }
      else
      {
        char v6 = v4;
      }
      unint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
    if (v6 != v5)
    {
      unint64_t v8 = v6[4];
      if (v8 <= a2 && (v8 < a2 || *((_DWORD *)v6 + 10) <= a3))
      {
        uint64_t ExtensionByNumberNoLock = v6[6];
        if (ExtensionByNumberNoLock) {
          return ExtensionByNumberNoLock;
        }
      }
    }
  }
  if (*(void *)(a1 + 24)
    && (uint64_t ExtensionByNumberNoLock = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock()) != 0)
  {
    return ExtensionByNumberNoLock;
  }
  else
  {
    return 0;
  }
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByPrintableName(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(_DWORD *)(a2 + 124)) {
    return 0;
  }
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(void **)(a1 + 32), a1, a3) == 2)
  {
    uint64_t result = v6;
    if (*(unsigned char *)(v6 + 67))
    {
      if (*(void *)(v6 + 80) == a2) {
        return result;
      }
    }
  }
  if (!*(unsigned char *)(*(void *)(a2 + 32) + 72)) {
    return 0;
  }
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(void **)(a1 + 32), a1, a3) != 1
    || v8 == 0)
  {
    return 0;
  }
  uint64_t v10 = v8;
  int v11 = *(_DWORD *)(v8 + 128);
  if (v11 < 1) {
    return 0;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 152 * v11;
  while (1)
  {
    uint64_t v14 = *(void *)(v10 + 80);
    uint64_t v15 = v14 + v12;
    if (*(void *)(v14 + v12 + 80) == a2)
    {
      uint64_t v16 = *(std::once_flag::_State_type **)(v15 + 48);
      if (v16)
      {
        uint64_t v18 = v14 + v12;
        unint64_t v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
        {
          unint64_t v21 = &v19;
          uint64_t v22 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&v18;
          uint64_t v20 = &v21;
          std::__call_once(v16, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(v14 + v12 + 56) == 11 && *(_DWORD *)(v14 + v12 + 60) == 1)
      {
        uint64_t v17 = *(std::once_flag::_State_type **)(v15 + 48);
        if (v17)
        {
          unint64_t v19 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))(v14 + v12);
          if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
          {
            unint64_t v21 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
            uint64_t v22 = &v19;
            uint64_t v20 = &v21;
            std::__call_once(v17, &v20, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        uint64_t result = v14 + v12;
        if (*(void *)(v14 + v12 + 104) == v10) {
          break;
        }
      }
    }
    v12 += 152;
    if (v13 == v12) {
      return 0;
    }
  }
  return result;
}

uint64_t google::protobuf::FieldDescriptor::type(google::protobuf::FieldDescriptor *this)
{
  char v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    unint64_t v4 = this;
    uint64_t v5 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v7[0] = &v5;
      v7[1] = &v4;
      uint64_t v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((unsigned int *)this + 14);
}

uint64_t google::protobuf::FieldDescriptor::message_type(google::protobuf::FieldDescriptor *this)
{
  char v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    unint64_t v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      uint64_t v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((void *)this + 13);
}

uint64_t google::protobuf::Descriptor::FindFieldByNumber(google::protobuf::Descriptor *this, int a2)
{
  char v2 = *(int8x8_t **)(*((void *)this + 2) + 144);
  int8x8_t v3 = v2[20];
  if (!*(void *)&v3) {
    return 0;
  }
  int8x8_t v4 = v2[19];
  unint64_t v5 = (16777619 * a2) ^ (16777499 * (void)this);
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v3);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    uint64_t v7 = (16777619 * a2) ^ (16777499 * (void)this);
    if (v5 >= *(void *)&v3) {
      uint64_t v7 = v5 % *(void *)&v3;
    }
  }
  else
  {
    uint64_t v7 = (*(void *)&v3 - 1) & v5;
  }
  uint64_t v8 = *(uint64_t ***)(*(void *)&v4 + 8 * v7);
  if (!v8) {
    return 0;
  }
  BOOL v9 = *v8;
  if (!v9) {
    return 0;
  }
  if (v6.u32[0] < 2uLL)
  {
    uint64_t v10 = *(void *)&v3 - 1;
    while (1)
    {
      uint64_t v14 = v9[1];
      if (v5 == v14)
      {
        if ((google::protobuf::Descriptor *)v9[2] == this && *((_DWORD *)v9 + 6) == a2) {
          goto LABEL_28;
        }
      }
      else if ((v14 & v10) != v7)
      {
        return 0;
      }
      BOOL v9 = (uint64_t *)*v9;
      if (!v9) {
        return 0;
      }
    }
  }
  while (1)
  {
    unint64_t v12 = v9[1];
    if (v5 == v12) {
      break;
    }
    if (v12 >= *(void *)&v3) {
      v12 %= *(void *)&v3;
    }
    if (v12 != v7) {
      return 0;
    }
LABEL_14:
    BOOL v9 = (uint64_t *)*v9;
    if (!v9) {
      return 0;
    }
  }
  if ((google::protobuf::Descriptor *)v9[2] != this || *((_DWORD *)v9 + 6) != a2) {
    goto LABEL_14;
  }
LABEL_28:
  uint64_t v15 = v9[4];
  if (!v15) {
    return 0;
  }
  if (*(unsigned char *)(v15 + 67)) {
    return 0;
  }
  else {
    return v9[4];
  }
}

uint64_t *google::protobuf::Descriptor::FindFieldByLowercaseName(uint64_t *a1, char *a2)
{
  uint64_t v4 = *(void *)(a1[2] + 144);
  uint64_t v7 = v4;
  uint64_t v8 = google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitStatic;
  if (atomic_load_explicit((atomic_ullong *volatile)(v4 + 88), memory_order_acquire) != -1)
  {
    v10[0] = &v8;
    v10[1] = &v7;
    BOOL v9 = v10;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FileDescriptorTables const*),google::protobuf::FileDescriptorTables const*&&>>);
  }
  if (a2[23] >= 0) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = *(char **)a2;
  }
  if (result)
  {
    if (*((unsigned char *)result + 67)) {
      return 0;
    }
  }
  return result;
}

uint64_t google::protobuf::Descriptor::FindFieldByName(uint64_t *a1, uint64_t a2)
{
  if (google::protobuf::FileDescriptorTables::FindNestedSymbol(*(void **)(a1[2] + 144), a1, a2) != 2) {
    return 0;
  }
  if (*(unsigned char *)(v2 + 67)) {
    return 0;
  }
  return v2;
}

uint64_t google::protobuf::Descriptor::map_key(google::protobuf::Descriptor *this)
{
  if (!*(unsigned char *)(*((void *)this + 4) + 75)) {
    return 0;
  }
  if (*((_DWORD *)this + 26) != 2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 1725);
    uint64_t v2 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (field_count()) == (2): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *((void *)this + 5);
}

void sub_23CDC5048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC505C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Descriptor::map_value(google::protobuf::Descriptor *this)
{
  if (!*(unsigned char *)(*((void *)this + 4) + 75)) {
    return 0;
  }
  if (*((_DWORD *)this + 26) != 2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 1731);
    uint64_t v2 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (field_count()) == (2): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *((void *)this + 5) + 152;
}

void sub_23CDC5108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC511C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EnumDescriptor::FindValueByName(uint64_t *a1, uint64_t a2)
{
  if (google::protobuf::FileDescriptorTables::FindNestedSymbol(*(void **)(a1[2] + 144), a1, a2) == 5) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::EnumDescriptor::FindValueByNumber(google::protobuf::EnumDescriptor *this, int a2)
{
  uint64_t v2 = *(int8x8_t **)(*((void *)this + 2) + 144);
  int8x8_t v3 = v2[25];
  if (!*(void *)&v3) {
    return 0;
  }
  int8x8_t v4 = v2[24];
  unint64_t v5 = (16777619 * a2) ^ (16777499 * (void)this);
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v3);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    uint64_t v7 = (16777619 * a2) ^ (16777499 * (void)this);
    if (v5 >= *(void *)&v3) {
      uint64_t v7 = v5 % *(void *)&v3;
    }
  }
  else
  {
    uint64_t v7 = (*(void *)&v3 - 1) & v5;
  }
  uint64_t v8 = *(uint64_t ***)(*(void *)&v4 + 8 * v7);
  if (!v8) {
    return 0;
  }
  BOOL v9 = *v8;
  if (!v9) {
    return 0;
  }
  if (v6.u32[0] < 2uLL)
  {
    uint64_t v10 = *(void *)&v3 - 1;
    while (1)
    {
      uint64_t v14 = v9[1];
      if (v5 == v14)
      {
        if ((google::protobuf::EnumDescriptor *)v9[2] == this && *((_DWORD *)v9 + 6) == a2) {
          return v9[4];
        }
      }
      else if ((v14 & v10) != v7)
      {
        return 0;
      }
      BOOL v9 = (uint64_t *)*v9;
      if (!v9) {
        return 0;
      }
    }
  }
  while (1)
  {
    unint64_t v12 = v9[1];
    if (v5 == v12) {
      break;
    }
    if (v12 >= *(void *)&v3) {
      v12 %= *(void *)&v3;
    }
    if (v12 != v7) {
      return 0;
    }
LABEL_14:
    BOOL v9 = (uint64_t *)*v9;
    if (!v9) {
      return 0;
    }
  }
  if ((google::protobuf::EnumDescriptor *)v9[2] != this || *((_DWORD *)v9 + 6) != a2) {
    goto LABEL_14;
  }
  return v9[4];
}

uint64_t google::protobuf::EnumDescriptor::FindValueByNumberCreatingIfUnknown(google::protobuf::EnumDescriptor *this, uint64_t a2)
{
  return google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(*(std::mutex **)(*((void *)this + 2) + 144), this, a2);
}

uint64_t google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(std::mutex *this, const google::protobuf::EnumDescriptor *a2, uint64_t a3)
{
  int8x8_t v6 = *(int8x8_t *)this[3].__m_.__opaque;
  unint64_t v7 = (16777619 * (int)a3) ^ (16777499 * (void)a2);
  unint64_t v8 = v7;
  if (!*(void *)&v6) {
    goto LABEL_29;
  }
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v6);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    uint64_t v10 = (16777619 * (int)a3) ^ (16777499 * (void)a2);
    if (v7 >= *(void *)&v6) {
      uint64_t v10 = v7 % *(void *)&v6;
    }
  }
  else
  {
    uint64_t v10 = (*(void *)&v6 - 1) & v7;
  }
  int v11 = *(uint64_t ***)(this[3].__m_.__sig + 8 * v10);
  if (!v11) {
    goto LABEL_29;
  }
  unint64_t v12 = *v11;
  if (!v12) {
    goto LABEL_29;
  }
  if (v9.u32[0] < 2uLL)
  {
    uint64_t v13 = *(void *)&v6 - 1;
    while (1)
    {
      uint64_t v17 = v12[1];
      if (v7 == v17)
      {
        if ((const google::protobuf::EnumDescriptor *)v12[2] == a2 && *((_DWORD *)v12 + 6) == a3) {
          goto LABEL_28;
        }
      }
      else if ((v17 & v13) != v10)
      {
        goto LABEL_29;
      }
      unint64_t v12 = (uint64_t *)*v12;
      if (!v12) {
        goto LABEL_29;
      }
    }
  }
  while (1)
  {
    unint64_t v15 = v12[1];
    if (v7 == v15) {
      break;
    }
    if (v15 >= *(void *)&v6) {
      v15 %= *(void *)&v6;
    }
    if (v15 != v10) {
      goto LABEL_29;
    }
LABEL_14:
    unint64_t v12 = (uint64_t *)*v12;
    if (!v12) {
      goto LABEL_29;
    }
  }
  if ((const google::protobuf::EnumDescriptor *)v12[2] != a2 || *((_DWORD *)v12 + 6) != a3) {
    goto LABEL_14;
  }
LABEL_28:
  uint64_t v18 = v12[4];
  if (v18) {
    return v18;
  }
LABEL_29:
  unint64_t v19 = this + 5;
  std::mutex::lock(this + 5);
  int8x8_t v20 = *(int8x8_t *)&this[3].__m_.__opaque[40];
  if (!*(void *)&v20) {
    goto LABEL_55;
  }
  uint8x8_t v21 = (uint8x8_t)vcnt_s8(v20);
  v21.i16[0] = vaddlv_u8(v21);
  if (v21.u32[0] > 1uLL)
  {
    unint64_t v22 = v7;
    if (v7 >= *(void *)&v20) {
      unint64_t v22 = v7 % *(void *)&v20;
    }
  }
  else
  {
    unint64_t v22 = (*(void *)&v20 - 1) & v7;
  }
  BOOL v23 = *(uint64_t ***)(*(void *)&this[3].__m_.__opaque[32] + 8 * v22);
  if (!v23 || (unint64_t v24 = *v23) == 0)
  {
LABEL_55:
    std::mutex::unlock(this + 5);
    goto LABEL_56;
  }
  if (v21.u32[0] < 2uLL)
  {
    uint64_t v25 = *(void *)&v20 - 1;
    while (1)
    {
      uint64_t v29 = v24[1];
      if (v29 == v7)
      {
        if ((const google::protobuf::EnumDescriptor *)v24[2] == a2 && *((_DWORD *)v24 + 6) == a3) {
          goto LABEL_83;
        }
      }
      else if ((v29 & v25) != v22)
      {
        goto LABEL_55;
      }
      unint64_t v24 = (uint64_t *)*v24;
      if (!v24) {
        goto LABEL_55;
      }
    }
  }
  while (2)
  {
    unint64_t v27 = v24[1];
    if (v27 != v7)
    {
      if (v27 >= *(void *)&v20) {
        v27 %= *(void *)&v20;
      }
      if (v27 != v22) {
        goto LABEL_55;
      }
      goto LABEL_42;
    }
    if ((const google::protobuf::EnumDescriptor *)v24[2] != a2 || *((_DWORD *)v24 + 6) != a3)
    {
LABEL_42:
      unint64_t v24 = (uint64_t *)*v24;
      if (!v24) {
        goto LABEL_55;
      }
      continue;
    }
    break;
  }
LABEL_83:
  uint64_t v18 = v24[4];
  std::mutex::unlock(this + 5);
  if (v18) {
    return v18;
  }
LABEL_56:
  std::mutex::lock(this + 5);
  int8x8_t v30 = *(int8x8_t *)&this[3].__m_.__opaque[40];
  if (!*(void *)&v30) {
    goto LABEL_86;
  }
  uint8x8_t v31 = (uint8x8_t)vcnt_s8(v30);
  v31.i16[0] = vaddlv_u8(v31);
  if (v31.u32[0] > 1uLL)
  {
    if (v7 >= *(void *)&v30) {
      unint64_t v8 = v7 % *(void *)&v30;
    }
  }
  else
  {
    unint64_t v8 = (*(void *)&v30 - 1) & v7;
  }
  uint64_t v32 = *(uint64_t ***)(*(void *)&this[3].__m_.__opaque[32] + 8 * v8);
  if (!v32 || (unint64_t v33 = *v32) == 0)
  {
LABEL_86:
    uint64_t v39 = *(void **)a2;
    if (*(char *)(*(void *)a2 + 23) < 0) {
      uint64_t v39 = (void *)*v39;
    }
    google::protobuf::StringPrintf((google::protobuf *)"UNKNOWN_ENUM_VALUE_%s_%d", &__p, v39, a3);
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AED1E88, memory_order_acquire) & 1) == 0)
    {
      uint64_t v46 = (google::protobuf::_anonymous_namespace_ *)__cxa_guard_acquire(&qword_26AED1E88);
      if (v46) {
    }
      }
    uint64_t v40 = _MergedGlobals_31;
    google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
    uint64_t v41 = *(void *)(v40 + 32);
    LODWORD(__dst) = 40;
    uint64_t v42 = *(void **)(v41 + 192);
    if ((unint64_t)v42 >= *(void *)(v41 + 200))
    {
      unint64_t v44 = std::vector<std::vector<char>>::__emplace_back_slow_path<int &>((char **)(v41 + 184), (int *)&__dst);
    }
    else
    {
      void *v42 = 0;
      v42[1] = 0;
      v42[2] = 0;
      uint64_t v43 = operator new(0x28uLL);
      void *v42 = v43;
      v42[2] = v43 + 5;
      v43[4] = 0;
      *(_OWORD *)uint64_t v43 = 0u;
      *((_OWORD *)v43 + 1) = 0u;
      v42[1] = v43 + 5;
      unint64_t v44 = (char *)(v42 + 3);
      *(void *)(v41 + 192) = v42 + 3;
    }
    *(void *)(v41 + 192) = v44;
    operator new();
  }
  if (v31.u32[0] < 2uLL)
  {
    uint64_t v34 = *(void *)&v30 - 1;
    while (1)
    {
      uint64_t v38 = v33[1];
      if (v38 == v7)
      {
        if ((const google::protobuf::EnumDescriptor *)v33[2] == a2 && *((_DWORD *)v33 + 6) == a3) {
          goto LABEL_85;
        }
      }
      else if ((v38 & v34) != v8)
      {
        goto LABEL_86;
      }
      unint64_t v33 = (uint64_t *)*v33;
      if (!v33) {
        goto LABEL_86;
      }
    }
  }
  while (2)
  {
    unint64_t v36 = v33[1];
    if (v36 != v7)
    {
      if (v36 >= *(void *)&v30) {
        v36 %= *(void *)&v30;
      }
      if (v36 != v8) {
        goto LABEL_86;
      }
      goto LABEL_69;
    }
    if ((const google::protobuf::EnumDescriptor *)v33[2] != a2 || *((_DWORD *)v33 + 6) != a3)
    {
LABEL_69:
      unint64_t v33 = (uint64_t *)*v33;
      if (!v33) {
        goto LABEL_86;
      }
      continue;
    }
    break;
  }
LABEL_85:
  uint64_t v18 = v33[4];
  if (!v18) {
    goto LABEL_86;
  }
  std::mutex::unlock(v19);
  return v18;
}

void sub_23CDC590C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::mutex *a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if ((a25 & 0x80000000) == 0)
  {
    std::mutex::unlock(a12);
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  std::mutex::unlock(a12);
  _Unwind_Resume(a1);
}

_DWORD *google::protobuf::Descriptor::FindExtensionRangeContainingNumber(google::protobuf::Descriptor *this, int a2)
{
  uint64_t v2 = *((unsigned int *)this + 31);
  if ((int)v2 < 1) {
    return 0;
  }
  for (uint64_t result = (_DWORD *)*((void *)this + 9); *result > a2 || result[1] <= a2; result += 4)
  {
    if (!--v2) {
      return 0;
    }
  }
  return result;
}

_DWORD *google::protobuf::Descriptor::FindReservedRangeContainingNumber(google::protobuf::Descriptor *this, int a2)
{
  uint64_t v2 = *((unsigned int *)this + 33);
  if ((int)v2 < 1) {
    return 0;
  }
  for (uint64_t result = (_DWORD *)*((void *)this + 11); *result > a2 || result[1] <= a2; result += 2)
  {
    if (!--v2) {
      return 0;
    }
  }
  return result;
}

google::protobuf::FileDescriptor *google::protobuf::DescriptorPool::BuildFileFromDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::FileDescriptorProto *a2)
{
  if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((void *)(*((void *)this + 4) + 24), *((void *)a2 + 22)))
  {
    return 0;
  }
  int8x8_t v6 = (void *)*((void *)this + 4);
  unint64_t v7 = (void *)*((void *)this + 2);
  v8[0] = this;
  v8[1] = v6;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  v14[0] = 0;
  v14[1] = 0;
  std::string v8[2] = v7;
  memset(&v8[3], 0, 24);
  char v9 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = v14;
  v15[0] = 0;
  v15[1] = 0;
  std::string v14[2] = v15;
  char v19 = 0;
  char v18 = 0;
  long long v17 = 0u;
  long long v16 = 0u;
  int8x8_t v4 = google::protobuf::DescriptorBuilder::BuildFile((google::protobuf::DescriptorBuilder *)v8, (const std::string **)a2);
  google::protobuf::DescriptorBuilder::~DescriptorBuilder(v8);
  if (v4) {
    return v4;
  }
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((void *)this + 4) + 24, *((void *)a2 + 22), *((void *)a2 + 22));
  return 0;
}

void sub_23CDC5B94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::DescriptorBuilder::~DescriptorBuilder((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v18 = *(std::string *)a2;
  }
  std::string::size_type v4 = std::string::rfind(&v18, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v4 != -1)
  {
    while (1)
    {
      std::string::size_type size = HIBYTE(v18.__r_.__value_.__r.__words[2]);
      if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        int8x8_t v6 = &v18;
      }
      else
      {
        std::string::size_type size = v18.__r_.__value_.__l.__size_;
        int8x8_t v6 = (std::string *)v18.__r_.__value_.__r.__words[0];
      }
      if (size >= v4) {
        std::string::size_type v7 = v4;
      }
      else {
        std::string::size_type v7 = size;
      }
      if (v7 >= 0x7FFFFFFFFFFFFFF8) {
        std::string::__throw_length_error[abi:ne180100]();
      }
      if (v7 >= 0x17) {
        break;
      }
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v7;
      p_dst = &__dst;
      if (v7) {
        goto LABEL_26;
      }
      __dst.__r_.__value_.__s.__data_[0] = 0;
      if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_17;
      }
LABEL_27:
      operator delete(v18.__r_.__value_.__l.__data_);
LABEL_17:
      std::string v18 = __dst;
      char v9 = (void *)(*(void *)(a1 + 32) + 304);
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v10 = &v18;
      }
      else {
        uint64_t v10 = (std::string *)__dst.__r_.__value_.__r.__words[0];
      }
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v10;
      uint64_t v11 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v9, (const char **)&__dst.__r_.__value_.__l.__data_);
      if (v11 && (*((_DWORD *)v11 + 6) | 8) != 8)
      {
        uint64_t IsSubSymbolOfBuiltType = 1;
        if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
LABEL_32:
        }
          operator delete(v18.__r_.__value_.__l.__data_);
        return IsSubSymbolOfBuiltType;
      }
      std::string::size_type v4 = std::string::rfind(&v18, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v4 == -1) {
        goto LABEL_28;
      }
    }
    uint64_t v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v12 = v7 | 7;
    }
    uint64_t v13 = v12 + 1;
    p_dst = (std::string *)operator new(v12 + 1);
    __dst.__r_.__value_.__l.__size_ = v7;
    __dst.__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
LABEL_26:
    memmove(p_dst, v6, v7);
    p_dst->__r_.__value_.__s.__data_[v7] = 0;
    if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v14 = *(void *)(a1 + 24);
  if (v14)
  {
    uint64_t IsSubSymbolOfBuiltType = google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(v14, a2);
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t IsSubSymbolOfBuiltType = 0;
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_32;
    }
  }
  return IsSubSymbolOfBuiltType;
}

void sub_23CDC5D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::is_map_message_type(google::protobuf::FieldDescriptor *this)
{
  return *(unsigned __int8 *)(*(void *)(*((void *)this + 13) + 32) + 75);
}

void google::protobuf::FieldDescriptor::DefaultValueAsString(google::protobuf::FieldDescriptor *this@<X0>, char *a2@<X1>, char *a3@<X2>, std::string *a4@<X8>)
{
  int v4 = (int)a2;
  uint64_t v38 = *MEMORY[0x263EF8340];
  if (*((unsigned char *)this + 64))
  {
    std::string::size_type v7 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (!v7) {
      goto LABEL_7;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v37, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 1995);
    unint64_t v8 = google::protobuf::internal::LogMessage::operator<<(&v37, "CHECK failed: has_default_value(): ");
    char v9 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "No default value");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v34, v9);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v37.__r_.__value_.__l.__data_);
    std::string::size_type v7 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (!v7) {
      goto LABEL_7;
    }
  }
  unint64_t v35 = this;
  unint64_t v36 = google::protobuf::FieldDescriptor::TypeOnceInit;
  if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
  {
    v37.__r_.__value_.__r.__words[0] = (std::string::size_type)&v36;
    v37.__r_.__value_.__l.__size_ = (std::string::size_type)&v35;
    v34.__r_.__value_.__r.__words[0] = (std::string::size_type)&v37;
    std::__call_once(v7, &v34, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
  }
LABEL_7:
  int v10 = *((_DWORD *)this + 14);
  switch(v10)
  {
    case 1:
      google::protobuf::SimpleDtoa(*((double *)this + 18), a2, a4);
      return;
    case 2:
      google::protobuf::SimpleFtoa(*((float *)this + 36), a2, a4);
      return;
    case 3:
    case 16:
    case 18:
      uint64_t v24 = *((void *)this + 18);
      v37.__r_.__value_.__r.__words[0] = (std::string::size_type)&v37.__r_.__value_.__r.__words[2];
      uint64_t v12 = (std::string *)google::protobuf::FastInt64ToBufferLeft(v24, &v37.__r_.__value_.__s.__data_[16], a3);
      size_t v13 = (char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2];
      v37.__r_.__value_.__l.__size_ = (char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2];
      if ((unint64_t)((char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2]) > 0x7FFFFFFFFFFFFFF7) {
        std::string::__throw_length_error[abi:ne180100]();
      }
      uint64_t v14 = (const void *)v37.__r_.__value_.__r.__words[0];
      if (v13 < 0x17) {
        goto LABEL_34;
      }
      uint64_t v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17) {
        uint64_t v15 = v13 | 7;
      }
      goto LABEL_57;
    case 4:
    case 6:
      char v19 = (google::protobuf *)*((void *)this + 18);
      v37.__r_.__value_.__r.__words[0] = (std::string::size_type)&v37.__r_.__value_.__r.__words[2];
      uint64_t v12 = (std::string *)google::protobuf::FastUInt64ToBufferLeft(v19, &v37.__r_.__value_.__s.__data_[16], a3);
      size_t v13 = (char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2];
      v37.__r_.__value_.__l.__size_ = (char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2];
      if ((unint64_t)((char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2]) > 0x7FFFFFFFFFFFFFF7) {
        std::string::__throw_length_error[abi:ne180100]();
      }
      uint64_t v14 = (const void *)v37.__r_.__value_.__r.__words[0];
      if (v13 < 0x17) {
        goto LABEL_34;
      }
      uint64_t v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17) {
        uint64_t v15 = v13 | 7;
      }
      goto LABEL_57;
    case 5:
    case 15:
    case 17:
      uint64_t v11 = (google::protobuf *)*((unsigned int *)this + 36);
      v37.__r_.__value_.__r.__words[0] = (std::string::size_type)&v37.__r_.__value_.__r.__words[2];
      uint64_t v12 = (std::string *)google::protobuf::FastInt32ToBufferLeft(v11, &v37.__r_.__value_.__s.__data_[16], a3);
      size_t v13 = (char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2];
      v37.__r_.__value_.__l.__size_ = (char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2];
      if ((unint64_t)((char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2]) > 0x7FFFFFFFFFFFFFF7) {
        std::string::__throw_length_error[abi:ne180100]();
      }
      uint64_t v14 = (const void *)v37.__r_.__value_.__r.__words[0];
      if (v13 < 0x17) {
        goto LABEL_34;
      }
      uint64_t v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17) {
        uint64_t v15 = v13 | 7;
      }
      goto LABEL_57;
    case 7:
    case 13:
      std::string v18 = (google::protobuf *)*((unsigned int *)this + 36);
      v37.__r_.__value_.__r.__words[0] = (std::string::size_type)&v37.__r_.__value_.__r.__words[2];
      uint64_t v12 = (std::string *)google::protobuf::FastUInt32ToBufferLeft(v18, &v37.__r_.__value_.__s.__data_[16], a3);
      size_t v13 = (char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2];
      v37.__r_.__value_.__l.__size_ = (char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2];
      if ((unint64_t)((char *)v12 - (char *)&v37.__r_.__value_.__r.__words[2]) > 0x7FFFFFFFFFFFFFF7) {
        std::string::__throw_length_error[abi:ne180100]();
      }
      uint64_t v14 = (const void *)v37.__r_.__value_.__r.__words[0];
      if (v13 < 0x17)
      {
LABEL_34:
        *((unsigned char *)&a4->__r_.__value_.__s + 23) = v13;
        if (v12 == (std::string *)&v37.__r_.__value_.__r.__words[2]) {
          goto LABEL_59;
        }
      }
      else
      {
        uint64_t v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v13 | 7) != 0x17) {
          uint64_t v15 = v13 | 7;
        }
LABEL_57:
        uint64_t v32 = v15 + 1;
        unint64_t v33 = (std::string *)operator new(v15 + 1);
        a4->__r_.__value_.__l.__size_ = v13;
        a4->__r_.__value_.__r.__words[2] = v32 | 0x8000000000000000;
        a4->__r_.__value_.__r.__words[0] = (std::string::size_type)v33;
        a4 = v33;
      }
      memmove(a4, v14, v13);
LABEL_59:
      a4->__r_.__value_.__s.__data_[v13] = 0;
      return;
    case 8:
      if (*((unsigned char *)this + 144)) {
        uint64_t v25 = "true";
      }
      else {
        uint64_t v25 = "false";
      }
      if (*((unsigned char *)this + 144)) {
        size_t v13 = 4;
      }
      else {
        size_t v13 = 5;
      }
      *((unsigned char *)&a4->__r_.__value_.__s + 23) = v13;
      memcpy(a4, v25, v13);
      goto LABEL_59;
    case 9:
    case 12:
      if (v4)
      {
        google::protobuf::CEscape(*((void *)this + 18), a3, &v34);
        unint64_t v26 = std::string::insert(&v34, 0, "\"");
        long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
        v37.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v27;
        v26->__r_.__value_.__l.__size_ = 0;
        v26->__r_.__value_.__r.__words[2] = 0;
        v26->__r_.__value_.__r.__words[0] = 0;
        unint64_t v28 = std::string::append(&v37, "\"");
        long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
        a4->__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v29;
        v28->__r_.__value_.__l.__size_ = 0;
        v28->__r_.__value_.__r.__words[2] = 0;
        v28->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v37.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v34.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        int8x8_t v30 = (std::once_flag::_State_type *)*((void *)this + 6);
        if (v30)
        {
          unint64_t v35 = this;
          unint64_t v36 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v30, memory_order_acquire) != -1)
          {
            v37.__r_.__value_.__r.__words[0] = (std::string::size_type)&v36;
            v37.__r_.__value_.__l.__size_ = (std::string::size_type)&v35;
            v34.__r_.__value_.__r.__words[0] = (std::string::size_type)&v37;
            std::__call_once(v30, &v34, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v10 = *((_DWORD *)this + 14);
        }
        uint64_t v31 = *((void *)this + 18);
        if (v10 == 12)
        {
          google::protobuf::CEscape(v31, a3, a4);
          return;
        }
        if ((*(char *)(v31 + 23) & 0x80000000) == 0)
        {
          long long v22 = *(_OWORD *)v31;
          std::string::size_type v23 = *(void *)(v31 + 16);
          goto LABEL_31;
        }
        std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)v31, *(void *)(v31 + 8));
      }
      break;
    case 10:
    case 11:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v37, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 2033);
      long long v16 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(&v37, "Messages can't have default values!");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v34, v16);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v37.__r_.__value_.__l.__data_);
      goto LABEL_15;
    case 14:
      int8x8_t v20 = (std::once_flag::_State_type *)*((void *)this + 6);
      if (v20)
      {
        unint64_t v36 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
        if (atomic_load_explicit((atomic_ullong *volatile)v20, memory_order_acquire) != -1)
        {
          v37.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v37.__r_.__value_.__l.__size_ = (std::string::size_type)&v36;
          v34.__r_.__value_.__r.__words[0] = (std::string::size_type)&v37;
          std::__call_once(v20, &v34, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      uint8x8_t v21 = (long long *)**((void **)this + 18);
      if (*((char *)v21 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)v21, *((void *)v21 + 1));
      }
      else
      {
        long long v22 = *v21;
        std::string::size_type v23 = *((void *)v21 + 2);
LABEL_31:
        a4->__r_.__value_.__r.__words[2] = v23;
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v22;
      }
      break;
    default:
LABEL_15:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v37, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 2036);
      long long v17 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(&v37, "Can't get here: failed to get default value as string");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v34, v17);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v37.__r_.__value_.__l.__data_);
      *((unsigned char *)&a4->__r_.__value_.__s + 23) = 0;
      a4->__r_.__value_.__s.__data_[0] = 0;
      return;
  }
}

void sub_23CDC6374(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::default_value_enum(google::protobuf::FieldDescriptor *this)
{
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    int v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      unint64_t v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((void *)this + 18);
}

void google::protobuf::FileDescriptor::CopyTo(google::protobuf::FileDescriptor *this, google::protobuf::FileDescriptorProto *a2)
{
  int v4 = *(std::string **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  unint64_t v5 = (std::string **)((char *)a2 + 176);
  uint64_t v6 = *((void *)a2 + 1);
  std::string::size_type v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if (v6)
  {
    std::string::size_type v7 = *(google::protobuf::Arena **)v7;
    unint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_3:
      char v9 = std::string::operator=(v8, v4);
      uint64_t v10 = *((void *)this + 1);
      int v11 = *(char *)(v10 + 23);
      if ((v11 & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      if (!*(void *)(v10 + 8)) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else
  {
    unint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_3;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, (long long *)v4);
  uint64_t v10 = *((void *)this + 1);
  int v11 = *(char *)(v10 + 23);
  if (v11 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (!(_BYTE)v11)
  {
LABEL_12:
    if (*((_DWORD *)this + 15) != 3) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_9:
  *((_DWORD *)a2 + 4) |= 2u;
  uint64_t v12 = (std::string **)((char *)a2 + 184);
  uint64_t v13 = *((void *)a2 + 1);
  uint64_t v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
  if (v13)
  {
    uint64_t v14 = *(google::protobuf::Arena **)v14;
    uint64_t v15 = *v12;
    if (*v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v15 = *v12;
    if (*v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_11:
      char v9 = std::string::operator=(v15, (const std::string *)v10);
      goto LABEL_12;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v12, v14, (long long *)v10);
  if (*((_DWORD *)this + 15) == 3) {
LABEL_13:
  }
    google::protobuf::FileDescriptorProto::set_syntax(a2, "proto3");
LABEL_14:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v16 = 0;
    do
    {
      long long v17 = (std::once_flag::_State_type *)*((void *)this + 3);
      if (v17)
      {
        int v68 = this;
        if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
        {
          v70[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FileDescriptor::DependenciesOnceInit;
          v70[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v68;
          uint64_t v69 = v70;
          std::__call_once(v17, &v69, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>);
        }
      }
      char v9 = google::protobuf::FileDescriptorProto::add_dependency((uint64_t)a2, **(std::string ***)(*((void *)this + 9) + 8 * v16++));
    }
    while (v16 < *((int *)this + 8));
  }
  if (*((int *)this + 9) >= 1)
  {
    uint64_t v18 = 0;
    int v19 = *((_DWORD *)a2 + 36);
    do
    {
      int v20 = *(_DWORD *)(*((void *)this + 11) + 4 * v18);
      int v21 = *((_DWORD *)a2 + 37);
      if (v19 + v18 == v21)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a2 + 36, v19 + v18 + 1);
        int v21 = *((_DWORD *)a2 + 37);
      }
      if (v21 <= 0)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v70, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 353);
        long long v22 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v70, "CHECK failed: (total_size_) > (0): ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v69, v22);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v70[0].__r_.__value_.__l.__data_);
      }
      *(_DWORD *)(*((void *)a2 + 19) + 4 * (v19 + v18)) = v20;
      *((_DWORD *)a2 + 36) = v19 + v18++ + 1;
    }
    while (v18 < *((int *)this + 9));
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v23 = 0;
    int v24 = *((_DWORD *)a2 + 40);
    do
    {
      int v25 = *(_DWORD *)(*((void *)this + 12) + 4 * v23);
      int v26 = *((_DWORD *)a2 + 41);
      if (v24 + v23 == v26)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a2 + 40, v24 + v23 + 1);
        int v26 = *((_DWORD *)a2 + 41);
      }
      if (v26 <= 0)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v70, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 353);
        long long v27 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v70, "CHECK failed: (total_size_) > (0): ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v69, v27);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v70[0].__r_.__value_.__l.__data_);
      }
      *(_DWORD *)(*((void *)a2 + 21) + 4 * (v24 + v23)) = v25;
      *((_DWORD *)a2 + 40) = v24 + v23++ + 1;
    }
    while (v23 < *((int *)this + 10));
  }
  if (*((int *)this + 11) >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    while (1)
    {
      uint64_t v31 = *((void *)this + 13);
      uint64_t v32 = (int *)*((void *)a2 + 8);
      if (!v32) {
        break;
      }
      uint64_t v33 = *((int *)a2 + 14);
      int v34 = *v32;
      if ((int)v33 >= *v32)
      {
        if (v34 != *((_DWORD *)a2 + 15)) {
          goto LABEL_44;
        }
        goto LABEL_43;
      }
      *((_DWORD *)a2 + 14) = v33 + 1;
      int8x8_t v30 = *(google::protobuf::DescriptorProto **)&v32[2 * v33 + 2];
LABEL_37:
      google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v31 + v28), v30);
      ++v29;
      v28 += 144;
      if (v29 >= *((int *)this + 11)) {
        goto LABEL_45;
      }
    }
    int v34 = *((_DWORD *)a2 + 15);
LABEL_43:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v34 + 1);
    uint64_t v32 = (int *)*((void *)a2 + 8);
    int v34 = *v32;
LABEL_44:
    *uint64_t v32 = v34 + 1;
    int8x8_t v30 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                         + 6));
    uint64_t v35 = *((void *)a2 + 8);
    uint64_t v36 = *((int *)a2 + 14);
    *((_DWORD *)a2 + 14) = v36 + 1;
    *(void *)(v35 + 8 * v36 + 8) = v30;
    goto LABEL_37;
  }
LABEL_45:
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    while (1)
    {
      uint64_t v40 = *((void *)this + 14);
      uint64_t v41 = (int *)*((void *)a2 + 11);
      if (!v41) {
        break;
      }
      uint64_t v42 = *((int *)a2 + 20);
      int v43 = *v41;
      if ((int)v42 >= *v41)
      {
        if (v43 != *((_DWORD *)a2 + 21)) {
          goto LABEL_55;
        }
        goto LABEL_54;
      }
      *((_DWORD *)a2 + 20) = v42 + 1;
      uint64_t v39 = *(google::protobuf::EnumDescriptorProto **)&v41[2 * v42 + 2];
LABEL_48:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v40 + v37), v39);
      ++v38;
      v37 += 80;
      if (v38 >= *((int *)this + 12)) {
        goto LABEL_56;
      }
    }
    int v43 = *((_DWORD *)a2 + 21);
LABEL_54:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 18, v43 + 1);
    uint64_t v41 = (int *)*((void *)a2 + 11);
    int v43 = *v41;
LABEL_55:
    *uint64_t v41 = v43 + 1;
    uint64_t v39 = (google::protobuf::EnumDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::Arena **)a2 + 9));
    uint64_t v44 = *((void *)a2 + 11);
    uint64_t v45 = *((int *)a2 + 20);
    *((_DWORD *)a2 + 20) = v45 + 1;
    *(void *)(v44 + 8 * v45 + 8) = v39;
    goto LABEL_48;
  }
LABEL_56:
  if (*((int *)this + 13) >= 1)
  {
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    while (1)
    {
      uint64_t v49 = *((void *)this + 15);
      long long v50 = (int *)*((void *)a2 + 14);
      if (!v50) {
        break;
      }
      uint64_t v51 = *((int *)a2 + 26);
      int v52 = *v50;
      if ((int)v51 >= *v50)
      {
        if (v52 != *((_DWORD *)a2 + 27)) {
          goto LABEL_66;
        }
        goto LABEL_65;
      }
      *((_DWORD *)a2 + 26) = v51 + 1;
      unint64_t v48 = *(google::protobuf::ServiceDescriptorProto **)&v50[2 * v51 + 2];
LABEL_59:
      google::protobuf::ServiceDescriptor::CopyTo((google::protobuf::ServiceDescriptor *)(v49 + v46), v48);
      ++v47;
      v46 += 48;
      if (v47 >= *((int *)this + 13)) {
        goto LABEL_67;
      }
    }
    int v52 = *((_DWORD *)a2 + 27);
LABEL_65:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 24, v52 + 1);
    long long v50 = (int *)*((void *)a2 + 14);
    int v52 = *v50;
LABEL_66:
    int *v50 = v52 + 1;
    unint64_t v48 = (google::protobuf::ServiceDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*((google::protobuf::Arena **)a2 + 12));
    uint64_t v53 = *((void *)a2 + 14);
    uint64_t v54 = *((int *)a2 + 26);
    *((_DWORD *)a2 + 26) = v54 + 1;
    *(void *)(v53 + 8 * v54 + 8) = v48;
    goto LABEL_59;
  }
LABEL_67:
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    while (1)
    {
      uint64_t v58 = *((void *)this + 16);
      uint64_t v59 = (int *)*((void *)a2 + 17);
      if (!v59) {
        break;
      }
      uint64_t v60 = *((int *)a2 + 32);
      int v61 = *v59;
      if ((int)v60 >= *v59)
      {
        if (v61 != *((_DWORD *)a2 + 33)) {
          goto LABEL_77;
        }
        goto LABEL_76;
      }
      *((_DWORD *)a2 + 32) = v60 + 1;
      unint64_t v57 = *(google::protobuf::FieldDescriptorProto **)&v59[2 * v60 + 2];
LABEL_70:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v58 + v55), v57);
      ++v56;
      v55 += 152;
      if (v56 >= *((int *)this + 14)) {
        goto LABEL_78;
      }
    }
    int v61 = *((_DWORD *)a2 + 33);
LABEL_76:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 30, v61 + 1);
    uint64_t v59 = (int *)*((void *)a2 + 17);
    int v61 = *v59;
LABEL_77:
    int *v59 = v61 + 1;
    unint64_t v57 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)a2 + 15));
    uint64_t v62 = *((void *)a2 + 17);
    uint64_t v63 = *((int *)a2 + 32);
    *((_DWORD *)a2 + 32) = v63 + 1;
    *(void *)(v62 + 8 * v63 + 8) = v57;
    goto LABEL_70;
  }
LABEL_78:
  size_t v64 = (uint64_t *)*((void *)this + 17);
  if (v64 != google::protobuf::FileOptions::default_instance((google::protobuf::FileOptions *)v9))
  {
    *((_DWORD *)a2 + 4) |= 8u;
    int v65 = (google::protobuf::FileOptions *)*((void *)a2 + 25);
    if (!v65)
    {
      uint64_t v66 = *((void *)a2 + 1);
      unint64_t v67 = (google::protobuf::Arena *)(v66 & 0xFFFFFFFFFFFFFFFELL);
      if (v66) {
        unint64_t v67 = *(google::protobuf::Arena **)v67;
      }
      int v65 = (google::protobuf::FileOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v67);
      *((void *)a2 + 25) = v65;
    }
    google::protobuf::FileOptions::CopyFrom(v65, *((const google::protobuf::FileOptions **)this + 17));
  }
}

void sub_23CDC6B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC6B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC6B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC6B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorProto::set_syntax(google::protobuf::FileDescriptorProto *this, const char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__dst, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 7651);
    int v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__dst, "CHECK failed: value != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__dst[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 4) |= 4u;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    std::string::size_type v7 = (std::string *)operator new(v8 + 1);
    __dst[0].__r_.__value_.__l.__size_ = v6;
    __dst[0].__r_.__value_.__r.__words[2] = v9 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v7;
    goto LABEL_10;
  }
  *((unsigned char *)&__dst[0].__r_.__value_.__s + 23) = v5;
  std::string::size_type v7 = __dst;
  if (v5) {
LABEL_10:
  }
    memcpy(v7, __s, v6);
  v7->__r_.__value_.__s.__data_[v6] = 0;
  uint64_t v10 = *((void *)this + 1);
  int v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
  if (v10)
  {
    int v11 = *(google::protobuf::Arena **)v11;
    uint64_t v15 = (uint64_t *)*((void *)this + 24);
    uint64_t v13 = (std::string **)((char *)this + 192);
    uint64_t v12 = (std::string *)v15;
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v14 = (uint64_t *)*((void *)this + 24);
    uint64_t v13 = (std::string **)((char *)this + 192);
    uint64_t v12 = (std::string *)v14;
    if (v14 != &google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_13:
      std::string::operator=(v12, __dst);
      goto LABEL_16;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v13, v11, (long long *)__dst);
LABEL_16:
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDC6D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC6D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC6D48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::FileDescriptorProto::add_dependency(uint64_t a1, std::string *__str)
{
  uint64_t v2 = __str;
  int v4 = (atomic_ullong **)(a1 + 24);
  size_t v5 = *(int **)(a1 + 40);
  if (!v5)
  {
    int v7 = *(_DWORD *)(a1 + 36);
LABEL_8:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v7 + 1);
    size_t v5 = *(int **)(a1 + 40);
    int v7 = *v5;
    goto LABEL_9;
  }
  uint64_t v6 = *(int *)(a1 + 32);
  int v7 = *v5;
  if ((int)v6 < *v5)
  {
    *(_DWORD *)(a1 + 32) = v6 + 1;
    AlignedAndAddCleanup = *(std::string **)&v5[2 * v6 + 2];
    return std::string::operator=(AlignedAndAddCleanup, __str);
  }
  if (v7 == *(_DWORD *)(a1 + 36)) {
    goto LABEL_8;
  }
LABEL_9:
  *size_t v5 = v7 + 1;
  uint64_t v10 = *v4;
  if (!v10) {
    operator new();
  }
  if (v10[14]) {
  AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v10, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(int *)(a1 + 32);
  *(_DWORD *)(a1 + 32) = v12 + 1;
  *(void *)(v11 + 8 * v12 + 8) = AlignedAndAddCleanup;
  __str = v2;

  return std::string::operator=(AlignedAndAddCleanup, __str);
}

void google::protobuf::Descriptor::CopyTo(google::protobuf::Descriptor *this, google::protobuf::DescriptorProto *a2)
{
  int v4 = *(long long **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  size_t v5 = (std::string **)((char *)a2 + 216);
  uint64_t v6 = *((void *)a2 + 1);
  int v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) == 0)
  {
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_3;
    }
LABEL_6:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
    if (*((int *)this + 26) < 1) {
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  int v7 = *(google::protobuf::Arena **)v7;
  uint64_t v8 = *v5;
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v9 = std::string::operator=(v8, (const std::string *)v4);
  if (*((int *)this + 26) >= 1)
  {
LABEL_7:
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v13 = *((void *)this + 5);
      uint64_t v14 = (int *)*((void *)a2 + 5);
      if (!v14) {
        break;
      }
      uint64_t v15 = *((int *)a2 + 8);
      int v16 = *v14;
      if ((int)v15 >= *v14)
      {
        if (v16 != *((_DWORD *)a2 + 9)) {
          goto LABEL_16;
        }
        goto LABEL_15;
      }
      *((_DWORD *)a2 + 8) = v15 + 1;
      uint64_t v12 = *(google::protobuf::FieldDescriptorProto **)&v14[2 * v15 + 2];
LABEL_9:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v13 + v10), v12);
      ++v11;
      v10 += 152;
      if (v11 >= *((int *)this + 26)) {
        goto LABEL_17;
      }
    }
    int v16 = *((_DWORD *)a2 + 9);
LABEL_15:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v16 + 1);
    uint64_t v14 = (int *)*((void *)a2 + 5);
    int v16 = *v14;
LABEL_16:
    int *v14 = v16 + 1;
    uint64_t v12 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)a2 + 3));
    uint64_t v17 = *((void *)a2 + 5);
    uint64_t v18 = *((int *)a2 + 8);
    *((_DWORD *)a2 + 8) = v18 + 1;
    *(void *)(v17 + 8 * v18 + 8) = v12;
    goto LABEL_9;
  }
LABEL_17:
  if (*((int *)this + 27) >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v22 = *((void *)this + 6);
      uint64_t v23 = (int *)*((void *)a2 + 20);
      if (!v23) {
        break;
      }
      uint64_t v24 = *((int *)a2 + 38);
      int v25 = *v23;
      if ((int)v24 >= *v23)
      {
        if (v25 != *((_DWORD *)a2 + 39)) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }
      *((_DWORD *)a2 + 38) = v24 + 1;
      int v21 = *(google::protobuf::OneofDescriptorProto **)&v23[2 * v24 + 2];
LABEL_20:
      google::protobuf::OneofDescriptor::CopyTo((google::protobuf::OneofDescriptor *)(v22 + v19), v21);
      ++v20;
      v19 += 48;
      if (v20 >= *((int *)this + 27)) {
        goto LABEL_28;
      }
    }
    int v25 = *((_DWORD *)a2 + 39);
LABEL_26:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 36, v25 + 1);
    uint64_t v23 = (int *)*((void *)a2 + 20);
    int v25 = *v23;
LABEL_27:
    *uint64_t v23 = v25 + 1;
    int v21 = (google::protobuf::OneofDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*((google::protobuf::Arena **)a2 + 18));
    uint64_t v26 = *((void *)a2 + 20);
    uint64_t v27 = *((int *)a2 + 38);
    *((_DWORD *)a2 + 38) = v27 + 1;
    *(void *)(v26 + 8 * v27 + 8) = v21;
    goto LABEL_20;
  }
LABEL_28:
  if (*((int *)this + 29) >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    while (1)
    {
      uint64_t v31 = *((void *)this + 7);
      uint64_t v32 = (int *)*((void *)a2 + 8);
      if (!v32) {
        break;
      }
      uint64_t v33 = *((int *)a2 + 14);
      int v34 = *v32;
      if ((int)v33 >= *v32)
      {
        if (v34 != *((_DWORD *)a2 + 15)) {
          goto LABEL_38;
        }
        goto LABEL_37;
      }
      *((_DWORD *)a2 + 14) = v33 + 1;
      int8x8_t v30 = *(google::protobuf::DescriptorProto **)&v32[2 * v33 + 2];
LABEL_31:
      uint64_t v9 = (std::string *)google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v31 + v28), v30);
      ++v29;
      v28 += 144;
      if (v29 >= *((int *)this + 29)) {
        goto LABEL_39;
      }
    }
    int v34 = *((_DWORD *)a2 + 15);
LABEL_37:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v34 + 1);
    uint64_t v32 = (int *)*((void *)a2 + 8);
    int v34 = *v32;
LABEL_38:
    *uint64_t v32 = v34 + 1;
    int8x8_t v30 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                         + 6));
    uint64_t v35 = *((void *)a2 + 8);
    uint64_t v36 = *((int *)a2 + 14);
    *((_DWORD *)a2 + 14) = v36 + 1;
    *(void *)(v35 + 8 * v36 + 8) = v30;
    goto LABEL_31;
  }
LABEL_39:
  if (*((int *)this + 30) >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    while (1)
    {
      uint64_t v40 = *((void *)this + 8);
      uint64_t v41 = (int *)*((void *)a2 + 11);
      if (!v41) {
        break;
      }
      uint64_t v42 = *((int *)a2 + 20);
      int v43 = *v41;
      if ((int)v42 >= *v41)
      {
        if (v43 != *((_DWORD *)a2 + 21)) {
          goto LABEL_49;
        }
        goto LABEL_48;
      }
      *((_DWORD *)a2 + 20) = v42 + 1;
      uint64_t v39 = *(google::protobuf::EnumDescriptorProto **)&v41[2 * v42 + 2];
LABEL_42:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v40 + v37), v39);
      ++v38;
      v37 += 80;
      if (v38 >= *((int *)this + 30)) {
        goto LABEL_50;
      }
    }
    int v43 = *((_DWORD *)a2 + 21);
LABEL_48:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 18, v43 + 1);
    uint64_t v41 = (int *)*((void *)a2 + 11);
    int v43 = *v41;
LABEL_49:
    *uint64_t v41 = v43 + 1;
    uint64_t v39 = (google::protobuf::EnumDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::Arena **)a2 + 9));
    uint64_t v44 = *((void *)a2 + 11);
    uint64_t v45 = *((int *)a2 + 20);
    *((_DWORD *)a2 + 20) = v45 + 1;
    *(void *)(v44 + 8 * v45 + 8) = v39;
    goto LABEL_42;
  }
LABEL_50:
  if (*((int *)this + 31) >= 1)
  {
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    while (1)
    {
      uint64_t v49 = *((void *)this + 9);
      long long v50 = (int *)*((void *)a2 + 14);
      if (!v50) {
        break;
      }
      uint64_t v51 = *((int *)a2 + 26);
      int v52 = *v50;
      if ((int)v51 >= *v50)
      {
        if (v52 == *((_DWORD *)a2 + 27))
        {
LABEL_60:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 24, v52 + 1);
          long long v50 = (int *)*((void *)a2 + 14);
          int v52 = *v50;
        }
        int *v50 = v52 + 1;
        uint64_t v9 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*((google::protobuf::Arena **)a2 + 12));
        uint64_t v53 = v9;
        uint64_t v54 = *((void *)a2 + 14);
        uint64_t v55 = *((int *)a2 + 26);
        *((_DWORD *)a2 + 26) = v55 + 1;
        *(void *)(v54 + 8 * v55 + 8) = v9;
        goto LABEL_62;
      }
      *((_DWORD *)a2 + 26) = v51 + 1;
      uint64_t v53 = *(std::string **)&v50[2 * v51 + 2];
LABEL_62:
      uint64_t v56 = (int *)(v49 + v46);
      int v57 = *v56;
      int v58 = v53->__r_.__value_.__r.__words[2];
      LODWORD(v53->__r_.__value_.__r.__words[2]) = v58 | 2;
      int v59 = v56[1];
      LODWORD(v53->__r_.__value_.__r.__words[2]) = v58 | 6;
      LODWORD(v53[1].__r_.__value_.__r.__words[1]) = v57;
      HIDWORD(v53[1].__r_.__value_.__r.__words[1]) = v59;
      uint64_t v60 = (std::string *)*((void *)v56 + 1);
      uint64_t v9 = (std::string *)google::protobuf::ExtensionRangeOptions::default_instance((google::protobuf::ExtensionRangeOptions *)v9);
      if (v60 != v9)
      {
        int v61 = (const google::protobuf::ExtensionRangeOptions *)*((void *)v56 + 1);
        LODWORD(v53->__r_.__value_.__r.__words[2]) |= 1u;
        data = (google::protobuf::ExtensionRangeOptions *)v53[1].__r_.__value_.__l.__data_;
        if (!data)
        {
          std::string::size_type size = v53->__r_.__value_.__l.__size_;
          uint64_t v63 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
          if (size) {
            uint64_t v63 = *(google::protobuf::Arena **)v63;
          }
          data = (google::protobuf::ExtensionRangeOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v63);
          v53[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
        }
        google::protobuf::ExtensionRangeOptions::CopyFrom(data, v61);
      }
      ++v47;
      v46 += 16;
      if (v47 >= *((int *)this + 31)) {
        goto LABEL_66;
      }
    }
    int v52 = *((_DWORD *)a2 + 27);
    goto LABEL_60;
  }
LABEL_66:
  if (*((int *)this + 32) >= 1)
  {
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    while (1)
    {
      uint64_t v67 = *((void *)this + 10);
      int v68 = (int *)*((void *)a2 + 17);
      if (!v68) {
        break;
      }
      uint64_t v69 = *((int *)a2 + 32);
      int v70 = *v68;
      if ((int)v69 >= *v68)
      {
        if (v70 != *((_DWORD *)a2 + 33)) {
          goto LABEL_76;
        }
        goto LABEL_75;
      }
      *((_DWORD *)a2 + 32) = v69 + 1;
      uint64_t v66 = *(google::protobuf::FieldDescriptorProto **)&v68[2 * v69 + 2];
LABEL_69:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v67 + v64), v66);
      ++v65;
      v64 += 152;
      if (v65 >= *((int *)this + 32)) {
        goto LABEL_77;
      }
    }
    int v70 = *((_DWORD *)a2 + 33);
LABEL_75:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 30, v70 + 1);
    int v68 = (int *)*((void *)a2 + 17);
    int v70 = *v68;
LABEL_76:
    int *v68 = v70 + 1;
    uint64_t v66 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)a2 + 15));
    uint64_t v71 = *((void *)a2 + 17);
    uint64_t v72 = *((int *)a2 + 32);
    *((_DWORD *)a2 + 32) = v72 + 1;
    *(void *)(v71 + 8 * v72 + 8) = v66;
    goto LABEL_69;
  }
LABEL_77:
  if (*((int *)this + 33) >= 1)
  {
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    while (1)
    {
      unint64_t v78 = (int *)*((void *)a2 + 23);
      if (!v78) {
        break;
      }
      uint64_t v79 = *((int *)a2 + 44);
      int v80 = *v78;
      if ((int)v79 >= *v78)
      {
        if (v80 != *((_DWORD *)a2 + 45)) {
          goto LABEL_87;
        }
        goto LABEL_86;
      }
      *((_DWORD *)a2 + 44) = v79 + 1;
      uint64_t v9 = *(std::string **)&v78[2 * v79 + 2];
LABEL_80:
      uint64_t v75 = (int *)(*((void *)this + 11) + v73);
      int v76 = *v75;
      int v77 = v9->__r_.__value_.__r.__words[2];
      LODWORD(v9->__r_.__value_.__r.__words[2]) = v77 | 1;
      LODWORD(v75) = v75[1];
      LODWORD(v9->__r_.__value_.__r.__words[2]) = v77 | 3;
      LODWORD(v9[1].__r_.__value_.__l.__data_) = v76;
      HIDWORD(v9[1].__r_.__value_.__r.__words[0]) = v75;
      ++v74;
      v73 += 8;
      if (v74 >= *((int *)this + 33)) {
        goto LABEL_88;
      }
    }
    int v80 = *((_DWORD *)a2 + 45);
LABEL_86:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 42, v80 + 1);
    unint64_t v78 = (int *)*((void *)a2 + 23);
    int v80 = *v78;
LABEL_87:
    int *v78 = v80 + 1;
    uint64_t v9 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*((google::protobuf::Arena **)a2 + 21));
    uint64_t v81 = *((void *)a2 + 23);
    uint64_t v82 = *((int *)a2 + 44);
    *((_DWORD *)a2 + 44) = v82 + 1;
    *(void *)(v81 + 8 * v82 + 8) = v9;
    goto LABEL_80;
  }
LABEL_88:
  if (*((int *)this + 34) >= 1)
  {
    uint64_t v83 = 0;
    do
      uint64_t v9 = google::protobuf::DescriptorProto::add_reserved_name((uint64_t)a2, *(std::string **)(*((void *)this + 12) + 8 * v83++));
    while (v83 < *((int *)this + 34));
  }
  char v84 = (uint64_t *)*((void *)this + 4);
  if (v84 != google::protobuf::MessageOptions::default_instance((google::protobuf::MessageOptions *)v9))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    std::string::size_type v85 = (google::protobuf::MessageOptions *)*((void *)a2 + 28);
    if (!v85)
    {
      uint64_t v86 = *((void *)a2 + 1);
      std::string::size_type v87 = (google::protobuf::Arena *)(v86 & 0xFFFFFFFFFFFFFFFELL);
      if (v86) {
        std::string::size_type v87 = *(google::protobuf::Arena **)v87;
      }
      std::string::size_type v85 = (google::protobuf::MessageOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v87);
      *((void *)a2 + 28) = v85;
    }
    BOOL v88 = (const google::protobuf::MessageOptions *)*((void *)this + 4);
    google::protobuf::MessageOptions::CopyFrom(v85, v88);
  }
}

void google::protobuf::EnumDescriptor::CopyTo(google::protobuf::EnumDescriptor *this, google::protobuf::EnumDescriptorProto *a2)
{
  int v4 = *(long long **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  size_t v5 = (std::string **)((char *)a2 + 96);
  uint64_t v6 = *((void *)a2 + 1);
  int v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) == 0)
  {
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_3;
    }
LABEL_6:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
    if (*((int *)this + 11) < 1) {
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  int v7 = *(google::protobuf::Arena **)v7;
  uint64_t v8 = *v5;
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v9 = std::string::operator=(v8, (const std::string *)v4);
  if (*((int *)this + 11) >= 1)
  {
LABEL_7:
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v13 = *((void *)this + 6);
      uint64_t v14 = (int *)*((void *)a2 + 5);
      if (!v14) {
        break;
      }
      uint64_t v15 = *((int *)a2 + 8);
      int v16 = *v14;
      if ((int)v15 >= *v14)
      {
        if (v16 != *((_DWORD *)a2 + 9)) {
          goto LABEL_16;
        }
        goto LABEL_15;
      }
      *((_DWORD *)a2 + 8) = v15 + 1;
      uint64_t v12 = *(google::protobuf::EnumValueDescriptorProto **)&v14[2 * v15 + 2];
LABEL_9:
      google::protobuf::EnumValueDescriptor::CopyTo((google::protobuf::EnumValueDescriptor *)(v13 + v10), v12);
      ++v11;
      v10 += 40;
      if (v11 >= *((int *)this + 11)) {
        goto LABEL_17;
      }
    }
    int v16 = *((_DWORD *)a2 + 9);
LABEL_15:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v16 + 1);
    uint64_t v14 = (int *)*((void *)a2 + 5);
    int v16 = *v14;
LABEL_16:
    int *v14 = v16 + 1;
    uint64_t v12 = (google::protobuf::EnumValueDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(*((google::protobuf::Arena **)a2 + 3));
    uint64_t v17 = *((void *)a2 + 5);
    uint64_t v18 = *((int *)a2 + 8);
    *((_DWORD *)a2 + 8) = v18 + 1;
    *(void *)(v17 + 8 * v18 + 8) = v12;
    goto LABEL_9;
  }
LABEL_17:
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v24 = (int *)*((void *)a2 + 8);
      if (!v24) {
        break;
      }
      uint64_t v25 = *((int *)a2 + 14);
      int v26 = *v24;
      if ((int)v25 >= *v24)
      {
        if (v26 != *((_DWORD *)a2 + 15)) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }
      *((_DWORD *)a2 + 14) = v25 + 1;
      uint64_t v9 = *(std::string **)&v24[2 * v25 + 2];
LABEL_20:
      int v21 = (int *)(*((void *)this + 8) + v19);
      int v22 = *v21;
      int v23 = v9->__r_.__value_.__r.__words[2];
      LODWORD(v9->__r_.__value_.__r.__words[2]) = v23 | 1;
      LODWORD(v21) = v21[1];
      LODWORD(v9->__r_.__value_.__r.__words[2]) = v23 | 3;
      LODWORD(v9[1].__r_.__value_.__l.__data_) = v22;
      HIDWORD(v9[1].__r_.__value_.__r.__words[0]) = v21;
      ++v20;
      v19 += 8;
      if (v20 >= *((int *)this + 14)) {
        goto LABEL_28;
      }
    }
    int v26 = *((_DWORD *)a2 + 15);
LABEL_26:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v26 + 1);
    uint64_t v24 = (int *)*((void *)a2 + 8);
    int v26 = *v24;
LABEL_27:
    *uint64_t v24 = v26 + 1;
    uint64_t v9 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(*((google::protobuf::Arena **)a2 + 6));
    uint64_t v27 = *((void *)a2 + 8);
    uint64_t v28 = *((int *)a2 + 14);
    *((_DWORD *)a2 + 14) = v28 + 1;
    *(void *)(v27 + 8 * v28 + 8) = v9;
    goto LABEL_20;
  }
LABEL_28:
  if (*((int *)this + 15) >= 1)
  {
    uint64_t v29 = 0;
    do
      uint64_t v9 = google::protobuf::EnumDescriptorProto::add_reserved_name((uint64_t)a2, *(std::string **)(*((void *)this + 9) + 8 * v29++));
    while (v29 < *((int *)this + 15));
  }
  int8x8_t v30 = (uint64_t *)*((void *)this + 4);
  if (v30 != google::protobuf::EnumOptions::default_instance((google::protobuf::EnumOptions *)v9))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    uint64_t v31 = (google::protobuf::EnumOptions *)*((void *)a2 + 13);
    if (!v31)
    {
      uint64_t v32 = *((void *)a2 + 1);
      uint64_t v33 = (google::protobuf::Arena *)(v32 & 0xFFFFFFFFFFFFFFFELL);
      if (v32) {
        uint64_t v33 = *(google::protobuf::Arena **)v33;
      }
      uint64_t v31 = (google::protobuf::EnumOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v33);
      *((void *)a2 + 13) = v31;
    }
    int v34 = (const google::protobuf::EnumOptions *)*((void *)this + 4);
    google::protobuf::EnumOptions::CopyFrom(v31, v34);
  }
}

void google::protobuf::ServiceDescriptor::CopyTo(google::protobuf::ServiceDescriptor *this, google::protobuf::ServiceDescriptorProto *a2)
{
  int v4 = *(long long **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  size_t v5 = (std::string **)((char *)a2 + 48);
  uint64_t v6 = *((void *)a2 + 1);
  int v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) == 0)
  {
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_3;
    }
LABEL_6:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
    if (*((int *)this + 10) < 1) {
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  int v7 = *(google::protobuf::Arena **)v7;
  uint64_t v8 = *v5;
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v9 = std::string::operator=(v8, (const std::string *)v4);
  if (*((int *)this + 10) >= 1)
  {
LABEL_7:
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    while (1)
    {
      uint64_t v13 = *((void *)this + 4);
      uint64_t v14 = (int *)*((void *)a2 + 5);
      if (!v14) {
        break;
      }
      uint64_t v15 = *((int *)a2 + 8);
      int v16 = *v14;
      if ((int)v15 >= *v14)
      {
        if (v16 != *((_DWORD *)a2 + 9)) {
          goto LABEL_16;
        }
        goto LABEL_15;
      }
      *((_DWORD *)a2 + 8) = v15 + 1;
      uint64_t v12 = *(google::protobuf::MethodDescriptorProto **)&v14[2 * v15 + 2];
LABEL_9:
      google::protobuf::MethodDescriptor::CopyTo((google::protobuf::MethodDescriptor *)(v13 + v10), v12);
      ++v11;
      v10 += 104;
      if (v11 >= *((int *)this + 10)) {
        goto LABEL_17;
      }
    }
    int v16 = *((_DWORD *)a2 + 9);
LABEL_15:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v16 + 1);
    uint64_t v14 = (int *)*((void *)a2 + 5);
    int v16 = *v14;
LABEL_16:
    int *v14 = v16 + 1;
    uint64_t v12 = (google::protobuf::MethodDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(*((google::protobuf::Arena **)a2 + 3));
    uint64_t v17 = *((void *)a2 + 5);
    uint64_t v18 = *((int *)a2 + 8);
    *((_DWORD *)a2 + 8) = v18 + 1;
    *(void *)(v17 + 8 * v18 + 8) = v12;
    goto LABEL_9;
  }
LABEL_17:
  uint64_t v19 = (uint64_t *)*((void *)this + 3);
  if (v19 != google::protobuf::ServiceOptions::default_instance((google::protobuf::ServiceOptions *)v9))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    uint64_t v20 = (google::protobuf::ServiceOptions *)*((void *)a2 + 7);
    if (!v20)
    {
      uint64_t v21 = *((void *)a2 + 1);
      int v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
      if (v21) {
        int v22 = *(google::protobuf::Arena **)v22;
      }
      uint64_t v20 = (google::protobuf::ServiceOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v22);
      *((void *)a2 + 7) = v20;
    }
    int v23 = (const google::protobuf::ServiceOptions *)*((void *)this + 3);
    google::protobuf::ServiceOptions::CopyFrom(v20, v23);
  }
}

void google::protobuf::FieldDescriptor::CopyTo(google::protobuf::FieldDescriptor *this, google::protobuf::FieldDescriptorProto *a2)
{
  int v4 = *(std::string **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  size_t v5 = (std::string **)((char *)a2 + 24);
  uint64_t v6 = *((void *)a2 + 1);
  int v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if (v6)
  {
    int v7 = *(google::protobuf::Arena **)v7;
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_3:
      std::string::operator=(v8, v4);
      goto LABEL_6;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, (long long *)v4);
LABEL_6:
  int v9 = *((_DWORD *)this + 17);
  int v10 = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v10 | 0x40;
  *((_DWORD *)a2 + 18) = v9;
  if (!*((unsigned char *)this + 66)) {
    goto LABEL_10;
  }
  uint64_t v11 = (std::string *)*((void *)this + 4);
  *((_DWORD *)a2 + 4) = v10 | 0x50;
  uint64_t v12 = (std::string **)((char *)a2 + 56);
  uint64_t v13 = *((void *)a2 + 1);
  uint64_t v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
  if (v13)
  {
    uint64_t v14 = *(google::protobuf::Arena **)v14;
    uint64_t v15 = *v12;
    if (*v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v15 = *v12;
    if (*v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_9:
      std::string::operator=(v15, v11);
LABEL_10:
      if (!*((unsigned char *)this + 65)) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v12, v14, (long long *)v11);
  if (*((unsigned char *)this + 65))
  {
LABEL_11:
    *((_DWORD *)a2 + 4) |= 0x100u;
    *((unsigned char *)a2 + 80) = 1;
  }
LABEL_12:
  unsigned int v16 = *((_DWORD *)this + 15);
  if (!google::protobuf::FieldDescriptorProto_Label_IsValid((google::protobuf *)v16)) {
    google::protobuf::FieldDescriptor::CopyTo();
  }
  *((_DWORD *)a2 + 4) |= 0x200u;
  *((_DWORD *)a2 + 21) = v16;
  uint64_t v17 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v17)
  {
    int v61 = this;
    uint64_t v62 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v61;
      p_p = &__p;
      std::__call_once(v17, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  unsigned int v18 = *((_DWORD *)this + 14);
  if (!google::protobuf::FieldDescriptorProto_Type_IsValid((google::protobuf *)v18)) {
    google::protobuf::FieldDescriptor::CopyTo();
  }
  int v20 = *((_DWORD *)a2 + 4) | 0x400;
  *((_DWORD *)a2 + 4) = v20;
  *((_DWORD *)a2 + 22) = v18;
  if (*((unsigned char *)this + 67))
  {
    if (*(unsigned char *)(*((void *)this + 10) + 141))
    {
      *((_DWORD *)a2 + 4) = v20 | 2;
      uint64_t v21 = (std::string **)((char *)a2 + 32);
      uint64_t v22 = *((void *)a2 + 1);
      int v23 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
      if ((v22 & 1) == 0) {
        goto LABEL_20;
      }
    }
    else
    {
      google::protobuf::FieldDescriptorProto::set_extendee(a2, ".");
      *((_DWORD *)a2 + 4) |= 2u;
      uint64_t v21 = (std::string **)((char *)a2 + 32);
      uint64_t v44 = *((void *)a2 + 1);
      int v23 = (google::protobuf::Arena *)(v44 & 0xFFFFFFFFFFFFFFFELL);
      if ((v44 & 1) == 0)
      {
LABEL_20:
        uint64_t v24 = *v21;
        if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
LABEL_22:
          uint64_t v25 = *(void *)(*((void *)this + 10) + 8);
          int v26 = *(char *)(v25 + 23);
          if (v26 >= 0) {
            uint64_t v27 = *(const std::string::value_type **)(*((void *)this + 10) + 8);
          }
          else {
            uint64_t v27 = *(const std::string::value_type **)v25;
          }
          if (v26 >= 0) {
            std::string::size_type v28 = *(unsigned __int8 *)(v25 + 23);
          }
          else {
            std::string::size_type v28 = *(void *)(v25 + 8);
          }
          std::string::append(v24, v27, v28);
          goto LABEL_29;
        }
LABEL_21:
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, v23, (long long *)&google::protobuf::internal::fixed_address_empty_string);
        uint64_t v24 = *v21;
        goto LABEL_22;
      }
    }
    int v23 = *(google::protobuf::Arena **)v23;
    uint64_t v24 = *v21;
    if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_29:
  uint64_t v29 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v29)
  {
    int v61 = this;
    uint64_t v62 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v29, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v61;
      p_p = &__p;
      std::__call_once(v29, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v30 = *((_DWORD *)this + 14);
  uint64_t v31 = (std::string *)*((void *)this + 6);
  if ((v30 & 0xFFFFFFFE) == 0xA)
  {
    if (v31)
    {
      uint64_t v62 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
      if (atomic_load_explicit((atomic_ullong *volatile)v31, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v62;
        p_p = &__p;
        std::__call_once((std::once_flag::_State_type *)v31, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    uint64_t v32 = *((void *)this + 13);
    if (*(unsigned char *)(v32 + 140))
    {
      *((_DWORD *)a2 + 22) = 1;
      *((_DWORD *)a2 + 4) &= ~0x400u;
    }
    uint64_t v33 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v33)
    {
      uint64_t v62 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
      if (atomic_load_explicit((atomic_ullong *volatile)v33, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v62;
        p_p = &__p;
        std::__call_once(v33, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      uint64_t v32 = *((void *)this + 13);
    }
    if (!*(unsigned char *)(v32 + 141)) {
      google::protobuf::FieldDescriptorProto::set_type_name(a2, ".");
    }
    *((_DWORD *)a2 + 4) |= 4u;
    int v34 = (std::string **)((char *)a2 + 40);
    uint64_t v35 = *((void *)a2 + 1);
    uint64_t v36 = (google::protobuf::Arena *)(v35 & 0xFFFFFFFFFFFFFFFELL);
    if (v35)
    {
      uint64_t v36 = *(google::protobuf::Arena **)v36;
      uint64_t v37 = *v34;
      if (*v34 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
LABEL_46:
        uint64_t v38 = (std::once_flag::_State_type *)*((void *)this + 6);
        if (!v38) {
          goto LABEL_74;
        }
        goto LABEL_72;
      }
    }
    else
    {
      uint64_t v37 = *v34;
      if (*v34 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_46;
      }
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v36, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = *v34;
    uint64_t v38 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (!v38)
    {
LABEL_74:
      uint64_t v45 = *((void *)this + 13);
LABEL_80:
      uint64_t v46 = *(void *)(v45 + 8);
      int v47 = *(char *)(v46 + 23);
      if (v47 >= 0) {
        unint64_t v48 = (const std::string::value_type *)v46;
      }
      else {
        unint64_t v48 = *(const std::string::value_type **)v46;
      }
      if (v47 >= 0) {
        std::string::size_type v49 = *(unsigned __int8 *)(v46 + 23);
      }
      else {
        std::string::size_type v49 = *(void *)(v46 + 8);
      }
      uint64_t v31 = std::string::append(v37, v48, v49);
      goto LABEL_87;
    }
LABEL_72:
    uint64_t v62 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
    if (atomic_load_explicit((atomic_ullong *volatile)v38, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v62;
      p_p = &__p;
      std::__call_once(v38, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    goto LABEL_74;
  }
  if (v31)
  {
    int v61 = this;
    uint64_t v62 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v31, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v61;
      p_p = &__p;
      std::__call_once((std::once_flag::_State_type *)v31, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v30 = *((_DWORD *)this + 14);
  }
  if (v30 == 14)
  {
    uint64_t v39 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v39)
    {
      uint64_t v62 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
      if (atomic_load_explicit((atomic_ullong *volatile)v39, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v62;
        p_p = &__p;
        std::__call_once(v39, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if (!*(unsigned char *)(*((void *)this + 14) + 41)) {
      google::protobuf::FieldDescriptorProto::set_type_name(a2, ".");
    }
    *((_DWORD *)a2 + 4) |= 4u;
    uint64_t v40 = (std::string **)((char *)a2 + 40);
    uint64_t v41 = *((void *)a2 + 1);
    uint64_t v42 = (google::protobuf::Arena *)(v41 & 0xFFFFFFFFFFFFFFFELL);
    if (v41)
    {
      uint64_t v42 = *(google::protobuf::Arena **)v42;
      uint64_t v37 = *v40;
      if (*v40 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
LABEL_60:
        int v43 = (std::once_flag::_State_type *)*((void *)this + 6);
        if (!v43) {
          goto LABEL_79;
        }
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v37 = *v40;
      if (*v40 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_60;
      }
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v42, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = *v40;
    int v43 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (!v43)
    {
LABEL_79:
      uint64_t v45 = *((void *)this + 14);
      goto LABEL_80;
    }
LABEL_77:
    uint64_t v62 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
    if (atomic_load_explicit((atomic_ullong *volatile)v43, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v62;
      p_p = &__p;
      std::__call_once(v43, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    goto LABEL_79;
  }
LABEL_87:
  if (!*((unsigned char *)this + 64)) {
    goto LABEL_95;
  }
  google::protobuf::FieldDescriptor::DefaultValueAsString(this, 0, v19, &__p);
  *((_DWORD *)a2 + 4) |= 8u;
  long long v50 = (std::string **)((char *)a2 + 48);
  uint64_t v51 = *((void *)a2 + 1);
  int v52 = (google::protobuf::Arena *)(v51 & 0xFFFFFFFFFFFFFFFELL);
  if (v51)
  {
    int v52 = *(google::protobuf::Arena **)v52;
    uint64_t v53 = *v50;
    if (*v50 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_90;
    }
  }
  else
  {
    uint64_t v53 = *v50;
    if (*v50 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_90:
      uint64_t v31 = std::string::operator=(v53, &__p);
      goto LABEL_93;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v50, v52, (long long *)&__p);
LABEL_93:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_95:
  uint64_t v54 = *((void *)this + 11);
  if (v54 && !*((unsigned char *)this + 67))
  {
    int v55 = -1431655765 * ((unint64_t)(v54 - *(void *)(*(void *)(v54 + 16) + 48)) >> 4);
    *((_DWORD *)a2 + 4) |= 0x80u;
    *((_DWORD *)a2 + 19) = v55;
  }
  uint64_t v56 = (uint64_t *)*((void *)this + 15);
  if (v56 != google::protobuf::FieldOptions::default_instance((google::protobuf::FieldOptions *)v31))
  {
    *((_DWORD *)a2 + 4) |= 0x20u;
    int v57 = (google::protobuf::FieldOptions *)*((void *)a2 + 8);
    if (!v57)
    {
      uint64_t v58 = *((void *)a2 + 1);
      int v59 = (google::protobuf::Arena *)(v58 & 0xFFFFFFFFFFFFFFFELL);
      if (v58) {
        int v59 = *(google::protobuf::Arena **)v59;
      }
      int v57 = (google::protobuf::FieldOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v59);
      *((void *)a2 + 8) = v57;
    }
    google::protobuf::FieldOptions::CopyFrom(v57, *((const google::protobuf::FieldOptions **)this + 15));
  }
}

void sub_23CDC80F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::OneofDescriptor::CopyTo(google::protobuf::OneofDescriptor *this, google::protobuf::OneofDescriptorProto *a2)
{
  int v4 = *(long long **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  size_t v5 = (std::string **)((char *)a2 + 24);
  uint64_t v6 = *((void *)a2 + 1);
  int v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) == 0)
  {
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_3;
    }
LABEL_14:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
    uint64_t v15 = (uint64_t *)*((void *)this + 5);
    if (v15 == google::protobuf::OneofOptions::default_instance(v16)) {
      return;
    }
    goto LABEL_4;
  }
  int v7 = *(google::protobuf::Arena **)v7;
  uint64_t v8 = *v5;
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_14;
  }
LABEL_3:
  int v9 = std::string::operator=(v8, (const std::string *)v4);
  int v10 = (uint64_t *)*((void *)this + 5);
  if (v10 == google::protobuf::OneofOptions::default_instance((google::protobuf::OneofOptions *)v9)) {
    return;
  }
LABEL_4:
  *((_DWORD *)a2 + 4) |= 2u;
  uint64_t v11 = (google::protobuf::OneofOptions *)*((void *)a2 + 4);
  if (v11)
  {
    uint64_t v12 = (const google::protobuf::OneofOptions *)*((void *)this + 5);
  }
  else
  {
    uint64_t v13 = *((void *)a2 + 1);
    uint64_t v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
    if (v13) {
      uint64_t v14 = *(google::protobuf::Arena **)v14;
    }
    uint64_t v11 = (google::protobuf::OneofOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v14);
    *((void *)a2 + 4) = v11;
    uint64_t v12 = (const google::protobuf::OneofOptions *)*((void *)this + 5);
  }
  google::protobuf::OneofOptions::CopyFrom(v11, v12);
}

std::string *google::protobuf::DescriptorProto::add_reserved_name(uint64_t a1, std::string *__str)
{
  uint64_t v2 = __str;
  int v4 = (atomic_ullong **)(a1 + 192);
  size_t v5 = *(int **)(a1 + 208);
  if (!v5)
  {
    int v7 = *(_DWORD *)(a1 + 204);
LABEL_8:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 192), v7 + 1);
    size_t v5 = *(int **)(a1 + 208);
    int v7 = *v5;
    goto LABEL_9;
  }
  uint64_t v6 = *(int *)(a1 + 200);
  int v7 = *v5;
  if ((int)v6 < *v5)
  {
    *(_DWORD *)(a1 + 200) = v6 + 1;
    AlignedAndAddCleanup = *(std::string **)&v5[2 * v6 + 2];
    return std::string::operator=(AlignedAndAddCleanup, __str);
  }
  if (v7 == *(_DWORD *)(a1 + 204)) {
    goto LABEL_8;
  }
LABEL_9:
  *size_t v5 = v7 + 1;
  int v10 = *v4;
  if (!v10) {
    operator new();
  }
  if (v10[14]) {
  AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v10, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
  uint64_t v11 = *(void *)(a1 + 208);
  uint64_t v12 = *(int *)(a1 + 200);
  *(_DWORD *)(a1 + 200) = v12 + 1;
  *(void *)(v11 + 8 * v12 + 8) = AlignedAndAddCleanup;
  __str = v2;

  return std::string::operator=(AlignedAndAddCleanup, __str);
}

void google::protobuf::FieldDescriptorProto::set_extendee(google::protobuf::FieldDescriptorProto *this, const char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__dst, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 8789);
    int v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__dst, "CHECK failed: value != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__dst[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 4) |= 2u;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    int v7 = (std::string *)operator new(v8 + 1);
    __dst[0].__r_.__value_.__l.__size_ = v6;
    __dst[0].__r_.__value_.__r.__words[2] = v9 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v7;
    goto LABEL_10;
  }
  *((unsigned char *)&__dst[0].__r_.__value_.__s + 23) = v5;
  int v7 = __dst;
  if (v5) {
LABEL_10:
  }
    memcpy(v7, __s, v6);
  v7->__r_.__value_.__s.__data_[v6] = 0;
  uint64_t v10 = *((void *)this + 1);
  uint64_t v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
  if (v10)
  {
    uint64_t v11 = *(google::protobuf::Arena **)v11;
    uint64_t v15 = (uint64_t *)*((void *)this + 4);
    uint64_t v13 = (std::string **)((char *)this + 32);
    uint64_t v12 = (std::string *)v15;
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v14 = (uint64_t *)*((void *)this + 4);
    uint64_t v13 = (std::string **)((char *)this + 32);
    uint64_t v12 = (std::string *)v14;
    if (v14 != &google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_13:
      std::string::operator=(v12, __dst);
      goto LABEL_16;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v13, v11, (long long *)__dst);
LABEL_16:
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDC84EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC8500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC8514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptorProto::set_type_name(google::protobuf::FieldDescriptorProto *this, const char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__dst, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 8696);
    int v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__dst, "CHECK failed: value != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__dst[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 4) |= 4u;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    int v7 = (std::string *)operator new(v8 + 1);
    __dst[0].__r_.__value_.__l.__size_ = v6;
    __dst[0].__r_.__value_.__r.__words[2] = v9 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v7;
    goto LABEL_10;
  }
  *((unsigned char *)&__dst[0].__r_.__value_.__s + 23) = v5;
  int v7 = __dst;
  if (v5) {
LABEL_10:
  }
    memcpy(v7, __s, v6);
  v7->__r_.__value_.__s.__data_[v6] = 0;
  uint64_t v10 = *((void *)this + 1);
  uint64_t v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
  if (v10)
  {
    uint64_t v11 = *(google::protobuf::Arena **)v11;
    uint64_t v15 = (uint64_t *)*((void *)this + 5);
    uint64_t v13 = (std::string **)((char *)this + 40);
    uint64_t v12 = (std::string *)v15;
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v14 = (uint64_t *)*((void *)this + 5);
    uint64_t v13 = (std::string **)((char *)this + 40);
    uint64_t v12 = (std::string *)v14;
    if (v14 != &google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_13:
      std::string::operator=(v12, __dst);
      goto LABEL_16;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v13, v11, (long long *)__dst);
LABEL_16:
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDC86AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC86C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC86D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::enum_type(google::protobuf::FieldDescriptor *this)
{
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    int v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      size_t v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((void *)this + 14);
}

void google::protobuf::EnumValueDescriptor::CopyTo(google::protobuf::EnumValueDescriptor *this, google::protobuf::EnumValueDescriptorProto *a2)
{
  int v4 = *(std::string **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  size_t v5 = (std::string **)((char *)a2 + 24);
  uint64_t v6 = *((void *)a2 + 1);
  int v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if (v6)
  {
    int v7 = *(google::protobuf::Arena **)v7;
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_3:
      uint64_t v9 = std::string::operator=(v8, v4);
      goto LABEL_6;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, (long long *)v4);
LABEL_6:
  int v10 = *((_DWORD *)this + 4);
  *((_DWORD *)a2 + 4) |= 4u;
  *((_DWORD *)a2 + 10) = v10;
  uint64_t v11 = (uint64_t *)*((void *)this + 4);
  if (v11 != google::protobuf::EnumValueOptions::default_instance((google::protobuf::EnumValueOptions *)v9))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    uint64_t v12 = (google::protobuf::EnumValueOptions *)*((void *)a2 + 4);
    if (v12)
    {
      uint64_t v13 = (const google::protobuf::EnumValueOptions *)*((void *)this + 4);
    }
    else
    {
      uint64_t v14 = *((void *)a2 + 1);
      uint64_t v15 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
      if (v14) {
        uint64_t v15 = *(google::protobuf::Arena **)v15;
      }
      uint64_t v12 = (google::protobuf::EnumValueOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v15);
      *((void *)a2 + 4) = v12;
      uint64_t v13 = (const google::protobuf::EnumValueOptions *)*((void *)this + 4);
    }
    google::protobuf::EnumValueOptions::CopyFrom(v12, v13);
  }
}

std::string *google::protobuf::EnumDescriptorProto::add_reserved_name(uint64_t a1, std::string *__str)
{
  uint64_t v2 = __str;
  int v4 = (atomic_ullong **)(a1 + 72);
  size_t v5 = *(int **)(a1 + 88);
  if (!v5)
  {
    int v7 = *(_DWORD *)(a1 + 84);
LABEL_8:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v7 + 1);
    size_t v5 = *(int **)(a1 + 88);
    int v7 = *v5;
    goto LABEL_9;
  }
  uint64_t v6 = *(int *)(a1 + 80);
  int v7 = *v5;
  if ((int)v6 < *v5)
  {
    *(_DWORD *)(a1 + 80) = v6 + 1;
    AlignedAndAddCleanup = *(std::string **)&v5[2 * v6 + 2];
    return std::string::operator=(AlignedAndAddCleanup, __str);
  }
  if (v7 == *(_DWORD *)(a1 + 84)) {
    goto LABEL_8;
  }
LABEL_9:
  *size_t v5 = v7 + 1;
  int v10 = *v4;
  if (!v10) {
    operator new();
  }
  if (v10[14]) {
  AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v10, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(int *)(a1 + 80);
  *(_DWORD *)(a1 + 80) = v12 + 1;
  *(void *)(v11 + 8 * v12 + 8) = AlignedAndAddCleanup;
  __str = v2;

  return std::string::operator=(AlignedAndAddCleanup, __str);
}

void google::protobuf::MethodDescriptor::CopyTo(google::protobuf::MethodDescriptor *this, google::protobuf::MethodDescriptorProto *a2)
{
  int v4 = *(std::string **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  size_t v5 = (std::string **)((char *)a2 + 24);
  uint64_t v6 = *((void *)a2 + 1);
  int v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if (v6)
  {
    int v7 = *(google::protobuf::Arena **)v7;
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_3:
      std::string::operator=(v8, v4);
      uint64_t v9 = (char *)this + 24;
      int v10 = (std::once_flag::_State_type *)*((void *)this + 5);
      if (!v10) {
        goto LABEL_9;
      }
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v8 = *v5;
    if (*v5 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_3;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, (long long *)v4);
  uint64_t v9 = (char *)this + 24;
  int v10 = (std::once_flag::_State_type *)*((void *)this + 5);
  if (!v10) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v35 = v9;
  if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
  {
    uint64_t v37 = google::protobuf::internal::LazyDescriptor::OnceStatic;
    uint64_t v38 = &v35;
    uint64_t v36 = &v37;
    std::__call_once(v10, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>);
  }
LABEL_9:
  if (!*(unsigned char *)(*(void *)v9 + 141)) {
    google::protobuf::MethodDescriptorProto::set_input_type(a2, ".");
  }
  *((_DWORD *)a2 + 4) |= 2u;
  uint64_t v11 = (std::string **)((char *)a2 + 32);
  uint64_t v12 = *((void *)a2 + 1);
  uint64_t v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
  if (v12)
  {
    uint64_t v13 = *(google::protobuf::Arena **)v13;
    uint64_t v14 = *v11;
    if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_13:
      uint64_t v15 = (std::once_flag::_State_type *)*((void *)this + 5);
      if (!v15) {
        goto LABEL_19;
      }
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v14 = *v11;
    if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, v13, (long long *)&google::protobuf::internal::fixed_address_empty_string);
  uint64_t v14 = *v11;
  uint64_t v15 = (std::once_flag::_State_type *)*((void *)this + 5);
  if (!v15) {
    goto LABEL_19;
  }
LABEL_17:
  uint64_t v35 = v9;
  if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
  {
    uint64_t v37 = google::protobuf::internal::LazyDescriptor::OnceStatic;
    uint64_t v38 = &v35;
    uint64_t v36 = &v37;
    std::__call_once(v15, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>);
  }
LABEL_19:
  uint64_t v16 = *(void *)(*((void *)this + 3) + 8);
  int v17 = *(char *)(v16 + 23);
  if (v17 >= 0) {
    unsigned int v18 = *(const std::string::value_type **)(*((void *)this + 3) + 8);
  }
  else {
    unsigned int v18 = *(const std::string::value_type **)v16;
  }
  if (v17 >= 0) {
    std::string::size_type v19 = *(unsigned __int8 *)(v16 + 23);
  }
  else {
    std::string::size_type v19 = *(void *)(v16 + 8);
  }
  std::string::append(v14, v18, v19);
  int v20 = (std::once_flag::_State_type *)*((void *)this + 9);
  if (v20)
  {
    uint64_t v35 = (char *)this + 56;
    if (atomic_load_explicit((atomic_ullong *volatile)v20, memory_order_acquire) != -1)
    {
      uint64_t v37 = google::protobuf::internal::LazyDescriptor::OnceStatic;
      uint64_t v38 = &v35;
      uint64_t v36 = &v37;
      std::__call_once(v20, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>);
    }
  }
  if (!*(unsigned char *)(*((void *)this + 7) + 141)) {
    google::protobuf::MethodDescriptorProto::set_output_type(a2, ".");
  }
  *((_DWORD *)a2 + 4) |= 4u;
  uint64_t v21 = (std::string **)((char *)a2 + 40);
  uint64_t v22 = *((void *)a2 + 1);
  int v23 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
  if (v22)
  {
    int v23 = *(google::protobuf::Arena **)v23;
    uint64_t v24 = *v21;
    if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_32:
      uint64_t v25 = (std::once_flag::_State_type *)*((void *)this + 9);
      if (!v25) {
        goto LABEL_38;
      }
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v24 = *v21;
    if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v23, (long long *)&google::protobuf::internal::fixed_address_empty_string);
  uint64_t v24 = *v21;
  uint64_t v25 = (std::once_flag::_State_type *)*((void *)this + 9);
  if (!v25) {
    goto LABEL_38;
  }
LABEL_36:
  uint64_t v35 = (char *)this + 56;
  if (atomic_load_explicit((atomic_ullong *volatile)v25, memory_order_acquire) != -1)
  {
    uint64_t v37 = google::protobuf::internal::LazyDescriptor::OnceStatic;
    uint64_t v38 = &v35;
    uint64_t v36 = &v37;
    std::__call_once(v25, &v36, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>);
  }
LABEL_38:
  uint64_t v26 = *(void *)(*((void *)this + 7) + 8);
  int v27 = *(char *)(v26 + 23);
  if (v27 >= 0) {
    std::string::size_type v28 = *(const std::string::value_type **)(*((void *)this + 7) + 8);
  }
  else {
    std::string::size_type v28 = *(const std::string::value_type **)v26;
  }
  if (v27 >= 0) {
    std::string::size_type v29 = *(unsigned __int8 *)(v26 + 23);
  }
  else {
    std::string::size_type v29 = *(void *)(v26 + 8);
  }
  int v30 = std::string::append(v24, v28, v29);
  uint64_t v31 = (uint64_t *)*((void *)this + 11);
  if (v31 != google::protobuf::MethodOptions::default_instance((google::protobuf::MethodOptions *)v30))
  {
    *((_DWORD *)a2 + 4) |= 8u;
    uint64_t v32 = (google::protobuf::MethodOptions *)*((void *)a2 + 6);
    if (!v32)
    {
      uint64_t v33 = *((void *)a2 + 1);
      int v34 = (google::protobuf::Arena *)(v33 & 0xFFFFFFFFFFFFFFFELL);
      if (v33) {
        int v34 = *(google::protobuf::Arena **)v34;
      }
      uint64_t v32 = (google::protobuf::MethodOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v34);
      *((void *)a2 + 6) = v32;
    }
    google::protobuf::MethodOptions::CopyFrom(v32, *((const google::protobuf::MethodOptions **)this + 11));
  }
  if (*((unsigned char *)this + 96))
  {
    *((_DWORD *)a2 + 4) |= 0x10u;
    *((unsigned char *)a2 + 56) = 1;
  }
  if (*((unsigned char *)this + 97))
  {
    *((_DWORD *)a2 + 4) |= 0x20u;
    *((unsigned char *)a2 + 57) = 1;
  }
}

void google::protobuf::MethodDescriptorProto::set_input_type(google::protobuf::MethodDescriptorProto *this, const char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__dst, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 10293);
    int v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__dst, "CHECK failed: value != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__dst[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 4) |= 2u;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    int v7 = (std::string *)operator new(v8 + 1);
    __dst[0].__r_.__value_.__l.__size_ = v6;
    __dst[0].__r_.__value_.__r.__words[2] = v9 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v7;
    goto LABEL_10;
  }
  *((unsigned char *)&__dst[0].__r_.__value_.__s + 23) = v5;
  int v7 = __dst;
  if (v5) {
LABEL_10:
  }
    memcpy(v7, __s, v6);
  v7->__r_.__value_.__s.__data_[v6] = 0;
  uint64_t v10 = *((void *)this + 1);
  uint64_t v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
  if (v10)
  {
    uint64_t v11 = *(google::protobuf::Arena **)v11;
    uint64_t v15 = (uint64_t *)*((void *)this + 4);
    uint64_t v13 = (std::string **)((char *)this + 32);
    uint64_t v12 = (std::string *)v15;
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v14 = (uint64_t *)*((void *)this + 4);
    uint64_t v13 = (std::string **)((char *)this + 32);
    uint64_t v12 = (std::string *)v14;
    if (v14 != &google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_13:
      std::string::operator=(v12, __dst);
      goto LABEL_16;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v13, v11, (long long *)__dst);
LABEL_16:
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDC8EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC8EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC8F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::MethodDescriptorProto::set_output_type(google::protobuf::MethodDescriptorProto *this, const char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__dst, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 10386);
    int v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__dst, "CHECK failed: value != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__dst[0].__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 4) |= 4u;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    int v7 = (std::string *)operator new(v8 + 1);
    __dst[0].__r_.__value_.__l.__size_ = v6;
    __dst[0].__r_.__value_.__r.__words[2] = v9 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v7;
    goto LABEL_10;
  }
  *((unsigned char *)&__dst[0].__r_.__value_.__s + 23) = v5;
  int v7 = __dst;
  if (v5) {
LABEL_10:
  }
    memcpy(v7, __s, v6);
  v7->__r_.__value_.__s.__data_[v6] = 0;
  uint64_t v10 = *((void *)this + 1);
  uint64_t v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
  if (v10)
  {
    uint64_t v11 = *(google::protobuf::Arena **)v11;
    uint64_t v15 = (uint64_t *)*((void *)this + 5);
    uint64_t v13 = (std::string **)((char *)this + 40);
    uint64_t v12 = (std::string *)v15;
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v14 = (uint64_t *)*((void *)this + 5);
    uint64_t v13 = (std::string **)((char *)this + 40);
    uint64_t v12 = (std::string *)v14;
    if (v14 != &google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_13:
      std::string::operator=(v12, __dst);
      goto LABEL_16;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v13, v11, (long long *)__dst);
LABEL_16:
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDC90A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC90B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDC90CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::SourceLocationCommentPrinter::AddPreComment(uint64_t a1, std::string *a2)
{
  if (*(unsigned char *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 72);
    if (*(void *)(a1 + 80) != v4)
    {
      uint64_t v5 = 0;
      unint64_t v6 = 0;
      do
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __p.__r_.__value_.__l.__size_;
        }
        std::string::append(a2, (const std::string::value_type *)p_p, size);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        std::string::append(a2, "\n");
        ++v6;
        uint64_t v4 = *(void *)(a1 + 72);
        v5 += 24;
      }
      while (0xAAAAAAAAAAAAAAABLL * ((*(void *)(a1 + 80) - v4) >> 3) > v6);
    }
    if (*(char *)(a1 + 47) < 0)
    {
      if (!*(void *)(a1 + 32)) {
        return;
      }
    }
    else if (!*(unsigned char *)(a1 + 47))
    {
      return;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v9 = &__p;
    }
    else {
      uint64_t v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a2, (const std::string::value_type *)v9, v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_23CDC9230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::SourceLocationCommentPrinter::AddPostComment(uint64_t a1, std::string *a2)
{
  if (*(unsigned char *)a1)
  {
    if (*(char *)(a1 + 71) < 0)
    {
      if (!*(void *)(a1 + 56)) {
        return;
      }
    }
    else if (!*(unsigned char *)(a1 + 71))
    {
      return;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a2, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_23CDC92EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::SourceLocationCommentPrinter::~SourceLocationCommentPrinter(google::protobuf::_anonymous_namespace_::SourceLocationCommentPrinter *this)
{
  if ((*((char *)this + 127) & 0x80000000) == 0)
  {
    uint64_t v2 = (void **)*((void *)this + 9);
    if (!v2) {
      goto LABEL_3;
    }
LABEL_7:
    int8x8_t v3 = (void **)*((void *)this + 10);
    if (v3 == v2)
    {
      *((void *)this + 10) = v2;
      operator delete(v2);
      if (*((char *)this + 71) < 0) {
        goto LABEL_14;
      }
    }
    else
    {
      do
      {
        if (*((char *)v3 - 1) < 0) {
          operator delete(*(v3 - 3));
        }
        v3 -= 3;
      }
      while (v3 != v2);
      uint64_t v4 = (void *)*((void *)this + 9);
      *((void *)this + 10) = v2;
      operator delete(v4);
      if (*((char *)this + 71) < 0) {
        goto LABEL_14;
      }
    }
LABEL_4:
    if ((*((char *)this + 47) & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(*((void **)this + 3));
    return;
  }
  operator delete(*((void **)this + 13));
  uint64_t v2 = (void **)*((void *)this + 9);
  if (v2) {
    goto LABEL_7;
  }
LABEL_3:
  if ((*((char *)this + 71) & 0x80000000) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  operator delete(*((void **)this + 6));
  if (*((char *)this + 47) < 0) {
    goto LABEL_15;
  }
}

BOOL google::protobuf::anonymous namespace'::FormatLineOptions(int a1, google::protobuf::Message *a2, uint64_t a3, std::string *a4)
{
  uint64_t v53 = *MEMORY[0x263EF8340];
  if (a1 < 0) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v8 = 2 * a1;
  if (v8 >= 0x17)
  {
    uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v10 = v8 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_b = (void **)operator new(v10 + 1);
    size_t v31 = v8;
    int64_t v32 = v11 | 0x8000000000000000;
    __b = p_b;
    goto LABEL_8;
  }
  HIBYTE(v32) = 2 * a1;
  p_b = (void **)&__b;
  if (a1) {
LABEL_8:
  }
    memset(p_b, 32, v8);
  *((unsigned char *)p_b + v8) = 0;
  std::string __p = 0;
  std::string::size_type v28 = 0;
  uint64_t v29 = 0;
  uint64_t v13 = (void **)__p;
  uint64_t v14 = v28;
  if (Options)
  {
    if (v28 == __p)
    {
      uint64_t v14 = (void **)__p;
      if (!__p) {
        goto LABEL_30;
      }
      goto LABEL_23;
    }
    uint64_t v15 = 0;
    unint64_t v16 = 0;
    do
    {
      int v17 = HIBYTE(v32);
      unsigned int v18 = __b;
      if (v32 >= 0) {
        unsigned int v18 = (void **)&__b;
      }
      uint64_t v51 = v18;
      if (v32 < 0) {
        int v17 = v31;
      }
      int v52 = v17;
      std::string::size_type v19 = (char *)&v13[v15];
      if (SHIBYTE(v13[v15 + 2]) >= 0) {
        int v20 = (char *)&v13[v15];
      }
      else {
        int v20 = (char *)v13[v15];
      }
      std::string::size_type v49 = v20;
      int v21 = v19[23];
      uint64_t v22 = *((void *)v19 + 1);
      if ((v21 & 0x80u) == 0) {
        LODWORD(v22) = v21;
      }
      int v50 = v22;
      uint64_t v47 = 0;
      int v48 = -1;
      uint64_t v45 = 0;
      int v46 = -1;
      uint64_t v43 = 0;
      int v44 = -1;
      uint64_t v41 = 0;
      int v42 = -1;
      uint64_t v39 = 0;
      int v40 = -1;
      uint64_t v37 = 0;
      int v38 = -1;
      uint64_t v35 = 0;
      int v36 = -1;
      uint64_t v33 = 0;
      int v34 = -1;
      *((void *)&v26 + 1) = &v37;
      *(void *)&long long v26 = &v39;
      google::protobuf::strings::SubstituteAndAppend(a4, "$0option $1;\n",
        (uint64_t)&v51,
        (uint64_t)&v49,
        (uint64_t)&v47,
        (uint64_t)&v45,
        (uint64_t)&v43,
        (uint64_t)&v41,
        v26,
        (uint64_t)&v35,
        (uint64_t)&v33);
      ++v16;
      uint64_t v13 = (void **)__p;
      uint64_t v14 = v28;
      v15 += 3;
    }
    while (0xAAAAAAAAAAAAAAABLL * (((char *)v28 - (unsigned char *)__p) >> 3) > v16);
  }
  if (!v13) {
    goto LABEL_30;
  }
LABEL_23:
  int v23 = v14;
  if (v13 != v14)
  {
    uint64_t v24 = v14;
    do
    {
      if (*((char *)v24 - 1) < 0) {
        operator delete(*(v24 - 3));
      }
      v24 -= 3;
    }
    while (v24 != v13);
    int v23 = __p;
  }
  std::string::size_type v28 = v13;
  operator delete(v23);
LABEL_30:
  if (SHIBYTE(v32) < 0) {
    operator delete(__b);
  }
  return v13 != v14;
}

void sub_23CDC967C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptor::DebugString(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  if (a2 < 0) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v8 = 2 * a2;
  if (v8 >= 0x17)
  {
    uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v10 = v8 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_b = (std::string *)operator new(v10 + 1);
    __b.__r_.__value_.__l.__size_ = v8;
    __b.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
    __b.__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
    goto LABEL_8;
  }
  *((unsigned char *)&__b.__r_.__value_.__s + 23) = 2 * a2;
  p_b = &__b;
  if (a2) {
LABEL_8:
  }
    memset(p_b, 32, v8);
  p_b->__r_.__value_.__s.__data_[v8] = 0;
  uint64_t v57 = 0;
  long long v55 = 0u;
  *(_OWORD *)uint64_t v56 = 0u;
  *(_OWORD *)uint64_t v53 = 0u;
  *(_OWORD *)uint64_t v54 = 0u;
  __int16 v58 = *(_WORD *)a4;
  char v59 = *(unsigned char *)(a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v60, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  }
  else {
    std::string v60 = __b;
  }
  if (*(unsigned char *)a4)
  {
    memset(v81, 0, 24);
    google::protobuf::EnumDescriptor::GetLocationPath((uint64_t)a1, &v81[0].__r_.__value_.__l.__data_);
    char SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(a1[2], v81, (uint64_t)&v52);
    if (v81[0].__r_.__value_.__r.__words[0])
    {
      v81[0].__r_.__value_.__l.__size_ = v81[0].__r_.__value_.__r.__words[0];
      operator delete(v81[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    char SourceLocation = 0;
  }
  v51[0] = SourceLocation;
  int v13 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  uint64_t v14 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v14 = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v13 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v81[0].__r_.__value_.__r.__words[1]) = v13;
  uint64_t v15 = (const char *)*a1;
  int v16 = *(char *)(*a1 + 23);
  uint64_t v17 = *(void *)(*a1 + 8);
  if (v16 < 0) {
    uint64_t v15 = *(const char **)*a1;
  }
  unint64_t v78 = v15;
  int v18 = v16;
  if (v16 < 0) {
    int v18 = v17;
  }
  int v79 = v18;
  uint64_t v76 = 0;
  int v77 = -1;
  uint64_t v74 = 0;
  int v75 = -1;
  uint64_t v72 = 0;
  int v73 = -1;
  uint64_t v70 = 0;
  int v71 = -1;
  uint64_t v68 = 0;
  int v69 = -1;
  uint64_t v66 = 0;
  int v67 = -1;
  uint64_t v64 = 0;
  int v65 = -1;
  uint64_t v62 = 0;
  int v63 = -1;
  *(void *)&long long v43 = &v68;
  *((void *)&v43 + 1) = &v66;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0enum $1 {\n", (uint64_t)v81, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, v43, (uint64_t)&v64, (uint64_t)&v62);
  int v19 = a2 + 1;
  if (*((int *)a1 + 11) >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    do
    {
      google::protobuf::EnumValueDescriptor::DebugString((uint64_t ***)(a1[6] + v20), v19, (std::string *)a3, (__int16 *)a4);
      ++v21;
      v20 += 40;
    }
    while (v21 < *((int *)a1 + 11));
  }
  if (*((int *)a1 + 14) > 0)
  {
    int v22 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    int v23 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v23 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v23;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v22 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v81[0].__r_.__value_.__r.__words[1]) = v22;
    unint64_t v78 = 0;
    int v79 = -1;
    uint64_t v76 = 0;
    int v77 = -1;
    uint64_t v74 = 0;
    int v75 = -1;
    uint64_t v72 = 0;
    int v73 = -1;
    uint64_t v70 = 0;
    int v71 = -1;
    uint64_t v68 = 0;
    int v69 = -1;
    uint64_t v66 = 0;
    int v67 = -1;
    uint64_t v64 = 0;
    int v65 = -1;
    uint64_t v62 = 0;
    int v63 = -1;
    *(void *)&long long v44 = &v68;
    *((void *)&v44 + 1) = &v66;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)v81, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, v44, (uint64_t)&v64, (uint64_t)&v62);
    if (*((int *)a1 + 14) >= 1)
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      do
      {
        int v27 = (unsigned int *)(a1[8] + v25);
        std::string::size_type v28 = (google::protobuf *)v27[1];
        if (v28 == *v27)
        {
          v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer(v28, &v81[0].__r_.__value_.__s.__data_[12], v24);
          LODWORD(v81[0].__r_.__value_.__r.__words[1]) = strlen(v81[0].__r_.__value_.__l.__data_);
          unint64_t v78 = 0;
          int v79 = -1;
          uint64_t v76 = 0;
          int v77 = -1;
          uint64_t v74 = 0;
          int v75 = -1;
          uint64_t v72 = 0;
          int v73 = -1;
          uint64_t v70 = 0;
          int v71 = -1;
          uint64_t v68 = 0;
          int v69 = -1;
          uint64_t v66 = 0;
          int v67 = -1;
          uint64_t v64 = 0;
          int v65 = -1;
          uint64_t v62 = 0;
          int v63 = -1;
          *((void *)&v45 + 1) = &v66;
          *(void *)&long long v45 = &v68;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)v81, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, v45, (uint64_t)&v64, (uint64_t)&v62);
        }
        else
        {
          v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*v27, &v81[0].__r_.__value_.__s.__data_[12], v24);
          LODWORD(v81[0].__r_.__value_.__r.__words[1]) = strlen(v81[0].__r_.__value_.__l.__data_);
          unint64_t v78 = google::protobuf::FastInt32ToBuffer((google::protobuf *)v27[1], v80, v29);
          int v79 = strlen(v78);
          uint64_t v76 = 0;
          int v77 = -1;
          uint64_t v74 = 0;
          int v75 = -1;
          uint64_t v72 = 0;
          int v73 = -1;
          uint64_t v70 = 0;
          int v71 = -1;
          uint64_t v68 = 0;
          int v69 = -1;
          uint64_t v66 = 0;
          int v67 = -1;
          uint64_t v64 = 0;
          int v65 = -1;
          uint64_t v62 = 0;
          int v63 = -1;
          *((void *)&v46 + 1) = &v66;
          *(void *)&long long v46 = &v68;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)v81, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, v46, (uint64_t)&v64, (uint64_t)&v62);
        }
        ++v26;
        v25 += 8;
      }
      while (v26 < *((int *)a1 + 14));
    }
    if (*(char *)(a3 + 23) < 0) {
      uint64_t v30 = *(void *)(a3 + 8);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(a3 + 23);
    }
    std::string::replace((std::string *)a3, v30 - 2, 2uLL, ";\n");
  }
  if (*((int *)a1 + 15) >= 1)
  {
    int v31 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    int64_t v32 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int64_t v32 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v32;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v31 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v81[0].__r_.__value_.__r.__words[1]) = v31;
    unint64_t v78 = 0;
    int v79 = -1;
    uint64_t v76 = 0;
    int v77 = -1;
    uint64_t v74 = 0;
    int v75 = -1;
    uint64_t v72 = 0;
    int v73 = -1;
    uint64_t v70 = 0;
    int v71 = -1;
    uint64_t v68 = 0;
    int v69 = -1;
    uint64_t v66 = 0;
    int v67 = -1;
    uint64_t v64 = 0;
    int v65 = -1;
    uint64_t v62 = 0;
    int v63 = -1;
    *(void *)&long long v47 = &v68;
    *((void *)&v47 + 1) = &v66;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)v81, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, v47, (uint64_t)&v64, (uint64_t)&v62);
    if (*((int *)a1 + 15) >= 1)
    {
      uint64_t v34 = 0;
      do
      {
        google::protobuf::CEscape(*(void *)(a1[9] + 8 * v34), v33, &__p);
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
        int v36 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v36 = __p.__r_.__value_.__r.__words[1];
        }
        LODWORD(v81[0].__r_.__value_.__r.__words[1]) = v36;
        unint64_t v78 = 0;
        int v79 = -1;
        uint64_t v76 = 0;
        int v77 = -1;
        uint64_t v74 = 0;
        int v75 = -1;
        uint64_t v72 = 0;
        int v73 = -1;
        uint64_t v70 = 0;
        int v71 = -1;
        uint64_t v68 = 0;
        int v69 = -1;
        uint64_t v66 = 0;
        int v67 = -1;
        uint64_t v64 = 0;
        int v65 = -1;
        uint64_t v62 = 0;
        int v63 = -1;
        *(void *)&long long v48 = &v68;
        *((void *)&v48 + 1) = &v66;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)v81, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, v48, (uint64_t)&v64, (uint64_t)&v62);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        ++v34;
      }
      while (v34 < *((int *)a1 + 15));
    }
    if (*(char *)(a3 + 23) < 0) {
      uint64_t v37 = *(void *)(a3 + 8);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(a3 + 23);
    }
    std::string::replace((std::string *)a3, v37 - 2, 2uLL, ";\n");
  }
  int v38 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  uint64_t v39 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v39 = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v39;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v38 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v81[0].__r_.__value_.__r.__words[1]) = v38;
  unint64_t v78 = 0;
  int v79 = -1;
  uint64_t v76 = 0;
  int v77 = -1;
  uint64_t v74 = 0;
  int v75 = -1;
  uint64_t v72 = 0;
  int v73 = -1;
  uint64_t v70 = 0;
  int v71 = -1;
  uint64_t v68 = 0;
  int v69 = -1;
  uint64_t v66 = 0;
  int v67 = -1;
  uint64_t v64 = 0;
  int v65 = -1;
  uint64_t v62 = 0;
  int v63 = -1;
  *(void *)&long long v49 = &v68;
  *((void *)&v49 + 1) = &v66;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)v81, (uint64_t)&v78, (uint64_t)&v76, (uint64_t)&v74, (uint64_t)&v72, (uint64_t)&v70, v49, (uint64_t)&v64, (uint64_t)&v62);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v60.__r_.__value_.__l.__data_);
  }
  int v40 = (void **)v56[0];
  if (v56[0])
  {
    uint64_t v41 = (void **)v56[1];
    int v42 = v56[0];
    if (v56[1] != v56[0])
    {
      do
      {
        if (*((char *)v41 - 1) < 0) {
          operator delete(*(v41 - 3));
        }
        v41 -= 3;
      }
      while (v41 != v40);
      int v42 = v56[0];
    }
    v56[1] = v40;
    operator delete(v42);
  }
  if (SHIBYTE(v55) < 0)
  {
    operator delete(v54[1]);
    if ((SHIBYTE(v54[0]) & 0x80000000) == 0)
    {
LABEL_76:
      if ((SHIBYTE(__b.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_80:
      operator delete(__b.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((SHIBYTE(v54[0]) & 0x80000000) == 0)
  {
    goto LABEL_76;
  }
  operator delete(v53[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_80;
  }
}

void sub_23CDC9F44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void **a34,void **a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a34)
  {
    int v50 = a35;
    uint64_t v51 = a34;
    if (a35 != a34)
    {
      do
      {
        if (*((char *)v50 - 1) < 0) {
          operator delete(*(v50 - 3));
        }
        v50 -= 3;
      }
      while (v50 != a34);
      uint64_t v51 = a34;
    }
    operator delete(v51);
    if ((a33 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a27 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((a33 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_4:
    if (a49 < 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a22);
  if (a49 < 0)
  {
LABEL_5:
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
LABEL_15:
  _Unwind_Resume(exception_object);
}

void google::protobuf::Descriptor::DebugString(uint64_t *a1, int a2, std::string *a3, uint64_t a4, int a5)
{
  uint64_t v156 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(a1[4] + 75)) {
    return;
  }
  if (a2 < 0) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  uint64_t v10 = 2 * a2;
  if (v10 >= 0x17)
  {
    uint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v12 = v10 | 7;
    }
    uint64_t v13 = v12 + 1;
    p_b = (std::string *)operator new(v12 + 1);
    __b.__r_.__value_.__l.__size_ = 2 * a2;
    __b.__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
    __b.__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
  }
  else
  {
    *((unsigned char *)&__b.__r_.__value_.__s + 23) = 2 * a2;
    p_b = &__b;
    if (!a2) {
      goto LABEL_10;
    }
  }
  memset(p_b, 32, 2 * a2);
LABEL_10:
  p_b->__r_.__value_.__s.__data_[2 * a2] = 0;
  uint64_t v130 = 0;
  long long v128 = 0u;
  *(_OWORD *)std::string::size_type v129 = 0u;
  *(_OWORD *)int v126 = 0u;
  *(_OWORD *)int v127 = 0u;
  __int16 v131 = *(_WORD *)a4;
  char v132 = *(unsigned char *)(a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v133, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  }
  else {
    std::string v133 = __b;
  }
  if (*(unsigned char *)a4)
  {
    memset(v155, 0, 24);
    google::protobuf::Descriptor::GetLocationPath((uint64_t)a1, (uint64_t)v155);
    char SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(a1[2], v155, (uint64_t)&v125);
    if (v155[0].__r_.__value_.__r.__words[0])
    {
      v155[0].__r_.__value_.__l.__size_ = v155[0].__r_.__value_.__r.__words[0];
      operator delete(v155[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    char SourceLocation = 0;
  }
  v124[0] = SourceLocation;
  if (a5)
  {
    int v15 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    int v16 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v16 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v16;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v15 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v15;
    uint64_t v17 = (const char *)*a1;
    int v18 = *(char *)(*a1 + 23);
    uint64_t v19 = *(void *)(*a1 + 8);
    if (v18 < 0) {
      uint64_t v17 = *(const char **)*a1;
    }
    uint64_t v152 = (std::string *)v17;
    int v20 = v18;
    if (v18 < 0) {
      int v20 = v19;
    }
    int v153 = v20;
    int64_t v149 = 0;
    int v150 = -1;
    uint64_t v147 = 0;
    int v148 = -1;
    uint64_t v145 = 0;
    int v146 = -1;
    uint64_t v143 = 0;
    int v144 = -1;
    uint64_t v141 = 0;
    int v142 = -1;
    uint64_t v139 = 0;
    int v140 = -1;
    uint64_t v137 = 0;
    int v138 = -1;
    uint64_t v135 = 0;
    int v136 = -1;
    *(void *)&long long v106 = &v141;
    *((void *)&v106 + 1) = &v139;
    google::protobuf::strings::SubstituteAndAppend(a3, "$0message $1", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v106, (uint64_t)&v137, (uint64_t)&v135);
  }
  std::string::append(a3, " {\n");
  int v21 = a2 + 1;
  uint64_t v118 = (__int16 *)a4;
  uint64_t v119 = a3;
  BOOL v122 = 0;
  uint64_t v123 = 0;
  uint64_t v121 = &v122;
  if (*((int *)a1 + 26) >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      uint64_t v24 = a1[5];
      uint64_t v25 = *(std::once_flag::_State_type **)(v24 + 152 * v23 + 48);
      if (v25)
      {
        int64_t v149 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
        uint64_t v147 = v24 + 152 * v23;
        if (atomic_load_explicit((atomic_ullong *volatile)v25, memory_order_acquire) != -1)
        {
          v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v149;
          v155[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v147;
          uint64_t v152 = v155;
          std::__call_once(v25, &v152, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(v24 + 152 * v23 + 56) == 10)
      {
        uint64_t v26 = a1[5];
        int v27 = *(std::once_flag::_State_type **)(v26 + 152 * v23 + 48);
        if (v27)
        {
          int64_t v149 = (const char *)(v26 + 152 * v23);
          if (atomic_load_explicit((atomic_ullong *volatile)v27, memory_order_acquire) != -1)
          {
            v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
            v155[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v149;
            uint64_t v152 = v155;
            std::__call_once(v27, &v152, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        unint64_t v28 = *(void *)(v26 + 152 * v23 + 104);
        uint64_t v29 = v122;
        uint64_t v30 = &v122;
        int v31 = &v122;
        if (v122)
        {
          while (1)
          {
            while (1)
            {
              int v31 = (uint64_t **)v29;
              unint64_t v32 = v29[4];
              if (v28 >= v32) {
                break;
              }
              uint64_t v29 = *v31;
              uint64_t v30 = v31;
              if (!*v31) {
                goto LABEL_45;
              }
            }
            if (v32 >= v28) {
              break;
            }
            uint64_t v29 = v31[1];
            if (!v29)
            {
              uint64_t v30 = v31 + 1;
              goto LABEL_45;
            }
          }
        }
        else
        {
LABEL_45:
          uint64_t v33 = (uint64_t *)operator new(0x28uLL);
          v33[4] = v28;
          *uint64_t v33 = 0;
          v33[1] = 0;
          v33[2] = (uint64_t)v31;
          *uint64_t v30 = v33;
          if (*v121)
          {
            uint64_t v121 = (uint64_t **)*v121;
            uint64_t v33 = *v30;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v122, v33);
          ++v123;
        }
      }
      ++v23;
    }
    while (v23 < *((int *)a1 + 26));
  }
  if (*((int *)a1 + 32) >= 1)
  {
    uint64_t v34 = 0;
    do
    {
      uint64_t v35 = a1[10];
      int v36 = *(std::once_flag::_State_type **)(v35 + 152 * v34 + 48);
      if (v36)
      {
        int64_t v149 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
        uint64_t v147 = v35 + 152 * v34;
        if (atomic_load_explicit((atomic_ullong *volatile)v36, memory_order_acquire) != -1)
        {
          v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v149;
          v155[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v147;
          uint64_t v152 = v155;
          std::__call_once(v36, &v152, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(v35 + 152 * v34 + 56) == 10)
      {
        uint64_t v37 = a1[10];
        int v38 = *(std::once_flag::_State_type **)(v37 + 152 * v34 + 48);
        if (v38)
        {
          int64_t v149 = (const char *)(v37 + 152 * v34);
          if (atomic_load_explicit((atomic_ullong *volatile)v38, memory_order_acquire) != -1)
          {
            v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
            v155[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v149;
            uint64_t v152 = v155;
            std::__call_once(v38, &v152, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        unint64_t v39 = *(void *)(v37 + 152 * v34 + 104);
        int v40 = v122;
        uint64_t v41 = &v122;
        int v42 = &v122;
        if (v122)
        {
          while (1)
          {
            while (1)
            {
              int v42 = (uint64_t **)v40;
              unint64_t v43 = v40[4];
              if (v39 >= v43) {
                break;
              }
              int v40 = *v42;
              uint64_t v41 = v42;
              if (!*v42) {
                goto LABEL_65;
              }
            }
            if (v43 >= v39) {
              break;
            }
            int v40 = v42[1];
            if (!v40)
            {
              uint64_t v41 = v42 + 1;
              goto LABEL_65;
            }
          }
        }
        else
        {
LABEL_65:
          long long v44 = (uint64_t *)operator new(0x28uLL);
          v44[4] = v39;
          *long long v44 = 0;
          v44[1] = 0;
          v44[2] = (uint64_t)v42;
          *uint64_t v41 = v44;
          if (*v121)
          {
            uint64_t v121 = (uint64_t **)*v121;
            long long v44 = *v41;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v122, v44);
          ++v123;
        }
      }
      ++v34;
    }
    while (v34 < *((int *)a1 + 32));
  }
  int v45 = *((_DWORD *)a1 + 29);
  if (v45 >= 1)
  {
    for (uint64_t i = 0; i < v45; ++i)
    {
      unint64_t v47 = a1[7] + 144 * i;
      for (uint64_t j = v122; j; uint64_t j = (uint64_t *)*j)
      {
        unint64_t v49 = j[4];
        if (v47 >= v49)
        {
          if (v49 >= v47) {
            goto LABEL_70;
          }
          ++j;
        }
      }
      google::protobuf::Descriptor::DebugString();
      int v45 = *((_DWORD *)a1 + 29);
LABEL_70:
      ;
    }
  }
  if (*((int *)a1 + 30) >= 1)
  {
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    do
    {
      google::protobuf::EnumDescriptor::DebugString((uint64_t *)(a1[8] + v50), v21, (uint64_t)v119, (uint64_t)v118);
      ++v51;
      v50 += 80;
    }
    while (v51 < *((int *)a1 + 30));
  }
  if (*((int *)a1 + 26) >= 1)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
    do
    {
      uint64_t v54 = a1[5] + v52;
      uint64_t v55 = *(void *)(v54 + 88);
      if (v55)
      {
        if (v54 == **(void **)(v55 + 32)) {
          google::protobuf::OneofDescriptor::DebugString((int *)v55, v21, v119, v118);
        }
      }
      else
      {
        google::protobuf::FieldDescriptor::DebugString((google::protobuf::FieldDescriptor *)(a1[5] + v52));
      }
      ++v53;
      v52 += 152;
    }
    while (v53 < *((int *)a1 + 26));
  }
  if (*((int *)a1 + 31) >= 1)
  {
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    do
    {
      int v58 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      char v59 = (std::string *)__b.__r_.__value_.__r.__words[0];
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v59 = &__b;
      }
      v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v59;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v58 = __b.__r_.__value_.__r.__words[1];
      }
      LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v58;
      uint64_t v152 = (std::string *)google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(a1[9] + v56), v154, v22);
      int v153 = strlen((const char *)v152);
      int64_t v149 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*(_DWORD *)(a1[9] + v56 + 4) - 1), v151, v60);
      int v150 = strlen(v149);
      uint64_t v147 = 0;
      int v148 = -1;
      uint64_t v145 = 0;
      int v146 = -1;
      uint64_t v143 = 0;
      int v144 = -1;
      uint64_t v141 = 0;
      int v142 = -1;
      uint64_t v139 = 0;
      int v140 = -1;
      uint64_t v137 = 0;
      int v138 = -1;
      uint64_t v135 = 0;
      int v136 = -1;
      *(void *)&long long v107 = &v141;
      *((void *)&v107 + 1) = &v139;
      google::protobuf::strings::SubstituteAndAppend(v119, "$0  extensions $1 to $2;\n",
        (uint64_t)v155,
        (uint64_t)&v152,
        (uint64_t)&v149,
        (uint64_t)&v147,
        (uint64_t)&v145,
        (uint64_t)&v143,
        v107,
        (uint64_t)&v137,
        (uint64_t)&v135);
      ++v57;
      v56 += 16;
    }
    while (v57 < *((int *)a1 + 31));
  }
  int v61 = v119;
  if (*((int *)a1 + 32) >= 1)
  {
    uint64_t v62 = (google::protobuf::FieldDescriptor *)a1[10];
    uint64_t v63 = *((void *)v62 + 10);
    if (v63)
    {
      int v64 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      uint64_t v65 = *(void *)(v63 + 8);
      int v66 = *(char *)(v65 + 23);
      int v67 = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v67 = (std::string *)__b.__r_.__value_.__r.__words[0];
      }
      v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v67;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v64 = __b.__r_.__value_.__r.__words[1];
      }
      LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v64;
      uint64_t v68 = *(const char **)v65;
      uint64_t v69 = *(void *)(v65 + 8);
      if (v66 >= 0) {
        uint64_t v68 = (const char *)v65;
      }
      uint64_t v152 = (std::string *)v68;
      int v70 = v66;
      if (v66 < 0) {
        int v70 = v69;
      }
      int v153 = v70;
      int64_t v149 = 0;
      int v150 = -1;
      uint64_t v147 = 0;
      int v148 = -1;
      uint64_t v145 = 0;
      int v146 = -1;
      uint64_t v143 = 0;
      int v144 = -1;
      uint64_t v141 = 0;
      int v142 = -1;
      uint64_t v139 = 0;
      int v140 = -1;
      uint64_t v137 = 0;
      int v138 = -1;
      uint64_t v135 = 0;
      int v136 = -1;
      *(void *)&long long v108 = &v141;
      *((void *)&v108 + 1) = &v139;
      google::protobuf::strings::SubstituteAndAppend(v119, "$0  extend .$1 {\n", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v108, (uint64_t)&v137, (uint64_t)&v135);
      uint64_t v62 = (google::protobuf::FieldDescriptor *)a1[10];
    }
    google::protobuf::FieldDescriptor::DebugString(v62);
    LODWORD(v71) = *((_DWORD *)a1 + 32);
    if ((int)v71 > 1)
    {
      uint64_t v72 = 1;
      uint64_t v73 = 232;
      do
      {
        uint64_t v74 = a1[10];
        if (*(void *)(v74 + v73) != v63)
        {
          int v75 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
          uint64_t v76 = (std::string *)__b.__r_.__value_.__r.__words[0];
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v76 = &__b;
          }
          v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v76;
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v75 = __b.__r_.__value_.__r.__words[1];
          }
          LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v75;
          uint64_t v152 = 0;
          int v153 = -1;
          int64_t v149 = 0;
          int v150 = -1;
          uint64_t v147 = 0;
          int v148 = -1;
          uint64_t v145 = 0;
          int v146 = -1;
          uint64_t v143 = 0;
          int v144 = -1;
          uint64_t v141 = 0;
          int v142 = -1;
          uint64_t v139 = 0;
          int v140 = -1;
          uint64_t v137 = 0;
          int v138 = -1;
          uint64_t v135 = 0;
          int v136 = -1;
          *(void *)&long long v109 = &v141;
          *((void *)&v109 + 1) = &v139;
          google::protobuf::strings::SubstituteAndAppend(v119, "$0  }\n", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v109, (uint64_t)&v137, (uint64_t)&v135);
          uint64_t v63 = *(void *)(a1[10] + v73);
          int v77 = *(std::string **)(v63 + 8);
          int v78 = SHIBYTE(v77->__r_.__value_.__r.__words[2]);
          int v79 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
          int v80 = (std::string *)__b.__r_.__value_.__r.__words[0];
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v80 = &__b;
          }
          v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v80;
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v79 = __b.__r_.__value_.__r.__words[1];
          }
          LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v79;
          std::string::size_type size = v77->__r_.__value_.__l.__size_;
          if (v78 < 0) {
            int v77 = (std::string *)v77->__r_.__value_.__r.__words[0];
          }
          uint64_t v152 = v77;
          int v82 = v78;
          if (v78 < 0) {
            int v82 = size;
          }
          int v153 = v82;
          int64_t v149 = 0;
          int v150 = -1;
          uint64_t v147 = 0;
          int v148 = -1;
          uint64_t v145 = 0;
          int v146 = -1;
          uint64_t v143 = 0;
          int v144 = -1;
          uint64_t v141 = 0;
          int v142 = -1;
          uint64_t v139 = 0;
          int v140 = -1;
          uint64_t v137 = 0;
          int v138 = -1;
          uint64_t v135 = 0;
          int v136 = -1;
          *(void *)&long long v110 = &v141;
          *((void *)&v110 + 1) = &v139;
          google::protobuf::strings::SubstituteAndAppend(v119, "$0  extend .$1 {\n", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v110, (uint64_t)&v137, (uint64_t)&v135);
          uint64_t v74 = a1[10];
        }
        google::protobuf::FieldDescriptor::DebugString((google::protobuf::FieldDescriptor *)(v74 + v73 - 80));
        ++v72;
        uint64_t v71 = *((int *)a1 + 32);
        v73 += 152;
      }
      while (v72 < v71);
      int v61 = v119;
    }
    if ((int)v71 >= 1)
    {
      int v83 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      char v84 = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        char v84 = (std::string *)__b.__r_.__value_.__r.__words[0];
      }
      v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v84;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v83 = __b.__r_.__value_.__r.__words[1];
      }
      LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v83;
      uint64_t v152 = 0;
      int v153 = -1;
      int64_t v149 = 0;
      int v150 = -1;
      uint64_t v147 = 0;
      int v148 = -1;
      uint64_t v145 = 0;
      int v146 = -1;
      uint64_t v143 = 0;
      int v144 = -1;
      uint64_t v141 = 0;
      int v142 = -1;
      uint64_t v139 = 0;
      int v140 = -1;
      uint64_t v137 = 0;
      int v138 = -1;
      uint64_t v135 = 0;
      int v136 = -1;
      *(void *)&long long v111 = &v141;
      *((void *)&v111 + 1) = &v139;
      google::protobuf::strings::SubstituteAndAppend(v61, "$0  }\n", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v111, (uint64_t)&v137, (uint64_t)&v135);
    }
  }
  if (*((int *)a1 + 33) >= 1)
  {
    int v85 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    uint64_t v86 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v86 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v86;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v85 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v85;
    uint64_t v152 = 0;
    int v153 = -1;
    int64_t v149 = 0;
    int v150 = -1;
    uint64_t v147 = 0;
    int v148 = -1;
    uint64_t v145 = 0;
    int v146 = -1;
    uint64_t v143 = 0;
    int v144 = -1;
    uint64_t v141 = 0;
    int v142 = -1;
    uint64_t v139 = 0;
    int v140 = -1;
    uint64_t v137 = 0;
    int v138 = -1;
    uint64_t v135 = 0;
    int v136 = -1;
    *(void *)&long long v112 = &v141;
    *((void *)&v112 + 1) = &v139;
    google::protobuf::strings::SubstituteAndAppend(v61, "$0  reserved ", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v112, (uint64_t)&v137, (uint64_t)&v135);
    if (*((int *)a1 + 33) >= 1)
    {
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      do
      {
        int v90 = (unsigned int *)(a1[11] + v88);
        BOOL v91 = (google::protobuf *)*v90;
        if (v90[1] == v91 + 1)
        {
          v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer(v91, &v155[0].__r_.__value_.__s.__data_[12], v87);
          LODWORD(v155[0].__r_.__value_.__r.__words[1]) = strlen(v155[0].__r_.__value_.__l.__data_);
          uint64_t v152 = 0;
          int v153 = -1;
          int64_t v149 = 0;
          int v150 = -1;
          uint64_t v147 = 0;
          int v148 = -1;
          uint64_t v145 = 0;
          int v146 = -1;
          uint64_t v143 = 0;
          int v144 = -1;
          uint64_t v141 = 0;
          int v142 = -1;
          uint64_t v139 = 0;
          int v140 = -1;
          uint64_t v137 = 0;
          int v138 = -1;
          uint64_t v135 = 0;
          int v136 = -1;
          *(void *)&long long v113 = &v141;
          *((void *)&v113 + 1) = &v139;
          google::protobuf::strings::SubstituteAndAppend(v119, "$0, ", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v113, (uint64_t)&v137, (uint64_t)&v135);
        }
        else
        {
          v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer(v91, &v155[0].__r_.__value_.__s.__data_[12], v87);
          LODWORD(v155[0].__r_.__value_.__r.__words[1]) = strlen(v155[0].__r_.__value_.__l.__data_);
          uint64_t v152 = (std::string *)google::protobuf::FastInt32ToBuffer((google::protobuf *)(v90[1] - 1), v154, v92);
          int v153 = strlen((const char *)v152);
          int64_t v149 = 0;
          int v150 = -1;
          uint64_t v147 = 0;
          int v148 = -1;
          uint64_t v145 = 0;
          int v146 = -1;
          uint64_t v143 = 0;
          int v144 = -1;
          uint64_t v141 = 0;
          int v142 = -1;
          uint64_t v139 = 0;
          int v140 = -1;
          uint64_t v137 = 0;
          int v138 = -1;
          uint64_t v135 = 0;
          int v136 = -1;
          *(void *)&long long v114 = &v141;
          *((void *)&v114 + 1) = &v139;
          google::protobuf::strings::SubstituteAndAppend(v119, "$0 to $1, ", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v114, (uint64_t)&v137, (uint64_t)&v135);
        }
        ++v89;
        v88 += 8;
      }
      while (v89 < *((int *)a1 + 33));
    }
    int v61 = v119;
    if (SHIBYTE(v119->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type v93 = v119->__r_.__value_.__l.__size_;
    }
    else {
      std::string::size_type v93 = HIBYTE(v119->__r_.__value_.__r.__words[2]);
    }
    std::string::replace(v119, v93 - 2, 2uLL, ";\n");
  }
  if (*((int *)a1 + 34) >= 1)
  {
    int v94 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    long long v95 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      long long v95 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v95;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v94 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v94;
    uint64_t v152 = 0;
    int v153 = -1;
    int64_t v149 = 0;
    int v150 = -1;
    uint64_t v147 = 0;
    int v148 = -1;
    uint64_t v145 = 0;
    int v146 = -1;
    uint64_t v143 = 0;
    int v144 = -1;
    uint64_t v141 = 0;
    int v142 = -1;
    uint64_t v139 = 0;
    int v140 = -1;
    uint64_t v137 = 0;
    int v138 = -1;
    uint64_t v135 = 0;
    int v136 = -1;
    *(void *)&long long v115 = &v141;
    *((void *)&v115 + 1) = &v139;
    google::protobuf::strings::SubstituteAndAppend(v61, "$0  reserved ", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v115, (uint64_t)&v137, (uint64_t)&v135);
    if (*((int *)a1 + 34) >= 1)
    {
      uint64_t v97 = 0;
      do
      {
        google::protobuf::CEscape(*(void *)(a1[12] + 8 * v97), v96, &__p);
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
        int v99 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v99 = __p.__r_.__value_.__r.__words[1];
        }
        LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v99;
        uint64_t v152 = 0;
        int v153 = -1;
        int64_t v149 = 0;
        int v150 = -1;
        uint64_t v147 = 0;
        int v148 = -1;
        uint64_t v145 = 0;
        int v146 = -1;
        uint64_t v143 = 0;
        int v144 = -1;
        uint64_t v141 = 0;
        int v142 = -1;
        uint64_t v139 = 0;
        int v140 = -1;
        uint64_t v137 = 0;
        int v138 = -1;
        uint64_t v135 = 0;
        int v136 = -1;
        *(void *)&long long v116 = &v141;
        *((void *)&v116 + 1) = &v139;
        google::protobuf::strings::SubstituteAndAppend(v61, "\"$0\", ", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v116, (uint64_t)&v137, (uint64_t)&v135);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        ++v97;
      }
      while (v97 < *((int *)a1 + 34));
    }
    if (SHIBYTE(v61->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type v100 = v61->__r_.__value_.__l.__size_;
    }
    else {
      std::string::size_type v100 = HIBYTE(v61->__r_.__value_.__r.__words[2]);
    }
    std::string::replace(v61, v100 - 2, 2uLL, ";\n");
  }
  int v101 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  uint64_t v102 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v102 = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  v155[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v102;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v101 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v155[0].__r_.__value_.__r.__words[1]) = v101;
  uint64_t v152 = 0;
  int v153 = -1;
  int64_t v149 = 0;
  int v150 = -1;
  uint64_t v147 = 0;
  int v148 = -1;
  uint64_t v145 = 0;
  int v146 = -1;
  uint64_t v143 = 0;
  int v144 = -1;
  uint64_t v141 = 0;
  int v142 = -1;
  uint64_t v139 = 0;
  int v140 = -1;
  uint64_t v137 = 0;
  int v138 = -1;
  uint64_t v135 = 0;
  int v136 = -1;
  *(void *)&long long v117 = &v141;
  *((void *)&v117 + 1) = &v139;
  google::protobuf::strings::SubstituteAndAppend(v61, "$0}\n", (uint64_t)v155, (uint64_t)&v152, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, (uint64_t)&v143, v117, (uint64_t)&v137, (uint64_t)&v135);
  std::__tree<std::__value_type<unsigned long,void *>,std::__map_value_compare<unsigned long,std::__value_type<unsigned long,void *>,std::less<unsigned long>,true>,std::allocator<std::__value_type<unsigned long,void *>>>::destroy((uint64_t)&v121, v122);
  if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v133.__r_.__value_.__l.__data_);
  }
  size_t v103 = (void **)v129[0];
  if (v129[0])
  {
    int v104 = (void **)v129[1];
    __n128 v105 = v129[0];
    if (v129[1] != v129[0])
    {
      do
      {
        if (*((char *)v104 - 1) < 0) {
          operator delete(*(v104 - 3));
        }
        v104 -= 3;
      }
      while (v104 != v103);
      __n128 v105 = v129[0];
    }
    v129[1] = v103;
    operator delete(v105);
  }
  if (SHIBYTE(v128) < 0)
  {
    operator delete(v127[1]);
    if ((SHIBYTE(v127[0]) & 0x80000000) == 0)
    {
LABEL_178:
      if ((SHIBYTE(__b.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_182:
      operator delete(__b.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((SHIBYTE(v127[0]) & 0x80000000) == 0)
  {
    goto LABEL_178;
  }
  operator delete(v126[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_182;
  }
}

void sub_23CDCB218(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void **a40,void **a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a40)
  {
    uint64_t v56 = a41;
    uint64_t v57 = a40;
    if (a41 != a40)
    {
      do
      {
        if (*((char *)v56 - 1) < 0) {
          operator delete(*(v56 - 3));
        }
        v56 -= 3;
      }
      while (v56 != a40);
      uint64_t v57 = a40;
    }
    operator delete(v57);
    if ((a39 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((a39 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a34);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if (a55 < 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a28);
  if (a55 < 0)
  {
LABEL_5:
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
LABEL_15:
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::DebugString(google::protobuf::FieldDescriptor *this, int a2, std::string *a3, uint64_t a4)
{
  uint64_t v88 = *MEMORY[0x263EF8340];
  if (a2 < 0) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v8 = 2 * a2;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    p_b = (std::string *)operator new(v11 + 1);
    __b.__r_.__value_.__l.__size_ = v8;
    __b.__r_.__value_.__r.__words[2] = v12 | 0x8000000000000000;
    __b.__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
LABEL_9:
    memset(p_b, 32, v8);
    p_b->__r_.__value_.__s.__data_[v8] = 0;
    memset(&__p, 0, sizeof(__p));
    uint64_t v10 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (!v10) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  *((unsigned char *)&__b.__r_.__value_.__s + 23) = 2 * a2;
  p_b = &__b;
  if (a2) {
    goto LABEL_9;
  }
  __b.__r_.__value_.__s.__data_[0] = 0;
  memset(&__p, 0, sizeof(__p));
  uint64_t v10 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (!v10) {
    goto LABEL_12;
  }
LABEL_10:
  int v85 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
  int v83 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
  if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
  {
    v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v85;
    v62.__r_.__value_.__l.__size_ = (std::string::size_type)&v83;
    v87[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
    std::__call_once(v10, v87, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
  }
LABEL_12:
  if (*((_DWORD *)this + 14) == 11 && (uint64_t v13 = *((void *)this + 13), *(unsigned char *)(*(void *)(v13 + 32) + 75)))
  {
    uint64_t v14 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v14)
    {
      int v83 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
      if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
      {
        v87[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v87[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v83;
        int v85 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v87;
        std::__call_once(v14, &v85, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      uint64_t v13 = *((void *)this + 13);
    }
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString(*(google::protobuf::FieldDescriptor **)(v13 + 40), &v59);
    int v15 = v59;
    if ((v61 & 0x80u) == 0) {
      int v15 = &v59;
    }
    v62.__r_.__value_.__r.__words[0] = (std::string::size_type)v15;
    int v16 = v61;
    if ((v61 & 0x80u) != 0) {
      int v16 = v60;
    }
    LODWORD(v62.__r_.__value_.__r.__words[1]) = v16;
    uint64_t v17 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v17)
    {
      uint64_t v81 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
      if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
      {
        int v85 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
        uint64_t v86 = &v81;
        int v83 = &v85;
        std::__call_once(v17, &v83, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)(*(void *)(*((void *)this + 13) + 40) + 152), &v56);
    int v18 = (std::string *)v56.__r_.__value_.__r.__words[0];
    if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v18 = &v56;
    }
    v87[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
    int v19 = HIBYTE(v56.__r_.__value_.__r.__words[2]);
    if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v19 = v56.__r_.__value_.__r.__words[1];
    }
    LODWORD(v87[0].__r_.__value_.__r.__words[1]) = v19;
    int v85 = 0;
    LODWORD(v86) = -1;
    int v83 = 0;
    int v84 = -1;
    uint64_t v81 = 0;
    int v82 = -1;
    int v79 = 0;
    LODWORD(v80) = -1;
    int v77 = 0;
    int v78 = -1;
    int v75 = 0;
    int v76 = -1;
    uint64_t v73 = 0;
    int v74 = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    *(void *)&long long v52 = &v77;
    *((void *)&v52 + 1) = &v75;
    google::protobuf::strings::SubstituteAndAppend(&__p, "map<$0, $1>", (uint64_t)&v62, (uint64_t)v87, (uint64_t)&v85, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, v52, (uint64_t)&v73, (uint64_t)&v71);
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v56.__r_.__value_.__l.__data_);
      if ((char)v61 < 0) {
LABEL_150:
      }
        operator delete(v59);
    }
    else if ((char)v61 < 0)
    {
      goto LABEL_150;
    }
  }
  else
  {
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString(this, &v62);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v62;
  }
  v62.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::kLabelToName[*((unsigned int *)this + 15)];
  v62.__r_.__value_.__l.__size_ = strlen(v62.__r_.__value_.__l.__data_);
  v87[0].__r_.__value_.__r.__words[0] = (std::string::size_type)" ";
  v87[0].__r_.__value_.__l.__size_ = 1;
  google::protobuf::StrCat((uint64_t)&v62, (uint64_t)v87, &v56);
  int v20 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v20)
  {
    int v85 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    int v83 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
    if (atomic_load_explicit((atomic_ullong *volatile)v20, memory_order_acquire) != -1)
    {
      v62.__r_.__value_.__r.__words[0] = (std::string::size_type)&v85;
      v62.__r_.__value_.__l.__size_ = (std::string::size_type)&v83;
      v87[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
      std::__call_once(v20, v87, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)this + 14) == 11 && *(unsigned char *)(*(void *)(*((void *)this + 13) + 32) + 75)
    || *((void *)this + 11)
    || *((_DWORD *)this + 15) == 1 && !*((unsigned char *)this + 65) && *(_DWORD *)(*((void *)this + 5) + 60) != 2)
  {
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
    {
      *v56.__r_.__value_.__l.__data_ = 0;
      v56.__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v56.__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&v56.__r_.__value_.__s + 23) = 0;
    }
  }
  uint64_t v67 = 0;
  long long v66 = 0u;
  long long v65 = 0u;
  long long v64 = 0u;
  long long v63 = 0u;
  __int16 v68 = *(_WORD *)a4;
  char v69 = *(unsigned char *)(a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v70, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  }
  else {
    std::string v70 = __b;
  }
  if (*(unsigned char *)a4)
  {
    memset(v87, 0, 24);
    google::protobuf::FieldDescriptor::GetLocationPath((uint64_t)this, &v87[0].__r_.__value_.__l.__data_);
    std::string::value_type SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*((void *)this + 5), v87, (uint64_t)&v62.__r_.__value_.__l.__size_);
    if (v87[0].__r_.__value_.__r.__words[0])
    {
      v87[0].__r_.__value_.__l.__size_ = v87[0].__r_.__value_.__r.__words[0];
      operator delete(v87[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string::value_type SourceLocation = 0;
  }
  v62.__r_.__value_.__s.__data_[0] = SourceLocation;
  int v23 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  uint64_t v24 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v24 = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  v87[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v24;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v23 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v87[0].__r_.__value_.__r.__words[1]) = v23;
  int v25 = HIBYTE(v56.__r_.__value_.__r.__words[2]);
  uint64_t v26 = &v56;
  if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v26 = (std::string *)v56.__r_.__value_.__r.__words[0];
  }
  int v85 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v26;
  if ((v56.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v25 = v56.__r_.__value_.__r.__words[1];
  }
  LODWORD(v86) = v25;
  int v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  p_p = &__p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  int v83 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))p_p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v27 = __p.__r_.__value_.__r.__words[1];
  }
  int v84 = v27;
  uint64_t v29 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v29)
  {
    int v75 = google::protobuf::FieldDescriptor::TypeOnceInit;
    uint64_t v73 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v29, memory_order_acquire) != -1)
    {
      int v79 = (const char *)&v75;
      int v80 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&v73;
      int v77 = &v79;
      std::__call_once(v29, &v77, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  uint64_t v30 = this;
  if (*((_DWORD *)this + 14) == 10)
  {
    int v31 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v31)
    {
      int v75 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
      if (atomic_load_explicit((atomic_ullong *volatile)v31, memory_order_acquire) != -1)
      {
        int v79 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
        int v80 = &v75;
        int v77 = &v79;
        std::__call_once(v31, &v77, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    uint64_t v30 = (google::protobuf::FieldDescriptor *)*((void *)this + 13);
  }
  unint64_t v32 = *(uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v30;
  int v33 = *((char *)v32 + 23);
  uint64_t v34 = *((void *)v32 + 1);
  if (v33 < 0) {
    unint64_t v32 = *(uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v32;
  }
  uint64_t v81 = v32;
  int v35 = v33;
  if (v33 < 0) {
    int v35 = v34;
  }
  int v82 = v35;
  int v79 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)this + 17), (unsigned char *)&v80 + 4, v22);
  LODWORD(v80) = strlen(v79);
  int v77 = 0;
  int v78 = -1;
  int v75 = 0;
  int v76 = -1;
  uint64_t v73 = 0;
  int v74 = -1;
  uint64_t v71 = 0;
  int v72 = -1;
  char v59 = 0;
  LODWORD(v60) = -1;
  *(void *)&long long v53 = &v75;
  *((void *)&v53 + 1) = &v73;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0$1$2 $3 = $4", (uint64_t)v87, (uint64_t)&v85, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v53, (uint64_t)&v71, (uint64_t)&v59);
  if (*((unsigned char *)this + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString(this, (char *)1, v36, &v55);
    uint64_t v37 = (std::string *)v55.__r_.__value_.__r.__words[0];
    if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v37 = &v55;
    }
    v87[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v37;
    int v38 = HIBYTE(v55.__r_.__value_.__r.__words[2]);
    if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v38 = v55.__r_.__value_.__r.__words[1];
    }
    LODWORD(v87[0].__r_.__value_.__r.__words[1]) = v38;
    int v85 = 0;
    LODWORD(v86) = -1;
    int v83 = 0;
    int v84 = -1;
    uint64_t v81 = 0;
    int v82 = -1;
    int v79 = 0;
    LODWORD(v80) = -1;
    int v77 = 0;
    int v78 = -1;
    int v75 = 0;
    int v76 = -1;
    uint64_t v73 = 0;
    int v74 = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    char v59 = 0;
    LODWORD(v60) = -1;
    *(void *)&long long v54 = &v75;
    *((void *)&v54 + 1) = &v73;
    google::protobuf::strings::SubstituteAndAppend(a3, " [default = $0", (uint64_t)v87, (uint64_t)&v85, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v54, (uint64_t)&v71, (uint64_t)&v59);
    if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v55.__r_.__value_.__l.__data_);
      if (!*((unsigned char *)this + 66))
      {
LABEL_99:
        int v43 = 1;
        goto LABEL_100;
      }
    }
    else if (!*((unsigned char *)this + 66))
    {
      goto LABEL_99;
    }
    unint64_t v39 = ", ";
LABEL_90:
    std::string::append(a3, v39);
    std::string::append(a3, "json_name = \"");
    google::protobuf::CEscape(*((void *)this + 4), v40, v87);
    if ((v87[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v41 = v87;
    }
    else {
      uint64_t v41 = (std::string *)v87[0].__r_.__value_.__r.__words[0];
    }
    if ((v87[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v87[0].__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v87[0].__r_.__value_.__l.__size_;
    }
    std::string::append(a3, (const std::string::value_type *)v41, size);
    if (SHIBYTE(v87[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v87[0].__r_.__value_.__l.__data_);
    }
    std::string::append(a3, "\"");
    goto LABEL_99;
  }
  if (*((unsigned char *)this + 66))
  {
    unint64_t v39 = "[";
    goto LABEL_90;
  }
  int v43 = 0;
LABEL_100:
  memset(v87, 0, 24);
  {
    if (v43) {
      long long v44 = ", ";
    }
    else {
      long long v44 = " [";
    }
    std::string::append(a3, v44);
    if ((v87[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v45 = v87;
    }
    else {
      int v45 = (std::string *)v87[0].__r_.__value_.__r.__words[0];
    }
    if ((v87[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v46 = HIBYTE(v87[0].__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v46 = v87[0].__r_.__value_.__l.__size_;
    }
    std::string::append(a3, (const std::string::value_type *)v45, v46);
    goto LABEL_112;
  }
  if (v43) {
LABEL_112:
  }
    std::string::append(a3, "]");
  unint64_t v47 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v47)
  {
    uint64_t v81 = google::protobuf::FieldDescriptor::TypeOnceInit;
    int v79 = (const char *)this;
    if (atomic_load_explicit((atomic_ullong *volatile)v47, memory_order_acquire) != -1)
    {
      int v85 = &v81;
      uint64_t v86 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&v79;
      int v83 = &v85;
      std::__call_once(v47, &v83, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)this + 14) != 10)
  {
    long long v48 = ";\n";
    goto LABEL_120;
  }
  if (*(unsigned char *)(a4 + 1))
  {
    long long v48 = " { ... };\n";
LABEL_120:
    std::string::append(a3, v48);
    goto LABEL_121;
  }
  uint64_t v51 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v51)
  {
    uint64_t v81 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
    if (atomic_load_explicit((atomic_ullong *volatile)v51, memory_order_acquire) != -1)
    {
      int v85 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
      uint64_t v86 = &v81;
      int v83 = &v85;
      std::__call_once(v51, &v83, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  google::protobuf::Descriptor::DebugString(*((uint64_t **)this + 13), a2, a3, a4, 0);
LABEL_121:
  if (SHIBYTE(v87[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v87[0].__r_.__value_.__l.__data_);
    if ((SHIBYTE(v70.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_123:
      unint64_t v49 = (void **)v66;
      if ((void)v66) {
        goto LABEL_124;
      }
LABEL_138:
      if ((SHIBYTE(v65) & 0x80000000) == 0) {
        goto LABEL_139;
      }
      goto LABEL_126;
    }
  }
  else if ((SHIBYTE(v70.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_123;
  }
  operator delete(v70.__r_.__value_.__l.__data_);
  unint64_t v49 = (void **)v66;
  if (!(void)v66) {
    goto LABEL_138;
  }
LABEL_124:
  uint64_t v50 = (void **)*((void *)&v66 + 1);
  if (*((void ***)&v66 + 1) != v49)
  {
    do
    {
      if (*((char *)v50 - 1) < 0) {
        operator delete(*(v50 - 3));
      }
      v50 -= 3;
    }
    while (v50 != v49);
    *((void *)&v66 + 1) = v49;
    operator delete((void *)v66);
    if ((SHIBYTE(v65) & 0x80000000) == 0) {
      goto LABEL_139;
    }
LABEL_126:
    operator delete(*((void **)&v64 + 1));
    if (SBYTE7(v64) < 0) {
      goto LABEL_127;
    }
    goto LABEL_140;
  }
  *((void *)&v66 + 1) = v49;
  operator delete(v49);
  if (SHIBYTE(v65) < 0) {
    goto LABEL_126;
  }
LABEL_139:
  if (SBYTE7(v64) < 0)
  {
LABEL_127:
    operator delete((void *)v63);
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_128;
    }
    goto LABEL_141;
  }
LABEL_140:
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
  {
LABEL_128:
    operator delete(v56.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_129;
    }
LABEL_142:
    if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_130;
    }
    return;
  }
LABEL_141:
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_142;
  }
LABEL_129:
  operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
LABEL_130:
  }
    operator delete(__b.__r_.__value_.__l.__data_);
}

void sub_23CDCBE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _Unwind_Exception *exception_object, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::OneofDescriptor::DebugString(int *a1, int a2, std::string *a3, __int16 *a4)
{
  uint64_t v57 = *MEMORY[0x263EF8340];
  if (a2 < 0) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v8 = 2 * a2;
  if (v8 >= 0x17)
  {
    uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v10 = v8 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_b = (std::string *)operator new(v10 + 1);
    __b.__r_.__value_.__l.__size_ = v8;
    __b.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
    __b.__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
    goto LABEL_8;
  }
  *((unsigned char *)&__b.__r_.__value_.__s + 23) = 2 * a2;
  p_b = &__b;
  if (a2) {
LABEL_8:
  }
    memset(p_b, 32, v8);
  p_b->__r_.__value_.__s.__data_[v8] = 0;
  uint64_t v33 = 0;
  *(_OWORD *)unint64_t v32 = 0u;
  long long v31 = 0u;
  *(_OWORD *)uint64_t v30 = 0u;
  *(_OWORD *)uint64_t v29 = 0u;
  __int16 v34 = *a4;
  char v35 = *((unsigned char *)a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&__p, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = __b;
  }
  if (*(unsigned char *)a4)
  {
    memset(v56, 0, 24);
    google::protobuf::OneofDescriptor::GetLocationPath((uint64_t)a1, &v56[0].__r_.__value_.__l.__data_);
    char SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(*((void *)a1 + 2) + 16), v56, (uint64_t)&v28);
    if (v56[0].__r_.__value_.__r.__words[0])
    {
      v56[0].__r_.__value_.__l.__size_ = v56[0].__r_.__value_.__r.__words[0];
      operator delete(v56[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    char SourceLocation = 0;
  }
  v27[0] = SourceLocation;
  int v13 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  uint64_t v14 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v14 = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  v56[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v13 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v56[0].__r_.__value_.__r.__words[1]) = v13;
  int v15 = *(uint64_t **)a1;
  int v16 = *(char *)(*(void *)a1 + 23);
  uint64_t v17 = *(void *)(*(void *)a1 + 8);
  if (v16 < 0) {
    int v15 = **(uint64_t ***)a1;
  }
  long long v54 = v15;
  int v18 = v16;
  if (v16 < 0) {
    int v18 = v17;
  }
  int v55 = v18;
  uint64_t v52 = 0;
  int v53 = -1;
  uint64_t v50 = 0;
  int v51 = -1;
  uint64_t v48 = 0;
  int v49 = -1;
  uint64_t v46 = 0;
  int v47 = -1;
  uint64_t v44 = 0;
  int v45 = -1;
  uint64_t v42 = 0;
  int v43 = -1;
  uint64_t v40 = 0;
  int v41 = -1;
  uint64_t v38 = 0;
  int v39 = -1;
  *(void *)&long long v25 = &v44;
  *((void *)&v25 + 1) = &v42;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0oneof $1 {", (uint64_t)v56, (uint64_t)&v54, (uint64_t)&v52, (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, v25, (uint64_t)&v40, (uint64_t)&v38);
  if (*((unsigned char *)a4 + 2))
  {
    std::string::append(a3, " ... }\n");
  }
  else
  {
    std::string::append(a3, "\n");
    if (a1[6] >= 1)
    {
      uint64_t v19 = 0;
      do
        google::protobuf::FieldDescriptor::DebugString(*(google::protobuf::FieldDescriptor **)(*((void *)a1 + 4)
                                                                                             + 8 * v19++));
      while (v19 < a1[6]);
    }
    int v20 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    int v21 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v21 = (std::string *)__b.__r_.__value_.__r.__words[0];
    }
    v56[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v21;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v20 = __b.__r_.__value_.__r.__words[1];
    }
    LODWORD(v56[0].__r_.__value_.__r.__words[1]) = v20;
    long long v54 = 0;
    int v55 = -1;
    uint64_t v52 = 0;
    int v53 = -1;
    uint64_t v50 = 0;
    int v51 = -1;
    uint64_t v48 = 0;
    int v49 = -1;
    uint64_t v46 = 0;
    int v47 = -1;
    uint64_t v44 = 0;
    int v45 = -1;
    uint64_t v42 = 0;
    int v43 = -1;
    uint64_t v40 = 0;
    int v41 = -1;
    uint64_t v38 = 0;
    int v39 = -1;
    *(void *)&long long v26 = &v44;
    *((void *)&v26 + 1) = &v42;
    google::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)v56, (uint64_t)&v54, (uint64_t)&v52, (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, v26, (uint64_t)&v40, (uint64_t)&v38);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v22 = (void **)v32[0];
  if (v32[0])
  {
    int v23 = (void **)v32[1];
    uint64_t v24 = v32[0];
    if (v32[1] != v32[0])
    {
      do
      {
        if (*((char *)v23 - 1) < 0) {
          operator delete(*(v23 - 3));
        }
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v24 = v32[0];
    }
    v32[1] = v22;
    operator delete(v24);
  }
  if (SHIBYTE(v31) < 0)
  {
    operator delete(v30[1]);
    if ((SHIBYTE(v30[0]) & 0x80000000) == 0)
    {
LABEL_46:
      if ((SHIBYTE(__b.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_50:
      operator delete(__b.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((SHIBYTE(v30[0]) & 0x80000000) == 0)
  {
    goto LABEL_46;
  }
  operator delete(v29[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_50;
  }
}

void sub_23CDCC4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if ((a43 & 0x80000000) == 0) {
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptor::DebugStringWithOptions(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (*(unsigned char *)(a1 + 67))
  {
    unint64_t v6 = *(uint64_t **)(*(void *)(a1 + 80) + 8);
    int v7 = *((char *)v6 + 23);
    uint64_t v8 = v6[1];
    if (v7 < 0) {
      unint64_t v6 = (uint64_t *)*v6;
    }
    uint64_t v30 = v6;
    int v9 = v7;
    if (v7 < 0) {
      int v9 = v8;
    }
    int v31 = v9;
    uint64_t v28 = 0;
    int v29 = -1;
    uint64_t v26 = 0;
    int v27 = -1;
    uint64_t v24 = 0;
    int v25 = -1;
    uint64_t v22 = 0;
    int v23 = -1;
    uint64_t v20 = 0;
    int v21 = -1;
    uint64_t v18 = 0;
    int v19 = -1;
    uint64_t v16 = 0;
    int v17 = -1;
    uint64_t v14 = 0;
    int v15 = -1;
    uint64_t v12 = 0;
    int v13 = -1;
    *(void *)&long long v11 = &v18;
    *((void *)&v11 + 1) = &v16;
    google::protobuf::strings::SubstituteAndAppend(a3, "extend .$0 {\n", (uint64_t)&v30, (uint64_t)&v28, (uint64_t)&v26, (uint64_t)&v24, (uint64_t)&v22, (uint64_t)&v20, v11, (uint64_t)&v14, (uint64_t)&v12);
    int v10 = 1;
  }
  else
  {
    int v10 = 0;
  }
  google::protobuf::FieldDescriptor::DebugString((google::protobuf::FieldDescriptor *)a1, v10, a3, a2);
  if (*(unsigned char *)(a1 + 67)) {
    std::string::append(a3, "}\n");
  }
}

void sub_23CDCC708(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

unint64_t google::protobuf::FieldDescriptor::FieldTypeNameDebugString@<X0>(google::protobuf::FieldDescriptor *this@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v4)
  {
    int v15 = this;
    uint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      uint64_t v18 = &v16;
      int v19 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&v15;
      int v17 = &v18;
      std::__call_once(v4, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v5 = *((_DWORD *)this + 14);
  if (v5 == 14)
  {
    int v7 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v7)
    {
      uint64_t v16 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        uint64_t v18 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
        int v19 = &v16;
        int v17 = &v18;
        std::__call_once(v7, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    return std::operator+<char>();
  }
  if (v5 == 11)
  {
    unint64_t v6 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v6)
    {
      uint64_t v16 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
      if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
      {
        uint64_t v18 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
        int v19 = &v16;
        int v17 = &v18;
        std::__call_once(v6, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    return std::operator+<char>();
  }
  int v9 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v9)
  {
    int v15 = this;
    uint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v18 = &v16;
      int v19 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&v15;
      int v17 = &v18;
      std::__call_once(v9, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v5 = *((_DWORD *)this + 14);
  }
  int v10 = google::protobuf::FieldDescriptor::kTypeToName[v5];
  unint64_t result = strlen(v10);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v11 = result;
  if (result >= 0x17)
  {
    uint64_t v12 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v12 = result | 7;
    }
    uint64_t v13 = v12 + 1;
    uint64_t v14 = operator new(v12 + 1);
    a2[1] = v11;
    a2[2] = v13 | 0x8000000000000000;
    *a2 = v14;
    a2 = v14;
  }
  else
  {
    *((unsigned char *)a2 + 23) = result;
    if (!result)
    {
      *(unsigned char *)a2 = 0;
      return result;
    }
  }
  unint64_t result = (unint64_t)memmove(a2, v10, v11);
  *((unsigned char *)a2 + v11) = 0;
  return result;
}

BOOL google::protobuf::anonymous namespace'::FormatBracketedOptions(int a1, google::protobuf::Message *a2, uint64_t a3, std::string *a4)
{
  memset(&v12, 0, sizeof(v12));
  {
    google::protobuf::Join<std::vector<std::string>>(&v12, ", ", &__p);
    int v5 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
       ? &__p
       : (std::string *)__p.__r_.__value_.__r.__words[0];
    std::string::size_type v6 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
       ? HIBYTE(__p.__r_.__value_.__r.__words[2])
       : __p.__r_.__value_.__l.__size_;
    std::string::append(a4, (const std::string::value_type *)v5, v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  long long v7 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
  if (v12.__r_.__value_.__r.__words[0])
  {
    uint64_t v8 = (void *)v12.__r_.__value_.__r.__words[0];
    if (v12.__r_.__value_.__r.__words[0] != v12.__r_.__value_.__l.__size_)
    {
      std::string::size_type size = v12.__r_.__value_.__l.__size_;
      do
      {
        if (*(char *)(size - 1) < 0) {
          operator delete(*(void **)(size - 24));
        }
        size -= 24;
      }
      while (size != (void)v7);
      uint64_t v8 = (void *)v12.__r_.__value_.__r.__words[0];
    }
    v12.__r_.__value_.__l.__size_ = v7;
    operator delete(v8);
  }
  return (void)v7 != *((void *)&v7 + 1);
}

void sub_23CDCCA54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    operations_research::glop::StrictITIVector<gtl::IntType<operations_research::glop::ColIndex_tag_,int>,std::string>::~StrictITIVector(&a15);
    _Unwind_Resume(a1);
  }
  operations_research::glop::StrictITIVector<gtl::IntType<operations_research::glop::ColIndex_tag_,int>,std::string>::~StrictITIVector(&a15);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueDescriptor::DebugString(uint64_t ***a1, int a2, std::string *a3, __int16 *a4)
{
  uint64_t v58 = *MEMORY[0x263EF8340];
  if (a2 < 0) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  std::string::size_type v8 = 2 * a2;
  if (v8 >= 0x17)
  {
    uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v10 = v8 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_b = (std::string *)operator new(v10 + 1);
    __b.__r_.__value_.__l.__size_ = v8;
    __b.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
    __b.__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
    goto LABEL_8;
  }
  *((unsigned char *)&__b.__r_.__value_.__s + 23) = 2 * a2;
  p_b = &__b;
  if (a2) {
LABEL_8:
  }
    memset(p_b, 32, v8);
  p_b->__r_.__value_.__s.__data_[v8] = 0;
  uint64_t v33 = 0;
  *(_OWORD *)uint64_t v32 = 0u;
  long long v31 = 0u;
  *(_OWORD *)uint64_t v30 = 0u;
  *(_OWORD *)int v29 = 0u;
  __int16 v34 = *a4;
  char v35 = *((unsigned char *)a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v36, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  }
  else {
    std::string v36 = __b;
  }
  if (*(unsigned char *)a4)
  {
    memset(v57, 0, 24);
    google::protobuf::EnumValueDescriptor::GetLocationPath((uint64_t)a1, &v57[0].__r_.__value_.__l.__data_);
    char SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation((uint64_t)a1[3][2], v57, (uint64_t)&v28);
    if (v57[0].__r_.__value_.__r.__words[0])
    {
      v57[0].__r_.__value_.__l.__size_ = v57[0].__r_.__value_.__r.__words[0];
      operator delete(v57[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    char SourceLocation = 0;
  }
  v27[0] = SourceLocation;
  int v14 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  int v15 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v15 = (std::string *)__b.__r_.__value_.__r.__words[0];
  }
  v57[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v15;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v14 = __b.__r_.__value_.__r.__words[1];
  }
  LODWORD(v57[0].__r_.__value_.__r.__words[1]) = v14;
  uint64_t v16 = (uint64_t *)*a1;
  int v17 = *((char *)*a1 + 23);
  uint64_t v18 = (*a1)[1];
  if (v17 < 0) {
    uint64_t v16 = **a1;
  }
  int v55 = v16;
  int v19 = v17;
  if (v17 < 0) {
    int v19 = (int)v18;
  }
  int v56 = v19;
  uint64_t v52 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a1 + 4), v54, v13);
  int v53 = strlen(v52);
  uint64_t v50 = 0;
  int v51 = -1;
  uint64_t v48 = 0;
  int v49 = -1;
  uint64_t v46 = 0;
  int v47 = -1;
  uint64_t v44 = 0;
  int v45 = -1;
  uint64_t v42 = 0;
  int v43 = -1;
  uint64_t v40 = 0;
  int v41 = -1;
  uint64_t v38 = 0;
  int v39 = -1;
  *(void *)&long long v24 = &v44;
  *((void *)&v24 + 1) = &v42;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0$1 = $2", (uint64_t)v57, (uint64_t)&v55, (uint64_t)&v52, (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, v24, (uint64_t)&v40, (uint64_t)&v38);
  memset(&__p, 0, sizeof(__p));
  {
    int v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    v57[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v20 = __p.__r_.__value_.__r.__words[1];
    }
    LODWORD(v57[0].__r_.__value_.__r.__words[1]) = v20;
    int v55 = 0;
    int v56 = -1;
    uint64_t v52 = 0;
    int v53 = -1;
    uint64_t v50 = 0;
    int v51 = -1;
    uint64_t v48 = 0;
    int v49 = -1;
    uint64_t v46 = 0;
    int v47 = -1;
    uint64_t v44 = 0;
    int v45 = -1;
    uint64_t v42 = 0;
    int v43 = -1;
    uint64_t v40 = 0;
    int v41 = -1;
    uint64_t v38 = 0;
    int v39 = -1;
    *(void *)&long long v25 = &v44;
    *((void *)&v25 + 1) = &v42;
    google::protobuf::strings::SubstituteAndAppend(a3, " [$0]", (uint64_t)v57, (uint64_t)&v55, (uint64_t)&v52, (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, v25, (uint64_t)&v40, (uint64_t)&v38);
  }
  std::string::append(a3, ";\n");
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_32:
      uint64_t v22 = (void **)v32[0];
      if (!v32[0]) {
        goto LABEL_33;
      }
LABEL_39:
      int v23 = (void **)v32[1];
      if (v32[1] == v22)
      {
        v32[1] = v22;
        operator delete(v22);
        if (SHIBYTE(v31) < 0) {
          goto LABEL_46;
        }
      }
      else
      {
        do
        {
          if (*((char *)v23 - 1) < 0) {
            operator delete(*(v23 - 3));
          }
          v23 -= 3;
        }
        while (v23 != v22);
        v32[1] = v22;
        operator delete(v32[0]);
        if (SHIBYTE(v31) < 0) {
          goto LABEL_46;
        }
      }
LABEL_34:
      if ((SHIBYTE(v30[0]) & 0x80000000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_47;
    }
  }
  else if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_32;
  }
  operator delete(v36.__r_.__value_.__l.__data_);
  uint64_t v22 = (void **)v32[0];
  if (v32[0]) {
    goto LABEL_39;
  }
LABEL_33:
  if ((SHIBYTE(v31) & 0x80000000) == 0) {
    goto LABEL_34;
  }
LABEL_46:
  operator delete(v30[1]);
  if ((SHIBYTE(v30[0]) & 0x80000000) == 0)
  {
LABEL_35:
    if ((SHIBYTE(__b.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_48:
    operator delete(__b.__r_.__value_.__l.__data_);
    return;
  }
LABEL_47:
  operator delete(v29[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
}

void sub_23CDCCEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void **a35,void **a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (a35)
  {
    int v51 = a36;
    uint64_t v52 = a35;
    if (a36 != a35)
    {
      do
      {
        if (*((char *)v51 - 1) < 0) {
          operator delete(*(v51 - 3));
        }
        v51 -= 3;
      }
      while (v51 != a35);
      uint64_t v52 = a35;
    }
    operator delete(v52);
    if ((a34 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a28 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((a34 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a29);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_4:
    if (a50 < 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a23);
  if (a50 < 0)
  {
LABEL_5:
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
LABEL_15:
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptor::GetSourceLocation(uint64_t a1, std::string *a2, uint64_t a3)
{
  if (a3)
  {
    std::string::size_type v6 = *(char **)(a1 + 152);
    if (!v6) {
      return 0;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 2977);
    long long v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: out_location != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    std::string::size_type v6 = *(char **)(a1 + 152);
    if (!v6) {
      return 0;
    }
  }
  uint64_t SourceLocation = google::protobuf::FileDescriptorTables::GetSourceLocation(*(void *)(a1 + 144), a2, v6);
  if (!SourceLocation) {
    return 0;
  }
  uint64_t v9 = SourceLocation;
  uint64_t v10 = SourceLocation + 48;
  if ((*(_DWORD *)(SourceLocation + 48) - 3) >= 2) {
    return 0;
  }
  *(_DWORD *)a3 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(SourceLocation + 48, 0);
  *(_DWORD *)(a3 + 8) = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v10, 1);
  *(_DWORD *)(a3 + 4) = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v10, 2 * (*(_DWORD *)(v9 + 48) != 3));
  *(_DWORD *)(a3 + 12) = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v10, *(_DWORD *)(v9 + 48) - 1);
  std::string::operator=((std::string *)(a3 + 16), *(const std::string **)(v9 + 96));
  std::string::operator=((std::string *)(a3 + 40), *(const std::string **)(v9 + 104));
  uint64_t v11 = *(void *)(v9 + 88);
  if (v11) {
    std::string v12 = (const std::string **)(v11 + 8);
  }
  else {
    std::string v12 = 0;
  }
  std::vector<std::string>::__assign_with_size[abi:ne180100]<google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>>(a3 + 64, v12, &v12[*(int *)(v9 + 80)], *(int *)(v9 + 80));
  return 1;
}

void sub_23CDCD17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDCD190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::FieldDescriptor::is_packed(google::protobuf::FieldDescriptor *this)
{
  if (*((_DWORD *)this + 15) != 3) {
    return 0;
  }
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    int v5 = this;
    std::string::size_type v6 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v8[0] = &v6;
      v8[1] = &v5;
      long long v7 = v8;
      std::__call_once(v2, &v7, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)this + 14) - 13) > 0xFFFFFFFB) {
    return 0;
  }
  uint64_t v3 = *((void *)this + 15);
  if (*(_DWORD *)(*((void *)this + 5) + 60) == 2)
  {
    if (!v3) {
      return 0;
    }
  }
  else if (!v3 || (*(unsigned char *)(v3 + 40) & 2) == 0)
  {
    return 1;
  }
  return *(unsigned char *)(v3 + 76) != 0;
}

void google::protobuf::Descriptor::GetLocationPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    uint64_t v9 = *(char **)(a2 + 8);
    unint64_t v8 = *(void *)(a2 + 16);
    if ((unint64_t)v9 >= v8)
    {
      int v17 = *(char **)a2;
      uint64_t v18 = (uint64_t)&v9[-*(void *)a2];
      uint64_t v19 = v18 >> 2;
      unint64_t v20 = (v18 >> 2) + 1;
      if (v20 >> 62) {
        goto LABEL_95;
      }
      uint64_t v21 = v8 - (void)v17;
      if (v21 >> 1 > v20) {
        unint64_t v20 = v21 >> 1;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        if (v22 >> 62) {
          goto LABEL_96;
        }
        int v23 = operator new(4 * v22);
      }
      else
      {
        int v23 = 0;
      }
      uint64_t v52 = &v23[4 * v19];
      int v53 = &v23[4 * v22];
      *uint64_t v52 = 4;
      long long v7 = (char *)(v52 + 1);
      if (v9 != v17)
      {
        unint64_t v54 = v9 - v17 - 4;
        if (v54 < 0x2C) {
          goto LABEL_99;
        }
        if ((unint64_t)(v9 - &v23[v18]) < 0x20) {
          goto LABEL_99;
        }
        uint64_t v55 = (v54 >> 2) + 1;
        uint64_t v56 = 4 * (v55 & 0x7FFFFFFFFFFFFFF8);
        uint64_t v57 = &v9[-v56];
        uint64_t v52 = (_DWORD *)((char *)v52 - v56);
        uint64_t v58 = &v23[4 * v19 - 16];
        char v59 = v9 - 16;
        uint64_t v60 = v55 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v61 = *(_OWORD *)v59;
          *(v58 - 1) = *((_OWORD *)v59 - 1);
          _OWORD *v58 = v61;
          v58 -= 2;
          v59 -= 32;
          v60 -= 8;
        }
        while (v60);
        uint64_t v9 = v57;
        if (v55 != (v55 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_99:
          do
          {
            int v62 = *((_DWORD *)v9 - 1);
            v9 -= 4;
            *--uint64_t v52 = v62;
          }
          while (v9 != v17);
        }
      }
      *(void *)a2 = v52;
      *(void *)(a2 + 8) = v7;
      *(void *)(a2 + 16) = v53;
      if (v17) {
        operator delete(v17);
      }
    }
    else
    {
      *(_DWORD *)uint64_t v9 = 4;
      long long v7 = v9 + 4;
    }
    *(void *)(a2 + 8) = v7;
    uint64_t v63 = *(void *)(a1 + 24);
    if (v63) {
      long long v64 = (void *)(v63 + 56);
    }
    else {
      long long v64 = (void *)(*(void *)(a1 + 16) + 104);
    }
    int v37 = 954437177 * ((unint64_t)(a1 - *v64) >> 4);
    unint64_t v65 = *(void *)(a2 + 16);
    if ((unint64_t)v7 >= v65)
    {
      int v39 = *(char **)a2;
      uint64_t v66 = (uint64_t)&v7[-*(void *)a2];
      uint64_t v67 = v66 >> 2;
      unint64_t v68 = (v66 >> 2) + 1;
      if (!(v68 >> 62))
      {
        uint64_t v69 = v65 - (void)v39;
        if (v69 >> 1 > v68) {
          unint64_t v68 = v69 >> 1;
        }
        if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v70 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v70 = v68;
        }
        if (v70)
        {
          if (v70 >> 62) {
            goto LABEL_96;
          }
          uint64_t v71 = operator new(4 * v70);
          uint64_t v46 = &v71[4 * v67];
          int v47 = &v71[4 * v70];
          _DWORD *v46 = v37;
          uint64_t v48 = (uint64_t)(v46 + 1);
          int64_t v72 = v7 - v39;
          if (v7 == v39) {
            goto LABEL_92;
          }
        }
        else
        {
          uint64_t v71 = 0;
          uint64_t v46 = (_DWORD *)(4 * v67);
          int v47 = 0;
          *(_DWORD *)(4 * v67) = v37;
          uint64_t v48 = 4 * v67 + 4;
          int64_t v72 = v7 - v39;
          if (v7 == v39) {
            goto LABEL_92;
          }
        }
        unint64_t v73 = v72 - 4;
        if (v73 >= 0x2C)
        {
          if ((unint64_t)(v7 - v71 - v66) >= 0x20)
          {
            uint64_t v82 = (v73 >> 2) + 1;
            uint64_t v83 = 4 * (v82 & 0x7FFFFFFFFFFFFFF8);
            int v74 = &v7[-v83];
            uint64_t v46 = (_DWORD *)((char *)v46 - v83);
            int v84 = &v71[4 * v67 - 16];
            int v85 = v7 - 16;
            uint64_t v86 = v82 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              long long v87 = *(_OWORD *)v85;
              *(v84 - 1) = *((_OWORD *)v85 - 1);
              _OWORD *v84 = v87;
              v84 -= 2;
              v85 -= 32;
              v86 -= 8;
            }
            while (v86);
            if (v82 == (v82 & 0x7FFFFFFFFFFFFFF8)) {
              goto LABEL_92;
            }
          }
          else
          {
            int v74 = v7;
          }
        }
        else
        {
          int v74 = v7;
        }
        do
        {
          int v88 = *((_DWORD *)v74 - 1);
          v74 -= 4;
          *--uint64_t v46 = v88;
        }
        while (v74 != v39);
        goto LABEL_92;
      }
LABEL_95:
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
LABEL_67:
    *(_DWORD *)long long v7 = v37;
    uint64_t v48 = (uint64_t)(v7 + 4);
    goto LABEL_94;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, a2);
  std::string::size_type v6 = *(char **)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  if ((unint64_t)v6 >= v5)
  {
    uint64_t v10 = *(char **)a2;
    uint64_t v11 = (uint64_t)&v6[-*(void *)a2];
    uint64_t v12 = v11 >> 2;
    unint64_t v13 = (v11 >> 2) + 1;
    if (v13 >> 62) {
      goto LABEL_95;
    }
    uint64_t v14 = v5 - (void)v10;
    if (v14 >> 1 > v13) {
      unint64_t v13 = v14 >> 1;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v13;
    }
    if (v15)
    {
      if (v15 >> 62) {
        goto LABEL_96;
      }
      uint64_t v16 = operator new(4 * v15);
    }
    else
    {
      uint64_t v16 = 0;
    }
    long long v24 = &v16[4 * v12];
    long long v25 = &v16[4 * v15];
    *long long v24 = 3;
    long long v7 = (char *)(v24 + 1);
    if (v6 != v10)
    {
      unint64_t v26 = v6 - v10 - 4;
      if (v26 < 0x2C) {
        goto LABEL_100;
      }
      if ((unint64_t)(v6 - v16 - v11) < 0x20) {
        goto LABEL_100;
      }
      uint64_t v27 = (v26 >> 2) + 1;
      uint64_t v28 = 4 * (v27 & 0x7FFFFFFFFFFFFFF8);
      int v29 = &v6[-v28];
      long long v24 = (_DWORD *)((char *)v24 - v28);
      uint64_t v30 = &v16[4 * v12 - 16];
      long long v31 = v6 - 16;
      uint64_t v32 = v27 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v33 = *(_OWORD *)v31;
        *(v30 - 1) = *((_OWORD *)v31 - 1);
        *uint64_t v30 = v33;
        v30 -= 2;
        v31 -= 32;
        v32 -= 8;
      }
      while (v32);
      std::string::size_type v6 = v29;
      if (v27 != (v27 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_100:
        do
        {
          int v34 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *--long long v24 = v34;
        }
        while (v6 != v10);
      }
    }
    *(void *)a2 = v24;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v25;
    if (v10) {
      operator delete(v10);
    }
  }
  else
  {
    *(_DWORD *)std::string::size_type v6 = 3;
    long long v7 = v6 + 4;
  }
  *(void *)(a2 + 8) = v7;
  uint64_t v35 = *(void *)(a1 + 24);
  if (v35) {
    std::string v36 = (void *)(v35 + 56);
  }
  else {
    std::string v36 = (void *)(*(void *)(a1 + 16) + 104);
  }
  int v37 = 954437177 * ((unint64_t)(a1 - *v36) >> 4);
  unint64_t v38 = *(void *)(a2 + 16);
  if ((unint64_t)v7 < v38) {
    goto LABEL_67;
  }
  int v39 = *(char **)a2;
  uint64_t v40 = (uint64_t)&v7[-*(void *)a2];
  uint64_t v41 = v40 >> 2;
  unint64_t v42 = (v40 >> 2) + 1;
  if (v42 >> 62) {
    goto LABEL_95;
  }
  uint64_t v43 = v38 - (void)v39;
  if (v43 >> 1 > v42) {
    unint64_t v42 = v43 >> 1;
  }
  if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v44 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v44 = v42;
  }
  if (v44)
  {
    if (!(v44 >> 62))
    {
      int v45 = operator new(4 * v44);
      uint64_t v46 = &v45[4 * v41];
      int v47 = &v45[4 * v44];
      _DWORD *v46 = v37;
      uint64_t v48 = (uint64_t)(v46 + 1);
      int64_t v49 = v7 - v39;
      if (v7 == v39) {
        goto LABEL_92;
      }
      goto LABEL_49;
    }
LABEL_96:
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  int v45 = 0;
  uint64_t v46 = (_DWORD *)(4 * v41);
  int v47 = 0;
  *(_DWORD *)(4 * v41) = v37;
  uint64_t v48 = 4 * v41 + 4;
  int64_t v49 = v7 - v39;
  if (v7 == v39) {
    goto LABEL_92;
  }
LABEL_49:
  unint64_t v50 = v49 - 4;
  if (v50 < 0x2C)
  {
    int v51 = v7;
    goto LABEL_86;
  }
  if ((unint64_t)(v7 - v45 - v40) < 0x20)
  {
    int v51 = v7;
    do
    {
LABEL_86:
      int v81 = *((_DWORD *)v51 - 1);
      v51 -= 4;
      *--uint64_t v46 = v81;
    }
    while (v51 != v39);
    goto LABEL_92;
  }
  uint64_t v75 = (v50 >> 2) + 1;
  uint64_t v76 = 4 * (v75 & 0x7FFFFFFFFFFFFFF8);
  int v51 = &v7[-v76];
  uint64_t v46 = (_DWORD *)((char *)v46 - v76);
  int v77 = &v45[4 * v41 - 16];
  int v78 = v7 - 16;
  uint64_t v79 = v75 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v80 = *(_OWORD *)v78;
    *(v77 - 1) = *((_OWORD *)v78 - 1);
    _OWORD *v77 = v80;
    v77 -= 2;
    v78 -= 32;
    v79 -= 8;
  }
  while (v79);
  if (v75 != (v75 & 0x7FFFFFFFFFFFFFF8)) {
    goto LABEL_86;
  }
LABEL_92:
  *(void *)a2 = v46;
  *(void *)(a2 + 8) = v48;
  *(void *)(a2 + 16) = v47;
  if (v39) {
    operator delete(v39);
  }
LABEL_94:
  *(void *)(a2 + 8) = v48;
}

void google::protobuf::FieldDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  if (!*(unsigned char *)(a1 + 67))
  {
    google::protobuf::Descriptor::GetLocationPath(*(void *)(a1 + 80), (uint64_t)a2);
    uint64_t v9 = a2[1];
    unint64_t v8 = (unint64_t)a2[2];
    if ((unint64_t)v9 >= v8)
    {
      unint64_t v20 = *a2;
      uint64_t v21 = v9 - *a2;
      uint64_t v22 = v21 >> 2;
      unint64_t v23 = (v21 >> 2) + 1;
      if (v23 >> 62) {
        goto LABEL_148;
      }
      uint64_t v24 = v8 - (void)v20;
      if (v24 >> 1 > v23) {
        unint64_t v23 = v24 >> 1;
      }
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v25 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v25 = v23;
      }
      if (v25)
      {
        if (v25 >> 62) {
          goto LABEL_149;
        }
        unint64_t v26 = operator new(4 * v25);
      }
      else
      {
        unint64_t v26 = 0;
      }
      int v62 = &v26[4 * v22];
      uint64_t v63 = &v26[4 * v25];
      *(_DWORD *)int v62 = 2;
      long long v7 = v62 + 4;
      if (v9 != v20)
      {
        unint64_t v64 = v9 - v20 - 4;
        if (v64 < 0x2C) {
          goto LABEL_152;
        }
        if ((unint64_t)(v9 - v26 - v21) < 0x20) {
          goto LABEL_152;
        }
        uint64_t v65 = (v64 >> 2) + 1;
        uint64_t v66 = 4 * (v65 & 0x7FFFFFFFFFFFFFF8);
        uint64_t v67 = &v9[-v66];
        v62 -= v66;
        unint64_t v68 = &v26[4 * v22 - 16];
        uint64_t v69 = v9 - 16;
        uint64_t v70 = v65 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v71 = *(_OWORD *)v69;
          *(v68 - 1) = *((_OWORD *)v69 - 1);
          _OWORD *v68 = v71;
          v68 -= 2;
          v69 -= 32;
          v70 -= 8;
        }
        while (v70);
        uint64_t v9 = v67;
        if (v65 != (v65 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_152:
          do
          {
            int v72 = *((_DWORD *)v9 - 1);
            v9 -= 4;
            *((_DWORD *)v62 - 1) = v72;
            v62 -= 4;
          }
          while (v9 != v20);
        }
      }
      *a2 = v62;
      a2[1] = v7;
      a2[2] = v63;
      if (v20) {
        operator delete(v20);
      }
    }
    else
    {
      *(_DWORD *)uint64_t v9 = 2;
      long long v7 = v9 + 4;
    }
    a2[1] = v7;
    if (*(unsigned char *)(a1 + 67))
    {
      uint64_t v73 = *(void *)(a1 + 96);
      if (v73) {
        int v74 = (void *)(v73 + 80);
      }
      else {
        int v74 = (void *)(*(void *)(a1 + 40) + 128);
      }
    }
    else
    {
      int v74 = (void *)(*(void *)(a1 + 80) + 40);
    }
    int v47 = 678152731 * ((unint64_t)(a1 - *v74) >> 3);
    unint64_t v75 = (unint64_t)a2[2];
    if ((unint64_t)v7 < v75)
    {
LABEL_81:
      *(_DWORD *)long long v7 = v47;
      uint64_t v58 = (uint64_t)(v7 + 4);
      goto LABEL_147;
    }
    int64_t v49 = *a2;
    uint64_t v76 = v7 - *a2;
    uint64_t v77 = v76 >> 2;
    unint64_t v78 = (v76 >> 2) + 1;
    if (!(v78 >> 62))
    {
      uint64_t v79 = v75 - (void)v49;
      if (v79 >> 1 > v78) {
        unint64_t v78 = v79 >> 1;
      }
      if ((unint64_t)v79 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v80 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v80 = v78;
      }
      if (v80)
      {
        if (v80 >> 62) {
          goto LABEL_149;
        }
        int v81 = operator new(4 * v80);
        uint64_t v56 = &v81[4 * v77];
        uint64_t v57 = &v81[4 * v80];
        *(_DWORD *)uint64_t v56 = v47;
        uint64_t v58 = (uint64_t)(v56 + 4);
        int64_t v82 = v7 - v49;
        if (v7 == v49) {
          goto LABEL_145;
        }
      }
      else
      {
        int v81 = 0;
        uint64_t v56 = (char *)(4 * v77);
        uint64_t v57 = 0;
        *(_DWORD *)(4 * v77) = v47;
        uint64_t v58 = 4 * v77 + 4;
        int64_t v82 = v7 - v49;
        if (v7 == v49) {
          goto LABEL_145;
        }
      }
      unint64_t v83 = v82 - 4;
      if (v83 >= 0x2C)
      {
        if ((unint64_t)(v7 - &v81[v76]) >= 0x20)
        {
          uint64_t v117 = (v83 >> 2) + 1;
          uint64_t v118 = 4 * (v117 & 0x7FFFFFFFFFFFFFF8);
          int v84 = &v7[-v118];
          v56 -= v118;
          uint64_t v119 = &v81[4 * v77 - 16];
          uint64_t v120 = v7 - 16;
          uint64_t v121 = v117 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v122 = *(_OWORD *)v120;
            *(v119 - 1) = *((_OWORD *)v120 - 1);
            *uint64_t v119 = v122;
            v119 -= 2;
            v120 -= 32;
            v121 -= 8;
          }
          while (v121);
          if (v117 == (v117 & 0x7FFFFFFFFFFFFFF8)) {
            goto LABEL_145;
          }
        }
        else
        {
          int v84 = v7;
        }
      }
      else
      {
        int v84 = v7;
      }
      do
      {
        int v123 = *((_DWORD *)v84 - 1);
        v84 -= 4;
        *((_DWORD *)v56 - 1) = v123;
        v56 -= 4;
      }
      while (v84 != v49);
      goto LABEL_145;
    }
LABEL_148:
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v4 = *(void *)(a1 + 96);
  if (!v4)
  {
    uint64_t v11 = a2[1];
    unint64_t v10 = (unint64_t)a2[2];
    if ((unint64_t)v11 >= v10)
    {
      uint64_t v27 = *a2;
      uint64_t v28 = v11 - *a2;
      uint64_t v29 = v28 >> 2;
      unint64_t v30 = (v28 >> 2) + 1;
      if (v30 >> 62) {
        goto LABEL_148;
      }
      uint64_t v31 = v10 - (void)v27;
      if (v31 >> 1 > v30) {
        unint64_t v30 = v31 >> 1;
      }
      if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v32 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v32 = v30;
      }
      if (v32)
      {
        if (v32 >> 62) {
          goto LABEL_149;
        }
        long long v33 = operator new(4 * v32);
      }
      else
      {
        long long v33 = 0;
      }
      int v85 = &v33[4 * v29];
      uint64_t v86 = &v33[4 * v32];
      *(_DWORD *)int v85 = 7;
      uint64_t v12 = v85 + 4;
      if (v11 != v27)
      {
        unint64_t v87 = v11 - v27 - 4;
        if (v87 < 0x2C) {
          goto LABEL_153;
        }
        if ((unint64_t)(v11 - v33 - v28) < 0x20) {
          goto LABEL_153;
        }
        uint64_t v88 = (v87 >> 2) + 1;
        uint64_t v89 = 4 * (v88 & 0x7FFFFFFFFFFFFFF8);
        int v90 = &v11[-v89];
        v85 -= v89;
        BOOL v91 = &v33[4 * v29 - 16];
        uint64_t v92 = v11 - 16;
        uint64_t v93 = v88 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v94 = *(_OWORD *)v92;
          *(v91 - 1) = *((_OWORD *)v92 - 1);
          _OWORD *v91 = v94;
          v91 -= 2;
          v92 -= 32;
          v93 -= 8;
        }
        while (v93);
        uint64_t v11 = v90;
        if (v88 != (v88 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_153:
          do
          {
            int v95 = *((_DWORD *)v11 - 1);
            v11 -= 4;
            *((_DWORD *)v85 - 1) = v95;
            v85 -= 4;
          }
          while (v11 != v27);
        }
      }
      *a2 = v85;
      a2[1] = v12;
      a2[2] = v86;
      if (v27)
      {
        operator delete(v27);
        int v96 = *(unsigned __int8 *)(a1 + 67);
        a2[1] = v12;
        if (!v96)
        {
          uint64_t v97 = (void *)(*(void *)(a1 + 80) + 40);
          goto LABEL_114;
        }
LABEL_111:
        uint64_t v98 = *(void *)(a1 + 96);
        if (v98) {
          uint64_t v97 = (void *)(v98 + 80);
        }
        else {
          uint64_t v97 = (void *)(*(void *)(a1 + 40) + 128);
        }
LABEL_114:
        int v99 = 678152731 * ((unint64_t)(a1 - *v97) >> 3);
        unint64_t v100 = (unint64_t)a2[2];
        if ((unint64_t)v12 < v100)
        {
          *(_DWORD *)uint64_t v12 = v99;
          uint64_t v58 = (uint64_t)(v12 + 4);
          goto LABEL_147;
        }
        int64_t v49 = *a2;
        uint64_t v101 = v12 - *a2;
        uint64_t v102 = v101 >> 2;
        unint64_t v103 = (v101 >> 2) + 1;
        if (!(v103 >> 62))
        {
          uint64_t v104 = v100 - (void)v49;
          if (v104 >> 1 > v103) {
            unint64_t v103 = v104 >> 1;
          }
          if ((unint64_t)v104 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v105 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v105 = v103;
          }
          if (v105)
          {
            if (v105 >> 62) {
              goto LABEL_149;
            }
            long long v106 = operator new(4 * v105);
            uint64_t v56 = &v106[4 * v102];
            uint64_t v57 = &v106[4 * v105];
            *(_DWORD *)uint64_t v56 = v99;
            uint64_t v58 = (uint64_t)(v56 + 4);
            int64_t v107 = v12 - v49;
            if (v12 == v49) {
              goto LABEL_145;
            }
          }
          else
          {
            long long v106 = 0;
            uint64_t v56 = (char *)(4 * v102);
            uint64_t v57 = 0;
            *(_DWORD *)(4 * v102) = v99;
            uint64_t v58 = 4 * v102 + 4;
            int64_t v107 = v12 - v49;
            if (v12 == v49) {
              goto LABEL_145;
            }
          }
          unint64_t v108 = v107 - 4;
          if (v108 >= 0x2C)
          {
            if ((unint64_t)(v12 - v106 - v101) >= 0x20)
            {
              uint64_t v124 = (v108 >> 2) + 1;
              uint64_t v125 = 4 * (v124 & 0x7FFFFFFFFFFFFFF8);
              long long v109 = &v12[-v125];
              v56 -= v125;
              int v126 = &v106[4 * v102 - 16];
              int v127 = v12 - 16;
              uint64_t v128 = v124 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                long long v129 = *(_OWORD *)v127;
                *(v126 - 1) = *((_OWORD *)v127 - 1);
                _OWORD *v126 = v129;
                v126 -= 2;
                v127 -= 32;
                v128 -= 8;
              }
              while (v128);
              if (v124 == (v124 & 0x7FFFFFFFFFFFFFF8)) {
                goto LABEL_145;
              }
            }
            else
            {
              long long v109 = v12;
            }
          }
          else
          {
            long long v109 = v12;
          }
          do
          {
            int v130 = *((_DWORD *)v109 - 1);
            v109 -= 4;
            *((_DWORD *)v56 - 1) = v130;
            v56 -= 4;
          }
          while (v109 != v49);
          goto LABEL_145;
        }
        goto LABEL_148;
      }
    }
    else
    {
      *(_DWORD *)uint64_t v11 = 7;
      uint64_t v12 = v11 + 4;
    }
    a2[1] = v12;
    goto LABEL_111;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  std::string::size_type v6 = a2[1];
  unint64_t v5 = (unint64_t)a2[2];
  if ((unint64_t)v6 >= v5)
  {
    unint64_t v13 = *a2;
    uint64_t v14 = v6 - *a2;
    uint64_t v15 = v14 >> 2;
    unint64_t v16 = (v14 >> 2) + 1;
    if (v16 >> 62) {
      goto LABEL_148;
    }
    uint64_t v17 = v5 - (void)v13;
    if (v17 >> 1 > v16) {
      unint64_t v16 = v17 >> 1;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v18 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v16;
    }
    if (v18)
    {
      if (v18 >> 62) {
        goto LABEL_149;
      }
      uint64_t v19 = operator new(4 * v18);
    }
    else
    {
      uint64_t v19 = 0;
    }
    int v34 = &v19[4 * v15];
    uint64_t v35 = &v19[4 * v18];
    *(_DWORD *)int v34 = 6;
    long long v7 = v34 + 4;
    if (v6 != v13)
    {
      unint64_t v36 = v6 - v13 - 4;
      if (v36 < 0x2C) {
        goto LABEL_154;
      }
      if ((unint64_t)(v6 - v19 - v14) < 0x20) {
        goto LABEL_154;
      }
      uint64_t v37 = (v36 >> 2) + 1;
      uint64_t v38 = 4 * (v37 & 0x7FFFFFFFFFFFFFF8);
      int v39 = &v6[-v38];
      v34 -= v38;
      uint64_t v40 = &v19[4 * v15 - 16];
      uint64_t v41 = v6 - 16;
      uint64_t v42 = v37 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v43 = *(_OWORD *)v41;
        *(v40 - 1) = *((_OWORD *)v41 - 1);
        *uint64_t v40 = v43;
        v40 -= 2;
        v41 -= 32;
        v42 -= 8;
      }
      while (v42);
      std::string::size_type v6 = v39;
      if (v37 != (v37 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_154:
        do
        {
          int v44 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v34 - 1) = v44;
          v34 -= 4;
        }
        while (v6 != v13);
      }
    }
    *a2 = v34;
    a2[1] = v7;
    a2[2] = v35;
    if (v13) {
      operator delete(v13);
    }
  }
  else
  {
    *(_DWORD *)std::string::size_type v6 = 6;
    long long v7 = v6 + 4;
  }
  a2[1] = v7;
  if (*(unsigned char *)(a1 + 67))
  {
    uint64_t v45 = *(void *)(a1 + 96);
    if (v45) {
      uint64_t v46 = (void *)(v45 + 80);
    }
    else {
      uint64_t v46 = (void *)(*(void *)(a1 + 40) + 128);
    }
  }
  else
  {
    uint64_t v46 = (void *)(*(void *)(a1 + 80) + 40);
  }
  int v47 = 678152731 * ((unint64_t)(a1 - *v46) >> 3);
  unint64_t v48 = (unint64_t)a2[2];
  if ((unint64_t)v7 < v48) {
    goto LABEL_81;
  }
  int64_t v49 = *a2;
  uint64_t v50 = v7 - *a2;
  uint64_t v51 = v50 >> 2;
  unint64_t v52 = (v50 >> 2) + 1;
  if (v52 >> 62) {
    goto LABEL_148;
  }
  uint64_t v53 = v48 - (void)v49;
  if (v53 >> 1 > v52) {
    unint64_t v52 = v53 >> 1;
  }
  if ((unint64_t)v53 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v54 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v54 = v52;
  }
  if (v54)
  {
    if (!(v54 >> 62))
    {
      uint64_t v55 = operator new(4 * v54);
      uint64_t v56 = &v55[4 * v51];
      uint64_t v57 = &v55[4 * v54];
      *(_DWORD *)uint64_t v56 = v47;
      uint64_t v58 = (uint64_t)(v56 + 4);
      int64_t v59 = v7 - v49;
      if (v7 == v49) {
        goto LABEL_145;
      }
      goto LABEL_63;
    }
LABEL_149:
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  uint64_t v55 = 0;
  uint64_t v56 = (char *)(4 * v51);
  uint64_t v57 = 0;
  *(_DWORD *)(4 * v51) = v47;
  uint64_t v58 = 4 * v51 + 4;
  int64_t v59 = v7 - v49;
  if (v7 == v49) {
    goto LABEL_145;
  }
LABEL_63:
  unint64_t v60 = v59 - 4;
  if (v60 < 0x2C)
  {
    long long v61 = v7;
    goto LABEL_134;
  }
  if ((unint64_t)(v7 - &v55[v50]) < 0x20)
  {
    long long v61 = v7;
    do
    {
LABEL_134:
      int v116 = *((_DWORD *)v61 - 1);
      v61 -= 4;
      *((_DWORD *)v56 - 1) = v116;
      v56 -= 4;
    }
    while (v61 != v49);
    goto LABEL_145;
  }
  uint64_t v110 = (v60 >> 2) + 1;
  uint64_t v111 = 4 * (v110 & 0x7FFFFFFFFFFFFFF8);
  long long v61 = &v7[-v111];
  v56 -= v111;
  long long v112 = &v55[4 * v51 - 16];
  long long v113 = v7 - 16;
  uint64_t v114 = v110 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v115 = *(_OWORD *)v113;
    *(v112 - 1) = *((_OWORD *)v113 - 1);
    _OWORD *v112 = v115;
    v112 -= 2;
    v113 -= 32;
    v114 -= 8;
  }
  while (v114);
  if (v110 != (v110 & 0x7FFFFFFFFFFFFFF8)) {
    goto LABEL_134;
  }
LABEL_145:
  *a2 = v56;
  a2[1] = (char *)v58;
  a2[2] = v57;
  if (v49) {
    operator delete(v49);
  }
LABEL_147:
  a2[1] = (char *)v58;
}

void google::protobuf::OneofDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  google::protobuf::Descriptor::GetLocationPath(*(void *)(a1 + 16), (uint64_t)a2);
  unint64_t v5 = a2[1];
  uint64_t v4 = a2[2];
  std::string::size_type v6 = v5;
  if (v5 >= v4)
  {
    unint64_t v8 = *a2;
    uint64_t v9 = v5 - *a2;
    uint64_t v10 = v9 >> 2;
    unint64_t v11 = (v9 >> 2) + 1;
    if (v11 >> 62) {
      goto LABEL_46;
    }
    uint64_t v12 = v4 - v8;
    if (v12 >> 1 > v11) {
      unint64_t v11 = v12 >> 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v13 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      if (v13 >> 62) {
        goto LABEL_47;
      }
      uint64_t v14 = operator new(4 * v13);
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t v15 = &v14[4 * v10];
    uint64_t v4 = &v14[4 * v13];
    *(_DWORD *)uint64_t v15 = 8;
    long long v7 = v15 + 4;
    if (v5 != v8)
    {
      unint64_t v16 = v5 - v8 - 4;
      if (v16 < 0x2C) {
        goto LABEL_50;
      }
      if ((unint64_t)(v5 - v14 - v9) < 0x20) {
        goto LABEL_50;
      }
      uint64_t v17 = (v16 >> 2) + 1;
      uint64_t v18 = 4 * (v17 & 0x7FFFFFFFFFFFFFF8);
      std::string::size_type v6 = &v5[-v18];
      v15 -= v18;
      uint64_t v19 = &v14[4 * v10 - 16];
      unint64_t v20 = v5 - 16;
      uint64_t v21 = v17 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v22 = *(_OWORD *)v20;
        *(v19 - 1) = *((_OWORD *)v20 - 1);
        *uint64_t v19 = v22;
        v19 -= 2;
        v20 -= 32;
        v21 -= 8;
      }
      while (v21);
      if (v17 != (v17 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_50:
        do
        {
          int v23 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v15 - 1) = v23;
          v15 -= 4;
        }
        while (v6 != v8);
      }
    }
    *a2 = v15;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 8;
    long long v7 = v5 + 4;
  }
  a2[1] = v7;
  int v24 = -1431655765 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 48)) >> 4);
  if (v7 < v4)
  {
    *(_DWORD *)long long v7 = v24;
    uint64_t v25 = (uint64_t)(v7 + 4);
    goto LABEL_45;
  }
  unint64_t v26 = *a2;
  uint64_t v27 = v7 - *a2;
  uint64_t v28 = v27 >> 2;
  unint64_t v29 = (v27 >> 2) + 1;
  if (v29 >> 62) {
LABEL_46:
  }
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  uint64_t v30 = v4 - v26;
  if (v30 >> 1 > v29) {
    unint64_t v29 = v30 >> 1;
  }
  if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v31 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v31 = v29;
  }
  if (!v31)
  {
    unint64_t v32 = 0;
    long long v33 = (char *)(4 * v28);
    int v34 = 0;
    *(_DWORD *)(4 * v28) = v24;
    uint64_t v25 = 4 * v28 + 4;
    int64_t v35 = v7 - v26;
    if (v7 == v26) {
      goto LABEL_43;
    }
    goto LABEL_35;
  }
  if (v31 >> 62) {
LABEL_47:
  }
    std::__throw_bad_array_new_length[abi:ne180100]();
  unint64_t v32 = operator new(4 * v31);
  long long v33 = &v32[4 * v28];
  int v34 = &v32[4 * v31];
  *(_DWORD *)long long v33 = v24;
  uint64_t v25 = (uint64_t)(v33 + 4);
  int64_t v35 = v7 - v26;
  if (v7 == v26) {
    goto LABEL_43;
  }
LABEL_35:
  unint64_t v36 = v35 - 4;
  if (v36 < 0x2C)
  {
    uint64_t v37 = v7;
    goto LABEL_42;
  }
  if ((unint64_t)(v7 - &v32[v27]) < 0x20)
  {
    uint64_t v37 = v7;
    do
    {
LABEL_42:
      int v44 = *((_DWORD *)v37 - 1);
      v37 -= 4;
      *((_DWORD *)v33 - 1) = v44;
      v33 -= 4;
    }
    while (v37 != v26);
    goto LABEL_43;
  }
  uint64_t v38 = (v36 >> 2) + 1;
  uint64_t v39 = 4 * (v38 & 0x7FFFFFFFFFFFFFF8);
  uint64_t v37 = &v7[-v39];
  v33 -= v39;
  uint64_t v40 = &v32[4 * v28 - 16];
  uint64_t v41 = v7 - 16;
  uint64_t v42 = v38 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v43 = *(_OWORD *)v41;
    *(v40 - 1) = *((_OWORD *)v41 - 1);
    *uint64_t v40 = v43;
    v40 -= 2;
    v41 -= 32;
    v42 -= 8;
  }
  while (v42);
  if (v38 != (v38 & 0x7FFFFFFFFFFFFFF8)) {
    goto LABEL_42;
  }
LABEL_43:
  *a2 = v33;
  a2[1] = (char *)v25;
  a2[2] = v34;
  if (v26) {
    operator delete(v26);
  }
LABEL_45:
  a2[1] = (char *)v25;
}

void google::protobuf::EnumDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    uint64_t v9 = a2[1];
    unint64_t v8 = (unint64_t)a2[2];
    if ((unint64_t)v9 >= v8)
    {
      uint64_t v17 = *a2;
      uint64_t v18 = v9 - *a2;
      uint64_t v19 = v18 >> 2;
      unint64_t v20 = (v18 >> 2) + 1;
      if (v20 >> 62) {
        goto LABEL_95;
      }
      uint64_t v21 = v8 - (void)v17;
      if (v21 >> 1 > v20) {
        unint64_t v20 = v21 >> 1;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        if (v22 >> 62) {
          goto LABEL_96;
        }
        int v23 = operator new(4 * v22);
      }
      else
      {
        int v23 = 0;
      }
      unint64_t v52 = &v23[4 * v19];
      uint64_t v53 = &v23[4 * v22];
      *(_DWORD *)unint64_t v52 = 5;
      long long v7 = v52 + 4;
      if (v9 != v17)
      {
        unint64_t v54 = v9 - v17 - 4;
        if (v54 < 0x2C) {
          goto LABEL_99;
        }
        if ((unint64_t)(v9 - &v23[v18]) < 0x20) {
          goto LABEL_99;
        }
        uint64_t v55 = (v54 >> 2) + 1;
        uint64_t v56 = 4 * (v55 & 0x7FFFFFFFFFFFFFF8);
        uint64_t v57 = &v9[-v56];
        v52 -= v56;
        uint64_t v58 = &v23[4 * v19 - 16];
        int64_t v59 = v9 - 16;
        uint64_t v60 = v55 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v61 = *(_OWORD *)v59;
          *(v58 - 1) = *((_OWORD *)v59 - 1);
          _OWORD *v58 = v61;
          v58 -= 2;
          v59 -= 32;
          v60 -= 8;
        }
        while (v60);
        uint64_t v9 = v57;
        if (v55 != (v55 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_99:
          do
          {
            int v62 = *((_DWORD *)v9 - 1);
            v9 -= 4;
            *((_DWORD *)v52 - 1) = v62;
            v52 -= 4;
          }
          while (v9 != v17);
        }
      }
      *a2 = v52;
      a2[1] = v7;
      a2[2] = v53;
      if (v17) {
        operator delete(v17);
      }
    }
    else
    {
      *(_DWORD *)uint64_t v9 = 5;
      long long v7 = v9 + 4;
    }
    a2[1] = v7;
    uint64_t v63 = *(void *)(a1 + 24);
    if (v63) {
      unint64_t v64 = (void *)(v63 + 64);
    }
    else {
      unint64_t v64 = (void *)(*(void *)(a1 + 16) + 112);
    }
    int v37 = -858993459 * ((unint64_t)(a1 - *v64) >> 4);
    unint64_t v65 = (unint64_t)a2[2];
    if ((unint64_t)v7 >= v65)
    {
      uint64_t v39 = *a2;
      uint64_t v66 = v7 - *a2;
      uint64_t v67 = v66 >> 2;
      unint64_t v68 = (v66 >> 2) + 1;
      if (!(v68 >> 62))
      {
        uint64_t v69 = v65 - (void)v39;
        if (v69 >> 1 > v68) {
          unint64_t v68 = v69 >> 1;
        }
        if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v70 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v70 = v68;
        }
        if (v70)
        {
          if (v70 >> 62) {
            goto LABEL_96;
          }
          long long v71 = operator new(4 * v70);
          uint64_t v46 = &v71[4 * v67];
          int v47 = &v71[4 * v70];
          *(_DWORD *)uint64_t v46 = v37;
          uint64_t v48 = (uint64_t)(v46 + 4);
          int64_t v72 = v7 - v39;
          if (v7 == v39) {
            goto LABEL_92;
          }
        }
        else
        {
          long long v71 = 0;
          uint64_t v46 = (char *)(4 * v67);
          int v47 = 0;
          *(_DWORD *)(4 * v67) = v37;
          uint64_t v48 = 4 * v67 + 4;
          int64_t v72 = v7 - v39;
          if (v7 == v39) {
            goto LABEL_92;
          }
        }
        unint64_t v73 = v72 - 4;
        if (v73 >= 0x2C)
        {
          if ((unint64_t)(v7 - v71 - v66) >= 0x20)
          {
            uint64_t v82 = (v73 >> 2) + 1;
            uint64_t v83 = 4 * (v82 & 0x7FFFFFFFFFFFFFF8);
            int v74 = &v7[-v83];
            v46 -= v83;
            int v84 = &v71[4 * v67 - 16];
            int v85 = v7 - 16;
            uint64_t v86 = v82 & 0x7FFFFFFFFFFFFFF8;
            do
            {
              long long v87 = *(_OWORD *)v85;
              *(v84 - 1) = *((_OWORD *)v85 - 1);
              _OWORD *v84 = v87;
              v84 -= 2;
              v85 -= 32;
              v86 -= 8;
            }
            while (v86);
            if (v82 == (v82 & 0x7FFFFFFFFFFFFFF8)) {
              goto LABEL_92;
            }
          }
          else
          {
            int v74 = v7;
          }
        }
        else
        {
          int v74 = v7;
        }
        do
        {
          int v88 = *((_DWORD *)v74 - 1);
          v74 -= 4;
          *((_DWORD *)v46 - 1) = v88;
          v46 -= 4;
        }
        while (v74 != v39);
        goto LABEL_92;
      }
LABEL_95:
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
LABEL_67:
    *(_DWORD *)long long v7 = v37;
    uint64_t v48 = (uint64_t)(v7 + 4);
    goto LABEL_94;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  std::string::size_type v6 = a2[1];
  unint64_t v5 = (unint64_t)a2[2];
  if ((unint64_t)v6 >= v5)
  {
    uint64_t v10 = *a2;
    uint64_t v11 = v6 - *a2;
    uint64_t v12 = v11 >> 2;
    unint64_t v13 = (v11 >> 2) + 1;
    if (v13 >> 62) {
      goto LABEL_95;
    }
    uint64_t v14 = v5 - (void)v10;
    if (v14 >> 1 > v13) {
      unint64_t v13 = v14 >> 1;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v13;
    }
    if (v15)
    {
      if (v15 >> 62) {
        goto LABEL_96;
      }
      unint64_t v16 = operator new(4 * v15);
    }
    else
    {
      unint64_t v16 = 0;
    }
    int v24 = &v16[4 * v12];
    uint64_t v25 = &v16[4 * v15];
    *(_DWORD *)int v24 = 4;
    long long v7 = v24 + 4;
    if (v6 != v10)
    {
      unint64_t v26 = v6 - v10 - 4;
      if (v26 < 0x2C) {
        goto LABEL_100;
      }
      if ((unint64_t)(v6 - v16 - v11) < 0x20) {
        goto LABEL_100;
      }
      uint64_t v27 = (v26 >> 2) + 1;
      uint64_t v28 = 4 * (v27 & 0x7FFFFFFFFFFFFFF8);
      unint64_t v29 = &v6[-v28];
      v24 -= v28;
      uint64_t v30 = &v16[4 * v12 - 16];
      unint64_t v31 = v6 - 16;
      uint64_t v32 = v27 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v33 = *(_OWORD *)v31;
        *(v30 - 1) = *((_OWORD *)v31 - 1);
        *uint64_t v30 = v33;
        v30 -= 2;
        v31 -= 32;
        v32 -= 8;
      }
      while (v32);
      std::string::size_type v6 = v29;
      if (v27 != (v27 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_100:
        do
        {
          int v34 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v24 - 1) = v34;
          v24 -= 4;
        }
        while (v6 != v10);
      }
    }
    *a2 = v24;
    a2[1] = v7;
    a2[2] = v25;
    if (v10) {
      operator delete(v10);
    }
  }
  else
  {
    *(_DWORD *)std::string::size_type v6 = 4;
    long long v7 = v6 + 4;
  }
  a2[1] = v7;
  uint64_t v35 = *(void *)(a1 + 24);
  if (v35) {
    unint64_t v36 = (void *)(v35 + 64);
  }
  else {
    unint64_t v36 = (void *)(*(void *)(a1 + 16) + 112);
  }
  int v37 = -858993459 * ((unint64_t)(a1 - *v36) >> 4);
  unint64_t v38 = (unint64_t)a2[2];
  if ((unint64_t)v7 < v38) {
    goto LABEL_67;
  }
  uint64_t v39 = *a2;
  uint64_t v40 = v7 - *a2;
  uint64_t v41 = v40 >> 2;
  unint64_t v42 = (v40 >> 2) + 1;
  if (v42 >> 62) {
    goto LABEL_95;
  }
  uint64_t v43 = v38 - (void)v39;
  if (v43 >> 1 > v42) {
    unint64_t v42 = v43 >> 1;
  }
  if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v44 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v44 = v42;
  }
  if (v44)
  {
    if (!(v44 >> 62))
    {
      uint64_t v45 = operator new(4 * v44);
      uint64_t v46 = &v45[4 * v41];
      int v47 = &v45[4 * v44];
      *(_DWORD *)uint64_t v46 = v37;
      uint64_t v48 = (uint64_t)(v46 + 4);
      int64_t v49 = v7 - v39;
      if (v7 == v39) {
        goto LABEL_92;
      }
      goto LABEL_49;
    }
LABEL_96:
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  uint64_t v45 = 0;
  uint64_t v46 = (char *)(4 * v41);
  int v47 = 0;
  *(_DWORD *)(4 * v41) = v37;
  uint64_t v48 = 4 * v41 + 4;
  int64_t v49 = v7 - v39;
  if (v7 == v39) {
    goto LABEL_92;
  }
LABEL_49:
  unint64_t v50 = v49 - 4;
  if (v50 < 0x2C)
  {
    uint64_t v51 = v7;
    goto LABEL_86;
  }
  if ((unint64_t)(v7 - v45 - v40) < 0x20)
  {
    uint64_t v51 = v7;
    do
    {
LABEL_86:
      int v81 = *((_DWORD *)v51 - 1);
      v51 -= 4;
      *((_DWORD *)v46 - 1) = v81;
      v46 -= 4;
    }
    while (v51 != v39);
    goto LABEL_92;
  }
  uint64_t v75 = (v50 >> 2) + 1;
  uint64_t v76 = 4 * (v75 & 0x7FFFFFFFFFFFFFF8);
  uint64_t v51 = &v7[-v76];
  v46 -= v76;
  uint64_t v77 = &v45[4 * v41 - 16];
  unint64_t v78 = v7 - 16;
  uint64_t v79 = v75 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v80 = *(_OWORD *)v78;
    *(v77 - 1) = *((_OWORD *)v78 - 1);
    _OWORD *v77 = v80;
    v77 -= 2;
    v78 -= 32;
    v79 -= 8;
  }
  while (v79);
  if (v75 != (v75 & 0x7FFFFFFFFFFFFFF8)) {
    goto LABEL_86;
  }
LABEL_92:
  *a2 = v46;
  a2[1] = (char *)v48;
  a2[2] = v47;
  if (v39) {
    operator delete(v39);
  }
LABEL_94:
  a2[1] = (char *)v48;
}

void google::protobuf::MethodDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  google::protobuf::ServiceDescriptor::GetLocationPath(*(void *)(a1 + 16), a2);
  unint64_t v5 = a2[1];
  uint64_t v4 = a2[2];
  std::string::size_type v6 = v5;
  if (v5 >= v4)
  {
    unint64_t v8 = *a2;
    uint64_t v9 = v5 - *a2;
    uint64_t v10 = v9 >> 2;
    unint64_t v11 = (v9 >> 2) + 1;
    if (v11 >> 62) {
      goto LABEL_46;
    }
    uint64_t v12 = v4 - v8;
    if (v12 >> 1 > v11) {
      unint64_t v11 = v12 >> 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v13 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      if (v13 >> 62) {
        goto LABEL_47;
      }
      uint64_t v14 = operator new(4 * v13);
    }
    else
    {
      uint64_t v14 = 0;
    }
    unint64_t v15 = &v14[4 * v10];
    uint64_t v4 = &v14[4 * v13];
    *(_DWORD *)unint64_t v15 = 2;
    long long v7 = v15 + 4;
    if (v5 != v8)
    {
      unint64_t v16 = v5 - v8 - 4;
      if (v16 < 0x2C) {
        goto LABEL_50;
      }
      if ((unint64_t)(v5 - v14 - v9) < 0x20) {
        goto LABEL_50;
      }
      uint64_t v17 = (v16 >> 2) + 1;
      uint64_t v18 = 4 * (v17 & 0x7FFFFFFFFFFFFFF8);
      std::string::size_type v6 = &v5[-v18];
      v15 -= v18;
      uint64_t v19 = &v14[4 * v10 - 16];
      unint64_t v20 = v5 - 16;
      uint64_t v21 = v17 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v22 = *(_OWORD *)v20;
        *(v19 - 1) = *((_OWORD *)v20 - 1);
        *uint64_t v19 = v22;
        v19 -= 2;
        v20 -= 32;
        v21 -= 8;
      }
      while (v21);
      if (v17 != (v17 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_50:
        do
        {
          int v23 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v15 - 1) = v23;
          v15 -= 4;
        }
        while (v6 != v8);
      }
    }
    *a2 = v15;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 2;
    long long v7 = v5 + 4;
  }
  a2[1] = v7;
  int v24 = -991146299 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 32)) >> 3);
  if (v7 < v4)
  {
    *(_DWORD *)long long v7 = v24;
    uint64_t v25 = (uint64_t)(v7 + 4);
    goto LABEL_45;
  }
  unint64_t v26 = *a2;
  uint64_t v27 = v7 - *a2;
  uint64_t v28 = v27 >> 2;
  unint64_t v29 = (v27 >> 2) + 1;
  if (v29 >> 62) {
LABEL_46:
  }
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  uint64_t v30 = v4 - v26;
  if (v30 >> 1 > v29) {
    unint64_t v29 = v30 >> 1;
  }
  if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v31 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v31 = v29;
  }
  if (!v31)
  {
    uint64_t v32 = 0;
    long long v33 = (char *)(4 * v28);
    int v34 = 0;
    *(_DWORD *)(4 * v28) = v24;
    uint64_t v25 = 4 * v28 + 4;
    int64_t v35 = v7 - v26;
    if (v7 == v26) {
      goto LABEL_43;
    }
    goto LABEL_35;
  }
  if (v31 >> 62) {
LABEL_47:
  }
    std::__throw_bad_array_new_length[abi:ne180100]();
  uint64_t v32 = operator new(4 * v31);
  long long v33 = &v32[4 * v28];
  int v34 = &v32[4 * v31];
  *(_DWORD *)long long v33 = v24;
  uint64_t v25 = (uint64_t)(v33 + 4);
  int64_t v35 = v7 - v26;
  if (v7 == v26) {
    goto LABEL_43;
  }
LABEL_35:
  unint64_t v36 = v35 - 4;
  if (v36 < 0x2C)
  {
    int v37 = v7;
    goto LABEL_42;
  }
  if ((unint64_t)(v7 - &v32[v27]) < 0x20)
  {
    int v37 = v7;
    do
    {
LABEL_42:
      int v44 = *((_DWORD *)v37 - 1);
      v37 -= 4;
      *((_DWORD *)v33 - 1) = v44;
      v33 -= 4;
    }
    while (v37 != v26);
    goto LABEL_43;
  }
  uint64_t v38 = (v36 >> 2) + 1;
  uint64_t v39 = 4 * (v38 & 0x7FFFFFFFFFFFFFF8);
  int v37 = &v7[-v39];
  v33 -= v39;
  uint64_t v40 = &v32[4 * v28 - 16];
  uint64_t v41 = v7 - 16;
  uint64_t v42 = v38 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v43 = *(_OWORD *)v41;
    *(v40 - 1) = *((_OWORD *)v41 - 1);
    *uint64_t v40 = v43;
    v40 -= 2;
    v41 -= 32;
    v42 -= 8;
  }
  while (v42);
  if (v38 != (v38 & 0x7FFFFFFFFFFFFFF8)) {
    goto LABEL_42;
  }
LABEL_43:
  *a2 = v33;
  a2[1] = (char *)v25;
  a2[2] = v34;
  if (v26) {
    operator delete(v26);
  }
LABEL_45:
  a2[1] = (char *)v25;
}

void google::protobuf::ServiceDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  unint64_t v5 = a2[1];
  uint64_t v4 = a2[2];
  std::string::size_type v6 = v5;
  if (v5 >= v4)
  {
    unint64_t v8 = *a2;
    uint64_t v9 = v5 - *a2;
    uint64_t v10 = v9 >> 2;
    unint64_t v11 = (v9 >> 2) + 1;
    if (v11 >> 62) {
      goto LABEL_46;
    }
    uint64_t v12 = v4 - v8;
    if (v12 >> 1 > v11) {
      unint64_t v11 = v12 >> 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v13 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      if (v13 >> 62) {
        goto LABEL_47;
      }
      uint64_t v14 = operator new(4 * v13);
    }
    else
    {
      uint64_t v14 = 0;
    }
    unint64_t v15 = &v14[4 * v10];
    uint64_t v4 = &v14[4 * v13];
    *(_DWORD *)unint64_t v15 = 6;
    long long v7 = v15 + 4;
    if (v5 != v8)
    {
      unint64_t v16 = v5 - v8 - 4;
      if (v16 < 0x2C) {
        goto LABEL_50;
      }
      if ((unint64_t)(v5 - v14 - v9) < 0x20) {
        goto LABEL_50;
      }
      uint64_t v17 = (v16 >> 2) + 1;
      uint64_t v18 = 4 * (v17 & 0x7FFFFFFFFFFFFFF8);
      std::string::size_type v6 = &v5[-v18];
      v15 -= v18;
      uint64_t v19 = &v14[4 * v10 - 16];
      unint64_t v20 = v5 - 16;
      uint64_t v21 = v17 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v22 = *(_OWORD *)v20;
        *(v19 - 1) = *((_OWORD *)v20 - 1);
        *uint64_t v19 = v22;
        v19 -= 2;
        v20 -= 32;
        v21 -= 8;
      }
      while (v21);
      if (v17 != (v17 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_50:
        do
        {
          int v23 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v15 - 1) = v23;
          v15 -= 4;
        }
        while (v6 != v8);
      }
    }
    *a2 = v15;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 6;
    long long v7 = v5 + 4;
  }
  a2[1] = v7;
  int v24 = -1431655765 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 120)) >> 4);
  if (v7 < v4)
  {
    *(_DWORD *)long long v7 = v24;
    uint64_t v25 = (uint64_t)(v7 + 4);
    goto LABEL_45;
  }
  unint64_t v26 = *a2;
  uint64_t v27 = v7 - *a2;
  uint64_t v28 = v27 >> 2;
  unint64_t v29 = (v27 >> 2) + 1;
  if (v29 >> 62) {
LABEL_46:
  }
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  uint64_t v30 = v4 - v26;
  if (v30 >> 1 > v29) {
    unint64_t v29 = v30 >> 1;
  }
  if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v31 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v31 = v29;
  }
  if (!v31)
  {
    uint64_t v32 = 0;
    long long v33 = (char *)(4 * v28);
    int v34 = 0;
    *(_DWORD *)(4 * v28) = v24;
    uint64_t v25 = 4 * v28 + 4;
    int64_t v35 = v7 - v26;
    if (v7 == v26) {
      goto LABEL_43;
    }
    goto LABEL_35;
  }
  if (v31 >> 62) {
LABEL_47:
  }
    std::__throw_bad_array_new_length[abi:ne180100]();
  uint64_t v32 = operator new(4 * v31);
  long long v33 = &v32[4 * v28];
  int v34 = &v32[4 * v31];
  *(_DWORD *)long long v33 = v24;
  uint64_t v25 = (uint64_t)(v33 + 4);
  int64_t v35 = v7 - v26;
  if (v7 == v26) {
    goto LABEL_43;
  }
LABEL_35:
  unint64_t v36 = v35 - 4;
  if (v36 < 0x2C)
  {
    int v37 = v7;
    goto LABEL_42;
  }
  if ((unint64_t)(v7 - &v32[v27]) < 0x20)
  {
    int v37 = v7;
    do
    {
LABEL_42:
      int v44 = *((_DWORD *)v37 - 1);
      v37 -= 4;
      *((_DWORD *)v33 - 1) = v44;
      v33 -= 4;
    }
    while (v37 != v26);
    goto LABEL_43;
  }
  uint64_t v38 = (v36 >> 2) + 1;
  uint64_t v39 = 4 * (v38 & 0x7FFFFFFFFFFFFFF8);
  int v37 = &v7[-v39];
  v33 -= v39;
  uint64_t v40 = &v32[4 * v28 - 16];
  uint64_t v41 = v7 - 16;
  uint64_t v42 = v38 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v43 = *(_OWORD *)v41;
    *(v40 - 1) = *((_OWORD *)v41 - 1);
    *uint64_t v40 = v43;
    v40 -= 2;
    v41 -= 32;
    v42 -= 8;
  }
  while (v42);
  if (v38 != (v38 & 0x7FFFFFFFFFFFFFF8)) {
    goto LABEL_42;
  }
LABEL_43:
  *a2 = v33;
  a2[1] = (char *)v25;
  a2[2] = v34;
  if (v26) {
    operator delete(v26);
  }
LABEL_45:
  a2[1] = (char *)v25;
}

void google::protobuf::EnumValueDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  google::protobuf::EnumDescriptor::GetLocationPath(*(void *)(a1 + 24), a2);
  unint64_t v5 = a2[1];
  uint64_t v4 = a2[2];
  std::string::size_type v6 = v5;
  if (v5 >= v4)
  {
    unint64_t v8 = *a2;
    uint64_t v9 = v5 - *a2;
    uint64_t v10 = v9 >> 2;
    unint64_t v11 = (v9 >> 2) + 1;
    if (v11 >> 62) {
      goto LABEL_46;
    }
    uint64_t v12 = v4 - v8;
    if (v12 >> 1 > v11) {
      unint64_t v11 = v12 >> 1;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v13 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      if (v13 >> 62) {
        goto LABEL_47;
      }
      uint64_t v14 = operator new(4 * v13);
    }
    else
    {
      uint64_t v14 = 0;
    }
    unint64_t v15 = &v14[4 * v10];
    uint64_t v4 = &v14[4 * v13];
    *(_DWORD *)unint64_t v15 = 2;
    long long v7 = v15 + 4;
    if (v5 != v8)
    {
      unint64_t v16 = v5 - v8 - 4;
      if (v16 < 0x2C) {
        goto LABEL_50;
      }
      if ((unint64_t)(v5 - v14 - v9) < 0x20) {
        goto LABEL_50;
      }
      uint64_t v17 = (v16 >> 2) + 1;
      uint64_t v18 = 4 * (v17 & 0x7FFFFFFFFFFFFFF8);
      std::string::size_type v6 = &v5[-v18];
      v15 -= v18;
      uint64_t v19 = &v14[4 * v10 - 16];
      unint64_t v20 = v5 - 16;
      uint64_t v21 = v17 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v22 = *(_OWORD *)v20;
        *(v19 - 1) = *((_OWORD *)v20 - 1);
        *uint64_t v19 = v22;
        v19 -= 2;
        v20 -= 32;
        v21 -= 8;
      }
      while (v21);
      if (v17 != (v17 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_50:
        do
        {
          int v23 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v15 - 1) = v23;
          v15 -= 4;
        }
        while (v6 != v8);
      }
    }
    *a2 = v15;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 2;
    long long v7 = v5 + 4;
  }
  a2[1] = v7;
  int v24 = -858993459 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 24) + 48)) >> 3);
  if (v7 < v4)
  {
    *(_DWORD *)long long v7 = v24;
    uint64_t v25 = (uint64_t)(v7 + 4);
    goto LABEL_45;
  }
  unint64_t v26 = *a2;
  uint64_t v27 = v7 - *a2;
  uint64_t v28 = v27 >> 2;
  unint64_t v29 = (v27 >> 2) + 1;
  if (v29 >> 62) {
LABEL_46:
  }
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  uint64_t v30 = v4 - v26;
  if (v30 >> 1 > v29) {
    unint64_t v29 = v30 >> 1;
  }
  if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v31 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v31 = v29;
  }
  if (!v31)
  {
    uint64_t v32 = 0;
    long long v33 = (char *)(4 * v28);
    int v34 = 0;
    *(_DWORD *)(4 * v28) = v24;
    uint64_t v25 = 4 * v28 + 4;
    int64_t v35 = v7 - v26;
    if (v7 == v26) {
      goto LABEL_43;
    }
    goto LABEL_35;
  }
  if (v31 >> 62) {
LABEL_47:
  }
    std::__throw_bad_array_new_length[abi:ne180100]();
  uint64_t v32 = operator new(4 * v31);
  long long v33 = &v32[4 * v28];
  int v34 = &v32[4 * v31];
  *(_DWORD *)long long v33 = v24;
  uint64_t v25 = (uint64_t)(v33 + 4);
  int64_t v35 = v7 - v26;
  if (v7 == v26) {
    goto LABEL_43;
  }
LABEL_35:
  unint64_t v36 = v35 - 4;
  if (v36 < 0x2C)
  {
    int v37 = v7;
    goto LABEL_42;
  }
  if ((unint64_t)(v7 - &v32[v27]) < 0x20)
  {
    int v37 = v7;
    do
    {
LABEL_42:
      int v44 = *((_DWORD *)v37 - 1);
      v37 -= 4;
      *((_DWORD *)v33 - 1) = v44;
      v33 -= 4;
    }
    while (v37 != v26);
    goto LABEL_43;
  }
  uint64_t v38 = (v36 >> 2) + 1;
  uint64_t v39 = 4 * (v38 & 0x7FFFFFFFFFFFFFF8);
  int v37 = &v7[-v39];
  v33 -= v39;
  uint64_t v40 = &v32[4 * v28 - 16];
  uint64_t v41 = v7 - 16;
  uint64_t v42 = v38 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v43 = *(_OWORD *)v41;
    *(v40 - 1) = *((_OWORD *)v41 - 1);
    *uint64_t v40 = v43;
    v40 -= 2;
    v41 -= 32;
    v42 -= 8;
  }
  while (v42);
  if (v38 != (v38 & 0x7FFFFFFFFFFFFFF8)) {
    goto LABEL_42;
  }
LABEL_43:
  *a2 = v33;
  a2[1] = (char *)v25;
  a2[2] = v34;
  if (v26) {
    operator delete(v26);
  }
LABEL_45:
  a2[1] = (char *)v25;
}

google::protobuf::FileDescriptor *google::protobuf::DescriptorBuilder::BuildFile(google::protobuf::DescriptorBuilder *this, const std::string **a2)
{
  uint64_t v4 = (char *)this + 56;
  std::string::operator=((std::string *)((char *)this + 56), a2[22]);
  unint64_t v5 = (void *)(*((void *)this + 1) + 344);
  if (*((char *)this + 79) >= 0) {
    std::string::size_type v6 = v4;
  }
  else {
    std::string::size_type v6 = (const char *)*((void *)this + 7);
  }
  v59[0] = v6;
  long long v7 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v5, v59);
  if (!v7) {
    goto LABEL_37;
  }
  unint64_t v8 = (google::protobuf::FileDescriptor *)v7[3];
  if (!v8) {
    goto LABEL_37;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v59, 0);
  google::protobuf::FileDescriptor::CopyTo(v8, (google::protobuf::FileDescriptorProto *)v59);
  if (*((_DWORD *)v8 + 15) == 2 && ((_BYTE)a2[2] & 4) != 0) {
    google::protobuf::FileDescriptorProto::set_syntax((google::protobuf::FileDescriptorProto *)v59, "proto2");
  }
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)v59, (uint64_t)&__s1);
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)a2, (uint64_t)__p);
  unsigned __int8 v9 = v58;
  if ((v58 & 0x80u) == 0) {
    size_t v10 = v58;
  }
  else {
    size_t v10 = __n;
  }
  unint64_t v11 = v55;
  int v12 = (char)v55;
  if ((v55 & 0x80u) != 0) {
    unint64_t v11 = (unint64_t)__p[1];
  }
  if (v10 != v11)
  {
    BOOL v22 = 0;
    if (((char)v55 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_35;
  }
  if ((v55 & 0x80u) == 0) {
    unint64_t v13 = __p;
  }
  else {
    unint64_t v13 = (void **)__p[0];
  }
  if ((char)v58 < 0)
  {
    BOOL v22 = memcmp(__s1, v13, __n) == 0;
    goto LABEL_30;
  }
  if (v58)
  {
    uint64_t v14 = v58 - 1;
    p_s1 = &__s1;
    do
    {
      int v17 = *(unsigned __int8 *)p_s1;
      p_s1 = (void **)((char *)p_s1 + 1);
      int v16 = v17;
      int v19 = *(unsigned __int8 *)v13;
      unint64_t v13 = (void **)((char *)v13 + 1);
      int v18 = v19;
      BOOL v21 = v14-- != 0;
      BOOL v22 = v16 == v18;
    }
    while (v16 == v18 && v21);
LABEL_30:
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_35;
  }
  BOOL v22 = 1;
  if (((char)v55 & 0x80000000) == 0)
  {
LABEL_31:
    if ((v9 & 0x80) == 0) {
      goto LABEL_32;
    }
    goto LABEL_36;
  }
LABEL_35:
  operator delete(__p[0]);
  if ((v58 & 0x80) == 0)
  {
LABEL_32:
    google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v59);
    if (v22) {
      return v8;
    }
LABEL_37:
    uint64_t v23 = *((void *)this + 1);
    uint64_t v25 = *(char **)v23;
    int v24 = *(std::string **)(v23 + 8);
    if (v24 != *(std::string **)v23)
    {
      unint64_t v26 = a2[22];
      if ((v26->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v26->__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v26->__r_.__value_.__l.__size_;
      }
      if ((unint64_t)(((uint64_t)v24 - *(void *)v23) / 24) <= 1) {
        uint64_t v28 = 1;
      }
      else {
        uint64_t v28 = ((uint64_t)v24 - *(void *)v23) / 24;
      }
      uint64_t v29 = 0;
      if ((*((unsigned char *)&v26->__r_.__value_.__s + 23) & 0x80) != 0)
      {
        while (1)
        {
          int v34 = &v25[24 * v29];
          uint64_t v35 = v34[23];
          if ((v35 & 0x80u) == 0) {
            uint64_t v36 = v34[23];
          }
          else {
            uint64_t v36 = *((void *)v34 + 1);
          }
          if (v36 == size)
          {
            int v37 = (unsigned __int8 *)v26->__r_.__value_.__r.__words[0];
            if ((v35 & 0x80) != 0)
            {
              if (!memcmp(*(const void **)v34, v37, *((void *)v34 + 1))) {
                goto LABEL_68;
              }
            }
            else
            {
              if (!v34[23]) {
                goto LABEL_68;
              }
              while (*v34 == *v37)
              {
                ++v34;
                ++v37;
                if (!--v35) {
                  goto LABEL_68;
                }
              }
            }
          }
          if (++v29 == v28) {
            goto LABEL_69;
          }
        }
      }
      do
      {
        uint64_t v30 = &v25[24 * v29];
        uint64_t v31 = v30[23];
        if ((v31 & 0x80u) == 0) {
          uint64_t v32 = v30[23];
        }
        else {
          uint64_t v32 = *((void *)v30 + 1);
        }
        if (v32 == size)
        {
          if ((v31 & 0x80) != 0)
          {
            if (!memcmp(*(const void **)v30, v26, *((void *)v30 + 1))) {
              goto LABEL_68;
            }
          }
          else
          {
            if (!v30[23])
            {
LABEL_68:
              google::protobuf::DescriptorBuilder::AddRecursiveImportError(this, (const google::protobuf::FileDescriptorProto *)a2, v29);
              return 0;
            }
            long long v33 = v26;
            while (*v30 == v33->__r_.__value_.__s.__data_[0])
            {
              ++v30;
              long long v33 = (const std::string *)((char *)v33 + 1);
              if (!--v31) {
                goto LABEL_68;
              }
            }
          }
        }
        ++v29;
      }
      while (v29 != v28);
    }
LABEL_69:
    if (!*(unsigned char *)(*(void *)this + 41) && *(void *)(*(void *)this + 8))
    {
      uint64_t v38 = (uint64_t)a2[22];
      if ((unint64_t)v24 >= *(void *)(v23 + 16))
      {
        uint64_t v40 = std::vector<std::string>::__push_back_slow_path<std::string const&>((char **)v23, v38);
      }
      else
      {
        if (*(char *)(v38 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(v24, *(const std::string::value_type **)v38, *(void *)(v38 + 8));
        }
        else
        {
          long long v39 = *(_OWORD *)v38;
          v24->__r_.__value_.__r.__words[2] = *(void *)(v38 + 16);
          *(_OWORD *)&v24->__r_.__value_.__l.__data_ = v39;
        }
        uint64_t v40 = v24 + 1;
        *(void *)(v23 + 8) = v24 + 1;
      }
      *(void *)(v23 + 8) = v40;
      if (*((int *)a2 + 8) >= 1)
      {
        for (int i = 0; i < *((_DWORD *)a2 + 8); ++i)
        {
          uint64_t v43 = *((void *)this + 1);
          uint64_t v44 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)(a2 + 3), i);
          if (*(char *)(v44 + 23) >= 0) {
            uint64_t v45 = (const char *)v44;
          }
          else {
            uint64_t v45 = *(const char **)v44;
          }
          v59[0] = v45;
          uint64_t v46 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>((void *)(v43 + 344), v59);
          if (v46 && v46[3]) {
            continue;
          }
          uint64_t v47 = *(void *)this;
          uint64_t v48 = *(void *)(*(void *)this + 24);
          if (v48)
          {
            uint64_t v49 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)(a2 + 3), i);
            if (google::protobuf::DescriptorPool::FindFileByName(v48, v49)) {
              continue;
            }
            uint64_t v47 = *(void *)this;
          }
          uint64_t v42 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)(a2 + 3), i);
          google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(v47, v42);
        }
      }
      uint64_t v50 = *((void *)this + 1);
      uint64_t v51 = *(void *)(v50 + 8);
      unint64_t v52 = (void **)(v51 - 24);
      uint64_t v23 = v50;
      if (*(char *)(v51 - 1) < 0)
      {
        operator delete(*v52);
        uint64_t v23 = *((void *)this + 1);
      }
      *(void *)(v50 + 8) = v52;
    }
    google::protobuf::DescriptorPool::Tables::AddCheckpoint((google::protobuf::DescriptorPool::Tables *)v23);
    google::protobuf::DescriptorBuilder::BuildFileImpl(this, (const google::protobuf::FileDescriptorProto *)a2);
  }
LABEL_36:
  operator delete(__s1);
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v59);
  if (!v22) {
    goto LABEL_37;
  }
  return v8;
}

void sub_23CDCF484(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_23CDCF48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (a17 < 0)
  {
    operator delete(__p);
    google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&a18);
    _Unwind_Resume(a1);
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&a18);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::~DescriptorBuilder(void **this)
{
  if (*((char *)this + 199) < 0)
  {
    operator delete(this[22]);
    if ((*((char *)this + 175) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((*((char *)this + 175) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(this[19]);
LABEL_3:
  std::__tree<std::__value_type<unsigned long,void *>,std::__map_value_compare<unsigned long,std::__value_type<unsigned long,void *>,std::less<unsigned long>,true>,std::allocator<std::__value_type<unsigned long,void *>>>::destroy((uint64_t)(this + 15), this[16]);
  std::__tree<std::__value_type<unsigned long,void *>,std::__map_value_compare<unsigned long,std::__value_type<unsigned long,void *>,std::less<unsigned long>,true>,std::allocator<std::__value_type<unsigned long,void *>>>::destroy((uint64_t)(this + 12), this[13]);
  if ((*((char *)this + 79) & 0x80000000) == 0)
  {
    uint64_t v2 = (char *)this[3];
    if (!v2) {
      return;
    }
    goto LABEL_9;
  }
  operator delete(this[7]);
  uint64_t v2 = (char *)this[3];
  if (v2)
  {
LABEL_9:
    uint64_t v3 = (char *)this[4];
    uint64_t v4 = v2;
    if (v3 == v2)
    {
LABEL_20:
      this[4] = v2;
      operator delete(v4);
      return;
    }
    while (1)
    {
      unint64_t v5 = (void *)*((void *)v3 - 5);
      if (v5)
      {
        *((void *)v3 - 4) = v5;
        operator delete(v5);
      }
      if (*(v3 - 41) < 0)
      {
        operator delete(*((void **)v3 - 8));
        if (*(v3 - 65) < 0) {
LABEL_18:
        }
          operator delete(*((void **)v3 - 11));
      }
      else if (*(v3 - 65) < 0)
      {
        goto LABEL_18;
      }
      v3 -= 88;
      if (v3 == v2)
      {
        uint64_t v4 = (char *)this[3];
        goto LABEL_20;
      }
    }
  }
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, const std::string::value_type *a5)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, const std::string::value_type *, uint64_t, uint64_t, const std::string::value_type *))(*(void *)v8 + 16))(v8, a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    if (!*(unsigned char *)(a1 + 48))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 3635);
      unsigned __int8 v9 = google::protobuf::internal::LogMessage::operator<<(v17, "Invalid proto descriptor for file \"");
      size_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, (const std::string::value_type *)(a1 + 56));
      unint64_t v11 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v10, "\":");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, v11);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 3638);
    int v12 = google::protobuf::internal::LogMessage::operator<<(v17, "  ");
    unint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v12, a2);
    uint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v13, ": ");
    unint64_t v15 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, a5);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v16, v15);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 48) = 1;
}

void sub_23CDCF70C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDCF720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDCF734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDCF748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, char *__s)
{
  size_t v10 = strlen(__s);
  if (v10 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  unint64_t v11 = (void *)v10;
  if (v10 >= 0x17)
  {
    uint64_t v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v13 = v10 | 7;
    }
    uint64_t v14 = v13 + 1;
    int v12 = (void **)operator new(v13 + 1);
    __dst[1] = v11;
    unint64_t v16 = v14 | 0x8000000000000000;
    __dst[0] = v12;
    goto LABEL_8;
  }
  HIBYTE(v16) = v10;
  int v12 = __dst;
  if (v10) {
LABEL_8:
  }
    memcpy(v12, __s, (size_t)v11);
  *((unsigned char *)v11 + (void)v12) = 0;
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)__dst);
  if (SHIBYTE(v16) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_23CDCF850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddNotDefinedError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a1 + 144))
  {
    std::operator+<char>();
    size_t v10 = std::string::append(&v47, "\" seems to be defined in \"");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = **(void **)(a1 + 144);
    int v13 = *(char *)(v12 + 23);
    if (v13 >= 0) {
      uint64_t v14 = **(const std::string::value_type ***)(a1 + 144);
    }
    else {
      uint64_t v14 = *(const std::string::value_type **)v12;
    }
    if (v13 >= 0) {
      std::string::size_type v15 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      std::string::size_type v15 = *(void *)(v12 + 8);
    }
    unint64_t v16 = std::string::append(&v48, v14, v15);
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    int v18 = std::string::append(&v49, "\", which is not imported by \"");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    int v20 = *(char *)(a1 + 79);
    if (v20 >= 0) {
      BOOL v21 = (const std::string::value_type *)(a1 + 56);
    }
    else {
      BOOL v21 = *(const std::string::value_type **)(a1 + 56);
    }
    if (v20 >= 0) {
      std::string::size_type v22 = *(unsigned __int8 *)(a1 + 79);
    }
    else {
      std::string::size_type v22 = *(void *)(a1 + 64);
    }
    uint64_t v23 = std::string::append(&v50, v21, v22);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    uint64_t v25 = std::string::append(&v51, "\".  To use it here, please add the necessary import.");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    std::string::size_type v53 = v25->__r_.__value_.__r.__words[2];
    long long v52 = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
    if (SHIBYTE(v53) < 0)
    {
      operator delete((void *)v52);
      if ((SHIBYTE(v51.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_16:
        if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_17;
        }
        goto LABEL_48;
      }
    }
    else if ((SHIBYTE(v51.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v51.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_49;
    }
LABEL_48:
    operator delete(v50.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_18:
      if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_19;
      }
      goto LABEL_50;
    }
LABEL_49:
    operator delete(v49.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_19:
      if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_20:
        LOBYTE(v27) = *(unsigned char *)(a1 + 199);
        goto LABEL_23;
      }
LABEL_51:
      operator delete(v47.__r_.__value_.__l.__data_);
      goto LABEL_20;
    }
LABEL_50:
    operator delete(v48.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
  int v27 = *(char *)(a1 + 199);
  if (v27 < 0)
  {
    if (*(void *)(a1 + 184))
    {
LABEL_23:
      if ((v27 & 0x80) != 0)
      {
        if (!*(void *)(a1 + 184)) {
          return;
        }
      }
      else if (!(_BYTE)v27)
      {
        return;
      }
      std::operator+<char>();
      uint64_t v28 = std::string::append(&v47, "\" is resolved to \"");
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v48.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      int v30 = *(char *)(a1 + 199);
      if (v30 >= 0) {
        uint64_t v31 = (const std::string::value_type *)(a1 + 176);
      }
      else {
        uint64_t v31 = *(const std::string::value_type **)(a1 + 176);
      }
      if (v30 >= 0) {
        std::string::size_type v32 = *(unsigned __int8 *)(a1 + 199);
      }
      else {
        std::string::size_type v32 = *(void *)(a1 + 184);
      }
      long long v33 = std::string::append(&v48, v31, v32);
      long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
      v49.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v34;
      v33->__r_.__value_.__l.__size_ = 0;
      v33->__r_.__value_.__r.__words[2] = 0;
      v33->__r_.__value_.__r.__words[0] = 0;
      uint64_t v35 = std::string::append(&v49, "\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \".");
      long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
      v50.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v36;
      v35->__r_.__value_.__l.__size_ = 0;
      v35->__r_.__value_.__r.__words[2] = 0;
      v35->__r_.__value_.__r.__words[0] = 0;
      int v37 = *(char *)(a5 + 23);
      if (v37 >= 0) {
        uint64_t v38 = (const std::string::value_type *)a5;
      }
      else {
        uint64_t v38 = *(const std::string::value_type **)a5;
      }
      if (v37 >= 0) {
        std::string::size_type v39 = *(unsigned __int8 *)(a5 + 23);
      }
      else {
        std::string::size_type v39 = *(void *)(a5 + 8);
      }
      uint64_t v40 = std::string::append(&v50, v38, v39);
      long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
      v51.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v41;
      v40->__r_.__value_.__l.__size_ = 0;
      v40->__r_.__value_.__r.__words[2] = 0;
      v40->__r_.__value_.__r.__words[0] = 0;
      uint64_t v42 = std::string::append(&v51, "\") to start from the outermost scope.");
      long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
      std::string::size_type v53 = v42->__r_.__value_.__r.__words[2];
      long long v52 = v43;
      v42->__r_.__value_.__l.__size_ = 0;
      v42->__r_.__value_.__r.__words[2] = 0;
      v42->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
      if (SHIBYTE(v53) < 0)
      {
        operator delete((void *)v52);
        if ((SHIBYTE(v51.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_41:
          if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_42;
          }
          goto LABEL_54;
        }
      }
      else if ((SHIBYTE(v51.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_41;
      }
      operator delete(v51.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_42:
        if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_43;
        }
        goto LABEL_55;
      }
LABEL_54:
      operator delete(v50.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_43:
        if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_44;
        }
        goto LABEL_56;
      }
LABEL_55:
      operator delete(v49.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_44:
        if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return;
        }
LABEL_57:
        uint64_t v44 = (void *)v47.__r_.__value_.__r.__words[0];
LABEL_63:
        operator delete(v44);
        return;
      }
LABEL_56:
      operator delete(v48.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
      goto LABEL_57;
    }
  }
  else if (*(unsigned char *)(a1 + 199))
  {
    goto LABEL_23;
  }
  std::operator+<char>();
  uint64_t v45 = std::string::append(&v51, "\" is not defined.");
  long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
  std::string::size_type v53 = v45->__r_.__value_.__r.__words[2];
  long long v52 = v46;
  v45->__r_.__value_.__l.__size_ = 0;
  v45->__r_.__value_.__r.__words[2] = 0;
  v45->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
  if (SHIBYTE(v53) < 0) {
    operator delete((void *)v52);
  }
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v44 = (void *)v51.__r_.__value_.__r.__words[0];
    goto LABEL_63;
  }
}

void sub_23CDCFCC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 73) < 0) {
    operator delete(*(void **)(v42 - 96));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_23CDCFE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    JUMPOUT(0x23CDCFE18);
  }
  JUMPOUT(0x23CDCFE10);
}

void google::protobuf::DescriptorBuilder::AddWarning(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, const std::string::value_type *a5)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    unsigned __int8 v9 = *(void (**)(void))(*(void *)v8 + 24);
    v9();
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 3689);
    size_t v10 = google::protobuf::internal::LogMessage::operator<<(v16, (const std::string::value_type *)(a1 + 56));
    long long v11 = google::protobuf::internal::LogMessage::operator<<(v10, " ");
    uint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v11, a2);
    int v13 = google::protobuf::internal::LogMessage::operator<<(v12, ": ");
    uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, a5);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDCFF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDCFF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::DescriptorBuilder::RecordPublicDependencies(uint64_t *result, unint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    unint64_t v5 = (uint64_t **)(result + 13);
    uint64_t v4 = (uint64_t *)result[13];
    if (v4)
    {
      while (1)
      {
        while (1)
        {
          std::string::size_type v6 = (uint64_t **)v4;
          unint64_t v7 = v4[4];
          if (v7 <= a2) {
            break;
          }
          uint64_t v4 = *v6;
          unint64_t v5 = v6;
          if (!*v6) {
            goto LABEL_9;
          }
        }
        if (v7 >= a2) {
          break;
        }
        uint64_t v4 = v6[1];
        if (!v4)
        {
          unint64_t v5 = v6 + 1;
          goto LABEL_9;
        }
      }
    }
    else
    {
      std::string::size_type v6 = (uint64_t **)(result + 13);
LABEL_9:
      uint64_t v8 = (uint64_t *)operator new(0x28uLL);
      v8[4] = a2;
      uint64_t *v8 = 0;
      v8[1] = 0;
      void v8[2] = (uint64_t)v6;
      *unint64_t v5 = v8;
      uint64_t v9 = *(void *)v3[12];
      if (v9)
      {
        v3[12] = v9;
        size_t v10 = *v5;
      }
      else
      {
        size_t v10 = v8;
      }
      unint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)v3[13], v10);
      ++v3[14];
      if (*(int *)(a2 + 36) >= 1)
      {
        uint64_t v11 = 0;
        do
        {
          uint64_t v12 = *(int *)(*(void *)(a2 + 88) + 4 * v11);
          int v13 = *(std::once_flag::_State_type **)(a2 + 24);
          if (v13)
          {
            unint64_t v14 = a2;
            if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
            {
              v16[0] = google::protobuf::FileDescriptor::DependenciesOnceInit;
              v16[1] = &v14;
              char v15 = v16;
              std::__call_once(v13, &v15, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>);
            }
          }
          unint64_t result = (uint64_t *)google::protobuf::DescriptorBuilder::RecordPublicDependencies((google::protobuf::DescriptorBuilder *)v3, *(const google::protobuf::FileDescriptor **)(*(void *)(a2 + 72) + 8 * v12));
          ++v11;
        }
        while (v11 < *(int *)(a2 + 36));
      }
    }
  }
  return result;
}

unint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  if (*a1 == a2)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = *(std::mutex **)a2;
    if (*(void *)a2)
    {
      std::mutex::lock(*(std::mutex **)a2);
      char v9 = 0;
      goto LABEL_6;
    }
  }
  char v9 = 1;
LABEL_6:
  size_t v10 = (void *)(*(void *)(a2 + 32) + 304);
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v11 = (const char *)a3;
  }
  else {
    uint64_t v11 = *(const char **)a3;
  }
  BOOL v21 = v11;
  uint64_t v12 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v10, &v21);
  if (v12)
  {
    LODWORD(v14) = *((_DWORD *)v12 + 6);
    unint64_t v13 = *((unsigned int *)v12 + 7);
    if (v14) {
      goto LABEL_25;
    }
    uint64_t v15 = *(void *)(a2 + 24);
    if (v15)
    {
LABEL_12:
      unint64_t SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(a1, v15, a3, 1);
      unint64_t v13 = HIDWORD(SymbolNotEnforcingDepsHelper);
      LODWORD(v14) = SymbolNotEnforcingDepsHelper;
      if (SymbolNotEnforcingDepsHelper) {
        goto LABEL_25;
      }
      goto LABEL_16;
    }
  }
  else
  {
    unint64_t v13 = 0;
    uint64_t v15 = *(void *)(a2 + 24);
    if (v15) {
      goto LABEL_12;
    }
  }
  LODWORD(v14) = 0;
LABEL_16:
  if (a4)
  {
    if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((google::protobuf::DescriptorPool *)a2, a3))
    {
      long long v17 = (void *)(*(void *)(a2 + 32) + 304);
      if (*(char *)(a3 + 23) >= 0) {
        int v18 = (const char *)a3;
      }
      else {
        int v18 = *(const char **)a3;
      }
      BOOL v21 = v18;
      long long v19 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v17, &v21);
      if (v19)
      {
        unint64_t v14 = (unint64_t)v19[3];
        unint64_t v13 = HIDWORD(v14);
        if (v9) {
          return v14 | (v13 << 32);
        }
      }
      else
      {
        LODWORD(v14) = 0;
        unint64_t v13 = 0;
        if (v9) {
          return v14 | (v13 << 32);
        }
      }
      goto LABEL_26;
    }
    LODWORD(v14) = 0;
  }
LABEL_25:
  if ((v9 & 1) == 0) {
LABEL_26:
  }
    std::mutex::unlock(v8);
  return v14 | (v13 << 32);
}

void sub_23CDD021C(_Unwind_Exception *exception_object)
{
  if ((v2 & 1) == 0) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

unint64_t google::protobuf::DescriptorBuilder::FindSymbol(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper((void *)a1, *(void *)a1, a2, a3);
  unint64_t v7 = v5;
  uint64_t v8 = v5;
  switch((int)SymbolNotEnforcingDepsHelper)
  {
    case 1:
    case 4:
    case 6:
      uint64_t v8 = (void *)v5[2];
      if (v8 != *(void **)(a1 + 80)) {
        goto LABEL_8;
      }
      goto LABEL_18;
    case 2:
      uint64_t v8 = (void *)v5[5];
      if (v8 == *(void **)(a1 + 80)) {
        goto LABEL_18;
      }
      goto LABEL_8;
    case 3:
    case 7:
      uint64_t v8 = *(void **)(v5[2] + 16);
      if (v8 == *(void **)(a1 + 80)) {
        goto LABEL_18;
      }
      goto LABEL_8;
    case 5:
      uint64_t v8 = *(void **)(v5[3] + 16);
      if (v8 == *(void **)(a1 + 80)) {
        goto LABEL_18;
      }
      goto LABEL_8;
    case 8:
      goto LABEL_7;
    default:
      uint64_t v8 = 0;
LABEL_7:
      if (v8 == *(void **)(a1 + 80)) {
        goto LABEL_18;
      }
LABEL_8:
      char v9 = *(void **)(a1 + 104);
      if (!v9) {
        goto LABEL_38;
      }
      break;
  }
  while (1)
  {
    unint64_t v10 = v9[4];
    if ((unint64_t)v8 < v10) {
      goto LABEL_11;
    }
    if (v10 >= (unint64_t)v8) {
      break;
    }
    ++v9;
LABEL_11:
    char v9 = (void *)*v9;
    if (!v9) {
      goto LABEL_38;
    }
  }
LABEL_18:
  uint64_t v11 = *(uint64_t **)(a1 + 128);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(a1 + 128);
    unint64_t v13 = *(void **)(a1 + 128);
    do
    {
      unint64_t v14 = v13[4];
      BOOL v15 = v14 >= (unint64_t)v8;
      if (v14 >= (unint64_t)v8) {
        unint64_t v16 = v13;
      }
      else {
        unint64_t v16 = v13 + 1;
      }
      if (v15) {
        uint64_t v12 = v13;
      }
      unint64_t v13 = (void *)*v16;
    }
    while (*v16);
    if (v12 != (uint64_t *)(a1 + 128) && (unint64_t)v8 >= v12[4])
    {
      long long v17 = (uint64_t *)v12[1];
      if (v17)
      {
        do
        {
          int v18 = v17;
          long long v17 = (uint64_t *)*v17;
        }
        while (v17);
      }
      else
      {
        long long v19 = v12;
        do
        {
          int v18 = (uint64_t *)v19[2];
          BOOL v34 = *v18 == (void)v19;
          long long v19 = v18;
        }
        while (!v34);
      }
      if (*(uint64_t **)(a1 + 120) == v12) {
        *(void *)(a1 + 120) = v18;
      }
      --*(void *)(a1 + 136);
      std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v11, v12);
      operator delete(v12);
    }
  }
LABEL_38:
  if (!SymbolNotEnforcingDepsHelper || !*(unsigned char *)(*(void *)a1 + 40)) {
    return SymbolNotEnforcingDepsHelper;
  }
  int v20 = v7;
  switch((int)SymbolNotEnforcingDepsHelper)
  {
    case 1:
    case 4:
    case 6:
      int v20 = (void *)v7[2];
      BOOL v21 = *(void **)(a1 + 80);
      if (v20 == v21) {
        return SymbolNotEnforcingDepsHelper;
      }
      goto LABEL_47;
    case 2:
      int v20 = (void *)v7[5];
      BOOL v21 = *(void **)(a1 + 80);
      if (v20 == v21) {
        return SymbolNotEnforcingDepsHelper;
      }
      goto LABEL_47;
    case 3:
    case 7:
      int v20 = *(void **)(v7[2] + 16);
      BOOL v21 = *(void **)(a1 + 80);
      if (v20 == v21) {
        return SymbolNotEnforcingDepsHelper;
      }
      goto LABEL_47;
    case 5:
      int v20 = *(void **)(v7[3] + 16);
      BOOL v21 = *(void **)(a1 + 80);
      if (v20 == v21) {
        return SymbolNotEnforcingDepsHelper;
      }
      goto LABEL_47;
    case 8:
      goto LABEL_46;
    default:
      int v20 = 0;
LABEL_46:
      BOOL v21 = *(void **)(a1 + 80);
      if (v20 == v21) {
        return SymbolNotEnforcingDepsHelper;
      }
LABEL_47:
      uint64_t v23 = (void *)(a1 + 104);
      std::string::size_type v22 = *(void **)(a1 + 104);
      if (!v22) {
        goto LABEL_48;
      }
      break;
  }
  do
  {
    unint64_t v29 = v22[4];
    if ((unint64_t)v20 >= v29)
    {
      if (v29 >= (unint64_t)v20) {
        return SymbolNotEnforcingDepsHelper;
      }
      ++v22;
    }
    std::string::size_type v22 = (void *)*v22;
  }
  while (v22);
LABEL_48:
  __str = (std::string *)a2;
  unint64_t v51 = SymbolNotEnforcingDepsHelper;
  if (SymbolNotEnforcingDepsHelper != 8) {
    goto LABEL_134;
  }
  long long v24 = (void *)v21[1];
  std::string::size_type v25 = *((unsigned __int8 *)v24 + 23);
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v26 = *((unsigned __int8 *)v24 + 23);
  }
  else {
    std::string::size_type v26 = v24[1];
  }
  std::string::size_type v27 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
    if (v26 < size) {
      goto LABEL_91;
    }
  }
  else
  {
    std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (v26 < v27) {
      goto LABEL_91;
    }
  }
  if ((v25 & 0x80) == 0)
  {
    if (size != -1)
    {
      if (v25 >= size) {
        size_t v30 = size;
      }
      else {
        size_t v30 = *((unsigned __int8 *)v24 + 23);
      }
      uint64_t v31 = (void *)v21[1];
      goto LABEL_75;
    }
LABEL_137:
    std::string::__throw_out_of_range[abi:ne180100]();
  }
  if (size == -1) {
    goto LABEL_137;
  }
  if (v24[1] >= size) {
    size_t v30 = size;
  }
  else {
    size_t v30 = v24[1];
  }
  uint64_t v31 = (void *)*v24;
LABEL_75:
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v32 = __str;
  }
  else {
    std::string::size_type v32 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  int v33 = memcmp(v31, v32, v30);
  BOOL v34 = v30 == size && v33 == 0;
  uint64_t v23 = (void *)(a1 + 104);
  if (v34)
  {
    if ((v27 & 0x80) != 0)
    {
      std::string::size_type v35 = __str->__r_.__value_.__l.__size_;
      if (v26 != v35) {
        goto LABEL_87;
      }
    }
    else
    {
      std::string::size_type v35 = v27;
      if (v26 != v27)
      {
LABEL_87:
        if ((v25 & 0x80) != 0) {
          long long v24 = (void *)*v24;
        }
        if (*((unsigned char *)v24 + v35) != 46) {
          goto LABEL_91;
        }
      }
    }
    return v51;
  }
LABEL_91:
  long long v36 = *(void **)(a1 + 96);
  if (v36 != v23)
  {
    std::string::size_type v52 = __str->__r_.__value_.__l.__size_;
    if ((v27 & 0x80u) == 0) {
      int v37 = __str;
    }
    else {
      int v37 = (std::string *)__str->__r_.__value_.__r.__words[0];
    }
    __s2 = v37;
    do
    {
      uint64_t v38 = v36[4];
      if (v38)
      {
        std::string::size_type v39 = *(void **)(v38 + 8);
        size_t v40 = *((unsigned __int8 *)v39 + 23);
        if ((v40 & 0x80u) == 0) {
          std::string::size_type v41 = *((unsigned __int8 *)v39 + 23);
        }
        else {
          std::string::size_type v41 = v39[1];
        }
        if ((v27 & 0x80) != 0)
        {
          size_t v42 = v52;
          if (v41 < v52) {
            goto LABEL_128;
          }
        }
        else
        {
          size_t v42 = v27;
          if (v41 < v27) {
            goto LABEL_128;
          }
        }
        if ((v40 & 0x80) != 0)
        {
          if (v42 == -1) {
LABEL_136:
          }
            std::string::__throw_out_of_range[abi:ne180100]();
          if (v39[1] >= v42) {
            size_t v43 = v42;
          }
          else {
            size_t v43 = v39[1];
          }
          uint64_t v44 = (void *)*v39;
        }
        else
        {
          if (v42 == -1) {
            goto LABEL_136;
          }
          if (v40 >= v42) {
            size_t v43 = v42;
          }
          else {
            size_t v43 = *((unsigned __int8 *)v39 + 23);
          }
          uint64_t v44 = *(void **)(v38 + 8);
        }
        int v45 = memcmp(v44, __s2, v43);
        BOOL v46 = v43 == v42 && v45 == 0;
        uint64_t v23 = (void *)(a1 + 104);
        if (v46)
        {
          if ((v27 & 0x80) != 0)
          {
            std::string::size_type v47 = v52;
            if (v41 == v52) {
              return v51;
            }
          }
          else
          {
            std::string::size_type v47 = v27;
            if (v41 == v27) {
              return v51;
            }
          }
          if ((v40 & 0x80) != 0) {
            std::string::size_type v39 = (void *)*v39;
          }
          if (*((unsigned char *)v39 + v47) == 46) {
            return v51;
          }
        }
      }
LABEL_128:
      std::string v48 = (void *)v36[1];
      if (v48)
      {
        do
        {
          std::string v49 = v48;
          std::string v48 = (void *)*v48;
        }
        while (v48);
      }
      else
      {
        do
        {
          std::string v49 = (void *)v36[2];
          BOOL v34 = *v49 == (void)v36;
          long long v36 = v49;
        }
        while (!v34);
      }
      long long v36 = v49;
    }
    while (v49 != v23);
  }
LABEL_134:
  *(void *)(a1 + 144) = v20;
  std::string::operator=((std::string *)(a1 + 152), __str);
  return 0;
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(uint64_t a1, std::string *this, uint64_t a3, int a4, int a5)
{
  uint64_t v8 = this;
  *(void *)(a1 + 144) = 0;
  if (*(char *)(a1 + 199) < 0)
  {
    **(unsigned char **)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    int v10 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 176) = 0;
    *(unsigned char *)(a1 + 199) = 0;
    int v10 = SHIBYTE(this->__r_.__value_.__r.__words[2]);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((_BYTE)v10 && this->__r_.__value_.__s.__data_[0] == 46)
      {
        std::string::size_type v11 = v10 - 1;
        if (v11 <= 0x7FFFFFFFFFFFFFF7) {
          goto LABEL_6;
        }
LABEL_13:
        std::string::__throw_length_error[abi:ne180100]();
      }
LABEL_14:
      std::string::size_type v14 = std::string::find(this, 46, 0);
      memset(&__dst, 0, sizeof(__dst));
      if (v14 == -1)
      {
        std::string::operator=(&__dst, v8);
LABEL_36:
        if (*(char *)(a3 + 23) < 0) {
          std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
        }
        else {
          std::string __str = *(std::string *)a3;
        }
        while (1)
        {
          std::string::size_type v24 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
          if (v24 == -1)
          {
            unint64_t Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, (uint64_t)v8, a5);
            goto LABEL_67;
          }
          std::string::erase(&__str, v24, 0xFFFFFFFFFFFFFFFFLL);
          if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = __str.__r_.__value_.__l.__size_;
          }
          std::string::append(&__str, 1uLL, 46);
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_dst = &__dst;
          }
          else {
            p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
          }
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v27 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v27 = __dst.__r_.__value_.__l.__size_;
          }
          std::string::append(&__str, (const std::string::value_type *)p_dst, v27);
          unint64_t v28 = google::protobuf::DescriptorBuilder::FindSymbol(a1, (uint64_t)&__str, a5);
          unint64_t Symbol = v28;
          if (v28)
          {
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v29 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v29 = __dst.__r_.__value_.__l.__size_;
            }
            std::string::size_type v30 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
            if ((v30 & 0x80u) != 0) {
              std::string::size_type v30 = v8->__r_.__value_.__l.__size_;
            }
            if (v30 <= v29)
            {
              if (a4 != 1) {
                goto LABEL_67;
              }
              unsigned int v23 = v28;
              if (v28 == 1 || v28 == 4) {
                goto LABEL_68;
              }
            }
            else if (v28 <= 8 && ((1 << v28) & 0x152) != 0)
            {
              std::string::append(&__str, v8, v29, v30 - v29);
              unint64_t v31 = google::protobuf::DescriptorBuilder::FindSymbol(a1, (uint64_t)&__str, a5);
              unint64_t Symbol = v31;
              if (!v31)
              {
                std::string::operator=((std::string *)(a1 + 176), &__str);
                unsigned int v23 = 0;
                goto LABEL_68;
              }
LABEL_67:
              unsigned int v23 = Symbol;
LABEL_68:
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
              {
                operator delete(__str.__r_.__value_.__l.__data_);
                if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  return Symbol & 0xFFFFFFFF00000000 | v23;
                }
              }
              else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
                return Symbol & 0xFFFFFFFF00000000 | v23;
              }
              operator delete(__dst.__r_.__value_.__l.__data_);
              return Symbol & 0xFFFFFFFF00000000 | v23;
            }
          }
          std::string::erase(&__str, size, 0xFFFFFFFFFFFFFFFFLL);
        }
      }
      std::string::size_type v15 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
      int v16 = (char)v15;
      if ((v15 & 0x80u) != 0) {
        std::string::size_type v15 = v8->__r_.__value_.__l.__size_;
      }
      if (v16 >= 0) {
        long long v17 = v8;
      }
      else {
        long long v17 = (std::string *)v8->__r_.__value_.__r.__words[0];
      }
      if (v15 >= v14) {
        std::string::size_type v18 = v14;
      }
      else {
        std::string::size_type v18 = v15;
      }
      if (v18 > 0x7FFFFFFFFFFFFFF7) {
        std::string::__throw_length_error[abi:ne180100]();
      }
      if (v18 >= 0x17)
      {
        uint64_t v33 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v18 | 7) != 0x17) {
          uint64_t v33 = v18 | 7;
        }
        uint64_t v34 = v33 + 1;
        p_str = operator new(v33 + 1);
        __str.__r_.__value_.__l.__size_ = v18;
        __str.__r_.__value_.__r.__words[2] = v34 | 0x8000000000000000;
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)p_str;
      }
      else
      {
        *((unsigned char *)&__str.__r_.__value_.__s + 23) = v18;
        p_str = &__str;
        if (!v18)
        {
          __str.__r_.__value_.__s.__data_[0] = 0;
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_27:
            std::string __dst = __str;
            goto LABEL_36;
          }
LABEL_77:
          operator delete(__dst.__r_.__value_.__l.__data_);
          goto LABEL_27;
        }
      }
      memmove(p_str, v17, v18);
      *((unsigned char *)p_str + v18) = 0;
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_77;
    }
  }
  std::string::size_type v13 = this->__r_.__value_.__l.__size_;
  if (!v13 || *this->__r_.__value_.__l.__data_ != 46) {
    goto LABEL_14;
  }
  uint64_t v8 = (std::string *)this->__r_.__value_.__r.__words[0];
  std::string::size_type v11 = v13 - 1;
  if (v13 - 1 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_13;
  }
LABEL_6:
  if (v11 >= 0x17)
  {
    uint64_t v20 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17) {
      uint64_t v20 = v11 | 7;
    }
    uint64_t v21 = v20 + 1;
    uint64_t v12 = (std::string *)operator new(v20 + 1);
    __dst.__r_.__value_.__l.__size_ = v11;
    __dst.__r_.__value_.__r.__words[2] = v21 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v12;
  }
  else
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v11;
    uint64_t v12 = &__dst;
    if (!v11) {
      goto LABEL_32;
    }
  }
  memmove(v12, (char *)&v8->__r_.__value_.__l.__data_ + 1, v11);
LABEL_32:
  v12->__r_.__value_.__s.__data_[v11] = 0;
  unint64_t Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, (uint64_t)&__dst, a5);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  unsigned int v23 = Symbol;
  return Symbol & 0xFFFFFFFF00000000 | v23;
}

void sub_23CDD0BB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((a23 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a23 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a18);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = 0;
  char v3 = 0;
  unint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  std::string::size_type v6 = *(unsigned char **)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  while ((v4 & 0x80) != 0)
  {
    unint64_t v7 = *(unsigned char **)a2;
    if (v5 <= v2)
    {
      if ((v5 == 0) | v3 & 1) {
        return 0;
      }
      if (*v6 == 46)
      {
        size_t v12 = v5 - 1;
        if (v5 - 1 <= 0x7FFFFFFFFFFFFFF7)
        {
LABEL_26:
          if (v12 >= 0x17)
          {
            uint64_t v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v12 | 7) != 0x17) {
              uint64_t v15 = v12 | 7;
            }
            uint64_t v16 = v15 + 1;
            std::string::size_type v14 = operator new(v15 + 1);
            __dst[1] = v12;
            unint64_t v18 = v16 | 0x8000000000000000;
            __dst[0] = v14;
          }
          else
          {
            HIBYTE(v18) = v12;
            std::string::size_type v14 = __dst;
            if (!v12)
            {
LABEL_34:
              *((unsigned char *)v14 + v12) = 0;
              operator new();
            }
          }
          memmove(v14, v6 + 1, v12);
          goto LABEL_34;
        }
LABEL_35:
        std::string::__throw_length_error[abi:ne180100]();
      }
LABEL_29:
      operator new();
    }
LABEL_7:
    char v8 = 0;
    int v9 = v7[v2];
    BOOL v11 = (v9 - 97) >= 0x1A && (v9 - 65) >= 0x1A && (v9 - 48) >= 0xA;
    if (v11 && v9 != 95)
    {
      if (v3 & 1 | (v9 != 46)) {
        return 0;
      }
      char v8 = 1;
    }
    ++v2;
    char v3 = v8;
  }
  unint64_t v7 = (unsigned char *)a2;
  if (v2 < v4) {
    goto LABEL_7;
  }
  if (!((v4 == 0) | v3 & 1))
  {
    if (*(void *)a2 == 46)
    {
      std::string::size_type v6 = (unsigned char *)a2;
      size_t v12 = v4 - 1;
      if (v4 - 1 <= 0x7FFFFFFFFFFFFFF7) {
        goto LABEL_26;
      }
      goto LABEL_35;
    }
    goto LABEL_29;
  }
  return 0;
}

void sub_23CDD1704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  MEMORY[0x23ECF2BC0](v16, 0x1012C40EC159624);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_23CDD1794(_Unwind_Exception *exception_object)
{
  unint64_t v4 = *(void **)v2;
  if (*(void *)v2)
  {
    *(void *)(v2 + 8) = v4;
    operator delete(v4);
  }
  *(void *)(v1 + 192) = v2;
  _Unwind_Resume(exception_object);
}

void sub_23CDD17B4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 192) = v2;
  _Unwind_Resume(a1);
}

void sub_23CDD17BC(_Unwind_Exception *exception_object)
{
  unint64_t v4 = *(void **)v2;
  if (*(void *)v2)
  {
    *(void *)(v2 + 8) = v4;
    operator delete(v4);
  }
  *(void *)(v1 + 192) = v2;
  _Unwind_Resume(exception_object);
}

void sub_23CDD17DC()
{
}

void google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  int v6 = 160;
  uint64_t v2 = *(void **)(v1 + 192);
  if ((unint64_t)v2 >= *(void *)(v1 + 200))
  {
    unint64_t v4 = std::vector<std::vector<char>>::__emplace_back_slow_path<int &>((char **)(v1 + 184), &v6);
  }
  else
  {
    *uint64_t v2 = 0;
    v2[1] = 0;
    v2[2] = 0;
    char v3 = operator new(0xA0uLL);
    *uint64_t v2 = v3;
    v2[2] = v3 + 10;
    v3[8] = 0u;
    v3[9] = 0u;
    v3[6] = 0u;
    v3[7] = 0u;
    v3[4] = 0u;
    v3[5] = 0u;
    v3[2] = 0u;
    v3[3] = 0u;
    *char v3 = 0u;
    v3[1] = 0u;
    v2[1] = v3 + 10;
    unint64_t v4 = (char *)(v2 + 3);
    *(void *)(v1 + 192) = v2 + 3;
  }
  *(void *)(v1 + 192) = v4;
  unint64_t v5 = (_OWORD *)*((void *)v4 - 3);
  v5[8] = 0u;
  v5[9] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  std::string v5[2] = 0u;
  v5[3] = 0u;
  *unint64_t v5 = 0u;
  v5[1] = 0u;
  operator new();
}

void sub_23CDD19EC(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x10A0C40C644375CLL);
  _Unwind_Resume(a1);
}

void sub_23CDD1A1C(_Unwind_Exception *a1)
{
}

void sub_23CDD1A34(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_23CDD1A58(_Unwind_Exception *a1)
{
  *(void *)(v1 + 192) = v2;
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::AddSymbol(uint64_t a1, std::string::size_type a2, uint64_t *a3, uint64_t a4, uint64_t a5, const char *a6, const char *a7)
{
  BOOL v11 = a3;
  if (!a3)
  {
    BOOL v11 = *(uint64_t **)(a1 + 80);
    if (google::protobuf::DescriptorPool::Tables::AddSymbol(*(void **)(a1 + 8), (const char *)a2, a6, a7))goto LABEL_3; {
LABEL_6:
    }
    uint64_t v15 = (void *)(*(void *)(a1 + 8) + 304);
    if (*(char *)(a2 + 23) >= 0) {
      std::string::size_type v16 = a2;
    }
    else {
      std::string::size_type v16 = *(void *)a2;
    }
    __p[0].__r_.__value_.__r.__words[0] = v16;
    long long v17 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v15, (const char **)&__p[0].__r_.__value_.__l.__data_);
    if (v17)
    {
      unint64_t v18 = (const std::string::value_type ***)v17[4];
      switch(*((_DWORD *)v17 + 6))
      {
        case 1:
        case 4:
        case 6:
          long long v19 = (const std::string::value_type ****)(v18 + 2);
          goto LABEL_71;
        case 2:
          long long v19 = (const std::string::value_type ****)(v18 + 5);
          goto LABEL_71;
        case 3:
        case 7:
          uint64_t v33 = v18[2];
          goto LABEL_69;
        case 5:
          uint64_t v33 = v18[3];
LABEL_69:
          long long v19 = (const std::string::value_type ****)(v33 + 2);
LABEL_71:
          unint64_t v18 = *v19;
          goto LABEL_72;
        case 8:
LABEL_72:
          if (v18 != *(const std::string::value_type ****)(a1 + 80)) {
            goto LABEL_73;
          }
          goto LABEL_15;
        default:
          break;
      }
    }
    unint64_t v18 = 0;
    if (!*(void *)(a1 + 80))
    {
LABEL_15:
      std::string::size_type v23 = std::string::rfind((const std::string *)a2, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v23 == -1)
      {
        std::operator+<char>();
        std::string::size_type v30 = std::string::append(&v67, "\" is already defined.");
        long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
        __p[0].__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v31;
        v30->__r_.__value_.__l.__size_ = 0;
        v30->__r_.__value_.__r.__words[2] = 0;
        v30->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        if ((SHIBYTE(v67.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return 0;
        }
        std::string::size_type v32 = (void *)v67.__r_.__value_.__r.__words[0];
        goto LABEL_88;
      }
      size_t v24 = v23;
      if (*(char *)(a2 + 23) < 0)
      {
        std::string::size_type v25 = *(void *)(a2 + 8);
        if (v25 > v23)
        {
          std::string::size_type v26 = *(void *)a2;
          std::string::size_type v27 = v23 + 1;
          std::string::size_type v28 = v25 - (v23 + 1);
          if (v28 <= 0x7FFFFFFFFFFFFFF7)
          {
LABEL_19:
            if (v28 >= 0x17)
            {
              uint64_t v34 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
              if ((v28 | 7) != 0x17) {
                uint64_t v34 = v28 | 7;
              }
              uint64_t v35 = v34 + 1;
              p_dst = (std::string *)operator new(v34 + 1);
              __dst.__r_.__value_.__l.__size_ = v28;
              __dst.__r_.__value_.__r.__words[2] = v35 | 0x8000000000000000;
              __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
            }
            else
            {
              *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v28;
              p_dst = &__dst;
              if (v25 == v27)
              {
LABEL_31:
                p_dst->__r_.__value_.__s.__data_[v28] = 0;
                long long v36 = std::string::insert(&__dst, 0, "\"");
                long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
                v65.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v65.__r_.__value_.__l.__data_ = v37;
                v36->__r_.__value_.__l.__size_ = 0;
                v36->__r_.__value_.__r.__words[2] = 0;
                v36->__r_.__value_.__r.__words[0] = 0;
                uint64_t v38 = std::string::append(&v65, "\" is already defined in \"");
                long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
                v66.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v39;
                v38->__r_.__value_.__l.__size_ = 0;
                v38->__r_.__value_.__r.__words[2] = 0;
                v38->__r_.__value_.__r.__words[0] = 0;
                size_t v40 = *(unsigned __int8 *)(a2 + 23);
                int v41 = (char)v40;
                if ((v40 & 0x80u) != 0) {
                  size_t v40 = *(void *)(a2 + 8);
                }
                if (v41 >= 0) {
                  size_t v42 = (const void *)a2;
                }
                else {
                  size_t v42 = *(const void **)a2;
                }
                if (v40 < v24) {
                  size_t v24 = v40;
                }
                if (v24 > 0x7FFFFFFFFFFFFFF7) {
                  std::string::__throw_length_error[abi:ne180100]();
                }
                if (v24 >= 0x17)
                {
                  uint64_t v44 = (v24 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v24 | 7) != 0x17) {
                    uint64_t v44 = v24 | 7;
                  }
                  uint64_t v45 = v44 + 1;
                  size_t v43 = operator new(v44 + 1);
                  std::string::size_type v62 = v24;
                  int64_t v63 = v45 | 0x8000000000000000;
                  long long v61 = v43;
                }
                else
                {
                  HIBYTE(v63) = v24;
                  size_t v43 = &v61;
                  if (!v24)
                  {
LABEL_46:
                    *((unsigned char *)v43 + v24) = 0;
                    if (v63 >= 0) {
                      BOOL v46 = (const std::string::value_type *)&v61;
                    }
                    else {
                      BOOL v46 = (const std::string::value_type *)v61;
                    }
                    if (v63 >= 0) {
                      std::string::size_type v47 = HIBYTE(v63);
                    }
                    else {
                      std::string::size_type v47 = v62;
                    }
                    std::string v48 = std::string::append(&v66, v46, v47);
                    long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
                    v67.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
                    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v49;
                    v48->__r_.__value_.__l.__size_ = 0;
                    v48->__r_.__value_.__r.__words[2] = 0;
                    v48->__r_.__value_.__r.__words[0] = 0;
                    std::string v50 = std::string::append(&v67, "\".");
                    long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
                    __p[0].__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
                    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v51;
                    v50->__r_.__value_.__l.__size_ = 0;
                    v50->__r_.__value_.__r.__words[2] = 0;
                    v50->__r_.__value_.__r.__words[0] = 0;
                    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)__p);
                    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
                    {
                      operator delete(__p[0].__r_.__value_.__l.__data_);
                      if ((SHIBYTE(v67.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                      {
LABEL_54:
                        if ((SHIBYTE(v63) & 0x80000000) == 0) {
                          goto LABEL_55;
                        }
                        goto LABEL_64;
                      }
                    }
                    else if ((SHIBYTE(v67.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    {
                      goto LABEL_54;
                    }
                    operator delete(v67.__r_.__value_.__l.__data_);
                    if ((SHIBYTE(v63) & 0x80000000) == 0)
                    {
LABEL_55:
                      if ((SHIBYTE(v66.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                        goto LABEL_56;
                      }
                      goto LABEL_65;
                    }
LABEL_64:
                    operator delete(v61);
                    if ((SHIBYTE(v66.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    {
LABEL_56:
                      if ((SHIBYTE(v65.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                        goto LABEL_57;
                      }
                      goto LABEL_66;
                    }
LABEL_65:
                    operator delete(v66.__r_.__value_.__l.__data_);
                    if ((SHIBYTE(v65.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                    {
LABEL_57:
                      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                        return 0;
                      }
                      goto LABEL_67;
                    }
LABEL_66:
                    operator delete(v65.__r_.__value_.__l.__data_);
                    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                      return 0;
                    }
LABEL_67:
                    std::string::size_type v32 = (void *)__dst.__r_.__value_.__r.__words[0];
LABEL_88:
                    operator delete(v32);
                    return 0;
                  }
                }
                memmove(v43, v42, v24);
                goto LABEL_46;
              }
            }
            memmove(p_dst, (const void *)(v26 + v27), v28);
            goto LABEL_31;
          }
LABEL_61:
          std::string::__throw_length_error[abi:ne180100]();
        }
      }
      else
      {
        std::string::size_type v25 = *(unsigned __int8 *)(a2 + 23);
        std::string::size_type v26 = a2;
        if (v23 < v25)
        {
          std::string::size_type v27 = v23 + 1;
          std::string::size_type v28 = v25 - (v23 + 1);
          if (v28 <= 0x7FFFFFFFFFFFFFF7) {
            goto LABEL_19;
          }
          goto LABEL_61;
        }
      }
      std::string::__throw_out_of_range[abi:ne180100]();
    }
LABEL_73:
    std::operator+<char>();
    std::string::size_type v52 = std::string::append(&v65, "\" is already defined in file \"");
    long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
    v66.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v53;
    v52->__r_.__value_.__l.__size_ = 0;
    v52->__r_.__value_.__r.__words[2] = 0;
    v52->__r_.__value_.__r.__words[0] = 0;
    int v54 = *((char *)*v18 + 23);
    if (v54 >= 0) {
      unsigned __int8 v55 = (const std::string::value_type *)*v18;
    }
    else {
      unsigned __int8 v55 = **v18;
    }
    if (v54 >= 0) {
      std::string::size_type v56 = *((unsigned __int8 *)*v18 + 23);
    }
    else {
      std::string::size_type v56 = (std::string::size_type)(*v18)[1];
    }
    uint64_t v57 = std::string::append(&v66, v55, v56);
    long long v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
    v67.__r_.__value_.__r.__words[2] = v57->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v58;
    v57->__r_.__value_.__l.__size_ = 0;
    v57->__r_.__value_.__r.__words[2] = 0;
    v57->__r_.__value_.__r.__words[0] = 0;
    int64_t v59 = std::string::append(&v67, "\".");
    long long v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v60;
    v59->__r_.__value_.__l.__size_ = 0;
    v59->__r_.__value_.__r.__words[2] = 0;
    v59->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if ((SHIBYTE(v67.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_81:
        if ((SHIBYTE(v66.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_82;
        }
        goto LABEL_86;
      }
    }
    else if ((SHIBYTE(v67.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_81;
    }
    operator delete(v67.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v66.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_82:
      if ((SHIBYTE(v65.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return 0;
      }
      goto LABEL_87;
    }
LABEL_86:
    operator delete(v66.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v65.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return 0;
    }
LABEL_87:
    std::string::size_type v32 = (void *)v65.__r_.__value_.__r.__words[0];
    goto LABEL_88;
  }
  if (!google::protobuf::DescriptorPool::Tables::AddSymbol(*(void **)(a1 + 8), (const char *)a2, a6, a7))goto LABEL_6; {
LABEL_3:
  }
  if (google::protobuf::FileDescriptorTables::AddAliasUnderParent(*(void *)(a1 + 88), v11, a4, (uint64_t)a6, (uint64_t)a7))return 1; {
  if (!*(unsigned char *)(a1 + 48))
  }
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 4042);
    uint64_t v20 = google::protobuf::internal::LogMessage::operator<<(__p, "\"");
    uint64_t v21 = google::protobuf::internal::LogMessage::operator<<(v20, (const std::string::value_type *)a2);
    std::string::size_type v22 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v21, "\" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this s"
                            "houldn't be possible.");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v67, v22);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_23CDD2070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (a47 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddPackage(uint64_t a1, std::string *a2, uint64_t a3, const char *a4)
{
  if (!google::protobuf::DescriptorPool::Tables::AddSymbol(*(void **)(a1 + 8), (const char *)a2, (const char *)8, a4))
  {
    std::string::size_type v13 = (void *)(*(void *)(a1 + 8) + 304);
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v14 = a2;
    }
    else {
      std::string::size_type v14 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(void *)&long long __dst = v14;
    uint64_t v15 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v13, (const char **)&__dst);
    if (v15)
    {
      int v16 = *((_DWORD *)v15 + 6);
      if (v16 == 8) {
        return;
      }
      long long v17 = v15[4];
    }
    else
    {
      int v16 = 0;
      long long v17 = 0;
    }
    std::operator+<char>();
    unint64_t v18 = std::string::append(&v32, "\" is already defined (as something other than a package) in file \"");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    switch(v16)
    {
      case 2:
        uint64_t v20 = (uint64_t **)(v17 + 5);
        break;
      case 3:
      case 7:
        uint64_t v23 = v17[2];
        goto LABEL_36;
      case 5:
        uint64_t v23 = v17[3];
LABEL_36:
        uint64_t v20 = (uint64_t **)(v23 + 16);
        break;
      default:
        uint64_t v20 = (uint64_t **)(v17 + 2);
        break;
    }
    uint64_t v24 = **v20;
    int v25 = *(char *)(v24 + 23);
    if (v25 >= 0) {
      std::string::size_type v26 = (const std::string::value_type *)v24;
    }
    else {
      std::string::size_type v26 = *(const std::string::value_type **)v24;
    }
    if (v25 >= 0) {
      std::string::size_type v27 = *(unsigned __int8 *)(v24 + 23);
    }
    else {
      std::string::size_type v27 = *(void *)(v24 + 8);
    }
    std::string::size_type v28 = std::string::append(&v33, v26, v27);
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v30 = std::string::append(&v34, "\".");
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    unint64_t v36 = v30->__r_.__value_.__r.__words[2];
    long long __dst = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a3, 0, (const std::string::value_type *)&__dst);
    if (SHIBYTE(v36) < 0)
    {
      operator delete((void *)__dst);
      if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_45:
        if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_46;
        }
        goto LABEL_50;
      }
    }
    else if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_45;
    }
    operator delete(v34.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_46:
      if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_51:
      operator delete(v32.__r_.__value_.__l.__data_);
      return;
    }
LABEL_50:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_51;
  }
  std::string::size_type v7 = std::string::rfind(a2, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v7 != -1)
  {
    std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    int v9 = (char)size;
    if ((size & 0x80u) != 0) {
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    if (v9 >= 0) {
      int v10 = a2;
    }
    else {
      int v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if (size >= v7) {
      size_t v11 = v7;
    }
    else {
      size_t v11 = size;
    }
    if (v11 > 0x7FFFFFFFFFFFFFF7) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    if (v11 >= 0x17)
    {
      uint64_t v21 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v11 | 7) != 0x17) {
        uint64_t v21 = v11 | 7;
      }
      uint64_t v22 = v21 + 1;
      p_dst = (long long *)operator new(v21 + 1);
      *((void *)&__dst + 1) = v11;
      unint64_t v36 = v22 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v36) = v11;
      p_dst = &__dst;
      if (!v11)
      {
LABEL_31:
        *((unsigned char *)p_dst + v11) = 0;
        operator new();
      }
    }
    memmove(p_dst, v10, v11);
    goto LABEL_31;
  }

  google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (uint64_t *)a2, (const std::string::value_type *)a2, a3);
}

void sub_23CDD26C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  MEMORY[0x23ECF2BC0](v35, 0x1012C40EC159624);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateSymbolName(uint64_t a1, uint64_t *a2, const std::string::value_type *a3, uint64_t a4)
{
  unint64_t v7 = *((unsigned __int8 *)a2 + 23);
  BOOL v8 = *((char *)a2 + 23) < 0;
  unint64_t v9 = a2[1];
  if (*((char *)a2 + 23) >= 0) {
    uint64_t v10 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    uint64_t v10 = a2[1];
  }
  if (v10)
  {
    unint64_t v12 = 0;
    while (1)
    {
      if (v8) {
        std::string::size_type v14 = (uint64_t *)*a2;
      }
      else {
        std::string::size_type v14 = a2;
      }
      int v15 = *((unsigned __int8 *)v14 + v12);
      BOOL v17 = (v15 - 123) > 0xFFFFFFE5
         || (v15 - 91) > 0xFFFFFFE5
         || (v15 - 58) > 0xFFFFFFF5;
      if (v17 || v15 == 95) {
        goto LABEL_7;
      }
      std::operator+<char>();
      unint64_t v18 = std::string::append(&v20, "\" is not a valid identifier.");
      long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
      std::string::size_type v22 = v18->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v19;
      v18->__r_.__value_.__l.__size_ = 0;
      v18->__r_.__value_.__r.__words[2] = 0;
      v18->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (const std::string::value_type *)__p);
      if (SHIBYTE(v22) < 0)
      {
        operator delete(__p[0]);
        if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
LABEL_26:
        }
          operator delete(v20.__r_.__value_.__l.__data_);
      }
      else if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
      {
        goto LABEL_26;
      }
      unint64_t v7 = *((unsigned __int8 *)a2 + 23);
      unint64_t v9 = a2[1];
LABEL_7:
      ++v12;
      BOOL v8 = (v7 & 0x80u) != 0;
      if ((v7 & 0x80u) == 0) {
        unint64_t v13 = v7;
      }
      else {
        unint64_t v13 = v9;
      }
      if (v13 <= v12) {
        return;
      }
    }
  }

  google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, "Missing name.");
}

void sub_23CDD294C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = operator new(4uLL);
  _DWORD *v4 = 8;
  std::string __p = v4;
  BOOL v17 = v4 + 1;
  unint64_t v18 = v4 + 1;
  unint64_t v5 = *(const void ***)(a3 + 8);
  int v6 = *((char *)v5 + 23);
  if (v6 >= 0) {
    size_t v7 = *((unsigned __int8 *)v5 + 23);
  }
  else {
    size_t v7 = (size_t)v5[1];
  }
  unint64_t v8 = v7 + 6;
  if (v7 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (v8 >= 0x17)
  {
    uint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v10 = v8 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_dst = operator new(v10 + 1);
    size_t v14 = v7 + 6;
    unint64_t v15 = v11 | 0x8000000000000000;
    long long __dst = p_dst;
  }
  else
  {
    size_t v14 = 0;
    unint64_t v15 = 0;
    long long __dst = 0;
    p_dst = &__dst;
    HIBYTE(v15) = v7 + 6;
    if (!v7) {
      goto LABEL_15;
    }
  }
  if (v6 >= 0) {
    unint64_t v12 = v5;
  }
  else {
    unint64_t v12 = *v5;
  }
  memmove(p_dst, v12, v7);
LABEL_15:
  strcpy((char *)p_dst + v7, ".dummy");
  strcpy((char *)operator new(0x20uLL), "google.protobuf.FileOptions");
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FileDescriptor>();
}

void sub_23CDD2B58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_3:
      uint64_t v24 = a22;
      if (!a22) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  uint64_t v24 = a22;
  if (!a22) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(v24);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FileDescriptor>()
{
}

void sub_23CDD2FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDD2FE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddRecursiveImportError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  v21.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x28uLL);
  *(_OWORD *)&v21.__r_.__value_.__r.__words[1] = xmmword_23CE85CB0;
  strcpy(v21.__r_.__value_.__l.__data_, "File recursively imports itself: ");
  uint64_t v6 = **((void **)this + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(*((void *)this + 1) + 8) - v6) >> 3) > a3)
  {
    uint64_t v7 = 24 * a3;
    unint64_t v8 = a3;
    do
    {
      uint64_t v9 = v6 + v7;
      int v10 = *(char *)(v9 + 23);
      if (v10 >= 0) {
        uint64_t v11 = (const std::string::value_type *)v9;
      }
      else {
        uint64_t v11 = *(const std::string::value_type **)v9;
      }
      if (v10 >= 0) {
        std::string::size_type v12 = *(unsigned __int8 *)(v9 + 23);
      }
      else {
        std::string::size_type v12 = *(void *)(v9 + 8);
      }
      std::string::append(&v21, v11, v12);
      std::string::append(&v21, " -> ");
      ++v8;
      uint64_t v6 = **((void **)this + 1);
      v7 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((*(void *)(*((void *)this + 1) + 8) - v6) >> 3) > v8);
  }
  uint64_t v13 = *((void *)a2 + 22);
  int v14 = *(char *)(v13 + 23);
  if (v14 >= 0) {
    unint64_t v15 = (const std::string::value_type *)*((void *)a2 + 22);
  }
  else {
    unint64_t v15 = *(const std::string::value_type **)v13;
  }
  if (v14 >= 0) {
    std::string::size_type v16 = *(unsigned __int8 *)(v13 + 23);
  }
  else {
    std::string::size_type v16 = *(void *)(v13 + 8);
  }
  std::string::append(&v21, v15, v16);
  uint64_t v17 = **((void **)this + 1);
  unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((*(void *)(*((void *)this + 1) + 8) - v17) >> 3) - 1;
  long long v19 = (const std::string::value_type *)(v17 + 24 * (a3 + 1));
  if (v18 <= a3) {
    std::string v20 = (const std::string::value_type *)*((void *)a2 + 22);
  }
  else {
    std::string v20 = v19;
  }
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a2, 9, (const std::string::value_type *)&v21);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
}

void sub_23CDD31E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddTwiceListedError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  uint64_t v6 = (char *)a2 + 24;
  uint64_t v7 = (const std::string::value_type *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, a3);
  google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v6, a3);
  std::operator+<char>();
  unint64_t v8 = std::string::append(&v10, "\" was listed twice.");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  std::string::size_type v12 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v7, (uint64_t)a2, 9, (const std::string::value_type *)__p);
  if ((SHIBYTE(v12) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_5:
    operator delete(v10.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_5;
  }
}

void sub_23CDD32F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddImportError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  std::string v14[2] = *MEMORY[0x263EF8340];
  long long v13 = 0uLL;
  std::string __p = 0;
  uint64_t v6 = (char *)a2 + 24;
  if (*(void *)(*(void *)this + 8))
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, a3);
    std::operator+<char>();
    uint64_t v7 = std::string::append(&v11, "\" was not found or had errors.");
  }
  else
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, a3);
    std::operator+<char>();
    uint64_t v7 = std::string::append(&v11, "\" has not been loaded.");
  }
  unint64_t v8 = (void *)v7->__r_.__value_.__r.__words[0];
  v14[0] = v7->__r_.__value_.__l.__size_;
  *(void *)((char *)v14 + 7) = *(std::string::size_type *)((char *)&v7->__r_.__value_.__r.__words[1] + 7);
  char v9 = HIBYTE(v7->__r_.__value_.__r.__words[2]);
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  *(void *)((char *)&v13 + 7) = *(void *)((char *)v14 + 7);
  std::string __p = v8;
  *(void *)&long long v13 = v14[0];
  HIBYTE(v13) = v9;
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  std::string v10 = (const std::string::value_type *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v6, a3);
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v10, (uint64_t)a2, 9, (const std::string::value_type *)&__p);
  if (SHIBYTE(v13) < 0) {
    operator delete(__p);
  }
}

void sub_23CDD3494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildFileImpl(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v3 = *((void *)this + 1);
  LODWORD(__p.__r_.__value_.__l.__data_) = 160;
  unint64_t v4 = *(void **)(v3 + 192);
  if ((unint64_t)v4 >= *(void *)(v3 + 200))
  {
    uint64_t v6 = std::vector<std::vector<char>>::__emplace_back_slow_path<int &>((char **)(v3 + 184), (int *)&__p);
  }
  else
  {
    void *v4 = 0;
    v4[1] = 0;
    v4[2] = 0;
    unint64_t v5 = operator new(0xA0uLL);
    void *v4 = v5;
    v4[2] = v5 + 10;
    v5[8] = 0u;
    v5[9] = 0u;
    v5[6] = 0u;
    v5[7] = 0u;
    v5[4] = 0u;
    v5[5] = 0u;
    std::string v5[2] = 0u;
    v5[3] = 0u;
    *unint64_t v5 = 0u;
    v5[1] = 0u;
    v4[1] = v5 + 10;
    uint64_t v6 = (char *)(v4 + 3);
    *(void *)(v3 + 192) = v4 + 3;
  }
  *(void *)(v3 + 192) = v6;
  uint64_t v7 = *((void *)v6 - 3);
  *((void *)this + 10) = v7;
  *(_WORD *)(v7 + 64) = 0;
  if ((*((_DWORD *)a2 + 4) & 0x10) == 0)
  {
    *(void *)(v7 + 152) = google::protobuf::SourceCodeInfo::default_instance((google::protobuf::SourceCodeInfo *)v6);
    operator new();
  }
  if (!*((void *)a2 + 26))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 7535);
    unint64_t v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: !value || source_code_info_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)v10, v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p.__r_.__value_.__l.__data_);
  }
  operator new();
}

void sub_23CDD53F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *__p)
{
}

BOOL std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1) {
        goto LABEL_10;
      }
      a1 = (void *)*a1;
      return memcmp(a1, __s, v4) == 0;
    }
  }
  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1) {
LABEL_10:
    }
      std::string::__throw_out_of_range[abi:ne180100]();
    return memcmp(a1, __s, v4) == 0;
  }
  return 0;
}

void google::protobuf::DescriptorBuilder::BuildMessage(google::protobuf::DescriptorBuilder *this, const google::protobuf::DescriptorProto *a2, const google::protobuf::Descriptor *a3, google::protobuf::Descriptor *a4)
{
  if (a3) {
    size_t v4 = (uint64_t *)((char *)a3 + 8);
  }
  else {
    size_t v4 = (uint64_t *)(*((void *)this + 10) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v4);
}

void sub_23CDD70EC(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_23CDD7100(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_23CDD7114(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_23CDD71F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a27 < 0)
  {
    operator delete(__p);
    std::unordered_map<std::string,google::protobuf::Descriptor::WellKnownType>::~unordered_map[abi:ne180100]((uint64_t)&a28);
    _Unwind_Resume(a1);
  }
  std::unordered_map<std::string,google::protobuf::Descriptor::WellKnownType>::~unordered_map[abi:ne180100]((uint64_t)&a28);
  _Unwind_Resume(a1);
}

void sub_23CDD7314(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_23CDD7328(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::BuildEnum(google::protobuf::DescriptorBuilder *this, const google::protobuf::EnumDescriptorProto *a2, const google::protobuf::Descriptor *a3, google::protobuf::EnumDescriptor *a4)
{
  if (a3) {
    size_t v4 = (uint64_t *)((char *)a3 + 8);
  }
  else {
    size_t v4 = (uint64_t *)(*((void *)this + 10) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v4);
}

void sub_23CDD8018(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_23CDD802C(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_23CDD8040(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_23CDD80CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
}

void sub_23CDD8188(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void sub_23CDD819C(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 144));
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::BuildService(uint64_t a1)
{
}

void sub_23CDD8490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDD84A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDD84B8(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_23CDD84DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_23CDD84F8(_Unwind_Exception *exception_object)
{
  size_t v4 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v4;
    operator delete(v4);
  }
  *(void *)(v2 + 192) = v1;
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkFile(google::protobuf::DescriptorBuilder *this, google::protobuf::FileDescriptor *a2, const google::protobuf::FileDescriptorProto *a3)
{
  size_t v4 = a2;
  if (!*((void *)a2 + 17)) {
    *((void *)a2 + 17) = google::protobuf::FileOptions::default_instance(this);
  }
  if (*((int *)v4 + 11) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      unint64_t v8 = (google::protobuf::Descriptor *)(*((void *)v4 + 13) + v6);
      char v9 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v7);
      google::protobuf::DescriptorBuilder::CrossLinkMessage(this, v8, v9);
      ++v7;
      v6 += 144;
    }
    while (v7 < *((int *)v4 + 11));
  }
  if (*((int *)v4 + 14) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = (google::protobuf::FieldDescriptor *)(*((void *)v4 + 16) + v10);
      long long v13 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v11);
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::FileDescriptorTables **)this, v12, v13);
      ++v11;
      v10 += 152;
    }
    while (v11 < *((int *)v4 + 14));
  }
  long long v49 = a3;
  std::string v50 = (int *)v4;
  if (*((int *)v4 + 12) >= 1)
  {
    uint64_t v14 = 0;
    while (1)
    {
      uint64_t v15 = *((void *)v4 + 14);
      std::string::size_type v16 = (google::protobuf::EnumOptions *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)v49 + 72, v14);
      uint64_t v17 = v16;
      uint64_t v18 = v15 + 80 * v14;
      uint64_t v20 = *(void *)(v18 + 32);
      long long v19 = (google::protobuf::EnumOptions **)(v18 + 32);
      if (!v20) {
        break;
      }
      uint64_t v21 = v15 + 80 * v14;
      int v23 = *(_DWORD *)(v21 + 44);
      std::string::size_type v22 = (int *)(v21 + 44);
      if (v23 >= 1) {
        goto LABEL_16;
      }
LABEL_11:
      ++v14;
      size_t v4 = (google::protobuf::FileDescriptor *)v50;
      if (v14 >= v50[12]) {
        goto LABEL_26;
      }
    }
    std::string::size_type v16 = (google::protobuf::EnumOptions *)google::protobuf::EnumOptions::default_instance(v16);
    *long long v19 = v16;
    uint64_t v24 = v15 + 80 * v14;
    int v25 = *(_DWORD *)(v24 + 44);
    std::string::size_type v22 = (int *)(v24 + 44);
    if (v25 < 1) {
      goto LABEL_11;
    }
LABEL_16:
    uint64_t v26 = 0;
    std::string::size_type v27 = (uint64_t *)(v15 + 80 * v14 + 48);
    uint64_t v28 = 32;
    while (1)
    {
      uint64_t v29 = *v27;
      if ((v26 & 0x80000000) != 0)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v52, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
        std::string::size_type v30 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v52, "CHECK failed: (index) >= (0): ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v51, v30);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v52[0].__r_.__value_.__l.__data_);
        if (*((_DWORD *)v17 + 8) <= (int)v26)
        {
LABEL_23:
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v52, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
          long long v31 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v52, "CHECK failed: (index) < (current_size_): ");
          google::protobuf::internal::LogFinisher::operator=((uint64_t)&v51, v31);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v52[0].__r_.__value_.__l.__data_);
        }
      }
      else if (*((_DWORD *)v17 + 8) <= (int)v26)
      {
        goto LABEL_23;
      }
      if (*(void *)(v29 + v28))
      {
        ++v26;
        v28 += 40;
        if (v26 >= *v22) {
          goto LABEL_11;
        }
      }
      else
      {
        std::string::size_type v16 = (google::protobuf::EnumOptions *)google::protobuf::EnumValueOptions::default_instance(v16);
        *(void *)(v29 + v28) = v16;
        ++v26;
        v28 += 40;
        if (v26 >= *v22) {
          goto LABEL_11;
        }
      }
    }
  }
LABEL_26:
  if (*((int *)v4 + 13) >= 1)
  {
    for (uint64_t i = 0; i < v50[13]; ++i)
    {
      uint64_t v33 = *((void *)v4 + 15);
      std::string v34 = (google::protobuf::ServiceOptions *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((uint64_t)v49 + 96, i);
      uint64_t v35 = v34;
      uint64_t v36 = v33 + 48 * i;
      uint64_t v38 = *(void *)(v36 + 24);
      long long v37 = (uint64_t **)(v36 + 24);
      if (v38)
      {
        uint64_t v39 = v33 + 48 * i;
        int v41 = *(_DWORD *)(v39 + 40);
        size_t v40 = (int *)(v39 + 40);
        if (v41 >= 1) {
          goto LABEL_33;
        }
      }
      else
      {
        *long long v37 = google::protobuf::ServiceOptions::default_instance(v34);
        uint64_t v42 = v33 + 48 * i;
        int v43 = *(_DWORD *)(v42 + 40);
        size_t v40 = (int *)(v42 + 40);
        if (v43 >= 1)
        {
LABEL_33:
          uint64_t v44 = 0;
          uint64_t v45 = 0;
          BOOL v46 = (uint64_t *)(v33 + 48 * i + 32);
          do
          {
            uint64_t v47 = *v46;
            if (v45 >= *((int *)v35 + 8))
            {
              google::protobuf::internal::LogMessage::LogMessage((uint64_t)v52, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
              std::string v48 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v52, "CHECK failed: (index) < (current_size_): ");
              google::protobuf::internal::LogFinisher::operator=((uint64_t)&v51, v48);
              google::protobuf::internal::LogMessage::~LogMessage((void **)&v52[0].__r_.__value_.__l.__data_);
            }
            google::protobuf::DescriptorBuilder::CrossLinkMethod(this, (google::protobuf::MethodDescriptor *)(v47 + v44), *(const google::protobuf::MethodDescriptorProto **)(*((void *)v35 + 5) + 8 * v45++ + 8));
            v44 += 104;
          }
          while (v45 < *v40);
        }
      }
      size_t v4 = (google::protobuf::FileDescriptor *)v50;
    }
  }
}

void sub_23CDD88CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDD88E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDD88F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDD8908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDD891C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDD8930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal::ArenaImpl *google::protobuf::DescriptorBuilder::OptionInterpreter::UpdateSourceCodeInfo(google::protobuf::internal::ArenaImpl *this, google::protobuf::SourceCodeInfo *a2)
{
  if (*((void *)this + 5))
  {
    uint64_t v2 = a2;
    int v81 = 0;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    std::string __p = 0;
    uint64_t v79 = 0;
    long long v80 = 0;
    if (!*((_DWORD *)a2 + 6)) {
      goto LABEL_112;
    }
    char v3 = 0;
    char v4 = 0;
    uint64_t v5 = *((void *)a2 + 4);
    if (v5) {
      uint64_t v6 = (const google::protobuf::SourceCodeInfo_Location **)(v5 + 8);
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = (void *)((char *)this + 32);
    int v74 = (google::protobuf::internal::ArenaImpl **)((char *)a2 + 16);
    uint64_t v75 = (void *)((char *)this + 32);
    while (1)
    {
      uint64_t v10 = (uint64_t)__p;
      uint64_t v11 = *v6;
      if (v4)
      {
        unint64_t v12 = (v79 - __p) >> 2;
        if (v12 <= *((int *)v11 + 6))
        {
          if (v79 == __p)
          {
LABEL_18:
            char v4 = 1;
            goto LABEL_8;
          }
          uint64_t v13 = 0;
          while (*(_DWORD *)google::protobuf::RepeatedField<int>::Get((uint64_t)*v6 + 24, v13) == *(_DWORD *)&__p[4 * v13])
          {
            if (v12 <= ++v13) {
              goto LABEL_18;
            }
          }
          uint64_t v11 = *v6;
        }
      }
      char v77 = v3;
      uint64_t v79 = __p;
      uint64_t v14 = (int *)((char *)v11 + 24);
      if (*((int *)v11 + 6) >= 1)
      {
        int v15 = 0;
        while (1)
        {
          int v16 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get((uint64_t)v14, v15);
          uint64_t v17 = v79;
          if (v79 >= v80) {
            break;
          }
          *(_DWORD *)uint64_t v79 = v16;
          uint64_t v10 = (uint64_t)(v79 + 4);
LABEL_23:
          uint64_t v79 = (char *)v10;
          ++v15;
          uint64_t v11 = *v6;
          uint64_t v14 = (int *)((char *)*v6 + 24);
          if (v15 >= *v14)
          {
            uint64_t v7 = v75;
            uint64_t v2 = a2;
            goto LABEL_45;
          }
        }
        uint64_t v18 = __p;
        uint64_t v19 = (v79 - __p) >> 2;
        unint64_t v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 62) {
          std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v21 = v80 - __p;
        if ((v80 - __p) >> 1 > v20) {
          unint64_t v20 = v21 >> 1;
        }
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v22 = v20;
        }
        if (v22)
        {
          if (v22 >> 62) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          int v23 = operator new(4 * v22);
          uint64_t v24 = &v23[4 * v19];
          *(_DWORD *)uint64_t v24 = v16;
          uint64_t v10 = (uint64_t)(v24 + 4);
          if (v79 == __p) {
            goto LABEL_42;
          }
        }
        else
        {
          int v23 = 0;
          uint64_t v24 = (char *)(4 * v19);
          *(_DWORD *)(4 * v19) = v16;
          uint64_t v10 = 4 * v19 + 4;
          if (v79 == __p)
          {
LABEL_42:
            std::string __p = v24;
            long long v80 = &v23[4 * v22];
            if (v18) {
              operator delete(v18);
            }
            goto LABEL_23;
          }
        }
        unint64_t v25 = v79 - 4 - __p;
        if (v25 < 0x2C) {
          goto LABEL_130;
        }
        if ((unint64_t)(__p - v23) < 0x20) {
          goto LABEL_130;
        }
        uint64_t v26 = (v25 >> 2) + 1;
        uint64_t v27 = 4 * (v26 & 0x7FFFFFFFFFFFFFF8);
        uint64_t v28 = &v79[-v27];
        v24 -= v27;
        uint64_t v29 = &v23[4 * v19 - 16];
        std::string::size_type v30 = v79 - 16;
        uint64_t v31 = v26 & 0x7FFFFFFFFFFFFFF8;
        do
        {
          long long v32 = *(_OWORD *)v30;
          *(v29 - 1) = *((_OWORD *)v30 - 1);
          *uint64_t v29 = v32;
          v29 -= 2;
          v30 -= 32;
          v31 -= 8;
        }
        while (v31);
        uint64_t v17 = v28;
        if (v26 != (v26 & 0x7FFFFFFFFFFFFFF8))
        {
LABEL_130:
          do
          {
            int v33 = *((_DWORD *)v17 - 1);
            v17 -= 4;
            *((_DWORD *)v24 - 1) = v33;
            v24 -= 4;
          }
          while (v17 != __p);
        }
        goto LABEL_42;
      }
LABEL_45:
      std::string v34 = (void *)*v7;
      if (*v7)
      {
        uint64_t v35 = __p;
        if (__p == (char *)v10)
        {
          do
          {
            uint64_t v36 = v34;
            std::string v34 = (void *)*v34;
          }
          while (v34);
        }
        else
        {
          uint64_t v36 = v7;
          do
          {
LABEL_49:
            long long v37 = (int *)v34[4];
            uint64_t v38 = __p + 4;
            do
            {
              if (v37 == (int *)v34[5] || (int v39 = *v37, v40 = *((_DWORD *)v38 - 1), *v37 < v40))
              {
                std::string v34 = (void *)v34[1];
                if (!v34) {
                  goto LABEL_60;
                }
                goto LABEL_49;
              }
              ++v37;
              BOOL v41 = v40 < v39 || v38 == (char *)v10;
              v38 += 4;
            }
            while (!v41);
            uint64_t v36 = v34;
            std::string v34 = (void *)*v34;
          }
          while (v34);
        }
LABEL_60:
        if (v36 != v7) {
          break;
        }
      }
LABEL_74:
      if (v77)
      {
        std::string::size_type v52 = v83;
        if (v83)
        {
          uint64_t v53 = (int)v82;
          int v54 = *(_DWORD *)v83;
          if ((int)v82 < *(_DWORD *)v83)
          {
            LODWORD(v82) = v82 + 1;
            unsigned __int8 v55 = (google::protobuf::SourceCodeInfo_Location *)*((void *)v83 + v53 + 1);
LABEL_82:
            google::protobuf::SourceCodeInfo_Location::CopyFrom(v55, v11);
            char v4 = 0;
            char v3 = 1;
            goto LABEL_8;
          }
          if (v54 == HIDWORD(v82))
          {
LABEL_80:
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v81, v54 + 1);
            std::string::size_type v52 = v83;
            int v54 = *(_DWORD *)v83;
          }
          *std::string::size_type v52 = v54 + 1;
          unsigned __int8 v55 = (google::protobuf::SourceCodeInfo_Location *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v81);
          uint64_t v56 = (int)v82;
          LODWORD(v82) = v82 + 1;
          *((void *)v83 + v56 + 1) = v55;
          goto LABEL_82;
        }
        int v54 = HIDWORD(v82);
        goto LABEL_80;
      }
      char v4 = 0;
      char v3 = 0;
LABEL_8:
      ++v6;
      uint64_t v8 = *((void *)v2 + 4);
      if (v8) {
        uint64_t v9 = v8 + 8;
      }
      else {
        uint64_t v9 = 0;
      }
      if (v6 == (const google::protobuf::SourceCodeInfo_Location **)(v9 + 8 * *((int *)v2 + 6)))
      {
        if (((v74 != &v81) & v3) != 0)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)v74);
          google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)v74, (uint64_t)&v81);
        }
        if (__p) {
          operator delete(__p);
        }
LABEL_112:
        long long v71 = v83;
        this = v81;
        if (v83)
        {
          if (v81)
          {
            uint64_t v83 = 0;
            return (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::SpaceAllocated(this);
          }
          int64_t v72 = (google::protobuf::SourceCodeInfo_Location **)((char *)v83 + 8);
          uint64_t v73 = *(unsigned int *)v83;
          if ((int)v73 >= 1)
          {
            do
            {
              if (*v72)
              {
                google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(*v72);
                MEMORY[0x23ECF2BC0]();
              }
              ++v72;
              --v73;
            }
            while (v73);
            long long v71 = v83;
          }
          operator delete(v71);
          this = v81;
        }
        uint64_t v83 = 0;
        if (!this) {
          return this;
        }
        return (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::SpaceAllocated(this);
      }
    }
    uint64_t v43 = v36[4];
    uint64_t v42 = v36[5];
    if (v43 != v42)
    {
      uint64_t v44 = v43 + 4;
      while (v35 != (char *)v10)
      {
        int v45 = *(_DWORD *)v35;
        int v46 = *(_DWORD *)(v44 - 4);
        if (*(_DWORD *)v35 < v46) {
          break;
        }
        v35 += 4;
        BOOL v47 = v46 < v45 || v44 == v42;
        v44 += 4;
        if (v47) {
          goto LABEL_70;
        }
      }
      goto LABEL_74;
    }
LABEL_70:
    if ((v77 & 1) == 0)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v81, *((_DWORD *)v2 + 6));
      uint64_t v57 = *((void *)v2 + 4);
      long long v58 = v57 ? (const google::protobuf::SourceCodeInfo_Location **)(v57 + 8) : 0;
      if (v58 != v6)
      {
        while (1)
        {
          int64_t v59 = *v58;
          long long v60 = v83;
          if (!v83) {
            break;
          }
          uint64_t v61 = (int)v82;
          int v62 = *(_DWORD *)v83;
          if ((int)v82 >= *(_DWORD *)v83)
          {
            if (v62 == HIDWORD(v82))
            {
LABEL_92:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v81, v62 + 1);
              long long v60 = v83;
              int v62 = *(_DWORD *)v83;
            }
            _DWORD *v60 = v62 + 1;
            int64_t v63 = (google::protobuf::SourceCodeInfo_Location *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v81);
            uint64_t v64 = (int)v82;
            LODWORD(v82) = v82 + 1;
            *((void *)v83 + v64 + 1) = v63;
            goto LABEL_94;
          }
          LODWORD(v82) = v82 + 1;
          int64_t v63 = (google::protobuf::SourceCodeInfo_Location *)*((void *)v83 + v61 + 1);
LABEL_94:
          google::protobuf::SourceCodeInfo_Location::CopyFrom(v63, v59);
          if (++v58 == v6) {
            goto LABEL_71;
          }
        }
        int v62 = HIDWORD(v82);
        goto LABEL_92;
      }
    }
LABEL_71:
    std::string v48 = v83;
    if (v83)
    {
      uint64_t v49 = (int)v82;
      int v50 = *(_DWORD *)v83;
      if ((int)v82 < *(_DWORD *)v83)
      {
        LODWORD(v82) = v82 + 1;
        unint64_t v51 = *((void *)v83 + v49 + 1);
LABEL_100:
        google::protobuf::SourceCodeInfo_Location::CopyFrom((google::protobuf::SourceCodeInfo_Location *)v51, *v6);
        *(_DWORD *)(v51 + 24) = 0;
        std::string v66 = (int *)v36[7];
        if (v66 != (int *)v36[8])
        {
          int v67 = 1;
          do
          {
            int v68 = *v66;
            int v69 = *(_DWORD *)(v51 + 28);
            if (v67 - 1 == v69)
            {
              google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(v51 + 24), v67);
              int v69 = *(_DWORD *)(v51 + 28);
            }
            if (v69 <= 0)
            {
              google::protobuf::internal::LogMessage::LogMessage((uint64_t)v85, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 353);
              unint64_t v70 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v85, "CHECK failed: (total_size_) > (0): ");
              google::protobuf::internal::LogFinisher::operator=((uint64_t)&v84, v70);
              google::protobuf::internal::LogMessage::~LogMessage((void **)&v85[0].__r_.__value_.__l.__data_);
            }
            *(_DWORD *)(*(void *)(v51 + 32) + 4 * (v67 - 1)) = v68;
            *(_DWORD *)(v51 + 24) = v67;
            ++v66;
            ++v67;
          }
          while (v66 != (int *)v36[8]);
        }
        char v4 = 1;
        char v3 = 1;
        uint64_t v7 = v75;
        uint64_t v2 = a2;
        goto LABEL_8;
      }
      if (v50 != HIDWORD(v82))
      {
LABEL_99:
        _DWORD *v48 = v50 + 1;
        unint64_t v51 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v81);
        uint64_t v65 = (int)v82;
        LODWORD(v82) = v82 + 1;
        *((void *)v83 + v65 + 1) = v51;
        goto LABEL_100;
      }
    }
    else
    {
      int v50 = HIDWORD(v82);
    }
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v81, v50 + 1);
    std::string v48 = v83;
    int v50 = *(_DWORD *)v83;
    goto LABEL_99;
  }
  return this;
}

void sub_23CDD9018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (__p) {
    operator delete(__p);
  }
  google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::~RepeatedPtrField((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter(google::protobuf::DescriptorBuilder::OptionInterpreter *this)
{
}

void google::protobuf::DescriptorBuilder::ValidateFileOptions(google::protobuf::FileOptions *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (*(int *)(a2 + 44) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (google::protobuf::Descriptor *)(*(void *)(a2 + 104) + v6);
      uint64_t v9 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(a3 + 48, v7);
      google::protobuf::DescriptorBuilder::ValidateMessageOptions(v5, v8, v9);
      ++v7;
      v6 += 144;
    }
    while (v7 < *(int *)(a2 + 44));
  }
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      unint64_t v12 = (google::protobuf::EnumDescriptor *)(*(void *)(a2 + 112) + v10);
      uint64_t v13 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(a3 + 72, v11);
      google::protobuf::DescriptorBuilder::ValidateEnumOptions(v5, v12, v13);
      ++v11;
      v10 += 80;
    }
    while (v11 < *(int *)(a2 + 48));
  }
  uint64_t v43 = a3;
  if (*(int *)(a2 + 52) >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v44 = a3 + 96;
    do
    {
      uint64_t v15 = *(void *)(a2 + 120);
      a1 = (google::protobuf::FileOptions *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>(v44, v14);
      uint64_t v16 = (uint64_t)a1;
      uint64_t v17 = v15 + 48 * v14;
      uint64_t v20 = *(void *)(v17 + 16);
      uint64_t v19 = v17 + 16;
      uint64_t v18 = v20;
      if (v20)
      {
        uint64_t v21 = *(google::protobuf::FileOptions **)(v18 + 136);
        a1 = (google::protobuf::FileOptions *)google::protobuf::FileOptions::default_instance(a1);
        if (v21 != a1 && *(_DWORD *)(*(void *)(v18 + 136) + 160) == 3)
        {
          uint64_t v22 = *(void *)(*(void *)v19 + 136);
          if (*(unsigned char *)(v22 + 155) || *(unsigned char *)(v22 + 156)) {
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, *(const std::string::value_type **)(v15 + 48 * v14 + 8), v16, 0, "Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_services to false.");
          }
        }
      }
      uint64_t v23 = v15 + 48 * v14;
      int v26 = *(_DWORD *)(v23 + 40);
      unint64_t v25 = (int *)(v23 + 40);
      int v24 = v26;
      if (v26 >= 1)
      {
        int v27 = 0;
        do
        {
          if (*(_DWORD *)(v16 + 32) <= v27)
          {
            google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
            uint64_t v28 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (index) < (current_size_): ");
            google::protobuf::internal::LogFinisher::operator=((uint64_t)&v45, v28);
            google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
            int v24 = *v25;
          }
          ++v27;
        }
        while (v27 < v24);
      }
      ++v14;
    }
    while (v14 < *(int *)(a2 + 52));
  }
  if (*(int *)(a2 + 56) >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = (google::protobuf::FieldDescriptor *)(*(void *)(a2 + 128) + v29);
      long long v32 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(v43 + 120, v30);
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(v5, v31, v32);
      ++v30;
      v29 += 152;
    }
    while (v30 < *(int *)(a2 + 56));
  }
  int v33 = *(uint64_t **)(a2 + 136);
  if ((v33 == google::protobuf::FileOptions::default_instance(a1) || *(_DWORD *)(*(void *)(a2 + 136) + 160) != 3)
    && *(int *)(a2 + 32) >= 1)
  {
    uint64_t v34 = 0;
    while (1)
    {
      uint64_t v35 = *(std::once_flag::_State_type **)(a2 + 24);
      if (v35)
      {
        v48[0] = a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v35, memory_order_acquire) != -1)
        {
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FileDescriptor::DependenciesOnceInit;
          __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v48;
          v45.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
          std::__call_once(v35, &v45, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>);
        }
      }
      uint64_t v36 = *(void *)(*(void *)(a2 + 72) + 8 * v34);
      if (v36)
      {
        long long v37 = *(uint64_t **)(v36 + 136);
        if (v37 != google::protobuf::FileOptions::default_instance((google::protobuf::FileOptions *)v35)
          && *(_DWORD *)(*(void *)(v36 + 136) + 160) == 3)
        {
          break;
        }
      }
      if (++v34 >= *(int *)(a2 + 32)) {
        goto LABEL_47;
      }
    }
    uint64_t v38 = *(std::once_flag::_State_type **)(a2 + 24);
    if (v38)
    {
      v48[0] = a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v38, memory_order_acquire) != -1)
      {
        __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FileDescriptor::DependenciesOnceInit;
        __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v48;
        v45.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
        std::__call_once(v38, &v45, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>);
      }
      int v39 = *(std::once_flag::_State_type **)(a2 + 24);
      int v40 = **(const std::string::value_type ***)(*(void *)(a2 + 72) + 8 * v34);
      if (v39)
      {
        uint64_t v46 = a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v39, memory_order_acquire) != -1)
        {
          v48[0] = google::protobuf::FileDescriptor::DependenciesOnceInit;
          v48[1] = &v46;
          BOOL v47 = v48;
          std::__call_once(v39, &v47, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>);
        }
      }
    }
    else
    {
      int v40 = **(const std::string::value_type ***)(*(void *)(a2 + 72) + 8 * v34);
    }
    std::operator+<char>();
    BOOL v41 = std::string::append(&v45, "\" which is.");
    long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v42;
    v41->__r_.__value_.__l.__size_ = 0;
    v41->__r_.__value_.__r.__words[2] = 0;
    v41->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, v40, v43, 9, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v45.__r_.__value_.__l.__data_);
    }
  }
LABEL_47:
  if (*(_DWORD *)(a2 + 60) == 3) {
    google::protobuf::DescriptorBuilder::ValidateProto3(v5, a2, v43);
  }
}

void sub_23CDD9538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::DetectMapConflicts(google::protobuf::DescriptorBuilder *this, const google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  v124[0] = 0;
  v124[1] = 0;
  int v123 = v124;
  if (*((int *)a2 + 29) < 1)
  {
    uint64_t v18 = 0;
LABEL_22:
    int v21 = *((_DWORD *)a2 + 30);
    if (v21 >= 1) {
      goto LABEL_23;
    }
LABEL_75:
    int v54 = *((_DWORD *)a2 + 27);
    if (v54 < 1 || !v18) {
      goto LABEL_177;
    }
    uint64_t v55 = 0;
    while (1)
    {
      uint64_t v56 = v124[0];
      if (!v124[0]) {
        goto LABEL_80;
      }
      uint64_t v57 = *(void *)(*((void *)a2 + 6) + 48 * v55);
      int v58 = *(char *)(v57 + 23);
      size_t v59 = v58 >= 0 ? *(unsigned __int8 *)(v57 + 23) : *(void *)(v57 + 8);
      long long v60 = v58 >= 0 ? *(const void **)(*((void *)a2 + 6) + 48 * v55) : *(const void **)v57;
      uint64_t v61 = v124;
      do
      {
        uint64_t v62 = v56;
        int64_t v63 = v61;
        uint64_t v65 = (const void *)(v56 + 32);
        uint64_t v64 = *(const void **)(v56 + 32);
        int v66 = *(char *)(v62 + 55);
        if (v66 >= 0) {
          size_t v67 = *(unsigned __int8 *)(v62 + 55);
        }
        else {
          size_t v67 = *(void *)(v62 + 40);
        }
        if (v66 >= 0) {
          int v68 = v65;
        }
        else {
          int v68 = v64;
        }
        if (v59 >= v67) {
          size_t v69 = v67;
        }
        else {
          size_t v69 = v59;
        }
        int v70 = memcmp(v68, v60, v69);
        BOOL v71 = v70 < 0;
        if (!v70) {
          BOOL v71 = v67 < v59;
        }
        int64_t v72 = (uint64_t *)(v62 + 8);
        if (v71)
        {
          uint64_t v61 = v63;
        }
        else
        {
          int64_t v72 = (uint64_t *)v62;
          uint64_t v61 = (void *)v62;
        }
        uint64_t v56 = *v72;
      }
      while (v56);
      if (v61 == v124) {
        goto LABEL_80;
      }
      uint64_t v73 = v63 + 4;
      BOOL v74 = !v71;
      if (v71) {
        uint64_t v75 = v63;
      }
      else {
        uint64_t v75 = (void *)v62;
      }
      if (v74) {
        uint64_t v73 = v65;
      }
      int v76 = *((char *)v61 + 55);
      unint64_t v78 = (void *)v75[4];
      uint64_t v77 = v75[5];
      size_t v79 = v76 >= 0 ? *((unsigned __int8 *)v61 + 55) : v77;
      long long v80 = v76 >= 0 ? v73 : v78;
      size_t v81 = v79 >= v59 ? v59 : v79;
      int v82 = memcmp(v60, v80, v81);
      BOOL v83 = v59 >= v79;
      if (v82) {
        BOOL v83 = v82 >= 0;
      }
      if (!v83 || !*(unsigned char *)(*(void *)(v61[7] + 32) + 75)) {
        goto LABEL_80;
      }
      char v84 = (const std::string::value_type *)*((void *)a2 + 1);
      std::operator+<char>();
      int v85 = std::string::append(&v120, " conflicts with an existing oneof type.");
      long long v86 = *(_OWORD *)&v85->__r_.__value_.__l.__data_;
      v121.__r_.__value_.__r.__words[2] = v85->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v86;
      v85->__r_.__value_.__l.__size_ = 0;
      v85->__r_.__value_.__r.__words[2] = 0;
      v85->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v84, (uint64_t)a3, 0, (const std::string::value_type *)&v121);
      if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v121.__r_.__value_.__l.__data_);
        if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_126;
        }
      }
      else if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_126:
        operator delete(v120.__r_.__value_.__l.__data_);
      }
      int v54 = *((_DWORD *)a2 + 27);
LABEL_80:
      if (++v55 >= v54)
      {
        uint64_t v18 = (char *)v124[0];
        goto LABEL_177;
      }
    }
  }
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = (char *)a3 + 48;
  do
  {
    uint64_t v7 = *((void *)a2 + 7);
    uint64_t v8 = *(long long **)(v7 + v4);
    if (*((char *)v8 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v121, *(const std::string::value_type **)v8, *((void *)v8 + 1));
    }
    else
    {
      long long v9 = *v8;
      v121.__r_.__value_.__r.__words[2] = *((void *)v8 + 2);
      *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v9;
    }
    uint64_t v122 = v7 + v4;
    uint64_t v11 = std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string,google::protobuf::EnumValueDescriptor const*>>(&v123, (const void **)&v121.__r_.__value_.__l.__data_, (long long *)&v121);
    char v12 = v10;
    if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v121.__r_.__value_.__l.__data_);
      if (v12) {
        goto LABEL_14;
      }
    }
    else if (v10)
    {
      goto LABEL_14;
    }
    if (*(unsigned char *)(v11[7][4] + 75) || *(unsigned char *)(*(void *)(v7 + v4 + 32) + 75))
    {
      uint64_t v13 = (const std::string::value_type *)*((void *)a2 + 1);
      std::operator+<char>();
      uint64_t v14 = std::string::append(&v120, " conflicts with an existing nested message type.");
      long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
      v121.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v15;
      v14->__r_.__value_.__l.__size_ = 0;
      v14->__r_.__value_.__r.__words[2] = 0;
      v14->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v13, (uint64_t)a3, 0, (const std::string::value_type *)&v121);
      if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v121.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_14;
        }
      }
      else if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_14;
      }
      operator delete(v120.__r_.__value_.__l.__data_);
    }
LABEL_14:
    uint64_t v16 = *((void *)a2 + 7);
    uint64_t v17 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)v6, v5);
    google::protobuf::DescriptorBuilder::DetectMapConflicts(this, (const google::protobuf::Descriptor *)(v16 + v4), v17);
    ++v5;
    v4 += 144;
  }
  while (v5 < *((int *)a2 + 29));
  uint64_t v18 = (char *)v124[0];
  int v19 = *((_DWORD *)a2 + 26);
  if (v19 < 1 || !v124[0]) {
    goto LABEL_22;
  }
  uint64_t v20 = 0;
  while (2)
  {
    uint64_t v87 = v124[0];
    if (v124[0])
    {
      uint64_t v88 = *(void *)(*((void *)a2 + 5) + 152 * v20);
      int v89 = *(char *)(v88 + 23);
      size_t v90 = v89 >= 0 ? *(unsigned __int8 *)(v88 + 23) : *(void *)(v88 + 8);
      BOOL v91 = v89 >= 0 ? *(const void **)(*((void *)a2 + 5) + 152 * v20) : *(const void **)v88;
      uint64_t v92 = v124;
      do
      {
        uint64_t v93 = v87;
        long long v94 = v92;
        int v96 = (const void *)(v87 + 32);
        int v95 = *(const void **)(v87 + 32);
        int v97 = *(char *)(v93 + 55);
        if (v97 >= 0) {
          size_t v98 = *(unsigned __int8 *)(v93 + 55);
        }
        else {
          size_t v98 = *(void *)(v93 + 40);
        }
        if (v97 >= 0) {
          int v99 = v96;
        }
        else {
          int v99 = v95;
        }
        if (v90 >= v98) {
          size_t v100 = v98;
        }
        else {
          size_t v100 = v90;
        }
        int v101 = memcmp(v99, v91, v100);
        BOOL v102 = v101 < 0;
        if (!v101) {
          BOOL v102 = v98 < v90;
        }
        unint64_t v103 = (uint64_t *)(v93 + 8);
        if (v102)
        {
          uint64_t v92 = v94;
        }
        else
        {
          unint64_t v103 = (uint64_t *)v93;
          uint64_t v92 = (void *)v93;
        }
        uint64_t v87 = *v103;
      }
      while (v87);
      if (v92 != v124)
      {
        uint64_t v104 = v94 + 4;
        BOOL v105 = !v102;
        if (v102) {
          long long v106 = v94;
        }
        else {
          long long v106 = (void *)v93;
        }
        if (v105) {
          uint64_t v104 = v96;
        }
        int v107 = *((char *)v92 + 55);
        long long v109 = (const void *)v106[4];
        size_t v108 = v106[5];
        if (v107 >= 0) {
          size_t v110 = *((unsigned __int8 *)v92 + 55);
        }
        else {
          size_t v110 = v108;
        }
        if (v107 >= 0) {
          uint64_t v111 = v104;
        }
        else {
          uint64_t v111 = v109;
        }
        if (v110 >= v90) {
          size_t v112 = v90;
        }
        else {
          size_t v112 = v110;
        }
        int v113 = memcmp(v91, v111, v112);
        BOOL v114 = v90 >= v110;
        if (v113) {
          BOOL v114 = v113 >= 0;
        }
        if (v114 && *(unsigned char *)(*(void *)(v92[7] + 32) + 75))
        {
          long long v115 = (const std::string::value_type *)*((void *)a2 + 1);
          std::operator+<char>();
          int v116 = std::string::append(&v120, " conflicts with an existing field.");
          long long v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
          v121.__r_.__value_.__r.__words[2] = v116->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v117;
          v116->__r_.__value_.__l.__size_ = 0;
          v116->__r_.__value_.__r.__words[2] = 0;
          v116->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v115, (uint64_t)a3, 0, (const std::string::value_type *)&v121);
          if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v121.__r_.__value_.__l.__data_);
            if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
              goto LABEL_175;
            }
          }
          else if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
          {
LABEL_175:
            operator delete(v120.__r_.__value_.__l.__data_);
          }
          int v19 = *((_DWORD *)a2 + 26);
        }
      }
    }
    if (++v20 < v19) {
      continue;
    }
    break;
  }
  uint64_t v18 = (char *)v124[0];
  int v21 = *((_DWORD *)a2 + 30);
  if (v21 < 1) {
    goto LABEL_75;
  }
LABEL_23:
  if (v18)
  {
    uint64_t v22 = 0;
    while (2)
    {
      uint64_t v23 = v124[0];
      if (!v124[0]) {
        goto LABEL_27;
      }
      uint64_t v24 = *(void *)(*((void *)a2 + 8) + 80 * v22);
      int v25 = *(char *)(v24 + 23);
      size_t v26 = v25 >= 0 ? *(unsigned __int8 *)(v24 + 23) : *(void *)(v24 + 8);
      int v27 = v25 >= 0 ? *(const void **)(*((void *)a2 + 8) + 80 * v22) : *(const void **)v24;
      uint64_t v28 = v124;
      do
      {
        uint64_t v29 = v23;
        uint64_t v30 = v28;
        long long v32 = (const void *)(v23 + 32);
        uint64_t v31 = *(const void **)(v23 + 32);
        int v33 = *(char *)(v29 + 55);
        if (v33 >= 0) {
          size_t v34 = *(unsigned __int8 *)(v29 + 55);
        }
        else {
          size_t v34 = *(void *)(v29 + 40);
        }
        if (v33 >= 0) {
          uint64_t v35 = v32;
        }
        else {
          uint64_t v35 = v31;
        }
        if (v26 >= v34) {
          size_t v36 = v34;
        }
        else {
          size_t v36 = v26;
        }
        int v37 = memcmp(v35, v27, v36);
        BOOL v38 = v37 < 0;
        if (!v37) {
          BOOL v38 = v34 < v26;
        }
        int v39 = (uint64_t *)(v29 + 8);
        if (v38)
        {
          uint64_t v28 = v30;
        }
        else
        {
          int v39 = (uint64_t *)v29;
          uint64_t v28 = (void *)v29;
        }
        uint64_t v23 = *v39;
      }
      while (v23);
      if (v28 == v124) {
        goto LABEL_27;
      }
      int v40 = v30 + 4;
      BOOL v41 = !v38;
      if (v38) {
        long long v42 = v30;
      }
      else {
        long long v42 = (void *)v29;
      }
      if (v41) {
        int v40 = v32;
      }
      int v43 = *((char *)v28 + 55);
      std::string v45 = (const void *)v42[4];
      size_t v44 = v42[5];
      if (v43 >= 0) {
        size_t v46 = *((unsigned __int8 *)v28 + 55);
      }
      else {
        size_t v46 = v44;
      }
      if (v43 >= 0) {
        BOOL v47 = v40;
      }
      else {
        BOOL v47 = v45;
      }
      if (v46 >= v26) {
        size_t v48 = v26;
      }
      else {
        size_t v48 = v46;
      }
      int v49 = memcmp(v27, v47, v48);
      BOOL v50 = v26 >= v46;
      if (v49) {
        BOOL v50 = v49 >= 0;
      }
      if (!v50 || !*(unsigned char *)(*(void *)(v28[7] + 32) + 75)) {
        goto LABEL_27;
      }
      unint64_t v51 = (const std::string::value_type *)*((void *)a2 + 1);
      std::operator+<char>();
      std::string::size_type v52 = std::string::append(&v120, " conflicts with an existing enum type.");
      long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
      v121.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v53;
      v52->__r_.__value_.__l.__size_ = 0;
      v52->__r_.__value_.__r.__words[2] = 0;
      v52->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v51, (uint64_t)a3, 0, (const std::string::value_type *)&v121);
      if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v121.__r_.__value_.__l.__data_);
        if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_73;
        }
      }
      else if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_73:
        operator delete(v120.__r_.__value_.__l.__data_);
      }
      int v21 = *((_DWORD *)a2 + 30);
LABEL_27:
      if (++v22 >= v21)
      {
        uint64_t v18 = (char *)v124[0];
        goto LABEL_75;
      }
      continue;
    }
  }
LABEL_177:
  std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)&v123, v18);
}

void sub_23CDD9C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,char a26,char *a27)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a17 < 0)
  {
    operator delete(a12);
    std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)&a26, a27);
    _Unwind_Resume(a1);
  }
  std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)&a26, a27);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::LogUnusedDependency(void *a1, uint64_t a2)
{
  if (a1[17])
  {
    uint64_t v4 = (uint64_t *)(*a1 + 56);
    uint64_t v5 = *v4;
    if (!*v4) {
      goto LABEL_43;
    }
    uint64_t v6 = *(void *)(a2 + 176);
    int v7 = *(char *)(v6 + 23);
    size_t v8 = v7 >= 0 ? *(unsigned __int8 *)(v6 + 23) : *(void *)(v6 + 8);
    long long v9 = v7 >= 0 ? *(const void **)(a2 + 176) : *(const void **)v6;
    uint64_t v10 = *a1 + 56;
    do
    {
      int v11 = *(char *)(v5 + 55);
      if (v11 >= 0) {
        size_t v12 = *(unsigned __int8 *)(v5 + 55);
      }
      else {
        size_t v12 = *(void *)(v5 + 40);
      }
      if (v11 >= 0) {
        uint64_t v13 = (const void *)(v5 + 32);
      }
      else {
        uint64_t v13 = *(const void **)(v5 + 32);
      }
      if (v8 >= v12) {
        size_t v14 = v12;
      }
      else {
        size_t v14 = v8;
      }
      int v15 = memcmp(v13, v9, v14);
      BOOL v16 = v12 < v8;
      if (v15) {
        BOOL v16 = v15 < 0;
      }
      BOOL v17 = !v16;
      if (v16) {
        uint64_t v18 = (uint64_t *)(v5 + 8);
      }
      else {
        uint64_t v18 = (uint64_t *)v5;
      }
      if (v17) {
        uint64_t v10 = v5;
      }
      uint64_t v5 = *v18;
    }
    while (*v18);
    if ((uint64_t *)v10 == v4) {
      goto LABEL_43;
    }
    int v19 = *(char *)(v10 + 55);
    if (v19 >= 0) {
      size_t v20 = *(unsigned __int8 *)(v10 + 55);
    }
    else {
      size_t v20 = *(void *)(v10 + 40);
    }
    if (v19 >= 0) {
      int v21 = (const void *)(v10 + 32);
    }
    else {
      int v21 = *(const void **)(v10 + 32);
    }
    if (v20 >= v8) {
      size_t v22 = v8;
    }
    else {
      size_t v22 = v20;
    }
    int v23 = memcmp(v9, v21, v22);
    BOOL v24 = v8 >= v20;
    if (v23) {
      BOOL v24 = v23 >= 0;
    }
    if (v24)
    {
      BOOL v25 = *(unsigned char *)(v10 + 56) != 0;
      size_t v26 = (void *)a1[15];
      int v27 = a1 + 16;
      if (v26 == a1 + 16) {
        return;
      }
    }
    else
    {
LABEL_43:
      BOOL v25 = 0;
      size_t v26 = (void *)a1[15];
      int v27 = a1 + 16;
      if (v26 == a1 + 16) {
        return;
      }
    }
    if (!v25)
    {
      while (1)
      {
        std::operator+<char>();
        long long v32 = std::string::append(&v36, " is unused.");
        long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
        std::string::size_type v38 = v32->__r_.__value_.__r.__words[2];
        *(_OWORD *)std::string __p = v33;
        v32->__r_.__value_.__l.__size_ = 0;
        v32->__r_.__value_.__r.__words[2] = 0;
        v32->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v36.__r_.__value_.__l.__data_);
        }
        google::protobuf::DescriptorBuilder::AddWarning((uint64_t)a1, *(const std::string::value_type **)v26[4], a2, 9, (const std::string::value_type *)__p);
        if (SHIBYTE(v38) < 0)
        {
          operator delete(__p[0]);
          size_t v34 = (void *)v26[1];
          if (v34)
          {
            do
            {
LABEL_65:
              uint64_t v35 = v34;
              size_t v34 = (void *)*v34;
            }
            while (v34);
            goto LABEL_58;
          }
        }
        else
        {
          size_t v34 = (void *)v26[1];
          if (v34) {
            goto LABEL_65;
          }
        }
        do
        {
          uint64_t v35 = (void *)v26[2];
          BOOL v17 = *v35 == (void)v26;
          size_t v26 = v35;
        }
        while (!v17);
LABEL_58:
        size_t v26 = v35;
        if (v35 == v27) {
          return;
        }
      }
    }
    do
    {
      std::operator+<char>();
      uint64_t v28 = std::string::append(&v36, " is unused.");
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      std::string::size_type v38 = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v36.__r_.__value_.__l.__data_);
      }
      google::protobuf::DescriptorBuilder::AddError((uint64_t)a1, *(const std::string::value_type **)v26[4], a2, 9, (const std::string::value_type *)__p);
      if (SHIBYTE(v38) < 0)
      {
        operator delete(__p[0]);
        uint64_t v30 = (void *)v26[1];
        if (v30)
        {
          do
          {
LABEL_53:
            uint64_t v31 = v30;
            uint64_t v30 = (void *)*v30;
          }
          while (v30);
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v30 = (void *)v26[1];
        if (v30) {
          goto LABEL_53;
        }
      }
      do
      {
        uint64_t v31 = (void *)v26[2];
        BOOL v17 = *v31 == (void)v26;
        size_t v26 = v31;
      }
      while (!v17);
LABEL_46:
      size_t v26 = v31;
    }
    while (v31 != v27);
  }
}

void sub_23CDDA02C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateNameString(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  if (v2) {
    operator new();
  }
  operator new();
}

void sub_23CDDA228(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::BuildOneof(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_23CDDA428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDDA43C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDDA450(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_23CDDA474(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildExtensionRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)a4 = v8;
  int v9 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a4 + 4) = v9;
  if (v8 <= 0)
  {
    google::protobuf::DescriptorBuilder::AddError(a1, *(const std::string::value_type **)(a3 + 8), a2, 1, "Extension numbers must be positive integers.");
    if (*(_DWORD *)a4 < *(_DWORD *)(a4 + 4))
    {
LABEL_3:
      *(void *)(a4 + 8) = 0;
      if ((*(_DWORD *)(a2 + 16) & 1) == 0) {
        return;
      }
LABEL_7:
      if (!*(void *)(a2 + 24))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v72, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 7769);
        uint64_t v10 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v72, "CHECK failed: !value || options_ != nullptr: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&__p, v10);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v72[0].__r_.__value_.__l.__data_);
      }
      memset(v72, 0, 24);
      google::protobuf::Descriptor::GetLocationPath(a3, (uint64_t)v72);
      std::string::size_type v11 = v72[0].__r_.__value_.__r.__words[2];
      std::string::size_type size = v72[0].__r_.__value_.__l.__size_;
      if (v72[0].__r_.__value_.__l.__size_ >= v72[0].__r_.__value_.__r.__words[2])
      {
        size_t v14 = (void *)v72[0].__r_.__value_.__r.__words[0];
        std::string::size_type v15 = v72[0].__r_.__value_.__l.__size_ - v72[0].__r_.__value_.__r.__words[0];
        uint64_t v16 = (uint64_t)(v72[0].__r_.__value_.__l.__size_ - v72[0].__r_.__value_.__r.__words[0]) >> 2;
        unint64_t v17 = v16 + 1;
        if ((unint64_t)(v16 + 1) >> 62) {
          std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
        }
        int64_t v18 = v72[0].__r_.__value_.__r.__words[2] - v72[0].__r_.__value_.__r.__words[0];
        if ((uint64_t)(v72[0].__r_.__value_.__r.__words[2] - v72[0].__r_.__value_.__r.__words[0]) >> 1 > v17) {
          unint64_t v17 = v18 >> 1;
        }
        if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v19 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v19 = v17;
        }
        if (v19)
        {
          if (v19 >> 62) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          size_t v20 = (char *)operator new(4 * v19);
        }
        else
        {
          size_t v20 = 0;
        }
        int v21 = &v20[4 * v16];
        std::string::size_type v11 = (std::string::size_type)&v20[4 * v19];
        *(_DWORD *)int v21 = 5;
        uint64_t v13 = v21 + 4;
        if ((void *)size != v14)
        {
          unint64_t v22 = size - (void)v14 - 4;
          if (v22 < 0x2C) {
            goto LABEL_86;
          }
          if (size - (unint64_t)&v20[v15] < 0x20) {
            goto LABEL_86;
          }
          uint64_t v23 = (v22 >> 2) + 1;
          uint64_t v24 = 4 * (v23 & 0x7FFFFFFFFFFFFFF8);
          std::string::size_type v25 = size - v24;
          v21 -= v24;
          size_t v26 = &v20[4 * v16 - 16];
          int v27 = (long long *)(size - 16);
          uint64_t v28 = v23 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v29 = *v27;
            *((_OWORD *)v26 - 1) = *(v27 - 1);
            *(_OWORD *)size_t v26 = v29;
            v26 -= 32;
            v27 -= 2;
            v28 -= 8;
          }
          while (v28);
          std::string::size_type size = v25;
          if (v23 != (v23 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_86:
            do
            {
              int v30 = *(_DWORD *)(size - 4);
              size -= 4;
              *((_DWORD *)v21 - 1) = v30;
              v21 -= 4;
            }
            while ((void *)size != v14);
          }
        }
        v72[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v21;
        v72[0].__r_.__value_.__l.__size_ = (std::string::size_type)v13;
        v72[0].__r_.__value_.__r.__words[2] = v11;
        if (v14)
        {
          operator delete(v14);
          std::string::size_type v11 = v72[0].__r_.__value_.__r.__words[2];
        }
      }
      else
      {
        *(_DWORD *)v72[0].__r_.__value_.__l.__size_ = 5;
        uint64_t v13 = (char *)(size + 4);
      }
      v72[0].__r_.__value_.__l.__size_ = (std::string::size_type)v13;
      unint64_t v31 = (unint64_t)(a4 - *(void *)(a3 + 72)) >> 4;
      if ((unint64_t)v13 < v11)
      {
        *(_DWORD *)uint64_t v13 = v31;
        long long v32 = v13 + 4;
        goto LABEL_53;
      }
      long long v33 = (char *)v72[0].__r_.__value_.__r.__words[0];
      size_t v34 = &v13[-v72[0].__r_.__value_.__r.__words[0]];
      uint64_t v35 = (uint64_t)&v13[-v72[0].__r_.__value_.__r.__words[0]] >> 2;
      unint64_t v36 = v35 + 1;
      if ((unint64_t)(v35 + 1) >> 62) {
        std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v37 = v11 - v72[0].__r_.__value_.__r.__words[0];
      if (v37 >> 1 > v36) {
        unint64_t v36 = v37 >> 1;
      }
      if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v38 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v38 = v36;
      }
      if (v38)
      {
        if (v38 >> 62) {
          std::__throw_bad_array_new_length[abi:ne180100]();
        }
        int v39 = operator new(4 * v38);
        int v40 = &v39[4 * v35];
        std::string::size_type v11 = (std::string::size_type)&v39[4 * v38];
        *int v40 = v31;
        long long v32 = (char *)(v40 + 1);
        int64_t v41 = v13 - v33;
        if (v13 == v33) {
          goto LABEL_51;
        }
      }
      else
      {
        int v39 = 0;
        int v40 = (_DWORD *)(4 * v35);
        std::string::size_type v11 = 0;
        *(_DWORD *)(4 * v35) = v31;
        long long v32 = (char *)(4 * v35 + 4);
        int64_t v41 = v13 - v33;
        if (v13 == v33) {
          goto LABEL_51;
        }
      }
      unint64_t v42 = v41 - 4;
      if (v42 >= 0x2C)
      {
        if ((unint64_t)(v13 - v39 - (void)v34) >= 0x20)
        {
          uint64_t v44 = (v42 >> 2) + 1;
          uint64_t v45 = 4 * (v44 & 0x7FFFFFFFFFFFFFF8);
          int v43 = &v13[-v45];
          int v40 = (_DWORD *)((char *)v40 - v45);
          size_t v46 = &v39[4 * v35 - 16];
          BOOL v47 = v13 - 16;
          uint64_t v48 = v44 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v49 = *(_OWORD *)v47;
            *(v46 - 1) = *((_OWORD *)v47 - 1);
            _OWORD *v46 = v49;
            v46 -= 2;
            v47 -= 32;
            v48 -= 8;
          }
          while (v48);
          if (v44 == (v44 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_51:
            v72[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v40;
            v72[0].__r_.__value_.__l.__size_ = (std::string::size_type)v32;
            v72[0].__r_.__value_.__r.__words[2] = v11;
            if (v33)
            {
              operator delete(v33);
              std::string::size_type v11 = v72[0].__r_.__value_.__r.__words[2];
            }
LABEL_53:
            v72[0].__r_.__value_.__l.__size_ = (std::string::size_type)v32;
            if ((unint64_t)v32 < v11)
            {
              *(_DWORD *)long long v32 = 3;
              std::string::size_type v51 = (std::string::size_type)(v32 + 4);
              goto LABEL_76;
            }
            std::string::size_type v52 = (char *)v72[0].__r_.__value_.__r.__words[0];
            long long v53 = &v32[-v72[0].__r_.__value_.__r.__words[0]];
            uint64_t v54 = (uint64_t)&v32[-v72[0].__r_.__value_.__r.__words[0]] >> 2;
            unint64_t v55 = v54 + 1;
            if ((unint64_t)(v54 + 1) >> 62) {
              std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v56 = v11 - v72[0].__r_.__value_.__r.__words[0];
            if (v56 >> 1 > v55) {
              unint64_t v55 = v56 >> 1;
            }
            if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v57 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v57 = v55;
            }
            if (v57)
            {
              if (v57 >> 62) {
                std::__throw_bad_array_new_length[abi:ne180100]();
              }
              int v58 = operator new(4 * v57);
            }
            else
            {
              int v58 = 0;
            }
            size_t v59 = &v58[4 * v54];
            std::string::size_type v60 = (std::string::size_type)&v58[4 * v57];
            _DWORD *v59 = 3;
            std::string::size_type v51 = (std::string::size_type)(v59 + 1);
            if (v32 != v52)
            {
              unint64_t v61 = v32 - v52 - 4;
              if (v61 >= 0x2C)
              {
                if ((unint64_t)(v32 - v58 - (void)v53) >= 0x20)
                {
                  uint64_t v63 = (v61 >> 2) + 1;
                  uint64_t v64 = 4 * (v63 & 0x7FFFFFFFFFFFFFF8);
                  uint64_t v62 = &v32[-v64];
                  size_t v59 = (_DWORD *)((char *)v59 - v64);
                  uint64_t v65 = &v58[4 * v54 - 16];
                  int v66 = v32 - 16;
                  uint64_t v67 = v63 & 0x7FFFFFFFFFFFFFF8;
                  do
                  {
                    long long v68 = *(_OWORD *)v66;
                    *(v65 - 1) = *((_OWORD *)v66 - 1);
                    *uint64_t v65 = v68;
                    v65 -= 2;
                    v66 -= 32;
                    v67 -= 8;
                  }
                  while (v67);
                  if (v63 == (v63 & 0x7FFFFFFFFFFFFFF8)) {
                    goto LABEL_74;
                  }
                }
                else
                {
                  uint64_t v62 = v32;
                }
              }
              else
              {
                uint64_t v62 = v32;
              }
              do
              {
                int v69 = *((_DWORD *)v62 - 1);
                v62 -= 4;
                *--size_t v59 = v69;
              }
              while (v62 != v52);
            }
LABEL_74:
            v72[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v59;
            v72[0].__r_.__value_.__l.__size_ = v51;
            v72[0].__r_.__value_.__r.__words[2] = v60;
            if (v52) {
              operator delete(v52);
            }
LABEL_76:
            v72[0].__r_.__value_.__l.__size_ = v51;
            std::string __p = operator new(0x28uLL);
            long long v71 = xmmword_23CE7EC80;
            strcpy((char *)__p, "google.protobuf.ExtensionRangeOptions");
            google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor::ExtensionRange>();
          }
        }
        else
        {
          int v43 = v13;
        }
      }
      else
      {
        int v43 = v13;
      }
      do
      {
        int v50 = *((_DWORD *)v43 - 1);
        v43 -= 4;
        *--int v40 = v50;
      }
      while (v43 != v33);
      goto LABEL_51;
    }
  }
  else if (v8 < v9)
  {
    goto LABEL_3;
  }
  google::protobuf::DescriptorBuilder::AddError(a1, *(const std::string::value_type **)(a3 + 8), a2, 1, "Extension range end number must be greater than start number.");
  *(void *)(a4 + 8) = 0;
  if (*(_DWORD *)(a2 + 16)) {
    goto LABEL_7;
  }
}

void sub_23CDDAA08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDDAA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDDAA30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (!a16) {
    _Unwind_Resume(exception_object);
  }
  operator delete(a16);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::Descriptor>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  int v27 = 0;
  unint64_t v28 = 0;
  google::protobuf::Descriptor::GetLocationPath(a3, (uint64_t)&__p);
  uint64_t v5 = v27;
  if ((unint64_t)v27 < v28)
  {
    *(_DWORD *)int v27 = a4;
    uint64_t v6 = (uint64_t)(v5 + 4);
    goto LABEL_22;
  }
  int v7 = (char *)__p;
  int64_t v8 = v27 - (unsigned char *)__p;
  uint64_t v9 = (v27 - (unsigned char *)__p) >> 2;
  unint64_t v10 = v9 + 1;
  if ((unint64_t)(v9 + 1) >> 62) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v11 = v28 - (void)__p;
  if ((uint64_t)(v28 - (void)__p) >> 1 > v10) {
    unint64_t v10 = v11 >> 1;
  }
  if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12)
  {
    if (v12 >> 62) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v13 = (char *)operator new(4 * v12);
    size_t v14 = &v13[4 * v9];
    std::string::size_type v15 = &v13[4 * v12];
    *(_DWORD *)size_t v14 = a4;
    uint64_t v6 = (uint64_t)(v14 + 4);
    int64_t v16 = v5 - v7;
    if (v5 == v7) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v13 = 0;
    size_t v14 = (char *)(4 * v9);
    std::string::size_type v15 = 0;
    *(_DWORD *)(4 * v9) = a4;
    uint64_t v6 = 4 * v9 + 4;
    int64_t v16 = v5 - v7;
    if (v5 == v7)
    {
LABEL_20:
      std::string __p = v14;
      int v27 = (char *)v6;
      unint64_t v28 = (unint64_t)v15;
      if (v7) {
        operator delete(v7);
      }
LABEL_22:
      int v27 = (char *)v6;
      google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor>();
    }
  }
  unint64_t v17 = v16 - 4;
  if (v17 < 0x2C) {
    goto LABEL_27;
  }
  if ((unint64_t)(v5 - &v13[v8]) < 0x20) {
    goto LABEL_27;
  }
  uint64_t v18 = (v17 >> 2) + 1;
  uint64_t v19 = 4 * (v18 & 0x7FFFFFFFFFFFFFF8);
  size_t v20 = &v5[-v19];
  v14 -= v19;
  int v21 = &v13[4 * v9 - 16];
  unint64_t v22 = v5 - 16;
  uint64_t v23 = v18 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v24 = *(_OWORD *)v22;
    *((_OWORD *)v21 - 1) = *((_OWORD *)v22 - 1);
    *(_OWORD *)int v21 = v24;
    v21 -= 32;
    v22 -= 32;
    v23 -= 8;
  }
  while (v23);
  uint64_t v5 = v20;
  if (v18 != (v18 & 0x7FFFFFFFFFFFFFF8))
  {
LABEL_27:
    do
    {
      int v25 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v14 - 1) = v25;
      v14 -= 4;
    }
    while (v5 != v7);
  }
  goto LABEL_20;
}

void sub_23CDDAC58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildFieldOrExtension(google::protobuf::DescriptorBuilder *this, const google::protobuf::FieldDescriptorProto *a2, google::protobuf::Descriptor *a3, google::protobuf::FieldDescriptor *a4)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  if (a3) {
    uint64_t v4 = (uint64_t *)((char *)a3 + 8);
  }
  else {
    uint64_t v4 = (uint64_t *)(*((void *)this + 10) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v4);
}

void sub_23CDDBCC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (*(char *)(v23 - 121) < 0) {
    operator delete(*(void **)(v23 - 144));
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::ToCamelCase(std::string *a1, uint64_t *a2, char a3)
{
  uint64_t v5 = a1;
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  if (*((char *)a2 + 23) >= 0) {
    std::string::size_type v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    std::string::size_type v6 = a2[1];
  }
  std::string::reserve(a1, v6);
  BOOL v7 = *((char *)a2 + 23) < 0;
  uint64_t v8 = *((unsigned __int8 *)a2 + 23);
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = a2[1];
  }
  if (v8)
  {
    unint64_t v9 = 0;
    unsigned __int8 v10 = a3 ^ 1;
    do
    {
      if (v7) {
        unint64_t v12 = (uint64_t *)*a2;
      }
      else {
        unint64_t v12 = a2;
      }
      int v13 = *((unsigned __int8 *)v12 + v9);
      BOOL v14 = v13 == 95;
      if (v13 != 95)
      {
        if ((v10 & ((v13 - 97) < 0x1A)) != 0) {
          LOBYTE(v13) = v13 - 32;
        }
        std::string::push_back(v5, v13);
      }
      ++v9;
      BOOL v7 = *((char *)a2 + 23) < 0;
      unint64_t v11 = a2[1];
      if (*((char *)a2 + 23) >= 0) {
        unint64_t v11 = *((unsigned __int8 *)a2 + 23);
      }
      unsigned __int8 v10 = v14;
    }
    while (v11 > v9);
  }
  if (a3)
  {
    if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v5->__r_.__value_.__l.__size_) {
        return;
      }
      uint64_t v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v5->__r_.__value_.__s + 23))
    {
      return;
    }
    int v15 = v5->__r_.__value_.__s.__data_[0];
    if ((v15 - 65) < 0x1A) {
      LOBYTE(v15) = v15 + 32;
    }
    v5->__r_.__value_.__s.__data_[0] = v15;
  }
}

void sub_23CDDBFB0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::ToJsonName(std::string *a1, uint64_t *a2)
{
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  if (*((char *)a2 + 23) >= 0) {
    std::string::size_type v4 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    std::string::size_type v4 = a2[1];
  }
  std::string::reserve(a1, v4);
  BOOL v5 = *((char *)a2 + 23) < 0;
  uint64_t v6 = *((unsigned __int8 *)a2 + 23);
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = a2[1];
  }
  if (v6)
  {
    unint64_t v7 = 0;
    BOOL v8 = 0;
    do
    {
      if (v5) {
        unsigned __int8 v10 = (uint64_t *)*a2;
      }
      else {
        unsigned __int8 v10 = a2;
      }
      int v11 = *((unsigned __int8 *)v10 + v7);
      BOOL v12 = v11 == 95;
      if (v11 != 95)
      {
        if (v8 && (v11 - 97) < 0x1A) {
          LOBYTE(v11) = v11 - 32;
        }
        std::string::push_back(a1, v11);
      }
      ++v7;
      BOOL v5 = *((char *)a2 + 23) < 0;
      unint64_t v9 = a2[1];
      if (*((char *)a2 + 23) >= 0) {
        unint64_t v9 = *((unsigned __int8 *)a2 + 23);
      }
      BOOL v8 = v12;
    }
    while (v9 > v7);
  }
}

void sub_23CDDC0B0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::FieldDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  int v27 = 0;
  unint64_t v28 = 0;
  google::protobuf::FieldDescriptor::GetLocationPath(a3, (char **)&__p);
  BOOL v5 = v27;
  if ((unint64_t)v27 < v28)
  {
    *(_DWORD *)int v27 = a4;
    uint64_t v6 = (uint64_t)(v5 + 4);
    goto LABEL_22;
  }
  unint64_t v7 = (char *)__p;
  int64_t v8 = v27 - (unsigned char *)__p;
  uint64_t v9 = (v27 - (unsigned char *)__p) >> 2;
  unint64_t v10 = v9 + 1;
  if ((unint64_t)(v9 + 1) >> 62) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v11 = v28 - (void)__p;
  if ((uint64_t)(v28 - (void)__p) >> 1 > v10) {
    unint64_t v10 = v11 >> 1;
  }
  if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12)
  {
    if (v12 >> 62) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int v13 = (char *)operator new(4 * v12);
    BOOL v14 = &v13[4 * v9];
    int v15 = &v13[4 * v12];
    *(_DWORD *)BOOL v14 = a4;
    uint64_t v6 = (uint64_t)(v14 + 4);
    int64_t v16 = v5 - v7;
    if (v5 == v7) {
      goto LABEL_20;
    }
  }
  else
  {
    int v13 = 0;
    BOOL v14 = (char *)(4 * v9);
    int v15 = 0;
    *(_DWORD *)(4 * v9) = a4;
    uint64_t v6 = 4 * v9 + 4;
    int64_t v16 = v5 - v7;
    if (v5 == v7)
    {
LABEL_20:
      std::string __p = v14;
      int v27 = (char *)v6;
      unint64_t v28 = (unint64_t)v15;
      if (v7) {
        operator delete(v7);
      }
LABEL_22:
      int v27 = (char *)v6;
      google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FieldDescriptor>();
    }
  }
  unint64_t v17 = v16 - 4;
  if (v17 < 0x2C) {
    goto LABEL_27;
  }
  if ((unint64_t)(v5 - &v13[v8]) < 0x20) {
    goto LABEL_27;
  }
  uint64_t v18 = (v17 >> 2) + 1;
  uint64_t v19 = 4 * (v18 & 0x7FFFFFFFFFFFFFF8);
  size_t v20 = &v5[-v19];
  v14 -= v19;
  int v21 = &v13[4 * v9 - 16];
  unint64_t v22 = v5 - 16;
  uint64_t v23 = v18 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v24 = *(_OWORD *)v22;
    *((_OWORD *)v21 - 1) = *((_OWORD *)v22 - 1);
    *(_OWORD *)int v21 = v24;
    v21 -= 32;
    v22 -= 32;
    v23 -= 8;
  }
  while (v23);
  BOOL v5 = v20;
  if (v18 != (v18 & 0x7FFFFFFFFFFFFFF8))
  {
LABEL_27:
    do
    {
      int v25 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v14 - 1) = v25;
      v14 -= 4;
    }
    while (v5 != v7);
  }
  goto LABEL_20;
}

void sub_23CDDC2AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor::ExtensionRange>()
{
}

void sub_23CDDC6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDDC6E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::OneofDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  int v27 = 0;
  unint64_t v28 = 0;
  google::protobuf::OneofDescriptor::GetLocationPath(a3, (char **)&__p);
  BOOL v5 = v27;
  if ((unint64_t)v27 < v28)
  {
    *(_DWORD *)int v27 = a4;
    uint64_t v6 = (uint64_t)(v5 + 4);
    goto LABEL_22;
  }
  unint64_t v7 = (char *)__p;
  int64_t v8 = v27 - (unsigned char *)__p;
  uint64_t v9 = (v27 - (unsigned char *)__p) >> 2;
  unint64_t v10 = v9 + 1;
  if ((unint64_t)(v9 + 1) >> 62) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v11 = v28 - (void)__p;
  if ((uint64_t)(v28 - (void)__p) >> 1 > v10) {
    unint64_t v10 = v11 >> 1;
  }
  if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12)
  {
    if (v12 >> 62) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int v13 = (char *)operator new(4 * v12);
    BOOL v14 = &v13[4 * v9];
    int v15 = &v13[4 * v12];
    *(_DWORD *)BOOL v14 = a4;
    uint64_t v6 = (uint64_t)(v14 + 4);
    int64_t v16 = v5 - v7;
    if (v5 == v7) {
      goto LABEL_20;
    }
  }
  else
  {
    int v13 = 0;
    BOOL v14 = (char *)(4 * v9);
    int v15 = 0;
    *(_DWORD *)(4 * v9) = a4;
    uint64_t v6 = 4 * v9 + 4;
    int64_t v16 = v5 - v7;
    if (v5 == v7)
    {
LABEL_20:
      std::string __p = v14;
      int v27 = (char *)v6;
      unint64_t v28 = (unint64_t)v15;
      if (v7) {
        operator delete(v7);
      }
LABEL_22:
      int v27 = (char *)v6;
      google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::OneofDescriptor>();
    }
  }
  unint64_t v17 = v16 - 4;
  if (v17 < 0x2C) {
    goto LABEL_27;
  }
  if ((unint64_t)(v5 - &v13[v8]) < 0x20) {
    goto LABEL_27;
  }
  uint64_t v18 = (v17 >> 2) + 1;
  uint64_t v19 = 4 * (v18 & 0x7FFFFFFFFFFFFFF8);
  size_t v20 = &v5[-v19];
  v14 -= v19;
  int v21 = &v13[4 * v9 - 16];
  unint64_t v22 = v5 - 16;
  uint64_t v23 = v18 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v24 = *(_OWORD *)v22;
    *((_OWORD *)v21 - 1) = *((_OWORD *)v22 - 1);
    *(_OWORD *)int v21 = v24;
    v21 -= 32;
    v22 -= 32;
    v23 -= 8;
  }
  while (v23);
  BOOL v5 = v20;
  if (v18 != (v18 & 0x7FFFFFFFFFFFFFF8))
  {
LABEL_27:
    do
    {
      int v25 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v14 - 1) = v25;
      v14 -= 4;
    }
    while (v5 != v7);
  }
  goto LABEL_20;
}

void sub_23CDDC930(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CheckEnumValueUniqueness(google::protobuf::DescriptorBuilder *this, const google::protobuf::EnumDescriptorProto *a2, const google::protobuf::EnumDescriptor *a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(void *)a3;
  int v6 = *(char *)(*(void *)a3 + 23);
  if (v6 >= 0) {
    unint64_t v7 = *(unsigned __int8 **)a3;
  }
  else {
    unint64_t v7 = **(unsigned __int8 ***)a3;
  }
  if (v6 < 0)
  {
    uint64_t v8 = *(void *)(v5 + 8);
    if (v8 < 0)
    {
      google::protobuf::StringPiece::LogFatalSizeTooBig(*(google::protobuf::StringPiece **)(v5 + 8), "size_t to int conversion", (const char *)a3);
      memset(&v88, 0, sizeof(v88));
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v8 = *(unsigned __int8 *)(*(void *)a3 + 23);
  }
  memset(&v88, 0, sizeof(v88));
  for (; v8; --v8)
  {
    int v10 = *v7++;
    int v9 = v10;
    if (v10 != 95)
    {
      if ((v9 - 65) < 0x1A) {
        LOBYTE(v9) = v9 + 32;
      }
      std::string::push_back(&v88, v9);
    }
  }
LABEL_15:
  v87[0] = 0;
  v87[1] = 0;
  long long v86 = v87;
  if (*((int *)v3 + 11) >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v75 = (char *)a2 + 24;
    uint64_t v77 = v3;
    while (1)
    {
      uint64_t v78 = *((void *)v3 + 6);
      size_t v79 = (void **)(v78 + 40 * v11);
      unint64_t v12 = *v79;
      int v13 = *((char *)*v79 + 23);
      BOOL v14 = (void *)**v79;
      int v15 = v13 >= 0 ? *v79 : (void *)**v79;
      if ((v13 & 0x80000000) == 0) {
        break;
      }
      std::string::size_type v16 = v12[1];
      if ((v16 & 0x8000000000000000) == 0) {
        goto LABEL_25;
      }
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v12[1], "size_t to int conversion", (const char *)a3);
      std::string::size_type v17 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
      std::string::size_type size = v88.__r_.__value_.__l.__size_;
      uint64_t v3 = v77;
LABEL_30:
      std::string::size_type v20 = 0;
      int64_t v21 = 0;
      int v22 = (char)v17;
      if ((v17 & 0x80u) != 0) {
        std::string::size_type v17 = size;
      }
      uint64_t v23 = (std::string *)v88.__r_.__value_.__r.__words[0];
      if (v22 >= 0) {
        uint64_t v23 = &v88;
      }
      while (1)
      {
        if (v20 >= v17) {
          goto LABEL_44;
        }
        if ((v16 & ~((uint64_t)v16 >> 63)) == v21) {
          goto LABEL_160;
        }
        int v24 = *((unsigned __int8 *)v15 + v21);
        if (v24 == 95) {
          goto LABEL_35;
        }
        if ((v24 - 65) < 0x1A) {
          LOBYTE(v24) = v24 + 32;
        }
        if (v23->__r_.__value_.__s.__data_[v20] != v24) {
          break;
        }
        ++v20;
LABEL_35:
        if (v16 == ++v21)
        {
          int64_t v21 = v16;
LABEL_44:
          if (v20 < v17)
          {
            if (v14)
            {
              if (v16 <= 0x7FFFFFFFFFFFFFF7)
              {
                if (v16 < 0x17) {
                  goto LABEL_68;
                }
                uint64_t v25 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v16 | 7) != 0x17) {
                  uint64_t v25 = v16 | 7;
                }
                goto LABEL_77;
              }
              goto LABEL_163;
            }
            goto LABEL_74;
          }
          if (v21 >= v16)
          {
LABEL_59:
            if (v16 == v21)
            {
LABEL_60:
              if (v14)
              {
                if (v16 <= 0x7FFFFFFFFFFFFFF7)
                {
                  if (v16 < 0x17) {
                    goto LABEL_68;
                  }
                  uint64_t v25 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if ((v16 | 7) != 0x17) {
                    uint64_t v25 = v16 | 7;
                  }
                  goto LABEL_77;
                }
                goto LABEL_163;
              }
              goto LABEL_74;
            }
            BOOL v27 = (uint64_t)v16 < v21;
            v16 -= v21;
            if (!v27)
            {
              if (v14)
              {
                if (v16 <= 0x7FFFFFFFFFFFFFF7)
                {
                  if (v16 >= 0x17)
                  {
                    uint64_t v70 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v16 | 7) != 0x17) {
                      uint64_t v70 = v16 | 7;
                    }
                    uint64_t v71 = v70 + 1;
                    p_p = (std::string *)operator new(v70 + 1);
                    __p.__r_.__value_.__l.__size_ = v16;
                    __p.__r_.__value_.__r.__words[2] = v71 | 0x8000000000000000;
                    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
                    uint64_t v3 = v77;
                  }
                  else
                  {
                    *((unsigned char *)&__p.__r_.__value_.__s + 23) = v16;
                    p_p = &__p;
                  }
                  int v30 = (char *)v15 + v21;
                  long long v29 = p_p;
                  goto LABEL_79;
                }
LABEL_163:
                std::string::__throw_length_error[abi:ne180100]();
              }
LABEL_74:
              memset(&__p, 0, sizeof(__p));
              goto LABEL_81;
            }
            int v72 = 283;
            BOOL v74 = "remove_prefix";
            uint64_t v73 = "length_ >= n";
          }
          else
          {
            if ((uint64_t)v16 <= v21) {
              std::string::size_type v26 = v21;
            }
            else {
              std::string::size_type v26 = v16;
            }
            while (v26 != v21)
            {
              if (*((unsigned char *)v15 + v21) != 95) {
                goto LABEL_59;
              }
              if (v16 == ++v21) {
                goto LABEL_60;
              }
            }
LABEL_160:
            int v72 = 278;
            uint64_t v73 = "i < length_";
            BOOL v74 = "operator[]";
          }
          __assert_rtn(v74, "stringpiece.h", v72, v73);
        }
      }
      if (v16 > 0x7FFFFFFFFFFFFFF7) {
        goto LABEL_163;
      }
      if (v16 < 0x17)
      {
LABEL_68:
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = v16;
        p_p = &__p;
        goto LABEL_78;
      }
      uint64_t v25 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v16 | 7) != 0x17) {
        uint64_t v25 = v16 | 7;
      }
LABEL_77:
      uint64_t v28 = v25 + 1;
      p_p = (std::string *)operator new(v25 + 1);
      __p.__r_.__value_.__l.__size_ = v16;
      __p.__r_.__value_.__r.__words[2] = v28 | 0x8000000000000000;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
      uint64_t v3 = v77;
LABEL_78:
      long long v29 = p_p;
      int v30 = (char *)v15;
LABEL_79:
      memmove(v29, v30, v16);
LABEL_80:
      p_p->__r_.__value_.__s.__data_[v16] = 0;
LABEL_81:
      memset(&v85, 0, sizeof(v85));
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v31 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v31 = __p.__r_.__value_.__l.__size_;
      }
      std::string::reserve(&v85, v31);
      std::string::size_type v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      BOOL v33 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
      std::string::size_type v34 = __p.__r_.__value_.__l.__size_;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v35 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v35 = __p.__r_.__value_.__l.__size_;
      }
      if (v35)
      {
        std::string::size_type v36 = 0;
        char v37 = 1;
        do
        {
          if (v33) {
            int v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          else {
            int v39 = &__p;
          }
          int v40 = v39->__r_.__value_.__s.__data_[v36];
          BOOL v41 = v40 == 95;
          if (v40 != 95)
          {
            if (v37) {
              char v42 = -97;
            }
            else {
              char v42 = -65;
            }
            if (v37) {
              char v43 = -32;
            }
            else {
              char v43 = 32;
            }
            if ((v40 + v42) >= 0x1Au) {
              char v44 = 0;
            }
            else {
              char v44 = v43;
            }
            std::string::push_back(&v85, v40 + v44);
            std::string::size_type v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            std::string::size_type v34 = __p.__r_.__value_.__l.__size_;
          }
          ++v36;
          BOOL v33 = (v32 & 0x80u) != 0;
          if ((v32 & 0x80u) == 0) {
            std::string::size_type v38 = v32;
          }
          else {
            std::string::size_type v38 = v34;
          }
          char v37 = v41;
        }
        while (v38 > v36);
      }
      if ((v32 & 0x80) != 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_111;
        }
LABEL_109:
        std::string __p = v85;
      }
      else
      {
        if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_109;
        }
LABEL_111:
        std::string::__init_copy_ctor_external(&__p, v85.__r_.__value_.__l.__data_, v85.__r_.__value_.__l.__size_);
      }
      uint64_t v84 = v78 + 40 * v11;
      size_t v46 = std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string,google::protobuf::EnumValueDescriptor const*>>((uint64_t **)&v86, (const void **)&__p.__r_.__value_.__l.__data_, (long long *)&__p);
      char v47 = v45;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (!v47) {
          goto LABEL_116;
        }
        goto LABEL_145;
      }
      if (v45) {
        goto LABEL_145;
      }
LABEL_116:
      uint64_t v48 = v46[7];
      long long v49 = (const void **)*v48;
      int v50 = *v79;
      uint64_t v51 = *(unsigned __int8 *)(*v48 + 23);
      a3 = *(const google::protobuf::EnumDescriptor **)(*v48 + 8);
      if ((v51 & 0x80u) == 0) {
        uint64_t v52 = *(unsigned __int8 *)(*v48 + 23);
      }
      else {
        uint64_t v52 = *(void *)(*v48 + 8);
      }
      uint64_t v53 = *((unsigned __int8 *)v50 + 23);
      int v54 = (char)v53;
      if ((v53 & 0x80u) != 0) {
        uint64_t v53 = v50[1];
      }
      if (v52 != v53) {
        goto LABEL_131;
      }
      if (v54 >= 0) {
        unint64_t v55 = *v79;
      }
      else {
        unint64_t v55 = (void *)*v50;
      }
      if ((v51 & 0x80) != 0)
      {
        if (memcmp(*v49, v55, (size_t)a3)) {
          goto LABEL_131;
        }
        goto LABEL_145;
      }
      if (*(unsigned char *)(*v48 + 23))
      {
        while (*(unsigned __int8 *)v49 == *(unsigned __int8 *)v55)
        {
          long long v49 = (const void **)((char *)v49 + 1);
          unint64_t v55 = (void *)((char *)v55 + 1);
          if (!--v51) {
            goto LABEL_145;
          }
        }
LABEL_131:
        if (*((_DWORD *)v48 + 4) != *(_DWORD *)(v78 + 40 * v11 + 16))
        {
          std::operator+<char>();
          uint64_t v56 = std::string::append(&v80, " has the same name as ");
          long long v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
          v81.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v57;
          v56->__r_.__value_.__l.__size_ = 0;
          v56->__r_.__value_.__r.__words[2] = 0;
          v56->__r_.__value_.__r.__words[0] = 0;
          int v89 = &v85;
          int v58 = std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)&v86, (const void **)&v85.__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (long long **)&v89);
          uint64_t v59 = *v58[7];
          int v60 = *(char *)(v59 + 23);
          unint64_t v61 = v60 >= 0 ? (const std::string::value_type *)*v58[7] : *(const std::string::value_type **)v59;
          std::string::size_type v62 = v60 >= 0 ? *(unsigned __int8 *)(v59 + 23) : *(void *)(v59 + 8);
          uint64_t v63 = std::string::append(&v81, v61, v62);
          long long v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
          v82.__r_.__value_.__r.__words[2] = v63->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v64;
          v63->__r_.__value_.__l.__size_ = 0;
          v63->__r_.__value_.__r.__words[2] = 0;
          v63->__r_.__value_.__r.__words[0] = 0;
          uint64_t v65 = std::string::append(&v82, " if you ignore case and strip out the enum name prefix (if any). This is error-prone and can lead to undefined behavior. Please avoid doing this. If you are using allow_alias, please assign the same numeric value to both enums.");
          long long v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v65->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v66;
          v65->__r_.__value_.__l.__size_ = 0;
          v65->__r_.__value_.__r.__words[2] = 0;
          v65->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v82.__r_.__value_.__l.__data_);
            if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
              goto LABEL_149;
            }
LABEL_140:
            if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
LABEL_150:
            }
              operator delete(v80.__r_.__value_.__l.__data_);
          }
          else
          {
            if ((SHIBYTE(v81.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_140;
            }
LABEL_149:
            operator delete(v81.__r_.__value_.__l.__data_);
            if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
              goto LABEL_150;
            }
          }
          uint64_t v67 = *(const std::string::value_type **)(v78 + 40 * v11 + 8);
          if (*(_DWORD *)(*((void *)v3 + 2) + 60) == 2)
          {
            uint64_t v68 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)v75, v11);
            google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, v67, v68, 0, (const std::string::value_type *)&__p);
          }
          else
          {
            uint64_t v69 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)v75, v11);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v67, v69, 0, (const std::string::value_type *)&__p);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(__p.__r_.__value_.__l.__data_);
            if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
              goto LABEL_146;
            }
            goto LABEL_18;
          }
        }
      }
LABEL_145:
      if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
      {
LABEL_146:
        operator delete(v85.__r_.__value_.__l.__data_);
        if (++v11 >= *((int *)v3 + 11))
        {
LABEL_155:
          std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)&v86, v87[0]);
          if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
            goto LABEL_156;
          }
          return;
        }
      }
      else
      {
LABEL_18:
        if (++v11 >= *((int *)v3 + 11)) {
          goto LABEL_155;
        }
      }
    }
    std::string::size_type v16 = *((unsigned __int8 *)*v79 + 23);
LABEL_25:
    std::string::size_type v17 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    std::string::size_type size = v88.__r_.__value_.__l.__size_;
    if (!v16)
    {
      if (v15)
      {
        std::string::size_type v16 = 0;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
        p_p = &__p;
        goto LABEL_80;
      }
      goto LABEL_74;
    }
    BOOL v14 = v15;
    goto LABEL_30;
  }
  std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)&v86, 0);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
LABEL_156:
  }
    operator delete(v88.__r_.__value_.__l.__data_);
}

void sub_23CDDD128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if (a25 < 0)
    {
LABEL_5:
      operator delete(a20);
      if ((a19 & 0x80000000) == 0) {
        goto LABEL_9;
      }
LABEL_8:
      operator delete(a14);
LABEL_9:
      if (a46 < 0) {
        operator delete(a41);
      }
      std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy(v46 - 152, *(char **)(v46 - 144));
      if (*(char *)(v46 - 105) < 0) {
        operator delete(*(void **)(v46 - 128));
      }
      _Unwind_Resume(a1);
    }
  }
  else if (a25 < 0)
  {
    goto LABEL_5;
  }
  if ((a19 & 0x80000000) == 0) {
    goto LABEL_9;
  }
  goto LABEL_8;
}

BOOL std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 1;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) != 0;
  }
  if (a1[23])
  {
    uint64_t v6 = v2 - 1;
    do
    {
      int v8 = *a1++;
      int v7 = v8;
      int v9 = *a2++;
      BOOL v10 = v7 == v9;
      uint64_t v2 = v7 != v9;
      BOOL v10 = !v10 || v6-- == 0;
    }
    while (!v10);
  }
  return v2;
}

void google::protobuf::DescriptorBuilder::BuildEnumValue()
{
  uint64_t v0 = *MEMORY[0x263EF8340];
  operator new();
}

void sub_23CDDD8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29)
{
}

void sub_23CDDD8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29)
{
}

void sub_23CDDD8D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a49 < 0)
  {
    operator delete(a44);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::EnumDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  BOOL v27 = 0;
  unint64_t v28 = 0;
  google::protobuf::EnumDescriptor::GetLocationPath(a3, (char **)&__p);
  int v5 = v27;
  if ((unint64_t)v27 < v28)
  {
    *(_DWORD *)BOOL v27 = a4;
    uint64_t v6 = (uint64_t)(v5 + 4);
    goto LABEL_22;
  }
  int v7 = (char *)__p;
  int64_t v8 = v27 - (unsigned char *)__p;
  uint64_t v9 = (v27 - (unsigned char *)__p) >> 2;
  unint64_t v10 = v9 + 1;
  if ((unint64_t)(v9 + 1) >> 62) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v11 = v28 - (void)__p;
  if ((uint64_t)(v28 - (void)__p) >> 1 > v10) {
    unint64_t v10 = v11 >> 1;
  }
  if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12)
  {
    if (v12 >> 62) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int v13 = (char *)operator new(4 * v12);
    BOOL v14 = &v13[4 * v9];
    int v15 = &v13[4 * v12];
    *(_DWORD *)BOOL v14 = a4;
    uint64_t v6 = (uint64_t)(v14 + 4);
    int64_t v16 = v5 - v7;
    if (v5 == v7) {
      goto LABEL_20;
    }
  }
  else
  {
    int v13 = 0;
    BOOL v14 = (char *)(4 * v9);
    int v15 = 0;
    *(_DWORD *)(4 * v9) = a4;
    uint64_t v6 = 4 * v9 + 4;
    int64_t v16 = v5 - v7;
    if (v5 == v7)
    {
LABEL_20:
      std::string __p = v14;
      BOOL v27 = (char *)v6;
      unint64_t v28 = (unint64_t)v15;
      if (v7) {
        operator delete(v7);
      }
LABEL_22:
      BOOL v27 = (char *)v6;
      google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumDescriptor>();
    }
  }
  unint64_t v17 = v16 - 4;
  if (v17 < 0x2C) {
    goto LABEL_27;
  }
  if ((unint64_t)(v5 - &v13[v8]) < 0x20) {
    goto LABEL_27;
  }
  uint64_t v18 = (v17 >> 2) + 1;
  uint64_t v19 = 4 * (v18 & 0x7FFFFFFFFFFFFFF8);
  std::string::size_type v20 = &v5[-v19];
  v14 -= v19;
  int64_t v21 = &v13[4 * v9 - 16];
  int v22 = v5 - 16;
  uint64_t v23 = v18 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v24 = *(_OWORD *)v22;
    *((_OWORD *)v21 - 1) = *((_OWORD *)v22 - 1);
    *(_OWORD *)int64_t v21 = v24;
    v21 -= 32;
    v22 -= 32;
    v23 -= 8;
  }
  while (v23);
  int v5 = v20;
  if (v18 != (v18 & 0x7FFFFFFFFFFFFFF8))
  {
LABEL_27:
    do
    {
      int v25 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v14 - 1) = v25;
      v14 -= 4;
    }
    while (v5 != v7);
  }
  goto LABEL_20;
}

void sub_23CDDDC00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::EnumValueDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  BOOL v27 = 0;
  unint64_t v28 = 0;
  google::protobuf::EnumValueDescriptor::GetLocationPath(a3, (char **)&__p);
  int v5 = v27;
  if ((unint64_t)v27 < v28)
  {
    *(_DWORD *)BOOL v27 = a4;
    uint64_t v6 = (uint64_t)(v5 + 4);
    goto LABEL_22;
  }
  int v7 = (char *)__p;
  int64_t v8 = v27 - (unsigned char *)__p;
  uint64_t v9 = (v27 - (unsigned char *)__p) >> 2;
  unint64_t v10 = v9 + 1;
  if ((unint64_t)(v9 + 1) >> 62) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v11 = v28 - (void)__p;
  if ((uint64_t)(v28 - (void)__p) >> 1 > v10) {
    unint64_t v10 = v11 >> 1;
  }
  if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12)
  {
    if (v12 >> 62) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int v13 = (char *)operator new(4 * v12);
    BOOL v14 = &v13[4 * v9];
    int v15 = &v13[4 * v12];
    *(_DWORD *)BOOL v14 = a4;
    uint64_t v6 = (uint64_t)(v14 + 4);
    int64_t v16 = v5 - v7;
    if (v5 == v7) {
      goto LABEL_20;
    }
  }
  else
  {
    int v13 = 0;
    BOOL v14 = (char *)(4 * v9);
    int v15 = 0;
    *(_DWORD *)(4 * v9) = a4;
    uint64_t v6 = 4 * v9 + 4;
    int64_t v16 = v5 - v7;
    if (v5 == v7)
    {
LABEL_20:
      std::string __p = v14;
      BOOL v27 = (char *)v6;
      unint64_t v28 = (unint64_t)v15;
      if (v7) {
        operator delete(v7);
      }
LABEL_22:
      BOOL v27 = (char *)v6;
      google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumValueDescriptor>();
    }
  }
  unint64_t v17 = v16 - 4;
  if (v17 < 0x2C) {
    goto LABEL_27;
  }
  if ((unint64_t)(v5 - &v13[v8]) < 0x20) {
    goto LABEL_27;
  }
  uint64_t v18 = (v17 >> 2) + 1;
  uint64_t v19 = 4 * (v18 & 0x7FFFFFFFFFFFFFF8);
  std::string::size_type v20 = &v5[-v19];
  v14 -= v19;
  int64_t v21 = &v13[4 * v9 - 16];
  int v22 = v5 - 16;
  uint64_t v23 = v18 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v24 = *(_OWORD *)v22;
    *((_OWORD *)v21 - 1) = *((_OWORD *)v22 - 1);
    *(_OWORD *)int64_t v21 = v24;
    v21 -= 32;
    v22 -= 32;
    v23 -= 8;
  }
  while (v23);
  int v5 = v20;
  if (v18 != (v18 & 0x7FFFFFFFFFFFFFF8))
  {
LABEL_27:
    do
    {
      int v25 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v14 - 1) = v25;
      v14 -= 4;
    }
    while (v5 != v7);
  }
  goto LABEL_20;
}

void sub_23CDDDDF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildMethod()
{
}

void sub_23CDDE000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDDE014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDDE028(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_23CDDE04C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::ServiceDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  BOOL v27 = 0;
  unint64_t v28 = 0;
  google::protobuf::ServiceDescriptor::GetLocationPath(a3, (char **)&__p);
  int v5 = v27;
  if ((unint64_t)v27 < v28)
  {
    *(_DWORD *)BOOL v27 = a4;
    uint64_t v6 = (uint64_t)(v5 + 4);
    goto LABEL_22;
  }
  int v7 = (char *)__p;
  int64_t v8 = v27 - (unsigned char *)__p;
  uint64_t v9 = (v27 - (unsigned char *)__p) >> 2;
  unint64_t v10 = v9 + 1;
  if ((unint64_t)(v9 + 1) >> 62) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v11 = v28 - (void)__p;
  if ((uint64_t)(v28 - (void)__p) >> 1 > v10) {
    unint64_t v10 = v11 >> 1;
  }
  if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12)
  {
    if (v12 >> 62) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int v13 = (char *)operator new(4 * v12);
    BOOL v14 = &v13[4 * v9];
    int v15 = &v13[4 * v12];
    *(_DWORD *)BOOL v14 = a4;
    uint64_t v6 = (uint64_t)(v14 + 4);
    int64_t v16 = v5 - v7;
    if (v5 == v7) {
      goto LABEL_20;
    }
  }
  else
  {
    int v13 = 0;
    BOOL v14 = (char *)(4 * v9);
    int v15 = 0;
    *(_DWORD *)(4 * v9) = a4;
    uint64_t v6 = 4 * v9 + 4;
    int64_t v16 = v5 - v7;
    if (v5 == v7)
    {
LABEL_20:
      std::string __p = v14;
      BOOL v27 = (char *)v6;
      unint64_t v28 = (unint64_t)v15;
      if (v7) {
        operator delete(v7);
      }
LABEL_22:
      BOOL v27 = (char *)v6;
      google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::ServiceDescriptor>();
    }
  }
  unint64_t v17 = v16 - 4;
  if (v17 < 0x2C) {
    goto LABEL_27;
  }
  if ((unint64_t)(v5 - &v13[v8]) < 0x20) {
    goto LABEL_27;
  }
  uint64_t v18 = (v17 >> 2) + 1;
  uint64_t v19 = 4 * (v18 & 0x7FFFFFFFFFFFFFF8);
  std::string::size_type v20 = &v5[-v19];
  v14 -= v19;
  int64_t v21 = &v13[4 * v9 - 16];
  int v22 = v5 - 16;
  uint64_t v23 = v18 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v24 = *(_OWORD *)v22;
    *((_OWORD *)v21 - 1) = *((_OWORD *)v22 - 1);
    *(_OWORD *)int64_t v21 = v24;
    v21 -= 32;
    v22 -= 32;
    v23 -= 8;
  }
  while (v23);
  int v5 = v20;
  if (v18 != (v18 & 0x7FFFFFFFFFFFFFF8))
  {
LABEL_27:
    do
    {
      int v25 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v14 - 1) = v25;
      v14 -= 4;
    }
    while (v5 != v7);
  }
  goto LABEL_20;
}

void sub_23CDDE244(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::MethodDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  BOOL v27 = 0;
  unint64_t v28 = 0;
  google::protobuf::MethodDescriptor::GetLocationPath(a3, (char **)&__p);
  int v5 = v27;
  if ((unint64_t)v27 < v28)
  {
    *(_DWORD *)BOOL v27 = a4;
    uint64_t v6 = (uint64_t)(v5 + 4);
    goto LABEL_22;
  }
  int v7 = (char *)__p;
  int64_t v8 = v27 - (unsigned char *)__p;
  uint64_t v9 = (v27 - (unsigned char *)__p) >> 2;
  unint64_t v10 = v9 + 1;
  if ((unint64_t)(v9 + 1) >> 62) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v11 = v28 - (void)__p;
  if ((uint64_t)(v28 - (void)__p) >> 1 > v10) {
    unint64_t v10 = v11 >> 1;
  }
  if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12)
  {
    if (v12 >> 62) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int v13 = (char *)operator new(4 * v12);
    BOOL v14 = &v13[4 * v9];
    int v15 = &v13[4 * v12];
    *(_DWORD *)BOOL v14 = a4;
    uint64_t v6 = (uint64_t)(v14 + 4);
    int64_t v16 = v5 - v7;
    if (v5 == v7) {
      goto LABEL_20;
    }
  }
  else
  {
    int v13 = 0;
    BOOL v14 = (char *)(4 * v9);
    int v15 = 0;
    *(_DWORD *)(4 * v9) = a4;
    uint64_t v6 = 4 * v9 + 4;
    int64_t v16 = v5 - v7;
    if (v5 == v7)
    {
LABEL_20:
      std::string __p = v14;
      BOOL v27 = (char *)v6;
      unint64_t v28 = (unint64_t)v15;
      if (v7) {
        operator delete(v7);
      }
LABEL_22:
      BOOL v27 = (char *)v6;
      google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::MethodDescriptor>();
    }
  }
  unint64_t v17 = v16 - 4;
  if (v17 < 0x2C) {
    goto LABEL_27;
  }
  if ((unint64_t)(v5 - &v13[v8]) < 0x20) {
    goto LABEL_27;
  }
  uint64_t v18 = (v17 >> 2) + 1;
  uint64_t v19 = 4 * (v18 & 0x7FFFFFFFFFFFFFF8);
  std::string::size_type v20 = &v5[-v19];
  v14 -= v19;
  int64_t v21 = &v13[4 * v9 - 16];
  int v22 = v5 - 16;
  uint64_t v23 = v18 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v24 = *(_OWORD *)v22;
    *((_OWORD *)v21 - 1) = *((_OWORD *)v22 - 1);
    *(_OWORD *)int64_t v21 = v24;
    v21 -= 32;
    v22 -= 32;
    v23 -= 8;
  }
  while (v23);
  int v5 = v20;
  if (v18 != (v18 & 0x7FFFFFFFFFFFFFF8))
  {
LABEL_27:
    do
    {
      int v25 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v14 - 1) = v25;
      v14 -= 4;
    }
    while (v5 != v7);
  }
  goto LABEL_20;
}

void sub_23CDDE43C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkMessage(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = this;
  uint64_t v144 = *MEMORY[0x263EF8340];
  if (!*((void *)a2 + 4))
  {
    this = (google::protobuf::DescriptorBuilder *)google::protobuf::MessageOptions::default_instance(this);
    *((void *)v3 + 4) = this;
  }
  if (*((int *)v3 + 29) >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    do
    {
      int v7 = (google::protobuf::Descriptor *)(*((void *)v3 + 7) + v5);
      int64_t v8 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v6);
      this = (google::protobuf::DescriptorBuilder *)google::protobuf::DescriptorBuilder::CrossLinkMessage(v4, v7, v8);
      ++v6;
      v5 += 144;
    }
    while (v6 < *((int *)v3 + 29));
  }
  uint64_t v119 = v4;
  std::string v120 = v3;
  if (*((int *)v3 + 30) >= 1)
  {
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *((void *)v3 + 8);
      this = (google::protobuf::DescriptorBuilder *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a3 + 72, v9);
      uint64_t v11 = this;
      uint64_t v12 = v10 + 80 * v9;
      uint64_t v14 = *(void *)(v12 + 32);
      int v13 = (void *)(v12 + 32);
      if (!v14) {
        break;
      }
      uint64_t v15 = v10 + 80 * v9;
      int v17 = *(_DWORD *)(v15 + 44);
      int64_t v16 = (int *)(v15 + 44);
      if (v17 >= 1) {
        goto LABEL_13;
      }
LABEL_8:
      ++v9;
      uint64_t v3 = v120;
      if (v9 >= *((int *)v120 + 30)) {
        goto LABEL_23;
      }
    }
    this = (google::protobuf::DescriptorBuilder *)google::protobuf::EnumOptions::default_instance(this);
    *int v13 = this;
    uint64_t v18 = v10 + 80 * v9;
    int v19 = *(_DWORD *)(v18 + 44);
    int64_t v16 = (int *)(v18 + 44);
    if (v19 < 1) {
      goto LABEL_8;
    }
LABEL_13:
    uint64_t v20 = 0;
    int64_t v21 = (uint64_t *)(v10 + 80 * v9 + 48);
    uint64_t v22 = 32;
    while (1)
    {
      uint64_t v23 = *v21;
      if ((v20 & 0x80000000) != 0)
      {
        long long v24 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v142, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
        int v25 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (index) >= (0): ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v141, v25);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v142);
        if (*((_DWORD *)v11 + 8) <= (int)v20)
        {
LABEL_20:
          std::string::size_type v26 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v142, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
          BOOL v27 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (index) < (current_size_): ");
          google::protobuf::internal::LogFinisher::operator=((uint64_t)&v141, v27);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v142);
        }
      }
      else if (*((_DWORD *)v11 + 8) <= (int)v20)
      {
        goto LABEL_20;
      }
      if (*(void *)(v23 + v22))
      {
        ++v20;
        v22 += 40;
        if (v20 >= *v16) {
          goto LABEL_8;
        }
      }
      else
      {
        this = (google::protobuf::DescriptorBuilder *)google::protobuf::EnumValueOptions::default_instance(this);
        *(void *)(v23 + v22) = this;
        ++v20;
        v22 += 40;
        if (v20 >= *v16) {
          goto LABEL_8;
        }
      }
    }
  }
LABEL_23:
  unint64_t v28 = v3;
  if (*((int *)v3 + 26) >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = *((void *)v28 + 5);
      std::string::size_type v32 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, v30);
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::FileDescriptorTables **)v119, (google::protobuf::FieldDescriptor *)(v31 + v29), v32);
      ++v30;
      unint64_t v28 = v120;
      v29 += 152;
    }
    while (v30 < *((int *)v120 + 26));
  }
  if (*((int *)v28 + 32) >= 1)
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    do
    {
      uint64_t v35 = *((void *)v28 + 10);
      std::string::size_type v36 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v34);
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::FileDescriptorTables **)v119, (google::protobuf::FieldDescriptor *)(v35 + v33), v36);
      ++v34;
      unint64_t v28 = v120;
      v33 += 152;
    }
    while (v34 < *((int *)v120 + 32));
  }
  if (*((int *)v28 + 31) >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 8;
    do
    {
      uint64_t v39 = *((void *)v28 + 9);
      this = (google::protobuf::DescriptorBuilder *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)a3 + 96, v37);
      if (!*(void *)(v39 + v38))
      {
        this = (google::protobuf::DescriptorBuilder *)google::protobuf::ExtensionRangeOptions::default_instance(this);
        *(void *)(v39 + v38) = this;
      }
      ++v37;
      unint64_t v28 = v120;
      v38 += 16;
    }
    while (v37 < *((int *)v120 + 31));
  }
  int v40 = *((_DWORD *)v28 + 26);
  if (v40 >= 1)
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    char v43 = (char *)a3 + 24;
    while (1)
    {
      uint64_t v45 = *((void *)v28 + 5);
      uint64_t v46 = *(int **)(v45 + v41 + 88);
      if (!v46) {
        goto LABEL_38;
      }
      if (v46[6] >= 1 && *(int **)(v45 + v41 - 64) != v46) {
        break;
      }
LABEL_37:
      uint64_t v44 = *((void *)v28 + 6)
          + 48 * (int)(-1431655765 * (((unint64_t)v46 - *(void *)(*((void *)v46 + 2) + 48)) >> 4));
      ++*(_DWORD *)(v44 + 24);
LABEL_38:
      ++v42;
      v41 += 152;
      if (v42 >= v40) {
        goto LABEL_77;
      }
    }
    char v47 = (const void **)*((void *)v28 + 1);
    int v48 = *((char *)v47 + 23);
    if (v48 >= 0) {
      size_t v49 = *((unsigned __int8 *)v47 + 23);
    }
    else {
      size_t v49 = (size_t)v47[1];
    }
    unint64_t v50 = v49 + 1;
    if (v49 + 1 > 0x7FFFFFFFFFFFFFF7) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    uint64_t v118 = v45 + v41;
    if (v50 >= 0x17)
    {
      uint64_t v52 = v43;
      uint64_t v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v50 | 7) != 0x17) {
        uint64_t v53 = v50 | 7;
      }
      uint64_t v54 = v53 + 1;
      p_dst = (std::string *)operator new(v53 + 1);
      __dst.__r_.__value_.__l.__size_ = v49 + 1;
      __dst.__r_.__value_.__r.__words[2] = v54 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      char v43 = v52;
    }
    else
    {
      memset(&__dst, 0, sizeof(__dst));
      p_dst = &__dst;
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v49 + 1;
      if (!v49) {
        goto LABEL_56;
      }
    }
    if (v48 >= 0) {
      unint64_t v55 = v47;
    }
    else {
      unint64_t v55 = *v47;
    }
    memmove(p_dst, v55, v49);
LABEL_56:
    *(_WORD *)((char *)&p_dst->__r_.__value_.__l.__data_ + v49) = 46;
    uint64_t v56 = *(void *)(v118 - 152);
    int v57 = *(char *)(v56 + 23);
    if (v57 >= 0) {
      int v58 = *(const std::string::value_type **)(v118 - 152);
    }
    else {
      int v58 = *(const std::string::value_type **)v56;
    }
    if (v57 >= 0) {
      std::string::size_type v59 = *(unsigned __int8 *)(v56 + 23);
    }
    else {
      std::string::size_type v59 = *(void *)(v56 + 8);
    }
    int v60 = std::string::append(&__dst, v58, v59);
    long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
    std::string::size_type v124 = v60->__r_.__value_.__r.__words[2];
    *(_OWORD *)int v123 = v61;
    v60->__r_.__value_.__l.__size_ = 0;
    v60->__r_.__value_.__r.__words[2] = 0;
    v60->__r_.__value_.__r.__words[0] = 0;
    unint64_t v28 = v120;
    uint64_t v62 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)v43, (int)v42 - 1);
    uint64_t v63 = *(uint64_t ***)(*((void *)v120 + 5) + v41 - 152);
    int v64 = *((char *)v63 + 23);
    uint64_t v65 = v63[1];
    if (v64 < 0) {
      uint64_t v63 = (uint64_t **)*v63;
    }
    *(void *)&long long v142 = v63;
    int v66 = v64;
    if (v64 < 0) {
      int v66 = (int)v65;
    }
    DWORD2(v142) = v66;
    std::string::size_type v67 = *(void *)v46;
    int v68 = *(char *)(*(void *)v46 + 23);
    uint64_t v69 = *(void *)(*(void *)v46 + 8);
    if (v68 < 0) {
      std::string::size_type v67 = **(void **)v46;
    }
    v141.__r_.__value_.__r.__words[0] = v67;
    int v70 = v68;
    if (v68 < 0) {
      int v70 = v69;
    }
    LODWORD(v141.__r_.__value_.__r.__words[1]) = v70;
    uint64_t v139 = 0;
    int v140 = -1;
    uint64_t v137 = 0;
    int v138 = -1;
    uint64_t v135 = 0;
    int v136 = -1;
    uint64_t v133 = 0;
    int v134 = -1;
    uint64_t v131 = 0;
    int v132 = -1;
    uint64_t v129 = 0;
    int v130 = -1;
    uint64_t v127 = 0;
    int v128 = -1;
    uint64_t v125 = 0;
    int v126 = -1;
    *((void *)&v116 + 1) = &v127;
    *(void *)&long long v116 = &v129;
    google::protobuf::strings::Substitute("Fields in the same oneof must be defined consecutively. \"$0\" cannot be defined before the completion of the \"$1\" oneof definition.", (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v139, (uint64_t)&v137, (uint64_t)&v135, (uint64_t)&v133, (uint64_t)&v131, &__p, v116, (uint64_t)&v125);
    google::protobuf::DescriptorBuilder::AddError((uint64_t)v119, (const std::string::value_type *)v123, v62, 2, (const std::string::value_type *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v124) & 0x80000000) == 0)
      {
LABEL_72:
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_76;
        }
        goto LABEL_36;
      }
    }
    else if ((SHIBYTE(v124) & 0x80000000) == 0)
    {
      goto LABEL_72;
    }
    operator delete(v123[0]);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
LABEL_76:
    }
      operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_36:
    int v40 = *((_DWORD *)v120 + 26);
    goto LABEL_37;
  }
LABEL_77:
  LODWORD(v71) = *((_DWORD *)v28 + 27);
  if ((int)v71 < 1) {
    goto LABEL_116;
  }
  uint64_t v72 = 0;
  uint64_t v73 = 0;
  do
  {
    uint64_t v74 = *((void *)v28 + 6);
    uint64_t v75 = v74 + v72;
    int v76 = *(_DWORD *)(v74 + v72 + 24);
    if (v76)
    {
      uint64_t v77 = *((void *)v119 + 1);
      int v78 = 8 * v76;
      LODWORD(v142) = v78;
      if (!v78) {
        goto LABEL_111;
      }
      goto LABEL_82;
    }
    BOOL v83 = (const void **)*((void *)v28 + 1);
    int v84 = *((char *)v83 + 23);
    if (v84 >= 0) {
      size_t v85 = *((unsigned __int8 *)v83 + 23);
    }
    else {
      size_t v85 = (size_t)v83[1];
    }
    unint64_t v86 = v85 + 1;
    if (v85 + 1 > 0x7FFFFFFFFFFFFFF7) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    if (v86 >= 0x17)
    {
      uint64_t v89 = (v86 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v86 | 7) != 0x17) {
        uint64_t v89 = v86 | 7;
      }
      uint64_t v90 = v89 + 1;
      uint64_t v87 = (char *)operator new(v89 + 1);
      v141.__r_.__value_.__l.__size_ = v85 + 1;
      v141.__r_.__value_.__r.__words[2] = v90 | 0x8000000000000000;
      v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v87;
    }
    else
    {
      memset(&v141, 0, sizeof(v141));
      uint64_t v87 = (char *)&v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 23) = v85 + 1;
      if (!v85) {
        goto LABEL_102;
      }
    }
    if (v84 >= 0) {
      BOOL v91 = v83;
    }
    else {
      BOOL v91 = *v83;
    }
    memmove(v87, v91, v85);
LABEL_102:
    *(_WORD *)&v87[v85] = 46;
    int v92 = *(char *)(*(void *)v75 + 23);
    if (v92 >= 0) {
      uint64_t v93 = *(const std::string::value_type **)v75;
    }
    else {
      uint64_t v93 = **(const std::string::value_type ***)v75;
    }
    if (v92 >= 0) {
      std::string::size_type v94 = *(unsigned __int8 *)(*(void *)v75 + 23);
    }
    else {
      std::string::size_type v94 = *(void *)(*(void *)v75 + 8);
    }
    int v95 = std::string::append(&v141, v93, v94);
    long long v96 = *(_OWORD *)&v95->__r_.__value_.__l.__data_;
    std::string::size_type v143 = v95->__r_.__value_.__r.__words[2];
    long long v142 = v96;
    v95->__r_.__value_.__l.__size_ = 0;
    v95->__r_.__value_.__r.__words[2] = 0;
    v95->__r_.__value_.__r.__words[0] = 0;
    uint64_t v97 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((uint64_t)a3 + 144, v73);
    unint64_t v28 = v120;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)v119, (const std::string::value_type *)&v142, v97, 0, "Oneof must have at least one field.");
    if (SHIBYTE(v143) < 0)
    {
      operator delete((void *)v142);
      if ((SHIBYTE(v141.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_110;
      }
    }
    else if ((SHIBYTE(v141.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_110;
    }
    operator delete(v141.__r_.__value_.__l.__data_);
LABEL_110:
    uint64_t v77 = *((void *)v119 + 1);
    int v78 = 8 * *(_DWORD *)(v75 + 24);
    LODWORD(v142) = v78;
    if (!v78)
    {
LABEL_111:
      uint64_t v88 = v74 + v72;
      *(void *)(v74 + v72 + 32) = 0;
      *(_DWORD *)(v75 + 24) = 0;
      if (*(void *)(v74 + v72 + 40)) {
        goto LABEL_79;
      }
LABEL_112:
      this = (google::protobuf::DescriptorBuilder *)google::protobuf::OneofOptions::default_instance(this);
      *(void *)(v88 + 40) = this;
      unint64_t v28 = v120;
      goto LABEL_79;
    }
LABEL_82:
    size_t v79 = *(void **)(v77 + 192);
    if ((unint64_t)v79 >= *(void *)(v77 + 200))
    {
      this = (google::protobuf::DescriptorBuilder *)std::vector<std::vector<char>>::__emplace_back_slow_path<int &>((char **)(v77 + 184), (int *)&v142);
    }
    else
    {
      void *v79 = 0;
      v79[1] = 0;
      v79[2] = 0;
      if (v78 < 0) {
        std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
      }
      size_t v80 = v78;
      std::string v81 = (char *)operator new(v78);
      void *v79 = v81;
      std::string v82 = &v81[v80];
      v79[2] = &v81[v80];
      bzero(v81, v80);
      v79[1] = v82;
      this = (google::protobuf::DescriptorBuilder *)(v79 + 3);
      *(void *)(v77 + 192) = v79 + 3;
    }
    *(void *)(v77 + 192) = this;
    unint64_t v28 = v120;
    uint64_t v88 = v74 + v72;
    *(void *)(v74 + v72 + 32) = *((void *)this - 3);
    *(_DWORD *)(v75 + 24) = 0;
    if (!*(void *)(v74 + v72 + 40)) {
      goto LABEL_112;
    }
LABEL_79:
    ++v73;
    uint64_t v71 = *((int *)v28 + 27);
    v72 += 48;
  }
  while (v73 < v71);
  int v40 = *((_DWORD *)v28 + 26);
LABEL_116:
  if (v40 >= 1)
  {
    uint64_t v98 = 0;
    do
    {
      uint64_t v99 = *((void *)v28 + 5) + v98;
      uint64_t v100 = *(void *)(v99 + 88);
      if (v100)
      {
        uint64_t v101 = *((void *)v28 + 6)
             + 48 * (int)(-1431655765 * ((unint64_t)(v100 - *(void *)(*(void *)(v100 + 16) + 48)) >> 4));
        uint64_t v102 = *(int *)(v101 + 24);
        *(_DWORD *)(v99 + 72) = v102;
        uint64_t v103 = *(void *)(v101 + 32);
        *(_DWORD *)(v101 + 24) = v102 + 1;
        *(void *)(v103 + 8 * v102) = v99;
      }
      v98 += 152;
    }
    while (152 * v40 != v98);
    uint64_t v104 = 0;
    for (uint64_t i = 0; i < v40; ++i)
    {
      uint64_t v106 = *((void *)v28 + 5) + v104;
      if (*(unsigned char *)(v106 + 65))
      {
        uint64_t v107 = *(void *)(v106 + 88);
        if (!v107 || *(_DWORD *)(v107 + 24) != 1 || !*(unsigned char *)(**(void **)(v107 + 32) + 65))
        {
          size_t v108 = (const std::string::value_type *)*((void *)v28 + 1);
          uint64_t v109 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, i);
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v119, v108, v109, 10, "Fields with proto3_optional set must be a member of a one-field oneof");
          unint64_t v28 = v120;
          int v40 = *((_DWORD *)v120 + 26);
        }
      }
      v104 += 152;
    }
    LODWORD(v71) = *((_DWORD *)v28 + 27);
  }
  if ((int)v71 >= 1)
  {
    uint64_t v110 = 0;
    uint64_t v111 = 0;
    int v112 = -1;
    do
    {
      uint64_t v113 = *((void *)v28 + 6) + v110;
      if (*(_DWORD *)(v113 + 24) == 1 && *(unsigned char *)(**(void **)(v113 + 32) + 65))
      {
        if (v112 == -1) {
          int v112 = v111;
        }
      }
      else if (v112 != -1)
      {
        BOOL v114 = (const std::string::value_type *)*((void *)v28 + 1);
        uint64_t v115 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((uint64_t)a3 + 144, v111);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v119, v114, v115, 10, "Synthetic oneofs must be after all other oneofs");
        unint64_t v28 = v120;
        LODWORD(v71) = *((_DWORD *)v120 + 27);
      }
      ++v111;
      v110 += 48;
    }
    while (v111 < (int)v71);
    if (v112 != -1) {
      LODWORD(v71) = v112;
    }
  }
  *((_DWORD *)v28 + 28) = v71;
}

void sub_23CDDEEC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0)
  {
    operator delete(__p);
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else if ((a28 & 0x80000000) == 0)
  {
LABEL_6:
    _Unwind_Resume(exception_object);
  }
  operator delete(a23);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkField(google::protobuf::FileDescriptorTables **this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  uint64_t v155 = *MEMORY[0x263EF8340];
  if (*((void *)a2 + 15))
  {
    google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(this[11], a2);
    if ((*((unsigned char *)a3 + 16) & 2) == 0) {
      goto LABEL_45;
    }
  }
  else
  {
    *((void *)a2 + 15) = google::protobuf::FieldOptions::default_instance((google::protobuf::FieldOptions *)this);
    google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(this[11], a2);
    if ((*((unsigned char *)a3 + 16) & 2) == 0) {
      goto LABEL_45;
    }
  }
  uint64_t v6 = (std::string *)*((void *)a3 + 4);
  int v7 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, v6, *((void *)a2 + 1), 0, 1);
  if (!v7 && *((unsigned char *)*this + 42)) {
    int v7 = google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld((uint64_t)*this, (uint64_t)v6);
  }
  if (v7 != 1)
  {
    if (!v7)
    {
      uint64_t v10 = (const std::string::value_type *)*((void *)a2 + 1);
      uint64_t v11 = *((void *)a3 + 4);
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, v10, (uint64_t)a3, 3, v11);
      return;
    }
    uint64_t v15 = (const std::string::value_type *)*((void *)a2 + 1);
    std::operator+<char>();
    int64_t v16 = std::string::append(&v153, "\" is not a message type.");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v154.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v154.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v15, (uint64_t)a3, 3, (const std::string::value_type *)&v154);
    goto LABEL_170;
  }
  *((void *)a2 + 10) = v8;
  uint64_t v12 = (google::protobuf *)*((unsigned int *)a2 + 17);
  uint64_t v13 = *(unsigned int *)(v8 + 124);
  if ((int)v13 < 1)
  {
LABEL_20:
    if (*((unsigned char *)*this + 42))
    {
      uint64_t v18 = (uint64_t *)*((void *)a3 + 4);
      int v19 = *((char *)v18 + 23);
      if ((v19 & 0x80000000) == 0)
      {
        if (v19 != 33) {
          goto LABEL_39;
        }
LABEL_26:
        uint64_t v20 = (uint64_t *)*v18;
        uint64_t v21 = v18[1];
        uint64_t v22 = v18[2];
        uint64_t v23 = v18[3];
        int v24 = *((unsigned __int8 *)v18 + 32);
        if (v20 == (uint64_t *)0x702E656C676F6F67
          && v21 == 0x2E6675626F746F72
          && v22 == 0x4D2E656764697262
          && v23 == 0x6553656761737365
          && v24 == 116)
        {
          goto LABEL_45;
        }
        goto LABEL_39;
      }
      if (v18[1] == 33)
      {
        uint64_t v18 = (uint64_t *)*v18;
        goto LABEL_26;
      }
    }
LABEL_39:
    uint64_t v29 = (const std::string::value_type *)*((void *)a2 + 1);
    std::string::size_type v30 = *(void *)(v8 + 8);
    int v31 = *(char *)(v30 + 23);
    uint64_t v32 = *(void *)(v30 + 8);
    if (v31 < 0) {
      std::string::size_type v30 = *(void *)v30;
    }
    v154.__r_.__value_.__r.__words[0] = v30;
    int v33 = v31;
    if (v31 < 0) {
      int v33 = v32;
    }
    LODWORD(v154.__r_.__value_.__r.__words[1]) = v33;
    v153.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer(v12, &v153.__r_.__value_.__s.__data_[12], v9);
    LODWORD(v153.__r_.__value_.__r.__words[1]) = strlen(v153.__r_.__value_.__l.__data_);
    v152.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v152.__r_.__value_.__r.__words[1]) = -1;
    v151.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v151.__r_.__value_.__r.__words[1]) = -1;
    uint64_t v149 = 0;
    int v150 = -1;
    uint64_t v147 = 0;
    int v148 = -1;
    uint64_t v145 = 0;
    int v146 = -1;
    uint64_t v143 = 0;
    int v144 = -1;
    uint64_t v141 = 0;
    int v142 = -1;
    uint64_t v139 = 0;
    int v140 = -1;
    *(void *)&long long v133 = &v143;
    *((void *)&v133 + 1) = &v141;
    google::protobuf::strings::Substitute("\"$0\" does not declare $1 as an extension number.", (uint64_t)&v154, (uint64_t)&v153, (uint64_t)&v152, (uint64_t)&v151, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, &__p, v133, (uint64_t)&v139);
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v29, (uint64_t)a3, 1, (const std::string::value_type *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    goto LABEL_45;
  }
  uint64_t v14 = (_DWORD *)(*(void *)(v8 + 72) + 4);
  while (*(v14 - 1) > (int)v12 || *v14 <= (int)v12)
  {
    v14 += 4;
    if (!--v13) {
      goto LABEL_20;
    }
  }
LABEL_45:
  if (*((void *)a2 + 11) && *((_DWORD *)a2 + 15) != 1) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 0, "Fields of oneofs must themselves have label LABEL_OPTIONAL.");
  }
  if ((*((_DWORD *)a3 + 4) & 4) == 0)
  {
    uint64_t v34 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v34)
    {
      v152.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v151.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v34, memory_order_acquire) != -1)
      {
        v154.__r_.__value_.__r.__words[0] = (std::string::size_type)&v152;
        v154.__r_.__value_.__l.__size_ = (std::string::size_type)&v151;
        v153.__r_.__value_.__r.__words[0] = (std::string::size_type)&v154;
        std::__call_once(v34, &v153, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    int v35 = *((_DWORD *)a2 + 14);
    if ((v35 & 0xFFFFFFFE) == 0xA) {
      goto LABEL_58;
    }
    std::string::size_type v36 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v36)
    {
      v152.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v151.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v36, memory_order_acquire) != -1)
      {
        v154.__r_.__value_.__r.__words[0] = (std::string::size_type)&v152;
        v154.__r_.__value_.__l.__size_ = (std::string::size_type)&v151;
        v153.__r_.__value_.__r.__words[0] = (std::string::size_type)&v154;
        std::__call_once(v36, &v153, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v35 = *((_DWORD *)a2 + 14);
    }
    if (v35 == 14) {
LABEL_58:
    }
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Field with message or enum type missing type_name.");
    goto LABEL_59;
  }
  if (*((unsigned char *)*this + 43))
  {
    BOOL v46 = 0;
  }
  else
  {
    unint64_t v55 = &google::protobuf::_FieldOptions_default_instance_;
    if (*((void *)a3 + 8)) {
      unint64_t v55 = (uint64_t *)*((void *)a3 + 8);
    }
    BOOL v46 = *((unsigned __int8 *)v55 + 79) != 0;
  }
  if (*((unsigned char *)*this + 41)) {
    int v56 = v46;
  }
  else {
    int v56 = 1;
  }
  int v57 = (std::string *)*((void *)a3 + 5);
  int Symbol = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, v57, *((void *)a2 + 1), 1, v56);
  uint64_t v60 = v59;
  if (!Symbol && *((unsigned char *)*this + 42))
  {
    int Symbol = google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld((uint64_t)*this, (uint64_t)v57);
    uint64_t v60 = v61;
  }
  if (!Symbol)
  {
    if ((v56 & 1) == 0)
    {
      uint64_t v75 = (long long *)*((void *)a3 + 5);
      if (*((char *)v75 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v154, *(const std::string::value_type **)v75, *((void *)v75 + 1));
      }
      else
      {
        long long v76 = *v75;
        v154.__r_.__value_.__r.__words[2] = *((void *)v75 + 2);
        *(_OWORD *)&v154.__r_.__value_.__l.__data_ = v76;
      }
      operator new();
    }
    if (v46)
    {
      *((unsigned char *)&v154.__r_.__value_.__s + 23) = 21;
      strcpy((char *)&v154, "google.protobuf.Empty");
      int Symbol = google::protobuf::DescriptorBuilder::FindSymbol((uint64_t)this, (uint64_t)&v154, 1);
      uint64_t v60 = v63;
      if (SHIBYTE(v154.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v154.__r_.__value_.__l.__data_);
      }
    }
    if (!Symbol)
    {
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, *((void *)a3 + 5));
      return;
    }
  }
  if ((*((unsigned char *)a3 + 17) & 4) == 0)
  {
    if (Symbol == 1)
    {
      int v62 = 11;
    }
    else
    {
      if (Symbol != 4)
      {
        std::string::size_type v94 = (const std::string::value_type *)*((void *)a2 + 1);
        std::operator+<char>();
        int v95 = std::string::append(&v153, "\" is not a type.");
        long long v96 = *(_OWORD *)&v95->__r_.__value_.__l.__data_;
        v154.__r_.__value_.__r.__words[2] = v95->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v154.__r_.__value_.__l.__data_ = v96;
        v95->__r_.__value_.__l.__size_ = 0;
        v95->__r_.__value_.__r.__words[2] = 0;
        v95->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v94, (uint64_t)a3, 2, (const std::string::value_type *)&v154);
        goto LABEL_170;
      }
      int v62 = 14;
    }
    *((_DWORD *)a2 + 14) = v62;
  }
  uint64_t v87 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v87)
  {
    v152.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v151.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v87, memory_order_acquire) != -1)
    {
      v154.__r_.__value_.__r.__words[0] = (std::string::size_type)&v152;
      v154.__r_.__value_.__l.__size_ = (std::string::size_type)&v151;
      v153.__r_.__value_.__r.__words[0] = (std::string::size_type)&v154;
      std::__call_once(v87, &v153, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v88 = *((_DWORD *)a2 + 14);
  if ((v88 & 0xFFFFFFFE) == 0xA)
  {
    if (Symbol == 1)
    {
      *((void *)a2 + 13) = v60;
      if (*((unsigned char *)a2 + 64)) {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Messages can't have default values.");
      }
      goto LABEL_59;
    }
    BOOL v91 = (const std::string::value_type *)*((void *)a2 + 1);
    std::operator+<char>();
    int v92 = std::string::append(&v153, "\" is not a message type.");
    long long v93 = *(_OWORD *)&v92->__r_.__value_.__l.__data_;
    v154.__r_.__value_.__r.__words[2] = v92->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v154.__r_.__value_.__l.__data_ = v93;
    v92->__r_.__value_.__l.__size_ = 0;
    v92->__r_.__value_.__r.__words[2] = 0;
    v92->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v91, (uint64_t)a3, 2, (const std::string::value_type *)&v154);
LABEL_170:
    if (SHIBYTE(v154.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v154.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v153.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
    }
    else if ((SHIBYTE(v153.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      return;
    }
    uint64_t v100 = (void *)v153.__r_.__value_.__r.__words[0];
    goto LABEL_209;
  }
  uint64_t v89 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v89)
  {
    v152.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v151.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v89, memory_order_acquire) != -1)
    {
      v154.__r_.__value_.__r.__words[0] = (std::string::size_type)&v152;
      v154.__r_.__value_.__l.__size_ = (std::string::size_type)&v151;
      v153.__r_.__value_.__r.__words[0] = (std::string::size_type)&v154;
      std::__call_once(v89, &v153, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v88 = *((_DWORD *)a2 + 14);
  }
  if (v88 != 14)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Field with primitive type has type_name.");
    goto LABEL_59;
  }
  if (Symbol != 4)
  {
    uint64_t v97 = (const std::string::value_type *)*((void *)a2 + 1);
    std::operator+<char>();
    uint64_t v98 = std::string::append(&v153, "\" is not an enum type.");
    long long v99 = *(_OWORD *)&v98->__r_.__value_.__l.__data_;
    v154.__r_.__value_.__r.__words[2] = v98->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v154.__r_.__value_.__l.__data_ = v99;
    v98->__r_.__value_.__l.__size_ = 0;
    v98->__r_.__value_.__r.__words[2] = 0;
    v98->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v97, (uint64_t)a3, 2, (const std::string::value_type *)&v154);
    goto LABEL_170;
  }
  *((void *)a2 + 14) = v60;
  uint64_t v90 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v90)
  {
    v152.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v90, memory_order_acquire) != -1)
    {
      v154.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v154.__r_.__value_.__l.__size_ = (std::string::size_type)&v152;
      v153.__r_.__value_.__r.__words[0] = (std::string::size_type)&v154;
      std::__call_once(v90, &v153, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    uint64_t v60 = *((void *)a2 + 14);
  }
  if (*(unsigned char *)(v60 + 40))
  {
    *((unsigned char *)a2 + 64) = 0;
    goto LABEL_164;
  }
  if (!*((unsigned char *)a2 + 64))
  {
LABEL_164:
    if (*(int *)(google::protobuf::FieldDescriptor::enum_type(a2) + 44) >= 1) {
      *((void *)a2 + 18) = *(void *)(google::protobuf::FieldDescriptor::enum_type(a2) + 48);
    }
    goto LABEL_59;
  }
  if (!google::protobuf::io::Tokenizer::IsIdentifier(*((const std::string **)a3 + 6)))
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Default value for an enum field must be an identifier.");
    goto LABEL_59;
  }
  long long v117 = (std::string *)*((void *)a3 + 6);
  uint64_t v118 = google::protobuf::FieldDescriptor::enum_type(a2);
  if (google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, v117, *(void *)(v118 + 8), 0, 1) == 5)
  {
    uint64_t v120 = v119;
    uint64_t v121 = *(void *)(v119 + 24);
    if (v121 == google::protobuf::FieldDescriptor::enum_type(a2))
    {
      *((void *)a2 + 18) = v120;
      goto LABEL_59;
    }
  }
  uint64_t v122 = (const std::string::value_type *)*((void *)a2 + 1);
  google::protobuf::FieldDescriptor::enum_type(a2);
  std::operator+<char>();
  int v123 = std::string::append(&v151, "\" has no value named \"");
  long long v124 = *(_OWORD *)&v123->__r_.__value_.__l.__data_;
  v152.__r_.__value_.__r.__words[2] = v123->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v124;
  v123->__r_.__value_.__l.__size_ = 0;
  v123->__r_.__value_.__r.__words[2] = 0;
  v123->__r_.__value_.__r.__words[0] = 0;
  uint64_t v125 = *((void *)a3 + 6);
  int v126 = *(char *)(v125 + 23);
  if (v126 >= 0) {
    uint64_t v127 = (const std::string::value_type *)*((void *)a3 + 6);
  }
  else {
    uint64_t v127 = *(const std::string::value_type **)v125;
  }
  if (v126 >= 0) {
    std::string::size_type v128 = *(unsigned __int8 *)(v125 + 23);
  }
  else {
    std::string::size_type v128 = *(void *)(v125 + 8);
  }
  uint64_t v129 = std::string::append(&v152, v127, v128);
  long long v130 = *(_OWORD *)&v129->__r_.__value_.__l.__data_;
  v153.__r_.__value_.__r.__words[2] = v129->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v153.__r_.__value_.__l.__data_ = v130;
  v129->__r_.__value_.__l.__size_ = 0;
  v129->__r_.__value_.__r.__words[2] = 0;
  v129->__r_.__value_.__r.__words[0] = 0;
  uint64_t v131 = std::string::append(&v153, "\".");
  long long v132 = *(_OWORD *)&v131->__r_.__value_.__l.__data_;
  v154.__r_.__value_.__r.__words[2] = v131->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v154.__r_.__value_.__l.__data_ = v132;
  v131->__r_.__value_.__l.__size_ = 0;
  v131->__r_.__value_.__r.__words[2] = 0;
  v131->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v122, (uint64_t)a3, 4, (const std::string::value_type *)&v154);
  if (SHIBYTE(v154.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v154.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v153.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_223:
      if ((SHIBYTE(v152.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_224;
      }
      goto LABEL_229;
    }
  }
  else if ((SHIBYTE(v153.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_223;
  }
  operator delete(v153.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v152.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_224:
    if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_230;
    }
    goto LABEL_59;
  }
LABEL_229:
  operator delete(v152.__r_.__value_.__l.__data_);
  if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0) {
LABEL_230:
  }
    operator delete(v151.__r_.__value_.__l.__data_);
LABEL_59:
  if (google::protobuf::FileDescriptorTables::AddFieldByNumber(this[11], a2))
  {
    if (!*((unsigned char *)a2 + 67) || (google::protobuf::DescriptorPool::Tables::AddExtension(this[1], a2) & 1) != 0) {
      return;
    }
    uint64_t v39 = this[1];
    unint64_t v40 = *((void *)a2 + 10);
    uint64_t v41 = (google::protobuf *)*((unsigned int *)a2 + 17);
    uint64_t v42 = (char *)*((void *)v39 + 49);
    if (!v42) {
      goto LABEL_140;
    }
    char v43 = (char *)v39 + 392;
    uint64_t v44 = (char *)v39 + 392;
    do
    {
      unint64_t v45 = *((void *)v42 + 4);
      if (v45 < v40)
      {
        v42 += 8;
      }
      else if (v45 <= v40)
      {
        if (*((_DWORD *)v42 + 10) < (int)v41) {
          v42 += 8;
        }
        else {
          uint64_t v44 = v42;
        }
      }
      else
      {
        uint64_t v44 = v42;
      }
      uint64_t v42 = *(char **)v42;
    }
    while (v42);
    if (v44 != v43 && (unint64_t v83 = *((void *)v44 + 4), v83 <= v40) && (v83 < v40 || *((_DWORD *)v44 + 10) <= (int)v41))
    {
      uint64_t v84 = *((void *)v44 + 6);
      if (v40)
      {
LABEL_141:
        size_t v85 = *(long long **)(v40 + 8);
        if (*((char *)v85 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v85, *((void *)v85 + 1));
          uint64_t v41 = (google::protobuf *)*((unsigned int *)a2 + 17);
        }
        else
        {
          long long v86 = *v85;
          __p.__r_.__value_.__r.__words[2] = *((void *)v85 + 2);
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v86;
        }
        goto LABEL_191;
      }
    }
    else
    {
LABEL_140:
      uint64_t v84 = 0;
      if (v40) {
        goto LABEL_141;
      }
    }
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__p, "unknown");
LABEL_191:
    v154.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer(v41, &v154.__r_.__value_.__s.__data_[12], v38);
    LODWORD(v154.__r_.__value_.__r.__words[1]) = strlen(v154.__r_.__value_.__l.__data_);
    int v107 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    v153.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v107 = __p.__r_.__value_.__r.__words[1];
    }
    LODWORD(v153.__r_.__value_.__r.__words[1]) = v107;
    std::string::size_type v109 = *(void *)(v84 + 8);
    int v110 = *(char *)(v109 + 23);
    uint64_t v111 = *(void *)(v109 + 8);
    if (v110 < 0) {
      std::string::size_type v109 = *(void *)v109;
    }
    v152.__r_.__value_.__r.__words[0] = v109;
    int v112 = v110;
    if (v110 < 0) {
      int v112 = v111;
    }
    LODWORD(v152.__r_.__value_.__r.__words[1]) = v112;
    std::string::size_type v113 = **(void **)(v84 + 40);
    int v114 = *(char *)(v113 + 23);
    uint64_t v115 = *(void *)(v113 + 8);
    if (v114 < 0) {
      std::string::size_type v113 = *(void *)v113;
    }
    v151.__r_.__value_.__r.__words[0] = v113;
    int v116 = v114;
    if (v114 < 0) {
      int v116 = v115;
    }
    LODWORD(v151.__r_.__value_.__r.__words[1]) = v116;
    uint64_t v149 = 0;
    int v150 = -1;
    uint64_t v147 = 0;
    int v148 = -1;
    uint64_t v145 = 0;
    int v146 = -1;
    uint64_t v143 = 0;
    int v144 = -1;
    uint64_t v141 = 0;
    int v142 = -1;
    uint64_t v139 = 0;
    int v140 = -1;
    *(void *)&long long v136 = &v143;
    *((void *)&v136 + 1) = &v141;
    google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\" defined in $3.", (uint64_t)&v154, (uint64_t)&v153, (uint64_t)&v152, (uint64_t)&v151, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, &v137, v136, (uint64_t)&v139);
    google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 1, (const std::string::value_type *)&v137);
    goto LABEL_204;
  }
  char v47 = (int8x8_t *)this[11];
  uint64_t v48 = *((void *)a2 + 10);
  int8x8_t v49 = v47[20];
  if (!*(void *)&v49) {
    goto LABEL_120;
  }
  int v50 = *((_DWORD *)a2 + 17);
  int8x8_t v51 = v47[19];
  unint64_t v52 = (16777619 * v50) ^ (16777499 * v48);
  uint8x8_t v53 = (uint8x8_t)vcnt_s8(v49);
  v53.i16[0] = vaddlv_u8(v53);
  if (v53.u32[0] > 1uLL)
  {
    uint64_t v54 = (16777619 * v50) ^ (16777499 * v48);
    if (v52 >= *(void *)&v49) {
      uint64_t v54 = v52 % *(void *)&v49;
    }
  }
  else
  {
    uint64_t v54 = (*(void *)&v49 - 1) & v52;
  }
  int v64 = *(uint64_t ***)(*(void *)&v51 + 8 * v54);
  if (!v64 || (uint64_t v65 = *v64) == 0)
  {
LABEL_120:
    uint64_t v71 = 0;
    if (!v48) {
      goto LABEL_179;
    }
    goto LABEL_121;
  }
  if (v53.u32[0] < 2uLL)
  {
    uint64_t v66 = *(void *)&v49 - 1;
    while (1)
    {
      uint64_t v70 = v65[1];
      if (v52 == v70)
      {
        if (v65[2] == v48 && *((_DWORD *)v65 + 6) == v50) {
          goto LABEL_178;
        }
      }
      else if ((v70 & v66) != v54)
      {
        goto LABEL_120;
      }
      uint64_t v65 = (uint64_t *)*v65;
      if (!v65) {
        goto LABEL_120;
      }
    }
  }
  while (1)
  {
    unint64_t v68 = v65[1];
    if (v52 == v68) {
      break;
    }
    if (v68 >= *(void *)&v49) {
      v68 %= *(void *)&v49;
    }
    if (v68 != v54) {
      goto LABEL_120;
    }
LABEL_107:
    uint64_t v65 = (uint64_t *)*v65;
    if (!v65) {
      goto LABEL_120;
    }
  }
  if (v65[2] != v48 || *((_DWORD *)v65 + 6) != v50) {
    goto LABEL_107;
  }
LABEL_178:
  uint64_t v71 = (std::string::size_type *)v65[4];
  if (!v48)
  {
LABEL_179:
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__p, "unknown");
    uint64_t v74 = (const std::string::value_type *)*((void *)a2 + 1);
    if (!*((unsigned char *)a2 + 67)) {
      goto LABEL_180;
    }
LABEL_127:
    v154.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a2 + 17), &v154.__r_.__value_.__s.__data_[12], v37);
    LODWORD(v154.__r_.__value_.__r.__words[1]) = strlen(v154.__r_.__value_.__l.__data_);
    int v77 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    int v78 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v78 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    v153.__r_.__value_.__r.__words[0] = (std::string::size_type)v78;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v77 = __p.__r_.__value_.__r.__words[1];
    }
    LODWORD(v153.__r_.__value_.__r.__words[1]) = v77;
    std::string::size_type v79 = v71[1];
    int v80 = *(char *)(v79 + 23);
    uint64_t v81 = *(void *)(v79 + 8);
    if (v80 < 0) {
      std::string::size_type v79 = *(void *)v79;
    }
    v152.__r_.__value_.__r.__words[0] = v79;
    int v82 = v80;
    if (v80 < 0) {
      int v82 = v81;
    }
    LODWORD(v152.__r_.__value_.__r.__words[1]) = v82;
    v151.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v151.__r_.__value_.__r.__words[1]) = -1;
    uint64_t v149 = 0;
    int v150 = -1;
    uint64_t v147 = 0;
    int v148 = -1;
    uint64_t v145 = 0;
    int v146 = -1;
    uint64_t v143 = 0;
    int v144 = -1;
    uint64_t v141 = 0;
    int v142 = -1;
    uint64_t v139 = 0;
    int v140 = -1;
    *(void *)&long long v134 = &v143;
    *((void *)&v134 + 1) = &v141;
    google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\".", (uint64_t)&v154, (uint64_t)&v153, (uint64_t)&v152, (uint64_t)&v151, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, &v137, v134, (uint64_t)&v139);
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v74, (uint64_t)a3, 1, (const std::string::value_type *)&v137);
    goto LABEL_204;
  }
LABEL_121:
  uint64_t v72 = *(long long **)(v48 + 8);
  if (*((char *)v72 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v72, *((void *)v72 + 1));
    uint64_t v74 = (const std::string::value_type *)*((void *)a2 + 1);
    if (!*((unsigned char *)a2 + 67)) {
      goto LABEL_180;
    }
    goto LABEL_127;
  }
  long long v73 = *v72;
  __p.__r_.__value_.__r.__words[2] = *((void *)v72 + 2);
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v73;
  uint64_t v74 = (const std::string::value_type *)*((void *)a2 + 1);
  if (*((unsigned char *)a2 + 67)) {
    goto LABEL_127;
  }
LABEL_180:
  v154.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a2 + 17), &v154.__r_.__value_.__s.__data_[12], v37);
  LODWORD(v154.__r_.__value_.__r.__words[1]) = strlen(v154.__r_.__value_.__l.__data_);
  int v101 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  uint64_t v102 = &__p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v102 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  v153.__r_.__value_.__r.__words[0] = (std::string::size_type)v102;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v101 = __p.__r_.__value_.__r.__words[1];
  }
  LODWORD(v153.__r_.__value_.__r.__words[1]) = v101;
  std::string::size_type v103 = *v71;
  int v104 = *(char *)(*v71 + 23);
  uint64_t v105 = *(void *)(*v71 + 8);
  if (v104 < 0) {
    std::string::size_type v103 = *(void *)*v71;
  }
  v152.__r_.__value_.__r.__words[0] = v103;
  int v106 = v104;
  if (v104 < 0) {
    int v106 = v105;
  }
  LODWORD(v152.__r_.__value_.__r.__words[1]) = v106;
  v151.__r_.__value_.__r.__words[0] = 0;
  LODWORD(v151.__r_.__value_.__r.__words[1]) = -1;
  uint64_t v149 = 0;
  int v150 = -1;
  uint64_t v147 = 0;
  int v148 = -1;
  uint64_t v145 = 0;
  int v146 = -1;
  uint64_t v143 = 0;
  int v144 = -1;
  uint64_t v141 = 0;
  int v142 = -1;
  uint64_t v139 = 0;
  int v140 = -1;
  *(void *)&long long v135 = &v143;
  *((void *)&v135 + 1) = &v141;
  google::protobuf::strings::Substitute("Field number $0 has already been used in \"$1\" by field \"$2\".", (uint64_t)&v154, (uint64_t)&v153, (uint64_t)&v152, (uint64_t)&v151, (uint64_t)&v149, (uint64_t)&v147, (uint64_t)&v145, &v137, v135, (uint64_t)&v139);
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v74, (uint64_t)a3, 1, (const std::string::value_type *)&v137);
LABEL_204:
  if (SHIBYTE(v137.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v137.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_208;
    }
  }
  else if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
LABEL_208:
    uint64_t v100 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_209:
    operator delete(v100);
  }
}

void sub_23CDE01E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (*(char *)(v60 - 137) < 0)
  {
    operator delete(*(void **)(v60 - 160));
    if (*(char *)(v60 - 185) < 0)
    {
LABEL_5:
      operator delete(*(void **)(v60 - 208));
      if (*(char *)(v60 - 233) < 0)
      {
LABEL_8:
        operator delete(*(void **)(v60 - 256));
        if ((a60 & 0x80000000) == 0) {
LABEL_12:
        }
          _Unwind_Resume(a1);
LABEL_11:
        operator delete(__p);
        _Unwind_Resume(a1);
      }
LABEL_10:
      if ((a60 & 0x80000000) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if (*(char *)(v60 - 185) < 0)
  {
    goto LABEL_5;
  }
  if (*(char *)(v60 - 233) < 0) {
    goto LABEL_8;
  }
  goto LABEL_10;
}

void google::protobuf::DescriptorBuilder::CrossLinkMethod(google::protobuf::DescriptorBuilder *this, google::protobuf::MethodDescriptor *a2, const google::protobuf::MethodDescriptorProto *a3)
{
  if (!*((void *)a2 + 11)) {
    *((void *)a2 + 11) = google::protobuf::MethodOptions::default_instance(this);
  }
  uint64_t v6 = (std::string *)*((void *)a3 + 4);
  int v7 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, v6, *((void *)a2 + 1), 0, *(unsigned char *)(*(void *)this + 41) == 0);
  if (!v7 && *(unsigned char *)(*(void *)this + 42)) {
    int v7 = google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld(*(void *)this, (uint64_t)v6);
  }
  if (v7 == 1)
  {
    google::protobuf::internal::LazyDescriptor::Set((google::protobuf::MethodDescriptor *)((char *)a2 + 24), v8);
  }
  else
  {
    if (v7)
    {
      uint64_t v9 = (const std::string::value_type *)*((void *)a2 + 1);
      std::operator+<char>();
      uint64_t v10 = std::string::append(&v18, "\" is not a message type.");
      long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      std::string::size_type v20 = v10->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v11;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v9, (uint64_t)a3, 5, (const std::string::value_type *)__p);
      if (SHIBYTE(v20) < 0)
      {
        operator delete(__p[0]);
        if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_17;
        }
      }
      else if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_17;
      }
      operator delete(v18.__r_.__value_.__l.__data_);
      goto LABEL_17;
    }
    if (*(unsigned char *)(*(void *)this + 41)) {
      google::protobuf::internal::LazyDescriptor::SetLazy((void *)a2 + 3, *((void *)a3 + 4), *((void *)this + 10));
    }
    google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 5, *((void *)a3 + 4));
  }
LABEL_17:
  uint64_t v12 = (std::string *)*((void *)a3 + 5);
  int v13 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, v12, *((void *)a2 + 1), 0, *(unsigned char *)(*(void *)this + 41) == 0);
  if (!v13 && *(unsigned char *)(*(void *)this + 42)) {
    int v13 = google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld(*(void *)this, (uint64_t)v12);
  }
  if (v13 == 1)
  {
    google::protobuf::internal::LazyDescriptor::Set((google::protobuf::MethodDescriptor *)((char *)a2 + 56), v14);
    return;
  }
  if (v13)
  {
    uint64_t v15 = (const std::string::value_type *)*((void *)a2 + 1);
    std::operator+<char>();
    int64_t v16 = std::string::append(&v18, "\" is not a message type.");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v15, (uint64_t)a3, 6, (const std::string::value_type *)__p);
    if (SHIBYTE(v20) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
    }
    else if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      return;
    }
    operator delete(v18.__r_.__value_.__l.__data_);
    return;
  }
  if (*(unsigned char *)(*(void *)this + 41)) {
    google::protobuf::internal::LazyDescriptor::SetLazy((void *)a2 + 7, *((void *)a3 + 5), *((void *)this + 10));
  }
  google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 6, *((void *)a3 + 5));
}

void sub_23CDE0630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::LazyDescriptor::SetLazy(void *a1, uint64_t a2, uint64_t a3)
{
  if (*a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7416);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !descriptor_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (a1[3])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7417);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !file_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (a1[1])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7418);
    int v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !name_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (a1[2])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7419);
    uint64_t v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !once_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (a3 && (uint64_t v9 = *(void *)(a3 + 16)) != 0)
  {
    if (*(unsigned char *)(v9 + 41)) {
      goto LABEL_12;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7420);
    uint64_t v10 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: file && file->pool_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v10);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    if (*(unsigned char *)(*(void *)(a3 + 16) + 41))
    {
LABEL_12:
      if (!*(unsigned char *)(a3 + 65))
      {
LABEL_17:
        a1[3] = a3;
        operator new();
      }
LABEL_16:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7422);
      uint64_t v12 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !file->finished_building_: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v12);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
      goto LABEL_17;
    }
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7421);
  long long v11 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: file->pool_->lazily_build_dependencies_: ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v11);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  if (!*(unsigned char *)(a3 + 65)) {
    goto LABEL_17;
  }
  goto LABEL_16;
}

void sub_23CDE09A0(_Unwind_Exception *a1)
{
  MEMORY[0x23ECF2BC0](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void sub_23CDE09C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE09D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE09EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0A50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::LazyDescriptor::Set(google::protobuf::internal::LazyDescriptor *this, const google::protobuf::Descriptor *a2)
{
  if (*((void *)this + 1))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7407);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !name_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*((void *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7408);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !once_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*((void *)this + 3))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7409);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !file_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  *(void *)this = a2;
}

void sub_23CDE0BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE0C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateMessageOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v52 = *MEMORY[0x263EF8340];
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (google::protobuf::FieldDescriptor *)(*((void *)a2 + 5) + v6);
      uint64_t v9 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, v7);
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, v8, v9);
      ++v7;
      v6 += 152;
    }
    while (v7 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = (google::protobuf::Descriptor *)(*((void *)a2 + 7) + v10);
      char v13 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v11);
      google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, v12, v13);
      ++v11;
      v10 += 144;
    }
    while (v11 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    do
    {
      int64_t v16 = (google::protobuf::EnumDescriptor *)(*((void *)a2 + 8) + v14);
      long long v17 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a3 + 72, v15);
      google::protobuf::DescriptorBuilder::ValidateEnumOptions(this, v16, v17);
      ++v15;
      v14 += 80;
    }
    while (v15 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    do
    {
      std::string::size_type v20 = (google::protobuf::FieldDescriptor *)(*((void *)a2 + 10) + v18);
      uint64_t v21 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v19);
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, v20, v21);
      ++v19;
      v18 += 152;
    }
    while (v19 < *((int *)a2 + 32));
  }
  if (*(unsigned char *)(*((void *)a2 + 4) + 72)) {
    unint64_t v22 = 0x7FFFFFFFLL;
  }
  else {
    unint64_t v22 = 0x1FFFFFFFLL;
  }
  if (*((int *)a2 + 31) >= 1)
  {
    uint64_t v23 = 0;
    int v24 = (char *)a3 + 96;
    uint64_t v25 = 4;
    do
    {
      if ((uint64_t)(v22 + 1) < *(int *)(*((void *)a2 + 9) + v25))
      {
        std::string::size_type v26 = (const std::string::value_type *)*((void *)a2 + 1);
        uint64_t v27 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)v24, v23);
        int8x8_t v49 = google::protobuf::FastInt64ToBuffer(v22, v51, v28);
        int v50 = strlen(v49);
        uint64_t v47 = 0;
        int v48 = -1;
        uint64_t v45 = 0;
        int v46 = -1;
        uint64_t v43 = 0;
        int v44 = -1;
        uint64_t v41 = 0;
        int v42 = -1;
        uint64_t v39 = 0;
        int v40 = -1;
        uint64_t v37 = 0;
        int v38 = -1;
        uint64_t v35 = 0;
        int v36 = -1;
        uint64_t v33 = 0;
        int v34 = -1;
        uint64_t v31 = 0;
        int v32 = -1;
        *((void *)&v29 + 1) = &v33;
        *(void *)&long long v29 = &v35;
        google::protobuf::strings::Substitute("Extension numbers cannot be greater than $0.", (uint64_t)&v49, (uint64_t)&v47, (uint64_t)&v45, (uint64_t)&v43, (uint64_t)&v41, (uint64_t)&v39, (uint64_t)&v37, &__p, v29, (uint64_t)&v31);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v26, v27, 1, (const std::string::value_type *)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)v24, v23++);
      v25 += 16;
    }
    while (v23 < *((int *)a2 + 31));
  }
}

void sub_23CDE0F60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateEnumOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::EnumDescriptor *a2, const google::protobuf::EnumDescriptorProto *a3)
{
  int v6 = *((_DWORD *)a2 + 11);
  if (v6 >= 1)
  {
    for (int i = 0; i < v6; ++i)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, i);
      int v6 = *((_DWORD *)a2 + 11);
    }
  }
  uint64_t v8 = *((void *)a2 + 4);
  if ((*(unsigned char *)(v8 + 40) & 1) == 0 || !*(unsigned char *)(v8 + 72))
  {
    unint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v54 = &v55;
    if (v6 >= 1)
    {
      uint64_t v9 = 0;
      while (1)
      {
        uint64_t v10 = *((void *)a2 + 6);
        uint64_t v11 = v10 + 40 * v9;
        int v14 = *(_DWORD *)(v11 + 16);
        char v13 = (int *)(v11 + 16);
        int v12 = v14;
        uint64_t v15 = v55;
        int64_t v16 = &v55;
        long long v17 = v55;
        if (v55)
        {
          do
          {
            uint64_t v18 = v17;
            uint64_t v19 = v16;
            int v20 = *((_DWORD *)v17 + 8);
            if (v20 >= v12) {
              int64_t v16 = (uint64_t **)v17;
            }
            else {
              ++v17;
            }
            long long v17 = (uint64_t *)*v17;
          }
          while (v17);
          if (v16 != &v55)
          {
            if (v20 < v12) {
              uint64_t v18 = (uint64_t *)v19;
            }
            if (v12 >= *((_DWORD *)v18 + 8))
            {
              std::operator+<char>();
              uint64_t v25 = std::string::append(&v49, "\" uses the same enum value as \"");
              long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
              v50.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v26;
              v25->__r_.__value_.__l.__size_ = 0;
              v25->__r_.__value_.__r.__words[2] = 0;
              v25->__r_.__value_.__r.__words[0] = 0;
              int v27 = *v13;
              unint64_t v28 = v55;
              long long v29 = &v55;
              std::string::size_type v30 = &v55;
              if (v55)
              {
                while (1)
                {
                  while (1)
                  {
                    std::string::size_type v30 = (uint64_t **)v28;
                    int v31 = *((_DWORD *)v28 + 8);
                    if (v27 >= v31) {
                      break;
                    }
                    unint64_t v28 = *v30;
                    long long v29 = v30;
                    if (!*v30) {
                      goto LABEL_34;
                    }
                  }
                  if (v31 >= v27) {
                    break;
                  }
                  unint64_t v28 = v30[1];
                  if (!v28)
                  {
                    long long v29 = v30 + 1;
                    goto LABEL_34;
                  }
                }
                int v32 = v30;
              }
              else
              {
LABEL_34:
                int v32 = operator new(0x40uLL);
                v32[8] = v27;
                *((void *)v32 + 6) = 0;
                *((void *)v32 + 7) = 0;
                *((void *)v32 + 5) = 0;
                *(void *)int v32 = 0;
                *((void *)v32 + 1) = 0;
                *((void *)v32 + 2) = v30;
                *long long v29 = (uint64_t *)v32;
                uint64_t v33 = (uint64_t *)v32;
                if (*v54)
                {
                  uint64_t v54 = (uint64_t **)*v54;
                  uint64_t v33 = *v29;
                }
                std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v55, v33);
                ++v56;
              }
              int v38 = (const std::string::value_type *)*((void *)v32 + 5);
              uint64_t v37 = (char *)(v32 + 10);
              int v36 = v38;
              int v39 = v37[23];
              if (v39 >= 0) {
                int v40 = v37;
              }
              else {
                int v40 = v36;
              }
              if (v39 >= 0) {
                std::string::size_type v41 = v37[23];
              }
              else {
                std::string::size_type v41 = *((void *)v37 + 1);
              }
              int v42 = std::string::append(&v50, v40, v41);
              long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
              v51.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v43;
              v42->__r_.__value_.__l.__size_ = 0;
              v42->__r_.__value_.__r.__words[2] = 0;
              v42->__r_.__value_.__r.__words[0] = 0;
              int v44 = std::string::append(&v51, "\". If this is intended, set 'option allow_alias = true;' to the enum definition.");
              long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
              std::string::size_type v53 = v44->__r_.__value_.__r.__words[2];
              *(_OWORD *)std::string __p = v45;
              v44->__r_.__value_.__l.__size_ = 0;
              v44->__r_.__value_.__r.__words[2] = 0;
              v44->__r_.__value_.__r.__words[0] = 0;
              if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
              {
                operator delete(v51.__r_.__value_.__l.__data_);
                if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
                  goto LABEL_54;
                }
LABEL_50:
                if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  goto LABEL_51;
                }
LABEL_55:
                operator delete(v49.__r_.__value_.__l.__data_);
                if (!*(unsigned char *)(*((void *)a2 + 4) + 72))
                {
LABEL_56:
                  int v46 = (const std::string::value_type *)*((void *)a2 + 1);
                  uint64_t v47 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, v9);
                  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v46, v47, 1, (const std::string::value_type *)__p);
                }
              }
              else
              {
                if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  goto LABEL_50;
                }
LABEL_54:
                operator delete(v50.__r_.__value_.__l.__data_);
                if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
                  goto LABEL_55;
                }
LABEL_51:
                if (!*(unsigned char *)(*((void *)a2 + 4) + 72)) {
                  goto LABEL_56;
                }
              }
              if (SHIBYTE(v53) < 0) {
                operator delete(__p[0]);
              }
              goto LABEL_10;
            }
          }
          uint64_t v21 = *(const std::string **)(v10 + 40 * v9 + 8);
          while (1)
          {
            while (1)
            {
              unint64_t v22 = (uint64_t **)v15;
              int v23 = *((_DWORD *)v15 + 8);
              if (v12 >= v23) {
                break;
              }
              uint64_t v15 = *v22;
              if (!*v22)
              {
                int v24 = v22;
                goto LABEL_38;
              }
            }
            if (v23 >= v12) {
              break;
            }
            uint64_t v15 = v22[1];
            if (!v15)
            {
              int v24 = v22 + 1;
              goto LABEL_38;
            }
          }
          int v34 = (char *)v22;
        }
        else
        {
          uint64_t v21 = *(const std::string **)(v10 + 40 * v9 + 8);
          int v24 = &v55;
          unint64_t v22 = &v55;
LABEL_38:
          int v34 = (char *)operator new(0x40uLL);
          *((_DWORD *)v34 + 8) = v12;
          *((void *)v34 + 6) = 0;
          *((void *)v34 + 7) = 0;
          *((void *)v34 + 5) = 0;
          *(void *)int v34 = 0;
          *((void *)v34 + 1) = 0;
          *((void *)v34 + 2) = v22;
          *int v24 = (uint64_t *)v34;
          uint64_t v35 = (uint64_t *)v34;
          if (*v54)
          {
            uint64_t v54 = (uint64_t **)*v54;
            uint64_t v35 = *v24;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(v55, v35);
          ++v56;
        }
        std::string::operator=((std::string *)(v34 + 40), v21);
LABEL_10:
        if (++v9 >= *((int *)a2 + 11))
        {
          int v48 = (char *)v55;
          goto LABEL_61;
        }
      }
    }
    int v48 = 0;
LABEL_61:
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&v54, v48);
  }
}

void sub_23CDE1360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0)
  {
    operator delete(__p);
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(v35 - 104, *(char **)(v35 - 96));
    _Unwind_Resume(a1);
  }
  std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(v35 - 104, *(char **)(v35 - 96));
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateFieldOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(*(void *)this + 41))
  {
    if (!a2) {
      return;
    }
    this = (google::protobuf::DescriptorBuilder *)*((void *)a2 + 6);
    if (this)
    {
      int v34 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a2;
      if (atomic_load_explicit((atomic_ullong *volatile)this, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v34;
        p_p = &__p;
        std::__call_once((std::once_flag::_State_type *)this, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if (!*((void *)a2 + 13)) {
      return;
    }
  }
  if (*(unsigned char *)(*((void *)a2 + 15) + 77))
  {
    this = (google::protobuf::DescriptorBuilder *)*((void *)a2 + 6);
    if (this)
    {
      uint64_t v33 = a2;
      int v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)this, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v34;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v33;
        p_p = &__p;
        std::__call_once((std::once_flag::_State_type *)this, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if (*((_DWORD *)a2 + 14) != 11) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "[lazy = true] can only be specified for submessage fields.");
    }
  }
  if (*(unsigned char *)(*((void *)a2 + 15) + 76))
  {
    if (*((_DWORD *)a2 + 15) != 3) {
      goto LABEL_19;
    }
    this = (google::protobuf::DescriptorBuilder *)*((void *)a2 + 6);
    if (this)
    {
      uint64_t v33 = a2;
      int v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)this, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v34;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v33;
        p_p = &__p;
        std::__call_once((std::once_flag::_State_type *)this, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if ((*((_DWORD *)a2 + 14) - 13) >= 0xFFFFFFFC) {
LABEL_19:
    }
      google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "[packed = true] can only be specified for repeated primitive fields.");
  }
  uint64_t v6 = *((void *)a2 + 10);
  if (v6)
  {
    uint64_t v7 = *(google::protobuf::DescriptorBuilder **)(v6 + 32);
    this = (google::protobuf::DescriptorBuilder *)google::protobuf::MessageOptions::default_instance(this);
    if (v7 != this)
    {
      if (*(unsigned char *)(*(void *)(*((void *)a2 + 10) + 32) + 72))
      {
        if (!*((unsigned char *)a2 + 67))
        {
          uint64_t v8 = (const std::string::value_type *)*((void *)a2 + 1);
          uint64_t v9 = "MessageSets cannot have fields, only extensions.";
          uint64_t v10 = (uint64_t)v5;
          uint64_t v11 = a3;
          uint64_t v12 = 0;
          goto LABEL_31;
        }
        if (*((_DWORD *)a2 + 15) != 1) {
          goto LABEL_29;
        }
        this = (google::protobuf::DescriptorBuilder *)*((void *)a2 + 6);
        if (this)
        {
          uint64_t v33 = a2;
          int v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)this, memory_order_acquire) != -1)
          {
            __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v34;
            __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v33;
            p_p = &__p;
            std::__call_once((std::once_flag::_State_type *)this, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*((_DWORD *)a2 + 14) != 11)
        {
LABEL_29:
          uint64_t v8 = (const std::string::value_type *)*((void *)a2 + 1);
          uint64_t v9 = "Extensions of MessageSets must be optional messages.";
          uint64_t v10 = (uint64_t)v5;
          uint64_t v11 = a3;
          uint64_t v12 = 2;
LABEL_31:
          google::protobuf::DescriptorBuilder::AddError(v10, v8, (uint64_t)v11, v12, v9);
        }
      }
    }
  }
  uint64_t v13 = *((void *)a2 + 5);
  if (v13)
  {
    int v14 = *(uint64_t **)(v13 + 136);
    uint64_t v15 = google::protobuf::FileOptions::default_instance(this);
    if (v14 != v15 && *(_DWORD *)(*(void *)(v13 + 136) + 160) == 3)
    {
      uint64_t v16 = *((void *)a2 + 10);
      if (v16)
      {
        uint64_t v17 = *(void *)(v16 + 16);
        if (!v17
          || (uint64_t v18 = *(uint64_t **)(v17 + 136),
              v18 == google::protobuf::FileOptions::default_instance((google::protobuf::FileOptions *)v15))
          || *(_DWORD *)(*(void *)(v17 + 136) + 160) != 3)
        {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 3, "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.");
        }
      }
    }
  }
  uint64_t v19 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v19)
  {
    uint64_t v33 = a2;
    int v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v34;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v33;
      p_p = &__p;
      std::__call_once(v19, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 11
    && *(unsigned char *)(*(void *)(*((void *)a2 + 13) + 32) + 75)
    && (google::protobuf::DescriptorBuilder::ValidateMapEntry(v5, a2, a3) & 1) == 0)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "map_entry should not be set explicitly. Use map<KeyType, ValueType> instead.");
  }
  google::protobuf::DescriptorBuilder::ValidateJSType(v5, a2, a3);
  if (*((unsigned char *)a2 + 67) && *((unsigned char *)a2 + 66))
  {
    int v20 = (unsigned __int8 *)*((void *)a2 + 4);
    uint64_t v21 = v20[23];
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v20[23];
    }
    else {
      uint64_t v22 = *((void *)v20 + 1);
    }
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    int v24 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (v22 == size)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v25 = &__p;
      }
      else {
        uint64_t v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((v21 & 0x80) != 0)
      {
        BOOL v30 = memcmp(*(const void **)v20, v25, *((void *)v20 + 1)) != 0;
        goto LABEL_70;
      }
      if (v20[23])
      {
        uint64_t v26 = v21 - 1;
        do
        {
          int v28 = *v20++;
          int v27 = v28;
          int v29 = v25->__r_.__value_.__s.__data_[0];
          uint64_t v25 = (std::string *)((char *)v25 + 1);
          BOOL v30 = v27 != v29;
        }
        while (v27 == v29 && v26-- != 0);
LABEL_70:
        if ((v24 & 0x80000000) == 0) {
          goto LABEL_72;
        }
        goto LABEL_71;
      }
      BOOL v30 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_72:
        if (v30) {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 7, "option json_name is not allowed on extension fields.");
        }
        return;
      }
    }
    else
    {
      BOOL v30 = 1;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_72;
      }
    }
LABEL_71:
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_72;
  }
}

void google::protobuf::DescriptorBuilder::ValidateProto3(google::protobuf::DescriptorBuilder *a1, uint64_t a2, uint64_t a3)
{
  if (*(int *)(a2 + 56) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (google::protobuf::FieldDescriptor *)(*(void *)(a2 + 128) + v6);
      uint64_t v9 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(a3 + 120, v7);
      google::protobuf::DescriptorBuilder::ValidateProto3Field(a1, v8, v9);
      ++v7;
      v6 += 152;
    }
    while (v7 < *(int *)(a2 + 56));
  }
  if (*(int *)(a2 + 44) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = (google::protobuf::Descriptor *)(*(void *)(a2 + 104) + v10);
      uint64_t v13 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(a3 + 48, v11);
      google::protobuf::DescriptorBuilder::ValidateProto3Message(a1, v12, v13);
      ++v11;
      v10 += 144;
    }
    while (v11 < *(int *)(a2 + 44));
  }
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = a3 + 72;
    do
    {
      uint64_t v17 = (google::protobuf::EnumDescriptor *)(*(void *)(a2 + 112) + v14);
      uint64_t v18 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(v16, v15);
      google::protobuf::DescriptorBuilder::ValidateProto3Enum(a1, v17, v18);
      ++v15;
      v14 += 80;
    }
    while (v15 < *(int *)(a2 + 48));
  }
}

void google::protobuf::DescriptorBuilder::ValidateProto3Field(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  if (*((unsigned char *)a2 + 67))
  {
    uint64_t v6 = *(void *)(*((void *)a2 + 10) + 8);
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AED1EA8, memory_order_acquire) & 1) == 0)
    {
      int v48 = (google::protobuf::_anonymous_namespace_ *)__cxa_guard_acquire(&qword_26AED1EA8);
      if (v48) {
    }
      }
    uint64_t v7 = qword_26AED1EA0 + 8;
    uint64_t v8 = *(void *)(qword_26AED1EA0 + 8);
    if (!v8) {
      goto LABEL_42;
    }
    int v9 = *(char *)(v6 + 23);
    size_t v10 = v9 >= 0 ? *(unsigned __int8 *)(v6 + 23) : *(void *)(v6 + 8);
    uint64_t v11 = v9 >= 0 ? (const void *)v6 : *(const void **)v6;
    uint64_t v12 = qword_26AED1EA0 + 8;
    do
    {
      int v13 = *(char *)(v8 + 55);
      if (v13 >= 0) {
        size_t v14 = *(unsigned __int8 *)(v8 + 55);
      }
      else {
        size_t v14 = *(void *)(v8 + 40);
      }
      if (v13 >= 0) {
        uint64_t v15 = (const void *)(v8 + 32);
      }
      else {
        uint64_t v15 = *(const void **)(v8 + 32);
      }
      if (v10 >= v14) {
        size_t v16 = v14;
      }
      else {
        size_t v16 = v10;
      }
      int v17 = memcmp(v15, v11, v16);
      BOOL v18 = v14 < v10;
      if (v17) {
        BOOL v18 = v17 < 0;
      }
      BOOL v19 = !v18;
      if (v18) {
        int v20 = (uint64_t *)(v8 + 8);
      }
      else {
        int v20 = (uint64_t *)v8;
      }
      if (v19) {
        uint64_t v12 = v8;
      }
      uint64_t v8 = *v20;
    }
    while (*v20);
    if (v12 == v7) {
      goto LABEL_42;
    }
    int v23 = *(const void **)(v12 + 32);
    uint64_t v22 = v12 + 32;
    uint64_t v21 = v23;
    int v24 = *(char *)(v22 + 23);
    if (v24 >= 0) {
      size_t v25 = *(unsigned __int8 *)(v22 + 23);
    }
    else {
      size_t v25 = *(void *)(v22 + 8);
    }
    if (v24 >= 0) {
      uint64_t v26 = (const void *)v22;
    }
    else {
      uint64_t v26 = v21;
    }
    if (v25 >= v10) {
      size_t v27 = v10;
    }
    else {
      size_t v27 = v25;
    }
    int v28 = memcmp(v11, v26, v27);
    BOOL v29 = v10 >= v25;
    if (v28) {
      BOOL v29 = v28 >= 0;
    }
    if (!v29) {
LABEL_42:
    }
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 3, "Extensions in proto3 are only allowed for defining options.");
  }
  if (*((_DWORD *)a2 + 15) == 2) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Required fields are not allowed in proto3.");
  }
  if (*((unsigned char *)a2 + 64)) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Explicit default values are not allowed in proto3.");
  }
  BOOL v30 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v30)
  {
    v50.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v49.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v30, memory_order_acquire) != -1)
    {
      __p[0] = &v50;
      __p[1] = &v49;
      v51.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v30, &v51, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v31 = (int *)((char *)a2 + 56);
    int v32 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (*((_DWORD *)a2 + 14) != 14) {
      goto LABEL_85;
    }
    if (v32)
    {
      v50.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v32, memory_order_acquire) != -1)
      {
        __p[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
        __p[1] = &v50;
        v51.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
        std::__call_once(v32, &v51, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v32 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    }
    uint64_t v33 = *((void *)a2 + 14);
    if (!v33) {
      goto LABEL_85;
    }
  }
  else
  {
    int v31 = (int *)((char *)a2 + 56);
    int v34 = *((_DWORD *)a2 + 14);
    if (v34 != 14) {
      goto LABEL_89;
    }
    int v32 = 0;
    uint64_t v33 = *((void *)a2 + 14);
    if (!v33) {
      goto LABEL_85;
    }
  }
  if (v32)
  {
    v50.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v32, memory_order_acquire) != -1)
    {
      __p[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      __p[1] = &v50;
      v51.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v32, &v51, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    int v32 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    int v35 = *(_DWORD *)(*(void *)(*((void *)a2 + 14) + 16) + 60);
    if (v35 == 3) {
      goto LABEL_85;
    }
    if (v32)
    {
      v50.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v32, memory_order_acquire) != -1)
      {
        __p[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
        __p[1] = &v50;
        v51.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
        std::__call_once(v32, &v51, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v35 = *(_DWORD *)(*(void *)(*((void *)a2 + 14) + 16) + 60);
      int v32 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    }
    if (!v35) {
      goto LABEL_85;
    }
    goto LABEL_71;
  }
  int v36 = *(_DWORD *)(*(void *)(v33 + 16) + 60);
  if (v36 != 3)
  {
    int v32 = 0;
    if (!v36)
    {
LABEL_85:
      if (v32)
      {
        v50.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v49.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v32, memory_order_acquire) != -1)
        {
          __p[0] = &v50;
          __p[1] = &v49;
          v51.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
          std::__call_once(v32, &v51, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      goto LABEL_88;
    }
LABEL_71:
    uint64_t v37 = (const std::string::value_type *)*((void *)a2 + 1);
    if (v32)
    {
      uint64_t v54 = a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v32, memory_order_acquire) != -1)
      {
        v56[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
        v56[1] = &v54;
        unint64_t v55 = v56;
        std::__call_once(v32, &v55, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    std::operator+<char>();
    int v38 = std::string::append(&v49, "\" is not a proto3 enum, but is used in \"");
    long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v39;
    v38->__r_.__value_.__l.__size_ = 0;
    v38->__r_.__value_.__r.__words[2] = 0;
    v38->__r_.__value_.__r.__words[0] = 0;
    uint64_t v40 = *(void *)(*((void *)a2 + 10) + 8);
    int v41 = *(char *)(v40 + 23);
    if (v41 >= 0) {
      int v42 = *(const std::string::value_type **)(*((void *)a2 + 10) + 8);
    }
    else {
      int v42 = *(const std::string::value_type **)v40;
    }
    if (v41 >= 0) {
      std::string::size_type v43 = *(unsigned __int8 *)(v40 + 23);
    }
    else {
      std::string::size_type v43 = *(void *)(v40 + 8);
    }
    int v44 = std::string::append(&v50, v42, v43);
    long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v45;
    v44->__r_.__value_.__l.__size_ = 0;
    v44->__r_.__value_.__r.__words[2] = 0;
    v44->__r_.__value_.__r.__words[0] = 0;
    int v46 = std::string::append(&v51, "\" which is a proto3 message type.");
    long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
    std::string::size_type v53 = v46->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v47;
    v46->__r_.__value_.__l.__size_ = 0;
    v46->__r_.__value_.__r.__words[2] = 0;
    v46->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v37, (uint64_t)a3, 2, (const std::string::value_type *)__p);
    if (SHIBYTE(v53) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v51.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_82:
        if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_83;
        }
        goto LABEL_94;
      }
    }
    else if ((SHIBYTE(v51.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_82;
    }
    operator delete(v51.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_83:
      if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_84:
        int v32 = (std::once_flag::_State_type *)*((void *)a2 + 6);
        goto LABEL_85;
      }
LABEL_95:
      operator delete(v49.__r_.__value_.__l.__data_);
      goto LABEL_84;
    }
LABEL_94:
    operator delete(v50.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v49.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_95;
  }
LABEL_88:
  int v34 = *v31;
LABEL_89:
  if (v34 == 10) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Groups are not supported in proto3 syntax.");
  }
}

void sub_23CDE1F64(_Unwind_Exception *a1)
{
}

void sub_23CDE1F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0)
  {
    operator delete(a30);
    if ((a28 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a21 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((a28 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a23);
  if ((a21 & 0x80000000) == 0)
  {
LABEL_4:
    if (a15 < 0) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  operator delete(a16);
  if (a15 < 0)
  {
LABEL_5:
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
LABEL_9:
  _Unwind_Resume(exception_object);
}

void sub_23CDE2008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    JUMPOUT(0x23CDE2000);
  }
  JUMPOUT(0x23CDE1FA0);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Message(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (google::protobuf::Descriptor *)(*((void *)a2 + 7) + v6);
      int v9 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v7);
      google::protobuf::DescriptorBuilder::ValidateProto3Message(this, v8, v9);
      ++v7;
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = (google::protobuf::EnumDescriptor *)(*((void *)a2 + 8) + v10);
      int v13 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a3 + 72, v11);
      google::protobuf::DescriptorBuilder::ValidateProto3Enum(this, v12, v13);
      ++v11;
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    do
    {
      size_t v16 = (google::protobuf::FieldDescriptor *)(*((void *)a2 + 5) + v14);
      int v17 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, v15);
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, v16, v17);
      ++v15;
      v14 += 152;
    }
    while (v15 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    do
    {
      int v20 = (google::protobuf::FieldDescriptor *)(*((void *)a2 + 10) + v18);
      uint64_t v21 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v19);
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, v20, v21);
      ++v19;
      v18 += 152;
    }
    while (v19 < *((int *)a2 + 32));
  }
  if (*((int *)a2 + 31) > 0)
  {
    uint64_t v22 = (const std::string::value_type *)*((void *)a2 + 1);
    if (*((int *)a3 + 26) <= 0)
    {
      int v23 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v88, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
      int v24 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v86, v24);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v88);
    }
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v22, *(void *)(*((void *)a3 + 14) + 8), 1, "Extension ranges are not allowed in proto3.");
  }
  if (*(unsigned char *)(*((void *)a2 + 4) + 72)) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 0, "MessageSet is not supported in proto3.");
  }
  v89[0] = 0;
  v89[1] = 0;
  int v88 = v89;
  if (*((int *)a2 + 26) < 1)
  {
    int v78 = 0;
    goto LABEL_105;
  }
  uint64_t v25 = 0;
  std::string::size_type v79 = (char *)a3 + 24;
  do
  {
    uint64_t v26 = *(uint64_t **)(*((void *)a2 + 5) + 152 * v25);
    memset(&v86, 0, sizeof(v86));
    unint64_t v27 = *((unsigned __int8 *)v26 + 23);
    BOOL v28 = *((char *)v26 + 23) < 0;
    unint64_t v29 = v26[1];
    if (*((char *)v26 + 23) >= 0) {
      uint64_t v30 = *((unsigned __int8 *)v26 + 23);
    }
    else {
      uint64_t v30 = v26[1];
    }
    if (v30)
    {
      for (unint64_t i = 0; i < v32; ++i)
      {
        if (v28) {
          uint64_t v33 = (uint64_t *)*v26;
        }
        else {
          uint64_t v33 = v26;
        }
        int v34 = *((unsigned __int8 *)v33 + i);
        if (v34 != 95)
        {
          if ((v34 - 65) >= 0x1A) {
            std::string::value_type v35 = v34;
          }
          else {
            std::string::value_type v35 = v34 + 32;
          }
          std::string::push_back(&v86, v35);
          unint64_t v27 = *((unsigned __int8 *)v26 + 23);
          unint64_t v29 = v26[1];
        }
        BOOL v28 = (v27 & 0x80u) != 0;
        if ((v27 & 0x80u) == 0) {
          unint64_t v32 = v27;
        }
        else {
          unint64_t v32 = v29;
        }
      }
    }
    uint64_t v36 = v89[0];
    if (!v89[0]) {
      goto LABEL_95;
    }
    std::string::size_type v37 = (v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(v86.__r_.__value_.__r.__words[2])
        : v86.__r_.__value_.__l.__size_;
    int v38 = (v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v86
        : (std::string *)v86.__r_.__value_.__r.__words[0];
    long long v39 = v89;
    do
    {
      uint64_t v40 = v36;
      int v41 = v39;
      std::string::size_type v43 = (const void *)(v36 + 32);
      int v42 = *(const void **)(v36 + 32);
      int v44 = *(char *)(v40 + 55);
      if (v44 >= 0) {
        size_t v45 = *(unsigned __int8 *)(v40 + 55);
      }
      else {
        size_t v45 = *(void *)(v40 + 40);
      }
      if (v44 >= 0) {
        int v46 = v43;
      }
      else {
        int v46 = v42;
      }
      if (v37 >= v45) {
        size_t v47 = v45;
      }
      else {
        size_t v47 = v37;
      }
      int v48 = memcmp(v46, v38, v47);
      if (v48) {
        BOOL v49 = v48 < 0;
      }
      else {
        BOOL v49 = v45 < v37;
      }
      std::string v50 = (uint64_t *)(v40 + 8);
      if (v49)
      {
        long long v39 = v41;
      }
      else
      {
        std::string v50 = (uint64_t *)v40;
        long long v39 = (void *)v40;
      }
      uint64_t v36 = *v50;
    }
    while (v36);
    if (v39 == v89) {
      goto LABEL_95;
    }
    std::string v51 = v41 + 4;
    BOOL v52 = !v49;
    if (v49) {
      std::string::size_type v53 = v41;
    }
    else {
      std::string::size_type v53 = (void *)v40;
    }
    if (v52) {
      std::string v51 = v43;
    }
    size_t v54 = *((unsigned __int8 *)v39 + 55);
    uint64_t v56 = (const void *)v53[4];
    size_t v55 = v53[5];
    if ((v54 & 0x80u) == 0) {
      size_t v57 = v54;
    }
    else {
      size_t v57 = v55;
    }
    if ((v54 & 0x80u) == 0) {
      int v58 = v51;
    }
    else {
      int v58 = v56;
    }
    if (v57 >= v37) {
      size_t v59 = v37;
    }
    else {
      size_t v59 = v57;
    }
    int v60 = memcmp(v38, v58, v59);
    BOOL v61 = v37 >= v57;
    if (v60) {
      BOOL v61 = v60 >= 0;
    }
    if (!v61)
    {
LABEL_95:
      uint64_t v77 = *((void *)a2 + 5);
      __p[0] = &v86;
      std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(&v88, (const void **)&v86.__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (long long **)__p)[7] = (uint64_t *)(v77 + 152 * v25);
      if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_96;
    }
    int v62 = (const std::string::value_type *)*((void *)a2 + 1);
    uint64_t v63 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)v79, v25);
    std::operator+<char>();
    int v64 = std::string::append(&v80, "\" conflicts with field \"");
    long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
    v81.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v65;
    v64->__r_.__value_.__l.__size_ = 0;
    v64->__r_.__value_.__r.__words[2] = 0;
    v64->__r_.__value_.__r.__words[0] = 0;
    uint64_t v87 = &v86;
    uint64_t v66 = std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(&v88, (const void **)&v86.__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (long long **)&v87);
    uint64_t v67 = *v66[7];
    int v68 = *(char *)(v67 + 23);
    if (v68 >= 0) {
      uint64_t v69 = (const std::string::value_type *)*v66[7];
    }
    else {
      uint64_t v69 = *(const std::string::value_type **)v67;
    }
    if (v68 >= 0) {
      std::string::size_type v70 = *(unsigned __int8 *)(v67 + 23);
    }
    else {
      std::string::size_type v70 = *(void *)(v67 + 8);
    }
    uint64_t v71 = std::string::append(&v81, v69, v70);
    long long v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
    v82.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v72;
    v71->__r_.__value_.__l.__size_ = 0;
    v71->__r_.__value_.__r.__words[2] = 0;
    v71->__r_.__value_.__r.__words[0] = 0;
    long long v73 = std::string::append(&v82, "\". This is not ");
    long long v74 = *(_OWORD *)&v73->__r_.__value_.__l.__data_;
    v83.__r_.__value_.__r.__words[2] = v73->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v83.__r_.__value_.__l.__data_ = v74;
    v73->__r_.__value_.__l.__size_ = 0;
    v73->__r_.__value_.__r.__words[2] = 0;
    v73->__r_.__value_.__r.__words[0] = 0;
    uint64_t v75 = std::string::append(&v83, "allowed in proto3.");
    long long v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
    std::string::size_type v85 = v75->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v76;
    v75->__r_.__value_.__l.__size_ = 0;
    v75->__r_.__value_.__r.__words[2] = 0;
    v75->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v62, v63, 0, (const std::string::value_type *)__p);
    if (SHIBYTE(v85) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v83.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_90;
      }
LABEL_98:
      operator delete(v83.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_91;
      }
LABEL_99:
      operator delete(v82.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v81.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_92;
      }
LABEL_100:
      operator delete(v81.__r_.__value_.__l.__data_);
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_101;
      }
LABEL_93:
      if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
LABEL_96:
      operator delete(v86.__r_.__value_.__l.__data_);
      goto LABEL_21;
    }
    if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_98;
    }
LABEL_90:
    if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_99;
    }
LABEL_91:
    if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_100;
    }
LABEL_92:
    if ((SHIBYTE(v80.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_93;
    }
LABEL_101:
    operator delete(v80.__r_.__value_.__l.__data_);
    if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_96;
    }
LABEL_21:
    ++v25;
  }
  while (v25 < *((int *)a2 + 26));
  int v78 = (char *)v89[0];
LABEL_105:
  std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)&v88, v78);
}

void sub_23CDE2608(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 136));
  _Unwind_Resume(a1);
}

void sub_23CDE261C(_Unwind_Exception *a1)
{
  google::protobuf::internal::LogMessage::~LogMessage((void **)(v1 - 136));
  _Unwind_Resume(a1);
}

void sub_23CDE2630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a42 < 0)
  {
    operator delete(__p);
    if ((a35 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a28 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a35 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a30);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a23);
  if ((a21 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a15 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a16);
  if ((a15 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a49 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a10);
  if ((a49 & 0x80000000) == 0)
  {
LABEL_7:
    std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy(v49 - 136, *(char **)(v49 - 128));
    _Unwind_Resume(a1);
  }
LABEL_13:
  operator delete(a44);
  std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy(v49 - 136, *(char **)(v49 - 128));
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Enum(google::protobuf::DescriptorBuilder *this, google::protobuf::EnumDescriptor *a2, const google::protobuf::EnumDescriptorProto *a3)
{
  if (*((int *)a2 + 11) >= 1 && *(_DWORD *)(*((void *)a2 + 6) + 16))
  {
    uint64_t v5 = (const std::string::value_type *)*((void *)a2 + 1);
    if (*((int *)a3 + 8) <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
      uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v6);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    }
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v5, *(void *)(*((void *)a3 + 5) + 8), 1, "The first enum value must be zero in proto3.");
  }
}

void sub_23CDE27F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE2808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::ValidateMapEntry(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  uint64_t v6 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v6)
  {
    uint64_t v25 = a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v25;
      v24.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v6, &v24, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  uint64_t v7 = *((void *)a2 + 13);
  if (*(_DWORD *)(v7 + 128)
    || *((_DWORD *)a2 + 15) != 3
    || *(_DWORD *)(v7 + 124)
    || *(_DWORD *)(v7 + 116)
    || *(_DWORD *)(v7 + 120)
    || *(_DWORD *)(v7 + 104) != 2)
  {
    return 0;
  }
  uint64_t v8 = *(unsigned __int8 **)v7;
  int v9 = std::string::append(&v24, "Entry");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  __p[0].__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  BOOL v11 = std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v8, (unsigned __int8 *)__p)
     || *((void *)a2 + 10) != *(void *)(v7 + 24);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_15:
      if (v11) {
        return 0;
      }
      goto LABEL_19;
    }
  }
  else if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_15;
  }
  operator delete(v24.__r_.__value_.__l.__data_);
  if (v11) {
    return 0;
  }
LABEL_19:
  if (*(unsigned char *)(*(void *)(v7 + 32) + 75))
  {
    if (*(_DWORD *)(v7 + 104) == 2)
    {
      uint64_t v12 = *(google::protobuf::FieldDescriptor **)(v7 + 40);
      goto LABEL_25;
    }
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 1725);
    uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (field_count()) == (2): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v24, v14);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    uint64_t v12 = *(google::protobuf::FieldDescriptor **)(v7 + 40);
    if (*(unsigned char *)(*(void *)(v7 + 32) + 75))
    {
LABEL_25:
      if (*(_DWORD *)(v7 + 104) != 2)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 1731);
        uint64_t v15 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (field_count()) == (2): ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v24, v15);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      }
      uint64_t v13 = *(void *)(v7 + 40) + 152;
      if (*((_DWORD *)v12 + 15) != 1) {
        return 0;
      }
      goto LABEL_28;
    }
    uint64_t v13 = 0;
    if (*((_DWORD *)v12 + 15) != 1) {
      return 0;
    }
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    if (MEMORY[0x3C] != 1) {
      return 0;
    }
  }
LABEL_28:
  if (*((_DWORD *)v12 + 17) != 1) {
    return 0;
  }
  size_t v16 = *(unsigned __int16 **)v12;
  int v17 = *(char *)(*(void *)v12 + 23);
  if (v17 < 0)
  {
    if (*((void *)v16 + 1) == 3)
    {
      size_t v16 = *(unsigned __int16 **)v16;
      goto LABEL_36;
    }
    return 0;
  }
  if (v17 != 3) {
    return 0;
  }
LABEL_36:
  int v18 = *v16;
  int v19 = *((unsigned __int8 *)v16 + 2);
  if (v18 != 25963 || v19 != 121) {
    return 0;
  }
  if (*(_DWORD *)(v13 + 60) != 1) {
    return 0;
  }
  int v23 = (google::protobuf::FieldDescriptor *)v13;
  if (*(_DWORD *)(v13 + 68) != 2
    || std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(*(void **)v13, "value"))
  {
    return 0;
  }
  unsigned int v22 = google::protobuf::FieldDescriptor::type(v12) - 1;
  if (v22 <= 0xD && ((0x2E03u >> v22) & 1) != 0) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, off_264E836F8[v22]);
  }
  if (google::protobuf::FieldDescriptor::type(v23) == 14)
  {
    if (*(_DWORD *)(*(void *)(google::protobuf::FieldDescriptor::enum_type(v23) + 48) + 16)) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Enum value in map must define 0 as the first value.");
    }
  }
  return 1;
}

void sub_23CDE2B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE2BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE2BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE2BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE2BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateJSType(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  unsigned int v3 = *(_DWORD *)(*((void *)a2 + 15) + 80);
  if (v3)
  {
    uint64_t v7 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v7)
    {
      uint64_t v15 = a2;
      size_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        __p[0] = &v16;
        __p[1] = &v15;
        int v17 = __p;
        std::__call_once(v7, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    unsigned int v8 = *((_DWORD *)a2 + 14);
    BOOL v9 = v8 > 0x12;
    int v10 = (1 << v8) & 0x50058;
    if (v9 || v10 == 0)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "jstype is only allowed on int64, uint64, sint64, fixed64 or sfixed64 fields.");
    }
    else if (v3 >= 3)
    {
      uint64_t v12 = (const std::string::value_type *)*((void *)a2 + 1);
      google::protobuf::FieldOptions_JSType_descriptor((google::protobuf *)v7);
      std::operator+<char>();
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v12, (uint64_t)a3, 2, (const std::string::value_type *)__p);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
    }
  }
}

void sub_23CDE2D50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1) {
        goto LABEL_10;
      }
      a1 = (void *)*a1;
      return memcmp(a1, __s, v4) != 0;
    }
  }
  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1) {
LABEL_10:
    }
      std::string::__throw_out_of_range[abi:ne180100]();
    return memcmp(a1, __s, v4) != 0;
  }
  return 1;
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::OptionInterpreter(google::protobuf::DescriptorBuilder::OptionInterpreter *this, google::protobuf::DescriptorBuilder *a2)
{
  *(void *)this = a2;
  *((void *)this + 4) = 0;
  *((void *)this + 3) = (char *)this + 32;
  *((void *)this + 7) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = (char *)this + 56;
  *((void *)this + 8) = 0;
  google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 72));
}

void sub_23CDE2EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(v5);
  std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(v4, *v7);
  std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(v3, *v6);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption(uint64_t *a1, google::protobuf::Message *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v165 = *MEMORY[0x263EF8340];
  uint64_t v5 = a1[2];
  int v6 = *(_DWORD *)(v5 + 32);
  if (!v6)
  {
    *(void *)v164 = operator new(0x20uLL);
    *(_OWORD *)&v164[8] = xmmword_23CE7ED90;
    strcpy(*(char **)v164, "Option must have a name.");
    google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), v5, 7, v164);
LABEL_20:
    if ((v164[23] & 0x80000000) != 0) {
      operator delete(*(void **)v164);
    }
    return 0;
  }
  if (v6 > 0)
  {
    unsigned int v8 = *(uint64_t **)(*(void *)(*(void *)(v5 + 40) + 8) + 24);
    int v9 = *((char *)v8 + 23);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_4;
    }
LABEL_8:
    if (v8[1] != 20) {
      goto LABEL_17;
    }
    unsigned int v8 = (uint64_t *)*v8;
    goto LABEL_10;
  }
  int v10 = a2;
  BOOL v11 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)v164, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
  uint64_t v12 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v149, v12);
  google::protobuf::internal::LogMessage::~LogMessage((void **)v164);
  a2 = v10;
  unsigned int v8 = *(uint64_t **)(*(void *)(*(void *)(v5 + 40) + 8) + 24);
  int v9 = *((char *)v8 + 23);
  if (v9 < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if (v9 != 20) {
    goto LABEL_17;
  }
LABEL_10:
  uint64_t v13 = (uint64_t *)*v8;
  uint64_t v14 = v8[1];
  int v15 = *((_DWORD *)v8 + 4);
  BOOL v16 = v13 == (uint64_t *)0x707265746E696E75 && v14 == 0x706F5F6465746572;
  if (v16 && v15 == 1852795252)
  {
    *(void *)v164 = operator new(0x40uLL);
    *(_OWORD *)&v164[8] = xmmword_23CE90F70;
    strcpy(*(char **)v164, "Option must not use reserved name \"uninterpreted_option\".");
    google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, v164);
    goto LABEL_20;
  }
LABEL_17:
  int v18 = (uint64_t *)*a1;
  int v148 = a2;
  uint64_t v19 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  int SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(v18, *v18, *(void *)(v19 + 8), 1);
  unsigned int v22 = v20;
  unint64_t v23 = (unint64_t)v20;
  switch(SymbolNotEnforcingDepsHelper)
  {
    case 1:
    case 4:
    case 6:
      std::string v24 = (unint64_t *)(v20 + 2);
      goto LABEL_27;
    case 2:
      std::string v24 = (unint64_t *)(v20 + 5);
      goto LABEL_27;
    case 3:
    case 7:
      uint64_t v26 = v20[2];
      goto LABEL_25;
    case 5:
      uint64_t v26 = v20[3];
LABEL_25:
      std::string v24 = (unint64_t *)(v26 + 16);
LABEL_27:
      unint64_t v23 = *v24;
      goto LABEL_28;
    case 8:
LABEL_28:
      if (v23 != v18[10]) {
        goto LABEL_29;
      }
      goto LABEL_36;
    default:
      unint64_t v23 = 0;
      if (!v18[10]) {
        goto LABEL_36;
      }
LABEL_29:
      unint64_t v27 = (void *)v18[13];
      if (!v27) {
        goto LABEL_56;
      }
      break;
  }
  while (1)
  {
    unint64_t v28 = v27[4];
    if (v23 >= v28) {
      break;
    }
LABEL_31:
    unint64_t v27 = (void *)*v27;
    if (!v27) {
      goto LABEL_56;
    }
  }
  if (v28 < v23)
  {
    ++v27;
    goto LABEL_31;
  }
LABEL_36:
  unint64_t v29 = (uint64_t *)v18[16];
  if (v29)
  {
    uint64_t v30 = v18 + 16;
    int v31 = (void *)v18[16];
    do
    {
      unint64_t v32 = v31[4];
      BOOL v33 = v32 >= v23;
      if (v32 >= v23) {
        int v34 = v31;
      }
      else {
        int v34 = v31 + 1;
      }
      if (v33) {
        uint64_t v30 = v31;
      }
      int v31 = (void *)*v34;
    }
    while (*v34);
    if (v30 != v18 + 16 && v23 >= v30[4])
    {
      std::string::value_type v35 = (uint64_t *)v30[1];
      if (v35)
      {
        do
        {
          uint64_t v36 = v35;
          std::string::value_type v35 = (uint64_t *)*v35;
        }
        while (v35);
      }
      else
      {
        std::string::size_type v37 = v30;
        do
        {
          uint64_t v36 = (uint64_t *)v37[2];
          BOOL v16 = *v36 == (void)v37;
          std::string::size_type v37 = v36;
        }
        while (!v16);
      }
      if ((uint64_t *)v18[15] == v30) {
        v18[15] = (uint64_t)v36;
      }
      --v18[17];
      std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v29, v30);
      operator delete(v30);
    }
  }
LABEL_56:
  if (SymbolNotEnforcingDepsHelper != 1) {
    unsigned int v22 = (uint64_t *)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)v148 + 152))(v148);
  }
  if (!v22)
  {
    int v38 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)v164, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 6516);
    long long v39 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v38, "CHECK failed: options_descriptor: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v149, v39);
    google::protobuf::internal::LogMessage::~LogMessage((void **)v164);
  }
  v161 = 0;
  uint64_t v162 = 0;
  std::string::size_type v163 = 0;
  *((unsigned char *)&v160.__r_.__value_.__s + 23) = 0;
  v160.__r_.__value_.__s.__data_[0] = 0;
  std::string __p = 0;
  int v158 = 0;
  v159 = 0;
  uint64_t v40 = *(const void **)a4;
  int64_t v41 = *(void *)(a4 + 8) - *(void *)a4;
  if (v41)
  {
    if (v41 < 0) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    std::string __p = operator new(v41);
    int v158 = (char *)__p;
    int v42 = (char *)__p + 4 * (v41 >> 2);
    v159 = v42;
    memcpy(__p, v40, v41);
    int v158 = v42;
  }
  if (*(int *)(a1[2] + 32) < 1)
  {
    uint64_t v44 = 0;
LABEL_154:
    if (*(_DWORD *)(v44 + 60) == 3
      || (std::string::size_type v103 = v161,
          int v104 = v162,
          (*(void (**)(google::protobuf::Message *))(*(void *)v148 + 152))(v148),
          unint64_t UnknownFields = google::protobuf::Reflection::GetUnknownFields(v105, v148),
          google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v103, v104, v44, (uint64_t)&v160, UnknownFields)))
    {
      operator new();
    }
    goto LABEL_232;
  }
  int v43 = 0;
  uint64_t v44 = 0;
  __src = &v160.__r_.__value_.__s.__data_[1];
  while (2)
  {
    uint64_t v46 = *a1;
    if (*(char *)(*a1 + 199) < 0)
    {
      **(unsigned char **)(v46 + 176) = 0;
      *(void *)(v46 + 184) = 0;
    }
    else
    {
      *(unsigned char *)(v46 + 176) = 0;
      *(unsigned char *)(v46 + 199) = 0;
    }
    uint64_t v47 = *(void *)(google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(a1[2] + 24, v43)+ 24);
    std::string::size_type size = HIBYTE(v160.__r_.__value_.__r.__words[2]);
    if ((v160.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = v160.__r_.__value_.__l.__size_;
    }
    if (size) {
      std::string::append(&v160, ".");
    }
    if (!*(unsigned char *)(google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(a1[2] + 24, v43)+ 32))
    {
      int v57 = *(char *)(v47 + 23);
      if (v57 >= 0) {
        int v58 = (const std::string::value_type *)v47;
      }
      else {
        int v58 = *(const std::string::value_type **)v47;
      }
      if (v57 >= 0) {
        std::string::size_type v59 = *(unsigned __int8 *)(v47 + 23);
      }
      else {
        std::string::size_type v59 = *(void *)(v47 + 8);
      }
      std::string::append(&v160, v58, v59);
      Nestedint Symbol = (google::protobuf::DescriptorBuilder::OptionInterpreter *)google::protobuf::FileDescriptorTables::FindNestedSymbol(*(void **)(v22[2] + 144), v22, v47);
      if (NestedSymbol == 2)
      {
        uint64_t v44 = v60;
        if (!*(unsigned char *)(v60 + 67)) {
          goto LABEL_98;
        }
      }
LABEL_157:
      uint64_t v107 = *a1;
      if (*(unsigned char *)(*(void *)*a1 + 42))
      {
LABEL_170:
        google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(NestedSymbol, (const google::protobuf::UninterpretedOption *)a1[2], v148);
        uint64_t v25 = 1;
        goto LABEL_233;
      }
      if (*(char *)(v107 + 199) < 0)
      {
        if (*(void *)(v107 + 184))
        {
LABEL_160:
          std::operator+<char>();
          size_t v108 = std::string::append(&v153, "\" is resolved to \"(");
          long long v109 = *(_OWORD *)&v108->__r_.__value_.__l.__data_;
          v154.__r_.__value_.__r.__words[2] = v108->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v154.__r_.__value_.__l.__data_ = v109;
          v108->__r_.__value_.__l.__size_ = 0;
          v108->__r_.__value_.__r.__words[2] = 0;
          v108->__r_.__value_.__r.__words[0] = 0;
          int v110 = *(char *)(*a1 + 199);
          if (v110 >= 0) {
            uint64_t v111 = (const std::string::value_type *)(*a1 + 176);
          }
          else {
            uint64_t v111 = *(const std::string::value_type **)(*a1 + 176);
          }
          if (v110 >= 0) {
            std::string::size_type v112 = *(unsigned __int8 *)(*a1 + 199);
          }
          else {
            std::string::size_type v112 = *(void *)(*a1 + 184);
          }
          std::string::size_type v113 = std::string::append(&v154, v111, v112);
          long long v114 = *(_OWORD *)&v113->__r_.__value_.__l.__data_;
          v155.__r_.__value_.__r.__words[2] = v113->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v155.__r_.__value_.__l.__data_ = v114;
          v113->__r_.__value_.__l.__size_ = 0;
          v113->__r_.__value_.__r.__words[2] = 0;
          v113->__r_.__value_.__r.__words[0] = 0;
          uint64_t v115 = std::string::append(&v155, ")\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \"(.");
          long long v116 = *(_OWORD *)&v115->__r_.__value_.__l.__data_;
          v156.__r_.__value_.__r.__words[2] = v115->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v156.__r_.__value_.__l.__data_ = v116;
          v115->__r_.__value_.__l.__size_ = 0;
          v115->__r_.__value_.__r.__words[2] = 0;
          v115->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0)
          {
            std::string::size_type v117 = v160.__r_.__value_.__l.__size_;
            if (!v160.__r_.__value_.__l.__size_) {
              goto LABEL_245;
            }
            __src = (std::string::value_type *)(v160.__r_.__value_.__r.__words[0] + 1);
          }
          else
          {
            std::string::size_type v117 = HIBYTE(v160.__r_.__value_.__r.__words[2]);
            if (!*((unsigned char *)&v160.__r_.__value_.__s + 23)) {
LABEL_245:
            }
              std::string::__throw_out_of_range[abi:ne180100]();
          }
          size_t v136 = v117 - 1;
          if (v117 - 1 >= 0x7FFFFFFFFFFFFFF8) {
            std::string::__throw_length_error[abi:ne180100]();
          }
          if (v136 >= 0x17)
          {
            uint64_t v138 = (v136 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v136 | 7) != 0x17) {
              uint64_t v138 = v136 | 7;
            }
            uint64_t v139 = v138 + 1;
            p_dst = (void **)operator new(v138 + 1);
            std::string::size_type v151 = v136;
            int64_t v152 = v139 | 0x8000000000000000;
            std::string __dst = p_dst;
          }
          else
          {
            HIBYTE(v152) = v117 - 1;
            p_dst = (void **)&__dst;
            if (v117 == 1)
            {
LABEL_207:
              *((unsigned char *)p_dst + v136) = 0;
              if (v152 >= 0) {
                int v140 = (const std::string::value_type *)&__dst;
              }
              else {
                int v140 = (const std::string::value_type *)__dst;
              }
              if (v152 >= 0) {
                std::string::size_type v141 = HIBYTE(v152);
              }
              else {
                std::string::size_type v141 = v151;
              }
              int v142 = std::string::append(&v156, v140, v141);
              long long v143 = *(_OWORD *)&v142->__r_.__value_.__l.__data_;
              v149.__r_.__value_.__r.__words[2] = v142->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v143;
              v142->__r_.__value_.__l.__size_ = 0;
              v142->__r_.__value_.__r.__words[2] = 0;
              v142->__r_.__value_.__r.__words[0] = 0;
              int v144 = std::string::append(&v149, "\") to start from the outermost scope.");
              long long v145 = *(_OWORD *)&v144->__r_.__value_.__l.__data_;
              *(void *)&v164[16] = *((void *)&v144->__r_.__value_.__l + 2);
              *(_OWORD *)v164 = v145;
              v144->__r_.__value_.__l.__size_ = 0;
              v144->__r_.__value_.__r.__words[2] = 0;
              v144->__r_.__value_.__r.__words[0] = 0;
              google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, v164);
              if ((v164[23] & 0x80000000) != 0)
              {
                operator delete(*(void **)v164);
                if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                {
LABEL_215:
                  if ((SHIBYTE(v152) & 0x80000000) == 0) {
                    goto LABEL_216;
                  }
                  goto LABEL_223;
                }
              }
              else if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
                goto LABEL_215;
              }
              operator delete(v149.__r_.__value_.__l.__data_);
              if ((SHIBYTE(v152) & 0x80000000) == 0)
              {
LABEL_216:
                if ((SHIBYTE(v156.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  goto LABEL_217;
                }
                goto LABEL_224;
              }
LABEL_223:
              operator delete(__dst);
              if ((SHIBYTE(v156.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
LABEL_217:
                if ((SHIBYTE(v155.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  goto LABEL_218;
                }
                goto LABEL_225;
              }
LABEL_224:
              operator delete(v156.__r_.__value_.__l.__data_);
              if ((SHIBYTE(v155.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
LABEL_218:
                if ((SHIBYTE(v154.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  goto LABEL_219;
                }
                goto LABEL_226;
              }
LABEL_225:
              operator delete(v155.__r_.__value_.__l.__data_);
              if ((SHIBYTE(v154.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
LABEL_219:
                if ((SHIBYTE(v153.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  goto LABEL_232;
                }
LABEL_227:
                uint64_t v122 = (void *)v153.__r_.__value_.__r.__words[0];
                goto LABEL_231;
              }
LABEL_226:
              operator delete(v154.__r_.__value_.__l.__data_);
              if ((SHIBYTE(v153.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_232;
              }
              goto LABEL_227;
            }
          }
          memmove(p_dst, __src, v136);
          goto LABEL_207;
        }
      }
      else if (*(unsigned char *)(v107 + 199))
      {
        goto LABEL_160;
      }
      std::operator+<char>();
      long long v132 = std::string::append(&v156, "\" unknown. Ensure that your proto");
      long long v133 = *(_OWORD *)&v132->__r_.__value_.__l.__data_;
      v149.__r_.__value_.__r.__words[2] = v132->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v133;
      v132->__r_.__value_.__l.__size_ = 0;
      v132->__r_.__value_.__r.__words[2] = 0;
      v132->__r_.__value_.__r.__words[0] = 0;
      long long v134 = std::string::append(&v149, " definition file imports the proto which defines the option.");
      long long v135 = *(_OWORD *)&v134->__r_.__value_.__l.__data_;
      *(void *)&v164[16] = *((void *)&v134->__r_.__value_.__l + 2);
      *(_OWORD *)v164 = v135;
      v134->__r_.__value_.__l.__size_ = 0;
      v134->__r_.__value_.__r.__words[2] = 0;
      v134->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, v164);
      if ((v164[23] & 0x80000000) != 0)
      {
        operator delete(*(void **)v164);
        if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_191:
          if ((SHIBYTE(v156.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_232;
          }
LABEL_230:
          uint64_t v122 = (void *)v156.__r_.__value_.__r.__words[0];
          goto LABEL_231;
        }
      }
      else if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_191;
      }
      operator delete(v149.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v156.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_232;
      }
      goto LABEL_230;
    }
    std::operator+<char>();
    uint64_t v49 = std::string::append(&v149, ")");
    long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
    *(void *)&v164[16] = *((void *)&v49->__r_.__value_.__l + 2);
    *(_OWORD *)v164 = v50;
    v49->__r_.__value_.__l.__size_ = 0;
    v49->__r_.__value_.__r.__words[2] = 0;
    v49->__r_.__value_.__r.__words[0] = 0;
    if (v164[23] >= 0) {
      std::string v51 = v164;
    }
    else {
      std::string v51 = *(const std::string::value_type **)v164;
    }
    if (v164[23] >= 0) {
      std::string::size_type v52 = v164[23];
    }
    else {
      std::string::size_type v52 = *(void *)&v164[8];
    }
    std::string::append(&v160, v51, v52);
    if ((v164[23] & 0x80000000) != 0)
    {
      operator delete(*(void **)v164);
      if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_112;
      }
    }
    else
    {
      if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_83;
      }
LABEL_112:
      operator delete(v149.__r_.__value_.__l.__data_);
    }
LABEL_83:
    uint64_t v53 = *a1;
    Nestedint Symbol = (google::protobuf::DescriptorBuilder::OptionInterpreter *)google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(*a1, (std::string *)v47, a1[1], 0, 1);
    uint64_t v56 = NestedSymbol;
    if (NestedSymbol)
    {
LABEL_86:
      if (v56 == 2) {
        uint64_t v44 = v55;
      }
    }
    else
    {
      Nestedint Symbol = *(google::protobuf::DescriptorBuilder::OptionInterpreter **)v53;
      if (*(unsigned char *)(*(void *)v53 + 42))
      {
        Nestedint Symbol = (google::protobuf::DescriptorBuilder::OptionInterpreter *)google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld((uint64_t)NestedSymbol, v47);
        uint64_t v56 = NestedSymbol;
        goto LABEL_86;
      }
    }
    if (!v44) {
      goto LABEL_157;
    }
LABEL_98:
    uint64_t v61 = *(void *)(v44 + 80);
    if ((uint64_t *)v61 != v22)
    {
      if (*(unsigned char *)(v61 + 140)) {
        goto LABEL_170;
      }
      std::operator+<char>();
      int v123 = std::string::append(&v155, "\" is not a field or extension of message \"");
      long long v124 = *(_OWORD *)&v123->__r_.__value_.__l.__data_;
      v156.__r_.__value_.__r.__words[2] = v123->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v156.__r_.__value_.__l.__data_ = v124;
      v123->__r_.__value_.__l.__size_ = 0;
      v123->__r_.__value_.__r.__words[2] = 0;
      v123->__r_.__value_.__r.__words[0] = 0;
      int v125 = *(char *)(*v22 + 23);
      if (v125 >= 0) {
        int v126 = (const std::string::value_type *)*v22;
      }
      else {
        int v126 = *(const std::string::value_type **)*v22;
      }
      if (v125 >= 0) {
        std::string::size_type v127 = *(unsigned __int8 *)(*v22 + 23);
      }
      else {
        std::string::size_type v127 = *(void *)(*v22 + 8);
      }
      std::string::size_type v128 = std::string::append(&v156, v126, v127);
      long long v129 = *(_OWORD *)&v128->__r_.__value_.__l.__data_;
      v149.__r_.__value_.__r.__words[2] = v128->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v149.__r_.__value_.__l.__data_ = v129;
      v128->__r_.__value_.__l.__size_ = 0;
      v128->__r_.__value_.__r.__words[2] = 0;
      v128->__r_.__value_.__r.__words[0] = 0;
      long long v130 = std::string::append(&v149, "\".");
      long long v131 = *(_OWORD *)&v130->__r_.__value_.__l.__data_;
      *(void *)&v164[16] = *((void *)&v130->__r_.__value_.__l + 2);
      *(_OWORD *)v164 = v131;
      v130->__r_.__value_.__l.__size_ = 0;
      v130->__r_.__value_.__r.__words[2] = 0;
      v130->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, v164);
      if ((v164[23] & 0x80000000) != 0)
      {
        operator delete(*(void **)v164);
        if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_185:
          if ((SHIBYTE(v156.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_186;
          }
          goto LABEL_195;
        }
      }
      else if ((SHIBYTE(v149.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_185;
      }
      operator delete(v149.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v156.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_186:
        if ((SHIBYTE(v155.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_232;
        }
LABEL_196:
        uint64_t v122 = (void *)v155.__r_.__value_.__r.__words[0];
LABEL_231:
        operator delete(v122);
        goto LABEL_232;
      }
LABEL_195:
      operator delete(v156.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v155.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_232;
      }
      goto LABEL_196;
    }
    int v62 = *(_DWORD *)(v44 + 68);
    uint64_t v63 = v158;
    if (v158 < v159)
    {
      *(_DWORD *)int v158 = v62;
      int v64 = v63 + 4;
      goto LABEL_122;
    }
    long long v65 = (char *)__p;
    int64_t v66 = v158 - (unsigned char *)__p;
    uint64_t v67 = (v158 - (unsigned char *)__p) >> 2;
    unint64_t v68 = v67 + 1;
    if ((unint64_t)(v67 + 1) >> 62) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v69 = v159 - (unsigned char *)__p;
    if ((v159 - (unsigned char *)__p) >> 1 > v68) {
      unint64_t v68 = v69 >> 1;
    }
    if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v70 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v70 = v68;
    }
    if (v70)
    {
      if (v70 >> 62) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v71 = (char *)operator new(4 * v70);
      long long v72 = &v71[4 * v67];
      *(_DWORD *)long long v72 = v62;
      int v64 = v72 + 4;
      if (v63 == v65) {
        goto LABEL_120;
      }
LABEL_114:
      unint64_t v74 = v63 - 4 - v65;
      if (v74 < 0x2C) {
        goto LABEL_249;
      }
      if ((unint64_t)(v63 - &v71[v66]) < 0x20) {
        goto LABEL_249;
      }
      uint64_t v75 = (v74 >> 2) + 1;
      uint64_t v76 = 4 * (v75 & 0x7FFFFFFFFFFFFFF8);
      uint64_t v77 = &v63[-v76];
      v72 -= v76;
      int v78 = &v71[v66 - 16];
      std::string::size_type v79 = v63 - 16;
      uint64_t v80 = v75 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v81 = *(_OWORD *)v79;
        *((_OWORD *)v78 - 1) = *((_OWORD *)v79 - 1);
        *(_OWORD *)int v78 = v81;
        v78 -= 32;
        v79 -= 32;
        v80 -= 8;
      }
      while (v80);
      uint64_t v63 = v77;
      if (v75 != (v75 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_249:
        do
        {
          int v82 = *((_DWORD *)v63 - 1);
          v63 -= 4;
          *((_DWORD *)v72 - 1) = v82;
          v72 -= 4;
        }
        while (v63 != v65);
      }
    }
    else
    {
      uint64_t v71 = 0;
      long long v72 = (char *)(4 * v67);
      long long v73 = (_DWORD *)(4 * v67);
      *long long v73 = v62;
      int v64 = (char *)(v73 + 1);
      if (v63 != v65) {
        goto LABEL_114;
      }
    }
LABEL_120:
    std::string __p = v72;
    int v158 = v64;
    v159 = &v71[4 * v70];
    if (v65) {
      operator delete(v65);
    }
LABEL_122:
    int v158 = v64;
    int v45 = *(_DWORD *)(a1[2] + 32);
    if (v43 >= v45 - 1)
    {
LABEL_66:
      if (++v43 >= v45) {
        goto LABEL_154;
      }
      continue;
    }
    break;
  }
  std::string v83 = *(std::once_flag::_State_type **)(v44 + 48);
  if (v83)
  {
    v156.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v155.__r_.__value_.__r.__words[0] = v44;
    if (atomic_load_explicit((atomic_ullong *volatile)v83, memory_order_acquire) != -1)
    {
      *(void *)v164 = &v156;
      *(void *)&v164[8] = &v155;
      v149.__r_.__value_.__r.__words[0] = (std::string::size_type)v164;
      std::__call_once(v83, &v149, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*(_DWORD *)(v44 + 56) & 0xFFFFFFFE) != 0xA)
  {
    std::operator+<char>();
    uint64_t v118 = std::string::append(&v149, "\" is an atomic type, not a message.");
    long long v119 = *(_OWORD *)&v118->__r_.__value_.__l.__data_;
    *(void *)&v164[16] = *((void *)&v118->__r_.__value_.__l + 2);
    *(_OWORD *)v164 = v119;
    v118->__r_.__value_.__l.__size_ = 0;
    v118->__r_.__value_.__r.__words[2] = 0;
    v118->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, v164);
    goto LABEL_173;
  }
  if (*(_DWORD *)(v44 + 60) != 3)
  {
    uint64_t v84 = v162;
    if (v162 < v163)
    {
      *uint64_t v162 = v44;
      uint64_t v85 = (uint64_t)(v84 + 1);
      goto LABEL_150;
    }
    std::string v86 = v161;
    uint64_t v87 = v162 - v161;
    unint64_t v88 = v87 + 1;
    if ((unint64_t)(v87 + 1) >> 61) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v89 = (char *)v163 - (char *)v161;
    if (((char *)v163 - (char *)v161) >> 2 > v88) {
      unint64_t v88 = v89 >> 2;
    }
    if ((unint64_t)v89 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v90 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v90 = v88;
    }
    if (v90)
    {
      if (v90 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      BOOL v91 = operator new(8 * v90);
      int v92 = (uint64_t *)&v91[8 * v87];
      uint64_t *v92 = v44;
      uint64_t v85 = (uint64_t)(v92 + 1);
      if (v84 != v86)
      {
LABEL_139:
        unint64_t v93 = (char *)(v84 - 1) - (char *)v86;
        if (v93 < 0x58) {
          goto LABEL_250;
        }
        if ((unint64_t)((char *)v86 - v91) < 0x20) {
          goto LABEL_250;
        }
        uint64_t v94 = (v93 >> 3) + 1;
        uint64_t v95 = 8 * (v94 & 0x3FFFFFFFFFFFFFFCLL);
        long long v96 = (char *)&v84[v95 / 0xFFFFFFFFFFFFFFF8];
        int v92 = (uint64_t *)((char *)v92 - v95);
        uint64_t v97 = &v91[(char *)v84 - (char *)v86 - 16];
        uint64_t v98 = v84 - 2;
        uint64_t v99 = v94 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v100 = *(_OWORD *)v98;
          *(v97 - 1) = *((_OWORD *)v98 - 1);
          *uint64_t v97 = v100;
          v97 -= 2;
          v98 -= 4;
          v99 -= 4;
        }
        while (v99);
        uint64_t v84 = (uint64_t *)v96;
        if (v94 != (v94 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_250:
          do
          {
            uint64_t v101 = *--v84;
            *--int v92 = v101;
          }
          while (v84 != v86);
        }
        uint64_t v84 = v161;
        v161 = v92;
        std::string::size_type v163 = (uint64_t *)&v91[8 * v90];
        if (!v84)
        {
LABEL_150:
          uint64_t v162 = (uint64_t *)v85;
          uint64_t v102 = *(std::once_flag::_State_type **)(v44 + 48);
          if (v102)
          {
            v156.__r_.__value_.__r.__words[0] = v44;
            if (atomic_load_explicit((atomic_ullong *volatile)v102, memory_order_acquire) != -1)
            {
              *(void *)v164 = google::protobuf::FieldDescriptor::TypeOnceInit;
              *(void *)&v164[8] = &v156;
              v149.__r_.__value_.__r.__words[0] = (std::string::size_type)v164;
              std::__call_once(v102, &v149, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          unsigned int v22 = *(uint64_t **)(v44 + 104);
          int v45 = *(_DWORD *)(a1[2] + 32);
          goto LABEL_66;
        }
LABEL_149:
        operator delete(v84);
        goto LABEL_150;
      }
    }
    else
    {
      BOOL v91 = 0;
      int v92 = (uint64_t *)(8 * v87);
      *(void *)(8 * v87) = v44;
      uint64_t v85 = 8 * v87 + 8;
      if (v84 != v86) {
        goto LABEL_139;
      }
    }
    v161 = v92;
    std::string::size_type v163 = (uint64_t *)&v91[8 * v90];
    if (!v84) {
      goto LABEL_150;
    }
    goto LABEL_149;
  }
  std::operator+<char>();
  uint64_t v120 = std::string::append(&v149, "\" is a repeated message. Repeated message options must be initialized using an aggregate value.");
  long long v121 = *(_OWORD *)&v120->__r_.__value_.__l.__data_;
  *(void *)&v164[16] = *((void *)&v120->__r_.__value_.__l + 2);
  *(_OWORD *)v164 = v121;
  v120->__r_.__value_.__l.__size_ = 0;
  v120->__r_.__value_.__r.__words[2] = 0;
  v120->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, v164);
LABEL_173:
  if ((v164[23] & 0x80000000) != 0) {
    operator delete(*(void **)v164);
  }
  if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v122 = (void *)v149.__r_.__value_.__r.__words[0];
    goto LABEL_231;
  }
LABEL_232:
  uint64_t v25 = 0;
LABEL_233:
  if (__p)
  {
    int v158 = (char *)__p;
    operator delete(__p);
  }
  if (SHIBYTE(v160.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v160.__r_.__value_.__l.__data_);
  }
  if (v161) {
    operator delete(v161);
  }
  return v25;
}

void sub_23CDE4400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,void *a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62)
{
  if (a2) {
    __clang_call_terminate(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const google::protobuf::UninterpretedOption *a2, google::protobuf::Message *a3)
{
  uint64_t v5 = (uint64_t *)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  *((unsigned char *)&__p[0].__r_.__value_.__s + 23) = 20;
  strcpy((char *)__p, "uninterpreted_option");
  if (google::protobuf::FileDescriptorTables::FindNestedSymbol(*(void **)(v5[2] + 144), v5, (uint64_t)__p) == 2)
  {
    if (*(unsigned char *)(v6 + 67)) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = (const std::string::value_type **)v6;
    }
    if ((SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_6:
      if (!v7) {
        goto LABEL_10;
      }
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if ((SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  operator delete(__p[0].__r_.__value_.__l.__data_);
  if (!v7)
  {
LABEL_10:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 6787);
    unsigned int v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: field != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
LABEL_11:
  (*(void (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  uint64_t v11 = google::protobuf::Reflection::AddMessage(v9, a3, v7, 0, v10);
  return (*(uint64_t (**)(uint64_t, const google::protobuf::UninterpretedOption *))(*(void *)v11 + 112))(v11, a2);
}

void sub_23CDE4968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE4980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v9 = *(_DWORD **)a6;
  uint64_t v10 = *(void *)(a6 + 8) - *(void *)a6;
  unint64_t v11 = (unint64_t)v10 >> 4;
  if (a2 != a3)
  {
    if ((int)v11 >= 1)
    {
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      int v38 = a2 + 1;
      do
      {
        uint64_t v17 = *a2;
        if (v9[v15] == *(_DWORD *)(*a2 + 68))
        {
          int v18 = *(std::once_flag::_State_type **)(v17 + 48);
          if (v18)
          {
            int v42 = google::protobuf::FieldDescriptor::TypeOnceInit;
            uint64_t v41 = v17;
            if (atomic_load_explicit((atomic_ullong *volatile)v18, memory_order_acquire) != -1)
            {
              __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v42;
              __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v41;
              v40.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
              std::__call_once(v18, &v40, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          int v19 = *(_DWORD *)(v17 + 56);
          if (v19 == 10)
          {
            if (v9[v15 + 1] == 4
              && (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v38, a3, a4, a5, *(void *)&v9[v15 + 2]) & 1) == 0)
            {
              return 0;
            }
          }
          else
          {
            if (v19 != 11)
            {
              google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 6847);
              std::string::value_type v35 = google::protobuf::internal::LogMessage::operator<<(__p, "Invalid wire type for CPPTYPE_MESSAGE: ");
              uint64_t v36 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v35, v19);
              google::protobuf::internal::LogFinisher::operator=((uint64_t)&v40, v36);
              google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
              return 0;
            }
            if (v9[v15 + 1] == 3)
            {
              memset(__p, 0, 24);
              if (v9[v15 + 1] != 3) {
                __assert_rtn("length_delimited", "unknown_field_set.h", 358, "type() == TYPE_LENGTH_DELIMITED");
              }
              uint64_t v20 = *(void *)&v9[v15 + 2];
              int v21 = *(char *)(v20 + 23);
              if (v21 >= 0) {
                unsigned int v22 = *(const void **)&v9[v15 + 2];
              }
              else {
                unsigned int v22 = *(const void **)v20;
              }
              if (v21 >= 0) {
                int v23 = *(unsigned __int8 *)(v20 + 23);
              }
              else {
                int v23 = *(_DWORD *)(v20 + 8);
              }
              if (google::protobuf::UnknownFieldSet::ParseFromArray((google::protobuf::UnknownFieldSet *)__p, v22, v23)&& (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v38, a3, a4, a5, __p) & 1) == 0)
              {
                std::string::size_type v37 = (void *)__p[0].__r_.__value_.__r.__words[0];
                if (__p[0].__r_.__value_.__r.__words[0] != __p[0].__r_.__value_.__l.__size_)
                {
                  google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)__p);
                  std::string::size_type v37 = (void *)__p[0].__r_.__value_.__r.__words[0];
                }
                if (v37)
                {
                  __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v37;
                  operator delete(v37);
                }
                return 0;
              }
              std::string v24 = (void *)__p[0].__r_.__value_.__r.__words[0];
              if (__p[0].__r_.__value_.__r.__words[0] != __p[0].__r_.__value_.__l.__size_)
              {
                google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)__p);
                std::string v24 = (void *)__p[0].__r_.__value_.__r.__words[0];
              }
              if (v24)
              {
                __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v24;
                operator delete(v24);
              }
            }
          }
        }
        ++v16;
        int v9 = *(_DWORD **)a6;
        v15 += 4;
      }
      while (v16 < (int)((*(void *)(a6 + 8) - *(void *)a6) >> 4));
    }
    return 1;
  }
  if ((int)v11 < 1) {
    return 1;
  }
  int v25 = *(_DWORD *)(a4 + 68);
  if (*v9 == v25)
  {
    BOOL v26 = 0;
  }
  else
  {
    uint64_t v28 = (int)(v10 >> 4);
    uint64_t v29 = ((unint64_t)v10 >> 4);
    uint64_t v30 = v9 + 4;
    uint64_t v31 = 1;
    do
    {
      if (v29 == v31) {
        return v31 >= v28;
      }
      int v32 = *v30;
      v30 += 4;
      ++v31;
    }
    while (v32 != v25);
    BOOL v26 = v31 - 1 >= v28;
  }
  std::operator+<char>();
  BOOL v33 = std::string::append(&v40, "\" was already set.");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  __p[0].__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v40.__r_.__value_.__l.__data_);
  }
  return v26;
}

void sub_23CDE4D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE4D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE4D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if (a26 < 0)
    {
LABEL_5:
      operator delete(a21);
      _Unwind_Resume(a1);
    }
  }
  else if (a26 < 0)
  {
    goto LABEL_5;
  }
  _Unwind_Resume(a1);
}

void sub_23CDE4D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::UnknownFieldSet::~UnknownFieldSet((google::protobuf::UnknownFieldSet *)va);
  _Unwind_Resume(a1);
}

void sub_23CDE4D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::UnknownFieldSet::~UnknownFieldSet((google::protobuf::UnknownFieldSet *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::UnknownFieldSet *a3)
{
  uint64_t v6 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v6)
  {
    v122.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v121.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      v124.__r_.__value_.__r.__words[0] = (std::string::size_type)&v122;
      v124.__r_.__value_.__l.__size_ = (std::string::size_type)&v121;
      v123.__r_.__value_.__r.__words[0] = (std::string::size_type)&v124;
      std::__call_once(v6, &v123, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  int v7 = *((_DWORD *)a2 + 14);
  switch(v7)
  {
    case 1:
      uint64_t v10 = *((void *)this + 2);
      int v11 = *(_DWORD *)(v10 + 16);
      if ((v11 & 0x20) != 0)
      {
        double v21 = *(double *)(v10 + 88);
      }
      else if ((v11 & 8) != 0)
      {
        double v21 = (double)*(unint64_t *)(v10 + 72);
      }
      else
      {
        if ((v11 & 0x10) == 0) {
          goto LABEL_114;
        }
        double v21 = (double)*(uint64_t *)(v10 + 80);
      }
      google::protobuf::UnknownFieldSet::AddFixed64(a3, *((_DWORD *)a2 + 17), *(uint64_t *)&v21);
      return 1;
    case 2:
      uint64_t v18 = *((void *)this + 2);
      int v19 = *(_DWORD *)(v18 + 16);
      if ((v19 & 0x20) != 0)
      {
        float v36 = *(double *)(v18 + 88);
      }
      else if ((v19 & 8) != 0)
      {
        float v36 = (float)*(unint64_t *)(v18 + 72);
      }
      else
      {
        if ((v19 & 0x10) == 0) {
          goto LABEL_114;
        }
        float v36 = (float)*(uint64_t *)(v18 + 80);
      }
      google::protobuf::UnknownFieldSet::AddFixed32(a3, *((_DWORD *)a2 + 17), SLODWORD(v36));
      return 1;
    case 3:
    case 16:
    case 18:
      uint64_t v16 = *((void *)this + 2);
      int v17 = *(_DWORD *)(v16 + 16);
      if ((v17 & 8) != 0)
      {
        uint64_t v34 = *(void *)(v16 + 72);
        if (v34 < 0) {
          goto LABEL_114;
        }
        unsigned int v35 = *((_DWORD *)a2 + 17);
      }
      else
      {
        if ((v17 & 0x10) == 0) {
          goto LABEL_114;
        }
        unsigned int v35 = *((_DWORD *)a2 + 17);
        uint64_t v34 = *(void *)(v16 + 80);
      }
      int v42 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v42)
      {
        v122.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v121.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v42, memory_order_acquire) != -1)
        {
          v124.__r_.__value_.__r.__words[0] = (std::string::size_type)&v122;
          v124.__r_.__value_.__l.__size_ = (std::string::size_type)&v121;
          v123.__r_.__value_.__r.__words[0] = (std::string::size_type)&v124;
          std::__call_once(v42, &v123, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v7 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64((int)v42, v35, v34, v7, a3);
      return 1;
    case 4:
    case 6:
      uint64_t v14 = *((void *)this + 2);
      if ((*(unsigned char *)(v14 + 16) & 8) == 0) {
        goto LABEL_114;
      }
      unsigned int v23 = *((_DWORD *)a2 + 17);
      uint64_t v24 = *(void *)(v14 + 72);
      int v25 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v25)
      {
        v122.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v121.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v25, memory_order_acquire) != -1)
        {
          v124.__r_.__value_.__r.__words[0] = (std::string::size_type)&v122;
          v124.__r_.__value_.__l.__size_ = (std::string::size_type)&v121;
          v123.__r_.__value_.__r.__words[0] = (std::string::size_type)&v124;
          std::__call_once(v25, &v123, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v7 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64((int)v25, v23, v24, v7, a3);
      return 1;
    case 5:
    case 15:
    case 17:
      uint64_t v8 = *((void *)this + 2);
      int v9 = *(_DWORD *)(v8 + 16);
      if ((v9 & 8) != 0)
      {
        unint64_t v33 = *(void *)(v8 + 72);
        if (v33 >> 31) {
          goto LABEL_114;
        }
        unsigned int v43 = *((_DWORD *)a2 + 17);
        uint64_t v44 = (std::once_flag::_State_type *)*((void *)a2 + 6);
        if (v44)
        {
          v122.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v121.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
          if (atomic_load_explicit((atomic_ullong *volatile)v44, memory_order_acquire) != -1)
          {
            v124.__r_.__value_.__r.__words[0] = (std::string::size_type)&v122;
            v124.__r_.__value_.__l.__size_ = (std::string::size_type)&v121;
            v123.__r_.__value_.__r.__words[0] = (std::string::size_type)&v124;
            std::__call_once(v44, &v123, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          int v7 = *((_DWORD *)a2 + 14);
        }
        unsigned int v45 = v43;
        uint64_t v46 = v33;
      }
      else
      {
        if ((v9 & 0x10) == 0) {
          goto LABEL_114;
        }
        int64_t v41 = *(void *)(v8 + 80);
        if (v41 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL) {
          goto LABEL_114;
        }
        unsigned int v55 = *((_DWORD *)a2 + 17);
        LODWORD(v44) = google::protobuf::FieldDescriptor::type(a2);
        unsigned int v45 = v55;
        uint64_t v46 = v41;
        int v7 = (int)v44;
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32((int)v44, v45, v46, v7, a3);
      return 1;
    case 7:
    case 13:
      uint64_t v13 = *((void *)this + 2);
      if ((*(unsigned char *)(v13 + 16) & 8) == 0) {
        goto LABEL_114;
      }
      unint64_t v22 = *(void *)(v13 + 72);
      if (HIDWORD(v22)) {
        goto LABEL_114;
      }
      unsigned int v39 = *((_DWORD *)a2 + 17);
      std::string v40 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v40)
      {
        v122.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v121.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v40, memory_order_acquire) != -1)
        {
          v124.__r_.__value_.__r.__words[0] = (std::string::size_type)&v122;
          v124.__r_.__value_.__l.__size_ = (std::string::size_type)&v121;
          v123.__r_.__value_.__r.__words[0] = (std::string::size_type)&v124;
          std::__call_once(v40, &v123, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        int v7 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32((int)v40, v39, v22, v7, a3);
      return 1;
    case 8:
      uint64_t v20 = *((void *)this + 2);
      if ((*(unsigned char *)(v20 + 16) & 1) == 0) {
        goto LABEL_114;
      }
      std::string::size_type v37 = *(_DWORD **)(v20 + 48);
      if (*((char *)v37 + 23) < 0)
      {
        uint64_t v50 = *((void *)v37 + 1);
        if (v50 != 4 || **(_DWORD **)v37 != 1702195828)
        {
          if (v50 != 5) {
            goto LABEL_114;
          }
          std::string::size_type v37 = *(_DWORD **)v37;
          goto LABEL_87;
        }
      }
      else
      {
        int v38 = *((unsigned __int8 *)v37 + 23);
        if (v38 != 4)
        {
          if (v38 != 5) {
            goto LABEL_114;
          }
LABEL_87:
          int v51 = *v37;
          int v52 = *((unsigned __int8 *)v37 + 4);
          BOOL v53 = v51 == 1936482662 && v52 == 101;
          if (!v53)
          {
LABEL_114:
            std::operator+<char>();
            int64_t v66 = std::string::append(&v123, "\".");
            long long v67 = *(_OWORD *)&v66->__r_.__value_.__l.__data_;
            v124.__r_.__value_.__r.__words[2] = v66->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v124.__r_.__value_.__l.__data_ = v67;
            v66->__r_.__value_.__l.__size_ = 0;
            v66->__r_.__value_.__r.__words[2] = 0;
            v66->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&v124);
            if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
            {
              operator delete(v124.__r_.__value_.__l.__data_);
              if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0) {
                goto LABEL_118;
              }
            }
            else if (SHIBYTE(v123.__r_.__value_.__r.__words[2]) < 0)
            {
LABEL_118:
              unint64_t v68 = (void *)v123.__r_.__value_.__r.__words[0];
LABEL_119:
              operator delete(v68);
            }
            return 0;
          }
          uint64_t v54 = 0;
LABEL_123:
          unsigned int v70 = *((_DWORD *)a2 + 17);
          goto LABEL_184;
        }
        if (*v37 != 1702195828) {
          goto LABEL_114;
        }
      }
      uint64_t v54 = 1;
      goto LABEL_123;
    case 9:
    case 12:
      if ((*(unsigned char *)(*((void *)this + 2) + 16) & 2) != 0) {
        google::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
      }
      goto LABEL_114;
    case 10:
    case 11:
      uint64_t result = google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(this, (const std::string::value_type ***)a2, a3);
      if (!result) {
        return result;
      }
      return 1;
    case 14:
      uint64_t v15 = *((void *)this + 2);
      if ((*(unsigned char *)(v15 + 16) & 1) == 0) {
        goto LABEL_114;
      }
      BOOL v26 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v26)
      {
        v122.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v26, memory_order_acquire) != -1)
        {
          v124.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v124.__r_.__value_.__l.__size_ = (std::string::size_type)&v122;
          v123.__r_.__value_.__r.__words[0] = (std::string::size_type)&v124;
          std::__call_once(v26, &v123, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        uint64_t v15 = *((void *)this + 2);
      }
      unint64_t v27 = (uint64_t *)*((void *)a2 + 14);
      uint64_t v28 = *(void *)(v15 + 48);
      uint64_t v29 = *(void *)(v27[2] + 16);
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26AED1E88, memory_order_acquire) & 1) == 0)
      {
        std::string::size_type v117 = (google::protobuf::_anonymous_namespace_ *)__cxa_guard_acquire(&qword_26AED1E88);
        if (v117) {
      }
        }
      uint64_t v30 = _MergedGlobals_31;
      google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
      if (v29 == v30)
      {
        Nestedint Symbol = google::protobuf::FileDescriptorTables::FindNestedSymbol(*(void **)(v27[2] + 144), v27, v28);
        if (NestedSymbol == 5) {
          uint64_t v49 = v48;
        }
        else {
          uint64_t v49 = 0;
        }
        if (NestedSymbol == 5) {
          goto LABEL_182;
        }
        goto LABEL_186;
      }
      uint64_t v31 = v27[1];
      if (*(char *)(v31 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v124, *(const std::string::value_type **)v31, *(void *)(v31 + 8));
      }
      else
      {
        long long v32 = *(_OWORD *)v31;
        v124.__r_.__value_.__r.__words[2] = *(void *)(v31 + 16);
        *(_OWORD *)&v124.__r_.__value_.__l.__data_ = v32;
      }
      std::string::size_type size = HIBYTE(v124.__r_.__value_.__r.__words[2]);
      if ((v124.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v124.__r_.__value_.__l.__size_;
      }
      if (*(char *)(*v27 + 23) < 0) {
        uint64_t v57 = *(void *)(*v27 + 8);
      }
      else {
        uint64_t v57 = *(unsigned __int8 *)(*v27 + 23);
      }
      std::string::resize(&v124, size - v57, 0);
      int v58 = *(char *)(v28 + 23);
      if (v58 >= 0) {
        std::string::size_type v59 = (const std::string::value_type *)v28;
      }
      else {
        std::string::size_type v59 = *(const std::string::value_type **)v28;
      }
      if (v58 >= 0) {
        std::string::size_type v60 = *(unsigned __int8 *)(v28 + 23);
      }
      else {
        std::string::size_type v60 = *(void *)(v28 + 8);
      }
      std::string::append(&v124, v59, v60);
      uint64_t v61 = *(void **)this;
      int SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(*(void **)this, **(void **)this, (uint64_t)&v124, 1);
      uint64_t v49 = v62;
      unint64_t v64 = (unint64_t)v62;
      switch(SymbolNotEnforcingDepsHelper)
      {
        case 1:
        case 4:
        case 6:
          long long v65 = v62 + 2;
          goto LABEL_127;
        case 2:
          long long v65 = v62 + 5;
          goto LABEL_127;
        case 3:
        case 7:
          uint64_t v69 = v62[2];
          goto LABEL_125;
        case 5:
          uint64_t v69 = v62[3];
LABEL_125:
          long long v65 = (unint64_t *)(v69 + 16);
LABEL_127:
          unint64_t v64 = *v65;
          goto LABEL_128;
        case 8:
LABEL_128:
          if (v64 != v61[10]) {
            goto LABEL_129;
          }
          goto LABEL_136;
        default:
          unint64_t v64 = 0;
          if (!v61[10]) {
            goto LABEL_136;
          }
LABEL_129:
          uint64_t v71 = (void *)v61[13];
          if (!v71) {
            goto LABEL_156;
          }
          break;
      }
      while (1)
      {
        unint64_t v72 = v71[4];
        if (v64 >= v72) {
          break;
        }
LABEL_131:
        uint64_t v71 = (void *)*v71;
        if (!v71) {
          goto LABEL_156;
        }
      }
      if (v72 < v64)
      {
        ++v71;
        goto LABEL_131;
      }
LABEL_136:
      long long v73 = (uint64_t *)v61[16];
      if (v73)
      {
        unint64_t v74 = v61 + 16;
        uint64_t v75 = (void *)v61[16];
        do
        {
          unint64_t v76 = v75[4];
          BOOL v77 = v76 >= v64;
          if (v76 >= v64) {
            int v78 = v75;
          }
          else {
            int v78 = v75 + 1;
          }
          if (v77) {
            unint64_t v74 = v75;
          }
          uint64_t v75 = (void *)*v78;
        }
        while (*v78);
        if (v74 != v61 + 16 && v64 >= v74[4])
        {
          std::string::size_type v79 = (uint64_t *)v74[1];
          if (v79)
          {
            do
            {
              uint64_t v80 = v79;
              std::string::size_type v79 = (uint64_t *)*v79;
            }
            while (v79);
          }
          else
          {
            long long v81 = v74;
            do
            {
              uint64_t v80 = (uint64_t *)v81[2];
              BOOL v53 = *v80 == (void)v81;
              long long v81 = v80;
            }
            while (!v53);
          }
          if ((uint64_t *)v61[15] == v74) {
            v61[15] = v80;
          }
          --v61[17];
          std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v73, v74);
          operator delete(v74);
        }
      }
LABEL_156:
      if (SymbolNotEnforcingDepsHelper != 5)
      {
        uint64_t v49 = 0;
        goto LABEL_178;
      }
      if ((uint64_t *)v49[3] == v27)
      {
LABEL_178:
        char v99 = 1;
        goto LABEL_179;
      }
      std::operator+<char>();
      int v82 = std::string::append(&v118, "\" has no value named \"");
      long long v83 = *(_OWORD *)&v82->__r_.__value_.__l.__data_;
      v119.__r_.__value_.__r.__words[2] = v82->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v119.__r_.__value_.__l.__data_ = v83;
      v82->__r_.__value_.__l.__size_ = 0;
      v82->__r_.__value_.__r.__words[2] = 0;
      v82->__r_.__value_.__r.__words[0] = 0;
      int v84 = *(char *)(v28 + 23);
      if (v84 >= 0) {
        uint64_t v85 = (const std::string::value_type *)v28;
      }
      else {
        uint64_t v85 = *(const std::string::value_type **)v28;
      }
      if (v84 >= 0) {
        std::string::size_type v86 = *(unsigned __int8 *)(v28 + 23);
      }
      else {
        std::string::size_type v86 = *(void *)(v28 + 8);
      }
      uint64_t v87 = std::string::append(&v119, v85, v86);
      long long v88 = *(_OWORD *)&v87->__r_.__value_.__l.__data_;
      v120.__r_.__value_.__r.__words[2] = v87->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v120.__r_.__value_.__l.__data_ = v88;
      v87->__r_.__value_.__l.__size_ = 0;
      v87->__r_.__value_.__r.__words[2] = 0;
      v87->__r_.__value_.__r.__words[0] = 0;
      uint64_t v89 = std::string::append(&v120, "\" for option \"");
      long long v90 = *(_OWORD *)&v89->__r_.__value_.__l.__data_;
      v121.__r_.__value_.__r.__words[2] = v89->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v90;
      v89->__r_.__value_.__l.__size_ = 0;
      v89->__r_.__value_.__r.__words[2] = 0;
      v89->__r_.__value_.__r.__words[0] = 0;
      uint64_t v91 = *((void *)a2 + 1);
      int v92 = *(char *)(v91 + 23);
      if (v92 >= 0) {
        unint64_t v93 = (const std::string::value_type *)*((void *)a2 + 1);
      }
      else {
        unint64_t v93 = *(const std::string::value_type **)v91;
      }
      if (v92 >= 0) {
        std::string::size_type v94 = *(unsigned __int8 *)(v91 + 23);
      }
      else {
        std::string::size_type v94 = *(void *)(v91 + 8);
      }
      uint64_t v95 = std::string::append(&v121, v93, v94);
      long long v96 = *(_OWORD *)&v95->__r_.__value_.__l.__data_;
      v122.__r_.__value_.__r.__words[2] = v95->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v122.__r_.__value_.__l.__data_ = v96;
      v95->__r_.__value_.__l.__size_ = 0;
      v95->__r_.__value_.__r.__words[2] = 0;
      v95->__r_.__value_.__r.__words[0] = 0;
      uint64_t v97 = std::string::append(&v122, "\". This appears to be a value from a sibling type.");
      long long v98 = *(_OWORD *)&v97->__r_.__value_.__l.__data_;
      v123.__r_.__value_.__r.__words[2] = v97->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v123.__r_.__value_.__l.__data_ = v98;
      v97->__r_.__value_.__l.__size_ = 0;
      v97->__r_.__value_.__r.__words[2] = 0;
      v97->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&v123);
      if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        if ((SHIBYTE(v122.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_172;
        }
LABEL_212:
        operator delete(v122.__r_.__value_.__l.__data_);
        if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_213;
        }
LABEL_173:
        if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_174;
        }
LABEL_214:
        operator delete(v120.__r_.__value_.__l.__data_);
        if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_215;
        }
LABEL_175:
        if ((SHIBYTE(v118.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_176;
        }
LABEL_216:
        operator delete(v118.__r_.__value_.__l.__data_);
        goto LABEL_176;
      }
      operator delete(v123.__r_.__value_.__l.__data_);
      if (SHIBYTE(v122.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_212;
      }
LABEL_172:
      if ((SHIBYTE(v121.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_173;
      }
LABEL_213:
      operator delete(v121.__r_.__value_.__l.__data_);
      if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_214;
      }
LABEL_174:
      if ((SHIBYTE(v119.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_175;
      }
LABEL_215:
      operator delete(v119.__r_.__value_.__l.__data_);
      if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_216;
      }
LABEL_176:
      char v99 = 0;
      uint64_t v49 = 0;
LABEL_179:
      if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v124.__r_.__value_.__l.__data_);
      }
      if ((v99 & 1) == 0) {
        return 0;
      }
LABEL_182:
      if (!v49)
      {
LABEL_186:
        google::protobuf::FieldDescriptor::enum_type(a2);
        std::operator+<char>();
        long long v100 = std::string::append(&v119, "\" has no value named \"");
        long long v101 = *(_OWORD *)&v100->__r_.__value_.__l.__data_;
        v120.__r_.__value_.__r.__words[2] = v100->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v120.__r_.__value_.__l.__data_ = v101;
        v100->__r_.__value_.__l.__size_ = 0;
        v100->__r_.__value_.__r.__words[2] = 0;
        v100->__r_.__value_.__r.__words[0] = 0;
        int v102 = *(char *)(v28 + 23);
        if (v102 >= 0) {
          std::string::size_type v103 = (const std::string::value_type *)v28;
        }
        else {
          std::string::size_type v103 = *(const std::string::value_type **)v28;
        }
        if (v102 >= 0) {
          std::string::size_type v104 = *(unsigned __int8 *)(v28 + 23);
        }
        else {
          std::string::size_type v104 = *(void *)(v28 + 8);
        }
        uint64_t v105 = std::string::append(&v120, v103, v104);
        long long v106 = *(_OWORD *)&v105->__r_.__value_.__l.__data_;
        v121.__r_.__value_.__r.__words[2] = v105->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v106;
        v105->__r_.__value_.__l.__size_ = 0;
        v105->__r_.__value_.__r.__words[2] = 0;
        v105->__r_.__value_.__r.__words[0] = 0;
        uint64_t v107 = std::string::append(&v121, "\" for option \"");
        long long v108 = *(_OWORD *)&v107->__r_.__value_.__l.__data_;
        v122.__r_.__value_.__r.__words[2] = v107->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v122.__r_.__value_.__l.__data_ = v108;
        v107->__r_.__value_.__l.__size_ = 0;
        v107->__r_.__value_.__r.__words[2] = 0;
        v107->__r_.__value_.__r.__words[0] = 0;
        uint64_t v109 = *((void *)a2 + 1);
        int v110 = *(char *)(v109 + 23);
        if (v110 >= 0) {
          uint64_t v111 = (const std::string::value_type *)*((void *)a2 + 1);
        }
        else {
          uint64_t v111 = *(const std::string::value_type **)v109;
        }
        if (v110 >= 0) {
          std::string::size_type v112 = *(unsigned __int8 *)(v109 + 23);
        }
        else {
          std::string::size_type v112 = *(void *)(v109 + 8);
        }
        std::string::size_type v113 = std::string::append(&v122, v111, v112);
        long long v114 = *(_OWORD *)&v113->__r_.__value_.__l.__data_;
        v123.__r_.__value_.__r.__words[2] = v113->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v123.__r_.__value_.__l.__data_ = v114;
        v113->__r_.__value_.__l.__size_ = 0;
        v113->__r_.__value_.__r.__words[2] = 0;
        v113->__r_.__value_.__r.__words[0] = 0;
        uint64_t v115 = std::string::append(&v123, "\".");
        long long v116 = *(_OWORD *)&v115->__r_.__value_.__l.__data_;
        v124.__r_.__value_.__r.__words[2] = v115->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v124.__r_.__value_.__l.__data_ = v116;
        v115->__r_.__value_.__l.__size_ = 0;
        v115->__r_.__value_.__r.__words[2] = 0;
        v115->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&v124);
        if (SHIBYTE(v124.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v124.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_200:
            if ((SHIBYTE(v122.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_201;
            }
            goto LABEL_207;
          }
        }
        else if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_200;
        }
        operator delete(v123.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v122.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_201:
          if ((SHIBYTE(v121.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_202;
          }
          goto LABEL_208;
        }
LABEL_207:
        operator delete(v122.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v121.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_202:
          if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_203;
          }
          goto LABEL_209;
        }
LABEL_208:
        operator delete(v121.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_203:
          if ((SHIBYTE(v119.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            return 0;
          }
LABEL_210:
          unint64_t v68 = (void *)v119.__r_.__value_.__r.__words[0];
          goto LABEL_119;
        }
LABEL_209:
        operator delete(v120.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v119.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return 0;
        }
        goto LABEL_210;
      }
      unsigned int v70 = *((_DWORD *)a2 + 17);
      uint64_t v54 = *((int *)v49 + 4);
LABEL_184:
      google::protobuf::UnknownFieldSet::AddVarint(a3, v70, v54);
      return 1;
    default:
      return 1;
  }
}

void sub_23CDE5DF0(_Unwind_Exception *a1)
{
}

void sub_23CDE5E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a49 < 0)
  {
    operator delete(__p);
    if (a42 < 0)
    {
LABEL_5:
      operator delete(a37);
      if (a35 < 0)
      {
LABEL_8:
        operator delete(a30);
        if ((a28 & 0x80000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_14;
      }
LABEL_13:
      if ((a28 & 0x80000000) == 0)
      {
LABEL_9:
        if (a21 < 0) {
          goto LABEL_10;
        }
        goto LABEL_15;
      }
LABEL_14:
      operator delete(a23);
      if (a21 < 0)
      {
LABEL_10:
        operator delete(a16);
        if ((a15 & 0x80000000) == 0) {
          goto LABEL_11;
        }
        goto LABEL_16;
      }
LABEL_15:
      if ((a15 & 0x80000000) == 0)
      {
LABEL_11:
        if ((*(char *)(v49 - 105) & 0x80000000) == 0) {
          goto LABEL_17;
        }
LABEL_18:
        operator delete(*(void **)(v49 - 128));
LABEL_17:
        _Unwind_Resume(a1);
      }
LABEL_16:
      operator delete(a10);
      if ((*(char *)(v49 - 105) & 0x80000000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_18;
    }
  }
  else if (a42 < 0)
  {
    goto LABEL_5;
  }
  if (a35 < 0) {
    goto LABEL_8;
  }
  goto LABEL_13;
}

uint64_t google::protobuf::io::CodedOutputStream::HadError(char **this)
{
  uint64_t v2 = google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer((google::protobuf::io::EpsCopyOutputStream *)this, this[8]);
  this[8] = (char *)v2;
  if (!v2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 1062);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: cur_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  return *((unsigned __int8 *)this + 56);
}

void sub_23CDE619C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE61B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::UnknownFieldSet **std::unique_ptr<google::protobuf::UnknownFieldSet>::~unique_ptr[abi:ne180100](google::protobuf::UnknownFieldSet **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *(void **)v2;
    if (*(void *)v2 != *((void *)v2 + 1))
    {
      google::protobuf::UnknownFieldSet::ClearFallback(v2);
      uint64_t v3 = *(void **)v2;
    }
    if (v3)
    {
      *((void *)v2 + 1) = v3;
      operator delete(v3);
    }
    MEMORY[0x23ECF2BC0](v2, 0x20C40960023A9);
  }
  return a1;
}

void google::protobuf::UnknownFieldSet::~UnknownFieldSet(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v2 = *(void **)this;
  if (v2 != *((void **)this + 1))
  {
    google::protobuf::UnknownFieldSet::ClearFallback(this);
    uint64_t v2 = *(void **)this;
  }
  if (v2)
  {
    *((void *)this + 1) = v2;
    operator delete(v2);
  }
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  switch(a4)
  {
    case 17:
      a3 = (2 * a3) ^ ((int)a3 >> 31);
      uint64_t v6 = this;
      goto LABEL_6;
    case 15:
      google::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
      break;
    case 5:
      a3 = (int)a3;
      uint64_t v6 = this;
LABEL_6:
      google::protobuf::UnknownFieldSet::AddVarint(v6, a2, a3);
      return;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7197);
      int v7 = google::protobuf::internal::LogMessage::operator<<(v10, "Invalid wire type for CPPTYPE_INT32: ");
      uint64_t v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v7, a4);
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, v8);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
      break;
  }
}

void sub_23CDE6380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE6394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  if (a4 == 18)
  {
    a3 = (2 * a3) ^ (a3 >> 63);
LABEL_6:
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 16)
  {
    if (a4 != 3)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7220);
      uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT64: ");
      int v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, a4);
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v7);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      return;
    }
    goto LABEL_6;
  }

  google::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
}

void sub_23CDE647C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE6490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32(int a1, unsigned int a2, unsigned int a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  if (a4 == 7)
  {
    google::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
  }
  else if (a4 == 13)
  {
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7238);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT32: ");
    int v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, a4);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDE656C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE6580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  if (a4 == 6)
  {
    google::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
  }
  else if (a4 == 4)
  {
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7256);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT64: ");
    int v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, a4);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_23CDE6658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE666C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const std::string::value_type ***a2, google::protobuf::UnknownFieldSet *a3)
{
  if ((*(unsigned char *)(*((void *)this + 2) + 16) & 4) == 0)
  {
    std::operator+<char>();
    char v5 = std::string::append(&v46, "\" is a message. To set the entire message, use syntax like \"");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    int v7 = *((char *)*a2 + 23);
    if (v7 >= 0) {
      char v8 = (const std::string::value_type *)*a2;
    }
    else {
      char v8 = **a2;
    }
    if (v7 >= 0) {
      std::string::size_type v9 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v9 = (std::string::size_type)(*a2)[1];
    }
    uint64_t v10 = std::string::append(&v47, v8, v9);
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = std::string::append(&__str, " = { <proto text format> }\". To set fields within it, use syntax like \"");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = *((char *)*a2 + 23);
    if (v14 >= 0) {
      uint64_t v15 = (const std::string::value_type *)*a2;
    }
    else {
      uint64_t v15 = **a2;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v16 = (std::string::size_type)(*a2)[1];
    }
    int v17 = std::string::append(&v43, v15, v16);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    int v19 = std::string::append(&v42, ".foo = value\".");
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if ((SHIBYTE(v42.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_16:
        if ((SHIBYTE(v43.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_17;
        }
        goto LABEL_46;
      }
    }
    else if ((SHIBYTE(v42.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v42.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v43.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_47;
    }
LABEL_46:
    operator delete(v43.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_18:
      if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_19;
      }
      goto LABEL_48;
    }
LABEL_47:
    operator delete(__str.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_19:
      if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return 0;
      }
LABEL_49:
      operator delete(v46.__r_.__value_.__l.__data_);
      return 0;
    }
LABEL_48:
    operator delete(v47.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return 0;
    }
    goto LABEL_49;
  }
  unsigned int v23 = (std::once_flag::_State_type *)a2[6];
  if (v23)
  {
    v43.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v23, memory_order_acquire) != -1)
    {
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v43;
      v42.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v23, &v42, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  uint64_t Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 72), (const google::protobuf::Descriptor *)a2[13]);
  int v25 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)Prototype + 24))(Prototype);
  if (!v25)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7150);
    BOOL v26 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: dynamic.get() != nullptr: ");
    unint64_t v27 = google::protobuf::internal::LogMessage::operator<<(v26, "Could not create an instance of ");
    LOWORD(v43.__r_.__value_.__l.__data_) = 0;
    v43.__r_.__value_.__s.__data_[2] = 0;
    google::protobuf::FieldDescriptor::DebugStringWithOptions((uint64_t)a2, (uint64_t)&v43, &v42);
    uint64_t v28 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v27, (const std::string::value_type *)&v42);
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&__str, v28);
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  v43.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26F0C4AF8;
  *(_OWORD *)&v43.__r_.__value_.__r.__words[1] = 0uLL;
  uint64_t v44 = 0;
  std::string::size_type v29 = *(void *)this;
  v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26F0C4B40;
  v46.__r_.__value_.__l.__size_ = v29;
  google::protobuf::TextFormat::Parser::Parser((google::protobuf::TextFormat::Parser *)&v42);
  v42.__r_.__value_.__r.__words[0] = (std::string::size_type)&v43;
  v42.__r_.__value_.__l.__size_ = (std::string::size_type)&v46;
  uint64_t v21 = google::protobuf::TextFormat::Parser::ParseFromString(&v42.__r_.__value_.__l.__data_, *(void *)(*((void *)this + 2) + 64), v25);
  if (v21)
  {
    memset(&__str, 0, sizeof(__str));
    google::protobuf::MessageLite::SerializeToString((const google::protobuf::MessageLite *)v25, &__str);
    uint64_t v30 = (std::once_flag::_State_type *)a2[6];
    if (v30)
    {
      uint64_t v49 = a2;
      uint64_t v50 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v30, memory_order_acquire) != -1)
      {
        __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v50;
        __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v49;
        v47.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
        std::__call_once(v30, &v47, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    int v31 = *((_DWORD *)a2 + 14);
    if (v31 == 11) {
      google::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
    }
    int v38 = (std::once_flag::_State_type *)a2[6];
    if (v38)
    {
      uint64_t v49 = a2;
      uint64_t v50 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v38, memory_order_acquire) != -1)
      {
        __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v50;
        __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v49;
        v47.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
        std::__call_once(v38, &v47, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      int v31 = *((_DWORD *)a2 + 14);
    }
    if (v31 != 10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7170);
      unsigned int v39 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v41, v39);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    google::protobuf::UnknownFieldSet::AddGroup(a3);
  }
  std::operator+<char>();
  long long v32 = std::string::append(&v47, "\": ");
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  __str.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  if (v44 >= 0) {
    std::string::size_type size = &v43.__r_.__value_.__s.__data_[8];
  }
  else {
    std::string::size_type size = (const std::string::value_type *)v43.__r_.__value_.__l.__size_;
  }
  if (v44 >= 0) {
    std::string::size_type v35 = HIBYTE(v44);
  }
  else {
    std::string::size_type v35 = v43.__r_.__value_.__r.__words[2];
  }
  float v36 = std::string::append(&__str, size, v35);
  long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  __p[0].__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_42:
      if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_59;
      }
      goto LABEL_60;
    }
  }
  else if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_42;
  }
  operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
LABEL_59:
  }
    operator delete(v47.__r_.__value_.__l.__data_);
LABEL_60:
  ORToolsCpL2AccessVariable::~ORToolsCpL2AccessVariable((ORToolsCpL2AccessVariable *)&v42);
  ORToolsCpL2AccessVariable::~ORToolsCpL2AccessVariable((ORToolsCpL2AccessVariable *)&v46);
  v43.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26F0C4AF8;
  if (SHIBYTE(v44) < 0) {
    operator delete((void *)v43.__r_.__value_.__l.__size_);
  }
  ORToolsCpL2AccessVariable::~ORToolsCpL2AccessVariable((ORToolsCpL2AccessVariable *)&v43);
  if (v25) {
    (*(void (**)(char *))(*(void *)v25 + 8))(v25);
  }
  return v21;
}

void sub_23CDE6C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  google::protobuf::internal::LogMessage::~LogMessage(&a27);
  if (*(char *)(v44 - 105) < 0) {
    operator delete(*(void **)(v43 + 56));
  }
  ORToolsCpL2AccessVariable::~ORToolsCpL2AccessVariable((ORToolsCpL2AccessVariable *)&__p);
  ORToolsCpL2AccessVariable::~ORToolsCpL2AccessVariable((ORToolsCpL2AccessVariable *)&a37);
  if (!v42) {
    _Unwind_Resume(a1);
  }
  (*(void (**)(uint64_t))(*(void *)v42 + 8))(v42);
  _Unwind_Resume(a1);
}

void google::protobuf::anonymous namespace'::AggregateErrorCollector::~AggregateErrorCollector(void **this)
{
  uint64_t v1 = (google::protobuf::_anonymous_namespace_::AggregateErrorCollector *)this;
  *this = &unk_26F0C4AF8;
  if (*((char *)this + 31) < 0)
  {
    operator delete(this[1]);
    this = (void **)v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  ORToolsCpL2AccessVariable::~ORToolsCpL2AccessVariable((ORToolsCpL2AccessVariable *)this);
}

{
  uint64_t vars8;

  *this = &unk_26F0C4AF8;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  ORToolsCpL2AccessVariable::~ORToolsCpL2AccessVariable((ORToolsCpL2AccessVariable *)this);

  JUMPOUT(0x23ECF2BC0);
}

unint64_t google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&v12, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    unsigned __int8 v3 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    std::string v12 = *(std::string *)a2;
    unsigned __int8 v3 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_3:
      if (v3 && v12.__r_.__value_.__s.__data_[0] == 46)
      {
        uint64_t v4 = &v12.__r_.__value_.__s.__data_[1];
        std::string::size_type v5 = v3 - 1;
        if (v5 < 0x7FFFFFFFFFFFFFF8) {
          goto LABEL_6;
        }
        goto LABEL_14;
      }
      goto LABEL_15;
    }
  }
  if (v12.__r_.__value_.__l.__size_ && *v12.__r_.__value_.__l.__data_ == 46)
  {
    uint64_t v4 = (std::string::value_type *)(v12.__r_.__value_.__r.__words[0] + 1);
    std::string::size_type v5 = v12.__r_.__value_.__l.__size_ - 1;
    if (v12.__r_.__value_.__l.__size_ - 1 < 0x7FFFFFFFFFFFFFF8)
    {
LABEL_6:
      if (v5 >= 0x17)
      {
        uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v5 | 7) != 0x17) {
          uint64_t v9 = v5 | 7;
        }
        uint64_t v10 = v9 + 1;
        p_dst = (std::string *)operator new(v9 + 1);
        __dst.__r_.__value_.__l.__size_ = v5;
        __dst.__r_.__value_.__r.__words[2] = v10 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      }
      else
      {
        *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v5;
        p_dst = &__dst;
        if (!v5)
        {
          __dst.__r_.__value_.__s.__data_[0] = 0;
          if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_9:
            std::string v12 = __dst;
            goto LABEL_15;
          }
LABEL_22:
          operator delete(v12.__r_.__value_.__l.__data_);
          goto LABEL_9;
        }
      }
      memmove(p_dst, v4, v5);
      p_dst->__r_.__value_.__s.__data_[v5] = 0;
      if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_14:
    std::string::__throw_length_error[abi:ne180100]();
  }
LABEL_15:
  unint64_t v7 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(void **)(a1 + 32), a1, (uint64_t)&v12);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_23CDE70E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::InternalTypeOnceInit(google::protobuf::FieldDescriptor *this)
{
  v32[2] = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(*((void *)this + 5) + 65))
  {
    uint64_t v2 = *((void *)this + 16);
    if (!v2) {
      goto LABEL_10;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v31, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7298);
    unsigned __int8 v3 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(&v31, "CHECK failed: file()->finished_building_ == true: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v30, v3);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v31.__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 16);
    if (!v2) {
      goto LABEL_10;
    }
  }
  int v4 = google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(*(void *)(*((void *)this + 5) + 16), v2);
  if (v4 == 4)
  {
    *((_DWORD *)this + 14) = 14;
    long long v6 = (char *)this + 112;
    goto LABEL_9;
  }
  if (v4 == 1)
  {
    *((_DWORD *)this + 14) = 11;
    long long v6 = (char *)this + 104;
LABEL_9:
    *(void *)long long v6 = v5;
  }
LABEL_10:
  uint64_t v7 = *((void *)this + 14);
  if (!v7 || *((void *)this + 18)) {
    return;
  }
  if (*((void *)this + 17))
  {
    char v8 = *(long long **)(v7 + 8);
    if (*((char *)v8 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v31, *(const std::string::value_type **)v8, *((void *)v8 + 1));
    }
    else
    {
      long long v9 = *v8;
      v31.__r_.__value_.__r.__words[2] = *((void *)v8 + 2);
      *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v9;
    }
    std::string::size_type v10 = std::string::rfind(&v31, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v10 == -1)
    {
      std::string::operator=(&v31, *((const std::string **)this + 17));
      goto LABEL_44;
    }
    std::string::size_type size = HIBYTE(v31.__r_.__value_.__r.__words[2]);
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    {
      std::string v12 = &v31;
    }
    else
    {
      std::string::size_type size = v31.__r_.__value_.__l.__size_;
      std::string v12 = (std::string *)v31.__r_.__value_.__r.__words[0];
    }
    if (size >= v10) {
      std::string::size_type v13 = v10;
    }
    else {
      std::string::size_type v13 = size;
    }
    if (v13 >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    if (v13 >= 0x17)
    {
      uint64_t v15 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17) {
        uint64_t v15 = v13 | 7;
      }
      uint64_t v16 = v15 + 1;
      p_dst = (std::string *)operator new(v15 + 1);
      __dst.__r_.__value_.__l.__size_ = v13;
      __dst.__r_.__value_.__r.__words[2] = v16 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v13;
      p_dst = &__dst;
      if (!v13) {
        goto LABEL_32;
      }
    }
    memmove(p_dst, v12, v13);
LABEL_32:
    p_dst->__r_.__value_.__s.__data_[v13] = 0;
    int v17 = std::string::append(&__dst, ".");
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    uint64_t v19 = *((void *)this + 17);
    int v20 = *(char *)(v19 + 23);
    if (v20 >= 0) {
      uint64_t v21 = (const std::string::value_type *)*((void *)this + 17);
    }
    else {
      uint64_t v21 = *(const std::string::value_type **)v19;
    }
    if (v20 >= 0) {
      std::string::size_type v22 = *(unsigned __int8 *)(v19 + 23);
    }
    else {
      std::string::size_type v22 = *(void *)(v19 + 8);
    }
    unsigned int v23 = std::string::append(&v30, v21, v22);
    std::string::size_type v24 = v23->__r_.__value_.__r.__words[0];
    v32[0] = v23->__r_.__value_.__l.__size_;
    *(void *)((char *)v32 + 7) = *(std::string::size_type *)((char *)&v23->__r_.__value_.__r.__words[1] + 7);
    char v25 = HIBYTE(v23->__r_.__value_.__r.__words[2]);
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v31.__r_.__value_.__l.__data_);
    }
    v31.__r_.__value_.__r.__words[0] = v24;
    v31.__r_.__value_.__l.__size_ = v32[0];
    *(std::string::size_type *)((char *)&v31.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v32 + 7);
    *((unsigned char *)&v31.__r_.__value_.__s + 23) = v25;
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
LABEL_44:
    if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(*(void *)(*((void *)this + 5) + 16), (uint64_t)&v31) == 5)
    {
      *((void *)this + 18) = v26;
      if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_46:
        if (*((void *)this + 18)) {
          return;
        }
        goto LABEL_50;
      }
    }
    else if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_46;
    }
    operator delete(v31.__r_.__value_.__l.__data_);
    if (*((void *)this + 18)) {
      return;
    }
  }
LABEL_50:
  uint64_t v27 = *((void *)this + 14);
  if (!*(_DWORD *)(v27 + 44))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v31, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7330);
    uint64_t v28 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(&v31, "CHECK failed: enum_type_->value_count(): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v30, v28);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v31.__r_.__value_.__l.__data_);
    uint64_t v27 = *((void *)this + 14);
  }
  *((void *)this + 18) = *(void *)(v27 + 48);
}

void sub_23CDE7460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE7474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE7488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::PrintableNameForExtension(google::protobuf::FieldDescriptor *this)
{
  if (!*((unsigned char *)this + 67) || !*(unsigned char *)(*(void *)(*((void *)this + 10) + 32) + 72)) {
    return *((void *)this + 1);
  }
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    uint64_t v7 = this;
    char v8 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      std::string::size_type v10 = &v8;
      long long v11 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&v7;
      long long v9 = &v10;
      std::__call_once(v2, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)this + 14) != 11 || *((_DWORD *)this + 15) != 1) {
    return *((void *)this + 1);
  }
  uint64_t v3 = *((void *)this + 12);
  int v4 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v4)
  {
    char v8 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      std::string::size_type v10 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
      long long v11 = &v8;
      long long v9 = &v10;
      std::__call_once(v4, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (v3 != *((void *)this + 13)) {
    return *((void *)this + 1);
  }
  long long v6 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v6)
  {
    char v8 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))this;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      std::string::size_type v10 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
      long long v11 = &v8;
      long long v9 = &v10;
      std::__call_once(v6, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    uint64_t v3 = *((void *)this + 13);
  }
  return *(void *)(v3 + 8);
}

void google::protobuf::FileDescriptor::InternalDependenciesOnceInit(google::protobuf::FileDescriptor *this)
{
  if (!*((unsigned char *)this + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7374);
    uint64_t v2 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: finished_building_ == true: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v6, v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  int v3 = *((_DWORD *)this + 8);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*((void *)this + 10) + 8 * i);
      if (v5)
      {
        *(void *)(*((void *)this + 9) + 8 * i) = google::protobuf::DescriptorPool::FindFileByName(*((void *)this + 2), v5);
        int v3 = *((_DWORD *)this + 8);
      }
    }
  }
}

void sub_23CDE775C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE7770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::LazyDescriptor::OnceInternal(google::protobuf::internal::LazyDescriptor *this)
{
  if (*(unsigned char *)(*((void *)this + 3) + 65))
  {
    if (*(void *)this) {
      return;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.cc", 7437);
    uint64_t v2 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: file_->finished_building_: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    if (*(void *)this) {
      return;
    }
  }
  uint64_t v3 = *((void *)this + 1);
  if (v3)
  {
    if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(*(void *)(*((void *)this + 3) + 16), v3) == 1)*(void *)this = v4; {
  }
    }
}

void sub_23CDE7840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE7854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t **std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(void *a1, const char **a2)
{
  uint64_t v2 = *a2;
  char v3 = **a2;
  if (v3)
  {
    unint64_t v4 = 0;
    char v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      unint64_t v4 = 5 * v4 + v3;
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
    int8x8_t v7 = (int8x8_t)a1[1];
    if (v7) {
      goto LABEL_5;
    }
    return 0;
  }
  unint64_t v4 = 0;
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
LABEL_5:
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v7) {
      unint64_t v9 = v4 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v7 - 1) & v4;
  }
  long long v11 = *(uint64_t ****)(*a1 + 8 * v9);
  if (!v11) {
    return 0;
  }
  std::string::size_type v10 = *v11;
  if (*v11)
  {
    if (v8.u32[0] < 2uLL)
    {
      uint64_t v12 = *(void *)&v7 - 1;
      while (1)
      {
        int v14 = v10[1];
        if ((uint64_t *)v4 == v14)
        {
          if (!strcmp((const char *)v10[2], v2)) {
            return v10;
          }
        }
        else if (((unint64_t)v14 & v12) != v9)
        {
          return 0;
        }
        std::string::size_type v10 = (uint64_t **)*v10;
        if (!v10) {
          return v10;
        }
      }
    }
    do
    {
      unint64_t v13 = (unint64_t)v10[1];
      if (v4 == v13)
      {
        if (!strcmp((const char *)v10[2], v2)) {
          return v10;
        }
      }
      else
      {
        if (v13 >= *(void *)&v7) {
          v13 %= *(void *)&v7;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      std::string::size_type v10 = (uint64_t **)*v10;
    }
    while (v10);
  }
  return v10;
}

{
  const char *v2;
  char v3;
  unint64_t v4;
  unsigned __int8 *v5;
  int v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  uint64_t **v10;
  uint64_t ***v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;

  uint64_t v2 = *a2;
  char v3 = **a2;
  if (v3)
  {
    unint64_t v4 = 0;
    char v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      unint64_t v4 = 5 * v4 + v3;
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
    int8x8_t v7 = (int8x8_t)a1[1];
    if (v7) {
      goto LABEL_5;
    }
    return 0;
  }
  unint64_t v4 = 0;
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
LABEL_5:
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v7) {
      unint64_t v9 = v4 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v7 - 1) & v4;
  }
  long long v11 = *(uint64_t ****)(*a1 + 8 * v9);
  if (!v11) {
    return 0;
  }
  std::string::size_type v10 = *v11;
  if (*v11)
  {
    if (v8.u32[0] < 2uLL)
    {
      uint64_t v12 = *(void *)&v7 - 1;
      while (1)
      {
        int v14 = v10[1];
        if (v14 == (uint64_t *)v4)
        {
          if (!strcmp((const char *)v10[2], v2)) {
            return v10;
          }
        }
        else if (((unint64_t)v14 & v12) != v9)
        {
          return 0;
        }
        std::string::size_type v10 = (uint64_t **)*v10;
        if (!v10) {
          return v10;
        }
      }
    }
    do
    {
      unint64_t v13 = (unint64_t)v10[1];
      if (v13 == v4)
      {
        if (!strcmp((const char *)v10[2], v2)) {
          return v10;
        }
      }
      else
      {
        if (v13 >= *(void *)&v7) {
          v13 %= *(void *)&v7;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      std::string::size_type v10 = (uint64_t **)*v10;
    }
    while (v10);
  }
  return v10;
}

uint64_t google::protobuf::internal::OnShutdownDelete<google::protobuf::EncodedDescriptorDatabase>(google::protobuf::EncodedDescriptorDatabase *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FileDescriptorTables const*),google::protobuf::FileDescriptorTables const*&&>>(uint64_t a1)
{
  return (***(uint64_t (****)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t *google::protobuf::FileDescriptorTables::FindNestedSymbol(void *a1, uint64_t *a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) >= 0) {
    unint64_t v4 = (const char *)a3;
  }
  else {
    unint64_t v4 = *(const char **)a3;
  }
  int8x8_t v5 = (int8x8_t)a1[1];
  char v6 = *v4;
  if (*v4)
  {
    uint64_t v7 = 0;
    uint8x8_t v8 = (unsigned __int8 *)(v4 + 1);
    do
    {
      uint64_t v7 = 5 * v7 + v6;
      int v9 = *v8++;
      char v6 = v9;
    }
    while (v9);
    if (!*(void *)&v5) {
      return 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if (!*(void *)&v5) {
      return 0;
    }
  }
  unint64_t v10 = v7 ^ (16777619 * (void)a2);
  uint8x8_t v11 = (uint8x8_t)vcnt_s8(v5);
  v11.i16[0] = vaddlv_u8(v11);
  if (v11.u32[0] > 1uLL)
  {
    uint64_t v12 = v7 ^ (16777619 * (void)a2);
    if (v10 >= *(void *)&v5) {
      uint64_t v12 = v10 % *(void *)&v5;
    }
  }
  else
  {
    uint64_t v12 = v10 & (*(void *)&v5 - 1);
  }
  unint64_t v13 = *(uint64_t ****)(*a1 + 8 * v12);
  if (v13)
  {
    int v14 = *v13;
    if (*v13)
    {
      if (v11.u32[0] < 2uLL)
      {
        uint64_t v15 = *(void *)&v5 - 1;
        while (1)
        {
          int v17 = v14[1];
          if ((uint64_t *)v10 == v17)
          {
            if (v14[2] == a2 && !strcmp((const char *)v14[3], v4)) {
              return v14[4];
            }
          }
          else if (((unint64_t)v17 & v15) != v12)
          {
            return 0;
          }
          int v14 = (uint64_t **)*v14;
          if (!v14) {
            return 0;
          }
        }
      }
      do
      {
        unint64_t v16 = (unint64_t)v14[1];
        if (v10 == v16)
        {
          if (v14[2] == a2 && !strcmp((const char *)v14[3], v4)) {
            return v14[4];
          }
        }
        else
        {
          if (v16 >= *(void *)&v5) {
            v16 %= *(void *)&v5;
          }
          if (v16 != v12) {
            return 0;
          }
        }
        int v14 = (uint64_t **)*v14;
      }
      while (v14);
    }
  }
  return 0;
}

void google::protobuf::anonymous namespace'::SourceLocationCommentPrinter::FormatComment(std::string *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  if (*(char *)(a3 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string v21 = *(std::string *)a3;
  }
  google::protobuf::StripWhitespace(&v21);
  std::string __p = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  google::protobuf::SplitStringUsing((unsigned __int8 *)&v21, "\n", (uint64_t)&__p);
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  char v6 = (char *)__p;
  int8x8_t v5 = v19;
  if (v19 == __p)
  {
    char v6 = v19;
    if (v19) {
      goto LABEL_17;
    }
LABEL_26:
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_19;
    }
    return;
  }
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  do
  {
    int v9 = *(char *)(a2 + 127);
    BOOL v10 = v9 < 0;
    uint64_t v11 = *(void *)(a2 + 104);
    uint64_t v12 = *(void *)(a2 + 112);
    if (v9 >= 0) {
      uint64_t v11 = a2 + 104;
    }
    uint64_t v40 = v11;
    unint64_t v13 = &v6[v7];
    int v9 = v9;
    if (v10) {
      int v9 = v12;
    }
    int v41 = v9;
    if (v13[23] >= 0) {
      int v14 = &v6[v7];
    }
    else {
      int v14 = *(char **)v13;
    }
    int v38 = v14;
    int v15 = v13[23];
    uint64_t v16 = *((void *)v13 + 1);
    if ((v15 & 0x80u) != 0) {
      int v15 = v16;
    }
    int v39 = v15;
    uint64_t v36 = 0;
    int v37 = -1;
    uint64_t v34 = 0;
    int v35 = -1;
    uint64_t v32 = 0;
    int v33 = -1;
    uint64_t v30 = 0;
    int v31 = -1;
    uint64_t v28 = 0;
    int v29 = -1;
    uint64_t v26 = 0;
    int v27 = -1;
    uint64_t v24 = 0;
    int v25 = -1;
    uint64_t v22 = 0;
    int v23 = -1;
    *((void *)&v17 + 1) = &v26;
    *(void *)&long long v17 = &v28;
    google::protobuf::strings::SubstituteAndAppend(a1, "$0// $1\n", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)&v32, (uint64_t)&v30, v17, (uint64_t)&v24, (uint64_t)&v22);
    ++v8;
    char v6 = (char *)__p;
    int8x8_t v5 = v19;
    v7 += 24;
  }
  while (0xAAAAAAAAAAAAAAABLL * ((v19 - (unsigned char *)__p) >> 3) > v8);
  if (!__p) {
    goto LABEL_26;
  }
LABEL_17:
  if (v5 == v6)
  {
    uint64_t v19 = v6;
    operator delete(v5);
    if ((SHIBYTE(v21.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_19;
  }
  do
  {
    if (*(v5 - 1) < 0) {
      operator delete(*((void **)v5 - 3));
    }
    v5 -= 24;
  }
  while (v5 != v6);
  uint64_t v19 = v6;
  operator delete(__p);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
LABEL_19:
  }
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_23CDE7E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL google::protobuf::anonymous namespace'::RetrieveOptions(int a1, google::protobuf::Message *a2, uint64_t a3, char **a4)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  if (*(void *)(*(void *)((*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2) + 16)
                 + 16) != a3)
  {
    uint64_t v8 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(void **)(a3 + 32), a3, *(void *)(v8 + 8)) == 1&& v9 != 0)
    {
      google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v12);
    }
  }
}

void sub_23CDE80C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  if (v19)
  {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a19);
    _Unwind_Resume(a1);
  }
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a19);
  _Unwind_Resume(a1);
}

void sub_23CDE8158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::anonymous namespace'::RetrieveOptionsAssumingRightPool(int a1, google::protobuf::Message *a2, char **a3)
{
  v74[2] = *MEMORY[0x263EF8340];
  char v6 = (std::string::size_type *)*a3;
  for (uint64_t i = (std::string::size_type *)a3[1]; i != v6; i -= 3)
  {
    if (*((char *)i - 1) < 0) {
      operator delete((void *)*(i - 3));
    }
  }
  a3[1] = (char *)v6;
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  unsigned int v70 = 0;
  uint64_t v71 = 0;
  uint64_t v72 = 0;
  std::string::size_type v59 = (const std::string::value_type ***)v8;
  google::protobuf::Reflection::ListFields(v8, a2, (uint64_t *)&v70, v9, v10);
  uint64_t v13 = v71;
  if (v71 != v70)
  {
    unint64_t v14 = 0;
    int v61 = a1 + 1;
    std::string::size_type __n = 2 * a1;
    uint64_t v13 = v70;
    while (1)
    {
      int v15 = (const google::protobuf::FieldDescriptor *)v13[v14];
      int v63 = *((_DWORD *)v15 + 15);
      if (v63 != 3) {
        break;
      }
      int v16 = google::protobuf::Reflection::FieldSize(v59, a2, v15, v11, v12);
      if (v16 >= 1) {
        goto LABEL_13;
      }
LABEL_8:
      ++v14;
      uint64_t v13 = v70;
      if (v14 >= v71 - v70) {
        goto LABEL_89;
      }
    }
    int v16 = 1;
LABEL_13:
    unsigned int v17 = 0;
    int v62 = v16;
    while (1)
    {
      memset(&v69, 0, sizeof(v69));
      uint64_t v18 = v70[v14];
      uint64_t v19 = *(std::once_flag::_State_type **)(v18 + 48);
      if (v19)
      {
        uint64_t v73 = v70[v14];
        v74[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
        {
          v64.__r_.__value_.__r.__words[0] = (std::string::size_type)v74;
          v64.__r_.__value_.__l.__size_ = (std::string::size_type)&v73;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v64;
          std::__call_once(v19, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if ((*(_DWORD *)(v18 + 56) & 0xFFFFFFFE) != 0xA) {
        google::protobuf::TextFormat::PrintFieldValueToString();
      }
      memset(&__p, 0, sizeof(__p));
      google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)&v64);
      LODWORD(v64.__r_.__value_.__l.__data_) = v61;
      if (v63 == 3) {
        uint64_t v20 = v17;
      }
      else {
        uint64_t v20 = 0xFFFFFFFFLL;
      }
      google::protobuf::TextFormat::Printer::PrintFieldValueToString((google::protobuf::TextFormat::Printer *)&v64, a2, (const google::protobuf::FieldDescriptor *)v70[v14], (const char *)v20, (uint64_t)&__p);
      std::string::append(&v69, "{\n");
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string::append(&v69, (const std::string::value_type *)p_p, size);
      std::string::append(&v69, __n, 32);
      std::string::append(&v69, "}");
      std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)v67, v67[1]);
      std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy((uint64_t)v66, v66[1]);
      uint64_t v23 = v65;
      uint64_t v65 = 0;
      if (v23) {
        (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      memset(&v64, 0, sizeof(v64));
      uint64_t v24 = v70[v14];
      if (*(unsigned char *)(v24 + 67))
      {
        std::operator+<char>();
        int v25 = std::string::append(&__p, ")");
        std::string::size_type v26 = v25->__r_.__value_.__r.__words[0];
        v74[0] = v25->__r_.__value_.__l.__size_;
        *(void *)((char *)v74 + 7) = *(std::string::size_type *)((char *)&v25->__r_.__value_.__r.__words[1] + 7);
        char v27 = HIBYTE(v25->__r_.__value_.__r.__words[2]);
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v64.__r_.__value_.__l.__data_);
        }
        v64.__r_.__value_.__r.__words[0] = v26;
        v64.__r_.__value_.__l.__size_ = v74[0];
        *(std::string::size_type *)((char *)&v64.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v74 + 7);
        *((unsigned char *)&v64.__r_.__value_.__s + 23) = v27;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        std::string::operator=(&v64, *(const std::string **)v24);
      }
      int v28 = SHIBYTE(v64.__r_.__value_.__r.__words[2]);
      if ((v64.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v29 = HIBYTE(v64.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v29 = v64.__r_.__value_.__l.__size_;
      }
      unint64_t v30 = v29 + 3;
      if (v29 + 3 >= 0x7FFFFFFFFFFFFFF8) {
        std::string::__throw_length_error[abi:ne180100]();
      }
      if (v30 >= 0x17)
      {
        uint64_t v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v30 | 7) != 0x17) {
          uint64_t v32 = v30 | 7;
        }
        uint64_t v33 = v32 + 1;
        int v31 = (std::string *)operator new(v32 + 1);
        __p.__r_.__value_.__l.__size_ = v29 + 3;
        __p.__r_.__value_.__r.__words[2] = v33 | 0x8000000000000000;
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v31;
      }
      else
      {
        memset(&__p, 0, sizeof(__p));
        int v31 = &__p;
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = v29 + 3;
        if (!v29) {
          goto LABEL_53;
        }
      }
      if (v28 >= 0) {
        uint64_t v34 = &v64;
      }
      else {
        uint64_t v34 = (std::string *)v64.__r_.__value_.__r.__words[0];
      }
      memmove(v31, v34, v29);
LABEL_53:
      *(_DWORD *)((char *)&v31->__r_.__value_.__l.__data_ + v29) = 2112800;
      if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v35 = &v69;
      }
      else {
        int v35 = (std::string *)v69.__r_.__value_.__r.__words[0];
      }
      if ((v69.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v36 = HIBYTE(v69.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v36 = v69.__r_.__value_.__l.__size_;
      }
      int v37 = std::string::append(&__p, (const std::string::value_type *)v35, v36);
      std::string::size_type v38 = v37->__r_.__value_.__r.__words[0];
      v74[0] = v37->__r_.__value_.__l.__size_;
      *(void *)((char *)v74 + 7) = *(std::string::size_type *)((char *)&v37->__r_.__value_.__r.__words[1] + 7);
      char v39 = HIBYTE(v37->__r_.__value_.__r.__words[2]);
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      v37->__r_.__value_.__r.__words[0] = 0;
      int v41 = (std::string::size_type *)a3[1];
      unint64_t v40 = (unint64_t)a3[2];
      if ((unint64_t)v41 >= v40)
      {
        uint64_t v43 = (std::string::size_type *)*a3;
        unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * (((char *)v41 - *a3) >> 3);
        unint64_t v45 = v44 + 1;
        if (v44 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
        }
        std::string v46 = a2;
        unint64_t v47 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v40 - (void)v43) >> 3);
        if (2 * v47 > v45) {
          unint64_t v45 = 2 * v47;
        }
        if (v47 >= 0x555555555555555) {
          unint64_t v48 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v48 = v45;
        }
        if (v48)
        {
          if (v48 > 0xAAAAAAAAAAAAAAALL) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v49 = (char *)operator new(24 * v48);
        }
        else
        {
          uint64_t v49 = 0;
        }
        uint64_t v50 = &v49[24 * v44];
        uint64_t v51 = v74[0];
        *(void *)uint64_t v50 = v38;
        *((void *)v50 + 1) = v51;
        int v52 = &v49[24 * v48];
        *(void *)(v50 + 15) = *(void *)((char *)v74 + 7);
        v50[23] = v39;
        uint64_t v42 = v50 + 24;
        if (v41 == v43)
        {
          *a3 = v50;
          a3[1] = v42;
          a3[2] = v52;
          a2 = v46;
        }
        else
        {
          a2 = v46;
          do
          {
            long long v53 = *(_OWORD *)(v41 - 3);
            *((void *)v50 - 1) = *(v41 - 1);
            *(_OWORD *)(v50 - 24) = v53;
            v50 -= 24;
            *(v41 - 2) = 0;
            *(v41 - 1) = 0;
            *(v41 - 3) = 0;
            v41 -= 3;
          }
          while (v41 != v43);
          int v41 = (std::string::size_type *)*a3;
          uint64_t v54 = (std::string::size_type *)a3[1];
          *a3 = v50;
          a3[1] = v42;
          for (a3[2] = v52; v54 != v41; v54 -= 3)
          {
            if (*((char *)v54 - 1) < 0) {
              operator delete((void *)*(v54 - 3));
            }
          }
        }
        if (v41) {
          operator delete(v41);
        }
      }
      else
      {
        *int v41 = v38;
        v41[1] = v74[0];
        *(std::string::size_type *)((char *)v41 + 15) = *(void *)((char *)v74 + 7);
        *((unsigned char *)v41 + 23) = v39;
        uint64_t v42 = (char *)(v41 + 3);
      }
      a3[1] = v42;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        int v55 = v62;
        if ((SHIBYTE(v64.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_84:
          if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
            goto LABEL_88;
          }
          goto LABEL_14;
        }
      }
      else
      {
        int v55 = v62;
        if ((SHIBYTE(v64.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_84;
        }
      }
      operator delete(v64.__r_.__value_.__l.__data_);
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
LABEL_88:
      }
        operator delete(v69.__r_.__value_.__l.__data_);
LABEL_14:
      if (++v17 == v55) {
        goto LABEL_8;
      }
    }
  }
LABEL_89:
  uint64_t v57 = (std::string::size_type *)*a3;
  uint64_t v56 = (std::string::size_type *)a3[1];
  if (v13)
  {
    uint64_t v71 = v13;
    operator delete(v13);
  }
  return v57 != v56;
}

void sub_23CDE87E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  uint64_t v43 = *(void **)(v41 - 144);
  if (!v43) {
    _Unwind_Resume(exception_object);
  }
  *(void *)(v41 - 136) = v43;
  operator delete(v43);
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Printer::~Printer(google::protobuf::TextFormat::Printer *this)
{
  std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy((uint64_t)this + 56, *((void **)this + 8));
  std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy((uint64_t)this + 32, *((void **)this + 5));
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
}

void std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::__map_value_compare<google::protobuf::Descriptor const*,std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>,std::less<google::protobuf::Descriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::Descriptor const*,std::unique_ptr<google::protobuf::TextFormat::MessagePrinter const>>>>::destroy(a1, a2[1]);
    uint64_t v4 = a2[5];
    a2[5] = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    operator delete(a2);
  }
}

void std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy(a1, a2[1]);
    uint64_t v4 = a2[5];
    a2[5] = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    operator delete(a2);
  }
}

std::string *google::protobuf::Join<std::vector<std::string>>@<X0>(std::string *result@<X0>, const std::string::value_type *a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::size_type v5 = result->__r_.__value_.__r.__words[0];
  std::string::size_type size = result->__r_.__value_.__l.__size_;
  if (result->__r_.__value_.__r.__words[0] != size)
  {
    std::string::size_type v8 = *(void *)v5;
    uint64_t v7 = *(void *)(v5 + 8);
    if (*(char *)(v5 + 23) >= 0)
    {
      std::string::size_type v8 = result->__r_.__value_.__r.__words[0];
      uint64_t v7 = *(unsigned __int8 *)(v5 + 23);
    }
    std::string::size_type v15 = v8;
    uint64_t v16 = v7;
    uint64_t result = google::protobuf::StrAppend(a3, (uint64_t)&v15);
    std::string::size_type v9 = v5 + 24;
    if (v9 != size)
    {
      uint64_t v10 = -24;
      do
      {
        if (v10) {
          std::string::append(a3, a2);
        }
        int v11 = *(char *)(v9 + 23);
        BOOL v12 = v11 < 0;
        std::string::size_type v13 = *(void *)v9;
        if (v11 >= 0) {
          std::string::size_type v13 = v9;
        }
        uint64_t v14 = *(unsigned __int8 *)(v9 + 23);
        if (v12) {
          uint64_t v14 = *(void *)(v9 + 8);
        }
        std::string::size_type v15 = v13;
        uint64_t v16 = v14;
        uint64_t result = google::protobuf::StrAppend(a3, (uint64_t)&v15);
        v9 += 24;
        v10 -= 24;
      }
      while (v9 != size);
    }
  }
  return result;
}

void sub_23CDE8B84(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::mutex *google::protobuf::internal::OnShutdownDelete<google::protobuf::FileDescriptorTables>(google::protobuf::FileDescriptorTables *)::{lambda(void const*)#1}::__invoke(std::mutex *result)
{
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    JUMPOUT(0x23ECF2BC0);
  }
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE8CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8CC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE8DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE8EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE8F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE9014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE903C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE9134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE915C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE9254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE927C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE9374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE939C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE93B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE9494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE94A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE94BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE94D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE95B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE95C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE95DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE95F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE96D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE96E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE96FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE97F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE981C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::anonymous namespace'::NewAllowedProto3Extendee(google::protobuf::_anonymous_namespace_ *this)
{
}

void sub_23CDE9A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::OnShutdownDelete<std::set<std::string>>(std::set<std::string> *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result)
  {
    std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy(result, *(char **)(result + 8));
    JUMPOUT(0x23ECF2BC0);
  }
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    std::string::size_type v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE9BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDE9C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::anonymous namespace'::AggregateErrorCollector::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::string::size_type v5 = (std::string *)(a1 + 8);
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 31)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(void *)(a1 + 16)) {
LABEL_3:
  }
    std::string::append((std::string *)(a1 + 8), "; ");
LABEL_4:
  int v6 = *(char *)(a4 + 23);
  if (v6 >= 0) {
    char v7 = (const std::string::value_type *)a4;
  }
  else {
    char v7 = *(const std::string::value_type **)a4;
  }
  if (v6 >= 0) {
    std::string::size_type v8 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    std::string::size_type v8 = *(void *)(a4 + 8);
  }

  return std::string::append(v5, v7, v8);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::~AggregateOptionFinder(google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder *this)
{
  ORToolsCpL2AccessVariable::~ORToolsCpL2AccessVariable(this);

  JUMPOUT(0x23ECF2BC0);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindExtension(uint64_t a1, uint64_t a2, std::string *a3)
{
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 152))(a2);
  int v6 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(*(void *)(a1 + 8), a3, *(void *)(v5 + 8), 0, 1);
  uint64_t v8 = v7;
  if (v6 == 1)
  {
    if (!*(unsigned char *)(*(void *)(v5 + 32) + 72) || *(int *)(v7 + 128) < 1) {
      return 0;
    }
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(v8 + 80);
      uint64_t v12 = v11 + v9;
      if (*(void *)(v11 + v9 + 80) == v5)
      {
        std::string::size_type v13 = *(std::once_flag::_State_type **)(v12 + 48);
        if (v13)
        {
          uint64_t v16 = v11 + v9;
          uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
          {
            uint64_t v19 = &v17;
            uint64_t v20 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))&v16;
            uint64_t v18 = &v19;
            std::__call_once(v13, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v11 + v9 + 56) == 11 && *(_DWORD *)(v11 + v9 + 60) == 1)
        {
          uint64_t v14 = *(std::once_flag::_State_type **)(v12 + 48);
          if (v14)
          {
            uint64_t v17 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))(v11 + v9);
            if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
            {
              uint64_t v19 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
              uint64_t v20 = &v17;
              uint64_t v18 = &v19;
              std::__call_once(v14, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          if (*(void *)(v11 + v9 + 104) == v8) {
            break;
          }
        }
      }
      ++v10;
      v9 += 152;
      if (v10 >= *(int *)(v8 + 128)) {
        return 0;
      }
    }
    return v11 + v9;
  }
  else if (v6 != 2 || !*(unsigned char *)(v7 + 67))
  {
    return 0;
  }
  return v8;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(uint64_t a1, int a2)
{
  if ((a2 & 0x80000000) == 0)
  {
    if (*(_DWORD *)(a1 + 8) > a2) {
      return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
    }
    goto LABEL_5;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1693);
  uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
LABEL_5:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_23CDE9FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDEA010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDEA024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDEA038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  if (!a2)
  {
    std::string::size_type v15 = *(void **)a1;
    *(void *)a1 = 0;
    if (v15) {
      operator delete(v15);
    }
    *(void *)(a1 + 8) = 0;
    return;
  }
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  uint64_t v4 = operator new(8 * a2);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v4;
  if (v5) {
    operator delete(v5);
  }
  uint64_t v6 = 0;
  *(void *)(a1 + 8) = a2;
  do
    *(void *)(*(void *)a1 + 8 * v6++) = 0;
  while (a2 != v6);
  uint64_t v8 = a1 + 16;
  char v7 = *(void **)(a1 + 16);
  if (v7)
  {
    unint64_t v9 = v7[1];
    unint64_t v10 = a2 - 1;
    if ((a2 & (a2 - 1)) == 0)
    {
      uint64_t v11 = v9 & v10;
      *(void *)(*(void *)a1 + 8 * v11) = v8;
      while (1)
      {
        uint64_t v12 = (void *)*v7;
        if (!*v7) {
          break;
        }
        uint64_t v13 = v12[1] & v10;
        if (v13 == v11)
        {
          char v7 = (void *)*v7;
        }
        else if (*(void *)(*(void *)a1 + 8 * v13))
        {
          *char v7 = *v12;
          uint64_t v14 = 8 * v13;
          *uint64_t v12 = **(void **)(*(void *)a1 + v14);
          **(void **)(*(void *)a1 + v14) = v12;
        }
        else
        {
          *(void *)(*(void *)a1 + 8 * v13) = v7;
          char v7 = v12;
          uint64_t v11 = v13;
        }
      }
      return;
    }
    if (v9 >= a2) {
      v9 %= a2;
    }
    *(void *)(*(void *)a1 + 8 * v9) = v8;
    uint64_t v16 = (void *)*v7;
    if (*v7)
    {
      while (1)
      {
        unint64_t v18 = v16[1];
        if (v18 >= a2) {
          v18 %= a2;
        }
        if (v18 == v9) {
          goto LABEL_25;
        }
        if (*(void *)(*(void *)a1 + 8 * v18))
        {
          *char v7 = *v16;
          uint64_t v17 = 8 * v18;
          *uint64_t v16 = **(void **)(*(void *)a1 + v17);
          **(void **)(*(void *)a1 + v17) = v16;
          uint64_t v16 = v7;
LABEL_25:
          char v7 = v16;
          uint64_t v16 = (void *)*v16;
          if (!v16) {
            return;
          }
        }
        else
        {
          *(void *)(*(void *)a1 + 8 * v18) = v7;
          char v7 = v16;
          uint64_t v16 = (void *)*v16;
          unint64_t v9 = v18;
          if (!v16) {
            return;
          }
        }
      }
    }
  }
}

uint64_t *std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,google::protobuf::Descriptor::WellKnownType> const&>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (unsigned char *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v8 = v7;
  }
  unint64_t v9 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)v42, (uint64_t *)a2, v8);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v3 = v9;
      if (v9 >= v11) {
        unint64_t v3 = v9 % v11;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v9;
    }
    uint64_t v13 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      uint64_t v14 = *v13;
      if (*v13)
      {
        char v15 = v5[23];
        if (v15 >= 0) {
          uint64_t v16 = v5[23];
        }
        else {
          uint64_t v16 = *((void *)v5 + 1);
        }
        if (v15 < 0) {
          uint64_t v5 = *(unsigned char **)v5;
        }
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v21 = v14[1];
            if (v21 == v10)
            {
              uint64_t v22 = *((unsigned __int8 *)v14 + 39);
              if ((v22 & 0x80u) == 0) {
                uint64_t v23 = *((unsigned __int8 *)v14 + 39);
              }
              else {
                uint64_t v23 = v14[3];
              }
              if (v23 == v16)
              {
                if ((v22 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v14[2], v5, v14[3])) {
                    return v14;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v14 + 39)) {
                    return v14;
                  }
                  uint64_t v24 = 0;
                  while (*((unsigned __int8 *)v14 + v24 + 16) == v5[v24])
                  {
                    if (v22 == ++v24) {
                      return v14;
                    }
                  }
                }
              }
            }
            else if ((v21 & (v11 - 1)) != v3)
            {
              goto LABEL_51;
            }
            uint64_t v14 = (uint64_t *)*v14;
            if (!v14) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v17 = v14[1];
          if (v17 == v10)
          {
            uint64_t v18 = *((unsigned __int8 *)v14 + 39);
            if ((v18 & 0x80u) == 0) {
              uint64_t v19 = *((unsigned __int8 *)v14 + 39);
            }
            else {
              uint64_t v19 = v14[3];
            }
            if (v19 == v16)
            {
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp((const void *)v14[2], v5, v14[3])) {
                  return v14;
                }
              }
              else
              {
                if (!*((unsigned char *)v14 + 39)) {
                  return v14;
                }
                uint64_t v20 = 0;
                while (*((unsigned __int8 *)v14 + v20 + 16) == v5[v20])
                {
                  if (v18 == ++v20) {
                    return v14;
                  }
                }
              }
            }
          }
          else
          {
            if (v17 >= v11) {
              v17 %= v11;
            }
            if (v17 != v3) {
              break;
            }
          }
          uint64_t v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_51:
  int v25 = (char *)operator new(0x30uLL);
  v42[0] = v25;
  v42[1] = a1 + 16;
  char v43 = 0;
  *(void *)int v25 = 0;
  *((void *)v25 + 1) = v10;
  std::string::size_type v26 = (std::string *)(v25 + 16);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v26, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v26->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    *((void *)v25 + 4) = *(void *)(a3 + 16);
  }
  *((_DWORD *)v25 + 10) = *(_DWORD *)(a3 + 24);
  char v43 = 1;
  float v27 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v28 = *(float *)(a1 + 32);
  if (!v11 || (float)(v28 * (float)v11) < v27)
  {
    BOOL v31 = 1;
    if (v11 >= 3) {
      BOOL v31 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v32 = v31 | (2 * v11);
    unint64_t v33 = vcvtps_u32_f32(v27 / v28);
    if (v32 <= v33) {
      size_t prime = v33;
    }
    else {
      size_t prime = v32;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v35 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v35) {
      goto LABEL_68;
    }
    if (prime < *(void *)&v35)
    {
      unint64_t v36 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v35 < 3uLL || (uint8x8_t v37 = (uint8x8_t)vcnt_s8(v35), v37.i16[0] = vaddlv_u8(v37), v37.u32[0] > 1uLL))
      {
        unint64_t v36 = std::__next_prime(v36);
      }
      else
      {
        uint64_t v38 = 1 << -(char)__clz(v36 - 1);
        if (v36 >= 2) {
          unint64_t v36 = v38;
        }
      }
      if (prime <= v36) {
        size_t prime = v36;
      }
      if (prime < *(void *)&v35) {
LABEL_68:
      }
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    unint64_t v39 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        unint64_t v3 = v10 % v11;
        std::string::size_type v29 = *(void **)(*(void *)a1 + 8 * (v10 % v11));
        unint64_t v30 = (void *)v42[0];
        if (v29) {
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v3 = v10;
        std::string::size_type v29 = *(void **)(*(void *)a1 + 8 * v10);
        unint64_t v30 = (void *)v42[0];
        if (v29) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      unint64_t v3 = v39 & v10;
      std::string::size_type v29 = *(void **)(*(void *)a1 + 8 * (v39 & v10));
      unint64_t v30 = (void *)v42[0];
      if (v29) {
        goto LABEL_57;
      }
    }
LABEL_81:
    *unint64_t v30 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v42[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v42[0])
    {
      unint64_t v40 = *(void *)(*(void *)v42[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v40 >= v11) {
          v40 %= v11;
        }
      }
      else
      {
        v40 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v40) = v42[0];
    }
    goto LABEL_92;
  }
  std::string::size_type v29 = *(void **)(*(void *)a1 + 8 * v3);
  unint64_t v30 = (void *)v42[0];
  if (!v29) {
    goto LABEL_81;
  }
LABEL_57:
  *unint64_t v30 = *v29;
  *std::string::size_type v29 = v42[0];
LABEL_92:
  uint64_t v14 = (uint64_t *)v42[0];
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_23CDEA644(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>>::~unique_ptr[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23CDEA658(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>>::~unique_ptr[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>>::~unique_ptr[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16) && *(char *)(v2 + 39) < 0) {
      operator delete(*(void **)(v2 + 16));
    }
    operator delete((void *)v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::pair<void const*,char const*>,google::protobuf::Symbol>,std::__unordered_map_hasher<std::pair<void const*,char const*>,std::__hash_value_type<std::pair<void const*,char const*>,google::protobuf::Symbol>,google::protobuf::anonymous namespace'::PointerStringPairHash,google::protobuf::anonymous namespace'::PointerStringPairEqual,true>,std::__unordered_map_equal<std::pair<void const*,char const*>,std::__hash_value_type<std::pair<void const*,char const*>,google::protobuf::Symbol>,google::protobuf::anonymous namespace'::PointerStringPairEqual,google::protobuf::anonymous namespace'::PointerStringPairHash,true>,std::allocator<std::__hash_value_type<std::pair<void const*,char const*>,google::protobuf::Symbol>>>::__rehash_unique[abi:ne180100](uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(void *)&v4)
  {
    if (prime >= *(void *)&v4) {
      return;
    }
    size_t v16 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v17 = (uint8x8_t)vcnt_s8(v4), v17.i16[0] = vaddlv_u8(v17), v17.u32[0] > 1uLL))
    {
      size_t v22 = std::__next_prime(v16);
      if (prime <= v22) {
        size_t prime = v22;
      }
      if (prime >= *(void *)&v4) {
        return;
      }
    }
    else
    {
      uint64_t v18 = 1 << -(char)__clz(v16 - 1);
      if (v16 >= 2) {
        size_t v16 = v18;
      }
      if (prime <= v16) {
        size_t prime = v16;
      }
      if (prime >= *(void *)&v4) {
        return;
      }
    }
    if (!prime)
    {
      uint64_t v23 = *(void **)a1;
      *(void *)a1 = 0;
      if (v23) {
        operator delete(v23);
      }
      *(void *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  uint64_t v5 = operator new(8 * prime);
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v5;
  if (v6) {
    operator delete(v6);
  }
  uint64_t v7 = 0;
  *(void *)(a1 + 8) = prime;
  do
    *(void *)(*(void *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  uint64_t v9 = a1 + 16;
  unint64_t v8 = *(void **)(a1 + 16);
  if (v8)
  {
    size_t v10 = v8[1];
    size_t v11 = prime - 1;
    if ((prime & (prime - 1)) == 0)
    {
      size_t v12 = v10 & v11;
      *(void *)(*(void *)a1 + 8 * v12) = v9;
      while (1)
      {
        uint64_t v13 = (void *)*v8;
        if (!*v8) {
          break;
        }
        size_t v14 = v13[1] & v11;
        if (v14 == v12)
        {
          unint64_t v8 = (void *)*v8;
        }
        else if (*(void *)(*(void *)a1 + 8 * v14))
        {
          void *v8 = *v13;
          uint64_t v15 = 8 * v14;
          *uint64_t v13 = **(void **)(*(void *)a1 + v15);
          **(void **)(*(void *)a1 + v15) = v13;
        }
        else
        {
          *(void *)(*(void *)a1 + 8 * v14) = v8;
          unint64_t v8 = v13;
          size_t v12 = v14;
        }
      }
      return;
    }
    if (v10 >= prime) {
      v10 %= prime;
    }
    *(void *)(*(void *)a1 + 8 * v10) = v9;
    uint64_t v19 = (void *)*v8;
    if (*v8)
    {
      while (1)
      {
        size_t v21 = v19[1];
        if (v21 >= prime) {
          v21 %= prime;
        }
        if (v21 == v10) {
          goto LABEL_34;
        }
        if (*(void *)(*(void *)a1 + 8 * v21))
        {
          void *v8 = *v19;
          uint64_t v20 = 8 * v21;
          *uint64_t v19 = **(void **)(*(void *)a1 + v20);
          **(void **)(*(void *)a1 + v20) = v19;
          uint64_t v19 = v8;
LABEL_34:
          unint64_t v8 = v19;
          uint64_t v19 = (void *)*v19;
          if (!v19) {
            return;
          }
        }
        else
        {
          *(void *)(*(void *)a1 + 8 * v21) = v8;
          unint64_t v8 = v19;
          uint64_t v19 = (void *)*v19;
          size_t v10 = v21;
          if (!v19) {
            return;
          }
        }
      }
    }
  }
}

void *std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::remove@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  uint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    uint64_t v7 = v6;
    uint64_t v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  *uint64_t v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t *std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<google::protobuf::Descriptor const*,int>>(uint64_t **a1, unint64_t *a2)
{
  unint64_t v4 = (uint64_t *)(a1 + 1);
  uint64_t result = a1[1];
  if (result)
  {
    unint64_t v5 = *a2;
    int v6 = *((_DWORD *)a2 + 2);
    uint64_t v7 = v4;
    unint64_t v8 = result;
    do
    {
      unint64_t v9 = v8[4];
      if (v9 < v5)
      {
        ++v8;
      }
      else if (v5 >= v9)
      {
        if (*((_DWORD *)v8 + 10) < v6) {
          ++v8;
        }
        else {
          uint64_t v7 = v8;
        }
      }
      else
      {
        uint64_t v7 = v8;
      }
      unint64_t v8 = (uint64_t *)*v8;
    }
    while (v8);
    if (v7 == v4) {
      return 0;
    }
    unint64_t v10 = v7[4];
    if (v5 < v10) {
      return 0;
    }
    if (v10 >= v5 && v6 < *((_DWORD *)v7 + 10)) {
      return 0;
    }
    unint64_t v11 = (uint64_t *)v7[1];
    if (v11)
    {
      do
      {
        size_t v12 = v11;
        unint64_t v11 = (uint64_t *)*v11;
      }
      while (v11);
    }
    else
    {
      uint64_t v13 = v7;
      do
      {
        size_t v12 = (uint64_t *)v13[2];
        BOOL v14 = *v12 == (void)v13;
        uint64_t v13 = v12;
      }
      while (!v14);
    }
    if (*a1 == v7) {
      *a1 = v12;
    }
    a1[2] = (uint64_t *)((char *)a1[2] - 1);
    std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(result, v7);
    operator delete(v7);
    return (uint64_t *)1;
  }
  return result;
}

void std::vector<std::unique_ptr<std::string>>::__append(void **a1, unint64_t a2)
{
  unint64_t v5 = (char *)a1[1];
  unint64_t v4 = a1[2];
  int v6 = v5;
  if (a2 <= (v4 - v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      int v6 = &v5[8 * a2];
    }
    a1[1] = v6;
  }
  else
  {
    uint64_t v7 = (char *)*a1;
    uint64_t v8 = v5 - (unsigned char *)*a1;
    uint64_t v9 = v8 >> 3;
    unint64_t v10 = (v8 >> 3) + a2;
    if (v10 >> 61) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v4 - v7;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v13 = (char *)operator new(8 * v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    BOOL v14 = &v13[8 * v9];
    size_t v15 = 8 * a2;
    size_t v16 = &v13[8 * v12];
    bzero(v14, v15);
    uint8x8_t v17 = &v14[v15];
    if (v5 == v7)
    {
      *a1 = v14;
      a1[1] = v17;
      a1[2] = v16;
      if (!v5) {
        return;
      }
      goto LABEL_32;
    }
    unint64_t v18 = v5 - v7 - 8;
    if (v18 < 0x78 || &v5[-(v18 & 0xFFFFFFFFFFFFFFF8) - 8] < v14 && &v13[v8 - (v18 & 0xFFFFFFFFFFFFFFF8) - 8] < v5) {
      goto LABEL_41;
    }
    uint64_t v19 = (v18 >> 3) + 1;
    uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
    v14 -= v20;
    int v6 = &v5[-v20];
    size_t v21 = v5 - 16;
    size_t v22 = &v13[8 * v9 - 16];
    uint64_t v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v25 = *((_OWORD *)v21 - 1);
      long long v24 = *(_OWORD *)v21;
      *((_OWORD *)v21 - 1) = 0uLL;
      *(_OWORD *)size_t v21 = 0uLL;
      *((_OWORD *)v22 - 1) = v25;
      *(_OWORD *)size_t v22 = v24;
      v21 -= 32;
      v22 -= 32;
      v23 -= 4;
    }
    while (v23);
    if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_41:
      do
      {
        uint64_t v26 = *((void *)v6 - 1);
        v6 -= 8;
        *(void *)int v6 = 0;
        *((void *)v14 - 1) = v26;
        v14 -= 8;
      }
      while (v6 != v7);
    }
    float v27 = (char *)*a1;
    int v6 = (char *)a1[1];
    *a1 = v14;
    a1[1] = v17;
    a1[2] = v16;
    if (v6 != v27)
    {
      do
      {
        uint64_t v29 = *((void *)v6 - 1);
        v6 -= 8;
        uint64_t v28 = v29;
        *(void *)int v6 = 0;
        if (v29)
        {
          if (*(char *)(v28 + 23) < 0) {
            operator delete(*(void **)v28);
          }
          MEMORY[0x23ECF2BC0](v28, 0x1012C40EC159624);
        }
      }
      while (v6 != v27);
      int v6 = v27;
    }
    if (v6)
    {
LABEL_32:
      operator delete(v6);
    }
  }
}

void std::vector<std::unique_ptr<google::protobuf::Message>>::__append(void **a1, unint64_t a2)
{
  unint64_t v5 = (char *)a1[1];
  unint64_t v4 = a1[2];
  int v6 = v5;
  if (a2 <= (v4 - v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      int v6 = &v5[8 * a2];
    }
    a1[1] = v6;
  }
  else
  {
    uint64_t v7 = (char *)*a1;
    uint64_t v8 = v5 - (unsigned char *)*a1;
    uint64_t v9 = v8 >> 3;
    unint64_t v10 = (v8 >> 3) + a2;
    if (v10 >> 61) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v4 - v7;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v13 = (char *)operator new(8 * v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    BOOL v14 = &v13[8 * v9];
    size_t v15 = 8 * a2;
    size_t v16 = &v13[8 * v12];
    bzero(v14, v15);
    uint8x8_t v17 = &v14[v15];
    if (v5 == v7)
    {
      *a1 = v14;
      a1[1] = v17;
      a1[2] = v16;
      if (!v5) {
        return;
      }
      goto LABEL_30;
    }
    unint64_t v18 = v5 - v7 - 8;
    if (v18 < 0x78 || &v5[-(v18 & 0xFFFFFFFFFFFFFFF8) - 8] < v14 && &v13[v8 - (v18 & 0xFFFFFFFFFFFFFFF8) - 8] < v5) {
      goto LABEL_39;
    }
    uint64_t v19 = (v18 >> 3) + 1;
    uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
    v14 -= v20;
    int v6 = &v5[-v20];
    size_t v21 = v5 - 16;
    size_t v22 = &v13[8 * v9 - 16];
    uint64_t v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v25 = *((_OWORD *)v21 - 1);
      long long v24 = *(_OWORD *)v21;
      *((_OWORD *)v21 - 1) = 0uLL;
      *(_OWORD *)size_t v21 = 0uLL;
      *((_OWORD *)v22 - 1) = v25;
      *(_OWORD *)size_t v22 = v24;
      v21 -= 32;
      v22 -= 32;
      v23 -= 4;
    }
    while (v23);
    if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_39:
      do
      {
        uint64_t v26 = *((void *)v6 - 1);
        v6 -= 8;
        *(void *)int v6 = 0;
        *((void *)v14 - 1) = v26;
        v14 -= 8;
      }
      while (v6 != v7);
    }
    float v27 = (char *)*a1;
    int v6 = (char *)a1[1];
    *a1 = v14;
    a1[1] = v17;
    a1[2] = v16;
    if (v6 != v27)
    {
      do
      {
        uint64_t v29 = *((void *)v6 - 1);
        v6 -= 8;
        uint64_t v28 = v29;
        *(void *)int v6 = 0;
        if (v29) {
          (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
        }
      }
      while (v6 != v27);
      int v6 = v27;
    }
    if (v6)
    {
LABEL_30:
      operator delete(v6);
    }
  }
}

void std::vector<std::unique_ptr<std::once_flag>>::__append(void **a1, unint64_t a2)
{
  unint64_t v5 = (char *)a1[1];
  unint64_t v4 = a1[2];
  int v6 = v5;
  if (a2 <= (v4 - v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      int v6 = &v5[8 * a2];
    }
    a1[1] = v6;
  }
  else
  {
    uint64_t v7 = (char *)*a1;
    uint64_t v8 = v5 - (unsigned char *)*a1;
    uint64_t v9 = v8 >> 3;
    unint64_t v10 = (v8 >> 3) + a2;
    if (v10 >> 61) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v4 - v7;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v13 = (char *)operator new(8 * v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    BOOL v14 = &v13[8 * v9];
    size_t v15 = 8 * a2;
    size_t v16 = &v13[8 * v12];
    bzero(v14, v15);
    uint8x8_t v17 = &v14[v15];
    if (v5 == v7)
    {
      *a1 = v14;
      a1[1] = v17;
      a1[2] = v16;
      if (!v5) {
        return;
      }
      goto LABEL_30;
    }
    unint64_t v18 = v5 - v7 - 8;
    if (v18 < 0x78 || &v5[-(v18 & 0xFFFFFFFFFFFFFFF8) - 8] < v14 && &v13[v8 - (v18 & 0xFFFFFFFFFFFFFFF8) - 8] < v5) {
      goto LABEL_39;
    }
    uint64_t v19 = (v18 >> 3) + 1;
    uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
    v14 -= v20;
    int v6 = &v5[-v20];
    size_t v21 = v5 - 16;
    size_t v22 = &v13[8 * v9 - 16];
    uint64_t v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v25 = *((_OWORD *)v21 - 1);
      long long v24 = *(_OWORD *)v21;
      *((_OWORD *)v21 - 1) = 0uLL;
      *(_OWORD *)size_t v21 = 0uLL;
      *((_OWORD *)v22 - 1) = v25;
      *(_OWORD *)size_t v22 = v24;
      v21 -= 32;
      v22 -= 32;
      v23 -= 4;
    }
    while (v23);
    if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_39:
      do
      {
        uint64_t v26 = *((void *)v6 - 1);
        v6 -= 8;
        *(void *)int v6 = 0;
        *((void *)v14 - 1) = v26;
        v14 -= 8;
      }
      while (v6 != v7);
    }
    float v27 = (char *)*a1;
    int v6 = (char *)a1[1];
    *a1 = v14;
    a1[1] = v17;
    a1[2] = v16;
    if (v6 != v27)
    {
      do
      {
        uint64_t v29 = *((void *)v6 - 1);
        v6 -= 8;
        uint64_t v28 = v29;
        *(void *)int v6 = 0;
        if (v29) {
          MEMORY[0x23ECF2BC0](v28, 0x1000C4000313F17);
        }
      }
      while (v6 != v27);
      int v6 = v27;
    }
    if (v6)
    {
LABEL_30:
      operator delete(v6);
    }
  }
}

void std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__append(void **a1, unint64_t a2)
{
  unint64_t v5 = (char *)a1[1];
  unint64_t v4 = a1[2];
  int v6 = v5;
  if (a2 <= (v4 - v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      int v6 = &v5[8 * a2];
    }
    a1[1] = v6;
  }
  else
  {
    uint64_t v7 = (char *)*a1;
    uint64_t v8 = v5 - (unsigned char *)*a1;
    uint64_t v9 = v8 >> 3;
    unint64_t v10 = (v8 >> 3) + a2;
    if (v10 >> 61) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v4 - v7;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v13 = (char *)operator new(8 * v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    BOOL v14 = &v13[8 * v9];
    size_t v15 = 8 * a2;
    size_t v16 = &v13[8 * v12];
    bzero(v14, v15);
    uint8x8_t v17 = &v14[v15];
    if (v5 == v7)
    {
      *a1 = v14;
      a1[1] = v17;
      a1[2] = v16;
      if (!v5) {
        return;
      }
      goto LABEL_30;
    }
    unint64_t v18 = v5 - v7 - 8;
    if (v18 < 0x78 || &v5[-(v18 & 0xFFFFFFFFFFFFFFF8) - 8] < v14 && &v13[v8 - (v18 & 0xFFFFFFFFFFFFFFF8) - 8] < v5) {
      goto LABEL_39;
    }
    uint64_t v19 = (v18 >> 3) + 1;
    uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
    v14 -= v20;
    int v6 = &v5[-v20];
    size_t v21 = v5 - 16;
    size_t v22 = &v13[8 * v9 - 16];
    uint64_t v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v25 = *((_OWORD *)v21 - 1);
      long long v24 = *(_OWORD *)v21;
      *((_OWORD *)v21 - 1) = 0uLL;
      *(_OWORD *)size_t v21 = 0uLL;
      *((_OWORD *)v22 - 1) = v25;
      *(_OWORD *)size_t v22 = v24;
      v21 -= 32;
      v22 -= 32;
      v23 -= 4;
    }
    while (v23);
    if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_39:
      do
      {
        uint64_t v26 = *((void *)v6 - 1);
        v6 -= 8;
        *(void *)int v6 = 0;
        *((void *)v14 - 1) = v26;
        v14 -= 8;
      }
      while (v6 != v7);
    }
    float v27 = (char *)*a1;
    int v6 = (char *)a1[1];
    *a1 = v14;
    a1[1] = v17;
    a1[2] = v16;
    if (v6 != v27)
    {
      do
      {
        uint64_t v29 = (std::mutex *)*((void *)v6 - 1);
        v6 -= 8;
        uint64_t v28 = v29;
        *(void *)int v6 = 0;
        if (v29)
        {
          google::protobuf::FileDescriptorTables::~FileDescriptorTables(v28);
          MEMORY[0x23ECF2BC0]();
        }
      }
      while (v6 != v27);
      int v6 = v27;
    }
    if (v6)
    {
LABEL_30:
      operator delete(v6);
    }
  }
}

void *std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,google::protobuf::Symbol> const&>(uint64_t a1, const char **a2, uint64_t a3)
{
  int v6 = *a2;
  char v7 = **a2;
  if (v7)
  {
    unint64_t v8 = 0;
    uint64_t v9 = (unsigned __int8 *)(v6 + 1);
    do
    {
      unint64_t v8 = 5 * v8 + v7;
      int v10 = *v9++;
      char v7 = v10;
    }
    while (v10);
    unint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      goto LABEL_27;
    }
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      goto LABEL_27;
    }
  }
  uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    unint64_t v3 = v8;
    if (v8 >= v11) {
      unint64_t v3 = v8 % v11;
    }
  }
  else
  {
    unint64_t v3 = (v11 - 1) & v8;
  }
  uint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
  if (v13)
  {
    BOOL v14 = *v13;
    if (*v13)
    {
      if (v12.u32[0] < 2uLL)
      {
        while (1)
        {
          uint64_t v16 = *((void *)v14 + 1);
          if (v16 == v8)
          {
            if (!strcmp(*((const char **)v14 + 2), v6)) {
              return v14;
            }
          }
          else if ((v16 & (v11 - 1)) != v3)
          {
            goto LABEL_27;
          }
          BOOL v14 = *(void **)v14;
          if (!v14) {
            goto LABEL_27;
          }
        }
      }
      do
      {
        unint64_t v15 = *((void *)v14 + 1);
        if (v15 == v8)
        {
          if (!strcmp(*((const char **)v14 + 2), v6)) {
            return v14;
          }
        }
        else
        {
          if (v15 >= v11) {
            v15 %= v11;
          }
          if (v15 != v3) {
            break;
          }
        }
        BOOL v14 = *(void **)v14;
      }
      while (v14);
    }
  }
LABEL_27:
  BOOL v14 = operator new(0x28uLL);
  *(void *)BOOL v14 = 0;
  *((void *)v14 + 1) = v8;
  *((_OWORD *)v14 + 1) = *(_OWORD *)a3;
  *((void *)v14 + 4) = *(void *)(a3 + 16);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (v11 && (float)(v18 * (float)v11) >= v17)
  {
    unint64_t v8 = v3;
  }
  else
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t prime = v21;
    }
    else {
      size_t prime = v20;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v11 = *(void *)(a1 + 8);
    }
    if (prime > v11) {
      goto LABEL_40;
    }
    if (prime < v11)
    {
      unint64_t v23 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v11 < 3 || (uint8x8_t v24 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v24.i16[0] = vaddlv_u8(v24), v24.u32[0] > 1uLL))
      {
        unint64_t v23 = std::__next_prime(v23);
      }
      else
      {
        uint64_t v25 = 1 << -(char)__clz(v23 - 1);
        if (v23 >= 2) {
          unint64_t v23 = v25;
        }
      }
      if (prime <= v23) {
        size_t prime = v23;
      }
      if (prime < v11) {
LABEL_40:
      }
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v8 >= v11) {
        v8 %= v11;
      }
    }
    else
    {
      v8 &= v11 - 1;
    }
  }
  uint64_t v26 = *(void *)a1;
  float v27 = *(void **)(*(void *)a1 + 8 * v8);
  if (v27)
  {
    *(void *)BOOL v14 = *v27;
LABEL_63:
    *float v27 = v14;
    goto LABEL_64;
  }
  *(void *)BOOL v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v14;
  *(void *)(v26 + 8 * v8) = a1 + 16;
  if (*(void *)v14)
  {
    unint64_t v28 = *(void *)(*(void *)v14 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    float v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_63;
  }
LABEL_64:
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_23CDEB8B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__hash_table<std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::FileDescriptor const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,google::protobuf::FileDescriptor const*> const&>(uint64_t a1, const char **a2, _OWORD *a3)
{
  int v6 = *a2;
  char v7 = **a2;
  if (v7)
  {
    unint64_t v8 = 0;
    uint64_t v9 = (unsigned __int8 *)(v6 + 1);
    do
    {
      unint64_t v8 = 5 * v8 + v7;
      int v10 = *v9++;
      char v7 = v10;
    }
    while (v10);
    unint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      goto LABEL_27;
    }
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      goto LABEL_27;
    }
  }
  uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    unint64_t v3 = v8;
    if (v8 >= v11) {
      unint64_t v3 = v8 % v11;
    }
  }
  else
  {
    unint64_t v3 = (v11 - 1) & v8;
  }
  uint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
  if (v13)
  {
    BOOL v14 = *v13;
    if (*v13)
    {
      if (v12.u32[0] < 2uLL)
      {
        while (1)
        {
          uint64_t v16 = *((void *)v14 + 1);
          if (v16 == v8)
          {
            if (!strcmp(*((const char **)v14 + 2), v6)) {
              return v14;
            }
          }
          else if ((v16 & (v11 - 1)) != v3)
          {
            goto LABEL_27;
          }
          BOOL v14 = *(void **)v14;
          if (!v14) {
            goto LABEL_27;
          }
        }
      }
      do
      {
        unint64_t v15 = *((void *)v14 + 1);
        if (v15 == v8)
        {
          if (!strcmp(*((const char **)v14 + 2), v6)) {
            return v14;
          }
        }
        else
        {
          if (v15 >= v11) {
            v15 %= v11;
          }
          if (v15 != v3) {
            break;
          }
        }
        BOOL v14 = *(void **)v14;
      }
      while (v14);
    }
  }
LABEL_27:
  BOOL v14 = operator new(0x20uLL);
  *(void *)BOOL v14 = 0;
  *((void *)v14 + 1) = v8;
  *((_OWORD *)v14 + 1) = *a3;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (v11 && (float)(v18 * (float)v11) >= v17)
  {
    unint64_t v8 = v3;
  }
  else
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t prime = v21;
    }
    else {
      size_t prime = v20;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v11 = *(void *)(a1 + 8);
    }
    if (prime > v11) {
      goto LABEL_40;
    }
    if (prime < v11)
    {
      unint64_t v23 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v11 < 3 || (uint8x8_t v24 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v24.i16[0] = vaddlv_u8(v24), v24.u32[0] > 1uLL))
      {
        unint64_t v23 = std::__next_prime(v23);
      }
      else
      {
        uint64_t v25 = 1 << -(char)__clz(v23 - 1);
        if (v23 >= 2) {
          unint64_t v23 = v25;
        }
      }
      if (prime <= v23) {
        size_t prime = v23;
      }
      if (prime < v11) {
LABEL_40:
      }
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v8 >= v11) {
        v8 %= v11;
      }
    }
    else
    {
      v8 &= v11 - 1;
    }
  }
  uint64_t v26 = *(void *)a1;
  float v27 = *(void **)(*(void *)a1 + 8 * v8);
  if (v27)
  {
    *(void *)BOOL v14 = *v27;
LABEL_63:
    *float v27 = v14;
    goto LABEL_64;
  }
  *(void *)BOOL v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v14;
  *(void *)(v26 + 8 * v8) = a1 + 16;
  if (*(void *)v14)
  {
    unint64_t v28 = *(void *)(*(void *)v14 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    float v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_63;
  }
LABEL_64:
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_23CDEBBD8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

char *std::vector<std::unique_ptr<std::string>>::__emplace_back_slow_path<std::string*&>(char **a1, void *a2)
{
  unint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = v3 - *a1;
  uint64_t v6 = v5 >> 3;
  unint64_t v7 = (v5 >> 3) + 1;
  if (v7 >> 61) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v9 = a1[2] - v4;
  if (v9 >> 2 > v7) {
    unint64_t v7 = v9 >> 2;
  }
  if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v10)
  {
    if (v10 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    unint64_t v11 = (char *)operator new(8 * v10);
  }
  else
  {
    unint64_t v11 = 0;
  }
  uint8x8_t v12 = &v11[8 * v6];
  uint64_t v13 = &v11[8 * v10];
  *(void *)uint8x8_t v12 = *a2;
  BOOL v14 = v12 + 8;
  if (v3 == v4)
  {
    *a1 = v12;
    a1[1] = v14;
    a1[2] = v13;
    if (!v3) {
      return v14;
    }
    goto LABEL_28;
  }
  unint64_t v15 = v3 - v4 - 8;
  if (v15 < 0x78 || &v3[-(v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v12 && &v11[v5 - (v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v3) {
    goto LABEL_36;
  }
  uint64_t v16 = (v15 >> 3) + 1;
  uint64_t v17 = 8 * (v16 & 0x3FFFFFFFFFFFFFFCLL);
  v12 -= v17;
  float v18 = &v3[-v17];
  BOOL v19 = v3 - 16;
  unint64_t v20 = &v11[8 * v6 - 16];
  uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v23 = *((_OWORD *)v19 - 1);
    long long v22 = *(_OWORD *)v19;
    *((_OWORD *)v19 - 1) = 0uLL;
    *(_OWORD *)BOOL v19 = 0uLL;
    *((_OWORD *)v20 - 1) = v23;
    *(_OWORD *)unint64_t v20 = v22;
    v19 -= 32;
    v20 -= 32;
    v21 -= 4;
  }
  while (v21);
  unint64_t v3 = v18;
  if (v16 != (v16 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_36:
    do
    {
      uint64_t v24 = *((void *)v3 - 1);
      v3 -= 8;
      *(void *)unint64_t v3 = 0;
      *((void *)v12 - 1) = v24;
      v12 -= 8;
    }
    while (v3 != v4);
  }
  uint64_t v25 = *a1;
  unint64_t v3 = a1[1];
  *a1 = v12;
  a1[1] = v14;
  a1[2] = v13;
  if (v3 != v25)
  {
    do
    {
      uint64_t v27 = *((void *)v3 - 1);
      v3 -= 8;
      uint64_t v26 = v27;
      *(void *)unint64_t v3 = 0;
      if (v27)
      {
        if (*(char *)(v26 + 23) < 0) {
          operator delete(*(void **)v26);
        }
        MEMORY[0x23ECF2BC0](v26, 0x1012C40EC159624);
      }
    }
    while (v3 != v25);
    unint64_t v3 = v25;
  }
  if (v3) {
LABEL_28:
  }
    operator delete(v3);
  return v14;
}

char *std::vector<std::unique_ptr<std::once_flag>>::__emplace_back_slow_path<std::once_flag*&>(char **a1, void *a2)
{
  unint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = v3 - *a1;
  uint64_t v6 = v5 >> 3;
  unint64_t v7 = (v5 >> 3) + 1;
  if (v7 >> 61) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v9 = a1[2] - v4;
  if (v9 >> 2 > v7) {
    unint64_t v7 = v9 >> 2;
  }
  if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v10)
  {
    if (v10 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    unint64_t v11 = (char *)operator new(8 * v10);
  }
  else
  {
    unint64_t v11 = 0;
  }
  uint8x8_t v12 = &v11[8 * v6];
  uint64_t v13 = &v11[8 * v10];
  *(void *)uint8x8_t v12 = *a2;
  BOOL v14 = v12 + 8;
  if (v3 == v4)
  {
    *a1 = v12;
    a1[1] = v14;
    a1[2] = v13;
    if (!v3) {
      return v14;
    }
    goto LABEL_26;
  }
  unint64_t v15 = v3 - v4 - 8;
  if (v15 < 0x78 || &v3[-(v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v12 && &v11[v5 - (v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v3) {
    goto LABEL_34;
  }
  uint64_t v16 = (v15 >> 3) + 1;
  uint64_t v17 = 8 * (v16 & 0x3FFFFFFFFFFFFFFCLL);
  v12 -= v17;
  float v18 = &v3[-v17];
  BOOL v19 = v3 - 16;
  unint64_t v20 = &v11[8 * v6 - 16];
  uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v23 = *((_OWORD *)v19 - 1);
    long long v22 = *(_OWORD *)v19;
    *((_OWORD *)v19 - 1) = 0uLL;
    *(_OWORD *)BOOL v19 = 0uLL;
    *((_OWORD *)v20 - 1) = v23;
    *(_OWORD *)unint64_t v20 = v22;
    v19 -= 32;
    v20 -= 32;
    v21 -= 4;
  }
  while (v21);
  unint64_t v3 = v18;
  if (v16 != (v16 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_34:
    do
    {
      uint64_t v24 = *((void *)v3 - 1);
      v3 -= 8;
      *(void *)unint64_t v3 = 0;
      *((void *)v12 - 1) = v24;
      v12 -= 8;
    }
    while (v3 != v4);
  }
  uint64_t v25 = *a1;
  unint64_t v3 = a1[1];
  *a1 = v12;
  a1[1] = v14;
  a1[2] = v13;
  if (v3 != v25)
  {
    do
    {
      uint64_t v27 = *((void *)v3 - 1);
      v3 -= 8;
      uint64_t v26 = v27;
      *(void *)unint64_t v3 = 0;
      if (v27) {
        MEMORY[0x23ECF2BC0](v26, 0x1000C4000313F17);
      }
    }
    while (v3 != v25);
    unint64_t v3 = v25;
  }
  if (v3) {
LABEL_26:
  }
    operator delete(v3);
  return v14;
}

char *std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__emplace_back_slow_path<google::protobuf::FileDescriptorTables*&>(char **a1, void *a2)
{
  unint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = v3 - *a1;
  uint64_t v6 = v5 >> 3;
  unint64_t v7 = (v5 >> 3) + 1;
  if (v7 >> 61) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v9 = a1[2] - v4;
  if (v9 >> 2 > v7) {
    unint64_t v7 = v9 >> 2;
  }
  if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v10)
  {
    if (v10 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    unint64_t v11 = (char *)operator new(8 * v10);
  }
  else
  {
    unint64_t v11 = 0;
  }
  uint8x8_t v12 = &v11[8 * v6];
  uint64_t v13 = &v11[8 * v10];
  *(void *)uint8x8_t v12 = *a2;
  BOOL v14 = v12 + 8;
  if (v3 == v4)
  {
    *a1 = v12;
    a1[1] = v14;
    a1[2] = v13;
    if (!v3) {
      return v14;
    }
    goto LABEL_26;
  }
  unint64_t v15 = v3 - v4 - 8;
  if (v15 < 0x78 || &v3[-(v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v12 && &v11[v5 - (v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v3) {
    goto LABEL_34;
  }
  uint64_t v16 = (v15 >> 3) + 1;
  uint64_t v17 = 8 * (v16 & 0x3FFFFFFFFFFFFFFCLL);
  v12 -= v17;
  float v18 = &v3[-v17];
  BOOL v19 = v3 - 16;
  unint64_t v20 = &v11[8 * v6 - 16];
  uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v23 = *((_OWORD *)v19 - 1);
    long long v22 = *(_OWORD *)v19;
    *((_OWORD *)v19 - 1) = 0uLL;
    *(_OWORD *)BOOL v19 = 0uLL;
    *((_OWORD *)v20 - 1) = v23;
    *(_OWORD *)unint64_t v20 = v22;
    v19 -= 32;
    v20 -= 32;
    v21 -= 4;
  }
  while (v21);
  unint64_t v3 = v18;
  if (v16 != (v16 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_34:
    do
    {
      uint64_t v24 = *((void *)v3 - 1);
      v3 -= 8;
      *(void *)unint64_t v3 = 0;
      *((void *)v12 - 1) = v24;
      v12 -= 8;
    }
    while (v3 != v4);
  }
  uint64_t v25 = *a1;
  unint64_t v3 = a1[1];
  *a1 = v12;
  a1[1] = v14;
  a1[2] = v13;
  if (v3 != v25)
  {
    do
    {
      uint64_t v27 = (std::mutex *)*((void *)v3 - 1);
      v3 -= 8;
      uint64_t v26 = v27;
      *(void *)unint64_t v3 = 0;
      if (v27)
      {
        google::protobuf::FileDescriptorTables::~FileDescriptorTables(v26);
        MEMORY[0x23ECF2BC0]();
      }
    }
    while (v3 != v25);
    unint64_t v3 = v25;
  }
  if (v3) {
LABEL_26:
  }
    operator delete(v3);
  return v14;
}

char *std::vector<std::vector<char>>::__emplace_back_slow_path<int &>(char **a1, int *a2)
{
  unint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  if (0x5555555555555556 * ((a1[2] - v4) >> 3) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v4) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v4) >> 3) >= 0x555555555555555) {
    unint64_t v8 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v9 = (char *)operator new(24 * v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  unint64_t v10 = &v9[24 * v5];
  unint64_t v11 = &v9[24 * v8];
  size_t v12 = *a2;
  *((void *)v10 + 1) = 0;
  *(void *)unint64_t v10 = 0;
  *((void *)v10 + 2) = 0;
  if (v12)
  {
    if ((v12 & 0x80000000) != 0) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v13 = operator new(v12);
    *(void *)unint64_t v10 = v13;
    unint64_t v14 = (unint64_t)v13 + v12;
    bzero(v13, v12);
    *(int64x2_t *)(v10 + 8) = vdupq_n_s64(v14);
  }
  unint64_t v15 = v10 + 24;
  long long v23 = v10 + 24;
  if (v3 == v4)
  {
    *a1 = v10;
    a1[1] = v15;
    a1[2] = v11;
  }
  else
  {
    do
    {
      uint64_t v16 = v10;
      *((void *)v10 - 2) = 0;
      *((void *)v10 - 1) = 0;
      long long v17 = *(_OWORD *)(v3 - 24);
      v3 -= 24;
      *(_OWORD *)(v10 - 24) = v17;
      v10 -= 24;
      *((void *)v16 - 1) = *((void *)v3 + 2);
      *(void *)unint64_t v3 = 0;
      *((void *)v3 + 1) = 0;
      *((void *)v3 + 2) = 0;
    }
    while (v3 != v4);
    float v18 = *a1;
    unint64_t v3 = a1[1];
    unint64_t v15 = v23;
    *a1 = v10;
    a1[1] = v23;
    a1[2] = v11;
    if (v3 != v18)
    {
      BOOL v19 = v3;
      do
      {
        uint64_t v21 = (void *)*((void *)v19 - 3);
        v19 -= 24;
        unint64_t v20 = v21;
        if (v21)
        {
          *((void *)v3 - 2) = v20;
          operator delete(v20);
        }
        unint64_t v3 = v19;
      }
      while (v19 != v18);
      unint64_t v3 = v18;
    }
  }
  if (v3) {
    operator delete(v3);
  }
  return v15;
}

void sub_23CDEC314(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  unint64_t v5 = *v2;
  if (*v2)
  {
    *unint64_t v3 = v5;
    operator delete(v5);
  }
  std::__split_buffer<std::vector<int>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t a1, uint64_t a2, uint64_t a3, long long **a4)
{
  unint64_t v6 = (unsigned char *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v9 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v9 = v8;
  }
  unint64_t v10 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)v44, (uint64_t *)a2, v9);
  unint64_t v11 = v10;
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v12) {
        unint64_t v4 = v10 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v10;
    }
    unint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      unint64_t v15 = (unsigned __int8 *)*v14;
      if (*v14)
      {
        char v16 = v6[23];
        if (v16 >= 0) {
          uint64_t v17 = v6[23];
        }
        else {
          uint64_t v17 = *((void *)v6 + 1);
        }
        if (v16 < 0) {
          unint64_t v6 = *(unsigned char **)v6;
        }
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v22 = *((void *)v15 + 1);
            if (v22 == v11)
            {
              uint64_t v23 = v15[39];
              if ((v23 & 0x80u) == 0) {
                uint64_t v24 = v15[39];
              }
              else {
                uint64_t v24 = *((void *)v15 + 3);
              }
              if (v24 == v17)
              {
                if ((v23 & 0x80) != 0)
                {
                  if (!memcmp(*((const void **)v15 + 2), v6, *((void *)v15 + 3))) {
                    return v15;
                  }
                }
                else
                {
                  if (!v15[39]) {
                    return v15;
                  }
                  uint64_t v25 = 0;
                  while (v15[v25 + 16] == v6[v25])
                  {
                    if (v23 == ++v25) {
                      return v15;
                    }
                  }
                }
              }
            }
            else if ((v22 & (v12 - 1)) != v4)
            {
              goto LABEL_51;
            }
            unint64_t v15 = *(unsigned __int8 **)v15;
            if (!v15) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v18 = *((void *)v15 + 1);
          if (v18 == v11)
          {
            uint64_t v19 = v15[39];
            if ((v19 & 0x80u) == 0) {
              uint64_t v20 = v15[39];
            }
            else {
              uint64_t v20 = *((void *)v15 + 3);
            }
            if (v20 == v17)
            {
              if ((v19 & 0x80) != 0)
              {
                if (!memcmp(*((const void **)v15 + 2), v6, *((void *)v15 + 3))) {
                  return v15;
                }
              }
              else
              {
                if (!v15[39]) {
                  return v15;
                }
                uint64_t v21 = 0;
                while (v15[v21 + 16] == v6[v21])
                {
                  if (v19 == ++v21) {
                    return v15;
                  }
                }
              }
            }
          }
          else
          {
            if (v18 >= v12) {
              v18 %= v12;
            }
            if (v18 != v4) {
              break;
            }
          }
          unint64_t v15 = *(unsigned __int8 **)v15;
        }
        while (v15);
      }
    }
  }
LABEL_51:
  uint64_t v26 = (void *)(a1 + 16);
  unint64_t v15 = (unsigned __int8 *)operator new(0x30uLL);
  v44[0] = v15;
  v44[1] = a1 + 16;
  *(void *)unint64_t v15 = 0;
  *((void *)v15 + 1) = v11;
  uint64_t v27 = *a4;
  long long v28 = **a4;
  *((void *)v15 + 4) = *((void *)*a4 + 2);
  *((_OWORD *)v15 + 1) = v28;
  *((void *)v27 + 1) = 0;
  *((void *)v27 + 2) = 0;
  *(void *)uint64_t v27 = 0;
  *((void *)v15 + 5) = 0;
  char v45 = 1;
  float v29 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v30 = *(float *)(a1 + 32);
  if (v12 && (float)(v30 * (float)v12) >= v29)
  {
    uint64_t v31 = *(void *)a1;
    unint64_t v32 = *(void **)(*(void *)a1 + 8 * v4);
    if (v32)
    {
LABEL_54:
      *(void *)unint64_t v15 = *v32;
LABEL_89:
      *unint64_t v32 = v15;
      goto LABEL_90;
    }
  }
  else
  {
    BOOL v33 = 1;
    if (v12 >= 3) {
      BOOL v33 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v34 = v33 | (2 * v12);
    unint64_t v35 = vcvtps_u32_f32(v29 / v30);
    if (v34 <= v35) {
      size_t prime = v35;
    }
    else {
      size_t prime = v34;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v37 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v37) {
      goto LABEL_65;
    }
    if (prime < *(void *)&v37)
    {
      unint64_t v38 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v37 < 3uLL || (uint8x8_t v39 = (uint8x8_t)vcnt_s8(v37), v39.i16[0] = vaddlv_u8(v39), v39.u32[0] > 1uLL))
      {
        unint64_t v38 = std::__next_prime(v38);
      }
      else
      {
        uint64_t v40 = 1 << -(char)__clz(v38 - 1);
        if (v38 >= 2) {
          unint64_t v38 = v40;
        }
      }
      if (prime <= v38) {
        size_t prime = v38;
      }
      if (prime < *(void *)&v37) {
LABEL_65:
      }
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>(a1, prime);
    }
    unint64_t v12 = *(void *)(a1 + 8);
    unint64_t v41 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        unint64_t v4 = v11 % v12;
        uint64_t v31 = *(void *)a1;
        unint64_t v32 = *(void **)(*(void *)a1 + 8 * (v11 % v12));
        if (v32) {
          goto LABEL_54;
        }
      }
      else
      {
        unint64_t v4 = v11;
        uint64_t v31 = *(void *)a1;
        unint64_t v32 = *(void **)(*(void *)a1 + 8 * v11);
        if (v32) {
          goto LABEL_54;
        }
      }
    }
    else
    {
      unint64_t v4 = v41 & v11;
      uint64_t v31 = *(void *)a1;
      unint64_t v32 = *(void **)(*(void *)a1 + 8 * (v41 & v11));
      if (v32) {
        goto LABEL_54;
      }
    }
  }
  *(void *)unint64_t v15 = *v26;
  *uint64_t v26 = v15;
  *(void *)(v31 + 8 * v4) = v26;
  if (*(void *)v15)
  {
    unint64_t v42 = *(void *)(*(void *)v15 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v42 >= v12) {
        v42 %= v12;
      }
    }
    else
    {
      v42 &= v12 - 1;
    }
    unint64_t v32 = (void *)(*(void *)a1 + 8 * v42);
    goto LABEL_89;
  }
LABEL_90:
  ++*(void *)(a1 + 24);
  return v15;
}

void sub_23CDEC74C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>>::~unique_ptr[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *),std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t *std::__hash_table<std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::SourceCodeInfo_Location const*>>>::find<std::string>(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  unint64_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    uint8x8_t v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v21 == v8)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          uint64_t result = 0;
          uint8x8_t v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v17 == v8)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        uint64_t result = 0;
        uint8x8_t v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

std::mutex **google::protobuf::internal::OnShutdownDelete<google::protobuf::DescriptorPool>(google::protobuf::DescriptorPool *)::{lambda(void const*)#1}::__invoke(std::mutex **result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *result;
    if (v2)
    {
      std::mutex::~mutex(v2);
      MEMORY[0x23ECF2BC0]();
    }
    std::__tree<std::__value_type<std::string,int>,std::__map_value_compare<std::string,std::__value_type<std::string,int>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,int>>>::destroy((uint64_t)(v1 + 6), (char *)v1[7]);
    unint64_t v3 = (google::protobuf::DescriptorPool::Tables *)v1[4];
    v1[4] = 0;
    if (v3)
    {
      google::protobuf::DescriptorPool::Tables::~Tables(v3);
      MEMORY[0x23ECF2BC0]();
    }
    JUMPOUT(0x23ECF2BC0);
  }
  return result;
}

uint64_t *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  unint64_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    uint8x8_t v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v8 == v21)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          uint64_t result = 0;
          uint8x8_t v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v8 == v17)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        uint64_t result = 0;
        uint8x8_t v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

{
  unsigned char *v2;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int8x8_t v7;
  unint64_t v8;
  uint8x8_t v9;
  unint64_t v10;
  uint64_t *result;
  uint64_t **v12;
  uint64_t *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  unint64_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    uint8x8_t v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v21 == v8)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          uint64_t result = 0;
          uint8x8_t v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v17 == v8)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        uint64_t result = 0;
        uint8x8_t v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

uint64_t *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = (unsigned char *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v8 = v7;
  }
  unint64_t v9 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)v42, (uint64_t *)a2, v8);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v3 = v9;
      if (v9 >= v11) {
        unint64_t v3 = v9 % v11;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v9;
    }
    uint8x8_t v13 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      char v14 = *v13;
      if (*v13)
      {
        char v15 = v5[23];
        if (v15 >= 0) {
          uint64_t v16 = v5[23];
        }
        else {
          uint64_t v16 = *((void *)v5 + 1);
        }
        if (v15 < 0) {
          unint64_t v5 = *(unsigned char **)v5;
        }
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v21 = v14[1];
            if (v21 == v10)
            {
              uint64_t v22 = *((unsigned __int8 *)v14 + 39);
              if ((v22 & 0x80u) == 0) {
                uint64_t v23 = *((unsigned __int8 *)v14 + 39);
              }
              else {
                uint64_t v23 = v14[3];
              }
              if (v23 == v16)
              {
                if ((v22 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v14[2], v5, v14[3])) {
                    return v14;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v14 + 39)) {
                    return v14;
                  }
                  uint64_t v24 = 0;
                  while (*((unsigned __int8 *)v14 + v24 + 16) == v5[v24])
                  {
                    if (v22 == ++v24) {
                      return v14;
                    }
                  }
                }
              }
            }
            else if ((v21 & (v11 - 1)) != v3)
            {
              goto LABEL_51;
            }
            char v14 = (uint64_t *)*v14;
            if (!v14) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v17 = v14[1];
          if (v17 == v10)
          {
            uint64_t v18 = *((unsigned __int8 *)v14 + 39);
            if ((v18 & 0x80u) == 0) {
              uint64_t v19 = *((unsigned __int8 *)v14 + 39);
            }
            else {
              uint64_t v19 = v14[3];
            }
            if (v19 == v16)
            {
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp((const void *)v14[2], v5, v14[3])) {
                  return v14;
                }
              }
              else
              {
                if (!*((unsigned char *)v14 + 39)) {
                  return v14;
                }
                uint64_t v20 = 0;
                while (*((unsigned __int8 *)v14 + v20 + 16) == v5[v20])
                {
                  if (v18 == ++v20) {
                    return v14;
                  }
                }
              }
            }
          }
          else
          {
            if (v17 >= v11) {
              v17 %= v11;
            }
            if (v17 != v3) {
              break;
            }
          }
          char v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_51:
  char v25 = operator new(0x28uLL);
  v42[0] = v25;
  v42[1] = a1 + 16;
  char v43 = 0;
  *char v25 = 0;
  v25[1] = v10;
  uint64_t v26 = (std::string *)(v25 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v26, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v26->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v26->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
  }
  char v43 = 1;
  float v27 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v28 = *(float *)(a1 + 32);
  if (!v11 || (float)(v28 * (float)v11) < v27)
  {
    BOOL v31 = 1;
    if (v11 >= 3) {
      BOOL v31 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v32 = v31 | (2 * v11);
    unint64_t v33 = vcvtps_u32_f32(v27 / v28);
    if (v32 <= v33) {
      size_t prime = v33;
    }
    else {
      size_t prime = v32;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v35 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v35) {
      goto LABEL_68;
    }
    if (prime < *(void *)&v35)
    {
      unint64_t v36 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v35 < 3uLL || (uint8x8_t v37 = (uint8x8_t)vcnt_s8(v35), v37.i16[0] = vaddlv_u8(v37), v37.u32[0] > 1uLL))
      {
        unint64_t v36 = std::__next_prime(v36);
      }
      else
      {
        uint64_t v38 = 1 << -(char)__clz(v36 - 1);
        if (v36 >= 2) {
          unint64_t v36 = v38;
        }
      }
      if (prime <= v36) {
        size_t prime = v36;
      }
      if (prime < *(void *)&v35) {
LABEL_68:
      }
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__do_rehash<true>(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    unint64_t v39 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        unint64_t v3 = v10 % v11;
        float v29 = *(void **)(*(void *)a1 + 8 * (v10 % v11));
        float v30 = (void *)v42[0];
        if (v29) {
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v3 = v10;
        float v29 = *(void **)(*(void *)a1 + 8 * v10);
        float v30 = (void *)v42[0];
        if (v29) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      unint64_t v3 = v39 & v10;
      float v29 = *(void **)(*(void *)a1 + 8 * (v39 & v10));
      float v30 = (void *)v42[0];
      if (v29) {
        goto LABEL_57;
      }
    }
LABEL_81:
    *float v30 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v42[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v42[0])
    {
      unint64_t v40 = *(void *)(*(void *)v42[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v40 >= v11) {
          v40 %= v11;
        }
      }
      else
      {
        v40 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v40) = v42[0];
    }
    goto LABEL_92;
  }
  float v29 = *(void **)(*(void *)a1 + 8 * v3);
  float v30 = (void *)v42[0];
  if (!v29) {
    goto LABEL_81;
  }
LABEL_57:
  *float v30 = *v29;
  *float v29 = v42[0];
LABEL_92:
  char v14 = (uint64_t *)v42[0];
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_23CDED0AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>>::~unique_ptr[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_23CDED0C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,void *>>>>::~unique_ptr[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

void std::vector<std::string>::__assign_with_size[abi:ne180100]<google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>>(uint64_t a1, const std::string **a2, const std::string **a3, size_t __sz)
{
  unint64_t v6 = a2;
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(std::string **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - *(void *)a1) >> 3) >= __sz)
  {
    uint8x8_t v12 = *(std::string **)(a1 + 8);
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v12 - (char *)v9) >> 3) >= __sz)
    {
      if (a2 == a3)
      {
        uint64_t v21 = *(std::string **)a1;
      }
      else
      {
        uint64_t v21 = *(std::string **)a1;
        do
        {
          uint64_t v22 = *v6++;
          std::string::operator=(v9++, v22);
          ++v21;
        }
        while (v6 != a3);
        uint8x8_t v12 = *(std::string **)(a1 + 8);
      }
      while (v12 != v21)
      {
        if (SHIBYTE(v12[-1].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v12[-1].__r_.__value_.__l.__data_);
        }
        --v12;
      }
      *(void *)(a1 + 8) = v21;
    }
    else
    {
      uint8x8_t v13 = &a2[0xAAAAAAAAAAAAAABLL * (((char *)v12 - (char *)v9) >> 3)];
      if (v12 != v9)
      {
        uint64_t v14 = 0x5555555555555558 * (((char *)v12 - (char *)v9) >> 3);
        do
        {
          char v15 = *v6++;
          std::string::operator=(v9++, v15);
          v14 -= 8;
        }
        while (v14);
        unint64_t v9 = *(std::string **)(a1 + 8);
      }
      uint64_t v16 = v9;
      if (v13 != a3)
      {
        uint64_t v17 = 0;
        do
        {
          uint64_t v19 = &v9[v17];
          uint64_t v20 = *v13;
          if (SHIBYTE((*v13)->__r_.__value_.__r.__words[2]) < 0)
          {
            std::string::__init_copy_ctor_external(v19, v20->__r_.__value_.__l.__data_, v20->__r_.__value_.__l.__size_);
          }
          else
          {
            long long v18 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
            v19->__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v19->__r_.__value_.__l.__data_ = v18;
          }
          ++v13;
          ++v17;
        }
        while (v13 != a3);
        uint64_t v16 = &v9[v17];
      }
      *(void *)(a1 + 8) = v16;
    }
  }
  else
  {
    if (v9)
    {
      unint64_t v10 = *(std::string **)(a1 + 8);
      unint64_t v11 = *(std::string **)a1;
      if (v10 != v9)
      {
        do
        {
          if (SHIBYTE(v10[-1].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v10[-1].__r_.__value_.__l.__data_);
          }
          --v10;
        }
        while (v10 != v9);
        unint64_t v11 = *(std::string **)a1;
      }
      *(void *)(a1 + 8) = v9;
      operator delete(v11);
      uint64_t v8 = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
    }
    if (__sz > 0xAAAAAAAAAAAAAAALL) {
      goto LABEL_48;
    }
    unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    uint64_t v24 = 2 * v23;
    if (2 * v23 <= __sz) {
      uint64_t v24 = __sz;
    }
    unint64_t v25 = v23 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v24;
    if (v25 > 0xAAAAAAAAAAAAAAALL) {
LABEL_48:
    }
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    uint64_t v26 = 24 * v25;
    float v27 = (char *)operator new(24 * v25);
    *(void *)a1 = v27;
    *(void *)(a1 + 8) = v27;
    *(void *)(a1 + 16) = &v27[v26];
    if (v6 != a3)
    {
      uint64_t v28 = 0;
      do
      {
        float v30 = (std::string *)&v27[v28];
        BOOL v31 = *v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::__init_copy_ctor_external(v30, v31->__r_.__value_.__l.__data_, v31->__r_.__value_.__l.__size_);
        }
        else
        {
          long long v29 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
          v30->__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v30->__r_.__value_.__l.__data_ = v29;
        }
        ++v6;
        v28 += 24;
      }
      while (v6 != a3);
      v27 += v28;
    }
    *(void *)(a1 + 8) = v27;
  }
}

void google::protobuf::anonymous namespace'::OptionsToInterpret::~OptionsToInterpret(google::protobuf::_anonymous_namespace_::OptionsToInterpret *this)
{
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2)
  {
    *((void *)this + 7) = v2;
    operator delete(v2);
  }
  if ((*((char *)this + 47) & 0x80000000) == 0)
  {
    if ((*((char *)this + 23) & 0x80000000) == 0) {
      return;
    }
LABEL_7:
    operator delete(*(void **)this);
    return;
  }
  operator delete(*((void **)this + 3));
  if (*((char *)this + 23) < 0) {
    goto LABEL_7;
  }
}

void std::vector<google::protobuf::anonymous namespace'::OptionsToInterpret>::push_back[abi:ne180100](void **a1, long long *a2)
{
  unint64_t v4 = (char *)a1[1];
  unint64_t v5 = (char *)a1[2];
  if (v4 < v5)
  {
    long long v6 = *a2;
    *((void *)v4 + 2) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v4 = v6;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v7 = *(long long *)((char *)a2 + 24);
    *((void *)v4 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v4 + 24) = v7;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    *((void *)v4 + 6) = 0;
    *((void *)v4 + 7) = 0;
    *((void *)v4 + 8) = 0;
    *((_OWORD *)v4 + 3) = a2[3];
    *((void *)v4 + 8) = *((void *)a2 + 8);
    *((void *)a2 + 6) = 0;
    *((void *)a2 + 7) = 0;
    *((void *)a2 + 8) = 0;
    *(_OWORD *)(v4 + 72) = *(long long *)((char *)a2 + 72);
    uint64_t v8 = v4 + 88;
LABEL_3:
    a1[1] = v8;
    return;
  }
  uint64_t v9 = 0x2E8BA2E8BA2E8BA3 * ((v4 - (unsigned char *)*a1) >> 3);
  unint64_t v10 = v9 + 1;
  if ((unint64_t)(v9 + 1) > 0x2E8BA2E8BA2E8BALL) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  unint64_t v11 = 0x2E8BA2E8BA2E8BA3 * ((v5 - (unsigned char *)*a1) >> 3);
  if (2 * v11 > v10) {
    unint64_t v10 = 2 * v11;
  }
  if (v11 >= 0x1745D1745D1745DLL) {
    unint64_t v12 = 0x2E8BA2E8BA2E8BALL;
  }
  else {
    unint64_t v12 = v10;
  }
  if (v12)
  {
    if (v12 > 0x2E8BA2E8BA2E8BALL) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint8x8_t v13 = (char *)operator new(88 * v12);
  }
  else
  {
    uint8x8_t v13 = 0;
  }
  uint64_t v14 = &v13[88 * v9];
  *((void *)v14 + 2) = *((void *)a2 + 2);
  *(_OWORD *)uint64_t v14 = *a2;
  char v15 = &v13[88 * v12];
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  long long v16 = *(long long *)((char *)a2 + 24);
  *((void *)a2 + 2) = 0;
  *((void *)a2 + 3) = 0;
  *(_OWORD *)(v14 + 24) = v16;
  *((void *)v14 + 5) = *((void *)a2 + 5);
  *((void *)a2 + 4) = 0;
  *((void *)a2 + 5) = 0;
  *((void *)v14 + 8) = 0;
  *((_OWORD *)v14 + 3) = a2[3];
  *((void *)v14 + 8) = *((void *)a2 + 8);
  *((void *)a2 + 6) = 0;
  *((void *)a2 + 7) = 0;
  *((void *)a2 + 8) = 0;
  *(_OWORD *)(v14 + 72) = *(long long *)((char *)a2 + 72);
  uint64_t v8 = v14 + 88;
  uint64_t v17 = (char *)*a1;
  long long v18 = (char *)a1[1];
  if (v18 != *a1)
  {
    do
    {
      long long v19 = *(_OWORD *)(v18 - 88);
      *((void *)v14 - 9) = *((void *)v18 - 9);
      *(_OWORD *)(v14 - 88) = v19;
      *((void *)v18 - 10) = 0;
      *((void *)v18 - 9) = 0;
      *((void *)v18 - 11) = 0;
      long long v20 = *((_OWORD *)v18 - 4);
      *((void *)v14 - 6) = *((void *)v18 - 6);
      *((_OWORD *)v14 - 4) = v20;
      *((void *)v18 - 7) = 0;
      *((void *)v18 - 6) = 0;
      *((void *)v18 - 8) = 0;
      *((void *)v14 - 4) = 0;
      *((void *)v14 - 3) = 0;
      *(_OWORD *)(v14 - 40) = *(_OWORD *)(v18 - 40);
      *((void *)v14 - 3) = *((void *)v18 - 3);
      *((void *)v18 - 5) = 0;
      *((void *)v18 - 4) = 0;
      *((void *)v18 - 3) = 0;
      *((_OWORD *)v14 - 1) = *((_OWORD *)v18 - 1);
      v14 -= 88;
      v18 -= 88;
    }
    while (v18 != v17);
    long long v18 = (char *)*a1;
    uint64_t v21 = (char *)a1[1];
    *a1 = v14;
    a1[1] = v8;
    a1[2] = v15;
    while (1)
    {
      if (v21 == v18) {
        goto LABEL_27;
      }
      uint64_t v22 = (void *)*((void *)v21 - 5);
      if (v22)
      {
        *((void *)v21 - 4) = v22;
        operator delete(v22);
      }
      if (*(v21 - 41) < 0)
      {
        operator delete(*((void **)v21 - 8));
        if ((*(v21 - 65) & 0x80000000) == 0) {
          goto LABEL_17;
        }
      }
      else if ((*(v21 - 65) & 0x80000000) == 0)
      {
        goto LABEL_17;
      }
      operator delete(*((void **)v21 - 11));
LABEL_17:
      v21 -= 88;
    }
  }
  *a1 = v14;
  a1[1] = v8;
  a1[2] = v15;
LABEL_27:
  if (!v18) {
    goto LABEL_3;
  }
  operator delete(v18);
  a1[1] = v8;
}

std::string *google::protobuf::anonymous namespace'::OptionsToInterpret::OptionsToInterpret(std::string *this, long long *a2, long long *a3, uint64_t a4, std::string::size_type a5, std::string::size_type a6)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    unint64_t v12 = this + 1;
    if ((*((char *)a3 + 23) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v11 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v11;
    unint64_t v12 = this + 1;
    if ((*((char *)a3 + 23) & 0x80000000) == 0)
    {
LABEL_3:
      long long v13 = *a3;
      v12->__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
      *(_OWORD *)&v12->__r_.__value_.__l.__data_ = v13;
      goto LABEL_6;
    }
  }
  std::string::__init_copy_ctor_external(v12, *(const std::string::value_type **)a3, *((void *)a3 + 1));
LABEL_6:
  this[2].__r_.__value_.__r.__words[0] = 0;
  this[2].__r_.__value_.__l.__size_ = 0;
  this[2].__r_.__value_.__r.__words[2] = 0;
  uint64_t v14 = *(const void **)a4;
  int64_t v15 = *(void *)(a4 + 8) - *(void *)a4;
  if (v15)
  {
    if (v15 < 0) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    long long v16 = operator new(v15);
    this[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v16;
    this[2].__r_.__value_.__l.__size_ = (std::string::size_type)v16;
    std::string::size_type v17 = (std::string::size_type)v16 + 4 * (v15 >> 2);
    this[2].__r_.__value_.__r.__words[2] = v17;
    memcpy(v16, v14, v15);
    this[2].__r_.__value_.__l.__size_ = v17;
  }
  this[3].__r_.__value_.__r.__words[0] = a5;
  this[3].__r_.__value_.__l.__size_ = a6;
  return this;
}

void sub_23CDED7C0(_Unwind_Exception *exception_object)
{
  if ((*(char *)(v1 + 23) & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

char *std::vector<std::unique_ptr<google::protobuf::Message>>::__emplace_back_slow_path<google::protobuf::FileOptions *&>(char **a1, void *a2)
{
  unint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = v3 - *a1;
  uint64_t v6 = v5 >> 3;
  unint64_t v7 = (v5 >> 3) + 1;
  if (v7 >> 61) {
    std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v9 = a1[2] - v4;
  if (v9 >> 2 > v7) {
    unint64_t v7 = v9 >> 2;
  }
  if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v10)
  {
    if (v10 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    long long v11 = (char *)operator new(8 * v10);
  }
  else
  {
    long long v11 = 0;
  }
  unint64_t v12 = &v11[8 * v6];
  long long v13 = &v11[8 * v10];
  *(void *)unint64_t v12 = *a2;
  uint64_t v14 = v12 + 8;
  if (v3 == v4)
  {
    *a1 = v12;
    a1[1] = v14;
    a1[2] = v13;
    if (!v3) {
      return v14;
    }
    goto LABEL_26;
  }
  unint64_t v15 = v3 - v4 - 8;
  if (v15 < 0x78 || &v3[-(v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v12 && &v11[v5 - (v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v3) {
    goto LABEL_34;
  }
  uint64_t v16 = (v15 >> 3) + 1;
  uint64_t v17 = 8 * (v16 & 0x3FFFFFFFFFFFFFFCLL);
  v12 -= v17;
  long long v18 = &v3[-v17];
  long long v19 = v3 - 16;
  long long v20 = &v11[8 * v6 - 16];
  uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v23 = *((_OWORD *)v19 - 1);
    long long v22 = *(_OWORD *)v19;
    *((_OWORD *)v19 - 1) = 0uLL;
    *(_OWORD *)long long v19 = 0uLL;
    *((_OWORD *)v20 - 1) = v23;
    *(_OWORD *)long long v20 = v22;
    v19 -= 32;
    v20 -= 32;
    v21 -= 4;
  }
  while (v21);
  unint64_t v3 = v18;
  if (v16 != (v16 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_34:
    do
    {
      uint64_t v24 = *((void *)v3 - 1);
      v3 -= 8;
      *(void *)unint64_t v3 = 0;
      *((void *)v12 - 1) = v24;
      v12 -= 8;
    }
    while (v3 != v4);
  }
  unint64_t v25 = *a1;
  unint64_t v3 = a1[1];
  *a1 = v12;
  a1[1] = v14;
  a1[2] = v13;
  if (v3 != v25)
  {
    do
    {
      uint64_t v27 = *((void *)v3 - 1);
      v3 -= 8;
      uint64_t v26 = v27;
      *(void *)unint64_t v3 = 0;
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
      }
    }
    while (v3 != v25);
    unint64_t v3 = v25;
  }
  if (v3) {
LABEL_26:
  }
    operator delete(v3);
  return v14;
}

uint64_t **std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *((char *)a2 + 23);
    if (v7 >= 0) {
      size_t v8 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v8 = (size_t)a2[1];
    }
    if (v7 >= 0) {
      uint64_t v9 = a2;
    }
    else {
      uint64_t v9 = *a2;
    }
    do
    {
      while (1)
      {
        unint64_t v10 = (uint64_t **)v5;
        long long v13 = (const void *)v5[4];
        long long v11 = v5 + 4;
        unint64_t v12 = v13;
        int v14 = *((char *)v11 + 23);
        if (v14 >= 0) {
          size_t v15 = *((unsigned __int8 *)v11 + 23);
        }
        else {
          size_t v15 = v11[1];
        }
        if (v14 >= 0) {
          uint64_t v16 = v11;
        }
        else {
          uint64_t v16 = v12;
        }
        if (v15 >= v8) {
          size_t v17 = v8;
        }
        else {
          size_t v17 = v15;
        }
        int v18 = memcmp(v9, v16, v17);
        BOOL v19 = v8 < v15;
        if (v18) {
          BOOL v19 = v18 < 0;
        }
        if (!v19) {
          break;
        }
        uint64_t v5 = *v10;
        uint64_t v6 = v10;
        if (!*v10) {
          goto LABEL_26;
        }
      }
      int v20 = memcmp(v16, v9, v17);
      BOOL v21 = v15 < v8;
      if (v20) {
        BOOL v21 = v20 < 0;
      }
      if (!v21) {
        return v10;
      }
      uint64_t v5 = v10[1];
    }
    while (v5);
    uint64_t v6 = v10 + 1;
LABEL_26:
    long long v22 = operator new(0x38uLL);
    long long v23 = (std::string *)(v22 + 4);
    if (*(char *)(a3 + 23) < 0) {
      goto LABEL_29;
    }
  }
  else
  {
    unint64_t v10 = a1 + 1;
    long long v22 = operator new(0x38uLL);
    long long v23 = (std::string *)(v22 + 4);
    if (*(char *)(a3 + 23) < 0)
    {
LABEL_29:
      std::string::__init_copy_ctor_external(v23, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
      goto LABEL_30;
    }
  }
  *(_OWORD *)&v23->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
  v23->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
LABEL_30:
  *long long v22 = 0;
  v22[1] = 0;
  std::string v22[2] = v10;
  unsigned char *v6 = v22;
  uint64_t v24 = (uint64_t *)**a1;
  unint64_t v25 = v22;
  if (v24)
  {
    *a1 = v24;
    unint64_t v25 = *v6;
  }
  std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v25);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return (uint64_t **)v22;
}

void sub_23CDEDB8C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::Descriptor::WellKnownType>>>::find<std::string>(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  unint64_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    long long v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v21 == v8)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          uint64_t result = 0;
          long long v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v17 == v8)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        uint64_t result = 0;
        long long v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor>()
{
}

void sub_23CDEE1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDEE1E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FieldDescriptor>()
{
}

void sub_23CDEE890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDEE8A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::OneofDescriptor>()
{
}

void sub_23CDEED1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDEED30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string,google::protobuf::EnumValueDescriptor const*>>(uint64_t **a1, const void **a2, long long *a3)
{
  unint64_t v6 = a1 + 1;
  unint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *((char *)a2 + 23);
    if (v7 >= 0) {
      size_t v8 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v8 = (size_t)a2[1];
    }
    if (v7 >= 0) {
      uint8x8_t v9 = a2;
    }
    else {
      uint8x8_t v9 = *a2;
    }
    while (1)
    {
      while (1)
      {
        unint64_t v10 = (uint64_t **)v5;
        long long v13 = (const void *)v5[4];
        long long v11 = v5 + 4;
        unint64_t v12 = v13;
        int v14 = *((char *)v11 + 23);
        if (v14 >= 0) {
          size_t v15 = *((unsigned __int8 *)v11 + 23);
        }
        else {
          size_t v15 = v11[1];
        }
        if (v14 >= 0) {
          uint64_t v16 = v11;
        }
        else {
          uint64_t v16 = v12;
        }
        if (v15 >= v8) {
          size_t v17 = v8;
        }
        else {
          size_t v17 = v15;
        }
        int v18 = memcmp(v9, v16, v17);
        BOOL v19 = v8 < v15;
        if (v18) {
          BOOL v19 = v18 < 0;
        }
        if (!v19) {
          break;
        }
        unint64_t v5 = *v10;
        unint64_t v6 = v10;
        if (!*v10) {
          goto LABEL_27;
        }
      }
      int v20 = memcmp(v16, v9, v17);
      BOOL v21 = v15 < v8;
      if (v20) {
        BOOL v21 = v20 < 0;
      }
      if (!v21) {
        break;
      }
      unint64_t v5 = v10[1];
      if (!v5)
      {
        unint64_t v6 = v10 + 1;
        goto LABEL_27;
      }
    }
  }
  else
  {
    unint64_t v10 = a1 + 1;
LABEL_27:
    uint64_t v22 = (uint64_t *)v10;
    unint64_t v10 = (uint64_t **)operator new(0x40uLL);
    long long v23 = *a3;
    *(void *)a3 = 0;
    *((void *)a3 + 1) = 0;
    uint64_t v24 = (uint64_t *)*((void *)a3 + 2);
    char v25 = (uint64_t *)*((void *)a3 + 3);
    *((void *)a3 + 2) = 0;
    *((_OWORD *)v10 + 2) = v23;
    v10[6] = v24;
    v10[7] = v25;
    std::string *v10 = 0;
    v10[1] = 0;
    std::string v10[2] = v22;
    unsigned char *v6 = (uint64_t *)v10;
    uint64_t v26 = (uint64_t *)**a1;
    uint64_t v27 = (uint64_t *)v10;
    if (v26)
    {
      *a1 = v26;
      uint64_t v27 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v27);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v10;
}

uint64_t **std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  int v7 = a1 + 1;
  unint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *((char *)a2 + 23);
    if (v8 >= 0) {
      size_t v9 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v9 = (size_t)a2[1];
    }
    if (v8 >= 0) {
      unint64_t v10 = a2;
    }
    else {
      unint64_t v10 = *a2;
    }
    while (1)
    {
      while (1)
      {
        long long v11 = (uint64_t **)v6;
        int v14 = (const void *)v6[4];
        unint64_t v12 = v6 + 4;
        long long v13 = v14;
        int v15 = *((char *)v12 + 23);
        if (v15 >= 0) {
          size_t v16 = *((unsigned __int8 *)v12 + 23);
        }
        else {
          size_t v16 = v12[1];
        }
        if (v15 >= 0) {
          size_t v17 = v12;
        }
        else {
          size_t v17 = v13;
        }
        if (v16 >= v9) {
          size_t v18 = v9;
        }
        else {
          size_t v18 = v16;
        }
        int v19 = memcmp(v10, v17, v18);
        BOOL v20 = v9 < v16;
        if (v19) {
          BOOL v20 = v19 < 0;
        }
        if (!v20) {
          break;
        }
        unint64_t v6 = *v11;
        int v7 = v11;
        if (!*v11) {
          goto LABEL_27;
        }
      }
      int v21 = memcmp(v17, v10, v18);
      BOOL v22 = v16 < v9;
      if (v21) {
        BOOL v22 = v21 < 0;
      }
      if (!v22) {
        return v11;
      }
      unint64_t v6 = v11[1];
      if (!v6)
      {
        int v7 = v11 + 1;
        goto LABEL_27;
      }
    }
  }
  else
  {
    long long v11 = a1 + 1;
LABEL_27:
    long long v23 = operator new(0x40uLL);
    uint64_t v24 = (std::string *)(v23 + 4);
    char v25 = *a4;
    if (*((char *)*a4 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v24, *(const std::string::value_type **)v25, *((void *)v25 + 1));
    }
    else
    {
      long long v26 = *v25;
      v23[6] = *((void *)v25 + 2);
      *(_OWORD *)&v24->__r_.__value_.__l.__data_ = v26;
    }
    v23[7] = 0;
    *long long v23 = 0;
    v23[1] = 0;
    std::string v23[2] = v11;
    *int v7 = v23;
    uint64_t v27 = (uint64_t *)**a1;
    uint64_t v28 = v23;
    if (v27)
    {
      *a1 = v27;
      uint64_t v28 = *v7;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v28);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return (uint64_t **)v23;
}

void sub_23CDEF0A4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumDescriptor>()
{
}

void sub_23CDEF4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDEF4D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumValueDescriptor>()
{
}

void sub_23CDEF948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDEF95C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::ServiceDescriptor>()
{
}

void sub_23CDEFDD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDEFDE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::MethodDescriptor>()
{
}

void sub_23CDF0260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_23CDF0274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0)
  {
    operator delete(a23);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **std::__tree<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::FieldDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  int v7 = a1 + 1;
  unint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *((char *)a2 + 23);
    if (v8 >= 0) {
      size_t v9 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v9 = (size_t)a2[1];
    }
    if (v8 >= 0) {
      unint64_t v10 = a2;
    }
    else {
      unint64_t v10 = *a2;
    }
    while (1)
    {
      while (1)
      {
        long long v11 = (uint64_t **)v6;
        int v14 = (const void *)v6[4];
        unint64_t v12 = v6 + 4;
        long long v13 = v14;
        int v15 = *((char *)v12 + 23);
        if (v15 >= 0) {
          size_t v16 = *((unsigned __int8 *)v12 + 23);
        }
        else {
          size_t v16 = v12[1];
        }
        if (v15 >= 0) {
          size_t v17 = v12;
        }
        else {
          size_t v17 = v13;
        }
        if (v16 >= v9) {
          size_t v18 = v9;
        }
        else {
          size_t v18 = v16;
        }
        int v19 = memcmp(v10, v17, v18);
        BOOL v20 = v9 < v16;
        if (v19) {
          BOOL v20 = v19 < 0;
        }
        if (!v20) {
          break;
        }
        unint64_t v6 = *v11;
        int v7 = v11;
        if (!*v11) {
          goto LABEL_27;
        }
      }
      int v21 = memcmp(v17, v10, v18);
      BOOL v22 = v16 < v9;
      if (v21) {
        BOOL v22 = v21 < 0;
      }
      if (!v22) {
        return v11;
      }
      unint64_t v6 = v11[1];
      if (!v6)
      {
        int v7 = v11 + 1;
        goto LABEL_27;
      }
    }
  }
  else
  {
    long long v11 = a1 + 1;
LABEL_27:
    long long v23 = operator new(0x40uLL);
    uint64_t v24 = (std::string *)(v23 + 4);
    char v25 = *a4;
    if (*((char *)*a4 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v24, *(const std::string::value_type **)v25, *((void *)v25 + 1));
    }
    else
    {
      long long v26 = *v25;
      v23[6] = *((void *)v25 + 2);
      *(_OWORD *)&v24->__r_.__value_.__l.__data_ = v26;
    }
    v23[7] = 0;
    *long long v23 = 0;
    v23[1] = 0;
    std::string v23[2] = v11;
    *int v7 = v23;
    uint64_t v27 = (uint64_t *)**a1;
    uint64_t v28 = v23;
    if (v27)
    {
      *a1 = v27;
      uint64_t v28 = *v7;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v28);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return (uint64_t **)v23;
}

void sub_23CDF0474(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(a1, *(void *)a2);
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(a1, *((void *)a2 + 1));
    if (a2[63] < 0)
    {
      operator delete(*((void **)a2 + 5));
      unint64_t v4 = a2;
    }
    else
    {
      unint64_t v4 = a2;
    }
    operator delete(v4);
  }
}

void std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(a1, a2[1]);
    unint64_t v4 = (void *)a2[7];
    if (v4)
    {
      a2[8] = v4;
      operator delete(v4);
    }
    unint64_t v5 = (void *)a2[4];
    if (v5)
    {
      a2[5] = v5;
      operator delete(v5);
    }
    operator delete(a2);
  }
}

void std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(a1, a2[1]);
    unint64_t v4 = (void *)a2[4];
    if (v4)
    {
      a2[5] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

uint64_t *std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__emplace_unique_key_args<std::vector<int>,std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>(uint64_t a1, int **a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v6 = (uint64_t **)(a1 + 8);
  uint64_t result = *(uint64_t **)(a1 + 8);
  if (!result)
  {
    unint64_t v10 = v6;
LABEL_44:
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>(a1, a4, (uint64_t)&v29);
    uint64_t v27 = v29;
    *long long v29 = 0;
    v27[1] = 0;
    v27[2] = (uint64_t)v10;
    uint64_t *v6 = v27;
    uint64_t v28 = **(void **)a1;
    if (v28)
    {
      *(void *)a1 = v28;
      uint64_t v27 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 8), v27);
    ++*(void *)(a1 + 16);
    return v29;
  }
  int v7 = a2[1];
  if (*a2 == v7)
  {
    uint64_t v9 = result[4];
    uint64_t v8 = result[5];
    if (v9 == v8) {
      return result;
    }
    unint64_t v10 = (uint64_t **)result;
    while (1)
    {
      uint64_t v11 = v9 + 4;
      unint64_t v12 = *a2;
      while (v12 != v7)
      {
        int v13 = *v12;
        int v14 = *(_DWORD *)(v11 - 4);
        if (*v12 < v14) {
          break;
        }
        ++v12;
        BOOL v15 = v14 < v13 || v11 == v8;
        v11 += 4;
        if (v15) {
          goto LABEL_40;
        }
      }
      uint64_t result = *v10;
      if (!*v10) {
        break;
      }
      uint64_t v9 = result[4];
      uint64_t v8 = result[5];
      unint64_t v6 = v10;
      unint64_t v10 = (uint64_t **)*v10;
      if (v9 == v8) {
        return result;
      }
    }
    unint64_t v6 = v10;
    goto LABEL_44;
  }
LABEL_20:
  while (1)
  {
    unint64_t v10 = (uint64_t **)result;
    size_t v16 = (int *)result[4];
    size_t v17 = (int *)result[5];
    if (v16 == v17) {
      break;
    }
    size_t v18 = v16 + 1;
    int v19 = *a2;
    while (v19 != v7)
    {
      int v20 = *v19;
      int v21 = *(v18 - 1);
      if (*v19 < v21) {
        break;
      }
      ++v19;
      if (v21 < v20 || v18++ == v17) {
        goto LABEL_29;
      }
    }
    uint64_t result = (uint64_t *)*result;
    unint64_t v6 = v10;
    if (!*v10) {
      goto LABEL_44;
    }
  }
LABEL_29:
  uint64_t v23 = (uint64_t)(*a2 + 1);
  do
  {
    if (v16 == v17 || (int v24 = *v16, v25 = *(_DWORD *)(v23 - 4), *v16 < v25))
    {
      unint64_t v6 = (uint64_t **)(result + 1);
      uint64_t result = (uint64_t *)result[1];
      if (result) {
        goto LABEL_20;
      }
      goto LABEL_44;
    }
    ++v16;
    BOOL v26 = v25 < v24 || v23 == (void)v7;
    v23 += 4;
  }
  while (!v26);
LABEL_40:
  uint64_t result = (uint64_t *)v10;
  if (!v10) {
    goto LABEL_44;
  }
  return result;
}

void *std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t result = operator new(0x40uLL);
  int v7 = result;
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  result[4] = 0;
  uint64_t v8 = *a2;
  result[5] = 0;
  result[6] = 0;
  unint64_t v10 = *(unsigned char **)v8;
  uint64_t v9 = *(unsigned char **)(v8 + 8);
  int64_t v11 = v9 - v10;
  if (v9 != v10)
  {
    if (v11 < 0) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v12 = (char *)operator new(v9 - v10);
    v7[4] = v12;
    v7[5] = v12;
    int v13 = &v12[4 * (v11 >> 2)];
    v7[6] = v13;
    uint64_t result = memcpy(v12, v10, v11);
    v7[5] = v13;
  }
  *((_DWORD *)v7 + 14) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_23CDF087C(_Unwind_Exception *a1)
{
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v2 + 40) = v5;
    operator delete(v5);
  }
  std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,int>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,int>,void *>>>>::~unique_ptr[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

uint64_t std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,int>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,int>,void *>>>>::~unique_ptr[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v3 = (void *)v2[4];
      if (v3)
      {
        v2[5] = v3;
        operator delete(v3);
      }
    }
    operator delete(v2);
  }
  return a1;
}

uint64_t *std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__emplace_unique_key_args<std::vector<int>,std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>(uint64_t a1, int **a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v6 = (uint64_t **)(a1 + 8);
  uint64_t result = *(uint64_t **)(a1 + 8);
  if (!result)
  {
    unint64_t v10 = v6;
LABEL_44:
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>(a1, a4, (uint64_t)&v29);
    uint64_t v27 = v29;
    *long long v29 = 0;
    v27[1] = 0;
    v27[2] = (uint64_t)v10;
    uint64_t *v6 = v27;
    uint64_t v28 = **(void **)a1;
    if (v28)
    {
      *(void *)a1 = v28;
      uint64_t v27 = *v6;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 8), v27);
    ++*(void *)(a1 + 16);
    return v29;
  }
  int v7 = a2[1];
  if (*a2 == v7)
  {
    uint64_t v9 = result[4];
    uint64_t v8 = result[5];
    if (v9 == v8) {
      return result;
    }
    unint64_t v10 = (uint64_t **)result;
    while (1)
    {
      uint64_t v11 = v9 + 4;
      unint64_t v12 = *a2;
      while (v12 != v7)
      {
        int v13 = *v12;
        int v14 = *(_DWORD *)(v11 - 4);
        if (*v12 < v14) {
          break;
        }
        ++v12;
        BOOL v15 = v14 < v13 || v11 == v8;
        v11 += 4;
        if (v15) {
          goto LABEL_40;
        }
      }
      uint64_t result = *v10;
      if (!*v10) {
        break;
      }
      uint64_t v9 = result[4];
      uint64_t v8 = result[5];
      unint64_t v6 = v10;
      unint64_t v10 = (uint64_t **)*v10;
      if (v9 == v8) {
        return result;
      }
    }
    unint64_t v6 = v10;
    goto LABEL_44;
  }
LABEL_20:
  while (1)
  {
    unint64_t v10 = (uint64_t **)result;
    size_t v16 = (int *)result[4];
    size_t v17 = (int *)result[5];
    if (v16 == v17) {
      break;
    }
    size_t v18 = v16 + 1;
    int v19 = *a2;
    while (v19 != v7)
    {
      int v20 = *v19;
      int v21 = *(v18 - 1);
      if (*v19 < v21) {
        break;
      }
      ++v19;
      if (v21 < v20 || v18++ == v17) {
        goto LABEL_29;
      }
    }
    uint64_t result = (uint64_t *)*result;
    unint64_t v6 = v10;
    if (!*v10) {
      goto LABEL_44;
    }
  }
LABEL_29:
  uint64_t v23 = (uint64_t)(*a2 + 1);
  do
  {
    if (v16 == v17 || (int v24 = *v16, v25 = *(_DWORD *)(v23 - 4), *v16 < v25))
    {
      unint64_t v6 = (uint64_t **)(result + 1);
      uint64_t result = (uint64_t *)result[1];
      if (result) {
        goto LABEL_20;
      }
      goto LABEL_44;
    }
    ++v16;
    BOOL v26 = v25 < v24 || v23 == (void)v7;
    v23 += 4;
  }
  while (!v26);
LABEL_40:
  uint64_t result = (uint64_t *)v10;
  if (!v10) {
    goto LABEL_44;
  }
  return result;
}

void *std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t result = operator new(0x50uLL);
  int v7 = result;
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  result[4] = 0;
  uint64_t v8 = *a2;
  result[5] = 0;
  result[6] = 0;
  unint64_t v10 = *(unsigned char **)v8;
  uint64_t v9 = *(unsigned char **)(v8 + 8);
  int64_t v11 = v9 - v10;
  if (v9 != v10)
  {
    if (v11 < 0) {
      std::vector<L2CycleEstimator *>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v12 = (char *)operator new(v9 - v10);
    v7[4] = v12;
    v7[5] = v12;
    int v13 = &v12[4 * (v11 >> 2)];
    v7[6] = v13;
    uint64_t result = memcpy(v12, v10, v11);
    v7[5] = v13;
  }
  v7[7] = 0;
  v7[8] = 0;
  v7[9] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_23CDF0B8C(_Unwind_Exception *a1)
{
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v2 + 40) = v5;
    operator delete(v5);
  }
  std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>>>>::~unique_ptr[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

uint64_t std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>>>>::~unique_ptr[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v3 = (void *)v2[7];
      if (v3)
      {
        v2[8] = v3;
        operator delete(v3);
      }
      unint64_t v4 = (void *)v2[4];
      if (v4)
      {
        v2[5] = v4;
        operator delete(v4);
      }
    }
    operator delete(v2);
  }
  return a1;
}

uint64_t google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::~RepeatedPtrField(uint64_t a1)
{
  uint64_t v2 = *(google::protobuf::SourceCodeInfo_Location ***)(a1 + 16);
  if (v2)
  {
    unint64_t v3 = *(google::protobuf::internal::ArenaImpl **)a1;
    if (*(void *)a1)
    {
      *(void *)(a1 + 16) = 0;
LABEL_12:
      google::protobuf::internal::ArenaImpl::SpaceAllocated(v3);
      return a1;
    }
    unint64_t v4 = v2 + 1;
    uint64_t v5 = *(unsigned int *)v2;
    if ((int)v5 >= 1)
    {
      do
      {
        if (*v4)
        {
          google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(*v4);
          MEMORY[0x23ECF2BC0]();
        }
        ++v4;
        --v5;
      }
      while (v5);
      uint64_t v2 = *(google::protobuf::SourceCodeInfo_Location ***)(a1 + 16);
    }
    operator delete(v2);
  }
  unint64_t v3 = *(google::protobuf::internal::ArenaImpl **)a1;
  *(void *)(a1 + 16) = 0;
  if (v3) {
    goto LABEL_12;
  }
  return a1;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1768);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v6, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    unint64_t v3 = (google::protobuf::SourceCodeInfo_Location **)(*(void *)(a1 + 16) + 8);
    do
    {
      unint64_t v4 = *v3++;
      google::protobuf::SourceCodeInfo_Location::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_23CDF0D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF0D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1787);
    unint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v27, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = **(int **)(a1 + 16);
    uint64_t v10 = *(int *)(a1 + 8);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      int v13 = (const google::protobuf::SourceCodeInfo_Location **)(v6 + 8);
      int v14 = (google::protobuf::SourceCodeInfo_Location **)v7;
      do
      {
        size_t v16 = *v13++;
        BOOL v15 = v16;
        size_t v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      size_t v18 = *(google::protobuf::Arena **)a1;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      int v21 = (google::protobuf::SourceCodeInfo_Location **)((char *)v8 + v20);
      BOOL v22 = (const google::protobuf::SourceCodeInfo_Location **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        int v24 = (google::protobuf::SourceCodeInfo_Location *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v18);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *(_DWORD *)(a1 + 8) + v5;
    *(_DWORD *)(a1 + 8) = v25;
    BOOL v26 = *(int **)(a1 + 16);
    if (*v26 < v25) {
      *BOOL v26 = v25;
    }
  }
}

void sub_23CDF0EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF0EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(const google::protobuf::SourceCodeInfo_Location *a1, google::protobuf::SourceCodeInfo_Location *a2)
{
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

void InitDefaultsscc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::DescriptorProto::DescriptorProto((google::protobuf::DescriptorProto *)&google::protobuf::_DescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_default_instance_, v4);
  qword_26AEE2490 = (uint64_t)&google::protobuf::_MessageOptions_default_instance_;
}

void InitDefaultsscc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_DescriptorProto_ExtensionRange_default_instance_ = (uint64_t)&unk_26F0C4CF8;
  unk_26AEE2970 = 0;
  qword_26AEE2978 = 0;
  if (atomic_load_explicit(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE2980 = 0;
  unk_26AEE2988 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_ExtensionRange_default_instance_, v4);
  qword_26AEE2980 = (uint64_t)&google::protobuf::_ExtensionRangeOptions_default_instance_;
}

void InitDefaultsscc_info_DescriptorProto_ReservedRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  qword_26AEE2950 = 0;
  unk_26AEE2958 = 0;
  google::protobuf::_DescriptorProto_ReservedRange_default_instance_ = (uint64_t)&unk_26F0C4DA8;
  qword_26AEE2960 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_ReservedRange_default_instance_, v4);
}

void InitDefaultsscc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_EnumDescriptorProto_default_instance_ = (uint64_t)&unk_26F0C51C8;
  unk_26AEE2550 = 0;
  xmmword_26AEE2558 = 0u;
  unk_26AEE2568 = 0u;
  xmmword_26AEE2578 = 0u;
  unk_26AEE2588 = 0u;
  xmmword_26AEE2598 = 0u;
  if (atomic_load_explicit(scc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE25A8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE25B0 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumDescriptorProto_default_instance_, v4);
  qword_26AEE25B0 = (uint64_t)&google::protobuf::_EnumOptions_default_instance_;
}

void sub_23CDF11A8(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_EnumDescriptorProto_EnumReservedRange_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  qword_26AEE29D8 = 0;
  unk_26AEE29E0 = 0;
  google::protobuf::_EnumDescriptorProto_EnumReservedRange_default_instance_ = (uint64_t)&unk_26F0C5118;
  qword_26AEE29E8 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumDescriptorProto_EnumReservedRange_default_instance_, v4);
}

void InitDefaultsscc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_EnumOptions_default_instance_ = (uint64_t)&unk_26F0C5748;
  unk_26AEE2100 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE2108, 0);
  unk_26AEE2130 = 0u;
  unk_26AEE2120 = 0u;
  if (atomic_load_explicit(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  word_26AEE2140 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumOptions_default_instance_, v4);
}

void sub_23CDF1314(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_EnumValueDescriptorProto_default_instance_ = (uint64_t)&unk_26F0C5278;
  *(void *)algn_26AEE28B8 = 0;
  qword_26AEE28C0 = 0;
  if (atomic_load_explicit(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE28C8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE28D0 = 0;
  dword_26AEE28D8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValueDescriptorProto_default_instance_, v4);
  qword_26AEE28D0 = (uint64_t)&google::protobuf::_EnumValueOptions_default_instance_;
}

void InitDefaultsscc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_EnumValueOptions_default_instance_ = (uint64_t)&unk_26F0C57F8;
  unk_26AEE24A0 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE24A8, 0);
  unk_26AEE24D0 = 0u;
  unk_26AEE24C0 = 0u;
  if (atomic_load_explicit(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  byte_26AEE24E0 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValueOptions_default_instance_, v4);
}

void sub_23CDF14B0(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_ExtensionRangeOptions_default_instance_ = (uint64_t)&unk_26F0C4F08;
  unk_26AEE2780 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE2788, 0);
  qword_26AEE27A0 = 0;
  unk_26AEE27A8 = 0;
  dword_26AEE27B8 = 0;
  qword_26AEE27B0 = 0;
  if (atomic_load_explicit(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ExtensionRangeOptions_default_instance_, v4);
}

void sub_23CDF1594(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_FieldDescriptorProto_default_instance_ = (uint64_t)&unk_26F0C4FB8;
  *(void *)algn_26AEE26F8 = 0;
  qword_26AEE2700 = 0;
  if (atomic_load_explicit(scc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE2708 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE2710 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE2718 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE2720 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE2730 = 0;
  unk_26AEE2738 = 0;
  qword_26AEE2728 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  byte_26AEE2740 = 0;
  *(void *)&algn_26AEE2741[3] = 0x100000001;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldDescriptorProto_default_instance_, v4);
  qword_26AEE2730 = (uint64_t)&google::protobuf::_FieldOptions_default_instance_;
}

void InitDefaultsscc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_FieldOptions_default_instance_ = (uint64_t)&unk_26F0C55E8;
  *(void *)algn_26AEE21F8 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE2200, 0);
  unk_26AEE2228 = 0u;
  unk_26AEE2218 = 0u;
  if (atomic_load_explicit(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  dword_26AEE2240 = 0;
  qword_26AEE2238 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldOptions_default_instance_, v4);
}

void sub_23CDF1748(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)&google::protobuf::_FileDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileDescriptorProto_default_instance_, v4);
  qword_26AEE2680 = (uint64_t)&google::protobuf::_FileOptions_default_instance_;
  unk_26AEE2688 = &google::protobuf::_SourceCodeInfo_default_instance_;
}

void InitDefaultsscc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  qword_26AEE24F0 = 0;
  unk_26AEE24F8 = 0;
  google::protobuf::_FileDescriptorSet_default_instance_ = (uint64_t)&unk_26F0C4B98;
  qword_26AEE2500 = 0;
  unk_26AEE2508 = 0;
  dword_26AEE2510 = 0;
  if (atomic_load_explicit(scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto);
  }

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileDescriptorSet_default_instance_, v4);
}

void sub_23CDF189C(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_FileOptions_default_instance_ = (uint64_t)&unk_26F0C5488;
  unk_26AEE2150 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE2158, 0);
  unk_26AEE2180 = 0u;
  unk_26AEE2170 = 0u;
  if (atomic_load_explicit(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE2190 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE2198 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE21A0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE21A8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE21B0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE21B8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE21C0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE21C8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE21D0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE21D8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE21E0 = 0;
  dword_26AEE21E8 = 1;
  byte_26AEE21EC = 1;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileOptions_default_instance_, v4);
}

void sub_23CDF199C(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  qword_26AEE2520 = 0;
  unk_26AEE2528 = 0;
  google::protobuf::_GeneratedCodeInfo_default_instance_ = (uint64_t)&unk_26F0C5D78;
  qword_26AEE2530 = 0;
  unk_26AEE2538 = 0;
  dword_26AEE2540 = 0;
  if (atomic_load_explicit(scc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  }

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_GeneratedCodeInfo_default_instance_, v4);
}

void sub_23CDF1A74(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  qword_26AEE28E8 = 0;
  unk_26AEE28F0 = 0;
  google::protobuf::_GeneratedCodeInfo_Annotation_default_instance_ = (uint64_t)&unk_26F0C5CC8;
  qword_26AEE28F8 = 0;
  unk_26AEE2900 = 0;
  if (atomic_load_explicit(scc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE2910 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE2918 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_GeneratedCodeInfo_Annotation_default_instance_, v4);
}

void sub_23CDF1B44(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_MessageOptions_default_instance_ = (uint64_t)&unk_26F0C5538;
  *(void *)algn_26AEE22E8 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE22F0, 0);
  unk_26AEE2318 = 0u;
  unk_26AEE2308 = 0u;
  if (atomic_load_explicit(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  dword_26AEE2328 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MessageOptions_default_instance_, v4);
}

void sub_23CDF1C1C(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_MethodDescriptorProto_default_instance_ = (uint64_t)&unk_26F0C53D8;
  *(void *)algn_26AEE27C8 = 0;
  qword_26AEE27D0 = 0;
  if (atomic_load_explicit(scc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE27D8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE27E0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE27E8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE27F0 = 0;
  word_26AEE27F8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MethodDescriptorProto_default_instance_, v4);
  qword_26AEE27F0 = (uint64_t)&google::protobuf::_MethodOptions_default_instance_;
}

void InitDefaultsscc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_MethodOptions_default_instance_ = (uint64_t)&unk_26F0C5958;
  *(void *)algn_26AEE2298 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE22A0, 0);
  unk_26AEE22C8 = 0u;
  unk_26AEE22B8 = 0u;
  if (atomic_load_explicit(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE22D8 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MethodOptions_default_instance_, v4);
}

void sub_23CDF1DBC(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_OneofDescriptorProto_default_instance_ = (uint64_t)&unk_26F0C5068;
  *(void *)algn_26AEE2758 = 0;
  qword_26AEE2760 = 0;
  if (atomic_load_explicit(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE2768 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE2770 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_OneofDescriptorProto_default_instance_, v4);
  qword_26AEE2770 = (uint64_t)&google::protobuf::_OneofOptions_default_instance_;
}

void InitDefaultsscc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_OneofOptions_default_instance_ = (uint64_t)&unk_26F0C5698;
  unk_26AEE2250 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE2258, 0);
  qword_26AEE2270 = 0;
  unk_26AEE2278 = 0;
  dword_26AEE2288 = 0;
  qword_26AEE2280 = 0;
  if (atomic_load_explicit(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_OneofOptions_default_instance_, v4);
}

void sub_23CDF1F54(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_ServiceDescriptorProto_default_instance_ = (uint64_t)&unk_26F0C5328;
  *(void *)algn_26AEE2808 = 0;
  xmmword_26AEE2810 = 0u;
  unk_26AEE2820 = 0u;
  if (atomic_load_explicit(scc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE2830 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE2838 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ServiceDescriptorProto_default_instance_, v4);
  qword_26AEE2838 = (uint64_t)&google::protobuf::_ServiceOptions_default_instance_;
}

void sub_23CDF2030(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_ServiceOptions_default_instance_ = (uint64_t)&unk_26F0C58A8;
  *(void *)algn_26AEE2338 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_26AEE2340, 0);
  unk_26AEE2368 = 0u;
  unk_26AEE2358 = 0u;
  if (atomic_load_explicit(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  byte_26AEE2378 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ServiceOptions_default_instance_, v4);
}

void sub_23CDF2108(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  qword_26AEE2388 = 0;
  unk_26AEE2390 = 0;
  google::protobuf::_SourceCodeInfo_default_instance_ = (uint64_t)&unk_26F0C5C18;
  qword_26AEE2398 = 0;
  unk_26AEE23A0 = 0;
  dword_26AEE23A8 = 0;
  if (atomic_load_explicit(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  }

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceCodeInfo_default_instance_, v4);
}

void sub_23CDF21E0(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  qword_26AEE2848 = 0;
  unk_26AEE2850 = 0;
  google::protobuf::_SourceCodeInfo_Location_default_instance_ = (uint64_t)&unk_26F0C5B68;
  qword_26AEE2858 = 0;
  unk_26AEE2860 = 0;
  qword_26AEE2870 = 0;
  unk_26AEE2878 = 0;
  qword_26AEE2890 = 0;
  unk_26AEE2898 = 0;
  qword_26AEE2888 = 0;
  if (atomic_load_explicit(scc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE28A0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE28A8 = &google::protobuf::internal::fixed_address_empty_string;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceCodeInfo_Location_default_instance_, v4);
}

void sub_23CDF22BC(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_UninterpretedOption_default_instance_ = (uint64_t)&unk_26F0C5AB8;
  *(void *)algn_26AEE2698 = 0;
  xmmword_26AEE26A0 = 0u;
  unk_26AEE26B0 = 0u;
  if (atomic_load_explicit(scc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE26C0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE26C8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_26AEE26D0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_26AEE26D8 = 0;
  qword_26AEE26E0 = 0;
  unk_26AEE26E8 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UninterpretedOption_default_instance_, v4);
}

void sub_23CDF23A8(_Unwind_Exception *a1)
{
}

void InitDefaultsscc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DF5A2, (google::protobuf::internal *)0x2DF5A0, "/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_UninterpretedOption_NamePart_default_instance_ = (uint64_t)&unk_26F0C5A08;
  *(void *)algn_26AEE2928 = 0;
  qword_26AEE2930 = 0;
  if (atomic_load_explicit(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_26AEE2938 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  byte_26AEE2940 = 0;

  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UninterpretedOption_NamePart_default_instance_, v4);
}

BOOL google::protobuf::FieldDescriptorProto_Type_IsValid(google::protobuf *this)
{
  return (this - 1) < 0x12;
}

BOOL google::protobuf::FieldDescriptorProto_Label_IsValid(google::protobuf *this)
{
  return (this - 1) < 3;
}

uint64_t google::protobuf::FieldOptions_JSType_descriptor(google::protobuf *this)
{
  return qword_268BCCA40;
}

void google::protobuf::FileDescriptorSet::~FileDescriptorSet(google::protobuf::FileDescriptorSet *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 1409);
    unint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    int v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      uint64_t v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        uint64_t v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::~RepeatedPtrField((uint64_t)this + 16);
}

{
  uint64_t vars8;

  google::protobuf::FileDescriptorSet::~FileDescriptorSet(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CDF25B8(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CDF25CC(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::FileDescriptorSet::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::FileDescriptorSet::Clear(google::protobuf::FileDescriptorSet *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((uint64_t)this + 16);
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

google::protobuf::internal *google::protobuf::FileDescriptorSet::_InternalParse(google::protobuf::FileDescriptorSet *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  int8x8_t v35 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v35, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)((char *)this + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v35 + 1);
      unsigned int v8 = *(unsigned __int8 *)v35;
      if ((*(char *)v35 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0)
      {
        char v7 = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_6:
        int8x8_t v35 = v7;
        if (v8 == 10) {
          break;
        }
        goto LABEL_7;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, (const char *)(v9 - 128));
      int8x8_t v35 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v7 = TagFallback;
      unsigned int v8 = v12;
      if (v12 == 10) {
        break;
      }
LABEL_7:
      if (v8) {
        BOOL v10 = (v8 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        a3[10].i32[0] = v8 - 1;
        return v35;
      }
      if (*v6)
      {
        int8x8_t v35 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v8, (google::protobuf::UnknownFieldSet *)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8), v7, (const char *)a3, v5);
        if (!v35) {
          return 0;
        }
        goto LABEL_33;
      }
      unint64_t v32 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
      int8x8_t v35 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v8, (google::protobuf::UnknownFieldSet *)v32, v35, (const char *)a3, v33);
      if (!v35) {
        return 0;
      }
LABEL_33:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v35, a3[11].i32[1]))return v35; {
    }
      }
    int v13 = (char *)v7 - 1;
    while (1)
    {
      int v14 = (google::protobuf::internal *)(v13 + 1);
      int8x8_t v35 = v14;
      BOOL v15 = (int *)*((void *)this + 4);
      if (!v15) {
        break;
      }
      uint64_t v16 = *((int *)this + 6);
      int v17 = *v15;
      if ((int)v16 < *v15)
      {
        *((_DWORD *)this + 6) = v16 + 1;
        size_t v18 = *(google::protobuf::FileDescriptorProto **)&v15[2 * v16 + 2];
        int v19 = (const char *)*(unsigned __int8 *)v14;
        if ((*(char *)v14 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        goto LABEL_20;
      }
      if (v17 == *((_DWORD *)this + 7)) {
        goto LABEL_25;
      }
LABEL_26:
      *BOOL v15 = v17 + 1;
      size_t v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(*((google::protobuf::Arena **)this
                                                                                               + 2));
      uint64_t v24 = *((void *)this + 4);
      uint64_t v25 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v25 + 1;
      *(void *)(v24 + 8 * v25 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v18;
      int v14 = v35;
      int v19 = (const char *)*(unsigned __int8 *)v35;
      if ((*(char *)v35 & 0x80000000) == 0)
      {
LABEL_27:
        BOOL v22 = (char *)v14 + 1;
        goto LABEL_28;
      }
LABEL_20:
      uint64_t SizeFallback = google::protobuf::internal::ReadSizeFallback(v14, v19);
      if (!SizeFallback) {
        return 0;
      }
      BOOL v22 = (std::string::value_type *)SizeFallback;
      LODWORD(v19) = v21;
      if (v21 >= 0x7FFFFFF0)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v37, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
        uint64_t v23 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v37, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v36, v23);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v37[0].__r_.__value_.__l.__data_);
      }
LABEL_28:
      int32x2_t v26 = a3[1];
      int v27 = v19 + v22 - v26.i32[0];
      *a3 = (int32x2_t)(*(void *)&v26 + (v27 & (v27 >> 31)));
      __int32 v28 = a3[3].i32[1];
      a3[3].i32[1] = v27;
      v26.i32[0] = a3[11].i32[0];
      BOOL v29 = __OFSUB__(v26.i32[0]--, 1);
      a3[11].i32[0] = v26.i32[0];
      if (v26.i32[0] < 0 != v29) {
        return 0;
      }
      int v13 = google::protobuf::FileDescriptorProto::_InternalParse(v18, v22, a3);
      if (!v13) {
        return 0;
      }
      ++a3[11].i32[0];
      if (a3[10].i32[0]) {
        return 0;
      }
      int v30 = a3[3].i32[1] + v28 - v27;
      a3[3].i32[1] = v30;
      int32x2_t v31 = (int32x2_t)(*(void *)&a3[1] + (v30 & (v30 >> 31)));
      *a3 = v31;
      int8x8_t v35 = (google::protobuf::internal *)v13;
      if (*(void *)&v31 <= (unint64_t)v13 || *v13 != 10) {
        goto LABEL_33;
      }
    }
    int v17 = *((_DWORD *)this + 7);
LABEL_25:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 4, v17 + 1);
    BOOL v15 = (int *)*((void *)this + 4);
    int v17 = *v15;
    goto LABEL_26;
  }
  return v35;
}

void sub_23CDF296C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF2980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorSet::_InternalSerialize(google::protobuf::FileDescriptorSet *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 6);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      BOOL v10 = (google::protobuf::FileDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((uint64_t)this + 16, i);
      *(unsigned char *)a2 = 10;
      unsigned int v12 = *((_DWORD *)v10 + 5);
      if (v12 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = v12;
        unsigned int v9 = (char *)a2 + 2;
      }
      else
      {
        *((unsigned char *)a2 + 1) = v12 | 0x80;
        unsigned int v13 = v12 >> 7;
        if (v12 >> 14)
        {
          unsigned int v9 = (char *)a2 + 3;
          do
          {
            *(v9 - 1) = v13 | 0x80;
            unsigned int v14 = v13 >> 7;
            ++v9;
            unsigned int v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v9 - 1) = v14;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v13;
          unsigned int v9 = (char *)a2 + 3;
        }
      }
      a2 = google::protobuf::FileDescriptorProto::_InternalSerialize(v10, v9, a3, v11);
    }
  }
  uint64_t v16 = *((void *)this + 1);
  if ((v16 & 1) == 0) {
    return a2;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::FileDescriptorSet::ByteSizeLong(google::protobuf::FileDescriptorSet *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    unint64_t v4 = (google::protobuf::FileDescriptorProto **)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      uint64_t v6 = *v4++;
      int v7 = google::protobuf::FileDescriptorProto::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
    unsigned int v8 = (google::protobuf::FileDescriptorSet *)((char *)this + 8);
    if ((*((unsigned char *)this + 8) & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v2 = 0;
    unsigned int v8 = (google::protobuf::FileDescriptorSet *)((char *)this + 8);
    if ((*((unsigned char *)this + 8) & 1) == 0)
    {
LABEL_8:
      *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v2;
      return (char *)v2;
    }
  }

  return google::protobuf::internal::ComputeUnknownFieldsSize(v8, v2, (_DWORD *)this + 10);
}

void google::protobuf::FileDescriptorSet::MergeFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 1527);
    unint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::FileDescriptorSet::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDF2C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF2C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorSet::MergeFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::FileDescriptorSet *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 1542);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v6 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v7 = *((void *)this + 1);
  if (v7) {
    unsigned int v8 = (char *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    unsigned int v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v6);
LABEL_8:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((uint64_t)this + 16, (uint64_t)a2 + 16);
}

void sub_23CDF2D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF2D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorSet::CopyFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((uint64_t)this + 16);
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::FileDescriptorSet::MergeFrom(this, a2);
  }
}

BOOL google::protobuf::FileDescriptorSet::IsInitialized(google::protobuf::FileDescriptorSet *this)
{
  uint64_t v1 = (char *)this + 16;
  int v2 = *((_DWORD *)this + 6);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = (google::protobuf::FileDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((uint64_t)v1, v2);
  }
  while ((google::protobuf::FileDescriptorProto::IsInitialized(v5) & 1) != 0);
  return v3 < 1;
}

uint64_t google::protobuf::FileDescriptorSet::GetMetadata(google::protobuf::FileDescriptorSet *this)
{
  return *off_26AED0A18;
}

google::protobuf::FileDescriptorProto *google::protobuf::FileDescriptorProto::FileDescriptorProto(google::protobuf::FileDescriptorProto *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C4C48;
  *((void *)this + 1) = a2;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = a2;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = a2;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  *((void *)this + 9) = a2;
  *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = a2;
  *((void *)this + 15) = a2;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((void *)this + 19) = a2;
  *((void *)this + 21) = a2;
  *((void *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if (atomic_load_explicit(scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((void *)this + 22) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 23) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 25) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 24) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_23CDF2F64(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedField<BOOL>::~RepeatedField(v7);
  google::protobuf::RepeatedField<BOOL>::~RepeatedField(v3 + 144);
  google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::~RepeatedPtrField(v6);
  google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::~RepeatedPtrField(v4);
  google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::~RepeatedPtrField(v2);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::~RepeatedPtrField(uint64_t a1)
{
  uint64_t v2 = *(google::protobuf::internal::ArenaImpl ****)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(google::protobuf::internal::ArenaImpl **)a1;
    if (*(void *)a1)
    {
      *(void *)(a1 + 16) = 0;
LABEL_12:
      google::protobuf::internal::ArenaImpl::SpaceAllocated(v3);
      return a1;
    }
    uint64_t v4 = v2 + 1;
    uint64_t v5 = *(unsigned int *)v2;
    if ((int)v5 >= 1)
    {
      do
      {
        if (*v4)
        {
          google::protobuf::DescriptorProto::~DescriptorProto(*v4);
          MEMORY[0x23ECF2BC0]();
        }
        ++v4;
        --v5;
      }
      while (v5);
      uint64_t v2 = *(google::protobuf::internal::ArenaImpl ****)(a1 + 16);
    }
    operator delete(v2);
  }
  uint64_t v3 = *(google::protobuf::internal::ArenaImpl **)a1;
  *(void *)(a1 + 16) = 0;
  if (v3) {
    goto LABEL_12;
  }
  return a1;
}

void google::protobuf::FileDescriptorProto::~FileDescriptorProto(google::protobuf::FileDescriptorProto *this)
{
  google::protobuf::FileDescriptorProto::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      uint64_t v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        uint64_t v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedField<BOOL>::~RepeatedField((uint64_t)this + 160);
  google::protobuf::RepeatedField<BOOL>::~RepeatedField((uint64_t)this + 144);
  google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::~RepeatedPtrField((uint64_t)this + 120);
  google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::~RepeatedPtrField((uint64_t)this + 96);
  google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::~RepeatedPtrField((uint64_t)this + 72);
  google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
}

{
  uint64_t vars8;

  google::protobuf::FileDescriptorProto::~FileDescriptorProto(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::FileDescriptorProto::SharedDtor(google::protobuf::FileDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 1687);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 22);
  if ((uint64_t *)v5 == &google::protobuf::internal::fixed_address_empty_string || v5 == 0)
  {
    uint64_t v7 = *((void *)this + 23);
    if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0) {
      goto LABEL_22;
    }
LABEL_14:
    uint64_t v9 = *((void *)this + 24);
    if ((uint64_t *)v9 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  if (*(char *)(v5 + 23) < 0) {
    operator delete(*(void **)v5);
  }
  MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  uint64_t v7 = *((void *)this + 23);
  if ((uint64_t *)v7 == &google::protobuf::internal::fixed_address_empty_string || v7 == 0) {
    goto LABEL_14;
  }
LABEL_22:
  if (*(char *)(v7 + 23) < 0) {
    operator delete(*(void **)v7);
  }
  MEMORY[0x23ECF2BC0](v7, 0x1012C40EC159624);
  uint64_t v9 = *((void *)this + 24);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
LABEL_25:
    if (v9)
    {
      if (*(char *)(v9 + 23) < 0) {
        operator delete(*(void **)v9);
      }
      MEMORY[0x23ECF2BC0](v9, 0x1012C40EC159624);
    }
  }
LABEL_29:
  if (this != (google::protobuf::FileDescriptorProto *)&google::protobuf::_FileDescriptorProto_default_instance_)
  {
    int v11 = (google::protobuf::FileOptions *)*((void *)this + 25);
    if (v11)
    {
      google::protobuf::FileOptions::~FileOptions(v11);
      MEMORY[0x23ECF2BC0]();
    }
    unsigned int v12 = (google::protobuf::SourceCodeInfo *)*((void *)this + 26);
    if (v12)
    {
      google::protobuf::SourceCodeInfo::~SourceCodeInfo(v12);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CDF32CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF32E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::FileDescriptorProto::Clear(google::protobuf::FileDescriptorProto *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)this + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((uint64_t)this + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)this + 120);
  *((_DWORD *)this + 36) = 0;
  *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_29;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t v4 = *((void *)this + 23);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_16;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_20:
    uint64_t v6 = (google::protobuf::FileOptions *)*((void *)this + 25);
    if (v6)
    {
      google::protobuf::FileOptions::Clear(v6);
      if ((v2 & 0x10) == 0) {
        goto LABEL_29;
      }
    }
    else
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 1735);
      uint64_t v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v7);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
      google::protobuf::FileOptions::Clear(*((google::protobuf::FileOptions **)this + 25));
      if ((v2 & 0x10) == 0) {
        goto LABEL_29;
      }
    }
    goto LABEL_24;
  }
  uint64_t v3 = *((void *)this + 22);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_12;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_12;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t v5 = *((void *)this + 24);
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)uint64_t v5 = 0;
    *(void *)(v5 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_20;
    }
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_29;
  }
LABEL_24:
  uint64_t v8 = *((void *)this + 26);
  if (!v8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 1739);
    uint64_t v9 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: source_code_info_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v9);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    uint64_t v8 = *((void *)this + 26);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(v8 + 16);
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v10 & 1) != 0 && *(void *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v10 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
LABEL_29:
  *((_DWORD *)this + 4) = 0;
  uint64_t v11 = *((void *)this + 1);
  if ((v11 & 1) != 0 && *(void *)((v11 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v11 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v11 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CDF3520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF3534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF3548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF355C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileOptions::Clear(google::protobuf::FileOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::FileOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
  int v2 = *((_DWORD *)this + 10);
  if (!(_BYTE)v2) {
    goto LABEL_41;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 9);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t v5 = *((void *)this + 11);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    uint64_t v7 = *((void *)this + 13);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  uint64_t v4 = *((void *)this + 10);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_23:
  uint64_t v6 = *((void *)this + 12);
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)uint64_t v6 = 0;
    *(void *)(v6 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_27;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_27;
    }
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_31:
  uint64_t v8 = *((void *)this + 14);
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)uint64_t v8 = 0;
    *(void *)(v8 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 0x40) != 0)
    {
LABEL_35:
      uint64_t v9 = *((void *)this + 15);
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)uint64_t v9 = 0;
        *(void *)(v9 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
        if ((v2 & 0x80) == 0) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x80) != 0) {
        goto LABEL_39;
      }
LABEL_41:
      if ((v2 & 0x300) == 0) {
        goto LABEL_53;
      }
      goto LABEL_42;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_35;
    }
  }
LABEL_9:
  if ((v2 & 0x80) == 0) {
    goto LABEL_41;
  }
LABEL_39:
  uint64_t v10 = *((void *)this + 16);
  if ((*(char *)(v10 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    goto LABEL_41;
  }
  **(unsigned char **)uint64_t v10 = 0;
  *(void *)(v10 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if ((v2 & 0x300) == 0) {
    goto LABEL_53;
  }
LABEL_42:
  if ((v2 & 0x100) != 0)
  {
    uint64_t v11 = *((void *)this + 17);
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 0x200) == 0) {
        goto LABEL_53;
      }
      goto LABEL_46;
    }
    *(unsigned char *)uint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
  }
  if ((v2 & 0x200) == 0) {
    goto LABEL_53;
  }
LABEL_46:
  uint64_t v12 = *((void *)this + 18);
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)uint64_t v12 = 0;
    *(void *)(v12 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
  }
LABEL_53:
  if ((v2 & 0xFC00) != 0)
  {
    *((_WORD *)this + 7google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    *((_DWORD *)this + 3google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  }
  if ((v2 & 0xF0000) != 0)
  {
    *((_WORD *)this + 79) = 0;
    *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 1;
    *((unsigned char *)this + 164) = 1;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v13 = *((void *)this + 1);
  if ((v13 & 1) != 0 && *(void *)((v13 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v13 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v13 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

void google::protobuf::SourceCodeInfo::Clear(google::protobuf::SourceCodeInfo *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)this + 16);
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::FileDescriptorProto::_InternalParse(google::protobuf::FileDescriptorProto *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v109 = (std::string **)((char *)this + 192);
    int v110 = (unint64_t *)((char *)this + 8);
    uint64_t v8 = (uint64_t *)((char *)this + 24);
    uint64_t v107 = (std::string **)((char *)this + 176);
    long long v108 = (std::string **)((char *)this + 184);
    while (1)
    {
      uint64_t v13 = __s + 1;
      unsigned int v14 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_11;
      }
      unsigned int v15 = v14 + (*v13 << 7);
      unsigned int v14 = v15 - 128;
      if ((*v13 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v15 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v13 = TagFallback;
      unsigned int v14 = v23;
      unsigned int v16 = (v23 >> 3) - 1;
      if (v16 > 0xB)
      {
LABEL_23:
        if (v14) {
          BOOL v24 = (v14 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (v24)
        {
          a3[10].i32[0] = v14 - 1;
          return __s;
        }
        if (*v110)
        {
          uint64_t v25 = (char *)((*v110 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v25 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v110);
          uint64_t v13 = __s;
        }
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v14, (google::protobuf::UnknownFieldSet *)v25, (google::protobuf::UnknownFieldSet *)v13, (const char *)a3, v6);
        if (!__s) {
          return 0;
        }
        goto LABEL_7;
      }
LABEL_12:
      switch(v16)
      {
        case 0u:
          if (v14 != 10) {
            goto LABEL_23;
          }
          *((_DWORD *)this + 4) |= 1u;
          uint64_t v17 = *((void *)this + 1);
          size_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
          if ((v17 & 1) == 0)
          {
            int v19 = *v107;
            if (*v107 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_17;
            }
LABEL_16:
            google::protobuf::internal::ArenaStringPtr::CreateInstance(v107, v18, (long long *)&google::protobuf::internal::fixed_address_empty_string);
            int v19 = *v107;
            uint64_t v13 = __s;
            goto LABEL_17;
          }
          size_t v18 = *(google::protobuf::Arena **)v18;
          int v19 = *v107;
          if (*v107 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_16;
          }
LABEL_17:
          __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v19, v13, (uint64_t)a3);
          if (SHIBYTE(v19->__r_.__value_.__r.__words[2]) < 0)
          {
            unsigned int v21 = (std::string *)v19->__r_.__value_.__r.__words[0];
            std::string::size_type size = v19->__r_.__value_.__l.__size_;
            if ((size & 0x8000000000000000) != 0) {
              google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v19->__r_.__value_.__l.__size_, "size_t to int conversion", v20);
            }
            int v19 = v21;
          }
          else
          {
            std::string::size_type size = HIBYTE(v19->__r_.__value_.__r.__words[2]);
          }
          uint64_t v10 = v19;
          size_t v11 = size;
          uint64_t v12 = "google.protobuf.FileDescriptorProto.name";
          goto LABEL_6;
        case 1u:
          if (v14 != 18) {
            goto LABEL_23;
          }
          *((_DWORD *)this + 4) |= 2u;
          uint64_t v26 = *((void *)this + 1);
          int v27 = (google::protobuf::Arena *)(v26 & 0xFFFFFFFFFFFFFFFELL);
          if ((v26 & 1) == 0)
          {
            __int32 v28 = *v108;
            if (*v108 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_35;
            }
LABEL_34:
            google::protobuf::internal::ArenaStringPtr::CreateInstance(v108, v27, (long long *)&google::protobuf::internal::fixed_address_empty_string);
            __int32 v28 = *v108;
            uint64_t v13 = __s;
            goto LABEL_35;
          }
          int v27 = *(google::protobuf::Arena **)v27;
          __int32 v28 = *v108;
          if (*v108 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_34;
          }
LABEL_35:
          __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v28, v13, (uint64_t)a3);
          if (SHIBYTE(v28->__r_.__value_.__r.__words[2]) < 0)
          {
            std::string::size_type v104 = (std::string *)v28->__r_.__value_.__r.__words[0];
            std::string::size_type v30 = v28->__r_.__value_.__l.__size_;
            if ((v30 & 0x8000000000000000) != 0) {
              google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v28->__r_.__value_.__l.__size_, "size_t to int conversion", v29);
            }
            __int32 v28 = v104;
          }
          else
          {
            std::string::size_type v30 = HIBYTE(v28->__r_.__value_.__r.__words[2]);
          }
          uint64_t v10 = v28;
          size_t v11 = v30;
          uint64_t v12 = "google.protobuf.FileDescriptorProto.package";
          goto LABEL_6;
        case 2u:
          if (v14 != 26) {
            goto LABEL_23;
          }
          int32x2_t v31 = v13 - 1;
          while (1)
          {
            unint64_t v32 = v31 + 1;
            __s = v31 + 1;
            unint64_t v33 = (int *)*((void *)this + 5);
            if (!v33) {
              break;
            }
            uint64_t v34 = *((int *)this + 8);
            int v35 = *v33;
            if ((int)v34 < *v33)
            {
              *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v34 + 1;
              AlignedAndAddCleanup = *(std::string **)&v33[2 * v34 + 2];
              __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v32, (uint64_t)a3);
              int v38 = SHIBYTE(AlignedAndAddCleanup->__r_.__value_.__r.__words[2]);
              if (v38 < 0) {
                goto LABEL_42;
              }
              goto LABEL_54;
            }
            if (v35 == *((_DWORD *)this + 9)) {
              goto LABEL_47;
            }
LABEL_48:
            *unint64_t v33 = v35 + 1;
            unint64_t v41 = (atomic_ullong *)*v8;
            if (!*v8) {
              operator new();
            }
            if (v41[14]) {
            AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v41, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
            }
            AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
            AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
            AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
            uint64_t v42 = *((void *)this + 5);
            uint64_t v43 = *((int *)this + 8);
            *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v43 + 1;
            *(void *)(v42 + 8 * v43 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = AlignedAndAddCleanup;
            unint64_t v44 = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, __s, (uint64_t)a3);
            __s = v44;
            int v38 = SHIBYTE(AlignedAndAddCleanup->__r_.__value_.__r.__words[2]);
            if (v38 < 0)
            {
LABEL_42:
              unint64_t v40 = (std::string *)AlignedAndAddCleanup->__r_.__value_.__r.__words[0];
              size_t v39 = AlignedAndAddCleanup->__r_.__value_.__l.__size_;
              if ((v39 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)AlignedAndAddCleanup->__r_.__value_.__l.__size_, "size_t to int conversion", v37);
              }
              AlignedAndAddCleanup = v40;
              goto LABEL_55;
            }
LABEL_54:
            size_t v39 = v38;
LABEL_55:
            google::protobuf::internal::VerifyUTF8(AlignedAndAddCleanup, v39, (google::protobuf::internal *)"google.protobuf.FileDescriptorProto.dependency");
            int32x2_t v31 = __s;
            if (!__s) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)__s || *__s != 26) {
              goto LABEL_7;
            }
          }
          int v35 = *((_DWORD *)this + 9);
LABEL_47:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v35 + 1);
          unint64_t v33 = (int *)*((void *)this + 5);
          int v35 = *v33;
          goto LABEL_48;
        case 3u:
          if (v14 != 34) {
            goto LABEL_23;
          }
          char v45 = v13 - 1;
          while (1)
          {
            std::string v46 = v45 + 1;
            __s = v45 + 1;
            unint64_t v47 = (int *)*((void *)this + 8);
            if (!v47) {
              break;
            }
            uint64_t v48 = *((int *)this + 14);
            int v49 = *v47;
            if ((int)v48 >= *v47)
            {
              if (v49 == *((_DWORD *)this + 15))
              {
LABEL_66:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v49 + 1);
                unint64_t v47 = (int *)*((void *)this + 8);
                int v49 = *v47;
              }
              *unint64_t v47 = v49 + 1;
              uint64_t v50 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::Arena **)this + 6));
              uint64_t v51 = *((void *)this + 8);
              uint64_t v52 = *((int *)this + 14);
              *((_DWORD *)this + 14) = v52 + 1;
              *(void *)(v51 + 8 * v52 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v50;
              std::string v46 = __s;
              goto LABEL_68;
            }
            *((_DWORD *)this + 14) = v48 + 1;
            uint64_t v50 = *(google::protobuf::DescriptorProto **)&v47[2 * v48 + 2];
LABEL_68:
            char v45 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>(a3, v50, v46);
            __s = v45;
            if (!v45) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v45 || *v45 != 34) {
              goto LABEL_7;
            }
          }
          int v49 = *((_DWORD *)this + 15);
          goto LABEL_66;
        case 4u:
          if (v14 != 42) {
            goto LABEL_23;
          }
          long long v53 = v13 - 1;
          while (1)
          {
            uint64_t v54 = v53 + 1;
            __s = v53 + 1;
            int v55 = (int *)*((void *)this + 11);
            if (!v55) {
              break;
            }
            uint64_t v56 = *((int *)this + 20);
            int v57 = *v55;
            if ((int)v56 >= *v55)
            {
              if (v57 == *((_DWORD *)this + 21))
              {
LABEL_79:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 18, v57 + 1);
                int v55 = (int *)*((void *)this + 11);
                int v57 = *v55;
              }
              int *v55 = v57 + 1;
              int v58 = (google::protobuf::EnumDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::Arena **)this + 9));
              uint64_t v59 = *((void *)this + 11);
              uint64_t v60 = *((int *)this + 20);
              *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v60 + 1;
              *(void *)(v59 + 8 * v60 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v58;
              uint64_t v54 = __s;
              goto LABEL_81;
            }
            *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v56 + 1;
            int v58 = *(google::protobuf::EnumDescriptorProto **)&v55[2 * v56 + 2];
LABEL_81:
            long long v53 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(a3, v58, v54);
            __s = v53;
            if (!v53) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v53 || *v53 != 42) {
              goto LABEL_7;
            }
          }
          int v57 = *((_DWORD *)this + 21);
          goto LABEL_79;
        case 5u:
          if (v14 != 50) {
            goto LABEL_23;
          }
          int v61 = v13 - 1;
          while (1)
          {
            int v62 = v61 + 1;
            __s = v61 + 1;
            int v63 = (int *)*((void *)this + 14);
            if (!v63) {
              break;
            }
            uint64_t v64 = *((int *)this + 26);
            int v65 = *v63;
            if ((int)v64 >= *v63)
            {
              if (v65 == *((_DWORD *)this + 27))
              {
LABEL_92:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 24, v65 + 1);
                int v63 = (int *)*((void *)this + 14);
                int v65 = *v63;
              }
              *int v63 = v65 + 1;
              int64_t v66 = (google::protobuf::ServiceDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*((google::protobuf::Arena **)this + 12));
              uint64_t v67 = *((void *)this + 14);
              uint64_t v68 = *((int *)this + 26);
              *((_DWORD *)this + 26) = v68 + 1;
              *(void *)(v67 + 8 * v68 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v66;
              int v62 = __s;
              goto LABEL_94;
            }
            *((_DWORD *)this + 26) = v64 + 1;
            int64_t v66 = *(google::protobuf::ServiceDescriptorProto **)&v63[2 * v64 + 2];
LABEL_94:
            int v61 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::ServiceDescriptorProto>(a3, v66, v62);
            __s = v61;
            if (!v61) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v61 || *v61 != 50) {
              goto LABEL_7;
            }
          }
          int v65 = *((_DWORD *)this + 27);
          goto LABEL_92;
        case 6u:
          if (v14 != 58) {
            goto LABEL_23;
          }
          std::string v69 = v13 - 1;
          while (1)
          {
            unsigned int v70 = v69 + 1;
            __s = v69 + 1;
            uint64_t v71 = (int *)*((void *)this + 17);
            if (!v71) {
              break;
            }
            uint64_t v72 = *((int *)this + 32);
            int v73 = *v71;
            if ((int)v72 >= *v71)
            {
              if (v73 == *((_DWORD *)this + 33))
              {
LABEL_105:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 30, v73 + 1);
                uint64_t v71 = (int *)*((void *)this + 17);
                int v73 = *v71;
              }
              *uint64_t v71 = v73 + 1;
              unint64_t v74 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)this + 15));
              uint64_t v75 = *((void *)this + 17);
              uint64_t v76 = *((int *)this + 32);
              *((_DWORD *)this + 32) = v76 + 1;
              *(void *)(v75 + 8 * v76 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v74;
              unsigned int v70 = __s;
              goto LABEL_107;
            }
            *((_DWORD *)this + 32) = v72 + 1;
            unint64_t v74 = *(google::protobuf::FieldDescriptorProto **)&v71[2 * v72 + 2];
LABEL_107:
            std::string v69 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(a3, v74, v70);
            __s = v69;
            if (!v69) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v69 || *v69 != 58) {
              goto LABEL_7;
            }
          }
          int v73 = *((_DWORD *)this + 33);
          goto LABEL_105;
        case 7u:
          if (v14 != 66) {
            goto LABEL_23;
          }
          *((_DWORD *)this + 4) |= 8u;
          BOOL v77 = (google::protobuf::FileOptions *)*((void *)this + 25);
          if (!v77)
          {
            int v78 = (google::protobuf::Arena *)(*v110 & 0xFFFFFFFFFFFFFFFELL);
            if (*v110) {
              int v78 = *(google::protobuf::Arena **)v78;
            }
            BOOL v77 = (google::protobuf::FileOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v78);
            *((void *)this + 25) = v77;
            uint64_t v13 = __s;
          }
          __s = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FileOptions>(a3, v77, v13);
          if (!__s) {
            return 0;
          }
          break;
        case 8u:
          if (v14 != 74) {
            goto LABEL_23;
          }
          *((_DWORD *)this + 4) |= 0x10u;
          std::string::size_type v79 = (google::protobuf::SourceCodeInfo *)*((void *)this + 26);
          if (!v79)
          {
            uint64_t v80 = (google::protobuf::Arena *)(*v110 & 0xFFFFFFFFFFFFFFFELL);
            if (*v110) {
              uint64_t v80 = *(google::protobuf::Arena **)v80;
            }
            std::string::size_type v79 = (google::protobuf::SourceCodeInfo *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(v80);
            *((void *)this + 26) = v79;
            uint64_t v13 = __s;
          }
          __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::SourceCodeInfo>((uint64_t)a3, v79, (google::protobuf::internal *)v13);
          if (!__s) {
            return 0;
          }
          break;
        case 9u:
          if (v14 == 80)
          {
            long long v81 = v13 - 1;
            while (1)
            {
              __s = v81 + 1;
              int v82 = v81[1];
              long long v83 = v81 + 2;
              if (v81[1] < 0)
              {
                int v86 = v82 + (*v83 << 7);
                int v82 = v86 - 128;
                if (*v83 < 0)
                {
                  uint64_t v87 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)(v81 + 1), (const char *)(v86 - 128));
                  int v82 = v88;
                  __s = v87;
                  uint64_t v85 = *((unsigned int *)this + 36);
                  int v84 = *((_DWORD *)this + 37);
                  if (v85 != v84)
                  {
LABEL_129:
                    if (v84 <= 0) {
                      goto LABEL_137;
                    }
                    goto LABEL_130;
                  }
                }
                else
                {
                  __s = v81 + 3;
                  uint64_t v85 = *((unsigned int *)this + 36);
                  int v84 = *((_DWORD *)this + 37);
                  if (v85 != v84) {
                    goto LABEL_129;
                  }
                }
              }
              else
              {
                __s = v81 + 2;
                uint64_t v85 = *((unsigned int *)this + 36);
                int v84 = *((_DWORD *)this + 37);
                if (v85 != v84) {
                  goto LABEL_129;
                }
              }
              google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 36, v85 + 1);
              if (*((int *)this + 37) <= 0)
              {
LABEL_137:
                google::protobuf::internal::LogMessage::LogMessage((uint64_t)v113, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 353);
                uint64_t v89 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v113, "CHECK failed: (total_size_) > (0): ");
                google::protobuf::internal::LogFinisher::operator=((uint64_t)&v112, v89);
                google::protobuf::internal::LogMessage::~LogMessage((void **)&v113[0].__r_.__value_.__l.__data_);
                *(_DWORD *)(*((void *)this + 19) + 4 * v85) = v82;
                *((_DWORD *)this + 36) = v85 + 1;
                long long v81 = __s;
                if (!__s) {
                  return 0;
                }
                goto LABEL_138;
              }
LABEL_130:
              *(_DWORD *)(*((void *)this + 19) + 4 * v85) = v82;
              *((_DWORD *)this + 36) = v85 + 1;
              long long v81 = __s;
              if (!__s) {
                return 0;
              }
LABEL_138:
              if (*(void *)a3 <= (unint64_t)v81 || *v81 != 80) {
                goto LABEL_7;
              }
            }
          }
          if (v14 != 82) {
            goto LABEL_23;
          }
          long long v106 = (google::protobuf::FileDescriptorProto *)((char *)this + 144);
          goto LABEL_179;
        case 0xAu:
          if (v14 == 88)
          {
            long long v90 = v13 - 1;
            while (1)
            {
              __s = v90 + 1;
              int v91 = v90[1];
              int v92 = v90 + 2;
              if (v90[1] < 0)
              {
                int v95 = v91 + (*v92 << 7);
                int v91 = v95 - 128;
                if (*v92 < 0)
                {
                  long long v96 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)(v90 + 1), (const char *)(v95 - 128));
                  int v91 = v97;
                  __s = v96;
                  uint64_t v94 = *((unsigned int *)this + 40);
                  int v93 = *((_DWORD *)this + 41);
                  if (v94 != v93)
                  {
LABEL_145:
                    if (v93 <= 0) {
                      goto LABEL_153;
                    }
                    goto LABEL_146;
                  }
                }
                else
                {
                  __s = v90 + 3;
                  uint64_t v94 = *((unsigned int *)this + 40);
                  int v93 = *((_DWORD *)this + 41);
                  if (v94 != v93) {
                    goto LABEL_145;
                  }
                }
              }
              else
              {
                __s = v90 + 2;
                uint64_t v94 = *((unsigned int *)this + 40);
                int v93 = *((_DWORD *)this + 41);
                if (v94 != v93) {
                  goto LABEL_145;
                }
              }
              google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 40, v94 + 1);
              if (*((int *)this + 41) <= 0)
              {
LABEL_153:
                google::protobuf::internal::LogMessage::LogMessage((uint64_t)v113, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 353);
                long long v98 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v113, "CHECK failed: (total_size_) > (0): ");
                google::protobuf::internal::LogFinisher::operator=((uint64_t)&v112, v98);
                google::protobuf::internal::LogMessage::~LogMessage((void **)&v113[0].__r_.__value_.__l.__data_);
                *(_DWORD *)(*((void *)this + 21) + 4 * v94) = v91;
                *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v94 + 1;
                long long v90 = __s;
                if (!__s) {
                  return 0;
                }
                goto LABEL_154;
              }
LABEL_146:
              *(_DWORD *)(*((void *)this + 21) + 4 * v94) = v91;
              *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v94 + 1;
              long long v90 = __s;
              if (!__s) {
                return 0;
              }
LABEL_154:
              if (*(void *)a3 <= (unint64_t)v90 || *v90 != 88) {
                goto LABEL_7;
              }
            }
          }
          if (v14 != 90) {
            goto LABEL_23;
          }
          long long v106 = (google::protobuf::FileDescriptorProto *)((char *)this + 160);
LABEL_179:
          __s = google::protobuf::internal::PackedInt32Parser(v106, (unsigned __int8 *)v13, (google::protobuf::internal::EpsCopyInputStream *)a3, v5);
          if (!__s) {
            return 0;
          }
          break;
        case 0xBu:
          if (v14 != 98) {
            goto LABEL_23;
          }
          *((_DWORD *)this + 4) |= 4u;
          uint64_t v99 = *((void *)this + 1);
          long long v100 = (google::protobuf::Arena *)(v99 & 0xFFFFFFFFFFFFFFFELL);
          if ((v99 & 1) == 0)
          {
            long long v101 = *v109;
            if (*v109 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_161;
            }
LABEL_160:
            google::protobuf::internal::ArenaStringPtr::CreateInstance(v109, v100, (long long *)&google::protobuf::internal::fixed_address_empty_string);
            long long v101 = *v109;
            uint64_t v13 = __s;
            goto LABEL_161;
          }
          long long v100 = *(google::protobuf::Arena **)v100;
          long long v101 = *v109;
          if (*v109 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_160;
          }
LABEL_161:
          __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v101, v13, (uint64_t)a3);
          if (SHIBYTE(v101->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v105 = (std::string *)v101->__r_.__value_.__r.__words[0];
            std::string::size_type v103 = v101->__r_.__value_.__l.__size_;
            if ((v103 & 0x8000000000000000) != 0) {
              google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v101->__r_.__value_.__l.__size_, "size_t to int conversion", v102);
            }
            long long v101 = v105;
          }
          else
          {
            std::string::size_type v103 = HIBYTE(v101->__r_.__value_.__r.__words[2]);
          }
          uint64_t v10 = v101;
          size_t v11 = v103;
          uint64_t v12 = "google.protobuf.FileDescriptorProto.syntax";
LABEL_6:
          google::protobuf::internal::VerifyUTF8(v10, v11, (google::protobuf::internal *)v12);
          if (!__s) {
            return 0;
          }
          break;
        default:
          goto LABEL_23;
      }
LABEL_7:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))return __s; {
    }
      }
    uint64_t v13 = __s + 2;
LABEL_11:
    __s = v13;
    unsigned int v16 = (v14 >> 3) - 1;
    goto LABEL_12;
  }
  return __s;
}

void sub_23CDF4468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF447C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF4490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF44A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>(int32x2_t *a1, google::protobuf::DescriptorProto *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unsigned int v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorProto::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF4630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF4644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(int32x2_t *a1, google::protobuf::EnumDescriptorProto *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unsigned int v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumDescriptorProto::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF47A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF47B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::ServiceDescriptorProto>(int32x2_t *a1, google::protobuf::ServiceDescriptorProto *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unsigned int v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::ServiceDescriptorProto::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF4910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF4924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(int32x2_t *a1, google::protobuf::FieldDescriptorProto *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unsigned int v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::FieldDescriptorProto::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF4A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF4A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FileOptions>(int32x2_t *a1, google::protobuf::FileOptions *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unsigned int v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::FileOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF4BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF4C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::SourceCodeInfo>(uint64_t a1, google::protobuf::SourceCodeInfo *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unsigned int v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = v5 + v6 - v7;
  *(void *)a1 = v7 + (v8 & (v8 >> 31));
  int v9 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 2google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v8;
  LODWORD(v7) = *(_DWORD *)(a1 + 88);
  BOOL v10 = __OFSUB__(v7, 1);
  LODWORD(v7) = v7 - 1;
  *(_DWORD *)(a1 + 8google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v7;
  if ((int)v7 < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::SourceCodeInfo::_InternalParse(a2, v6, (google::protobuf::internal::ParseContext *)a1);
  if (result)
  {
    ++*(_DWORD *)(a1 + 88);
    if (!*(_DWORD *)(a1 + 80))
    {
      int v12 = *(_DWORD *)(a1 + 28) + v9 - v8;
      *(_DWORD *)(a1 + 2google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v12;
      *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF4D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF4D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorProto::_InternalSerialize(google::protobuf::FileDescriptorProto *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if (v7)
  {
    int v9 = (unsigned __int8 *)*((void *)this + 22);
    if ((char)v9[23] < 0)
    {
      int v9 = *(unsigned __int8 **)v9;
      BOOL v10 = *(const char **)(*((void *)this + 22) + 8);
    }
    else
    {
      BOOL v10 = (const char *)v9[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v9, v10, 1, (google::protobuf::internal *)"google.protobuf.FileDescriptorProto.name");
    uint64_t v11 = *((void *)this + 22);
    if (*(char *)(v11 + 23) < 0)
    {
      int64_t v12 = *(void *)(v11 + 8);
      if (v12 > 127) {
        goto LABEL_42;
      }
    }
    else
    {
      int64_t v12 = *(unsigned __int8 *)(v11 + 23);
    }
    if (*(void *)a3 - (void)a2 + 14 >= v12)
    {
      *a2 = 10;
      a2[1] = v12;
      if (*(char *)(v11 + 23) >= 0) {
        unsigned int v13 = (const void *)v11;
      }
      else {
        unsigned int v13 = *(const void **)v11;
      }
      memcpy(a2 + 2, v13, v12);
      a2 += v12 + 2;
      LOBYTE(v95) = v7;
      if ((v7 & 2) != 0) {
        goto LABEL_16;
      }
LABEL_3:
      int v8 = *((_DWORD *)this + 8);
      long long v96 = this;
      if (v8 < 1) {
        goto LABEL_45;
      }
      goto LABEL_27;
    }
LABEL_42:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v11, a2);
    LOBYTE(v95) = v7;
    if ((v7 & 2) != 0) {
      goto LABEL_16;
    }
    goto LABEL_3;
  }
  int v95 = *((_DWORD *)this + 4);
  if ((v7 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_16:
  unsigned int v14 = (unsigned __int8 *)*((void *)this + 23);
  if ((char)v14[23] < 0)
  {
    unsigned int v14 = *(unsigned __int8 **)v14;
    char v15 = *(const char **)(*((void *)this + 23) + 8);
  }
  else
  {
    char v15 = (const char *)v14[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v14, v15, 1, (google::protobuf::internal *)"google.protobuf.FileDescriptorProto.package");
  uint64_t v16 = *((void *)this + 23);
  if (*(char *)(v16 + 23) < 0)
  {
    int64_t v17 = *(void *)(v16 + 8);
    if (v17 > 127) {
      goto LABEL_44;
    }
  }
  else
  {
    int64_t v17 = *(unsigned __int8 *)(v16 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v17)
  {
LABEL_44:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 2, v16, a2);
    int v8 = *((_DWORD *)this + 8);
    long long v96 = this;
    if (v8 < 1) {
      goto LABEL_45;
    }
    goto LABEL_27;
  }
  *a2 = 18;
  a2[1] = v17;
  if (*(char *)(v16 + 23) >= 0) {
    size_t v18 = (const void *)v16;
  }
  else {
    size_t v18 = *(const void **)v16;
  }
  memcpy(a2 + 2, v18, v17);
  a2 += v17 + 2;
  int v8 = *((_DWORD *)this + 8);
  long long v96 = this;
  if (v8 >= 1)
  {
LABEL_27:
    int v19 = 0;
    while (1)
    {
      uint64_t v20 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v19);
      uint64_t v21 = v20;
      unsigned int v22 = *(_DWORD *)(v20 + 8);
      if (*(char *)(v20 + 23) >= 0)
      {
        unint64_t v23 = *(unsigned __int8 *)(v20 + 23);
      }
      else
      {
        uint64_t v20 = *(void *)v20;
        unint64_t v23 = v22;
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v20, (const char *)v23, 1, (google::protobuf::internal *)"google.protobuf.FileDescriptorProto.dependency");
      if ((*(char *)(v21 + 23) & 0x80000000) == 0) {
        break;
      }
      int64_t v24 = *(void *)(v21 + 8);
      if (v24 > 127)
      {
LABEL_40:
        a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 3, v21, a2);
        if (v8 == ++v19) {
          goto LABEL_45;
        }
      }
      else
      {
LABEL_34:
        if (*(void *)a3 - (void)a2 + 14 < v24) {
          goto LABEL_40;
        }
        *a2 = 26;
        a2[1] = v24;
        if (*(char *)(v21 + 23) >= 0) {
          uint64_t v25 = (const void *)v21;
        }
        else {
          uint64_t v25 = *(const void **)v21;
        }
        memcpy(a2 + 2, v25, v24);
        a2 += v24 + 2;
        if (v8 == ++v19) {
          goto LABEL_45;
        }
      }
    }
    int64_t v24 = *(unsigned __int8 *)(v21 + 23);
    goto LABEL_34;
  }
LABEL_45:
  int v26 = *((_DWORD *)v96 + 14);
  if (v26)
  {
    int v27 = 0;
    char v28 = v95;
    do
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      std::string::size_type v30 = (google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)v96 + 48, v27);
      *a2 = 34;
      unsigned int v32 = *((_DWORD *)v30 + 5);
      if (v32 <= 0x7F)
      {
        a2[1] = v32;
        BOOL v29 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v32 | 0x80;
        unsigned int v33 = v32 >> 7;
        if (v32 >> 14)
        {
          BOOL v29 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v29 - 1) = v33 | 0x80;
            unsigned int v34 = v33 >> 7;
            ++v29;
            unsigned int v35 = v33 >> 14;
            v33 >>= 7;
          }
          while (v35);
          *(v29 - 1) = v34;
        }
        else
        {
          a2[2] = v33;
          BOOL v29 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::DescriptorProto::_InternalSerialize(v30, (char *)v29, a3, v31);
      ++v27;
    }
    while (v27 != v26);
  }
  else
  {
    char v28 = v95;
  }
  int v36 = *((_DWORD *)v96 + 20);
  if (v36)
  {
    for (int i = 0; i != v36; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      size_t v39 = (google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)v96 + 72, i);
      *a2 = 42;
      unsigned int v41 = *((_DWORD *)v39 + 5);
      if (v41 <= 0x7F)
      {
        a2[1] = v41;
        int v38 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v41 | 0x80;
        unsigned int v42 = v41 >> 7;
        if (v41 >> 14)
        {
          int v38 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v38 - 1) = v42 | 0x80;
            unsigned int v43 = v42 >> 7;
            ++v38;
            unsigned int v44 = v42 >> 14;
            v42 >>= 7;
          }
          while (v44);
          *(v38 - 1) = v43;
        }
        else
        {
          a2[2] = v42;
          int v38 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::EnumDescriptorProto::_InternalSerialize(v39, (google::protobuf::UnknownFieldSet *)v38, a3, v40);
    }
  }
  int v45 = *((_DWORD *)v96 + 26);
  if (v45)
  {
    for (int j = 0; j != v45; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v48 = (google::protobuf::ServiceDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((uint64_t)v96 + 96, j);
      *a2 = 50;
      unsigned int v50 = *((_DWORD *)v48 + 5);
      if (v50 <= 0x7F)
      {
        a2[1] = v50;
        unint64_t v47 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v50 | 0x80;
        unsigned int v51 = v50 >> 7;
        if (v50 >> 14)
        {
          unint64_t v47 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v47 - 1) = v51 | 0x80;
            unsigned int v52 = v51 >> 7;
            ++v47;
            unsigned int v53 = v51 >> 14;
            v51 >>= 7;
          }
          while (v53);
          *(v47 - 1) = v52;
        }
        else
        {
          a2[2] = v51;
          unint64_t v47 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::ServiceDescriptorProto::_InternalSerialize(v48, (google::protobuf::UnknownFieldSet *)v47, a3, v49);
    }
  }
  int v54 = *((_DWORD *)v96 + 32);
  if (v54)
  {
    for (int k = 0; k != v54; ++k)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v57 = (google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)v96 + 120, k);
      *a2 = 58;
      unsigned int v59 = *((_DWORD *)v57 + 5);
      if (v59 <= 0x7F)
      {
        a2[1] = v59;
        uint64_t v56 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v59 | 0x80;
        unsigned int v60 = v59 >> 7;
        if (v59 >> 14)
        {
          uint64_t v56 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v56 - 1) = v60 | 0x80;
            unsigned int v61 = v60 >> 7;
            ++v56;
            unsigned int v62 = v60 >> 14;
            v60 >>= 7;
          }
          while (v62);
          *(v56 - 1) = v61;
        }
        else
        {
          a2[2] = v60;
          uint64_t v56 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v57, (google::protobuf::UnknownFieldSet *)v56, a3, v58);
    }
  }
  if ((v28 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      int v65 = (google::protobuf::FileOptions *)*((void *)v96 + 25);
      *a2 = 66;
      unsigned int v66 = *((_DWORD *)v65 + 11);
      if (v66 <= 0x7F)
      {
LABEL_100:
        a2[1] = v66;
        a2 = (char *)google::protobuf::FileOptions::_InternalSerialize(v65, a2 + 2, a3);
        if ((v28 & 0x10) != 0) {
          goto LABEL_109;
        }
        goto LABEL_96;
      }
    }
    else
    {
      int v65 = (google::protobuf::FileOptions *)*((void *)v96 + 25);
      *a2 = 66;
      unsigned int v66 = *((_DWORD *)v65 + 11);
      if (v66 <= 0x7F) {
        goto LABEL_100;
      }
    }
    a2[1] = v66 | 0x80;
    unsigned int v67 = v66 >> 7;
    if (v66 >> 14)
    {
      uint64_t v68 = a2 + 3;
      do
      {
        *(v68 - 1) = v67 | 0x80;
        unsigned int v69 = v67 >> 7;
        ++v68;
        unsigned int v70 = v67 >> 14;
        v67 >>= 7;
      }
      while (v70);
      *(v68 - 1) = v69;
      a2 = (char *)google::protobuf::FileOptions::_InternalSerialize(v65, v68, a3);
      if ((v28 & 0x10) != 0) {
        goto LABEL_109;
      }
    }
    else
    {
      a2[2] = v67;
      a2 = (char *)google::protobuf::FileOptions::_InternalSerialize(v65, a2 + 3, a3);
      if ((v28 & 0x10) != 0) {
        goto LABEL_109;
      }
    }
LABEL_96:
    uint64_t v63 = (uint64_t)v96 + 144;
    int v64 = *((_DWORD *)v96 + 36);
    if (v64 < 1) {
      goto LABEL_130;
    }
    goto LABEL_119;
  }
  if ((v28 & 0x10) == 0) {
    goto LABEL_96;
  }
LABEL_109:
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    uint64_t v71 = (google::protobuf::SourceCodeInfo *)*((void *)v96 + 26);
    *a2 = 74;
    unsigned int v72 = *((_DWORD *)v71 + 10);
    if (v72 <= 0x7F) {
      goto LABEL_111;
    }
  }
  else
  {
    uint64_t v71 = (google::protobuf::SourceCodeInfo *)*((void *)v96 + 26);
    *a2 = 74;
    unsigned int v72 = *((_DWORD *)v71 + 10);
    if (v72 <= 0x7F)
    {
LABEL_111:
      a2[1] = v72;
      int v73 = (unsigned __int8 *)(a2 + 2);
      goto LABEL_118;
    }
  }
  a2[1] = v72 | 0x80;
  unsigned int v74 = v72 >> 7;
  if (v72 >> 14)
  {
    int v73 = (unsigned __int8 *)(a2 + 3);
    do
    {
      *(v73 - 1) = v74 | 0x80;
      unsigned int v75 = v74 >> 7;
      ++v73;
      unsigned int v76 = v74 >> 14;
      v74 >>= 7;
    }
    while (v76);
    *(v73 - 1) = v75;
  }
  else
  {
    a2[2] = v74;
    int v73 = (unsigned __int8 *)(a2 + 3);
  }
LABEL_118:
  a2 = (char *)google::protobuf::SourceCodeInfo::_InternalSerialize(v71, (google::protobuf::UnknownFieldSet *)v73, a3, a4);
  uint64_t v63 = (uint64_t)v96 + 144;
  int v64 = *((_DWORD *)v96 + 36);
  if (v64 < 1) {
    goto LABEL_130;
  }
LABEL_119:
  for (int m = 0; m != v64; ++m)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v78 = *(int *)google::protobuf::RepeatedField<int>::Get(v63, m);
    *a2 = 80;
    if (v78 <= 0x7F)
    {
      a2[1] = v78;
      a2 += 2;
    }
    else
    {
      a2[1] = v78 | 0x80;
      unint64_t v79 = v78 >> 7;
      if (v78 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - 1) = v79 | 0x80;
          unint64_t v80 = v79 >> 7;
          ++a2;
          unint64_t v81 = v79 >> 14;
          v79 >>= 7;
        }
        while (v81);
        *(a2 - 1) = v80;
      }
      else
      {
        a2[2] = v79;
        a2 += 3;
      }
    }
  }
LABEL_130:
  int v82 = *((_DWORD *)v96 + 40);
  if (v82 >= 1)
  {
    for (int n = 0; n != v82; ++n)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unint64_t v84 = *(int *)google::protobuf::RepeatedField<int>::Get((uint64_t)v96 + 160, n);
      *a2 = 88;
      if (v84 <= 0x7F)
      {
        a2[1] = v84;
        a2 += 2;
      }
      else
      {
        a2[1] = v84 | 0x80;
        unint64_t v85 = v84 >> 7;
        if (v84 >> 14)
        {
          a2 += 3;
          do
          {
            *(a2 - 1) = v85 | 0x80;
            unint64_t v86 = v85 >> 7;
            ++a2;
            unint64_t v87 = v85 >> 14;
            v85 >>= 7;
          }
          while (v87);
          *(a2 - 1) = v86;
        }
        else
        {
          a2[2] = v85;
          a2 += 3;
        }
      }
    }
  }
  if ((v28 & 4) != 0)
  {
    int v88 = (unsigned __int8 *)*((void *)v96 + 24);
    if ((char)v88[23] < 0)
    {
      int v88 = *(unsigned __int8 **)v88;
      uint64_t v89 = *(const char **)(*((void *)v96 + 24) + 8);
    }
    else
    {
      uint64_t v89 = (const char *)v88[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v88, v89, 1, (google::protobuf::internal *)"google.protobuf.FileDescriptorProto.syntax");
    uint64_t v90 = *((void *)v96 + 24);
    if (*(char *)(v90 + 23) < 0)
    {
      int64_t v91 = *(void *)(v90 + 8);
      if (v91 > 127) {
        goto LABEL_156;
      }
    }
    else
    {
      int64_t v91 = *(unsigned __int8 *)(v90 + 23);
    }
    if (*(void *)a3 - (void)a2 + 14 >= v91)
    {
      *a2 = 98;
      a2[1] = v91;
      if (*(char *)(v90 + 23) >= 0) {
        int v92 = (const void *)v90;
      }
      else {
        int v92 = *(const void **)v90;
      }
      memcpy(a2 + 2, v92, v91);
      a2 += v91 + 2;
      goto LABEL_154;
    }
LABEL_156:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 12, v90, a2);
    uint64_t v93 = *((void *)v96 + 1);
    if ((v93 & 1) == 0) {
      return (const google::protobuf::UnknownFieldSet *)a2;
    }
    goto LABEL_157;
  }
LABEL_154:
  uint64_t v93 = *((void *)v96 + 1);
  if ((v93 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
LABEL_157:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v93 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::FileDescriptorProto::ByteSizeLong(google::protobuf::FileDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0) {
        uint64_t v6 = *(void *)(v5 + 8);
      }
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  uint64_t v7 = *((int *)this + 14);
  uint64_t v8 = v4 + v7;
  uint64_t v9 = *((void *)this + 8);
  if (v9) {
    BOOL v10 = (google::protobuf::DescriptorProto **)(v9 + 8);
  }
  else {
    BOOL v10 = 0;
  }
  if (v7)
  {
    uint64_t v11 = 8 * v7;
    do
    {
      int64_t v12 = *v10++;
      unsigned int v13 = google::protobuf::DescriptorProto::ByteSizeLong(v12);
      v8 += (uint64_t)&v13[(9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6];
      v11 -= 8;
    }
    while (v11);
  }
  uint64_t v14 = *((int *)this + 20);
  uint64_t v15 = v8 + v14;
  uint64_t v16 = *((void *)this + 11);
  if (v16) {
    int64_t v17 = (google::protobuf::EnumDescriptorProto **)(v16 + 8);
  }
  else {
    int64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      int v19 = *v17++;
      uint64_t v20 = google::protobuf::EnumDescriptorProto::ByteSizeLong(v19);
      v15 += (uint64_t)&v20[(9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6];
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *((int *)this + 26);
  uint64_t v22 = v15 + v21;
  uint64_t v23 = *((void *)this + 14);
  if (v23) {
    int64_t v24 = (google::protobuf::ServiceDescriptorProto **)(v23 + 8);
  }
  else {
    int64_t v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      int v26 = *v24++;
      int v27 = google::protobuf::ServiceDescriptorProto::ByteSizeLong(v26);
      v22 += (uint64_t)&v27[(9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6];
      v25 -= 8;
    }
    while (v25);
  }
  uint64_t v28 = *((int *)this + 32);
  uint64_t v29 = v22 + v28;
  uint64_t v30 = *((void *)this + 17);
  if (v30) {
    int32x2_t v31 = (google::protobuf::FieldDescriptorProto **)(v30 + 8);
  }
  else {
    int32x2_t v31 = 0;
  }
  if (v28)
  {
    uint64_t v32 = 8 * v28;
    do
    {
      unsigned int v33 = *v31++;
      unsigned int v34 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v33);
      v29 += (uint64_t)&v34[(9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6];
      v32 -= 8;
    }
    while (v32);
  }
  uint64_t v35 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 36);
  uint64_t v36 = *((unsigned int *)this + 36);
  uint8x8_t v37 = (const google::protobuf::UnknownFieldSet *)(v35
                                                  + google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 40)
                                                  + *((unsigned int *)this + 40)
                                                  + v29
                                                  + v36);
  int v38 = *((_DWORD *)this + 4);
  if ((v38 & 0x1F) != 0)
  {
    if (v38)
    {
      uint64_t v39 = *((void *)this + 22);
      uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
      uint64_t v41 = *(void *)(v39 + 8);
      if ((v40 & 0x80u) == 0) {
        uint64_t v41 = v40;
      }
      uint8x8_t v37 = (const google::protobuf::UnknownFieldSet *)((char *)v37 + v41
                                                                    + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
      if ((v38 & 2) == 0)
      {
LABEL_35:
        if ((v38 & 4) == 0) {
          goto LABEL_36;
        }
        goto LABEL_45;
      }
    }
    else if ((v38 & 2) == 0)
    {
      goto LABEL_35;
    }
    uint64_t v42 = *((void *)this + 23);
    uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
    uint64_t v44 = *(void *)(v42 + 8);
    if ((v43 & 0x80u) == 0) {
      uint64_t v44 = v43;
    }
    uint8x8_t v37 = (const google::protobuf::UnknownFieldSet *)((char *)v37 + v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v38 & 4) == 0)
    {
LABEL_36:
      if ((v38 & 8) == 0) {
        goto LABEL_37;
      }
      goto LABEL_48;
    }
LABEL_45:
    uint64_t v45 = *((void *)this + 24);
    uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
    uint64_t v47 = *(void *)(v45 + 8);
    if ((v46 & 0x80u) == 0) {
      uint64_t v47 = v46;
    }
    uint8x8_t v37 = (const google::protobuf::UnknownFieldSet *)((char *)v37 + v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v38 & 8) == 0)
    {
LABEL_37:
      if ((v38 & 0x10) == 0) {
        goto LABEL_58;
      }
LABEL_49:
      uint64_t v49 = *((void *)this + 26);
      unsigned int v50 = (char *)*(int *)(v49 + 24);
      uint64_t v51 = *(void *)(v49 + 32);
      if (v51) {
        unsigned int v52 = (google::protobuf::SourceCodeInfo_Location **)(v51 + 8);
      }
      else {
        unsigned int v52 = 0;
      }
      if (v50)
      {
        uint64_t v53 = 8 * (void)v50;
        do
        {
          int v54 = *v52++;
          int v55 = google::protobuf::SourceCodeInfo_Location::ByteSizeLong(v54);
          unsigned int v50 = &v50[(void)v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6)];
          v53 -= 8;
        }
        while (v53);
        uint64_t v56 = (google::protobuf::UnknownFieldSet *)(v49 + 8);
        if ((*(unsigned char *)(v49 + 8) & 1) == 0) {
          goto LABEL_56;
        }
      }
      else
      {
        unsigned int v50 = 0;
        uint64_t v56 = (google::protobuf::UnknownFieldSet *)(v49 + 8);
        if ((*(unsigned char *)(v49 + 8) & 1) == 0)
        {
LABEL_56:
          *(_DWORD *)(v49 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v50;
LABEL_57:
          uint8x8_t v37 = (const google::protobuf::UnknownFieldSet *)&v50[(void)v37
                                                              + 1
                                                              + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6)];
          goto LABEL_58;
        }
      }
      unsigned int v50 = google::protobuf::internal::ComputeUnknownFieldsSize(v56, (const google::protobuf::UnknownFieldSet *)v50, (_DWORD *)(v49 + 40));
      goto LABEL_57;
    }
LABEL_48:
    uint64_t v48 = google::protobuf::FileOptions::ByteSizeLong(*((google::protobuf::FileOptions **)this + 25));
    uint8x8_t v37 = (const google::protobuf::UnknownFieldSet *)&v48[((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6)
                                                        + 1
                                                        + (void)v37];
    if ((v38 & 0x10) == 0) {
      goto LABEL_58;
    }
    goto LABEL_49;
  }
LABEL_58:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileDescriptorProto *)((char *)this + 8), v37, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v37;
    return (char *)v37;
  }
}

void google::protobuf::FileDescriptorProto::MergeFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2146);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::FileDescriptorProto::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDF5C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF5C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorProto::MergeFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::FileDescriptorProto *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2161);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v31, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  if (*v4) {
    uint64_t v8 = (char *)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v7);
LABEL_8:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)this + 72, (uint64_t)a2 + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((uint64_t)this + 96, (uint64_t)a2 + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)this + 120, (uint64_t)a2 + 120);
  google::protobuf::RepeatedField<int>::MergeFrom((unsigned int *)this + 36, (int *)a2 + 36);
  google::protobuf::RepeatedField<int>::MergeFrom((unsigned int *)this + 40, (int *)a2 + 40);
  int v9 = *((_DWORD *)a2 + 4);
  if ((v9 & 0x1F) == 0) {
    return;
  }
  if (v9)
  {
    BOOL v10 = (std::string *)*((void *)a2 + 22);
    *((_DWORD *)this + 4) |= 1u;
    uint64_t v11 = (std::string **)((char *)this + 176);
    uint64_t v12 = *((void *)this + 1);
    unsigned int v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if (v12)
    {
      unsigned int v13 = *(google::protobuf::Arena **)v13;
      uint64_t v14 = *v11;
      if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
LABEL_17:
        std::string::operator=(v14, v10);
        if ((v9 & 2) != 0) {
          goto LABEL_22;
        }
LABEL_11:
        if ((v9 & 4) == 0) {
          goto LABEL_12;
        }
LABEL_28:
        uint64_t v20 = (std::string *)*((void *)a2 + 24);
        *((_DWORD *)this + 4) |= 4u;
        uint64_t v21 = (std::string **)((char *)this + 192);
        uint64_t v22 = *((void *)this + 1);
        uint64_t v23 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
        if (v22)
        {
          uint64_t v23 = *(google::protobuf::Arena **)v23;
          int64_t v24 = *v21;
          if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
LABEL_30:
            std::string::operator=(v24, v20);
            if ((v9 & 8) != 0) {
              goto LABEL_34;
            }
LABEL_13:
            if ((v9 & 0x10) == 0) {
              return;
            }
            goto LABEL_42;
          }
        }
        else
        {
          int64_t v24 = *v21;
          if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_30;
          }
        }
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, v23, (long long *)v20);
        if ((v9 & 8) != 0) {
          goto LABEL_34;
        }
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v14 = *v11;
      if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_17;
      }
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v11, v13, (long long *)v10);
    if ((v9 & 2) != 0) {
      goto LABEL_22;
    }
    goto LABEL_11;
  }
  if ((v9 & 2) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  uint64_t v15 = (long long *)*((void *)a2 + 23);
  *((_DWORD *)this + 4) |= 2u;
  uint64_t v16 = (std::string **)((char *)this + 184);
  uint64_t v17 = *((void *)this + 1);
  uint64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
  if ((v17 & 1) == 0)
  {
    int v19 = *v16;
    if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_24;
    }
LABEL_27:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v16, v18, v15);
    if ((v9 & 4) != 0) {
      goto LABEL_28;
    }
    goto LABEL_12;
  }
  uint64_t v18 = *(google::protobuf::Arena **)v18;
  int v19 = *v16;
  if (*v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_27;
  }
LABEL_24:
  std::string::operator=(v19, (const std::string *)v15);
  if ((v9 & 4) != 0) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v9 & 8) == 0) {
    goto LABEL_13;
  }
LABEL_34:
  *((_DWORD *)this + 4) |= 8u;
  uint64_t v25 = (google::protobuf::FileOptions *)*((void *)this + 25);
  if (!v25)
  {
    int v26 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      int v26 = *(google::protobuf::Arena **)v26;
    }
    uint64_t v25 = (google::protobuf::FileOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v26);
    *((void *)this + 25) = v25;
  }
  if (*((void *)a2 + 25)) {
    int v27 = (const google::protobuf::FileOptions *)*((void *)a2 + 25);
  }
  else {
    int v27 = (const google::protobuf::FileOptions *)&google::protobuf::_FileOptions_default_instance_;
  }
  google::protobuf::FileOptions::MergeFrom(v25, v27);
  if ((v9 & 0x10) != 0)
  {
LABEL_42:
    *((_DWORD *)this + 4) |= 0x10u;
    uint64_t v28 = (google::protobuf::SourceCodeInfo *)*((void *)this + 26);
    if (!v28)
    {
      uint64_t v29 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v29 = *(google::protobuf::Arena **)v29;
      }
      uint64_t v28 = (google::protobuf::SourceCodeInfo *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(v29);
      *((void *)this + 26) = v28;
    }
    if (*((void *)a2 + 26)) {
      uint64_t v30 = (const google::protobuf::SourceCodeInfo *)*((void *)a2 + 26);
    }
    else {
      uint64_t v30 = (const google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_;
    }
    google::protobuf::SourceCodeInfo::MergeFrom(v28, v30);
  }
}

void sub_23CDF5F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF5F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileOptions::MergeFrom(google::protobuf::FileOptions *this, const google::protobuf::FileOptions *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v61, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 7064);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v61, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v60, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v61[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::FileOptions *)((char *)this + 16), (const google::protobuf::FileOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
      int v5 = *((_DWORD *)a2 + 10);
      if (!(_BYTE)v5) {
        goto LABEL_64;
      }
      goto LABEL_9;
    }
  }
  else
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::FileOptions *)((char *)this + 16), (const google::protobuf::FileOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v8 = *((void *)this + 1);
  if (v8) {
    int v9 = (char *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    int v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v7);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  int v5 = *((_DWORD *)a2 + 10);
  if (!(_BYTE)v5) {
    goto LABEL_64;
  }
LABEL_9:
  if (v5)
  {
    BOOL v10 = (std::string *)*((void *)a2 + 9);
    *((_DWORD *)this + 10) |= 1u;
    uint64_t v11 = (std::string **)((char *)this + 72);
    uint64_t v12 = *((void *)this + 1);
    unsigned int v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if (v12)
    {
      unsigned int v13 = *(google::protobuf::Arena **)v13;
      uint64_t v14 = *v11;
      if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
LABEL_20:
        std::string::operator=(v14, v10);
        if ((v5 & 2) != 0) {
          goto LABEL_25;
        }
LABEL_11:
        if ((v5 & 4) == 0) {
          goto LABEL_12;
        }
LABEL_31:
        uint64_t v20 = (std::string *)*((void *)a2 + 11);
        *((_DWORD *)this + 10) |= 4u;
        uint64_t v21 = (std::string **)((char *)this + 88);
        uint64_t v22 = *((void *)this + 1);
        uint64_t v23 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
        if (v22)
        {
          uint64_t v23 = *(google::protobuf::Arena **)v23;
          int64_t v24 = *v21;
          if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
LABEL_33:
            std::string::operator=(v24, v20);
            if ((v5 & 8) != 0) {
              goto LABEL_37;
            }
LABEL_13:
            if ((v5 & 0x10) == 0) {
              goto LABEL_14;
            }
LABEL_43:
            uint64_t v30 = (std::string *)*((void *)a2 + 13);
            *((_DWORD *)this + 10) |= 0x10u;
            char v31 = (std::string **)((char *)this + 104);
            uint64_t v32 = *((void *)this + 1);
            unsigned int v33 = (google::protobuf::Arena *)(v32 & 0xFFFFFFFFFFFFFFFELL);
            if (v32)
            {
              unsigned int v33 = *(google::protobuf::Arena **)v33;
              unsigned int v34 = *v31;
              if (*v31 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
LABEL_45:
                std::string::operator=(v34, v30);
                if ((v5 & 0x20) != 0) {
                  goto LABEL_49;
                }
LABEL_15:
                if ((v5 & 0x40) == 0) {
                  goto LABEL_16;
                }
LABEL_55:
                uint64_t v40 = (std::string *)*((void *)a2 + 15);
                *((_DWORD *)this + 10) |= 0x40u;
                uint64_t v41 = (std::string **)((char *)this + 120);
                uint64_t v42 = *((void *)this + 1);
                uint64_t v43 = (google::protobuf::Arena *)(v42 & 0xFFFFFFFFFFFFFFFELL);
                if (v42)
                {
                  uint64_t v43 = *(google::protobuf::Arena **)v43;
                  uint64_t v44 = *v41;
                  if (*v41 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                  {
LABEL_57:
                    std::string::operator=(v44, v40);
                    if ((v5 & 0x80) != 0) {
                      goto LABEL_61;
                    }
LABEL_64:
                    if ((v5 & 0xFF00) == 0) {
                      goto LABEL_75;
                    }
LABEL_65:
                    if ((v5 & 0x100) == 0)
                    {
                      if ((v5 & 0x200) == 0) {
                        goto LABEL_67;
                      }
LABEL_96:
                      int v55 = (std::string *)*((void *)a2 + 18);
                      *((_DWORD *)this + 10) |= 0x200u;
                      uint64_t v56 = (std::string **)((char *)this + 144);
                      uint64_t v57 = *((void *)this + 1);
                      int v58 = (google::protobuf::Arena *)(v57 & 0xFFFFFFFFFFFFFFFELL);
                      if (v57)
                      {
                        int v58 = *(google::protobuf::Arena **)v58;
                        unsigned int v59 = *v56;
                        if (*v56 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                        {
LABEL_98:
                          std::string::operator=(v59, v55);
                          if ((v5 & 0x400) != 0) {
                            goto LABEL_102;
                          }
LABEL_68:
                          if ((v5 & 0x800) == 0) {
                            goto LABEL_69;
                          }
                          goto LABEL_103;
                        }
                      }
                      else
                      {
                        unsigned int v59 = *v56;
                        if (*v56 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                          goto LABEL_98;
                        }
                      }
                      google::protobuf::internal::ArenaStringPtr::CreateInstance(v56, v58, (long long *)v55);
                      if ((v5 & 0x400) != 0) {
                        goto LABEL_102;
                      }
                      goto LABEL_68;
                    }
                    unsigned int v50 = (std::string *)*((void *)a2 + 17);
                    *((_DWORD *)this + 10) |= 0x100u;
                    uint64_t v51 = (std::string **)((char *)this + 136);
                    uint64_t v52 = *((void *)this + 1);
                    uint64_t v53 = (google::protobuf::Arena *)(v52 & 0xFFFFFFFFFFFFFFFELL);
                    if (v52)
                    {
                      uint64_t v53 = *(google::protobuf::Arena **)v53;
                      int v54 = *v51;
                      if (*v51 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                      {
LABEL_85:
                        std::string::operator=(v54, v50);
                        if ((v5 & 0x200) != 0) {
                          goto LABEL_96;
                        }
LABEL_67:
                        if ((v5 & 0x400) == 0) {
                          goto LABEL_68;
                        }
LABEL_102:
                        *((unsigned char *)this + 152) = *((unsigned char *)a2 + 152);
                        if ((v5 & 0x800) == 0)
                        {
LABEL_69:
                          if ((v5 & 0x1000) == 0) {
                            goto LABEL_70;
                          }
                          goto LABEL_104;
                        }
LABEL_103:
                        *((unsigned char *)this + 153) = *((unsigned char *)a2 + 153);
                        if ((v5 & 0x1000) == 0)
                        {
LABEL_70:
                          if ((v5 & 0x2000) == 0) {
                            goto LABEL_71;
                          }
                          goto LABEL_105;
                        }
LABEL_104:
                        *((unsigned char *)this + 154) = *((unsigned char *)a2 + 154);
                        if ((v5 & 0x2000) == 0)
                        {
LABEL_71:
                          if ((v5 & 0x4000) == 0) {
                            goto LABEL_72;
                          }
                          goto LABEL_106;
                        }
LABEL_105:
                        *((unsigned char *)this + 155) = *((unsigned char *)a2 + 155);
                        if ((v5 & 0x4000) == 0)
                        {
LABEL_72:
                          if ((v5 & 0x8000) == 0)
                          {
LABEL_74:
                            *((_DWORD *)this + 10) |= v5;
                            goto LABEL_75;
                          }
LABEL_73:
                          *((unsigned char *)this + 157) = *((unsigned char *)a2 + 157);
                          goto LABEL_74;
                        }
LABEL_106:
                        *((unsigned char *)this + 156) = *((unsigned char *)a2 + 156);
                        if ((v5 & 0x8000) == 0) {
                          goto LABEL_74;
                        }
                        goto LABEL_73;
                      }
                    }
                    else
                    {
                      int v54 = *v51;
                      if (*v51 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                        goto LABEL_85;
                      }
                    }
                    google::protobuf::internal::ArenaStringPtr::CreateInstance(v51, v53, (long long *)v50);
                    if ((v5 & 0x200) != 0) {
                      goto LABEL_96;
                    }
                    goto LABEL_67;
                  }
                }
                else
                {
                  uint64_t v44 = *v41;
                  if (*v41 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                    goto LABEL_57;
                  }
                }
                google::protobuf::internal::ArenaStringPtr::CreateInstance(v41, v43, (long long *)v40);
                if ((v5 & 0x80) == 0) {
                  goto LABEL_64;
                }
                goto LABEL_61;
              }
            }
            else
            {
              unsigned int v34 = *v31;
              if (*v31 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_45;
              }
            }
            google::protobuf::internal::ArenaStringPtr::CreateInstance(v31, v33, (long long *)v30);
            if ((v5 & 0x20) != 0) {
              goto LABEL_49;
            }
            goto LABEL_15;
          }
        }
        else
        {
          int64_t v24 = *v21;
          if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_33;
          }
        }
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, v23, (long long *)v20);
        if ((v5 & 8) != 0) {
          goto LABEL_37;
        }
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v14 = *v11;
      if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_20;
      }
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v11, v13, (long long *)v10);
    if ((v5 & 2) != 0) {
      goto LABEL_25;
    }
    goto LABEL_11;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  uint64_t v15 = (long long *)*((void *)a2 + 10);
  *((_DWORD *)this + 10) |= 2u;
  uint64_t v16 = (std::string **)((char *)this + 80);
  uint64_t v17 = *((void *)this + 1);
  uint64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
  if ((v17 & 1) == 0)
  {
    int v19 = *v16;
    if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_27;
    }
LABEL_30:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v16, v18, v15);
    if ((v5 & 4) != 0) {
      goto LABEL_31;
    }
    goto LABEL_12;
  }
  uint64_t v18 = *(google::protobuf::Arena **)v18;
  int v19 = *v16;
  if (*v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_30;
  }
LABEL_27:
  std::string::operator=(v19, (const std::string *)v15);
  if ((v5 & 4) != 0) {
    goto LABEL_31;
  }
LABEL_12:
  if ((v5 & 8) == 0) {
    goto LABEL_13;
  }
LABEL_37:
  uint64_t v25 = (long long *)*((void *)a2 + 12);
  *((_DWORD *)this + 10) |= 8u;
  int v26 = (std::string **)((char *)this + 96);
  uint64_t v27 = *((void *)this + 1);
  uint64_t v28 = (google::protobuf::Arena *)(v27 & 0xFFFFFFFFFFFFFFFELL);
  if ((v27 & 1) == 0)
  {
    uint64_t v29 = *v26;
    if (*v26 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_39;
    }
LABEL_42:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v26, v28, v25);
    if ((v5 & 0x10) != 0) {
      goto LABEL_43;
    }
    goto LABEL_14;
  }
  uint64_t v28 = *(google::protobuf::Arena **)v28;
  uint64_t v29 = *v26;
  if (*v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_42;
  }
LABEL_39:
  std::string::operator=(v29, (const std::string *)v25);
  if ((v5 & 0x10) != 0) {
    goto LABEL_43;
  }
LABEL_14:
  if ((v5 & 0x20) == 0) {
    goto LABEL_15;
  }
LABEL_49:
  uint64_t v35 = (long long *)*((void *)a2 + 14);
  *((_DWORD *)this + 10) |= 0x20u;
  uint64_t v36 = (std::string **)((char *)this + 112);
  uint64_t v37 = *((void *)this + 1);
  int v38 = (google::protobuf::Arena *)(v37 & 0xFFFFFFFFFFFFFFFELL);
  if ((v37 & 1) == 0)
  {
    uint64_t v39 = *v36;
    if (*v36 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_51;
    }
LABEL_54:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v36, v38, v35);
    if ((v5 & 0x40) != 0) {
      goto LABEL_55;
    }
    goto LABEL_16;
  }
  int v38 = *(google::protobuf::Arena **)v38;
  uint64_t v39 = *v36;
  if (*v36 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_54;
  }
LABEL_51:
  std::string::operator=(v39, (const std::string *)v35);
  if ((v5 & 0x40) != 0) {
    goto LABEL_55;
  }
LABEL_16:
  if ((v5 & 0x80) == 0) {
    goto LABEL_64;
  }
LABEL_61:
  uint64_t v45 = (std::string *)*((void *)a2 + 16);
  *((_DWORD *)this + 10) |= 0x80u;
  uint64_t v46 = (std::string **)((char *)this + 128);
  uint64_t v47 = *((void *)this + 1);
  uint64_t v48 = (google::protobuf::Arena *)(v47 & 0xFFFFFFFFFFFFFFFELL);
  if (v47)
  {
    uint64_t v48 = *(google::protobuf::Arena **)v48;
    uint64_t v49 = *v46;
    if (*v46 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_63;
    }
  }
  else
  {
    uint64_t v49 = *v46;
    if (*v46 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_63:
      std::string::operator=(v49, v45);
      goto LABEL_64;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v46, v48, (long long *)v45);
  if ((v5 & 0xFF00) != 0) {
    goto LABEL_65;
  }
LABEL_75:
  if ((v5 & 0xF0000) == 0) {
    return;
  }
  if ((v5 & 0x10000) != 0)
  {
    *((unsigned char *)this + 15google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = *((unsigned char *)a2 + 158);
    if ((v5 & 0x20000) == 0)
    {
LABEL_78:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_79;
      }
LABEL_89:
      *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((_DWORD *)a2 + 40);
      if ((v5 & 0x80000) == 0) {
        goto LABEL_81;
      }
      goto LABEL_80;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_78;
  }
  *((unsigned char *)this + 159) = *((unsigned char *)a2 + 159);
  if ((v5 & 0x40000) != 0) {
    goto LABEL_89;
  }
LABEL_79:
  if ((v5 & 0x80000) != 0) {
LABEL_80:
  }
    *((unsigned char *)this + 164) = *((unsigned char *)a2 + 164);
LABEL_81:
  *((_DWORD *)this + 10) |= v5;
}

void sub_23CDF64F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF6508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo::MergeFrom(google::protobuf::SourceCodeInfo *this, const google::protobuf::SourceCodeInfo *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 10619);
    int v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v6 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v7 = *((void *)this + 1);
  if (v7) {
    uint64_t v8 = (char *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v6);
LABEL_8:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)this + 16, (uint64_t)a2 + 16);
}

void sub_23CDF65E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF65F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorProto::CopyFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FileDescriptorProto::Clear(this);
    google::protobuf::FileDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FileDescriptorProto::IsInitialized(google::protobuf::FileDescriptorProto *this)
{
  uint64_t v2 = (char *)this + 48;
  int v3 = *((_DWORD *)this + 14);
  while (1)
  {
    BOOL v4 = __OFSUB__(v3--, 1);
    if (v3 < 0 != v4) {
      break;
    }
    int v5 = (google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)v2, v3);
    if ((google::protobuf::DescriptorProto::IsInitialized(v5) & 1) == 0) {
      return 0;
    }
  }
  int v7 = *((_DWORD *)this + 20);
  while (1)
  {
    BOOL v4 = __OFSUB__(v7--, 1);
    if (v7 < 0 != v4) {
      break;
    }
    uint64_t v8 = (google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)this + 72, v7);
    if ((google::protobuf::EnumDescriptorProto::IsInitialized(v8) & 1) == 0) {
      return 0;
    }
  }
  int v9 = *((_DWORD *)this + 26);
  while (1)
  {
    BOOL v4 = __OFSUB__(v9--, 1);
    if (v9 < 0 != v4) {
      break;
    }
    BOOL v10 = (google::protobuf::ServiceDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((uint64_t)this + 96, v9);
    if ((google::protobuf::ServiceDescriptorProto::IsInitialized(v10) & 1) == 0) {
      return 0;
    }
  }
  int v11 = *((_DWORD *)this + 32);
  while (1)
  {
    BOOL v4 = __OFSUB__(v11--, 1);
    if (v11 < 0 != v4) {
      break;
    }
    uint64_t v12 = (google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)this + 120, v11);
    if ((google::protobuf::FieldDescriptorProto::IsInitialized(v12) & 1) == 0) {
      return 0;
    }
  }
  if ((*((_DWORD *)this + 4) & 8) == 0) {
    return 1;
  }
  uint64_t v13 = *((void *)this + 25);
  if (!v13)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 7454);
    uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    uint64_t v13 = *((void *)this + 25);
  }
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v13 + 16));
  if (result)
  {
    uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v13 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

void sub_23CDF67E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF67F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileOptions::IsInitialized(google::protobuf::FileOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::FileOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::FileDescriptorProto::GetMetadata(google::protobuf::FileDescriptorProto *this)
{
  return off_26AED0A18[2];
}

void google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  google::protobuf::DescriptorProto_ExtensionRange::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      uint64_t v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        uint64_t v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::DescriptorProto_ExtensionRange::SharedDtor(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2305);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v6, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  if (this != (google::protobuf::DescriptorProto_ExtensionRange *)&google::protobuf::_DescriptorProto_ExtensionRange_default_instance_)
  {
    int v5 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
    if (v5)
    {
      google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(v5);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CDF69D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF69E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::DescriptorProto_ExtensionRange::Clear(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    uint64_t v3 = *((void *)this + 3);
    if (v3)
    {
      google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v3 + 16));
      google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v3 + 40);
      uint64_t v4 = *(void *)(v3 + 8);
      if ((v4 & 1) == 0) {
        goto LABEL_8;
      }
    }
    else
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2332);
      int v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v5);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      uint64_t v6 = *((void *)this + 3);
      google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v6 + 16));
      google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v6 + 40);
      uint64_t v4 = *(void *)(v6 + 8);
      if ((v4 & 1) == 0) {
        goto LABEL_8;
      }
    }
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
  }
LABEL_8:
  if ((v2 & 6) != 0) {
    *((void *)this + 4) = 0;
  }
  *((_DWORD *)this + 4) = 0;
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) != 0 && *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CDF6B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF6B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ExtensionRangeOptions::Clear(google::protobuf::ExtensionRangeOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40);
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

google::protobuf::internal *google::protobuf::DescriptorProto_ExtensionRange::_InternalParse(google::protobuf::DescriptorProto_ExtensionRange *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  char v31 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v31, a3[11].i32[1]) & 1) == 0)
  {
    char v8 = (void *)((char *)this + 8);
    while (1)
    {
      BOOL v10 = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v11 = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = v11 + (*(unsigned __int8 *)v10 << 7);
      unsigned int v11 = v12 - 128;
      if ((*(char *)v10 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, (const char *)(v12 - 128));
      char v31 = TagFallback;
      if (!TagFallback) {
        goto LABEL_45;
      }
      BOOL v10 = TagFallback;
      unsigned int v11 = v23;
      unsigned int v13 = v23 >> 3;
      if (v23 >> 3 == 3)
      {
LABEL_36:
        if (v11 == 26)
        {
          *((_DWORD *)this + 4) |= 1u;
          int v9 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
          if (!v9)
          {
            int64_t v24 = (google::protobuf::Arena *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
            if (*v8) {
              int64_t v24 = *(google::protobuf::Arena **)v24;
            }
            int v9 = (google::protobuf::ExtensionRangeOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v24);
            *((void *)this + 3) = v9;
            BOOL v10 = v31;
          }
          char v31 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::ExtensionRangeOptions>(a3, v9, v10);
          if (!v31)
          {
LABEL_45:
            char v31 = 0;
            goto LABEL_2;
          }
          goto LABEL_32;
        }
LABEL_16:
        if (v11) {
          BOOL v15 = (v11 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15)
        {
          a3[10].i32[0] = v11 - 1;
          goto LABEL_2;
        }
        if (*v8)
        {
          char v31 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v10, (const char *)a3, v5);
          if (!v31) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v29 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
          char v31 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)v29, v31, (const char *)a3, v30);
          if (!v31) {
            goto LABEL_45;
          }
        }
        goto LABEL_32;
      }
LABEL_11:
      if (v13 == 2)
      {
        if (v11 != 16) {
          goto LABEL_16;
        }
        v6 |= 4u;
        uint64_t v17 = (google::protobuf::internal *)((char *)v10 + 1);
        LODWORD(v16) = *(unsigned __int8 *)v10;
        if ((v16 & 0x80) == 0) {
          goto LABEL_27;
        }
        int v18 = *(char *)v17;
        uint64_t v16 = (const char *)(v16 + (v18 << 7) - 128);
        if ((v18 & 0x80000000) == 0)
        {
          uint64_t v17 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_27:
          char v31 = v17;
          *((_DWORD *)this + 9) = v16;
          goto LABEL_32;
        }
        uint64_t v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v16);
        char v31 = v25;
        *((_DWORD *)this + 9) = v26;
        if (!v25) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v13 != 1 || v11 != 8) {
          goto LABEL_16;
        }
        v6 |= 2u;
        uint64_t v20 = (google::protobuf::internal *)((char *)v10 + 1);
        LODWORD(v19) = *(unsigned __int8 *)v10;
        if ((v19 & 0x80) == 0) {
          goto LABEL_31;
        }
        int v21 = *(char *)v20;
        int v19 = (const char *)(v19 + (v21 << 7) - 128);
        if ((v21 & 0x80000000) == 0)
        {
          uint64_t v20 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_31:
          char v31 = v20;
          *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v19;
          goto LABEL_32;
        }
        uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v19);
        char v31 = v27;
        *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v28;
        if (!v27) {
          goto LABEL_45;
        }
      }
LABEL_32:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v31, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    BOOL v10 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_10:
    char v31 = v10;
    unsigned int v13 = v11 >> 3;
    if (v11 >> 3 == 3) {
      goto LABEL_36;
    }
    goto LABEL_11;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return v31;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::ExtensionRangeOptions>(int32x2_t *a1, google::protobuf::ExtensionRangeOptions *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::ExtensionRangeOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF6F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF6F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(google::protobuf::DescriptorProto_ExtensionRange *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unint64_t v9 = *((int *)this + 8);
      *a2 = 8;
      if (v9 <= 0x7F)
      {
LABEL_8:
        a2[1] = v9;
        a2 += 2;
        if ((v6 & 4) != 0) {
          goto LABEL_17;
        }
        goto LABEL_3;
      }
    }
    else
    {
      unint64_t v9 = *((int *)this + 8);
      *a2 = 8;
      if (v9 <= 0x7F) {
        goto LABEL_8;
      }
    }
    a2[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v10 | 0x80;
        unint64_t v11 = v10 >> 7;
        ++a2;
        unint64_t v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(a2 - 1) = v11;
      if ((v6 & 4) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
      if ((v6 & 4) != 0) {
        goto LABEL_17;
      }
    }
LABEL_3:
    if ((v6 & 1) == 0) {
      goto LABEL_4;
    }
LABEL_28:
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      uint64_t v17 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
      *a2 = 26;
      unsigned int v18 = *((_DWORD *)v17 + 16);
      if (v18 <= 0x7F)
      {
LABEL_30:
        a2[1] = v18;
        a2 = (char *)google::protobuf::ExtensionRangeOptions::_InternalSerialize(v17, a2 + 2, a3);
        uint64_t v7 = *((void *)this + 1);
        if ((v7 & 1) == 0) {
          return (const google::protobuf::UnknownFieldSet *)a2;
        }
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v17 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
      *a2 = 26;
      unsigned int v18 = *((_DWORD *)v17 + 16);
      if (v18 <= 0x7F) {
        goto LABEL_30;
      }
    }
    a2[1] = v18 | 0x80;
    unsigned int v19 = v18 >> 7;
    if (v18 >> 14)
    {
      uint64_t v20 = a2 + 3;
      do
      {
        *(v20 - 1) = v19 | 0x80;
        unsigned int v21 = v19 >> 7;
        ++v20;
        unsigned int v22 = v19 >> 14;
        v19 >>= 7;
      }
      while (v22);
      *(v20 - 1) = v21;
      a2 = (char *)google::protobuf::ExtensionRangeOptions::_InternalSerialize(v17, v20, a3);
      uint64_t v7 = *((void *)this + 1);
      if ((v7 & 1) == 0) {
        return (const google::protobuf::UnknownFieldSet *)a2;
      }
    }
    else
    {
      a2[2] = v19;
      a2 = (char *)google::protobuf::ExtensionRangeOptions::_InternalSerialize(v17, a2 + 3, a3);
      uint64_t v7 = *((void *)this + 1);
      if ((v7 & 1) == 0) {
        return (const google::protobuf::UnknownFieldSet *)a2;
      }
    }
    goto LABEL_39;
  }
  if ((v6 & 4) == 0) {
    goto LABEL_3;
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    unint64_t v13 = *((int *)this + 9);
    *a2 = 16;
    if (v13 <= 0x7F)
    {
LABEL_19:
      a2[1] = v13;
      a2 += 2;
      if (v6) {
        goto LABEL_28;
      }
      goto LABEL_4;
    }
  }
  else
  {
    unint64_t v13 = *((int *)this + 9);
    *a2 = 16;
    if (v13 <= 0x7F) {
      goto LABEL_19;
    }
  }
  a2[1] = v13 | 0x80;
  unint64_t v14 = v13 >> 7;
  if (v13 >> 14)
  {
    a2 += 3;
    do
    {
      *(a2 - 1) = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      ++a2;
      unint64_t v16 = v14 >> 14;
      v14 >>= 7;
    }
    while (v16);
    *(a2 - 1) = v15;
    if (v6) {
      goto LABEL_28;
    }
  }
  else
  {
    a2[2] = v14;
    a2 += 3;
    if (v6) {
      goto LABEL_28;
    }
  }
LABEL_4:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
LABEL_39:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v5 = *((void *)this + 3);
      uint64_t v6 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::internal::ExtensionSet *)(v5 + 16));
      uint64_t v7 = *(int *)(v5 + 48);
      int v8 = (char *)(v6 + 2 * v7);
      uint64_t v9 = *(void *)(v5 + 56);
      if (v9) {
        unint64_t v10 = (google::protobuf::UninterpretedOption **)(v9 + 8);
      }
      else {
        unint64_t v10 = 0;
      }
      if (v7)
      {
        uint64_t v11 = 8 * v7;
        do
        {
          unint64_t v12 = *v10++;
          unint64_t v13 = google::protobuf::UninterpretedOption::ByteSizeLong(v12);
          int v8 = &v8[(void)v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6)];
          v11 -= 8;
        }
        while (v11);
      }
      if (*(unsigned char *)(v5 + 8)) {
        int v8 = google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(v5 + 8), (const google::protobuf::UnknownFieldSet *)v8, (_DWORD *)(v5 + 64));
      }
      else {
        *(_DWORD *)(v5 + 64) = v8;
      }
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)&v8[((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1];
      if ((v2 & 2) == 0)
      {
LABEL_20:
        if ((v2 & 4) != 0)
        {
          int v17 = *((_DWORD *)this + 9);
          if (v17 < 0)
          {
            uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + 11);
            uint64_t v4 = (google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8);
            if ((*((unsigned char *)this + 8) & 1) == 0) {
              goto LABEL_22;
            }
          }
          else
          {
            uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1);
            uint64_t v4 = (google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8);
            if ((*((unsigned char *)this + 8) & 1) == 0) {
              goto LABEL_22;
            }
          }
        }
        else
        {
          uint64_t v4 = (google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8);
          if ((*((unsigned char *)this + 8) & 1) == 0) {
            goto LABEL_22;
          }
        }
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_20;
      }
    }
    int v14 = *((_DWORD *)this + 8);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v15);
    goto LABEL_20;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8);
  if ((*((unsigned char *)this + 8) & 1) == 0)
  {
LABEL_22:
    *((_DWORD *)this + 5) = v3;
    return (char *)v3;
  }
LABEL_27:

  return google::protobuf::internal::ComputeUnknownFieldsSize(v4, v3, (_DWORD *)this + 5);
}

void google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2477);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDF74B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF74CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2492);
    char v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v13, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      int v6 = *((_DWORD *)a2 + 4);
      if ((v6 & 7) == 0) {
        return;
      }
LABEL_8:
      if (v6)
      {
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v9 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
        if (!v9)
        {
          unint64_t v10 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
          if (*v4) {
            unint64_t v10 = *(google::protobuf::Arena **)v10;
          }
          uint64_t v9 = (google::protobuf::ExtensionRangeOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v10);
          *((void *)this + 3) = v9;
        }
        if (*((void *)a2 + 3)) {
          uint64_t v11 = (const google::protobuf::ExtensionRangeOptions *)*((void *)a2 + 3);
        }
        else {
          uint64_t v11 = (const google::protobuf::ExtensionRangeOptions *)&google::protobuf::_ExtensionRangeOptions_default_instance_;
        }
        google::protobuf::ExtensionRangeOptions::MergeFrom(v9, v11);
        if ((v6 & 2) == 0)
        {
LABEL_10:
          if ((v6 & 4) == 0)
          {
LABEL_12:
            *((_DWORD *)this + 4) |= v6;
            return;
          }
LABEL_11:
          *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
          goto LABEL_12;
        }
      }
      else if ((v6 & 2) == 0)
      {
        goto LABEL_10;
      }
      *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = *((_DWORD *)a2 + 8);
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
  }
  int v8 = (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  if ((*v4 & 1) == 0)
  {
    unint64_t v12 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v12, v8);
    int v6 = *((_DWORD *)a2 + 4);
    if ((v6 & 7) == 0) {
      return;
    }
    goto LABEL_8;
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8, v8);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0) {
    goto LABEL_8;
  }
}

void sub_23CDF7658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF766C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ExtensionRangeOptions::MergeFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::ExtensionRangeOptions *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 3538);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), (const google::protobuf::ExtensionRangeOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), (const google::protobuf::ExtensionRangeOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  int v6 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v7 = *((void *)this + 1);
  if (v7) {
    int v8 = (char *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    int v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v6);
LABEL_8:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40, (uint64_t)a2 + 40);
}

void sub_23CDF775C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF7770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto_ExtensionRange::CopyFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::DescriptorProto_ExtensionRange::Clear(this);
    google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::IsInitialized(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  if ((*((_DWORD *)this + 4) & 1) == 0) {
    return 1;
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3)
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 7769);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    uint64_t v3 = *((void *)this + 3);
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v3 + 40);
  if (result) {
    return 1;
  }
  return result;
}

void sub_23CDF7884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF7898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::ExtensionRangeOptions::IsInitialized(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 40);
  }
  return result;
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::GetMetadata(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return off_26AED0A18[4];
}

void google::protobuf::DescriptorProto_ReservedRange::~DescriptorProto_ReservedRange(google::protobuf::DescriptorProto_ReservedRange *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2594);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    char v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      int v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        int v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::DescriptorProto_ReservedRange::~DescriptorProto_ReservedRange(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CDF7A1C(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CDF7A30(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::DescriptorProto_ReservedRange::Clear(google::protobuf::DescriptorProto_ReservedRange *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0) {
    *((void *)this + 3) = 0;
  }
  *((_DWORD *)this + 4) = 0;
  uint64_t v1 = *((void *)this + 1);
  if ((v1 & 1) != 0 && *(void *)((v1 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v1 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v1 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

google::protobuf::internal *google::protobuf::DescriptorProto_ReservedRange::_InternalParse(google::protobuf::DescriptorProto_ReservedRange *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v29 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v29, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    int v8 = (void *)((char *)this + 8);
    while (1)
    {
      unint64_t v10 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v11 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = v11 + (*(unsigned __int8 *)v10 << 7);
      unsigned int v11 = v12 - 128;
      if ((*(char *)v10 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v12 - 128));
      uint64_t v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_36;
      }
      unint64_t v10 = TagFallback;
      unsigned int v11 = v20;
      unsigned int v13 = v20 >> 3;
      if (v20 >> 3 == 2)
      {
LABEL_28:
        if (v11 != 16) {
          goto LABEL_15;
        }
        v6 |= 2u;
        char v9 = (google::protobuf::internal *)((char *)v10 + 1);
        LODWORD(v21) = *(unsigned __int8 *)v10;
        if ((v21 & 0x80) == 0) {
          goto LABEL_5;
        }
        int v22 = *(char *)v9;
        unsigned int v21 = (const char *)(v21 + (v22 << 7) - 128);
        if ((v22 & 0x80000000) == 0)
        {
          char v9 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_5:
          uint64_t v29 = v9;
          *((_DWORD *)this + 7) = v21;
          goto LABEL_6;
        }
        unsigned int v23 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v21);
        uint64_t v29 = v23;
        *((_DWORD *)this + 7) = v24;
        if (!v23) {
          goto LABEL_36;
        }
        goto LABEL_6;
      }
LABEL_11:
      if (v13 != 1 || v11 != 8)
      {
LABEL_15:
        if (v11) {
          BOOL v15 = (v11 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15)
        {
          *((_DWORD *)a3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v11 - 1;
          goto LABEL_2;
        }
        if (*v8)
        {
          uint64_t v29 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v10, (const char *)a3, v5);
          if (!v29) {
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v27 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
          uint64_t v29 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)v27, v29, (const char *)a3, v28);
          if (!v29)
          {
LABEL_36:
            uint64_t v29 = 0;
            goto LABEL_2;
          }
        }
        goto LABEL_6;
      }
      v6 |= 1u;
      int v17 = (google::protobuf::internal *)((char *)v10 + 1);
      LODWORD(v16) = *(unsigned __int8 *)v10;
      if ((v16 & 0x80) == 0) {
        goto LABEL_25;
      }
      int v18 = *(char *)v17;
      unint64_t v16 = (const char *)(v16 + (v18 << 7) - 128);
      if ((v18 & 0x80000000) == 0)
      {
        int v17 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_25:
        uint64_t v29 = v17;
        *((_DWORD *)this + 6) = v16;
        goto LABEL_6;
      }
      uint64_t v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v16);
      uint64_t v29 = v25;
      *((_DWORD *)this + 6) = v26;
      if (!v25) {
        goto LABEL_36;
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v29, *((_DWORD *)a3 + 23))) {
        goto LABEL_2;
      }
    }
    unint64_t v10 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_10:
    uint64_t v29 = v10;
    unsigned int v13 = v11 >> 3;
    if (v11 >> 3 == 2) {
      goto LABEL_28;
    }
    goto LABEL_11;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return v29;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(google::protobuf::DescriptorProto_ReservedRange *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_16:
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unint64_t v13 = *((int *)this + 7);
      *a2 = 16;
      if (v13 <= 0x7F)
      {
LABEL_18:
        a2[1] = v13;
        a2 += 2;
        uint64_t v7 = *((void *)this + 1);
        if ((v7 & 1) == 0) {
          return (const google::protobuf::UnknownFieldSet *)a2;
        }
        goto LABEL_19;
      }
    }
    else
    {
      unint64_t v13 = *((int *)this + 7);
      *a2 = 16;
      if (v13 <= 0x7F) {
        goto LABEL_18;
      }
    }
    a2[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    if (v13 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v14 | 0x80;
        unint64_t v15 = v14 >> 7;
        ++a2;
        unint64_t v16 = v14 >> 14;
        v14 >>= 7;
      }
      while (v16);
      *(a2 - 1) = v15;
      uint64_t v7 = *((void *)this + 1);
      if ((v7 & 1) == 0) {
        return (const google::protobuf::UnknownFieldSet *)a2;
      }
    }
    else
    {
      a2[2] = v14;
      a2 += 3;
      uint64_t v7 = *((void *)this + 1);
      if ((v7 & 1) == 0) {
        return (const google::protobuf::UnknownFieldSet *)a2;
      }
    }
    goto LABEL_19;
  }
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    unint64_t v9 = *((int *)this + 6);
    *a2 = 8;
    if (v9 <= 0x7F)
    {
LABEL_7:
      a2[1] = v9;
      a2 += 2;
      if ((v6 & 2) != 0) {
        goto LABEL_16;
      }
      goto LABEL_3;
    }
  }
  else
  {
    unint64_t v9 = *((int *)this + 6);
    *a2 = 8;
    if (v9 <= 0x7F) {
      goto LABEL_7;
    }
  }
  a2[1] = v9 | 0x80;
  unint64_t v10 = v9 >> 7;
  if (v9 >> 14)
  {
    a2 += 3;
    do
    {
      *(a2 - 1) = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      ++a2;
      unint64_t v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
    *(a2 - 1) = v11;
    if ((v6 & 2) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    a2[2] = v10;
    a2 += 3;
    if ((v6 & 2) != 0) {
      goto LABEL_16;
    }
  }
LABEL_3:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
LABEL_19:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong(google::protobuf::DescriptorProto_ReservedRange *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *((_DWORD *)this + 6);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *((_DWORD *)this + 7);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto_ReservedRange *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void google::protobuf::DescriptorProto_ReservedRange::MergeFrom(google::protobuf::DescriptorProto_ReservedRange *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2739);
    int v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDF8004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF8018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto_ReservedRange::MergeFrom(google::protobuf::DescriptorProto_ReservedRange *this, const google::protobuf::DescriptorProto_ReservedRange *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2754);
    int v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 3) == 0) {
        return;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v8 = *((void *)this + 1);
  if (v8)
  {
    google::protobuf::UnknownFieldSet::InternalMergeFrom((v8 & 0xFFFFFFFFFFFFFFFELL) + 8, v7);
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 3) == 0) {
      return;
    }
  }
  else
  {
    unint64_t v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v7);
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 3) == 0) {
      return;
    }
  }
LABEL_8:
  if (v5) {
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  }
  if ((v5 & 2) != 0) {
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  }
  *((_DWORD *)this + 4) |= v5;
}

void sub_23CDF8144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF8158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto_ReservedRange::CopyFrom(google::protobuf::DescriptorProto_ReservedRange *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    if ((*((unsigned char *)this + 16) & 3) != 0) {
      *((void *)this + 3) = 0;
    }
    *((_DWORD *)this + 4) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::IsInitialized(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return 1;
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::GetMetadata(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return off_26AED0A18[6];
}

google::protobuf::DescriptorProto *google::protobuf::DescriptorProto::DescriptorProto(google::protobuf::DescriptorProto *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C4E58;
  *((void *)this + 1) = a2;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = a2;
  *((void *)this + 6) = a2;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  *((void *)this + 9) = a2;
  *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = a2;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = a2;
  *((void *)this + 16) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 24) = a2;
  *((void *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = a2;
  *((void *)this + 19) = 0;
  *((void *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((void *)this + 21) = a2;
  *((void *)this + 22) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 26) = 0;
  if (atomic_load_explicit(scc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((void *)this + 27) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 2google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  return this;
}

void sub_23CDF8314(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v7);
  google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::~RepeatedPtrField(v8);
  google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::~RepeatedPtrField(v6);
  google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::~RepeatedPtrField(v4);
  google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::~RepeatedPtrField(v3);
  google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::~RepeatedPtrField(v2);
  google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::~RepeatedPtrField(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorProto::_internal_has_options(google::protobuf::DescriptorProto *this)
{
  unsigned int v1 = *((_DWORD *)this + 4);
  if ((v1 & 2) == 0 || *((void *)this + 28)) {
    return (v1 >> 1) & 1;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 8241);
  uint64_t v3 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: !value || options_ != nullptr: ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v4, v3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  return (v1 >> 1) & 1;
}

void sub_23CDF83E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF83FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto::~DescriptorProto(google::protobuf::internal::ArenaImpl **this)
{
  google::protobuf::DescriptorProto::SharedDtor((google::protobuf::DescriptorProto *)this);
  uint64_t v2 = this[1];
  if (v2)
  {
    unint64_t v3 = (unint64_t)v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)((unint64_t)v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      uint64_t v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        uint64_t v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(this + 24);
  google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::~RepeatedPtrField((uint64_t)(this + 21));
  google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::~RepeatedPtrField((uint64_t)(this + 18));
  google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::~RepeatedPtrField((uint64_t)(this + 15));
  google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::~RepeatedPtrField((uint64_t)(this + 12));
  google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::~RepeatedPtrField((uint64_t)(this + 9));
  uint64_t v7 = (google::protobuf::DescriptorProto **)this[8];
  if (v7)
  {
    uint64_t v8 = this[6];
    if (v8)
    {
      this[8] = 0;
LABEL_23:
      google::protobuf::internal::ArenaImpl::SpaceAllocated(v8);
      goto LABEL_24;
    }
    unint64_t v9 = v7 + 1;
    uint64_t v10 = *(unsigned int *)v7;
    if ((int)v10 >= 1)
    {
      do
      {
        if (*v9)
        {
          google::protobuf::DescriptorProto::~DescriptorProto(*v9);
          MEMORY[0x23ECF2BC0]();
        }
        ++v9;
        --v10;
      }
      while (v10);
      uint64_t v7 = (google::protobuf::DescriptorProto **)this[8];
    }
    operator delete(v7);
  }
  uint64_t v8 = this[6];
  this[8] = 0;
  if (v8) {
    goto LABEL_23;
  }
LABEL_24:
  google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::~RepeatedPtrField((uint64_t)(this + 3));
}

{
  uint64_t vars8;

  google::protobuf::DescriptorProto::~DescriptorProto(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::DescriptorProto::SharedDtor(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2880);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 27);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::DescriptorProto *)&google::protobuf::_DescriptorProto_default_instance_)
  {
    uint64_t v7 = (google::protobuf::MessageOptions *)*((void *)this + 28);
    if (v7)
    {
      google::protobuf::MessageOptions::~MessageOptions(v7);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CDF8648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF865C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::DescriptorProto::Clear(google::protobuf::DescriptorProto *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((char *)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)this + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)this + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)this + 120);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((uint64_t)this + 144);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((uint64_t)this + 168);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 192);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0) {
    goto LABEL_12;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 27);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
      goto LABEL_6;
    }
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = *((void *)this + 28);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 2920);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)this + 28);
  }
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v4 + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v4 + 48);
  *(_DWORD *)(v4 + 72) = 0;
  *(_DWORD *)(v4 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v6 & 1) != 0 && *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v6 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
LABEL_12:
  *((_DWORD *)this + 4) = 0;
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) != 0 && *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CDF87F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF8808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MessageOptions::Clear(google::protobuf::MessageOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::MessageOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
  *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::DescriptorProto::_InternalParse(google::protobuf::DescriptorProto *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (uint64_t *)((char *)this + 192);
    long long v96 = (unint64_t *)((char *)this + 8);
    int v97 = (std::string **)((char *)this + 216);
    while (1)
    {
      unint64_t v9 = __s + 1;
      unsigned int v10 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((*v9 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v11 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unint64_t v9 = TagFallback;
      unsigned int v10 = v19;
      unsigned int v12 = (v19 >> 3) - 1;
      if (v12 <= 9) {
        goto LABEL_11;
      }
LABEL_20:
      if (v10) {
        BOOL v20 = (v10 & 7) == 4;
      }
      else {
        BOOL v20 = 1;
      }
      if (v20)
      {
        a3[10].i32[0] = v10 - 1;
        return __s;
      }
      if (*v96)
      {
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, (google::protobuf::UnknownFieldSet *)((*v96 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v9, (const char *)a3, v5);
        if (!__s) {
          return 0;
        }
      }
      else
      {
        uint64_t v94 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v96);
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, (google::protobuf::UnknownFieldSet *)v94, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v95);
        if (!__s) {
          return 0;
        }
      }
LABEL_148:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))return __s; {
    }
      }
    unint64_t v9 = __s + 2;
LABEL_10:
    __s = v9;
    unsigned int v12 = (v10 >> 3) - 1;
LABEL_11:
    switch(v12)
    {
      case 0u:
        if (v10 != 10) {
          goto LABEL_20;
        }
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v13 = *((void *)this + 1);
        unint64_t v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
        if ((v13 & 1) == 0)
        {
          unint64_t v15 = *v97;
          if (*v97 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_16;
          }
LABEL_15:
          google::protobuf::internal::ArenaStringPtr::CreateInstance(v97, v14, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          unint64_t v15 = *v97;
          unint64_t v9 = __s;
          goto LABEL_16;
        }
        unint64_t v14 = *(google::protobuf::Arena **)v14;
        unint64_t v15 = *v97;
        if (*v97 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_15;
        }
LABEL_16:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v15, v9, (uint64_t)a3);
        if (SHIBYTE(v15->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v93 = (std::string *)v15->__r_.__value_.__r.__words[0];
          size_t size = v15->__r_.__value_.__l.__size_;
          if ((size & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v15->__r_.__value_.__l.__size_, "size_t to int conversion", v16);
          }
          unint64_t v15 = v93;
        }
        else
        {
          size_t size = HIBYTE(v15->__r_.__value_.__r.__words[2]);
        }
        google::protobuf::internal::VerifyUTF8(v15, size, (google::protobuf::internal *)"google.protobuf.DescriptorProto.name");
        if (__s) {
          goto LABEL_148;
        }
        return 0;
      case 1u:
        if (v10 != 18) {
          goto LABEL_20;
        }
        unsigned int v21 = v9 - 1;
        while (1)
        {
          int v22 = v21 + 1;
          __s = v21 + 1;
          unsigned int v23 = (int *)*((void *)this + 5);
          if (!v23) {
            break;
          }
          uint64_t v24 = *((int *)this + 8);
          int v25 = *v23;
          if ((int)v24 >= *v23)
          {
            if (v25 == *((_DWORD *)this + 9))
            {
LABEL_34:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v25 + 1);
              unsigned int v23 = (int *)*((void *)this + 5);
              int v25 = *v23;
            }
            *unsigned int v23 = v25 + 1;
            int v26 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)this + 3));
            uint64_t v27 = *((void *)this + 5);
            uint64_t v28 = *((int *)this + 8);
            *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v28 + 1;
            *(void *)(v27 + 8 * v28 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v26;
            int v22 = __s;
            goto LABEL_36;
          }
          *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v24 + 1;
          int v26 = *(google::protobuf::FieldDescriptorProto **)&v23[2 * v24 + 2];
LABEL_36:
          unsigned int v21 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(a3, v26, v22);
          __s = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
            goto LABEL_148;
          }
        }
        int v25 = *((_DWORD *)this + 9);
        goto LABEL_34;
      case 2u:
        if (v10 != 26) {
          goto LABEL_20;
        }
        uint64_t v29 = v9 - 1;
        while (1)
        {
          uint64_t v30 = v29 + 1;
          __s = v29 + 1;
          char v31 = (int *)*((void *)this + 8);
          if (!v31) {
            break;
          }
          uint64_t v32 = *((int *)this + 14);
          int v33 = *v31;
          if ((int)v32 >= *v31)
          {
            if (v33 == *((_DWORD *)this + 15))
            {
LABEL_47:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v33 + 1);
              char v31 = (int *)*((void *)this + 8);
              int v33 = *v31;
            }
            *char v31 = v33 + 1;
            uint64_t v35 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::Arena **)this
                                                                                                 + 6));
            LODWORD(v34) = v35;
            uint64_t v36 = *((void *)this + 8);
            uint64_t v37 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v37 + 1;
            *(void *)(v36 + 8 * v37 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v35;
            uint64_t v30 = __s;
            goto LABEL_49;
          }
          *((_DWORD *)this + 14) = v32 + 1;
          uint64_t v34 = *(void *)&v31[2 * v32 + 2];
LABEL_49:
          uint64_t v29 = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto>((int)a3, v34, (google::protobuf::internal *)v30);
          __s = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 26) {
            goto LABEL_148;
          }
        }
        int v33 = *((_DWORD *)this + 15);
        goto LABEL_47;
      case 3u:
        if (v10 != 34) {
          goto LABEL_20;
        }
        int v38 = v9 - 1;
        while (1)
        {
          uint64_t v39 = v38 + 1;
          __s = v38 + 1;
          uint64_t v40 = (int *)*((void *)this + 11);
          if (!v40) {
            break;
          }
          uint64_t v41 = *((int *)this + 20);
          int v42 = *v40;
          if ((int)v41 >= *v40)
          {
            if (v42 == *((_DWORD *)this + 21))
            {
LABEL_60:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 18, v42 + 1);
              uint64_t v40 = (int *)*((void *)this + 11);
              int v42 = *v40;
            }
            *uint64_t v40 = v42 + 1;
            uint64_t v43 = (google::protobuf::EnumDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::Arena **)this + 9));
            uint64_t v44 = *((void *)this + 11);
            uint64_t v45 = *((int *)this + 20);
            *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v45 + 1;
            *(void *)(v44 + 8 * v45 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v43;
            uint64_t v39 = __s;
            goto LABEL_62;
          }
          *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v41 + 1;
          uint64_t v43 = *(google::protobuf::EnumDescriptorProto **)&v40[2 * v41 + 2];
LABEL_62:
          int v38 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto>(a3, v43, v39);
          __s = v38;
          if (!v38) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 34) {
            goto LABEL_148;
          }
        }
        int v42 = *((_DWORD *)this + 21);
        goto LABEL_60;
      case 4u:
        if (v10 != 42) {
          goto LABEL_20;
        }
        uint64_t v46 = v9 - 1;
        while (1)
        {
          uint64_t v47 = v46 + 1;
          __s = v46 + 1;
          uint64_t v48 = (int *)*((void *)this + 14);
          if (!v48) {
            break;
          }
          uint64_t v49 = *((int *)this + 26);
          int v50 = *v48;
          if ((int)v49 >= *v48)
          {
            if (v50 == *((_DWORD *)this + 27))
            {
LABEL_73:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 24, v50 + 1);
              uint64_t v48 = (int *)*((void *)this + 14);
              int v50 = *v48;
            }
            int *v48 = v50 + 1;
            uint64_t v51 = (google::protobuf::DescriptorProto_ExtensionRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*((google::protobuf::Arena **)this + 12));
            uint64_t v52 = *((void *)this + 14);
            uint64_t v53 = *((int *)this + 26);
            *((_DWORD *)this + 26) = v53 + 1;
            *(void *)(v52 + 8 * v53 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v51;
            uint64_t v47 = __s;
            goto LABEL_75;
          }
          *((_DWORD *)this + 26) = v49 + 1;
          uint64_t v51 = *(google::protobuf::DescriptorProto_ExtensionRange **)&v48[2 * v49 + 2];
LABEL_75:
          uint64_t v46 = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto_ExtensionRange>(a3, v51, (google::protobuf::internal *)v47);
          __s = v46;
          if (!v46) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v46 || *v46 != 42) {
            goto LABEL_148;
          }
        }
        int v50 = *((_DWORD *)this + 27);
        goto LABEL_73;
      case 5u:
        if (v10 != 50) {
          goto LABEL_20;
        }
        int v54 = v9 - 1;
        while (1)
        {
          int v55 = v54 + 1;
          __s = v54 + 1;
          uint64_t v56 = (int *)*((void *)this + 17);
          if (!v56) {
            break;
          }
          uint64_t v57 = *((int *)this + 32);
          int v58 = *v56;
          if ((int)v57 >= *v56)
          {
            if (v58 == *((_DWORD *)this + 33))
            {
LABEL_86:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 30, v58 + 1);
              uint64_t v56 = (int *)*((void *)this + 17);
              int v58 = *v56;
            }
            int *v56 = v58 + 1;
            unsigned int v59 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)this + 15));
            uint64_t v60 = *((void *)this + 17);
            uint64_t v61 = *((int *)this + 32);
            *((_DWORD *)this + 32) = v61 + 1;
            *(void *)(v60 + 8 * v61 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v59;
            int v55 = __s;
            goto LABEL_88;
          }
          *((_DWORD *)this + 32) = v57 + 1;
          unsigned int v59 = *(google::protobuf::FieldDescriptorProto **)&v56[2 * v57 + 2];
LABEL_88:
          int v54 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldDescriptorProto>(a3, v59, v55);
          __s = v54;
          if (!v54) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v54 || *v54 != 50) {
            goto LABEL_148;
          }
        }
        int v58 = *((_DWORD *)this + 33);
        goto LABEL_86;
      case 6u:
        if (v10 != 58) {
          goto LABEL_20;
        }
        *((_DWORD *)this + 4) |= 2u;
        char v8 = (google::protobuf::MessageOptions *)*((void *)this + 28);
        if (!v8)
        {
          unsigned int v62 = (google::protobuf::Arena *)(*v96 & 0xFFFFFFFFFFFFFFFELL);
          if (*v96) {
            unsigned int v62 = *(google::protobuf::Arena **)v62;
          }
          char v8 = (google::protobuf::MessageOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v62);
          *((void *)this + 2google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v8;
          unint64_t v9 = __s;
        }
        __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MessageOptions>(a3, v8, (google::protobuf::internal *)v9);
        if (!__s) {
          return 0;
        }
        goto LABEL_148;
      case 7u:
        if (v10 != 66) {
          goto LABEL_20;
        }
        uint64_t v63 = v9 - 1;
        while (1)
        {
          int v64 = v63 + 1;
          __s = v63 + 1;
          int v65 = (int *)*((void *)this + 20);
          if (!v65) {
            break;
          }
          uint64_t v66 = *((int *)this + 38);
          int v67 = *v65;
          if ((int)v66 >= *v65)
          {
            if (v67 == *((_DWORD *)this + 39))
            {
LABEL_103:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 36, v67 + 1);
              int v65 = (int *)*((void *)this + 20);
              int v67 = *v65;
            }
            *int v65 = v67 + 1;
            uint64_t v68 = (google::protobuf::OneofDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*((google::protobuf::Arena **)this + 18));
            uint64_t v69 = *((void *)this + 20);
            uint64_t v70 = *((int *)this + 38);
            *((_DWORD *)this + 3google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v70 + 1;
            *(void *)(v69 + 8 * v70 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v68;
            int v64 = __s;
            goto LABEL_105;
          }
          *((_DWORD *)this + 3google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v66 + 1;
          uint64_t v68 = *(google::protobuf::OneofDescriptorProto **)&v65[2 * v66 + 2];
LABEL_105:
          uint64_t v63 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::OneofDescriptorProto>(a3, v68, v64);
          __s = v63;
          if (!v63) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v63 || *v63 != 66) {
            goto LABEL_148;
          }
        }
        int v67 = *((_DWORD *)this + 39);
        goto LABEL_103;
      case 8u:
        if (v10 != 74) {
          goto LABEL_20;
        }
        uint64_t v71 = v9 - 1;
        while (1)
        {
          unsigned int v72 = v71 + 1;
          __s = v71 + 1;
          int v73 = (int *)*((void *)this + 23);
          if (!v73) {
            break;
          }
          uint64_t v74 = *((int *)this + 44);
          int v75 = *v73;
          if ((int)v74 >= *v73)
          {
            if (v75 == *((_DWORD *)this + 45))
            {
LABEL_116:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 42, v75 + 1);
              int v73 = (int *)*((void *)this + 23);
              int v75 = *v73;
            }
            *int v73 = v75 + 1;
            unsigned int v76 = (google::protobuf::DescriptorProto_ReservedRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*((google::protobuf::Arena **)this + 21));
            uint64_t v77 = *((void *)this + 23);
            uint64_t v78 = *((int *)this + 44);
            *((_DWORD *)this + 44) = v78 + 1;
            *(void *)(v77 + 8 * v78 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v76;
            unsigned int v72 = __s;
            goto LABEL_118;
          }
          *((_DWORD *)this + 44) = v74 + 1;
          unsigned int v76 = *(google::protobuf::DescriptorProto_ReservedRange **)&v73[2 * v74 + 2];
LABEL_118:
          uint64_t v71 = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto_ReservedRange>((google::protobuf::internal::ParseContext *)a3, v76, (google::protobuf::internal *)v72);
          __s = v71;
          if (!v71) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v71 || *v71 != 74) {
            goto LABEL_148;
          }
        }
        int v75 = *((_DWORD *)this + 45);
        goto LABEL_116;
      case 9u:
        if (v10 != 82) {
          goto LABEL_20;
        }
        unint64_t v79 = v9 - 1;
        break;
      default:
        goto LABEL_20;
    }
    while (1)
    {
      unint64_t v80 = v79 + 1;
      __s = v79 + 1;
      unint64_t v81 = (int *)*((void *)this + 26);
      if (!v81) {
        break;
      }
      uint64_t v82 = *((int *)this + 50);
      int v83 = *v81;
      if ((int)v82 < *v81)
      {
        *((_DWORD *)this + 5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v82 + 1;
        AlignedAndAddCleanup = *(std::string **)&v81[2 * v82 + 2];
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v80, (uint64_t)a3);
        int v86 = SHIBYTE(AlignedAndAddCleanup->__r_.__value_.__r.__words[2]);
        if (v86 < 0) {
          goto LABEL_127;
        }
        goto LABEL_139;
      }
      if (v83 == *((_DWORD *)this + 51)) {
        goto LABEL_132;
      }
LABEL_133:
      *unint64_t v81 = v83 + 1;
      uint64_t v89 = (atomic_ullong *)*v7;
      if (!*v7) {
        operator new();
      }
      if (v89[14]) {
      AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v89, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
      AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
      uint64_t v90 = *((void *)this + 26);
      uint64_t v91 = *((int *)this + 50);
      *((_DWORD *)this + 5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v91 + 1;
      *(void *)(v90 + 8 * v91 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = AlignedAndAddCleanup;
      int v92 = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, __s, (uint64_t)a3);
      __s = v92;
      int v86 = SHIBYTE(AlignedAndAddCleanup->__r_.__value_.__r.__words[2]);
      if (v86 < 0)
      {
LABEL_127:
        int v88 = (std::string *)AlignedAndAddCleanup->__r_.__value_.__r.__words[0];
        size_t v87 = AlignedAndAddCleanup->__r_.__value_.__l.__size_;
        if ((v87 & 0x8000000000000000) != 0) {
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)AlignedAndAddCleanup->__r_.__value_.__l.__size_, "size_t to int conversion", v85);
        }
        AlignedAndAddCleanup = v88;
        goto LABEL_140;
      }
LABEL_139:
      size_t v87 = v86;
LABEL_140:
      google::protobuf::internal::VerifyUTF8(AlignedAndAddCleanup, v87, (google::protobuf::internal *)"google.protobuf.DescriptorProto.reserved_name");
      unint64_t v79 = __s;
      if (!__s) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)__s || *__s != 82) {
        goto LABEL_148;
      }
    }
    int v83 = *((_DWORD *)this + 51);
LABEL_132:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 48, v83 + 1);
    unint64_t v81 = (int *)*((void *)this + 26);
    int v83 = *v81;
    goto LABEL_133;
  }
  return __s;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto_ExtensionRange>(int32x2_t *a1, google::protobuf::DescriptorProto_ExtensionRange *this, google::protobuf::internal *a3)
{
  unsigned int v5 = *(unsigned __int8 *)a3;
  if (*(char *)a3 < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(a3, (const char *)*(unsigned __int8 *)a3);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)a3 + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorProto_ExtensionRange::_InternalParse(this, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF93D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF93EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MessageOptions>(int32x2_t *a1, google::protobuf::MessageOptions *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::MessageOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF9548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF955C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::OneofDescriptorProto>(int32x2_t *a1, google::protobuf::OneofDescriptorProto *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::OneofDescriptorProto::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF96B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF96CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::DescriptorProto_ReservedRange>(google::protobuf::internal::ParseContext *a1, google::protobuf::DescriptorProto_ReservedRange *this, google::protobuf::internal *a3)
{
  unsigned int v5 = *(unsigned __int8 *)a3;
  if (*(char *)a3 < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(a3, (const char *)*(unsigned __int8 *)a3);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)a3 + 1);
  }
  uint64_t v7 = *((void *)a1 + 1);
  int v8 = v5 + v6 - v7;
  *(void *)a1 = v7 + (v8 & (v8 >> 31));
  int v9 = *((_DWORD *)a1 + 7);
  *((_DWORD *)a1 + 7) = v8;
  LODWORD(v7) = *((_DWORD *)a1 + 22);
  BOOL v10 = __OFSUB__(v7, 1);
  LODWORD(v7) = v7 - 1;
  *((_DWORD *)a1 + 22) = v7;
  if ((int)v7 < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorProto_ReservedRange::_InternalParse(this, v6, a1);
  if (result)
  {
    ++*((_DWORD *)a1 + 22);
    if (!*((_DWORD *)a1 + 20))
    {
      int v12 = *((_DWORD *)a1 + 7) + v9 - v8;
      *((_DWORD *)a1 + 7) = v12;
      *(void *)a1 = *((void *)a1 + 1) + (v12 & (v12 >> 31));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDF9828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDF983C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto::_InternalSerialize(google::protobuf::DescriptorProto *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 1) == 0) {
    goto LABEL_13;
  }
  int v8 = (unsigned __int8 *)*((void *)this + 27);
  if ((char)v8[23] < 0)
  {
    int v8 = *(unsigned __int8 **)v8;
    int v9 = *(const char **)(*((void *)this + 27) + 8);
  }
  else
  {
    int v9 = (const char *)v8[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v8, v9, 1, (google::protobuf::internal *)"google.protobuf.DescriptorProto.name");
  uint64_t v10 = *((void *)this + 27);
  if (*(char *)(v10 + 23) < 0)
  {
    int64_t v11 = *(void *)(v10 + 8);
    if (v11 > 127) {
      goto LABEL_25;
    }
  }
  else
  {
    int64_t v11 = *(unsigned __int8 *)(v10 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v11)
  {
LABEL_25:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v10, a2);
    int v13 = *((_DWORD *)this + 8);
    if (!v13) {
      goto LABEL_26;
    }
    goto LABEL_14;
  }
  *a2 = 10;
  a2[1] = v11;
  if (*(char *)(v10 + 23) >= 0) {
    int v12 = (const void *)v10;
  }
  else {
    int v12 = *(const void **)v10;
  }
  memcpy(a2 + 2, v12, v11);
  a2 += v11 + 2;
LABEL_13:
  int v13 = *((_DWORD *)this + 8);
  if (!v13) {
    goto LABEL_26;
  }
LABEL_14:
  for (int i = 0; i != v13; ++i)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v16 = (google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)this + 24, i);
    *a2 = 18;
    unsigned int v18 = *((_DWORD *)v16 + 5);
    if (v18 <= 0x7F)
    {
      a2[1] = v18;
      char v15 = (unsigned __int8 *)(a2 + 2);
    }
    else
    {
      a2[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      if (v18 >> 14)
      {
        char v15 = (unsigned __int8 *)(a2 + 3);
        do
        {
          *(v15 - 1) = v19 | 0x80;
          unsigned int v20 = v19 >> 7;
          ++v15;
          unsigned int v21 = v19 >> 14;
          v19 >>= 7;
        }
        while (v21);
        *(v15 - 1) = v20;
      }
      else
      {
        a2[2] = v19;
        char v15 = (unsigned __int8 *)(a2 + 3);
      }
    }
    a2 = (char *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v16, (google::protobuf::UnknownFieldSet *)v15, a3, v17);
  }
LABEL_26:
  int v22 = *((_DWORD *)this + 14);
  if (v22)
  {
    for (int j = 0; j != v22; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v25 = (google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)this + 48, j);
      *a2 = 26;
      unsigned int v26 = *((_DWORD *)v25 + 5);
      if (v26 <= 0x7F)
      {
        a2[1] = v26;
        uint64_t v24 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v26 | 0x80;
        unsigned int v27 = v26 >> 7;
        if (v26 >> 14)
        {
          uint64_t v24 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v24 - 1) = v27 | 0x80;
            unsigned int v28 = v27 >> 7;
            ++v24;
            unsigned int v29 = v27 >> 14;
            v27 >>= 7;
          }
          while (v29);
          *(v24 - 1) = v28;
        }
        else
        {
          a2[2] = v27;
          uint64_t v24 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::DescriptorProto::_InternalSerialize(v25, v24, a3);
    }
  }
  int v30 = *((_DWORD *)this + 20);
  if (v30)
  {
    for (int k = 0; k != v30; ++k)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v33 = (google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)this + 72, k);
      *a2 = 34;
      unsigned int v35 = *((_DWORD *)v33 + 5);
      if (v35 <= 0x7F)
      {
        a2[1] = v35;
        uint64_t v32 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v35 | 0x80;
        unsigned int v36 = v35 >> 7;
        if (v35 >> 14)
        {
          uint64_t v32 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v32 - 1) = v36 | 0x80;
            unsigned int v37 = v36 >> 7;
            ++v32;
            unsigned int v38 = v36 >> 14;
            v36 >>= 7;
          }
          while (v38);
          *(v32 - 1) = v37;
        }
        else
        {
          a2[2] = v36;
          uint64_t v32 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::EnumDescriptorProto::_InternalSerialize(v33, (google::protobuf::UnknownFieldSet *)v32, a3, v34);
    }
  }
  int v39 = *((_DWORD *)this + 26);
  if (v39)
  {
    for (int m = 0; m != v39; ++m)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v42 = (google::protobuf::DescriptorProto_ExtensionRange *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)this + 96, m);
      *a2 = 42;
      unsigned int v44 = *((_DWORD *)v42 + 5);
      if (v44 <= 0x7F)
      {
        a2[1] = v44;
        uint64_t v41 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v44 | 0x80;
        unsigned int v45 = v44 >> 7;
        if (v44 >> 14)
        {
          uint64_t v41 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v41 - 1) = v45 | 0x80;
            unsigned int v46 = v45 >> 7;
            ++v41;
            unsigned int v47 = v45 >> 14;
            v45 >>= 7;
          }
          while (v47);
          *(v41 - 1) = v46;
        }
        else
        {
          a2[2] = v45;
          uint64_t v41 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(v42, (char *)v41, a3, v43);
    }
  }
  int v48 = *((_DWORD *)this + 32);
  if (v48)
  {
    for (int n = 0; n != v48; ++n)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v51 = (google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)this + 120, n);
      *a2 = 50;
      unsigned int v53 = *((_DWORD *)v51 + 5);
      if (v53 <= 0x7F)
      {
        a2[1] = v53;
        int v50 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v53 | 0x80;
        unsigned int v54 = v53 >> 7;
        if (v53 >> 14)
        {
          int v50 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v50 - 1) = v54 | 0x80;
            unsigned int v55 = v54 >> 7;
            ++v50;
            unsigned int v56 = v54 >> 14;
            v54 >>= 7;
          }
          while (v56);
          *(v50 - 1) = v55;
        }
        else
        {
          a2[2] = v54;
          int v50 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v51, (google::protobuf::UnknownFieldSet *)v50, a3, v52);
    }
  }
  if ((v7 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      uint64_t v57 = (google::protobuf::MessageOptions *)*((void *)this + 28);
      *a2 = 58;
      unsigned int v58 = *((_DWORD *)v57 + 11);
      if (v58 <= 0x7F) {
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v57 = (google::protobuf::MessageOptions *)*((void *)this + 28);
      *a2 = 58;
      unsigned int v58 = *((_DWORD *)v57 + 11);
      if (v58 <= 0x7F)
      {
LABEL_77:
        a2[1] = v58;
        unsigned int v59 = (unsigned __int8 *)(a2 + 2);
LABEL_84:
        a2 = (char *)google::protobuf::MessageOptions::_InternalSerialize(v57, (char *)v59, a3);
        goto LABEL_85;
      }
    }
    a2[1] = v58 | 0x80;
    unsigned int v60 = v58 >> 7;
    if (v58 >> 14)
    {
      unsigned int v59 = (unsigned __int8 *)(a2 + 3);
      do
      {
        *(v59 - 1) = v60 | 0x80;
        unsigned int v61 = v60 >> 7;
        ++v59;
        unsigned int v62 = v60 >> 14;
        v60 >>= 7;
      }
      while (v62);
      *(v59 - 1) = v61;
    }
    else
    {
      a2[2] = v60;
      unsigned int v59 = (unsigned __int8 *)(a2 + 3);
    }
    goto LABEL_84;
  }
LABEL_85:
  int v63 = *((_DWORD *)this + 38);
  if (v63)
  {
    for (iint i = 0; ii != v63; ++ii)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v66 = (google::protobuf::OneofDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((uint64_t)this + 144, ii);
      *a2 = 66;
      unsigned int v68 = *((_DWORD *)v66 + 5);
      if (v68 <= 0x7F)
      {
        a2[1] = v68;
        int v65 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v68 | 0x80;
        unsigned int v69 = v68 >> 7;
        if (v68 >> 14)
        {
          int v65 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v65 - 1) = v69 | 0x80;
            unsigned int v70 = v69 >> 7;
            ++v65;
            unsigned int v71 = v69 >> 14;
            v69 >>= 7;
          }
          while (v71);
          *(v65 - 1) = v70;
        }
        else
        {
          a2[2] = v69;
          int v65 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::OneofDescriptorProto::_InternalSerialize(v66, (google::protobuf::UnknownFieldSet *)v65, a3, v67);
    }
  }
  int v72 = *((_DWORD *)this + 44);
  if (v72)
  {
    for (jint j = 0; jj != v72; ++jj)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v75 = (google::protobuf::DescriptorProto_ReservedRange *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((uint64_t)this + 168, jj);
      *a2 = 74;
      unsigned int v77 = *((_DWORD *)v75 + 5);
      if (v77 <= 0x7F)
      {
        a2[1] = v77;
        uint64_t v74 = (unsigned __int8 *)(a2 + 2);
      }
      else
      {
        a2[1] = v77 | 0x80;
        unsigned int v78 = v77 >> 7;
        if (v77 >> 14)
        {
          uint64_t v74 = (unsigned __int8 *)(a2 + 3);
          do
          {
            *(v74 - 1) = v78 | 0x80;
            unsigned int v79 = v78 >> 7;
            ++v74;
            unsigned int v80 = v78 >> 14;
            v78 >>= 7;
          }
          while (v80);
          *(v74 - 1) = v79;
        }
        else
        {
          a2[2] = v78;
          uint64_t v74 = (unsigned __int8 *)(a2 + 3);
        }
      }
      a2 = (char *)google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(v75, (char *)v74, a3, v76);
    }
  }
  int v81 = *((_DWORD *)this + 50);
  if (v81 >= 1)
  {
    int v82 = 0;
    while (1)
    {
      uint64_t v83 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 192, v82);
      uint64_t v84 = v83;
      unsigned int v85 = *(_DWORD *)(v83 + 8);
      if (*(char *)(v83 + 23) >= 0)
      {
        unint64_t v86 = *(unsigned __int8 *)(v83 + 23);
      }
      else
      {
        uint64_t v83 = *(void *)v83;
        unint64_t v86 = v85;
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v83, (const char *)v86, 1, (google::protobuf::internal *)"google.protobuf.DescriptorProto.reserved_name");
      if ((*(char *)(v84 + 23) & 0x80000000) == 0) {
        break;
      }
      int64_t v87 = *(void *)(v84 + 8);
      if (v87 > 127)
      {
LABEL_123:
        a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 10, v84, a2);
        if (v81 == ++v82) {
          goto LABEL_124;
        }
      }
      else
      {
LABEL_117:
        if (*(void *)a3 - (void)a2 + 14 < v87) {
          goto LABEL_123;
        }
        *a2 = 82;
        a2[1] = v87;
        if (*(char *)(v84 + 23) >= 0) {
          int v88 = (const void *)v84;
        }
        else {
          int v88 = *(const void **)v84;
        }
        memcpy(a2 + 2, v88, v87);
        a2 += v87 + 2;
        if (v81 == ++v82) {
          goto LABEL_124;
        }
      }
    }
    int64_t v87 = *(unsigned __int8 *)(v84 + 23);
    goto LABEL_117;
  }
LABEL_124:
  uint64_t v89 = *((void *)this + 1);
  if ((v89 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v89 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::DescriptorProto::ByteSizeLong(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (google::protobuf::FieldDescriptorProto **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      int v7 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    int64_t v11 = (google::protobuf::DescriptorProto **)(v10 + 8);
  }
  else {
    int64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      int v13 = *v11++;
      uint64_t v14 = google::protobuf::DescriptorProto::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 20);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *((void *)this + 11);
  if (v17) {
    unsigned int v18 = (google::protobuf::EnumDescriptorProto **)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unsigned int v20 = *v18++;
      unsigned int v21 = google::protobuf::EnumDescriptorProto::ByteSizeLong(v20);
      v16 += (uint64_t)&v21[(9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6];
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *((int *)this + 26);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    int v25 = (google::protobuf::DescriptorProto_ExtensionRange **)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      unsigned int v27 = *v25++;
      unsigned int v28 = google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong(v27);
      v23 += (uint64_t)&v28[(9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6];
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *((int *)this + 32);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *((void *)this + 17);
  if (v31) {
    uint64_t v32 = (google::protobuf::FieldDescriptorProto **)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      unsigned int v35 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v34);
      v30 += (uint64_t)&v35[(9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6];
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *((int *)this + 38);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *((void *)this + 20);
  if (v38) {
    int v39 = (google::protobuf::OneofDescriptorProto **)(v38 + 8);
  }
  else {
    int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      int v42 = google::protobuf::OneofDescriptorProto::ByteSizeLong(v41);
      v37 += (uint64_t)&v42[(9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6];
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *((int *)this + 44);
  uint64_t v44 = v37 + v43;
  uint64_t v45 = *((void *)this + 23);
  if (v45) {
    uint64_t v46 = v45 + 8;
  }
  else {
    uint64_t v46 = 0;
  }
  if (v43)
  {
    for (uint64_t i = 8 * v43; i; i -= 8)
    {
      int v48 = *(_DWORD **)v46;
      int v49 = *(_DWORD *)(*(void *)v46 + 16);
      if ((v49 & 3) != 0)
      {
        if (v49)
        {
          int v51 = v48[6];
          if (v51 < 0)
          {
            uint64_t v50 = 11;
            if ((v49 & 2) != 0)
            {
LABEL_53:
              int v52 = v48[7];
              if (v52 < 0) {
                uint64_t v53 = 11;
              }
              else {
                uint64_t v53 = ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
              }
              v50 += v53;
            }
          }
          else
          {
            uint64_t v50 = ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
            if ((v49 & 2) != 0) {
              goto LABEL_53;
            }
          }
        }
        else
        {
          uint64_t v50 = 0;
          if ((v49 & 2) != 0) {
            goto LABEL_53;
          }
        }
      }
      else
      {
        uint64_t v50 = 0;
      }
      if (v48[2]) {
        uint64_t v50 = (uint64_t)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(v48 + 2), (const google::protobuf::UnknownFieldSet *)v50, v48 + 5);
      }
      else {
        v48[5] = v50;
      }
      v44 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6);
      v46 += 8;
    }
  }
  uint64_t v54 = *((unsigned int *)this + 50);
  unsigned int v55 = (const google::protobuf::UnknownFieldSet *)(v44 + v54);
  if ((int)v54 >= 1)
  {
    int v56 = 0;
    do
    {
      uint64_t v57 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 192, v56);
      uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
      if ((v58 & 0x80u) != 0) {
        uint64_t v58 = *(void *)(v57 + 8);
      }
      unsigned int v55 = (const google::protobuf::UnknownFieldSet *)((char *)v55 + v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6));
      ++v56;
    }
    while (v54 != v56);
  }
  int v59 = *((_DWORD *)this + 4);
  if ((v59 & 3) != 0)
  {
    if (v59)
    {
      uint64_t v60 = *((void *)this + 27);
      uint64_t v61 = *(unsigned __int8 *)(v60 + 23);
      uint64_t v62 = *(void *)(v60 + 8);
      if ((v61 & 0x80u) == 0) {
        uint64_t v62 = v61;
      }
      unsigned int v55 = (const google::protobuf::UnknownFieldSet *)((char *)v55 + v62
                                                                    + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
    }
    if ((v59 & 2) != 0)
    {
      int v63 = google::protobuf::MessageOptions::ByteSizeLong(*((google::protobuf::MessageOptions **)this + 28));
      unsigned int v55 = (const google::protobuf::UnknownFieldSet *)&v63[((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v55];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto *)((char *)this + 8), v55, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v55;
    return (char *)v55;
  }
}

void google::protobuf::DescriptorProto::MergeFrom(google::protobuf::DescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 3270);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::DescriptorProto::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDFA56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFA580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto::MergeFrom(google::protobuf::DescriptorProto *this, const google::protobuf::DescriptorProto *a2)
{
  if (a2 != this)
  {
    std::string v149 = (unint64_t *)((char *)this + 8);
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    if (*v149)
    {
      google::protobuf::UnknownFieldSet::InternalMergeFrom((*v149 & 0xFFFFFFFFFFFFFFFELL) + 8, v7);
      if (a2 == this) {
        goto LABEL_9;
      }
    }
    else
    {
      size_t v136 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v149);
      google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v136, v7);
      if (a2 == this) {
        goto LABEL_9;
      }
    }
LABEL_4:
    int v5 = *((_DWORD *)a2 + 8);
    if (!v5) {
      goto LABEL_21;
    }
    goto LABEL_10;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v151, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 3285);
  uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v151, "CHECK failed: (&from) != (this): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v150, v6);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v151[0].__r_.__value_.__l.__data_);
  std::string v149 = (unint64_t *)((char *)this + 8);
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    goto LABEL_7;
  }
LABEL_3:
  if (a2 != this) {
    goto LABEL_4;
  }
LABEL_9:
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v151, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1787);
  uint64_t v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v151, "CHECK failed: (&other) != (this): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v150, v8);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v151[0].__r_.__value_.__l.__data_);
  int v5 = *((_DWORD *)a2 + 8);
  if (!v5) {
    goto LABEL_21;
  }
LABEL_10:
  uint64_t v143 = *((void *)a2 + 5);
  std::string v137 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 24), v5);
  int v9 = **((_DWORD **)this + 5);
  int v10 = *((_DWORD *)this + 8);
  int v11 = v9 - v10;
  if (v9 - v10 >= v5) {
    uint64_t v12 = v5;
  }
  else {
    uint64_t v12 = v11;
  }
  if ((int)v12 >= 1)
  {
    int v13 = (google::protobuf::FieldDescriptorProto **)v137;
    uint64_t v14 = (google::protobuf::FieldDescriptorProto **)(v143 + 8);
    do
    {
      uint64_t v16 = *v14++;
      uint64_t v15 = v16;
      uint64_t v17 = *v13++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(v15, v17);
      --v12;
    }
    while (v12);
  }
  if (v11 < v5)
  {
    unsigned int v18 = (google::protobuf::Arena *)*((void *)this + 3);
    uint64_t v19 = 2 * v11;
    unsigned int v20 = (google::protobuf::FieldDescriptorProto **)(v19 * 4 + v143 + 8);
    unsigned int v21 = (google::protobuf::FieldDescriptorProto **)&v137[v19];
    int v22 = v10 + v5 - v9;
    do
    {
      uint64_t v23 = *v20++;
      uint64_t v24 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(v23, v24);
      *v21++ = v24;
      --v22;
    }
    while (v22);
  }
  int v25 = *((_DWORD *)this + 8) + v5;
  *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v25;
  uint64_t v26 = (int *)*((void *)this + 5);
  if (*v26 < v25) {
    *uint64_t v26 = v25;
  }
LABEL_21:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((char *)this + 48, (char *)a2 + 48);
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v151, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1787);
    unsigned int v27 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v151, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v150, v27);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v151[0].__r_.__value_.__l.__data_);
  }
  int v28 = *((_DWORD *)a2 + 20);
  if (v28)
  {
    uint64_t v144 = *((void *)a2 + 11);
    uint64_t v138 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 72), v28);
    int v29 = **((_DWORD **)this + 11);
    int v30 = *((_DWORD *)this + 20);
    int v31 = v29 - v30;
    if (v29 - v30 >= v28) {
      uint64_t v32 = v28;
    }
    else {
      uint64_t v32 = v31;
    }
    if ((int)v32 >= 1)
    {
      uint64_t v33 = (google::protobuf::EnumDescriptorProto **)v138;
      uint64_t v34 = (google::protobuf::EnumDescriptorProto **)(v144 + 8);
      do
      {
        uint64_t v36 = *v34++;
        unsigned int v35 = v36;
        uint64_t v37 = *v33++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge(v35, v37);
        --v32;
      }
      while (v32);
    }
    if (v31 < v28)
    {
      uint64_t v38 = (google::protobuf::Arena *)*((void *)this + 9);
      uint64_t v39 = 2 * v31;
      uint64_t v40 = (google::protobuf::EnumDescriptorProto **)(v39 * 4 + v144 + 8);
      uint64_t v41 = (google::protobuf::EnumDescriptorProto **)&v138[v39];
      int v42 = v30 + v28 - v29;
      do
      {
        uint64_t v43 = *v40++;
        uint64_t v44 = (google::protobuf::EnumDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(v38);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge(v43, v44);
        *v41++ = v44;
        --v42;
      }
      while (v42);
    }
    int v45 = *((_DWORD *)this + 20) + v28;
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v45;
    uint64_t v46 = (int *)*((void *)this + 11);
    if (*v46 < v45) {
      int *v46 = v45;
    }
  }
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v151, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1787);
    unsigned int v47 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v151, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v150, v47);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v151[0].__r_.__value_.__l.__data_);
  }
  int v48 = *((_DWORD *)a2 + 26);
  if (v48)
  {
    uint64_t v145 = *((void *)a2 + 14);
    uint64_t v139 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 96), v48);
    int v49 = **((_DWORD **)this + 14);
    int v50 = *((_DWORD *)this + 26);
    int v51 = v49 - v50;
    if (v49 - v50 >= v48) {
      uint64_t v52 = v48;
    }
    else {
      uint64_t v52 = v51;
    }
    if ((int)v52 >= 1)
    {
      uint64_t v53 = (google::protobuf::DescriptorProto_ExtensionRange **)v139;
      uint64_t v54 = (google::protobuf::DescriptorProto_ExtensionRange **)(v145 + 8);
      do
      {
        int v56 = *v54++;
        unsigned int v55 = v56;
        uint64_t v57 = *v53++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge(v55, v57);
        --v52;
      }
      while (v52);
    }
    if (v51 < v48)
    {
      uint64_t v58 = (google::protobuf::Arena *)*((void *)this + 12);
      uint64_t v59 = 2 * v51;
      uint64_t v60 = (google::protobuf::DescriptorProto_ExtensionRange **)(v59 * 4 + v145 + 8);
      uint64_t v61 = (google::protobuf::DescriptorProto_ExtensionRange **)&v139[v59];
      int v62 = v50 + v48 - v49;
      do
      {
        int v63 = *v60++;
        int v64 = (google::protobuf::DescriptorProto_ExtensionRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(v58);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge(v63, v64);
        *v61++ = v64;
        --v62;
      }
      while (v62);
    }
    int v65 = *((_DWORD *)this + 26) + v48;
    *((_DWORD *)this + 26) = v65;
    uint64_t v66 = (int *)*((void *)this + 14);
    if (*v66 < v65) {
      *uint64_t v66 = v65;
    }
  }
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v151, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1787);
    int v67 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v151, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v150, v67);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v151[0].__r_.__value_.__l.__data_);
  }
  int v68 = *((_DWORD *)a2 + 32);
  if (v68)
  {
    uint64_t v146 = *((void *)a2 + 17);
    int v140 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 120), v68);
    int v69 = **((_DWORD **)this + 17);
    int v70 = *((_DWORD *)this + 32);
    int v71 = v69 - v70;
    if (v69 - v70 >= v68) {
      uint64_t v72 = v68;
    }
    else {
      uint64_t v72 = v71;
    }
    if ((int)v72 >= 1)
    {
      int v73 = (google::protobuf::FieldDescriptorProto **)v140;
      uint64_t v74 = (google::protobuf::FieldDescriptorProto **)(v146 + 8);
      do
      {
        unsigned int v76 = *v74++;
        int v75 = v76;
        unsigned int v77 = *v73++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(v75, v77);
        --v72;
      }
      while (v72);
    }
    if (v71 < v68)
    {
      unsigned int v78 = (google::protobuf::Arena *)*((void *)this + 15);
      uint64_t v79 = 2 * v71;
      unsigned int v80 = (google::protobuf::FieldDescriptorProto **)(v79 * 4 + v146 + 8);
      int v81 = (google::protobuf::FieldDescriptorProto **)&v140[v79];
      int v82 = v70 + v68 - v69;
      do
      {
        uint64_t v83 = *v80++;
        uint64_t v84 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(v78);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(v83, v84);
        *v81++ = v84;
        --v82;
      }
      while (v82);
    }
    int v85 = *((_DWORD *)this + 32) + v68;
    *((_DWORD *)this + 32) = v85;
    unint64_t v86 = (int *)*((void *)this + 17);
    if (*v86 < v85) {
      *unint64_t v86 = v85;
    }
  }
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v151, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1787);
    int64_t v87 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v151, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v150, v87);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v151[0].__r_.__value_.__l.__data_);
  }
  int v88 = *((_DWORD *)a2 + 38);
  if (v88)
  {
    uint64_t v147 = *((void *)a2 + 20);
    std::string::size_type v141 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 144), v88);
    int v89 = **((_DWORD **)this + 20);
    int v90 = *((_DWORD *)this + 38);
    int v91 = v89 - v90;
    if (v89 - v90 >= v88) {
      uint64_t v92 = v88;
    }
    else {
      uint64_t v92 = v91;
    }
    if ((int)v92 >= 1)
    {
      uint64_t v93 = (google::protobuf::OneofDescriptorProto **)v141;
      uint64_t v94 = (google::protobuf::OneofDescriptorProto **)(v147 + 8);
      do
      {
        long long v96 = *v94++;
        int v95 = v96;
        int v97 = *v93++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge(v95, v97);
        --v92;
      }
      while (v92);
    }
    if (v91 < v88)
    {
      long long v98 = (google::protobuf::Arena *)*((void *)this + 18);
      uint64_t v99 = 2 * v91;
      long long v100 = (google::protobuf::OneofDescriptorProto **)(v99 * 4 + v147 + 8);
      long long v101 = (google::protobuf::OneofDescriptorProto **)&v141[v99];
      int v102 = v90 + v88 - v89;
      do
      {
        std::string::size_type v103 = *v100++;
        std::string::size_type v104 = (google::protobuf::OneofDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(v98);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge(v103, v104);
        *v101++ = v104;
        --v102;
      }
      while (v102);
    }
    int v105 = *((_DWORD *)this + 38) + v88;
    *((_DWORD *)this + 3google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v105;
    long long v106 = (int *)*((void *)this + 20);
    if (*v106 < v105) {
      *long long v106 = v105;
    }
  }
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v151, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1787);
    uint64_t v107 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v151, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v150, v107);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v151[0].__r_.__value_.__l.__data_);
  }
  int v108 = *((_DWORD *)a2 + 44);
  if (v108)
  {
    uint64_t v148 = *((void *)a2 + 23);
    int v142 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 168), v108);
    int v109 = **((_DWORD **)this + 23);
    int v110 = *((_DWORD *)this + 44);
    int v111 = v109 - v110;
    if (v109 - v110 >= v108) {
      uint64_t v112 = v108;
    }
    else {
      uint64_t v112 = v111;
    }
    if ((int)v112 >= 1)
    {
      std::string::size_type v113 = (google::protobuf::DescriptorProto_ReservedRange **)v142;
      long long v114 = (google::protobuf::DescriptorProto_ReservedRange **)(v148 + 8);
      do
      {
        long long v116 = *v114++;
        uint64_t v115 = v116;
        std::string::size_type v117 = *v113++;
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(v115, v117);
        --v112;
      }
      while (v112);
    }
    if (v111 < v108)
    {
      std::string v118 = (google::protobuf::Arena *)*((void *)this + 21);
      uint64_t v119 = 2 * v111;
      std::string v120 = (google::protobuf::DescriptorProto_ReservedRange **)(v119 * 4 + v148 + 8);
      std::string v121 = (google::protobuf::DescriptorProto_ReservedRange **)&v142[v119];
      int v122 = v110 + v108 - v109;
      do
      {
        std::string v123 = *v120++;
        std::string v124 = (google::protobuf::DescriptorProto_ReservedRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(v118);
        google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(v123, v124);
        *v121++ = v124;
        --v122;
      }
      while (v122);
    }
    int v125 = *((_DWORD *)this + 44) + v108;
    *((_DWORD *)this + 44) = v125;
    int v126 = (int *)*((void *)this + 23);
    if (*v126 < v125) {
      int *v126 = v125;
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 192, (uint64_t)a2 + 192);
  int v127 = *((_DWORD *)a2 + 4);
  if ((v127 & 3) != 0)
  {
    if ((v127 & 1) == 0) {
      goto LABEL_96;
    }
    std::string::size_type v128 = (std::string *)*((void *)a2 + 27);
    *((_DWORD *)this + 4) |= 1u;
    long long v129 = (std::string **)((char *)this + 216);
    uint64_t v130 = *((void *)this + 1);
    long long v131 = (google::protobuf::Arena *)(v130 & 0xFFFFFFFFFFFFFFFELL);
    if (v130)
    {
      long long v131 = *(google::protobuf::Arena **)v131;
      long long v132 = *v129;
      if (*v129 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_95;
      }
    }
    else
    {
      long long v132 = *v129;
      if (*v129 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
LABEL_95:
        std::string::operator=(v132, v128);
LABEL_96:
        if ((v127 & 2) == 0) {
          return;
        }
        goto LABEL_97;
      }
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v129, v131, (long long *)v128);
    if ((v127 & 2) == 0) {
      return;
    }
LABEL_97:
    *((_DWORD *)this + 4) |= 2u;
    long long v133 = (google::protobuf::MessageOptions *)*((void *)this + 28);
    if (!v133)
    {
      long long v134 = (google::protobuf::Arena *)(*v149 & 0xFFFFFFFFFFFFFFFELL);
      if (*v149) {
        long long v134 = *(google::protobuf::Arena **)v134;
      }
      long long v133 = (google::protobuf::MessageOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v134);
      *((void *)this + 2google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v133;
    }
    if (*((void *)a2 + 28)) {
      long long v135 = (const google::protobuf::MessageOptions *)*((void *)a2 + 28);
    }
    else {
      long long v135 = (const google::protobuf::MessageOptions *)&google::protobuf::_MessageOptions_default_instance_;
    }
    google::protobuf::MessageOptions::MergeFrom(v133, v135);
  }
}

void sub_23CDFAE04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAE2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFAF08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MessageOptions::MergeFrom(google::protobuf::MessageOptions *this, const google::protobuf::MessageOptions *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 7483);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::MessageOptions *)((char *)this + 16), (const google::protobuf::MessageOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
      int v5 = *((_DWORD *)a2 + 10);
      if ((v5 & 0xF) == 0) {
        return;
      }
LABEL_9:
      if (v5)
      {
        *((unsigned char *)this + 72) = *((unsigned char *)a2 + 72);
        if ((v5 & 2) == 0)
        {
LABEL_11:
          if ((v5 & 4) == 0) {
            goto LABEL_12;
          }
          goto LABEL_17;
        }
      }
      else if ((v5 & 2) == 0)
      {
        goto LABEL_11;
      }
      *((unsigned char *)this + 73) = *((unsigned char *)a2 + 73);
      if ((v5 & 4) == 0)
      {
LABEL_12:
        if ((v5 & 8) == 0)
        {
LABEL_14:
          *((_DWORD *)this + 10) |= v5;
          return;
        }
LABEL_13:
        *((unsigned char *)this + 75) = *((unsigned char *)a2 + 75);
        goto LABEL_14;
      }
LABEL_17:
      *((unsigned char *)this + 74) = *((unsigned char *)a2 + 74);
      if ((v5 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::MessageOptions *)((char *)this + 16), (const google::protobuf::MessageOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v8 = *((void *)this + 1);
  if (v8) {
    int v9 = (char *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    int v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v7);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  int v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 0xF) != 0) {
    goto LABEL_9;
  }
}

void sub_23CDFB078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFB08C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto::CopyFrom(google::protobuf::DescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::DescriptorProto::Clear(this);
    google::protobuf::DescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::DescriptorProto::IsInitialized(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = (char *)this + 24;
  int v3 = *((_DWORD *)this + 8);
  while (1)
  {
    BOOL v4 = __OFSUB__(v3--, 1);
    if (v3 < 0 != v4) {
      break;
    }
    int v5 = (google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)v2, v3);
    if ((google::protobuf::FieldDescriptorProto::IsInitialized(v5) & 1) == 0) {
      return 0;
    }
  }
  int v7 = *((_DWORD *)this + 14);
  while (1)
  {
    BOOL v4 = __OFSUB__(v7--, 1);
    if (v7 < 0 != v4) {
      break;
    }
    uint64_t v8 = (google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)this + 48, v7);
    if ((google::protobuf::DescriptorProto::IsInitialized(v8) & 1) == 0) {
      return 0;
    }
  }
  int v9 = *((_DWORD *)this + 20);
  while (1)
  {
    BOOL v4 = __OFSUB__(v9--, 1);
    if (v9 < 0 != v4) {
      break;
    }
    char v10 = (google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)this + 72, v9);
    if ((google::protobuf::EnumDescriptorProto::IsInitialized(v10) & 1) == 0) {
      return 0;
    }
  }
  int v11 = *((_DWORD *)this + 26);
  while (1)
  {
    BOOL v4 = __OFSUB__(v11--, 1);
    if (v11 < 0 != v4) {
      break;
    }
    uint64_t v12 = (google::protobuf::DescriptorProto_ExtensionRange *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)this + 96, v11);
    if ((google::protobuf::DescriptorProto_ExtensionRange::IsInitialized(v12) & 1) == 0) {
      return 0;
    }
  }
  int v13 = *((_DWORD *)this + 32);
  while (1)
  {
    BOOL v4 = __OFSUB__(v13--, 1);
    if (v13 < 0 != v4) {
      break;
    }
    uint64_t v14 = (google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)this + 120, v13);
    if ((google::protobuf::FieldDescriptorProto::IsInitialized(v14) & 1) == 0) {
      return 0;
    }
  }
  int v15 = *((_DWORD *)this + 38);
  while (1)
  {
    BOOL v4 = __OFSUB__(v15--, 1);
    if (v15 < 0 != v4) {
      break;
    }
    uint64_t v16 = (google::protobuf::OneofDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((uint64_t)this + 144, v15);
    char IsInitialized = google::protobuf::OneofDescriptorProto::IsInitialized(v16);
    uint64_t result = 0;
    if ((IsInitialized & 1) == 0) {
      return result;
    }
  }
  if (!google::protobuf::DescriptorProto::_internal_has_options(this)) {
    return 1;
  }
  uint64_t v18 = *((void *)this + 28);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v18 + 16));
  if (result)
  {
    uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v18 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::MessageOptions::IsInitialized(google::protobuf::MessageOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::MessageOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::DescriptorProto::GetMetadata(google::protobuf::DescriptorProto *this)
{
  return off_26AED0A18[8];
}

google::protobuf::ExtensionRangeOptions *google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions(google::protobuf::ExtensionRangeOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C4F08;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 5) = a2;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  if (atomic_load_explicit(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return this;
}

void sub_23CDFB394(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  int v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 3392);
    BOOL v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    int v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      uint64_t v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        uint64_t v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 40);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CDFB4AC(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CDFB4C0(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::ExtensionRangeOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t *google::protobuf::ExtensionRangeOptions::default_instance(google::protobuf::ExtensionRangeOptions *this)
{
  if (atomic_load_explicit(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_ExtensionRangeOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::ExtensionRangeOptions::_InternalParse(google::protobuf::ExtensionRangeOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v34, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)((char *)this + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v34 + 1);
      LODWORD(vgoogle::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = *(unsigned __int8 *)v34;
      if ((*(char *)v34 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      uint64_t v8 = (const char *)(v8 + (*(unsigned __int8 *)v7 << 7) - 128);
      if ((*(char *)v7 & 0x80000000) == 0)
      {
        char v7 = (google::protobuf::internal *)((char *)v34 + 2);
LABEL_6:
        uint64_t v34 = v7;
        if (v8 == 7994) {
          break;
        }
        goto LABEL_7;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v34, v8);
      uint64_t v34 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v7 = TagFallback;
      if (v8 == 7994) {
        break;
      }
LABEL_7:
      if (v8) {
        BOOL v9 = (v8 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        a3[10].i32[0] = v8 - 1;
        return v34;
      }
      char v10 = (google::protobuf::internal *)v8;
      if (v8 >> 6 < 0x7D)
      {
        if (*v6)
        {
          uint64_t v12 = (char *)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v12 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
          char v7 = v34;
        }
        int v11 = google::protobuf::internal::UnknownFieldParse(v10, (google::protobuf::UnknownFieldSet *)v12, v7, (const char *)a3, v5);
      }
      else
      {
        int v11 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), (google::protobuf::internal *)v8, v7, (uint64_t)&google::protobuf::_ExtensionRangeOptions_default_instance_, (unint64_t *)this + 1, a3);
      }
      uint64_t v34 = v11;
      if (!v11) {
        return 0;
      }
LABEL_37:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v34, a3[11].i32[1]))return v34; {
    }
      }
    uint64_t v14 = (char *)v7 - 2;
    while (1)
    {
      int v15 = (google::protobuf::internal *)(v14 + 2);
      uint64_t v34 = v15;
      uint64_t v16 = (int *)*((void *)this + 7);
      if (!v16) {
        break;
      }
      uint64_t v17 = *((int *)this + 12);
      int v18 = *v16;
      if ((int)v17 < *v16)
      {
        *((_DWORD *)this + 12) = v17 + 1;
        uint64_t v19 = *(google::protobuf::UninterpretedOption **)&v16[2 * v17 + 2];
        unsigned int v20 = (const char *)*(unsigned __int8 *)v15;
        if ((*(char *)v15 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        goto LABEL_24;
      }
      if (v18 == *((_DWORD *)this + 13)) {
        goto LABEL_29;
      }
LABEL_30:
      *uint64_t v16 = v18 + 1;
      uint64_t v19 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 5));
      uint64_t v25 = *((void *)this + 7);
      uint64_t v26 = *((int *)this + 12);
      *((_DWORD *)this + 12) = v26 + 1;
      *(void *)(v25 + 8 * v26 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v19;
      int v15 = v34;
      unsigned int v20 = (const char *)*(unsigned __int8 *)v34;
      if ((*(char *)v34 & 0x80000000) == 0)
      {
LABEL_31:
        uint64_t v23 = (char *)v15 + 1;
        goto LABEL_32;
      }
LABEL_24:
      uint64_t SizeFallback = google::protobuf::internal::ReadSizeFallback(v15, v20);
      if (!SizeFallback) {
        return 0;
      }
      uint64_t v23 = (std::string::value_type *)SizeFallback;
      LODWORD(v2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v22;
      if (v22 >= 0x7FFFFFF0)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v36, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
        uint64_t v24 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v36, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v35, v24);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v36[0].__r_.__value_.__l.__data_);
      }
LABEL_32:
      int32x2_t v27 = a3[1];
      int v28 = v20 + v23 - v27.i32[0];
      *a3 = (int32x2_t)(*(void *)&v27 + (v28 & (v28 >> 31)));
      __int32 v29 = a3[3].i32[1];
      a3[3].i32[1] = v28;
      v27.i32[0] = a3[11].i32[0];
      BOOL v30 = __OFSUB__(v27.i32[0]--, 1);
      a3[11].i32[0] = v27.i32[0];
      if (v27.i32[0] < 0 != v30) {
        return 0;
      }
      uint64_t v14 = google::protobuf::UninterpretedOption::_InternalParse(v19, v23, (google::protobuf::internal::ParseContext *)a3);
      if (!v14) {
        return 0;
      }
      ++a3[11].i32[0];
      if (a3[10].i32[0]) {
        return 0;
      }
      int v31 = a3[3].i32[1] + v29 - v28;
      a3[3].i32[1] = v31;
      int32x2_t v32 = (int32x2_t)(*(void *)&a3[1] + (v31 & (v31 >> 31)));
      *a3 = v32;
      uint64_t v34 = (google::protobuf::internal *)v14;
      if (*(void *)&v32 <= (unint64_t)v14 || *(_WORD *)v14 != 16058) {
        goto LABEL_37;
      }
    }
    int v18 = *((_DWORD *)this + 13);
LABEL_29:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 10, v18 + 1);
    uint64_t v16 = (int *)*((void *)this + 7);
    int v18 = *v16;
    goto LABEL_30;
  }
  return v34;
}

void sub_23CDFB874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFB888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(uint64_t a1, google::protobuf::UninterpretedOption *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = v5 + v6 - v7;
  *(void *)a1 = v7 + (v8 & (v8 >> 31));
  int v9 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 2google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v8;
  LODWORD(v7) = *(_DWORD *)(a1 + 88);
  BOOL v10 = __OFSUB__(v7, 1);
  LODWORD(v7) = v7 - 1;
  *(_DWORD *)(a1 + 8google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v7;
  if ((int)v7 < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::UninterpretedOption::_InternalParse(a2, v6, (google::protobuf::internal::ParseContext *)a1);
  if (result)
  {
    ++*(_DWORD *)(a1 + 88);
    if (!*(_DWORD *)(a1 + 80))
    {
      int v12 = *(_DWORD *)(a1 + 28) + v9 - v8;
      *(_DWORD *)(a1 + 2google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v12;
      *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDFB9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFB9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::ExtensionRangeOptions::_InternalSerialize(google::protobuf::ExtensionRangeOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v9 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40, i);
      *(_WORD *)a2 = 16058;
      unsigned int v11 = *((_DWORD *)v9 + 5);
      if (v11 <= 0x7F)
      {
        a2[2] = v11;
        int v8 = (unsigned __int8 *)(a2 + 3);
      }
      else
      {
        a2[2] = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        if (v11 >> 14)
        {
          int v8 = (unsigned __int8 *)(a2 + 4);
          do
          {
            *(v8 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v8;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v8 - 1) = v13;
        }
        else
        {
          a2[3] = v12;
          int v8 = (unsigned __int8 *)(a2 + 4);
        }
      }
      a2 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v9, v8, a3, v10);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), 1000, 0x20000000, a2, a3);
  uint64_t v17 = *((void *)this + 1);
  if (v17)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v16);
  }
  return result;
}

char *google::protobuf::ExtensionRangeOptions::ByteSizeLong(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 12);
  BOOL v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 7);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      int v8 = *v6++;
      int v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      BOOL v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ExtensionRangeOptions *)((char *)this + 8), v4, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + 16) = v4;
    return (char *)v4;
  }
}

void google::protobuf::ExtensionRangeOptions::MergeFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 3523);
    BOOL v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::ExtensionRangeOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDFBD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFBD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ExtensionRangeOptions::CopyFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40);
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::ExtensionRangeOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::ExtensionRangeOptions::CopyFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::ExtensionRangeOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40);
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::ExtensionRangeOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 1)
  {
    while (2)
    {
      int v3 = v1--;
      uint64_t v4 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(a1, v1);
      int v5 = *(_DWORD *)(v4 + 32);
      while (v5 >= 1)
      {
        if (*(_DWORD *)(v4 + 32) < v5)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 1694);
          int v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (index) < (current_size_): ");
          google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v6);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
        }
        if ((~*(_DWORD *)(*(void *)(*(void *)(v4 + 40) + 8 * --v5 + 8) + 16) & 3) != 0) {
          return 0;
        }
      }
      if (v3 > 1) {
        continue;
      }
      break;
    }
  }
  return 1;
}

void sub_23CDFBF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFBF20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::ExtensionRangeOptions::GetMetadata(google::protobuf::ExtensionRangeOptions *this)
{
  return off_26AED0A18[10];
}

void google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(google::protobuf::FieldDescriptorProto *this)
{
  google::protobuf::FieldDescriptorProto::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      int v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        int v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::FieldDescriptorProto::SharedDtor(google::protobuf::FieldDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 3698);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v14, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 3);
  if ((uint64_t *)v5 == &google::protobuf::internal::fixed_address_empty_string || v5 == 0)
  {
    uint64_t v7 = *((void *)this + 4);
    if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0) {
      goto LABEL_22;
    }
LABEL_14:
    uint64_t v9 = *((void *)this + 5);
    if ((uint64_t *)v9 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  if (*(char *)(v5 + 23) < 0) {
    operator delete(*(void **)v5);
  }
  MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  uint64_t v7 = *((void *)this + 4);
  if ((uint64_t *)v7 == &google::protobuf::internal::fixed_address_empty_string || v7 == 0) {
    goto LABEL_14;
  }
LABEL_22:
  if (*(char *)(v7 + 23) < 0) {
    operator delete(*(void **)v7);
  }
  MEMORY[0x23ECF2BC0](v7, 0x1012C40EC159624);
  uint64_t v9 = *((void *)this + 5);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
LABEL_25:
    if (v9)
    {
      if (*(char *)(v9 + 23) < 0) {
        operator delete(*(void **)v9);
      }
      MEMORY[0x23ECF2BC0](v9, 0x1012C40EC159624);
    }
  }
LABEL_29:
  uint64_t v11 = *((void *)this + 6);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x23ECF2BC0](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = *((void *)this + 7);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    MEMORY[0x23ECF2BC0](v12, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::FieldDescriptorProto *)&google::protobuf::_FieldDescriptorProto_default_instance_)
  {
    unsigned int v13 = (google::protobuf::FieldOptions *)*((void *)this + 8);
    if (v13)
    {
      google::protobuf::FieldOptions::~FieldOptions(v13);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CDFC1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFC20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FieldDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::FieldDescriptorProto::Clear(google::protobuf::FieldDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_36;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 3);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_13;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_13;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_17:
    uint64_t v5 = *((void *)this + 5);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_21;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_25:
    uint64_t v7 = *((void *)this + 7);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 0x20) == 0) {
        goto LABEL_36;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) == 0) {
        goto LABEL_36;
      }
    }
    goto LABEL_29;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_13:
  uint64_t v4 = *((void *)this + 4);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_17;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_21:
  uint64_t v6 = *((void *)this + 6);
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)uint64_t v6 = 0;
    *(void *)(v6 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_25;
    }
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_36;
  }
LABEL_29:
  uint64_t v8 = *((void *)this + 8);
  if (!v8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 3746);
    uint64_t v9 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v9);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    uint64_t v8 = *((void *)this + 8);
  }
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v8 + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v8 + 48);
  if ((*(unsigned char *)(v8 + 40) & 0x3F) != 0)
  {
    *(_DWORD *)(v8 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    *(void *)(v8 + 72) = 0;
  }
  *(_DWORD *)(v8 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v10 & 1) != 0 && *(void *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v10 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
LABEL_36:
  if ((v2 & 0xC0) != 0) {
    *((void *)this + 9) = 0;
  }
  if ((v2 & 0x700) != 0)
  {
    *((unsigned char *)this + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    *(void *)((char *)this + 84) = 0x100000001;
  }
  *((_DWORD *)this + 4) = 0;
  uint64_t v11 = *((void *)this + 1);
  if ((v11 & 1) != 0 && *(void *)((v11 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v11 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v11 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CDFC464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFC478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldOptions::Clear(google::protobuf::FieldOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::FieldOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
  if ((*((unsigned char *)this + 40) & 0x3F) != 0)
  {
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    *((void *)this + 9) = 0;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::FieldDescriptorProto::_InternalParse(google::protobuf::FieldDescriptorProto *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v84 = (std::string **)((char *)this + 56);
    int v82 = (unint64_t *)((char *)this + 8);
    uint64_t v83 = (std::string **)((char *)this + 48);
    uint64_t v8 = (uint64_t **)((char *)this + 40);
    uint64_t v9 = (uint64_t **)((char *)this + 32);
    uint64_t v10 = (uint64_t **)((char *)this + 24);
    do
    {
      char v15 = __s + 1;
      unsigned int v16 = *__s;
      if (*__s < 0)
      {
        unsigned int v18 = v16 + (*v15 << 7);
        unsigned int v16 = v18 - 128;
        if (*v15 < 0)
        {
          TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v18 - 128));
          __s = TagFallback;
          if (!TagFallback) {
            goto LABEL_139;
          }
          char v15 = TagFallback;
          unsigned int v16 = v20;
          unsigned int v17 = (v20 >> 3) - 1;
LABEL_16:
          switch(v17)
          {
            case 0u:
              if (v16 != 10) {
                goto LABEL_80;
              }
              *((_DWORD *)this + 4) |= 1u;
              uint64_t v21 = *((void *)this + 1);
              unsigned int v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
              if ((v21 & 1) == 0)
              {
                uint64_t v23 = *v10;
                if (*v10 != &google::protobuf::internal::fixed_address_empty_string) {
                  goto LABEL_21;
                }
LABEL_20:
                google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, v22, (long long *)&google::protobuf::internal::fixed_address_empty_string);
                uint64_t v23 = *v10;
                char v15 = __s;
                goto LABEL_21;
              }
              unsigned int v22 = *(google::protobuf::Arena **)v22;
              uint64_t v23 = *v10;
              if (*v10 == &google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_20;
              }
LABEL_21:
              __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v23, v15, (uint64_t)a3);
              if (*((char *)v23 + 23) < 0)
              {
                uint64_t v25 = (uint64_t *)*v23;
                size_t v11 = v23[1];
                if ((v11 & 0x8000000000000000) != 0) {
                  google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v23[1], "size_t to int conversion", v24);
                }
                uint64_t v23 = v25;
              }
              else
              {
                size_t v11 = *((unsigned __int8 *)v23 + 23);
              }
              char v12 = (std::string *)v23;
              size_t v13 = v11;
              char v14 = "google.protobuf.FieldDescriptorProto.name";
              goto LABEL_6;
            case 1u:
              if (v16 != 18) {
                goto LABEL_80;
              }
              *((_DWORD *)this + 4) |= 2u;
              uint64_t v26 = *((void *)this + 1);
              int32x2_t v27 = (google::protobuf::Arena *)(v26 & 0xFFFFFFFFFFFFFFFELL);
              if ((v26 & 1) == 0)
              {
                int v28 = *v9;
                if (*v9 != &google::protobuf::internal::fixed_address_empty_string) {
                  goto LABEL_29;
                }
LABEL_28:
                google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, v27, (long long *)&google::protobuf::internal::fixed_address_empty_string);
                int v28 = *v9;
                char v15 = __s;
                goto LABEL_29;
              }
              int32x2_t v27 = *(google::protobuf::Arena **)v27;
              int v28 = *v9;
              if (*v9 == &google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_28;
              }
LABEL_29:
              __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v28, v15, (uint64_t)a3);
              if (*((char *)v28 + 23) < 0)
              {
                int v64 = (uint64_t *)*v28;
                size_t v30 = v28[1];
                if ((v30 & 0x8000000000000000) != 0) {
                  google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v28[1], "size_t to int conversion", v29);
                }
                int v28 = v64;
              }
              else
              {
                size_t v30 = *((unsigned __int8 *)v28 + 23);
              }
              char v12 = (std::string *)v28;
              size_t v13 = v30;
              char v14 = "google.protobuf.FieldDescriptorProto.extendee";
              goto LABEL_6;
            case 2u:
              if (v16 != 24) {
                goto LABEL_80;
              }
              v6 |= 0x40u;
              int32x2_t v32 = v15 + 1;
              LODWORD(v31) = *v15;
              if ((v31 & 0x80) == 0) {
                goto LABEL_35;
              }
              int v33 = *v32;
              int v31 = (const char *)(v31 + (v33 << 7) - 128);
              if (v33 < 0)
              {
                int v70 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, v31);
                __s = v70;
                *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v71;
                if (!v70) {
                  goto LABEL_139;
                }
              }
              else
              {
                int32x2_t v32 = v15 + 2;
LABEL_35:
                __s = v32;
                *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v31;
              }
              continue;
            case 3u:
              if (v16 != 32) {
                goto LABEL_80;
              }
              uint64_t v34 = v15 + 1;
              uint64_t v35 = *v15;
              if ((*v15 & 0x80000000) == 0) {
                goto LABEL_40;
              }
              int v36 = *v34;
              int v37 = v35 + (v36 << 7);
              uint64_t v35 = (v37 - 128);
              if (v36 < 0)
              {
                __s = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, (const char *)(v37 - 128));
                if (!__s) {
                  goto LABEL_139;
                }
                uint64_t v35 = v72;
                if ((v72 - 1) <= 2)
                {
LABEL_41:
                  *((_DWORD *)this + 4) |= 0x200u;
                  *((_DWORD *)this + 21) = v35;
                  continue;
                }
              }
              else
              {
                uint64_t v34 = v15 + 2;
LABEL_40:
                __s = v34;
                if ((v35 - 1) <= 2) {
                  goto LABEL_41;
                }
              }
              if (*v82) {
                int v73 = (char *)((*v82 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else {
                int v73 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v82);
              }
              unsigned int v74 = 4;
              goto LABEL_119;
            case 4u:
              if (v16 != 40) {
                goto LABEL_80;
              }
              uint64_t v38 = v15 + 1;
              uint64_t v35 = *v15;
              if ((*v15 & 0x80000000) == 0) {
                goto LABEL_46;
              }
              int v39 = *v38;
              int v40 = v35 + (v39 << 7);
              uint64_t v35 = (v40 - 128);
              if (v39 < 0)
              {
                __s = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, (const char *)(v40 - 128));
                if (!__s) {
                  goto LABEL_139;
                }
                uint64_t v35 = v75;
                if ((v75 - 1) <= 0x11)
                {
LABEL_47:
                  *((_DWORD *)this + 4) |= 0x400u;
                  *((_DWORD *)this + 22) = v35;
                  continue;
                }
              }
              else
              {
                uint64_t v38 = v15 + 2;
LABEL_46:
                __s = v38;
                if ((v35 - 1) <= 0x11) {
                  goto LABEL_47;
                }
              }
              if (*v82) {
                int v73 = (char *)((*v82 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else {
                int v73 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v82);
              }
              unsigned int v74 = 5;
LABEL_119:
              google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v73, v74, v35);
              continue;
            case 5u:
              if (v16 != 50) {
                goto LABEL_80;
              }
              *((_DWORD *)this + 4) |= 4u;
              uint64_t v41 = *((void *)this + 1);
              int v42 = (google::protobuf::Arena *)(v41 & 0xFFFFFFFFFFFFFFFELL);
              if ((v41 & 1) == 0)
              {
                uint64_t v43 = *v8;
                if (*v8 != &google::protobuf::internal::fixed_address_empty_string) {
                  goto LABEL_52;
                }
LABEL_51:
                google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, v42, (long long *)&google::protobuf::internal::fixed_address_empty_string);
                uint64_t v43 = *v8;
                char v15 = __s;
                goto LABEL_52;
              }
              int v42 = *(google::protobuf::Arena **)v42;
              uint64_t v43 = *v8;
              if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_51;
              }
LABEL_52:
              __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v43, v15, (uint64_t)a3);
              if (*((char *)v43 + 23) < 0)
              {
                int v65 = (uint64_t *)*v43;
                size_t v45 = v43[1];
                if ((v45 & 0x8000000000000000) != 0) {
                  google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v43[1], "size_t to int conversion", v44);
                }
                uint64_t v43 = v65;
              }
              else
              {
                size_t v45 = *((unsigned __int8 *)v43 + 23);
              }
              char v12 = (std::string *)v43;
              size_t v13 = v45;
              char v14 = "google.protobuf.FieldDescriptorProto.type_name";
              goto LABEL_6;
            case 6u:
              if (v16 != 58) {
                goto LABEL_80;
              }
              *((_DWORD *)this + 4) |= 8u;
              uint64_t v46 = *((void *)this + 1);
              unsigned int v47 = (google::protobuf::Arena *)(v46 & 0xFFFFFFFFFFFFFFFELL);
              if ((v46 & 1) == 0)
              {
                int v48 = *v83;
                if (*v83 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                  goto LABEL_58;
                }
LABEL_57:
                google::protobuf::internal::ArenaStringPtr::CreateInstance(v83, v47, (long long *)&google::protobuf::internal::fixed_address_empty_string);
                int v48 = *v83;
                char v15 = __s;
                goto LABEL_58;
              }
              unsigned int v47 = *(google::protobuf::Arena **)v47;
              int v48 = *v83;
              if (*v83 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_57;
              }
LABEL_58:
              __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v48, v15, (uint64_t)a3);
              if (SHIBYTE(v48->__r_.__value_.__r.__words[2]) < 0)
              {
                uint64_t v66 = (std::string *)v48->__r_.__value_.__r.__words[0];
                std::string::size_type size = v48->__r_.__value_.__l.__size_;
                if ((size & 0x8000000000000000) != 0) {
                  google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v48->__r_.__value_.__l.__size_, "size_t to int conversion", v49);
                }
                int v48 = v66;
              }
              else
              {
                std::string::size_type size = HIBYTE(v48->__r_.__value_.__r.__words[2]);
              }
              char v12 = v48;
              size_t v13 = size;
              char v14 = "google.protobuf.FieldDescriptorProto.default_value";
              goto LABEL_6;
            case 7u:
              if (v16 != 66) {
                goto LABEL_80;
              }
              *((_DWORD *)this + 4) |= 0x20u;
              int v51 = (google::protobuf::FieldOptions *)*((void *)this + 8);
              if (v51)
              {
                __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldOptions>(a3, v51, (google::protobuf::internal *)v15);
                if (!__s) {
                  goto LABEL_139;
                }
              }
              else
              {
                int v67 = (google::protobuf::Arena *)(*v82 & 0xFFFFFFFFFFFFFFFELL);
                if (*v82) {
                  int v67 = *(google::protobuf::Arena **)v67;
                }
                int v68 = (google::protobuf::FieldOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v67);
                *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v68;
                __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldOptions>(a3, v68, (google::protobuf::internal *)__s);
                if (!__s)
                {
LABEL_139:
                  __s = 0;
                  goto LABEL_2;
                }
              }
              break;
            case 8u:
              if (v16 != 72) {
                goto LABEL_80;
              }
              v6 |= 0x80u;
              uint64_t v53 = v15 + 1;
              LODWORD(v52) = *v15;
              if ((v52 & 0x80) == 0) {
                goto LABEL_68;
              }
              int v54 = *v53;
              uint64_t v52 = (const char *)(v52 + (v54 << 7) - 128);
              if (v54 < 0)
              {
                unsigned int v76 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, v52);
                __s = v76;
                *((_DWORD *)this + 19) = v77;
                if (!v76) {
                  goto LABEL_139;
                }
              }
              else
              {
                uint64_t v53 = v15 + 2;
LABEL_68:
                __s = v53;
                *((_DWORD *)this + 19) = v52;
              }
              continue;
            case 9u:
              if (v16 != 82) {
                goto LABEL_80;
              }
              *((_DWORD *)this + 4) |= 0x10u;
              uint64_t v55 = *((void *)this + 1);
              int v56 = (google::protobuf::Arena *)(v55 & 0xFFFFFFFFFFFFFFFELL);
              if ((v55 & 1) == 0)
              {
                uint64_t v57 = *v84;
                if (*v84 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                  goto LABEL_73;
                }
LABEL_72:
                google::protobuf::internal::ArenaStringPtr::CreateInstance(v84, v56, (long long *)&google::protobuf::internal::fixed_address_empty_string);
                uint64_t v57 = *v84;
                char v15 = __s;
                goto LABEL_73;
              }
              int v56 = *(google::protobuf::Arena **)v56;
              uint64_t v57 = *v84;
              if (*v84 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_72;
              }
LABEL_73:
              __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v57, v15, (uint64_t)a3);
              if (SHIBYTE(v57->__r_.__value_.__r.__words[2]) < 0)
              {
                int v69 = (std::string *)v57->__r_.__value_.__r.__words[0];
                std::string::size_type v59 = v57->__r_.__value_.__l.__size_;
                if ((v59 & 0x8000000000000000) != 0) {
                  google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v57->__r_.__value_.__l.__size_, "size_t to int conversion", v58);
                }
                uint64_t v57 = v69;
              }
              else
              {
                std::string::size_type v59 = HIBYTE(v57->__r_.__value_.__r.__words[2]);
              }
              char v12 = v57;
              size_t v13 = v59;
              char v14 = "google.protobuf.FieldDescriptorProto.json_name";
LABEL_6:
              google::protobuf::internal::VerifyUTF8(v12, v13, (google::protobuf::internal *)v14);
              if (!__s) {
                goto LABEL_139;
              }
              continue;
            case 0x10u:
              if (v16 != 136) {
                goto LABEL_80;
              }
              v6 |= 0x100u;
              uint64_t v60 = v15 + 1;
              unint64_t v61 = *v15;
              if ((*v15 & 0x80000000) == 0) {
                goto LABEL_79;
              }
              int v62 = *v60;
              unint64_t v61 = v61 + (v62 << 7) - 128;
              if (v62 < 0)
              {
                unsigned int v78 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, (const char *)v61);
                __s = v78;
                *((unsigned char *)this + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v79 != 0;
                if (!v78) {
                  goto LABEL_139;
                }
              }
              else
              {
                uint64_t v60 = v15 + 2;
LABEL_79:
                __s = v60;
                *((unsigned char *)this + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v61 != 0;
              }
              continue;
            default:
              goto LABEL_80;
          }
          continue;
        }
        char v15 = __s + 2;
        __s += 2;
        unsigned int v17 = (v16 >> 3) - 1;
        if (v17 <= 0x10) {
          goto LABEL_16;
        }
      }
      else
      {
        ++__s;
        unsigned int v17 = (v16 >> 3) - 1;
        if (v17 <= 0x10) {
          goto LABEL_16;
        }
      }
LABEL_80:
      if (v16) {
        BOOL v63 = (v16 & 7) == 4;
      }
      else {
        BOOL v63 = 1;
      }
      if (v63)
      {
        a3[10].i32[0] = v16 - 1;
        break;
      }
      if (*v82)
      {
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v16, (google::protobuf::UnknownFieldSet *)((*v82 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v15, (const char *)a3, v5);
        if (!__s) {
          goto LABEL_139;
        }
      }
      else
      {
        unsigned int v80 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v82);
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v16, (google::protobuf::UnknownFieldSet *)v80, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v81);
        if (!__s) {
          goto LABEL_139;
        }
      }
    }
    while ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0);
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return __s;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::FieldOptions>(int32x2_t *a1, google::protobuf::FieldOptions *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      char v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::FieldOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDFCEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFCED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::FieldDescriptorProto::_InternalSerialize(google::protobuf::FieldDescriptorProto *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if (v7)
  {
    BOOL v10 = (unsigned __int8 *)*((void *)this + 3);
    if ((char)v10[23] < 0)
    {
      BOOL v10 = *(unsigned __int8 **)v10;
      size_t v11 = *(const char **)(*((void *)this + 3) + 8);
    }
    else
    {
      size_t v11 = (const char *)v10[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v10, v11, 1, (google::protobuf::internal *)"google.protobuf.FieldDescriptorProto.name");
    uint64_t v12 = *((void *)this + 3);
    if (*(char *)(v12 + 23) < 0)
    {
      int64_t v13 = *(void *)(v12 + 8);
      if (v13 > 127) {
        goto LABEL_40;
      }
    }
    else
    {
      int64_t v13 = *(unsigned __int8 *)(v12 + 23);
    }
    if (*(void *)a3 - (void)a2 + 14 >= v13)
    {
      *(unsigned char *)a2 = 10;
      *((unsigned char *)a2 + 1) = v13;
      if (*(char *)(v12 + 23) >= 0) {
        char v14 = (const void *)v12;
      }
      else {
        char v14 = *(const void **)v12;
      }
      memcpy((char *)a2 + 2, v14, v13);
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v13 + 2);
      if ((v7 & 2) != 0) {
        goto LABEL_25;
      }
LABEL_3:
      if ((v7 & 0x40) == 0) {
        goto LABEL_4;
      }
LABEL_36:
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        unint64_t v20 = *((int *)this + 18);
        *(unsigned char *)a2 = 24;
        if (v20 <= 0x7F)
        {
LABEL_38:
          *((unsigned char *)a2 + 1) = v20;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
          if ((v7 & 0x200) != 0) {
            goto LABEL_51;
          }
          goto LABEL_5;
        }
      }
      else
      {
        unint64_t v20 = *((int *)this + 18);
        *(unsigned char *)a2 = 24;
        if (v20 <= 0x7F) {
          goto LABEL_38;
        }
      }
      *((unsigned char *)a2 + 1) = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      if (v20 >> 14)
      {
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)a2 - 1) = v21 | 0x80;
          unint64_t v22 = v21 >> 7;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          unint64_t v23 = v21 >> 14;
          v21 >>= 7;
        }
        while (v23);
        *((unsigned char *)a2 - 1) = v22;
        if ((v7 & 0x200) != 0) {
          goto LABEL_51;
        }
      }
      else
      {
        *((unsigned char *)a2 + 2) = v21;
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        if ((v7 & 0x200) != 0) {
          goto LABEL_51;
        }
      }
LABEL_5:
      if ((v7 & 0x400) == 0) {
        goto LABEL_6;
      }
LABEL_62:
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        unint64_t v28 = *((int *)this + 22);
        *(unsigned char *)a2 = 40;
        if (v28 <= 0x7F)
        {
LABEL_64:
          *((unsigned char *)a2 + 1) = v28;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
          if ((v7 & 4) != 0) {
            goto LABEL_73;
          }
          goto LABEL_7;
        }
      }
      else
      {
        unint64_t v28 = *((int *)this + 22);
        *(unsigned char *)a2 = 40;
        if (v28 <= 0x7F) {
          goto LABEL_64;
        }
      }
      *((unsigned char *)a2 + 1) = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      if (v28 >> 14)
      {
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)a2 - 1) = v29 | 0x80;
          unint64_t v30 = v29 >> 7;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          unint64_t v31 = v29 >> 14;
          v29 >>= 7;
        }
        while (v31);
        *((unsigned char *)a2 - 1) = v30;
        if ((v7 & 4) != 0) {
          goto LABEL_73;
        }
      }
      else
      {
        *((unsigned char *)a2 + 2) = v29;
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        if ((v7 & 4) != 0) {
          goto LABEL_73;
        }
      }
LABEL_7:
      if ((v7 & 8) == 0) {
        goto LABEL_8;
      }
LABEL_84:
      int v37 = (unsigned __int8 *)*((void *)this + 6);
      if ((char)v37[23] < 0)
      {
        int v37 = *(unsigned __int8 **)v37;
        uint64_t v38 = *(const char **)(*((void *)this + 6) + 8);
      }
      else
      {
        uint64_t v38 = (const char *)v37[23];
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v37, v38, 1, (google::protobuf::internal *)"google.protobuf.FieldDescriptorProto.default_value");
      uint64_t v39 = *((void *)this + 6);
      if (*(char *)(v39 + 23) < 0)
      {
        int64_t v40 = *(void *)(v39 + 8);
        if (v40 > 127) {
          goto LABEL_101;
        }
      }
      else
      {
        int64_t v40 = *(unsigned __int8 *)(v39 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v40)
      {
        *(unsigned char *)a2 = 58;
        *((unsigned char *)a2 + 1) = v40;
        if (*(char *)(v39 + 23) >= 0) {
          uint64_t v41 = (const void *)v39;
        }
        else {
          uint64_t v41 = *(const void **)v39;
        }
        memcpy((char *)a2 + 2, v41, v40);
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v40 + 2);
        if ((v7 & 0x20) != 0) {
          goto LABEL_95;
        }
LABEL_9:
        if ((v7 & 0x80) == 0) {
          goto LABEL_10;
        }
LABEL_110:
        if (*(void *)a3 <= (unint64_t)a2)
        {
          a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
          unint64_t v48 = *((int *)this + 19);
          *(unsigned char *)a2 = 72;
          if (v48 <= 0x7F)
          {
LABEL_112:
            *((unsigned char *)a2 + 1) = v48;
            a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
            if ((v7 & 0x10) != 0) {
              goto LABEL_121;
            }
            goto LABEL_11;
          }
        }
        else
        {
          unint64_t v48 = *((int *)this + 19);
          *(unsigned char *)a2 = 72;
          if (v48 <= 0x7F) {
            goto LABEL_112;
          }
        }
        *((unsigned char *)a2 + 1) = v48 | 0x80;
        unint64_t v49 = v48 >> 7;
        if (v48 >> 14)
        {
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)a2 - 1) = v49 | 0x80;
            unint64_t v50 = v49 >> 7;
            a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
            unint64_t v51 = v49 >> 14;
            v49 >>= 7;
          }
          while (v51);
          *((unsigned char *)a2 - 1) = v50;
          if ((v7 & 0x10) != 0) {
            goto LABEL_121;
          }
        }
        else
        {
          *((unsigned char *)a2 + 2) = v49;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((v7 & 0x10) != 0) {
            goto LABEL_121;
          }
        }
LABEL_11:
        if ((v7 & 0x100) == 0) {
          goto LABEL_12;
        }
LABEL_132:
        if (*(void *)a3 <= (unint64_t)a2) {
          a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        }
        char v57 = *((unsigned char *)this + 80);
        *(_WORD *)a2 = 392;
        *((unsigned char *)a2 + 2) = v57;
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        uint64_t v8 = *((void *)this + 1);
        if ((v8 & 1) == 0) {
          return a2;
        }
        goto LABEL_135;
      }
LABEL_101:
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 7, v39, (char *)a2);
      if ((v7 & 0x20) != 0) {
        goto LABEL_95;
      }
      goto LABEL_9;
    }
LABEL_40:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v12, (char *)a2);
    if ((v7 & 2) != 0) {
      goto LABEL_25;
    }
    goto LABEL_3;
  }
  if ((v7 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_25:
  char v15 = (unsigned __int8 *)*((void *)this + 4);
  if ((char)v15[23] < 0)
  {
    char v15 = *(unsigned __int8 **)v15;
    unsigned int v16 = *(const char **)(*((void *)this + 4) + 8);
  }
  else
  {
    unsigned int v16 = (const char *)v15[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v15, v16, 1, (google::protobuf::internal *)"google.protobuf.FieldDescriptorProto.extendee");
  uint64_t v17 = *((void *)this + 4);
  if (*(char *)(v17 + 23) < 0)
  {
    int64_t v18 = *(void *)(v17 + 8);
    if (v18 > 127) {
      goto LABEL_42;
    }
  }
  else
  {
    int64_t v18 = *(unsigned __int8 *)(v17 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v18)
  {
LABEL_42:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 2, v17, (char *)a2);
    if ((v7 & 0x40) != 0) {
      goto LABEL_36;
    }
    goto LABEL_4;
  }
  *(unsigned char *)a2 = 18;
  *((unsigned char *)a2 + 1) = v18;
  if (*(char *)(v17 + 23) >= 0) {
    uint64_t v19 = (const void *)v17;
  }
  else {
    uint64_t v19 = *(const void **)v17;
  }
  memcpy((char *)a2 + 2, v19, v18);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v18 + 2);
  if ((v7 & 0x40) != 0) {
    goto LABEL_36;
  }
LABEL_4:
  if ((v7 & 0x200) == 0) {
    goto LABEL_5;
  }
LABEL_51:
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    unint64_t v24 = *((int *)this + 21);
    *(unsigned char *)a2 = 32;
    if (v24 <= 0x7F)
    {
LABEL_53:
      *((unsigned char *)a2 + 1) = v24;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      if ((v7 & 0x400) != 0) {
        goto LABEL_62;
      }
      goto LABEL_6;
    }
  }
  else
  {
    unint64_t v24 = *((int *)this + 21);
    *(unsigned char *)a2 = 32;
    if (v24 <= 0x7F) {
      goto LABEL_53;
    }
  }
  *((unsigned char *)a2 + 1) = v24 | 0x80;
  unint64_t v25 = v24 >> 7;
  if (v24 >> 14)
  {
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    do
    {
      *((unsigned char *)a2 - 1) = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
      unint64_t v27 = v25 >> 14;
      v25 >>= 7;
    }
    while (v27);
    *((unsigned char *)a2 - 1) = v26;
    if ((v7 & 0x400) != 0) {
      goto LABEL_62;
    }
  }
  else
  {
    *((unsigned char *)a2 + 2) = v25;
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((v7 & 0x400) != 0) {
      goto LABEL_62;
    }
  }
LABEL_6:
  if ((v7 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_73:
  int32x2_t v32 = (unsigned __int8 *)*((void *)this + 5);
  if ((char)v32[23] < 0)
  {
    int32x2_t v32 = *(unsigned __int8 **)v32;
    int v33 = *(const char **)(*((void *)this + 5) + 8);
  }
  else
  {
    int v33 = (const char *)v32[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v32, v33, 1, (google::protobuf::internal *)"google.protobuf.FieldDescriptorProto.type_name");
  uint64_t v34 = *((void *)this + 5);
  if (*(char *)(v34 + 23) < 0)
  {
    int64_t v35 = *(void *)(v34 + 8);
    if (v35 > 127) {
      goto LABEL_99;
    }
  }
  else
  {
    int64_t v35 = *(unsigned __int8 *)(v34 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v35)
  {
LABEL_99:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 6, v34, (char *)a2);
    if ((v7 & 8) != 0) {
      goto LABEL_84;
    }
    goto LABEL_8;
  }
  *(unsigned char *)a2 = 50;
  *((unsigned char *)a2 + 1) = v35;
  if (*(char *)(v34 + 23) >= 0) {
    int v36 = (const void *)v34;
  }
  else {
    int v36 = *(const void **)v34;
  }
  memcpy((char *)a2 + 2, v36, v35);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v35 + 2);
  if ((v7 & 8) != 0) {
    goto LABEL_84;
  }
LABEL_8:
  if ((v7 & 0x20) == 0) {
    goto LABEL_9;
  }
LABEL_95:
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    int v42 = (google::protobuf::FieldOptions *)*((void *)this + 8);
    *(unsigned char *)a2 = 66;
    unsigned int v43 = *((_DWORD *)v42 + 11);
    if (v43 <= 0x7F)
    {
LABEL_97:
      *((unsigned char *)a2 + 1) = v43;
      a2 = google::protobuf::FieldOptions::_InternalSerialize(v42, (char *)a2 + 2, a3);
      if ((v7 & 0x80) != 0) {
        goto LABEL_110;
      }
      goto LABEL_10;
    }
  }
  else
  {
    int v42 = (google::protobuf::FieldOptions *)*((void *)this + 8);
    *(unsigned char *)a2 = 66;
    unsigned int v43 = *((_DWORD *)v42 + 11);
    if (v43 <= 0x7F) {
      goto LABEL_97;
    }
  }
  *((unsigned char *)a2 + 1) = v43 | 0x80;
  unsigned int v44 = v43 >> 7;
  if (v43 >> 14)
  {
    size_t v45 = (char *)a2 + 3;
    do
    {
      *(v45 - 1) = v44 | 0x80;
      unsigned int v46 = v44 >> 7;
      ++v45;
      unsigned int v47 = v44 >> 14;
      v44 >>= 7;
    }
    while (v47);
    *(v45 - 1) = v46;
    a2 = google::protobuf::FieldOptions::_InternalSerialize(v42, v45, a3);
    if ((v7 & 0x80) != 0) {
      goto LABEL_110;
    }
  }
  else
  {
    *((unsigned char *)a2 + 2) = v44;
    a2 = google::protobuf::FieldOptions::_InternalSerialize(v42, (char *)a2 + 3, a3);
    if ((v7 & 0x80) != 0) {
      goto LABEL_110;
    }
  }
LABEL_10:
  if ((v7 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_121:
  uint64_t v52 = (unsigned __int8 *)*((void *)this + 7);
  if ((char)v52[23] < 0)
  {
    uint64_t v52 = *(unsigned __int8 **)v52;
    uint64_t v53 = *(const char **)(*((void *)this + 7) + 8);
  }
  else
  {
    uint64_t v53 = (const char *)v52[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v52, v53, 1, (google::protobuf::internal *)"google.protobuf.FieldDescriptorProto.json_name");
  uint64_t v54 = *((void *)this + 7);
  if (*(char *)(v54 + 23) < 0)
  {
    int64_t v55 = *(void *)(v54 + 8);
    if (v55 > 127) {
      goto LABEL_138;
    }
  }
  else
  {
    int64_t v55 = *(unsigned __int8 *)(v54 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v55)
  {
LABEL_138:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 10, v54, (char *)a2);
    if ((v7 & 0x100) != 0) {
      goto LABEL_132;
    }
    goto LABEL_12;
  }
  *(unsigned char *)a2 = 82;
  *((unsigned char *)a2 + 1) = v55;
  if (*(char *)(v54 + 23) >= 0) {
    int v56 = (const void *)v54;
  }
  else {
    int v56 = *(const void **)v54;
  }
  memcpy((char *)a2 + 2, v56, v55);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v55 + 2);
  if ((v7 & 0x100) != 0) {
    goto LABEL_132;
  }
LABEL_12:
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return a2;
  }
LABEL_135:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::FieldDescriptorProto::ByteSizeLong(google::protobuf::FieldDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x700) == 0) {
      goto LABEL_51;
    }
    goto LABEL_39;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  uint64_t v4 = *((void *)this + 3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 2) != 0)
  {
LABEL_10:
    uint64_t v7 = *((void *)this + 4);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
LABEL_13:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = *((void *)this + 5);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v13 = *((void *)this + 6);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
LABEL_27:
  uint64_t v16 = *((void *)this + 7);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v19 = google::protobuf::FieldOptions::ByteSizeLong(*((google::protobuf::FieldOptions **)this + 8));
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)&v19[(void)v3
                                                     + 1
                                                     + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6)];
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_31:
  int v20 = *((_DWORD *)this + 18);
  if (v20 < 0)
  {
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + 11);
    if ((v2 & 0x80) != 0) {
      goto LABEL_35;
    }
LABEL_19:
    if ((v2 & 0x700) == 0) {
      goto LABEL_51;
    }
    goto LABEL_39;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 0x80) == 0) {
    goto LABEL_19;
  }
LABEL_35:
  int v21 = *((_DWORD *)this + 19);
  if (v21 < 0)
  {
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + 11);
    if ((v2 & 0x700) == 0) {
      goto LABEL_51;
    }
  }
  else
  {
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v2 & 0x700) == 0) {
      goto LABEL_51;
    }
  }
LABEL_39:
  if ((v2 & 0x100) != 0) {
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  }
  if ((v2 & 0x200) != 0)
  {
    int v22 = *((_DWORD *)this + 21);
    uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v22 >= 0) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = 11;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v24);
  }
  if ((v2 & 0x400) != 0)
  {
    int v25 = *((_DWORD *)this + 22);
    uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v25 >= 0) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 11;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v27);
  }
LABEL_51:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FieldDescriptorProto *)((char *)this + 8), v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v3;
    return (char *)v3;
  }
}

void google::protobuf::FieldDescriptorProto::MergeFrom(google::protobuf::FieldDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4108);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::FieldDescriptorProto::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDFDA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFDA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptorProto::MergeFrom(google::protobuf::FieldDescriptorProto *this, const google::protobuf::FieldDescriptorProto *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v8 = (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
    if (*v4)
    {
      google::protobuf::UnknownFieldSet::InternalMergeFrom((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8, v8);
      int v6 = *((_DWORD *)a2 + 4);
      if ((_BYTE)v6) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v14 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
      google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v14, v8);
      int v6 = *((_DWORD *)a2 + 4);
      if ((_BYTE)v6) {
        goto LABEL_9;
      }
    }
LABEL_4:
    if ((v6 & 0x700) == 0) {
      return;
    }
LABEL_19:
    if ((v6 & 0x100) != 0)
    {
      *((unsigned char *)this + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((unsigned char *)a2 + 80);
      if ((v6 & 0x200) == 0)
      {
LABEL_21:
        if ((v6 & 0x400) == 0)
        {
LABEL_23:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_22:
        *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
        goto LABEL_23;
      }
    }
    else if ((v6 & 0x200) == 0)
    {
      goto LABEL_21;
    }
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    if ((v6 & 0x400) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v39, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4123);
  char v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v39, "CHECK failed: (&from) != (this): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v38, v7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v39[0].__r_.__value_.__l.__data_);
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    goto LABEL_7;
  }
LABEL_3:
  int v6 = *((_DWORD *)a2 + 4);
  if (!(_BYTE)v6) {
    goto LABEL_4;
  }
LABEL_9:
  if (v6)
  {
    uint64_t v9 = (std::string *)*((void *)a2 + 3);
    *((_DWORD *)this + 4) |= 1u;
    uint64_t v10 = (std::string **)((char *)this + 24);
    uint64_t v11 = *((void *)this + 1);
    uint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    if (v11)
    {
      uint64_t v12 = *(google::protobuf::Arena **)v12;
      uint64_t v13 = *v10;
      if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
LABEL_26:
        std::string::operator=(v13, v9);
        if ((v6 & 2) != 0) {
          goto LABEL_35;
        }
LABEL_11:
        if ((v6 & 4) == 0) {
          goto LABEL_12;
        }
LABEL_41:
        int v20 = (std::string *)*((void *)a2 + 5);
        *((_DWORD *)this + 4) |= 4u;
        int v21 = (std::string **)((char *)this + 40);
        uint64_t v22 = *((void *)this + 1);
        uint64_t v23 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
        if (v22)
        {
          uint64_t v23 = *(google::protobuf::Arena **)v23;
          uint64_t v24 = *v21;
          if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
LABEL_43:
            std::string::operator=(v24, v20);
            if ((v6 & 8) != 0) {
              goto LABEL_47;
            }
LABEL_13:
            if ((v6 & 0x10) == 0) {
              goto LABEL_14;
            }
LABEL_53:
            unint64_t v30 = (std::string *)*((void *)a2 + 7);
            *((_DWORD *)this + 4) |= 0x10u;
            unint64_t v31 = (std::string **)((char *)this + 56);
            uint64_t v32 = *((void *)this + 1);
            int v33 = (google::protobuf::Arena *)(v32 & 0xFFFFFFFFFFFFFFFELL);
            if (v32)
            {
              int v33 = *(google::protobuf::Arena **)v33;
              uint64_t v34 = *v31;
              if (*v31 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
LABEL_55:
                std::string::operator=(v34, v30);
                if ((v6 & 0x20) != 0) {
                  goto LABEL_59;
                }
LABEL_15:
                if ((v6 & 0x40) == 0) {
                  goto LABEL_16;
                }
                goto LABEL_67;
              }
            }
            else
            {
              uint64_t v34 = *v31;
              if (*v31 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_55;
              }
            }
            google::protobuf::internal::ArenaStringPtr::CreateInstance(v31, v33, (long long *)v30);
            if ((v6 & 0x20) != 0) {
              goto LABEL_59;
            }
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v24 = *v21;
          if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_43;
          }
        }
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, v23, (long long *)v20);
        if ((v6 & 8) != 0) {
          goto LABEL_47;
        }
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v13 = *v10;
      if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_26;
      }
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v10, v12, (long long *)v9);
    if ((v6 & 2) != 0) {
      goto LABEL_35;
    }
    goto LABEL_11;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_11;
  }
LABEL_35:
  uint64_t v15 = (long long *)*((void *)a2 + 4);
  *((_DWORD *)this + 4) |= 2u;
  uint64_t v16 = (std::string **)((char *)this + 32);
  uint64_t v17 = *((void *)this + 1);
  uint64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
  if ((v17 & 1) == 0)
  {
    uint64_t v19 = *v16;
    if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_37;
    }
LABEL_40:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v16, v18, v15);
    if ((v6 & 4) != 0) {
      goto LABEL_41;
    }
    goto LABEL_12;
  }
  uint64_t v18 = *(google::protobuf::Arena **)v18;
  uint64_t v19 = *v16;
  if (*v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_40;
  }
LABEL_37:
  std::string::operator=(v19, (const std::string *)v15);
  if ((v6 & 4) != 0) {
    goto LABEL_41;
  }
LABEL_12:
  if ((v6 & 8) == 0) {
    goto LABEL_13;
  }
LABEL_47:
  int v25 = (long long *)*((void *)a2 + 6);
  *((_DWORD *)this + 4) |= 8u;
  uint64_t v26 = (std::string **)((char *)this + 48);
  uint64_t v27 = *((void *)this + 1);
  unint64_t v28 = (google::protobuf::Arena *)(v27 & 0xFFFFFFFFFFFFFFFELL);
  if ((v27 & 1) == 0)
  {
    unint64_t v29 = *v26;
    if (*v26 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_49;
    }
LABEL_52:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v26, v28, v25);
    if ((v6 & 0x10) != 0) {
      goto LABEL_53;
    }
    goto LABEL_14;
  }
  unint64_t v28 = *(google::protobuf::Arena **)v28;
  unint64_t v29 = *v26;
  if (*v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_52;
  }
LABEL_49:
  std::string::operator=(v29, (const std::string *)v25);
  if ((v6 & 0x10) != 0) {
    goto LABEL_53;
  }
LABEL_14:
  if ((v6 & 0x20) == 0) {
    goto LABEL_15;
  }
LABEL_59:
  *((_DWORD *)this + 4) |= 0x20u;
  int64_t v35 = (google::protobuf::FieldOptions *)*((void *)this + 8);
  if (!v35)
  {
    int v36 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      int v36 = *(google::protobuf::Arena **)v36;
    }
    int64_t v35 = (google::protobuf::FieldOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v36);
    *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v35;
  }
  if (*((void *)a2 + 8)) {
    int v37 = (const google::protobuf::FieldOptions *)*((void *)a2 + 8);
  }
  else {
    int v37 = (const google::protobuf::FieldOptions *)&google::protobuf::_FieldOptions_default_instance_;
  }
  google::protobuf::FieldOptions::MergeFrom(v35, v37);
  if ((v6 & 0x40) == 0)
  {
LABEL_16:
    if ((v6 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_67:
  *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = *((_DWORD *)a2 + 18);
  if ((v6 & 0x80) != 0) {
LABEL_17:
  }
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
LABEL_18:
  *((_DWORD *)this + 4) |= v6;
  if ((v6 & 0x700) != 0) {
    goto LABEL_19;
  }
}

void sub_23CDFDE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFDE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldOptions::MergeFrom(google::protobuf::FieldOptions *this, const google::protobuf::FieldOptions *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 7896);
    int v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::FieldOptions *)((char *)this + 16), (const google::protobuf::FieldOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
      int v5 = *((_DWORD *)a2 + 10);
      if ((v5 & 0x3F) == 0) {
        return;
      }
LABEL_9:
      if (v5)
      {
        *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = *((_DWORD *)a2 + 18);
        if ((v5 & 2) == 0)
        {
LABEL_11:
          if ((v5 & 4) == 0) {
            goto LABEL_12;
          }
          goto LABEL_19;
        }
      }
      else if ((v5 & 2) == 0)
      {
        goto LABEL_11;
      }
      *((unsigned char *)this + 76) = *((unsigned char *)a2 + 76);
      if ((v5 & 4) == 0)
      {
LABEL_12:
        if ((v5 & 8) == 0) {
          goto LABEL_13;
        }
        goto LABEL_20;
      }
LABEL_19:
      *((unsigned char *)this + 77) = *((unsigned char *)a2 + 77);
      if ((v5 & 8) == 0)
      {
LABEL_13:
        if ((v5 & 0x10) == 0) {
          goto LABEL_14;
        }
        goto LABEL_21;
      }
LABEL_20:
      *((unsigned char *)this + 7google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = *((unsigned char *)a2 + 78);
      if ((v5 & 0x10) == 0)
      {
LABEL_14:
        if ((v5 & 0x20) == 0)
        {
LABEL_16:
          *((_DWORD *)this + 10) |= v5;
          return;
        }
LABEL_15:
        *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((_DWORD *)a2 + 20);
        goto LABEL_16;
      }
LABEL_21:
      *((unsigned char *)this + 79) = *((unsigned char *)a2 + 79);
      if ((v5 & 0x20) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  else
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::FieldOptions *)((char *)this + 16), (const google::protobuf::FieldOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v8 = *((void *)this + 1);
  if (v8) {
    uint64_t v9 = (char *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v7);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  int v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 0x3F) != 0) {
    goto LABEL_9;
  }
}

void sub_23CDFDFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFDFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptorProto::CopyFrom(google::protobuf::FieldDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FieldDescriptorProto::Clear(this);
    google::protobuf::FieldDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FieldDescriptorProto::IsInitialized(google::protobuf::FieldDescriptorProto *this)
{
  if ((*((_DWORD *)this + 4) & 0x20) == 0) {
    return 1;
  }
  uint64_t v3 = *((void *)this + 8);
  if (v3)
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 9061);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    uint64_t v3 = *((void *)this + 8);
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v3 + 48);
  if (result) {
    return 1;
  }
  return result;
}

void sub_23CDFE0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFE110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FieldOptions::IsInitialized(google::protobuf::FieldOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::FieldOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::FieldDescriptorProto::GetMetadata(google::protobuf::FieldDescriptorProto *this)
{
  return off_26AED0A18[12];
}

void google::protobuf::OneofDescriptorProto::~OneofDescriptorProto(google::protobuf::OneofDescriptorProto *this)
{
  google::protobuf::OneofDescriptorProto::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      int v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        int v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::OneofDescriptorProto::~OneofDescriptorProto(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::OneofDescriptorProto::SharedDtor(google::protobuf::OneofDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4273);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 3);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::OneofDescriptorProto *)&google::protobuf::_OneofDescriptorProto_default_instance_)
  {
    char v7 = (google::protobuf::OneofOptions *)*((void *)this + 4);
    if (v7)
    {
      google::protobuf::OneofOptions::~OneofOptions(v7);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CDFE32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFE340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::OneofDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::OneofDescriptorProto::Clear(google::protobuf::OneofDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0) {
    goto LABEL_12;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 3);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
      goto LABEL_6;
    }
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = *((void *)this + 4);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4305);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)this + 4);
  }
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v4 + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v4 + 40);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v6 & 1) != 0 && *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v6 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
LABEL_12:
  *((_DWORD *)this + 4) = 0;
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) != 0 && *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CDFE490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFE4A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofOptions::Clear(google::protobuf::OneofOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::OneofOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40);
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::OneofDescriptorProto::_InternalParse(google::protobuf::OneofDescriptorProto *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)((char *)this + 8);
    char v8 = (uint64_t **)((char *)this + 24);
    while (1)
    {
      char v10 = __s + 1;
      unsigned int v11 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = v11 + (*v10 << 7);
      unsigned int v11 = v12 - 128;
      if ((*v10 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v12 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v10 = TagFallback;
      unsigned int v11 = v21;
      unsigned int v13 = v21 >> 3;
      if (v21 >> 3 != 2)
      {
LABEL_11:
        if (v13 == 1 && v11 == 10)
        {
          *((_DWORD *)this + 4) |= 1u;
          uint64_t v16 = *((void *)this + 1);
          uint64_t v17 = (google::protobuf::Arena *)(v16 & 0xFFFFFFFFFFFFFFFELL);
          if (v16)
          {
            uint64_t v17 = *(google::protobuf::Arena **)v17;
            uint64_t v18 = *v8;
            if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
            {
LABEL_24:
              google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, v17, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              uint64_t v18 = *v8;
              char v10 = __s;
            }
          }
          else
          {
            uint64_t v18 = *v8;
            if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_24;
            }
          }
          __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v18, v10, (uint64_t)a3);
          if (*((char *)v18 + 23) < 0)
          {
            uint64_t v24 = (const void *)*v18;
            size_t v23 = v18[1];
            if ((v23 & 0x8000000000000000) != 0) {
              google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v18[1], "size_t to int conversion", v19);
            }
            google::protobuf::internal::VerifyUTF8(v24, v23, (google::protobuf::internal *)"google.protobuf.OneofDescriptorProto.name");
            if (!__s) {
              return 0;
            }
          }
          else
          {
            google::protobuf::internal::VerifyUTF8(v18, *((unsigned __int8 *)v18 + 23), (google::protobuf::internal *)"google.protobuf.OneofDescriptorProto.name");
            if (!__s) {
              return 0;
            }
          }
          goto LABEL_37;
        }
        goto LABEL_15;
      }
LABEL_30:
      if (v11 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v9 = (google::protobuf::OneofOptions *)*((void *)this + 4);
        if (!v9)
        {
          uint64_t v22 = (google::protobuf::Arena *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
          if (*v7) {
            uint64_t v22 = *(google::protobuf::Arena **)v22;
          }
          uint64_t v9 = (google::protobuf::OneofOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v22);
          *((void *)this + 4) = v9;
          char v10 = __s;
        }
        __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::OneofOptions>(a3, v9, (google::protobuf::internal *)v10);
        if (!__s) {
          return 0;
        }
        goto LABEL_37;
      }
LABEL_15:
      if (v11) {
        BOOL v15 = (v11 & 7) == 4;
      }
      else {
        BOOL v15 = 1;
      }
      if (v15)
      {
        a3[10].i32[0] = v11 - 1;
        return __s;
      }
      if (*v7)
      {
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v10, (const char *)a3, v5);
        if (!__s) {
          return 0;
        }
      }
      else
      {
        int v25 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)v25, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v26);
        if (!__s) {
          return 0;
        }
      }
LABEL_37:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))return __s; {
    }
      }
    char v10 = __s + 2;
LABEL_10:
    __s = v10;
    unsigned int v13 = v11 >> 3;
    if (v11 >> 3 != 2) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
  return __s;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::OneofOptions>(int32x2_t *a1, google::protobuf::OneofOptions *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::OneofOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CDFE8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFE90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::OneofDescriptorProto::_InternalSerialize(google::protobuf::OneofDescriptorProto *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 1) == 0)
  {
    if ((v7 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_16:
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      char v15 = (google::protobuf::OneofOptions *)*((void *)this + 4);
      *(unsigned char *)a2 = 18;
      unsigned int v16 = *((_DWORD *)v15 + 16);
      if (v16 <= 0x7F)
      {
LABEL_18:
        *((unsigned char *)a2 + 1) = v16;
        a2 = google::protobuf::OneofOptions::_InternalSerialize(v15, (char *)a2 + 2, a3);
        uint64_t v8 = *((void *)this + 1);
        if ((v8 & 1) == 0) {
          return a2;
        }
        goto LABEL_29;
      }
    }
    else
    {
      char v15 = (google::protobuf::OneofOptions *)*((void *)this + 4);
      *(unsigned char *)a2 = 18;
      unsigned int v16 = *((_DWORD *)v15 + 16);
      if (v16 <= 0x7F) {
        goto LABEL_18;
      }
    }
    *((unsigned char *)a2 + 1) = v16 | 0x80;
    unsigned int v17 = v16 >> 7;
    if (v16 >> 14)
    {
      uint64_t v18 = (char *)a2 + 3;
      do
      {
        *(v18 - 1) = v17 | 0x80;
        unsigned int v19 = v17 >> 7;
        ++v18;
        unsigned int v20 = v17 >> 14;
        v17 >>= 7;
      }
      while (v20);
      *(v18 - 1) = v19;
      a2 = google::protobuf::OneofOptions::_InternalSerialize(v15, v18, a3);
      uint64_t v8 = *((void *)this + 1);
      if ((v8 & 1) == 0) {
        return a2;
      }
    }
    else
    {
      *((unsigned char *)a2 + 2) = v17;
      a2 = google::protobuf::OneofOptions::_InternalSerialize(v15, (char *)a2 + 3, a3);
      uint64_t v8 = *((void *)this + 1);
      if ((v8 & 1) == 0) {
        return a2;
      }
    }
    goto LABEL_29;
  }
  BOOL v10 = (unsigned __int8 *)*((void *)this + 3);
  if ((char)v10[23] < 0)
  {
    BOOL v10 = *(unsigned __int8 **)v10;
    unsigned int v11 = *(const char **)(*((void *)this + 3) + 8);
  }
  else
  {
    unsigned int v11 = (const char *)v10[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v10, v11, 1, (google::protobuf::internal *)"google.protobuf.OneofDescriptorProto.name");
  uint64_t v12 = *((void *)this + 3);
  if (*(char *)(v12 + 23) < 0)
  {
    int64_t v13 = *(void *)(v12 + 8);
    if (v13 > 127) {
      goto LABEL_20;
    }
  }
  else
  {
    int64_t v13 = *(unsigned __int8 *)(v12 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v13)
  {
LABEL_20:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v12, (char *)a2);
    if ((v7 & 2) != 0) {
      goto LABEL_16;
    }
    goto LABEL_3;
  }
  *(unsigned char *)a2 = 10;
  *((unsigned char *)a2 + 1) = v13;
  if (*(char *)(v12 + 23) >= 0) {
    uint64_t v14 = (const void *)v12;
  }
  else {
    uint64_t v14 = *(const void **)v12;
  }
  memcpy((char *)a2 + 2, v14, v13);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v13 + 2);
  if ((v7 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return a2;
  }
LABEL_29:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::OneofDescriptorProto::ByteSizeLong(google::protobuf::OneofDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_9;
  }
  uint64_t v4 = *((void *)this + 3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = *((void *)this + 4);
    uint64_t v8 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::internal::ExtensionSet *)(v7 + 16));
    uint64_t v9 = *(int *)(v7 + 48);
    BOOL v10 = (char *)(v8 + 2 * v9);
    uint64_t v11 = *(void *)(v7 + 56);
    if (v11) {
      uint64_t v12 = (google::protobuf::UninterpretedOption **)(v11 + 8);
    }
    else {
      uint64_t v12 = 0;
    }
    if (v9)
    {
      uint64_t v13 = 8 * v9;
      do
      {
        uint64_t v14 = *v12++;
        char v15 = google::protobuf::UninterpretedOption::ByteSizeLong(v14);
        BOOL v10 = &v10[(void)v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6)];
        v13 -= 8;
      }
      while (v13);
    }
    if (*(unsigned char *)(v7 + 8)) {
      BOOL v10 = google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(v7 + 8), (const google::protobuf::UnknownFieldSet *)v10, (_DWORD *)(v7 + 64));
    }
    else {
      *(_DWORD *)(v7 + 64) = v10;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v3
                                                       + 1
                                                       + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
  }
LABEL_18:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::OneofDescriptorProto *)((char *)this + 8), v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v3;
    return (char *)v3;
  }
}

void google::protobuf::OneofDescriptorProto::MergeFrom(google::protobuf::OneofDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4432);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::OneofDescriptorProto::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDFED7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFED90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofDescriptorProto::MergeFrom(google::protobuf::OneofDescriptorProto *this, const google::protobuf::OneofDescriptorProto *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4447);
    char v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      int v6 = *((_DWORD *)a2 + 4);
      if ((v6 & 3) == 0) {
        return;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  if (*v4)
  {
    google::protobuf::UnknownFieldSet::InternalMergeFrom((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8, v8);
    int v6 = *((_DWORD *)a2 + 4);
    if ((v6 & 3) == 0) {
      return;
    }
  }
  else
  {
    unsigned int v17 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v17, v8);
    int v6 = *((_DWORD *)a2 + 4);
    if ((v6 & 3) == 0) {
      return;
    }
  }
LABEL_8:
  if ((v6 & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v9 = (long long *)*((void *)a2 + 3);
  *((_DWORD *)this + 4) |= 1u;
  BOOL v10 = (std::string **)((char *)this + 24);
  uint64_t v11 = *((void *)this + 1);
  uint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
  if (v11)
  {
    uint64_t v12 = *(google::protobuf::Arena **)v12;
    uint64_t v13 = *v10;
    if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_11;
    }
LABEL_24:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v10, v12, v9);
    if ((v6 & 2) == 0) {
      return;
    }
    goto LABEL_13;
  }
  uint64_t v13 = *v10;
  if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_24;
  }
LABEL_11:
  std::string::operator=(v13, (const std::string *)v9);
LABEL_12:
  if ((v6 & 2) == 0) {
    return;
  }
LABEL_13:
  *((_DWORD *)this + 4) |= 2u;
  uint64_t v14 = (google::protobuf::OneofOptions *)*((void *)this + 4);
  if (!v14)
  {
    char v15 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      char v15 = *(google::protobuf::Arena **)v15;
    }
    uint64_t v14 = (google::protobuf::OneofOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v15);
    *((void *)this + 4) = v14;
  }
  if (*((void *)a2 + 4)) {
    unsigned int v16 = (const google::protobuf::OneofOptions *)*((void *)a2 + 4);
  }
  else {
    unsigned int v16 = (const google::protobuf::OneofOptions *)&google::protobuf::_OneofOptions_default_instance_;
  }
  google::protobuf::OneofOptions::MergeFrom(v14, v16);
}

void sub_23CDFEF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFEF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofOptions::MergeFrom(google::protobuf::OneofOptions *this, const google::protobuf::OneofOptions *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8150);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::OneofOptions *)((char *)this + 16), (const google::protobuf::OneofOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::OneofOptions *)((char *)this + 16), (const google::protobuf::OneofOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  int v6 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v7 = *((void *)this + 1);
  if (v7) {
    uint64_t v8 = (char *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v6);
LABEL_8:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40, (uint64_t)a2 + 40);
}

void sub_23CDFF058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFF06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofDescriptorProto::CopyFrom(google::protobuf::OneofDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::OneofDescriptorProto::Clear(this);
    google::protobuf::OneofDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::OneofDescriptorProto::IsInitialized(google::protobuf::OneofDescriptorProto *this)
{
  if ((*((_DWORD *)this + 4) & 2) == 0) {
    return 1;
  }
  uint64_t v3 = *((void *)this + 4);
  if (v3)
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 9267);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    uint64_t v3 = *((void *)this + 4);
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v3 + 40);
  if (result) {
    return 1;
  }
  return result;
}

void sub_23CDFF180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFF194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::OneofOptions::IsInitialized(google::protobuf::OneofOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::OneofOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 40);
  }
  return result;
}

uint64_t google::protobuf::OneofDescriptorProto::GetMetadata(google::protobuf::OneofDescriptorProto *this)
{
  return off_26AED0A18[14];
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::~EnumDescriptorProto_EnumReservedRange(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4541);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    char v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      int v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        int v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::EnumDescriptorProto_EnumReservedRange::~EnumDescriptorProto_EnumReservedRange(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CDFF318(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CDFF32C(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0) {
    *((void *)this + 3) = 0;
  }
  *((_DWORD *)this + 4) = 0;
  uint64_t v1 = *((void *)this + 1);
  if ((v1 & 1) != 0 && *(void *)((v1 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v1 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v1 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

google::protobuf::internal *google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unint64_t v29 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v29, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    uint64_t v8 = (void *)((char *)this + 8);
    while (1)
    {
      BOOL v10 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v11 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = v11 + (*(unsigned __int8 *)v10 << 7);
      unsigned int v11 = v12 - 128;
      if ((*(char *)v10 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v12 - 128));
      unint64_t v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_36;
      }
      BOOL v10 = TagFallback;
      unsigned int v11 = v20;
      unsigned int v13 = v20 >> 3;
      if (v20 >> 3 == 2)
      {
LABEL_28:
        if (v11 != 16) {
          goto LABEL_15;
        }
        v6 |= 2u;
        char v9 = (google::protobuf::internal *)((char *)v10 + 1);
        LODWORD(v21) = *(unsigned __int8 *)v10;
        if ((v21 & 0x80) == 0) {
          goto LABEL_5;
        }
        int v22 = *(char *)v9;
        unsigned int v21 = (const char *)(v21 + (v22 << 7) - 128);
        if ((v22 & 0x80000000) == 0)
        {
          char v9 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_5:
          unint64_t v29 = v9;
          *((_DWORD *)this + 7) = v21;
          goto LABEL_6;
        }
        size_t v23 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v21);
        unint64_t v29 = v23;
        *((_DWORD *)this + 7) = v24;
        if (!v23) {
          goto LABEL_36;
        }
        goto LABEL_6;
      }
LABEL_11:
      if (v13 != 1 || v11 != 8)
      {
LABEL_15:
        if (v11) {
          BOOL v15 = (v11 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15)
        {
          *((_DWORD *)a3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v11 - 1;
          goto LABEL_2;
        }
        if (*v8)
        {
          unint64_t v29 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v10, (const char *)a3, v5);
          if (!v29) {
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v27 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
          unint64_t v29 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)v27, v29, (const char *)a3, v28);
          if (!v29)
          {
LABEL_36:
            unint64_t v29 = 0;
            goto LABEL_2;
          }
        }
        goto LABEL_6;
      }
      v6 |= 1u;
      unsigned int v17 = (google::protobuf::internal *)((char *)v10 + 1);
      LODWORD(v16) = *(unsigned __int8 *)v10;
      if ((v16 & 0x80) == 0) {
        goto LABEL_25;
      }
      int v18 = *(char *)v17;
      unsigned int v16 = (const char *)(v16 + (v18 << 7) - 128);
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v17 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_25:
        unint64_t v29 = v17;
        *((_DWORD *)this + 6) = v16;
        goto LABEL_6;
      }
      int v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v16);
      unint64_t v29 = v25;
      *((_DWORD *)this + 6) = v26;
      if (!v25) {
        goto LABEL_36;
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v29, *((_DWORD *)a3 + 23))) {
        goto LABEL_2;
      }
    }
    BOOL v10 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_10:
    unint64_t v29 = v10;
    unsigned int v13 = v11 >> 3;
    if (v11 >> 3 == 2) {
      goto LABEL_28;
    }
    goto LABEL_11;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return v29;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalSerialize(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_16:
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unint64_t v13 = *((int *)this + 7);
      *a2 = 16;
      if (v13 <= 0x7F)
      {
LABEL_18:
        a2[1] = v13;
        a2 += 2;
        uint64_t v7 = *((void *)this + 1);
        if ((v7 & 1) == 0) {
          return (const google::protobuf::UnknownFieldSet *)a2;
        }
        goto LABEL_19;
      }
    }
    else
    {
      unint64_t v13 = *((int *)this + 7);
      *a2 = 16;
      if (v13 <= 0x7F) {
        goto LABEL_18;
      }
    }
    a2[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    if (v13 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v14 | 0x80;
        unint64_t v15 = v14 >> 7;
        ++a2;
        unint64_t v16 = v14 >> 14;
        v14 >>= 7;
      }
      while (v16);
      *(a2 - 1) = v15;
      uint64_t v7 = *((void *)this + 1);
      if ((v7 & 1) == 0) {
        return (const google::protobuf::UnknownFieldSet *)a2;
      }
    }
    else
    {
      a2[2] = v14;
      a2 += 3;
      uint64_t v7 = *((void *)this + 1);
      if ((v7 & 1) == 0) {
        return (const google::protobuf::UnknownFieldSet *)a2;
      }
    }
    goto LABEL_19;
  }
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    unint64_t v9 = *((int *)this + 6);
    *a2 = 8;
    if (v9 <= 0x7F)
    {
LABEL_7:
      a2[1] = v9;
      a2 += 2;
      if ((v6 & 2) != 0) {
        goto LABEL_16;
      }
      goto LABEL_3;
    }
  }
  else
  {
    unint64_t v9 = *((int *)this + 6);
    *a2 = 8;
    if (v9 <= 0x7F) {
      goto LABEL_7;
    }
  }
  a2[1] = v9 | 0x80;
  unint64_t v10 = v9 >> 7;
  if (v9 >> 14)
  {
    a2 += 3;
    do
    {
      *(a2 - 1) = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      ++a2;
      unint64_t v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
    *(a2 - 1) = v11;
    if ((v6 & 2) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    a2[2] = v10;
    a2 += 3;
    if ((v6 & 2) != 0) {
      goto LABEL_16;
    }
  }
LABEL_3:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
LABEL_19:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::EnumDescriptorProto_EnumReservedRange::ByteSizeLong(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *((_DWORD *)this + 6);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *((_DWORD *)this + 7);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumDescriptorProto_EnumReservedRange *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4686);
    int v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CDFF900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFF914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, const google::protobuf::EnumDescriptorProto_EnumReservedRange *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4701);
    int v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 3) == 0) {
        return;
      }
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v8 = *((void *)this + 1);
  if (v8)
  {
    google::protobuf::UnknownFieldSet::InternalMergeFrom((v8 & 0xFFFFFFFFFFFFFFFELL) + 8, v7);
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 3) == 0) {
      return;
    }
  }
  else
  {
    unint64_t v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v7);
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 3) == 0) {
      return;
    }
  }
LABEL_8:
  if (v5) {
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  }
  if ((v5 & 2) != 0) {
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  }
  *((_DWORD *)this + 4) |= v5;
}

void sub_23CDFFA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFFA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::CopyFrom(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    if ((*((unsigned char *)this + 16) & 3) != 0) {
      *((void *)this + 3) = 0;
    }
    *((_DWORD *)this + 4) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::IsInitialized(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return 1;
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::GetMetadata(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return off_26AED0A18[16];
}

void google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(google::protobuf::EnumDescriptorProto *this)
{
  google::protobuf::EnumDescriptorProto::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      int v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        int v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 72);
  google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::~RepeatedPtrField((uint64_t)this + 24);
}

{
  uint64_t vars8;

  google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::EnumDescriptorProto::SharedDtor(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4817);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 12);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::EnumDescriptorProto *)&google::protobuf::_EnumDescriptorProto_default_instance_)
  {
    char v7 = (google::protobuf::EnumOptions *)*((void *)this + 13);
    if (v7)
    {
      google::protobuf::EnumOptions::~EnumOptions(v7);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CDFFCBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFFCD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EnumDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::EnumDescriptorProto::Clear(google::protobuf::EnumDescriptorProto *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)this + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((uint64_t)this + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0) {
    goto LABEL_12;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 12);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
      goto LABEL_6;
    }
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = *((void *)this + 13);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 4852);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)this + 13);
  }
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v4 + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v4 + 48);
  *(_WORD *)(v4 + 72) = 0;
  *(_DWORD *)(v4 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v6 & 1) != 0 && *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v6 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
LABEL_12:
  *((_DWORD *)this + 4) = 0;
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) != 0 && *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CDFFE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CDFFE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumOptions::Clear(google::protobuf::EnumOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::EnumOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
  *((_WORD *)this + 36) = 0;
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::EnumDescriptorProto::_InternalParse(google::protobuf::EnumDescriptorProto *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    int v56 = (unint64_t *)((char *)this + 8);
    uint64_t v7 = (uint64_t *)((char *)this + 72);
    char v8 = (uint64_t **)((char *)this + 96);
    while (1)
    {
      char v10 = __s + 1;
      unsigned int v11 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = v11 + (*v10 << 7);
      unsigned int v11 = v12 - 128;
      if ((*v10 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v12 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v10 = TagFallback;
      unsigned int v11 = v51;
      unsigned int v13 = (v51 >> 3) - 1;
      if (v13 <= 4) {
        goto LABEL_11;
      }
LABEL_72:
      if (v11) {
        BOOL v52 = (v11 & 7) == 4;
      }
      else {
        BOOL v52 = 1;
      }
      if (v52)
      {
        a3[10].i32[0] = v11 - 1;
        return __s;
      }
      if (*v56)
      {
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v56 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v10, (const char *)a3, v5);
        if (!__s) {
          return 0;
        }
      }
      else
      {
        uint64_t v54 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v56);
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)v54, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v55);
        if (!__s) {
          return 0;
        }
      }
LABEL_83:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))return __s; {
    }
      }
    char v10 = __s + 2;
LABEL_10:
    __s = v10;
    unsigned int v13 = (v11 >> 3) - 1;
LABEL_11:
    switch(v13)
    {
      case 0u:
        if (v11 != 10) {
          goto LABEL_72;
        }
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v14 = *((void *)this + 1);
        unint64_t v15 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
        if ((v14 & 1) == 0)
        {
          unint64_t v16 = *v8;
          if (*v8 != &google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_16;
          }
LABEL_15:
          google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, v15, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          unint64_t v16 = *v8;
          char v10 = __s;
          goto LABEL_16;
        }
        unint64_t v15 = *(google::protobuf::Arena **)v15;
        unint64_t v16 = *v8;
        if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_15;
        }
LABEL_16:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v16, v10, (uint64_t)a3);
        if (*((char *)v16 + 23) < 0)
        {
          uint64_t v53 = (uint64_t *)*v16;
          size_t v18 = v16[1];
          if ((v18 & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v16[1], "size_t to int conversion", v17);
          }
          unint64_t v16 = v53;
        }
        else
        {
          size_t v18 = *((unsigned __int8 *)v16 + 23);
        }
        google::protobuf::internal::VerifyUTF8(v16, v18, (google::protobuf::internal *)"google.protobuf.EnumDescriptorProto.name");
        if (__s) {
          goto LABEL_83;
        }
        return 0;
      case 1u:
        if (v11 != 18) {
          goto LABEL_72;
        }
        unsigned int v19 = v10 - 1;
        while (1)
        {
          unsigned int v20 = v19 + 1;
          __s = v19 + 1;
          unsigned int v21 = (int *)*((void *)this + 5);
          if (!v21) {
            break;
          }
          uint64_t v22 = *((int *)this + 8);
          int v23 = *v21;
          if ((int)v22 >= *v21)
          {
            if (v23 == *((_DWORD *)this + 9))
            {
LABEL_25:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v23 + 1);
              unsigned int v21 = (int *)*((void *)this + 5);
              int v23 = *v21;
            }
            *unsigned int v21 = v23 + 1;
            int v24 = (google::protobuf::EnumValueDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(*((google::protobuf::Arena **)this + 3));
            uint64_t v25 = *((void *)this + 5);
            uint64_t v26 = *((int *)this + 8);
            *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v26 + 1;
            *(void *)(v25 + 8 * v26 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v24;
            unsigned int v20 = __s;
            goto LABEL_27;
          }
          *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v22 + 1;
          int v24 = *(google::protobuf::EnumValueDescriptorProto **)&v21[2 * v22 + 2];
LABEL_27:
          unsigned int v19 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumValueDescriptorProto>(a3, v24, v20);
          __s = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
            goto LABEL_83;
          }
        }
        int v23 = *((_DWORD *)this + 9);
        goto LABEL_25;
      case 2u:
        if (v11 != 26) {
          goto LABEL_72;
        }
        *((_DWORD *)this + 4) |= 2u;
        unint64_t v9 = (google::protobuf::EnumOptions *)*((void *)this + 13);
        if (!v9)
        {
          uint64_t v27 = (google::protobuf::Arena *)(*v56 & 0xFFFFFFFFFFFFFFFELL);
          if (*v56) {
            uint64_t v27 = *(google::protobuf::Arena **)v27;
          }
          unint64_t v9 = (google::protobuf::EnumOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v27);
          *((void *)this + 13) = v9;
          char v10 = __s;
        }
        __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumOptions>(a3, v9, (google::protobuf::internal *)v10);
        if (!__s) {
          return 0;
        }
        goto LABEL_83;
      case 3u:
        if (v11 != 34) {
          goto LABEL_72;
        }
        unint64_t v28 = v10 - 1;
        while (1)
        {
          unint64_t v29 = v28 + 1;
          __s = v28 + 1;
          unint64_t v30 = (int *)*((void *)this + 8);
          if (!v30) {
            break;
          }
          uint64_t v31 = *((int *)this + 14);
          int v32 = *v30;
          if ((int)v31 >= *v30)
          {
            if (v32 == *((_DWORD *)this + 15))
            {
LABEL_42:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v32 + 1);
              unint64_t v30 = (int *)*((void *)this + 8);
              int v32 = *v30;
            }
            *unint64_t v30 = v32 + 1;
            int v33 = (google::protobuf::EnumDescriptorProto_EnumReservedRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(*((google::protobuf::Arena **)this + 6));
            uint64_t v34 = *((void *)this + 8);
            uint64_t v35 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v35 + 1;
            *(void *)(v34 + 8 * v35 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v33;
            unint64_t v29 = __s;
            goto LABEL_44;
          }
          *((_DWORD *)this + 14) = v31 + 1;
          int v33 = *(google::protobuf::EnumDescriptorProto_EnumReservedRange **)&v30[2 * v31 + 2];
LABEL_44:
          unint64_t v28 = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>((google::protobuf::internal::ParseContext *)a3, v33, (google::protobuf::internal *)v29);
          __s = v28;
          if (!v28) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 34) {
            goto LABEL_83;
          }
        }
        int v32 = *((_DWORD *)this + 15);
        goto LABEL_42;
      case 4u:
        if (v11 != 42) {
          goto LABEL_72;
        }
        int v36 = v10 - 1;
        break;
      default:
        goto LABEL_72;
    }
    while (1)
    {
      int v37 = v36 + 1;
      __s = v36 + 1;
      char v38 = (int *)*((void *)this + 11);
      if (!v38) {
        break;
      }
      uint64_t v39 = *((int *)this + 20);
      int v40 = *v38;
      if ((int)v39 < *v38)
      {
        *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v39 + 1;
        AlignedAndAddCleanup = *(std::string **)&v38[2 * v39 + 2];
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v37, (uint64_t)a3);
        int v43 = SHIBYTE(AlignedAndAddCleanup->__r_.__value_.__r.__words[2]);
        if (v43 < 0) {
          goto LABEL_53;
        }
        goto LABEL_65;
      }
      if (v40 == *((_DWORD *)this + 21)) {
        goto LABEL_58;
      }
LABEL_59:
      *char v38 = v40 + 1;
      unsigned int v46 = (atomic_ullong *)*v7;
      if (!*v7) {
        operator new();
      }
      if (v46[14]) {
      AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v46, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
      AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
      uint64_t v47 = *((void *)this + 11);
      uint64_t v48 = *((int *)this + 20);
      *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v48 + 1;
      *(void *)(v47 + 8 * v48 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = AlignedAndAddCleanup;
      unint64_t v49 = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, __s, (uint64_t)a3);
      __s = v49;
      int v43 = SHIBYTE(AlignedAndAddCleanup->__r_.__value_.__r.__words[2]);
      if (v43 < 0)
      {
LABEL_53:
        unsigned int v44 = (std::string *)AlignedAndAddCleanup->__r_.__value_.__r.__words[0];
        size_t size = AlignedAndAddCleanup->__r_.__value_.__l.__size_;
        if ((size & 0x8000000000000000) != 0) {
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)AlignedAndAddCleanup->__r_.__value_.__l.__size_, "size_t to int conversion", v42);
        }
        AlignedAndAddCleanup = v44;
        goto LABEL_66;
      }
LABEL_65:
      size_t size = v43;
LABEL_66:
      google::protobuf::internal::VerifyUTF8(AlignedAndAddCleanup, size, (google::protobuf::internal *)"google.protobuf.EnumDescriptorProto.reserved_name");
      int v36 = __s;
      if (!__s) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)__s || *__s != 42) {
        goto LABEL_83;
      }
    }
    int v40 = *((_DWORD *)this + 21);
LABEL_58:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 18, v40 + 1);
    char v38 = (int *)*((void *)this + 11);
    int v40 = *v38;
    goto LABEL_59;
  }
  return __s;
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumValueDescriptorProto>(int32x2_t *a1, google::protobuf::EnumValueDescriptorProto *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumValueDescriptorProto::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CE00600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE00614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumOptions>(int32x2_t *a1, google::protobuf::EnumOptions *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CE00770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE00784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(google::protobuf::internal::ParseContext *a1, google::protobuf::EnumDescriptorProto_EnumReservedRange *this, google::protobuf::internal *a3)
{
  unsigned int v5 = *(unsigned __int8 *)a3;
  if (*(char *)a3 < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(a3, (const char *)*(unsigned __int8 *)a3);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)a3 + 1);
  }
  uint64_t v7 = *((void *)a1 + 1);
  int v8 = v5 + v6 - v7;
  *(void *)a1 = v7 + (v8 & (v8 >> 31));
  int v9 = *((_DWORD *)a1 + 7);
  *((_DWORD *)a1 + 7) = v8;
  LODWORD(v7) = *((_DWORD *)a1 + 22);
  BOOL v10 = __OFSUB__(v7, 1);
  LODWORD(v7) = v7 - 1;
  *((_DWORD *)a1 + 22) = v7;
  if ((int)v7 < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse(this, v6, a1);
  if (result)
  {
    ++*((_DWORD *)a1 + 22);
    if (!*((_DWORD *)a1 + 20))
    {
      int v12 = *((_DWORD *)a1 + 7) + v9 - v8;
      *((_DWORD *)a1 + 7) = v12;
      *(void *)a1 = *((void *)a1 + 1) + (v12 & (v12 >> 31));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CE008E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE008F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumDescriptorProto::_InternalSerialize(google::protobuf::EnumDescriptorProto *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 1) == 0) {
    goto LABEL_13;
  }
  int v8 = (unsigned __int8 *)*((void *)this + 12);
  if ((char)v8[23] < 0)
  {
    int v8 = *(unsigned __int8 **)v8;
    int v9 = *(const char **)(*((void *)this + 12) + 8);
  }
  else
  {
    int v9 = (const char *)v8[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v8, v9, 1, (google::protobuf::internal *)"google.protobuf.EnumDescriptorProto.name");
  uint64_t v10 = *((void *)this + 12);
  if (*(char *)(v10 + 23) < 0)
  {
    int64_t v11 = *(void *)(v10 + 8);
    if (v11 > 127) {
      goto LABEL_25;
    }
  }
  else
  {
    int64_t v11 = *(unsigned __int8 *)(v10 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v11)
  {
LABEL_25:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v10, (char *)a2);
    int v13 = *((_DWORD *)this + 8);
    if (!v13) {
      goto LABEL_26;
    }
    goto LABEL_14;
  }
  *(unsigned char *)a2 = 10;
  *((unsigned char *)a2 + 1) = v11;
  if (*(char *)(v10 + 23) >= 0) {
    int v12 = (const void *)v10;
  }
  else {
    int v12 = *(const void **)v10;
  }
  memcpy((char *)a2 + 2, v12, v11);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v11 + 2);
LABEL_13:
  int v13 = *((_DWORD *)this + 8);
  if (!v13) {
    goto LABEL_26;
  }
LABEL_14:
  for (int i = 0; i != v13; ++i)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    }
    unint64_t v16 = (google::protobuf::EnumValueDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)this + 24, i);
    *(unsigned char *)a2 = 18;
    unsigned int v18 = *((_DWORD *)v16 + 5);
    if (v18 <= 0x7F)
    {
      *((unsigned char *)a2 + 1) = v18;
      char v15 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    else
    {
      *((unsigned char *)a2 + 1) = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      if (v18 >> 14)
      {
        char v15 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)v15 - 1) = v19 | 0x80;
          unsigned int v20 = v19 >> 7;
          char v15 = (google::protobuf::UnknownFieldSet *)((char *)v15 + 1);
          unsigned int v21 = v19 >> 14;
          v19 >>= 7;
        }
        while (v21);
        *((unsigned char *)v15 - 1) = v20;
      }
      else
      {
        *((unsigned char *)a2 + 2) = v19;
        char v15 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
      }
    }
    a2 = google::protobuf::EnumValueDescriptorProto::_InternalSerialize(v16, v15, a3, v17);
  }
LABEL_26:
  if ((v7 & 2) == 0) {
    goto LABEL_37;
  }
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    uint64_t v22 = (google::protobuf::EnumOptions *)*((void *)this + 13);
    *(unsigned char *)a2 = 26;
    unsigned int v23 = *((_DWORD *)v22 + 11);
    if (v23 <= 0x7F) {
      goto LABEL_29;
    }
LABEL_31:
    *((unsigned char *)a2 + 1) = v23 | 0x80;
    unsigned int v25 = v23 >> 7;
    if (v23 >> 14)
    {
      int v24 = (char *)a2 + 3;
      do
      {
        *(v24 - 1) = v25 | 0x80;
        unsigned int v26 = v25 >> 7;
        ++v24;
        unsigned int v27 = v25 >> 14;
        v25 >>= 7;
      }
      while (v27);
      *(v24 - 1) = v26;
    }
    else
    {
      *((unsigned char *)a2 + 2) = v25;
      int v24 = (char *)a2 + 3;
    }
    goto LABEL_36;
  }
  uint64_t v22 = (google::protobuf::EnumOptions *)*((void *)this + 13);
  *(unsigned char *)a2 = 26;
  unsigned int v23 = *((_DWORD *)v22 + 11);
  if (v23 > 0x7F) {
    goto LABEL_31;
  }
LABEL_29:
  *((unsigned char *)a2 + 1) = v23;
  int v24 = (char *)a2 + 2;
LABEL_36:
  a2 = google::protobuf::EnumOptions::_InternalSerialize(v22, v24, a3);
LABEL_37:
  int v28 = *((_DWORD *)this + 14);
  if (v28)
  {
    for (int j = 0; j != v28; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      uint64_t v31 = (google::protobuf::EnumDescriptorProto_EnumReservedRange *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((uint64_t)this + 48, j);
      *(unsigned char *)a2 = 34;
      unsigned int v33 = *((_DWORD *)v31 + 5);
      if (v33 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = v33;
        unint64_t v30 = (char *)a2 + 2;
      }
      else
      {
        *((unsigned char *)a2 + 1) = v33 | 0x80;
        unsigned int v34 = v33 >> 7;
        if (v33 >> 14)
        {
          unint64_t v30 = (char *)a2 + 3;
          do
          {
            *(v30 - 1) = v34 | 0x80;
            unsigned int v35 = v34 >> 7;
            ++v30;
            unsigned int v36 = v34 >> 14;
            v34 >>= 7;
          }
          while (v36);
          *(v30 - 1) = v35;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v34;
          unint64_t v30 = (char *)a2 + 3;
        }
      }
      a2 = google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalSerialize(v31, v30, a3, v32);
    }
  }
  int v37 = *((_DWORD *)this + 20);
  if (v37 >= 1)
  {
    int v38 = 0;
    while (1)
    {
      uint64_t v39 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, v38);
      uint64_t v40 = v39;
      unsigned int v41 = *(_DWORD *)(v39 + 8);
      if (*(char *)(v39 + 23) >= 0)
      {
        unint64_t v42 = *(unsigned __int8 *)(v39 + 23);
      }
      else
      {
        uint64_t v39 = *(void *)v39;
        unint64_t v42 = v41;
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v39, (const char *)v42, 1, (google::protobuf::internal *)"google.protobuf.EnumDescriptorProto.reserved_name");
      if ((*(char *)(v40 + 23) & 0x80000000) == 0) {
        break;
      }
      int64_t v43 = *(void *)(v40 + 8);
      if (v43 > 127)
      {
LABEL_63:
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 5, v40, (char *)a2);
        if (v37 == ++v38) {
          goto LABEL_64;
        }
      }
      else
      {
LABEL_57:
        if (*(void *)a3 - (void)a2 + 14 < v43) {
          goto LABEL_63;
        }
        *(unsigned char *)a2 = 42;
        *((unsigned char *)a2 + 1) = v43;
        if (*(char *)(v40 + 23) >= 0) {
          unsigned int v44 = (const void *)v40;
        }
        else {
          unsigned int v44 = *(const void **)v40;
        }
        memcpy((char *)a2 + 2, v44, v43);
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v43 + 2);
        if (v37 == ++v38) {
          goto LABEL_64;
        }
      }
    }
    int64_t v43 = *(unsigned __int8 *)(v40 + 23);
    goto LABEL_57;
  }
LABEL_64:
  uint64_t v45 = *((void *)this + 1);
  if ((v45 & 1) == 0) {
    return a2;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v45 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::EnumDescriptorProto::ByteSizeLong(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (google::protobuf::EnumValueDescriptorProto **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      int v7 = google::protobuf::EnumValueDescriptorProto::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    uint64_t v11 = v10 + 8;
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    for (uint64_t i = 8 * v8; i; i -= 8)
    {
      int v13 = *(_DWORD **)v11;
      int v14 = *(_DWORD *)(*(void *)v11 + 16);
      if ((v14 & 3) != 0)
      {
        if (v14)
        {
          int v16 = v13[6];
          if (v16 < 0)
          {
            uint64_t v15 = 11;
            if ((v14 & 2) != 0)
            {
LABEL_23:
              int v17 = v13[7];
              if (v17 < 0) {
                uint64_t v18 = 11;
              }
              else {
                uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
              }
              v15 += v18;
            }
          }
          else
          {
            uint64_t v15 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
            if ((v14 & 2) != 0) {
              goto LABEL_23;
            }
          }
        }
        else
        {
          uint64_t v15 = 0;
          if ((v14 & 2) != 0) {
            goto LABEL_23;
          }
        }
      }
      else
      {
        uint64_t v15 = 0;
      }
      if (v13[2]) {
        uint64_t v15 = (uint64_t)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(v13 + 2), (const google::protobuf::UnknownFieldSet *)v15, v13 + 5);
      }
      else {
        v13[5] = v15;
      }
      v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v11 += 8;
    }
  }
  uint64_t v19 = *((unsigned int *)this + 20);
  unsigned int v20 = (const google::protobuf::UnknownFieldSet *)(v9 + v19);
  if ((int)v19 >= 1)
  {
    int v21 = 0;
    do
    {
      uint64_t v22 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, v21);
      uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
      if ((v23 & 0x80u) != 0) {
        uint64_t v23 = *(void *)(v22 + 8);
      }
      unsigned int v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6));
      ++v21;
    }
    while (v19 != v21);
  }
  int v24 = *((_DWORD *)this + 4);
  if ((v24 & 3) != 0)
  {
    if (v24)
    {
      uint64_t v25 = *((void *)this + 12);
      uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
      uint64_t v27 = *(void *)(v25 + 8);
      if ((v26 & 0x80u) == 0) {
        uint64_t v27 = v26;
      }
      unsigned int v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + v27
                                                                    + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
    }
    if ((v24 & 2) != 0)
    {
      int v28 = google::protobuf::EnumOptions::ByteSizeLong(*((google::protobuf::EnumOptions **)this + 13));
      unsigned int v20 = (const google::protobuf::UnknownFieldSet *)&v28[((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v20];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumDescriptorProto *)((char *)this + 8), v20, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v20;
    return (char *)v20;
  }
}

void google::protobuf::EnumDescriptorProto::MergeFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5067);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::EnumDescriptorProto::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE010E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE010FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptorProto::MergeFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::EnumDescriptorProto *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5082);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  if (*v4) {
    uint64_t v8 = (char *)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v7);
LABEL_8:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, (uint64_t)a2 + 72);
  int v9 = *((_DWORD *)a2 + 4);
  if ((v9 & 3) == 0) {
    return;
  }
  if ((v9 & 1) == 0)
  {
LABEL_13:
    if ((v9 & 2) == 0) {
      return;
    }
    goto LABEL_14;
  }
  uint64_t v10 = (std::string *)*((void *)a2 + 12);
  *((_DWORD *)this + 4) |= 1u;
  uint64_t v11 = (std::string **)((char *)this + 96);
  uint64_t v12 = *((void *)this + 1);
  int v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
  if (v12)
  {
    int v13 = *(google::protobuf::Arena **)v13;
    int v14 = *v11;
    if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_12;
    }
  }
  else
  {
    int v14 = *v11;
    if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_12:
      std::string::operator=(v14, v10);
      goto LABEL_13;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v11, v13, (long long *)v10);
  if ((v9 & 2) == 0) {
    return;
  }
LABEL_14:
  *((_DWORD *)this + 4) |= 2u;
  uint64_t v15 = (google::protobuf::EnumOptions *)*((void *)this + 13);
  if (!v15)
  {
    int v16 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      int v16 = *(google::protobuf::Arena **)v16;
    }
    uint64_t v15 = (google::protobuf::EnumOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v16);
    *((void *)this + 13) = v15;
  }
  if (*((void *)a2 + 13)) {
    int v17 = (const google::protobuf::EnumOptions *)*((void *)a2 + 13);
  }
  else {
    int v17 = (const google::protobuf::EnumOptions *)&google::protobuf::_EnumOptions_default_instance_;
  }
  google::protobuf::EnumOptions::MergeFrom(v15, v17);
}

void sub_23CE012B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE012C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumOptions::MergeFrom(google::protobuf::EnumOptions *this, const google::protobuf::EnumOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::EnumOptions *)((char *)this + 16), (const google::protobuf::EnumOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    uint64_t v8 = *((void *)this + 1);
    if (v8) {
      int v9 = (char *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      int v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
    }
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v7);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
    int v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 3) == 0) {
      return;
    }
    goto LABEL_9;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8437);
  uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v6);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::EnumOptions *)((char *)this + 16), (const google::protobuf::EnumOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  int v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 3) == 0) {
    return;
  }
LABEL_9:
  if (v5) {
    *((unsigned char *)this + 72) = *((unsigned char *)a2 + 72);
  }
  if ((v5 & 2) != 0) {
    *((unsigned char *)this + 73) = *((unsigned char *)a2 + 73);
  }
  *((_DWORD *)this + 10) |= v5;
}

void sub_23CE01410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE01424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptorProto::CopyFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumDescriptorProto::Clear(this);
    google::protobuf::EnumDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::EnumDescriptorProto::IsInitialized(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2 = (char *)this + 24;
  int v3 = *((_DWORD *)this + 8);
  while (1)
  {
    BOOL v4 = __OFSUB__(v3--, 1);
    if (v3 < 0 != v4) {
      break;
    }
    int v5 = (google::protobuf::EnumValueDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)v2, v3);
    if ((google::protobuf::EnumValueDescriptorProto::IsInitialized(v5) & 1) == 0) {
      return 0;
    }
  }
  if ((*((_DWORD *)this + 4) & 2) == 0) {
    return 1;
  }
  uint64_t v7 = *((void *)this + 13);
  if (!v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 9544);
    uint64_t v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v7 = *((void *)this + 13);
  }
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v7 + 16));
  if (result)
  {
    uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v7 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

void sub_23CE01560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE01574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EnumOptions::IsInitialized(google::protobuf::EnumOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::EnumOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::EnumDescriptorProto::GetMetadata(google::protobuf::EnumDescriptorProto *this)
{
  return off_26AED0A18[18];
}

void google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(google::protobuf::EnumValueDescriptorProto *this)
{
  google::protobuf::EnumValueDescriptorProto::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      uint64_t v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        uint64_t v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::EnumValueDescriptorProto::SharedDtor(google::protobuf::EnumValueDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5203);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 3);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::EnumValueDescriptorProto *)&google::protobuf::_EnumValueDescriptorProto_default_instance_)
  {
    uint64_t v7 = (google::protobuf::EnumValueOptions *)*((void *)this + 4);
    if (v7)
    {
      google::protobuf::EnumValueOptions::~EnumValueOptions(v7);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CE01790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE017A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EnumValueDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::EnumValueDescriptorProto::Clear(google::protobuf::EnumValueDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0) {
    goto LABEL_12;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 3);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
      goto LABEL_6;
    }
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = *((void *)this + 4);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5235);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)this + 4);
  }
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v4 + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v4 + 48);
  *(unsigned char *)(v4 + 72) = 0;
  *(_DWORD *)(v4 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v6 & 1) != 0 && *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v6 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
LABEL_12:
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((_DWORD *)this + 4) = 0;
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) != 0 && *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CE01900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE01914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueOptions::Clear(google::protobuf::EnumValueOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::EnumValueOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
  *((unsigned char *)this + 72) = 0;
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::EnumValueDescriptorProto::_InternalParse(google::protobuf::EnumValueDescriptorProto *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    char v8 = (void *)((char *)this + 8);
    char v9 = (uint64_t **)((char *)this + 24);
    while (1)
    {
      uint64_t v11 = __s + 1;
      unsigned int v12 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v13 = v12 + (*v11 << 7);
      unsigned int v12 = v13 - 128;
      if ((*v11 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v13 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        goto LABEL_50;
      }
      uint64_t v11 = TagFallback;
      unsigned int v12 = v26;
      unsigned int v14 = v26 >> 3;
      if (v26 >> 3 == 3)
      {
LABEL_36:
        if (v12 == 26)
        {
          *((_DWORD *)this + 4) |= 2u;
          char v10 = (google::protobuf::EnumValueOptions *)*((void *)this + 4);
          if (!v10)
          {
            uint64_t v27 = (google::protobuf::Arena *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
            if (*v8) {
              uint64_t v27 = *(google::protobuf::Arena **)v27;
            }
            char v10 = (google::protobuf::EnumValueOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v27);
            *((void *)this + 4) = v10;
            uint64_t v11 = __s;
          }
          __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumValueOptions>(a3, v10, (google::protobuf::internal *)v11);
          if (!__s)
          {
LABEL_50:
            __s = 0;
            goto LABEL_2;
          }
          goto LABEL_6;
        }
        goto LABEL_16;
      }
LABEL_11:
      if (v14 != 2)
      {
        if (v14 == 1 && v12 == 10)
        {
          *((_DWORD *)this + 4) |= 1u;
          uint64_t v20 = *((void *)this + 1);
          int v21 = (google::protobuf::Arena *)(v20 & 0xFFFFFFFFFFFFFFFELL);
          if (v20)
          {
            int v21 = *(google::protobuf::Arena **)v21;
            uint64_t v22 = *v9;
            if (*v9 == &google::protobuf::internal::fixed_address_empty_string)
            {
LABEL_31:
              google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, v21, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              uint64_t v22 = *v9;
              uint64_t v11 = __s;
            }
          }
          else
          {
            uint64_t v22 = *v9;
            if (*v9 == &google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_31;
            }
          }
          __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v22, v11, (uint64_t)a3);
          if (*((char *)v22 + 23) < 0)
          {
            int v28 = (uint64_t *)*v22;
            size_t v24 = v22[1];
            if ((v24 & 0x8000000000000000) != 0) {
              google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v22[1], "size_t to int conversion", v23);
            }
            uint64_t v22 = v28;
          }
          else
          {
            size_t v24 = *((unsigned __int8 *)v22 + 23);
          }
          google::protobuf::internal::VerifyUTF8(v22, v24, (google::protobuf::internal *)"google.protobuf.EnumValueDescriptorProto.name");
          if (!__s) {
            goto LABEL_50;
          }
          goto LABEL_6;
        }
        goto LABEL_16;
      }
      if (v12 == 16)
      {
        v6 |= 4u;
        char v18 = v11 + 1;
        LODWORD(v17) = *v11;
        if ((v17 & 0x80) != 0)
        {
          int v19 = *v18;
          int v17 = (const char *)(v17 + (v19 << 7) - 128);
          if (v19 < 0)
          {
            unint64_t v29 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v11, v17);
            __s = v29;
            *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v30;
            if (!v29) {
              goto LABEL_50;
            }
            goto LABEL_6;
          }
          char v18 = v11 + 2;
        }
        __s = v18;
        *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v17;
        if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))goto LABEL_2; {
      }
        }
      else
      {
LABEL_16:
        if (v12) {
          BOOL v16 = (v12 & 7) == 4;
        }
        else {
          BOOL v16 = 1;
        }
        if (v16)
        {
          a3[10].i32[0] = v12 - 1;
          goto LABEL_2;
        }
        if (*v8)
        {
          __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v11, (const char *)a3, v5);
          if (!__s) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v31 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
          __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, (google::protobuf::UnknownFieldSet *)v31, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v32);
          if (!__s) {
            goto LABEL_50;
          }
        }
LABEL_6:
        if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))goto LABEL_2; {
      }
        }
    }
    uint64_t v11 = __s + 2;
LABEL_10:
    __s = v11;
    unsigned int v14 = v12 >> 3;
    if (v12 >> 3 == 3) {
      goto LABEL_36;
    }
    goto LABEL_11;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return __s;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::EnumValueOptions>(int32x2_t *a1, google::protobuf::EnumValueOptions *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unsigned int v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumValueOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CE01DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE01DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumValueDescriptorProto::_InternalSerialize(google::protobuf::EnumValueDescriptorProto *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if (v7)
  {
    BOOL v10 = (unsigned __int8 *)*((void *)this + 3);
    if ((char)v10[23] < 0)
    {
      BOOL v10 = *(unsigned __int8 **)v10;
      uint64_t v11 = *(const char **)(*((void *)this + 3) + 8);
    }
    else
    {
      uint64_t v11 = (const char *)v10[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v10, v11, 1, (google::protobuf::internal *)"google.protobuf.EnumValueDescriptorProto.name");
    uint64_t v12 = *((void *)this + 3);
    if (*(char *)(v12 + 23) < 0)
    {
      int64_t v13 = *(void *)(v12 + 8);
      if (v13 > 127) {
        goto LABEL_21;
      }
    }
    else
    {
      int64_t v13 = *(unsigned __int8 *)(v12 + 23);
    }
    if (*(void *)a3 - (void)a2 + 14 >= v13)
    {
      *(unsigned char *)a2 = 10;
      *((unsigned char *)a2 + 1) = v13;
      if (*(char *)(v12 + 23) >= 0) {
        unsigned int v14 = (const void *)v12;
      }
      else {
        unsigned int v14 = *(const void **)v12;
      }
      memcpy((char *)a2 + 2, v14, v13);
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v13 + 2);
      if ((v7 & 4) != 0) {
        goto LABEL_17;
      }
LABEL_3:
      if ((v7 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_30:
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        int v19 = (google::protobuf::EnumValueOptions *)*((void *)this + 4);
        *(unsigned char *)a2 = 26;
        unsigned int v20 = *((_DWORD *)v19 + 11);
        if (v20 <= 0x7F)
        {
LABEL_32:
          *((unsigned char *)a2 + 1) = v20;
          a2 = google::protobuf::EnumValueOptions::_InternalSerialize(v19, (char *)a2 + 2, a3);
          uint64_t v8 = *((void *)this + 1);
          if ((v8 & 1) == 0) {
            return a2;
          }
          goto LABEL_41;
        }
      }
      else
      {
        int v19 = (google::protobuf::EnumValueOptions *)*((void *)this + 4);
        *(unsigned char *)a2 = 26;
        unsigned int v20 = *((_DWORD *)v19 + 11);
        if (v20 <= 0x7F) {
          goto LABEL_32;
        }
      }
      *((unsigned char *)a2 + 1) = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      if (v20 >> 14)
      {
        uint64_t v22 = (char *)a2 + 3;
        do
        {
          *(v22 - 1) = v21 | 0x80;
          unsigned int v23 = v21 >> 7;
          ++v22;
          unsigned int v24 = v21 >> 14;
          v21 >>= 7;
        }
        while (v24);
        *(v22 - 1) = v23;
        a2 = google::protobuf::EnumValueOptions::_InternalSerialize(v19, v22, a3);
        uint64_t v8 = *((void *)this + 1);
        if ((v8 & 1) == 0) {
          return a2;
        }
      }
      else
      {
        *((unsigned char *)a2 + 2) = v21;
        a2 = google::protobuf::EnumValueOptions::_InternalSerialize(v19, (char *)a2 + 3, a3);
        uint64_t v8 = *((void *)this + 1);
        if ((v8 & 1) == 0) {
          return a2;
        }
      }
      goto LABEL_41;
    }
LABEL_21:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v12, (char *)a2);
    if ((v7 & 4) != 0) {
      goto LABEL_17;
    }
    goto LABEL_3;
  }
  if ((v7 & 4) == 0) {
    goto LABEL_3;
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    unint64_t v15 = *((int *)this + 10);
    *(unsigned char *)a2 = 16;
    if (v15 <= 0x7F)
    {
LABEL_19:
      *((unsigned char *)a2 + 1) = v15;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      if ((v7 & 2) != 0) {
        goto LABEL_30;
      }
      goto LABEL_4;
    }
  }
  else
  {
    unint64_t v15 = *((int *)this + 10);
    *(unsigned char *)a2 = 16;
    if (v15 <= 0x7F) {
      goto LABEL_19;
    }
  }
  *((unsigned char *)a2 + 1) = v15 | 0x80;
  unint64_t v16 = v15 >> 7;
  if (v15 >> 14)
  {
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    do
    {
      *((unsigned char *)a2 - 1) = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
      unint64_t v18 = v16 >> 14;
      v16 >>= 7;
    }
    while (v18);
    *((unsigned char *)a2 - 1) = v17;
    if ((v7 & 2) != 0) {
      goto LABEL_30;
    }
  }
  else
  {
    *((unsigned char *)a2 + 2) = v16;
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((v7 & 2) != 0) {
      goto LABEL_30;
    }
  }
LABEL_4:
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return a2;
  }
LABEL_41:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::EnumValueDescriptorProto::ByteSizeLong(google::protobuf::EnumValueDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v5 = *((void *)this + 3);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1);
      if ((v2 & 2) == 0)
      {
LABEL_22:
        if ((v2 & 4) != 0)
        {
          int v19 = *((_DWORD *)this + 10);
          if (v19 < 0)
          {
            uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + 11);
            uint64_t v4 = (google::protobuf::EnumValueDescriptorProto *)((char *)this + 8);
            if ((*((unsigned char *)this + 8) & 1) == 0) {
              goto LABEL_24;
            }
          }
          else
          {
            uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1);
            uint64_t v4 = (google::protobuf::EnumValueDescriptorProto *)((char *)this + 8);
            if ((*((unsigned char *)this + 8) & 1) == 0) {
              goto LABEL_24;
            }
          }
        }
        else
        {
          uint64_t v4 = (google::protobuf::EnumValueDescriptorProto *)((char *)this + 8);
          if ((*((unsigned char *)this + 8) & 1) == 0) {
            goto LABEL_24;
          }
        }
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *((void *)this + 4);
    uint64_t v9 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::internal::ExtensionSet *)(v8 + 16));
    uint64_t v10 = *(int *)(v8 + 56);
    uint64_t v11 = (char *)(v9 + 2 * v10);
    uint64_t v12 = *(void *)(v8 + 64);
    if (v12) {
      int64_t v13 = (google::protobuf::UninterpretedOption **)(v12 + 8);
    }
    else {
      int64_t v13 = 0;
    }
    if (v10)
    {
      uint64_t v14 = 8 * v10;
      do
      {
        unint64_t v15 = *v13++;
        unint64_t v16 = google::protobuf::UninterpretedOption::ByteSizeLong(v15);
        uint64_t v11 = &v11[(void)v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
        v14 -= 8;
      }
      while (v14);
    }
    if (*(unsigned char *)(v8 + 40)) {
      unint64_t v17 = v11 + 2;
    }
    else {
      unint64_t v17 = v11;
    }
    if (*(unsigned char *)(v8 + 8)) {
      unint64_t v17 = google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(v8 + 8), (const google::protobuf::UnknownFieldSet *)v17, (_DWORD *)(v8 + 44));
    }
    else {
      *(_DWORD *)(v8 + 44) = v17;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)&v17[(void)v3
                                                       + 1
                                                       + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6)];
    goto LABEL_22;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (google::protobuf::EnumValueDescriptorProto *)((char *)this + 8);
  if ((*((unsigned char *)this + 8) & 1) == 0)
  {
LABEL_24:
    *((_DWORD *)this + 5) = v3;
    return (char *)v3;
  }
LABEL_29:

  return google::protobuf::internal::ComputeUnknownFieldsSize(v4, v3, (_DWORD *)this + 5);
}

void google::protobuf::EnumValueDescriptorProto::MergeFrom(google::protobuf::EnumValueDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5384);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::EnumValueDescriptorProto::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE02370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE02384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueDescriptorProto::MergeFrom(google::protobuf::EnumValueDescriptorProto *this, const google::protobuf::EnumValueDescriptorProto *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5399);
    char v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      int v6 = *((_DWORD *)a2 + 4);
      if ((v6 & 7) == 0) {
        return;
      }
LABEL_8:
      if ((v6 & 1) == 0)
      {
        if ((v6 & 2) == 0) {
          goto LABEL_10;
        }
LABEL_21:
        *((_DWORD *)this + 4) |= 2u;
        unint64_t v15 = (google::protobuf::EnumValueOptions *)*((void *)this + 4);
        if (!v15)
        {
          unint64_t v16 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
          if (*v4) {
            unint64_t v16 = *(google::protobuf::Arena **)v16;
          }
          unint64_t v15 = (google::protobuf::EnumValueOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v16);
          *((void *)this + 4) = v15;
        }
        if (*((void *)a2 + 4)) {
          unint64_t v17 = (const google::protobuf::EnumValueOptions *)*((void *)a2 + 4);
        }
        else {
          unint64_t v17 = (const google::protobuf::EnumValueOptions *)&google::protobuf::_EnumValueOptions_default_instance_;
        }
        google::protobuf::EnumValueOptions::MergeFrom(v15, v17);
        if ((v6 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_11;
      }
      uint64_t v9 = (std::string *)*((void *)a2 + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v10 = (std::string **)((char *)this + 24);
      uint64_t v11 = *((void *)this + 1);
      uint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
      if (v11)
      {
        uint64_t v12 = *(google::protobuf::Arena **)v12;
        int64_t v13 = *v10;
        if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
LABEL_15:
          std::string::operator=(v13, v9);
          if ((v6 & 2) != 0) {
            goto LABEL_21;
          }
LABEL_10:
          if ((v6 & 4) == 0)
          {
LABEL_12:
            *((_DWORD *)this + 4) |= v6;
            return;
          }
LABEL_11:
          *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((_DWORD *)a2 + 10);
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v13 = *v10;
        if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_15;
        }
      }
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v10, v12, (long long *)v9);
      if ((v6 & 2) != 0) {
        goto LABEL_21;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  if (*v4)
  {
    google::protobuf::UnknownFieldSet::InternalMergeFrom((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8, v8);
    int v6 = *((_DWORD *)a2 + 4);
    if ((v6 & 7) != 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v14 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v14, v8);
    int v6 = *((_DWORD *)a2 + 4);
    if ((v6 & 7) != 0) {
      goto LABEL_8;
    }
  }
}

void sub_23CE0256C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE02580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueOptions::MergeFrom(google::protobuf::EnumValueOptions *this, const google::protobuf::EnumValueOptions *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8711);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::EnumValueOptions *)((char *)this + 16), (const google::protobuf::EnumValueOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
      if ((*((unsigned char *)a2 + 40) & 1) == 0) {
        return;
      }
LABEL_9:
      char v9 = *((unsigned char *)a2 + 72);
      *((_DWORD *)this + 10) |= 1u;
      *((unsigned char *)this + 72) = v9;
      return;
    }
  }
  else
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::EnumValueOptions *)((char *)this + 16), (const google::protobuf::EnumValueOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  int v6 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v7 = *((void *)this + 1);
  if (v7) {
    uint64_t v8 = (char *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v6);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  if (*((unsigned char *)a2 + 40)) {
    goto LABEL_9;
  }
}

void sub_23CE026B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE026C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueDescriptorProto::CopyFrom(google::protobuf::EnumValueDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumValueDescriptorProto::Clear(this);
    google::protobuf::EnumValueDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::EnumValueDescriptorProto::IsInitialized(google::protobuf::EnumValueDescriptorProto *this)
{
  if ((*((_DWORD *)this + 4) & 2) == 0) {
    return 1;
  }
  uint64_t v3 = *((void *)this + 4);
  if (v3)
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 9863);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    uint64_t v3 = *((void *)this + 4);
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v3 + 48);
  if (result) {
    return 1;
  }
  return result;
}

void sub_23CE027D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE027EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EnumValueOptions::IsInitialized(google::protobuf::EnumValueOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::EnumValueOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::EnumValueDescriptorProto::GetMetadata(google::protobuf::EnumValueDescriptorProto *this)
{
  return off_26AED0A18[20];
}

void google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(google::protobuf::ServiceDescriptorProto *this)
{
  google::protobuf::ServiceDescriptorProto::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      int v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        int v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::~RepeatedPtrField((uint64_t)this + 24);
}

{
  uint64_t vars8;

  google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::ServiceDescriptorProto::SharedDtor(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5518);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 6);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  }
  if (this != (google::protobuf::ServiceDescriptorProto *)&google::protobuf::_ServiceDescriptorProto_default_instance_)
  {
    uint64_t v7 = (google::protobuf::ServiceOptions *)*((void *)this + 7);
    if (v7)
    {
      google::protobuf::ServiceOptions::~ServiceOptions(v7);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CE02A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE02A24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::ServiceDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::ServiceDescriptorProto::Clear(google::protobuf::ServiceDescriptorProto *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0) {
    goto LABEL_12;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 6);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
      goto LABEL_6;
    }
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_6:
  uint64_t v4 = *((void *)this + 7);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5551);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)this + 7);
  }
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v4 + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v4 + 48);
  *(unsigned char *)(v4 + 72) = 0;
  *(_DWORD *)(v4 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v6 & 1) != 0 && *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v6 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
LABEL_12:
  *((_DWORD *)this + 4) = 0;
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) != 0 && *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CE02B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE02B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceOptions::Clear(google::protobuf::ServiceOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::ServiceOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
  *((unsigned char *)this + 72) = 0;
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::ServiceDescriptorProto::_InternalParse(google::protobuf::ServiceDescriptorProto *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)((char *)this + 8);
    char v8 = (uint64_t **)((char *)this + 48);
    while (1)
    {
      char v10 = __s + 1;
      unsigned int v11 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = v11 + (*v10 << 7);
      unsigned int v11 = v12 - 128;
      if ((*v10 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v12 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v10 = TagFallback;
      unsigned int v11 = v29;
      unsigned int v13 = v29 >> 3;
      if (v29 >> 3 != 3)
      {
LABEL_11:
        if (v13 != 2)
        {
          if (v13 == 1 && v11 == 10)
          {
            *((_DWORD *)this + 4) |= 1u;
            uint64_t v24 = *((void *)this + 1);
            uint64_t v25 = (google::protobuf::Arena *)(v24 & 0xFFFFFFFFFFFFFFFELL);
            if (v24)
            {
              uint64_t v25 = *(google::protobuf::Arena **)v25;
              unsigned int v26 = *v8;
              if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
              {
LABEL_38:
                google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, v25, (long long *)&google::protobuf::internal::fixed_address_empty_string);
                unsigned int v26 = *v8;
                char v10 = __s;
              }
            }
            else
            {
              unsigned int v26 = *v8;
              if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_38;
              }
            }
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v26, v10, (uint64_t)a3);
            if (*((char *)v26 + 23) < 0)
            {
              uint64_t v31 = (const void *)*v26;
              size_t v32 = v26[1];
              if ((v32 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v26[1], "size_t to int conversion", v27);
              }
              google::protobuf::internal::VerifyUTF8(v31, v32, (google::protobuf::internal *)"google.protobuf.ServiceDescriptorProto.name");
              if (!__s) {
                return 0;
              }
            }
            else
            {
              google::protobuf::internal::VerifyUTF8(v26, *((unsigned __int8 *)v26 + 23), (google::protobuf::internal *)"google.protobuf.ServiceDescriptorProto.name");
              if (!__s) {
                return 0;
              }
            }
            goto LABEL_51;
          }
          goto LABEL_16;
        }
        if (v11 != 18)
        {
LABEL_16:
          if (v11) {
            BOOL v15 = (v11 & 7) == 4;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15)
          {
            a3[10].i32[0] = v11 - 1;
            return __s;
          }
          if (*v7)
          {
            __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v10, (const char *)a3, v5);
            if (!__s) {
              return 0;
            }
          }
          else
          {
            unsigned int v33 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
            __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)v33, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v34);
            if (!__s) {
              return 0;
            }
          }
          goto LABEL_51;
        }
        unint64_t v16 = v10 - 1;
        while (2)
        {
          unint64_t v17 = v16 + 1;
          __s = v16 + 1;
          char v18 = (int *)*((void *)this + 5);
          if (v18)
          {
            uint64_t v19 = *((int *)this + 8);
            int v20 = *v18;
            if ((int)v19 < *v18)
            {
              *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v19 + 1;
              unsigned int v21 = *(google::protobuf::MethodDescriptorProto **)&v18[2 * v19 + 2];
              goto LABEL_32;
            }
            if (v20 == *((_DWORD *)this + 9))
            {
LABEL_30:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v20 + 1);
              char v18 = (int *)*((void *)this + 5);
              int v20 = *v18;
            }
            *char v18 = v20 + 1;
            unsigned int v21 = (google::protobuf::MethodDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(*((google::protobuf::Arena **)this + 3));
            uint64_t v22 = *((void *)this + 5);
            uint64_t v23 = *((int *)this + 8);
            *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v23 + 1;
            *(void *)(v22 + 8 * v23 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v21;
            unint64_t v17 = __s;
LABEL_32:
            unint64_t v16 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MethodDescriptorProto>(a3, v21, v17);
            __s = v16;
            if (!v16) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
              goto LABEL_51;
            }
            continue;
          }
          break;
        }
        int v20 = *((_DWORD *)this + 9);
        goto LABEL_30;
      }
LABEL_44:
      if (v11 != 26) {
        goto LABEL_16;
      }
      *((_DWORD *)this + 4) |= 2u;
      char v9 = (google::protobuf::ServiceOptions *)*((void *)this + 7);
      if (!v9)
      {
        int v30 = (google::protobuf::Arena *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
        if (*v7) {
          int v30 = *(google::protobuf::Arena **)v30;
        }
        char v9 = (google::protobuf::ServiceOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v30);
        *((void *)this + 7) = v9;
        char v10 = __s;
      }
      __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::ServiceOptions>(a3, v9, (google::protobuf::internal *)v10);
      if (!__s) {
        return 0;
      }
LABEL_51:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))return __s; {
    }
      }
    char v10 = __s + 2;
LABEL_10:
    __s = v10;
    unsigned int v13 = v11 >> 3;
    if (v11 >> 3 != 3) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
  return __s;
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MethodDescriptorProto>(int32x2_t *a1, google::protobuf::MethodDescriptorProto *a2, std::string::value_type *this)
{
  unsigned int v5 = *this;
  if (*this < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = this + 1;
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::MethodDescriptorProto::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CE030C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE030D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::ServiceOptions>(int32x2_t *a1, google::protobuf::ServiceOptions *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::ServiceOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CE03234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE03248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::ServiceDescriptorProto::_InternalSerialize(google::protobuf::ServiceDescriptorProto *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 1) == 0) {
    goto LABEL_13;
  }
  int v8 = (unsigned __int8 *)*((void *)this + 6);
  if ((char)v8[23] < 0)
  {
    int v8 = *(unsigned __int8 **)v8;
    __int32 v9 = *(const char **)(*((void *)this + 6) + 8);
  }
  else
  {
    __int32 v9 = (const char *)v8[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v8, v9, 1, (google::protobuf::internal *)"google.protobuf.ServiceDescriptorProto.name");
  uint64_t v10 = *((void *)this + 6);
  if (*(char *)(v10 + 23) < 0)
  {
    int64_t v11 = *(void *)(v10 + 8);
    if (v11 > 127) {
      goto LABEL_25;
    }
  }
  else
  {
    int64_t v11 = *(unsigned __int8 *)(v10 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v11)
  {
LABEL_25:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v10, (char *)a2);
    int v13 = *((_DWORD *)this + 8);
    if (!v13) {
      goto LABEL_26;
    }
    goto LABEL_14;
  }
  *(unsigned char *)a2 = 10;
  *((unsigned char *)a2 + 1) = v11;
  if (*(char *)(v10 + 23) >= 0) {
    int v12 = (const void *)v10;
  }
  else {
    int v12 = *(const void **)v10;
  }
  memcpy((char *)a2 + 2, v12, v11);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v11 + 2);
LABEL_13:
  int v13 = *((_DWORD *)this + 8);
  if (!v13) {
    goto LABEL_26;
  }
LABEL_14:
  for (int i = 0; i != v13; ++i)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    }
    unint64_t v16 = (google::protobuf::MethodDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>((uint64_t)this + 24, i);
    *(unsigned char *)a2 = 18;
    unsigned int v18 = *((_DWORD *)v16 + 5);
    if (v18 <= 0x7F)
    {
      *((unsigned char *)a2 + 1) = v18;
      char v15 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
    else
    {
      *((unsigned char *)a2 + 1) = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      if (v18 >> 14)
      {
        char v15 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)v15 - 1) = v19 | 0x80;
          unsigned int v20 = v19 >> 7;
          char v15 = (google::protobuf::UnknownFieldSet *)((char *)v15 + 1);
          unsigned int v21 = v19 >> 14;
          v19 >>= 7;
        }
        while (v21);
        *((unsigned char *)v15 - 1) = v20;
      }
      else
      {
        *((unsigned char *)a2 + 2) = v19;
        char v15 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
      }
    }
    a2 = google::protobuf::MethodDescriptorProto::_InternalSerialize(v16, v15, a3, v17);
  }
LABEL_26:
  if ((v7 & 2) == 0) {
    goto LABEL_37;
  }
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    uint64_t v22 = (google::protobuf::ServiceOptions *)*((void *)this + 7);
    *(unsigned char *)a2 = 26;
    unsigned int v23 = *((_DWORD *)v22 + 11);
    if (v23 <= 0x7F) {
      goto LABEL_29;
    }
LABEL_31:
    *((unsigned char *)a2 + 1) = v23 | 0x80;
    unsigned int v25 = v23 >> 7;
    if (v23 >> 14)
    {
      uint64_t v24 = (char *)a2 + 3;
      do
      {
        *(v24 - 1) = v25 | 0x80;
        unsigned int v26 = v25 >> 7;
        ++v24;
        unsigned int v27 = v25 >> 14;
        v25 >>= 7;
      }
      while (v27);
      *(v24 - 1) = v26;
    }
    else
    {
      *((unsigned char *)a2 + 2) = v25;
      uint64_t v24 = (char *)a2 + 3;
    }
    goto LABEL_36;
  }
  uint64_t v22 = (google::protobuf::ServiceOptions *)*((void *)this + 7);
  *(unsigned char *)a2 = 26;
  unsigned int v23 = *((_DWORD *)v22 + 11);
  if (v23 > 0x7F) {
    goto LABEL_31;
  }
LABEL_29:
  *((unsigned char *)a2 + 1) = v23;
  uint64_t v24 = (char *)a2 + 2;
LABEL_36:
  a2 = google::protobuf::ServiceOptions::_InternalSerialize(v22, v24, a3);
LABEL_37:
  uint64_t v28 = *((void *)this + 1);
  if ((v28 & 1) == 0) {
    return a2;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v28 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::ServiceDescriptorProto::ByteSizeLong(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (google::protobuf::MethodDescriptorProto **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      uint64_t v6 = *v4++;
      int v7 = google::protobuf::MethodDescriptorProto::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
    int v8 = *((_DWORD *)this + 4);
    if ((v8 & 3) == 0) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v2 = 0;
    int v8 = *((_DWORD *)this + 4);
    if ((v8 & 3) == 0) {
      goto LABEL_27;
    }
  }
  if (v8)
  {
    uint64_t v9 = *((void *)this + 6);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
  if ((v8 & 2) != 0)
  {
    uint64_t v12 = *((void *)this + 7);
    uint64_t v13 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::internal::ExtensionSet *)(v12 + 16));
    uint64_t v14 = *(int *)(v12 + 56);
    char v15 = (char *)(v13 + 2 * v14);
    uint64_t v16 = *(void *)(v12 + 64);
    if (v16) {
      unint64_t v17 = (google::protobuf::UninterpretedOption **)(v16 + 8);
    }
    else {
      unint64_t v17 = 0;
    }
    if (v14)
    {
      uint64_t v18 = 8 * v14;
      do
      {
        unsigned int v19 = *v17++;
        unsigned int v20 = google::protobuf::UninterpretedOption::ByteSizeLong(v19);
        char v15 = &v15[(void)v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
        v18 -= 8;
      }
      while (v18);
    }
    if (*(unsigned char *)(v12 + 40)) {
      unsigned int v21 = v15 + 3;
    }
    else {
      unsigned int v21 = v15;
    }
    if (*(unsigned char *)(v12 + 8)) {
      unsigned int v21 = google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(v12 + 8), (const google::protobuf::UnknownFieldSet *)v21, (_DWORD *)(v12 + 44));
    }
    else {
      *(_DWORD *)(v12 + 44) = v21;
    }
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v21[(void)v2
                                                       + 1
                                                       + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6)];
  }
LABEL_27:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ServiceDescriptorProto *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void google::protobuf::ServiceDescriptorProto::MergeFrom(google::protobuf::ServiceDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5705);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::ServiceDescriptorProto::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE037A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE037BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceDescriptorProto::MergeFrom(google::protobuf::ServiceDescriptorProto *this, const google::protobuf::ServiceDescriptorProto *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5720);
    char v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
      int v6 = *((_DWORD *)a2 + 4);
      if ((v6 & 3) == 0) {
        return;
      }
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
  }
  int v8 = (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  if (*v4) {
    uint64_t v9 = (char *)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v8);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) == 0) {
    return;
  }
LABEL_9:
  if ((v6 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v10 = (long long *)*((void *)a2 + 6);
  *((_DWORD *)this + 4) |= 1u;
  uint64_t v11 = (std::string **)((char *)this + 48);
  uint64_t v12 = *((void *)this + 1);
  uint64_t v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
  if (v12)
  {
    uint64_t v13 = *(google::protobuf::Arena **)v13;
    uint64_t v14 = *v11;
    if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_12;
    }
LABEL_24:
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v11, v13, v10);
    if ((v6 & 2) == 0) {
      return;
    }
    goto LABEL_14;
  }
  uint64_t v14 = *v11;
  if (*v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
    goto LABEL_24;
  }
LABEL_12:
  std::string::operator=(v14, (const std::string *)v10);
LABEL_13:
  if ((v6 & 2) == 0) {
    return;
  }
LABEL_14:
  *((_DWORD *)this + 4) |= 2u;
  char v15 = (google::protobuf::ServiceOptions *)*((void *)this + 7);
  if (!v15)
  {
    uint64_t v16 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      uint64_t v16 = *(google::protobuf::Arena **)v16;
    }
    char v15 = (google::protobuf::ServiceOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v16);
    *((void *)this + 7) = v15;
  }
  if (*((void *)a2 + 7)) {
    unint64_t v17 = (const google::protobuf::ServiceOptions *)*((void *)a2 + 7);
  }
  else {
    unint64_t v17 = (const google::protobuf::ServiceOptions *)&google::protobuf::_ServiceOptions_default_instance_;
  }
  google::protobuf::ServiceOptions::MergeFrom(v15, v17);
}

void sub_23CE03984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE03998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceOptions::MergeFrom(google::protobuf::ServiceOptions *this, const google::protobuf::ServiceOptions *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8973);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::ServiceOptions *)((char *)this + 16), (const google::protobuf::ServiceOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
      if ((*((unsigned char *)a2 + 40) & 1) == 0) {
        return;
      }
LABEL_9:
      char v9 = *((unsigned char *)a2 + 72);
      *((_DWORD *)this + 10) |= 1u;
      *((unsigned char *)this + 72) = v9;
      return;
    }
  }
  else
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::ServiceOptions *)((char *)this + 16), (const google::protobuf::ServiceOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  int v6 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v7 = *((void *)this + 1);
  if (v7) {
    int v8 = (char *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    int v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v6);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  if (*((unsigned char *)a2 + 40)) {
    goto LABEL_9;
  }
}

void sub_23CE03AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE03ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceDescriptorProto::CopyFrom(google::protobuf::ServiceDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::ServiceDescriptorProto::Clear(this);
    google::protobuf::ServiceDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::ServiceDescriptorProto::IsInitialized(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2 = (char *)this + 24;
  int v3 = *((_DWORD *)this + 8);
  while (1)
  {
    BOOL v4 = __OFSUB__(v3--, 1);
    if (v3 < 0 != v4) {
      break;
    }
    uint64_t v5 = (google::protobuf::MethodDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>((uint64_t)v2, v3);
    if ((google::protobuf::MethodDescriptorProto::IsInitialized(v5) & 1) == 0) {
      return 0;
    }
  }
  if ((*((_DWORD *)this + 4) & 2) == 0) {
    return 1;
  }
  uint64_t v7 = *((void *)this + 7);
  if (!v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 10080);
    int v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v9, v8);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v7 = *((void *)this + 7);
  }
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v7 + 16));
  if (result)
  {
    uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v7 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

void sub_23CE03C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE03C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::ServiceOptions::IsInitialized(google::protobuf::ServiceOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::ServiceOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::ServiceDescriptorProto::GetMetadata(google::protobuf::ServiceDescriptorProto *this)
{
  return off_26AED0A18[22];
}

void google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(google::protobuf::MethodDescriptorProto *this)
{
  google::protobuf::MethodDescriptorProto::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      int v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        int v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::MethodDescriptorProto::SharedDtor(google::protobuf::MethodDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5860);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v12, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 3);
  if ((uint64_t *)v5 == &google::protobuf::internal::fixed_address_empty_string || v5 == 0)
  {
    uint64_t v7 = *((void *)this + 4);
    if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0) {
      goto LABEL_22;
    }
LABEL_14:
    uint64_t v9 = *((void *)this + 5);
    if ((uint64_t *)v9 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  if (*(char *)(v5 + 23) < 0) {
    operator delete(*(void **)v5);
  }
  MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  uint64_t v7 = *((void *)this + 4);
  if ((uint64_t *)v7 == &google::protobuf::internal::fixed_address_empty_string || v7 == 0) {
    goto LABEL_14;
  }
LABEL_22:
  if (*(char *)(v7 + 23) < 0) {
    operator delete(*(void **)v7);
  }
  MEMORY[0x23ECF2BC0](v7, 0x1012C40EC159624);
  uint64_t v9 = *((void *)this + 5);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
LABEL_25:
    if (v9)
    {
      if (*(char *)(v9 + 23) < 0) {
        operator delete(*(void **)v9);
      }
      MEMORY[0x23ECF2BC0](v9, 0x1012C40EC159624);
    }
  }
LABEL_29:
  if (this != (google::protobuf::MethodDescriptorProto *)&google::protobuf::_MethodDescriptorProto_default_instance_)
  {
    uint64_t v11 = (google::protobuf::MethodOptions *)*((void *)this + 6);
    if (v11)
    {
      google::protobuf::MethodOptions::~MethodOptions(v11);
      MEMORY[0x23ECF2BC0]();
    }
  }
}

void sub_23CE03EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE03EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::MethodDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::MethodDescriptorProto::Clear(google::protobuf::MethodDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) == 0) {
    goto LABEL_26;
  }
  if (v2)
  {
    uint64_t v3 = *((void *)this + 3);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    uint64_t v5 = *((void *)this + 5);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 8) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) == 0) {
        goto LABEL_26;
      }
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_11:
  uint64_t v4 = *((void *)this + 4);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_15;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_19:
  uint64_t v6 = *((void *)this + 6);
  if (!v6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 5900);
    uint64_t v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    uint64_t v6 = *((void *)this + 6);
  }
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::internal::ExtensionSet *)(v6 + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(v6 + 48);
  if ((*(unsigned char *)(v6 + 40) & 3) != 0) {
    *(void *)(v6 + 72) = 0;
  }
  *(_DWORD *)(v6 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v8 & 1) != 0 && *(void *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v8 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
LABEL_26:
  *((_WORD *)this + 2google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  *((_DWORD *)this + 4) = 0;
  uint64_t v9 = *((void *)this + 1);
  if ((v9 & 1) != 0 && *(void *)((v9 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v9 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v9 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

void sub_23CE040C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE040D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::Clear(google::protobuf::MethodOptions *this)
{
  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::MethodOptions *)((char *)this + 16));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
  if ((*((unsigned char *)this + 40) & 3) != 0) {
    *((void *)this + 9) = 0;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) != 0 && *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::MethodDescriptorProto::_InternalParse(google::protobuf::MethodDescriptorProto *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v53 = (unint64_t *)((char *)this + 8);
    uint64_t v8 = (uint64_t **)((char *)this + 40);
    uint64_t v9 = (uint64_t **)((char *)this + 32);
    char v10 = (uint64_t **)((char *)this + 24);
    while (1)
    {
      char v15 = __s + 1;
      unsigned int v16 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_11;
      }
      unsigned int v17 = v16 + (*v15 << 7);
      unsigned int v16 = v17 - 128;
      if ((*v15 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v17 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        goto LABEL_80;
      }
      char v15 = TagFallback;
      unsigned int v16 = v43;
      unsigned int v18 = (v43 >> 3) - 1;
      if (v18 <= 5) {
        goto LABEL_12;
      }
LABEL_52:
      if (v16) {
        BOOL v44 = (v16 & 7) == 4;
      }
      else {
        BOOL v44 = 1;
      }
      if (v44)
      {
        a3[10].i32[0] = v16 - 1;
        goto LABEL_2;
      }
      if (*v53)
      {
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v16, (google::protobuf::UnknownFieldSet *)((*v53 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v15, (const char *)a3, v5);
        if (!__s) {
          goto LABEL_80;
        }
      }
      else
      {
        unsigned int v51 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v53);
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v16, (google::protobuf::UnknownFieldSet *)v51, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v52);
        if (!__s)
        {
LABEL_80:
          __s = 0;
          goto LABEL_2;
        }
      }
LABEL_7:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    char v15 = __s + 2;
LABEL_11:
    __s = v15;
    unsigned int v18 = (v16 >> 3) - 1;
LABEL_12:
    switch(v18)
    {
      case 0u:
        if (v16 != 10) {
          goto LABEL_52;
        }
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v19 = *((void *)this + 1);
        unsigned int v20 = (google::protobuf::Arena *)(v19 & 0xFFFFFFFFFFFFFFFELL);
        if ((v19 & 1) == 0)
        {
          unsigned int v21 = *v10;
          if (*v10 != &google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_17;
          }
LABEL_16:
          google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, v20, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          unsigned int v21 = *v10;
          char v15 = __s;
          goto LABEL_17;
        }
        unsigned int v20 = *(google::protobuf::Arena **)v20;
        unsigned int v21 = *v10;
        if (*v10 == &google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_16;
        }
LABEL_17:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v21, v15, (uint64_t)a3);
        if (*((char *)v21 + 23) < 0)
        {
          unsigned int v23 = (uint64_t *)*v21;
          size_t v11 = v21[1];
          if ((v11 & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v21[1], "size_t to int conversion", v22);
          }
          unsigned int v21 = v23;
        }
        else
        {
          size_t v11 = *((unsigned __int8 *)v21 + 23);
        }
        char v12 = v21;
        size_t v13 = v11;
        uint64_t v14 = "google.protobuf.MethodDescriptorProto.name";
        goto LABEL_6;
      case 1u:
        if (v16 != 18) {
          goto LABEL_52;
        }
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v24 = *((void *)this + 1);
        unsigned int v25 = (google::protobuf::Arena *)(v24 & 0xFFFFFFFFFFFFFFFELL);
        if ((v24 & 1) == 0)
        {
          unsigned int v26 = *v9;
          if (*v9 != &google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_25;
          }
LABEL_24:
          google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, v25, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          unsigned int v26 = *v9;
          char v15 = __s;
          goto LABEL_25;
        }
        unsigned int v25 = *(google::protobuf::Arena **)v25;
        unsigned int v26 = *v9;
        if (*v9 == &google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_24;
        }
LABEL_25:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v26, v15, (uint64_t)a3);
        if (*((char *)v26 + 23) < 0)
        {
          uint64_t v45 = (uint64_t *)*v26;
          size_t v28 = v26[1];
          if ((v28 & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v26[1], "size_t to int conversion", v27);
          }
          unsigned int v26 = v45;
        }
        else
        {
          size_t v28 = *((unsigned __int8 *)v26 + 23);
        }
        char v12 = v26;
        size_t v13 = v28;
        uint64_t v14 = "google.protobuf.MethodDescriptorProto.input_type";
        goto LABEL_6;
      case 2u:
        if (v16 != 26) {
          goto LABEL_52;
        }
        *((_DWORD *)this + 4) |= 4u;
        uint64_t v29 = *((void *)this + 1);
        int v30 = (google::protobuf::Arena *)(v29 & 0xFFFFFFFFFFFFFFFELL);
        if ((v29 & 1) == 0)
        {
          uint64_t v31 = *v8;
          if (*v8 != &google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_31;
          }
LABEL_30:
          google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, v30, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          uint64_t v31 = *v8;
          char v15 = __s;
          goto LABEL_31;
        }
        int v30 = *(google::protobuf::Arena **)v30;
        uint64_t v31 = *v8;
        if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_30;
        }
LABEL_31:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v31, v15, (uint64_t)a3);
        if (*((char *)v31 + 23) < 0)
        {
          unsigned int v46 = (uint64_t *)*v31;
          size_t v33 = v31[1];
          if ((v33 & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v31[1], "size_t to int conversion", v32);
          }
          uint64_t v31 = v46;
        }
        else
        {
          size_t v33 = *((unsigned __int8 *)v31 + 23);
        }
        char v12 = v31;
        size_t v13 = v33;
        uint64_t v14 = "google.protobuf.MethodDescriptorProto.output_type";
LABEL_6:
        google::protobuf::internal::VerifyUTF8(v12, v13, (google::protobuf::internal *)v14);
        if (!__s) {
          goto LABEL_80;
        }
        break;
      case 3u:
        if (v16 != 34) {
          goto LABEL_52;
        }
        *((_DWORD *)this + 4) |= 8u;
        unsigned int v34 = (google::protobuf::MethodOptions *)*((void *)this + 6);
        if (!v34)
        {
          unsigned int v35 = (google::protobuf::Arena *)(*v53 & 0xFFFFFFFFFFFFFFFELL);
          if (*v53) {
            unsigned int v35 = *(google::protobuf::Arena **)v35;
          }
          unsigned int v34 = (google::protobuf::MethodOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v35);
          *((void *)this + 6) = v34;
          char v15 = __s;
        }
        __s = (std::string::value_type *)google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MethodOptions>(a3, v34, (google::protobuf::internal *)v15);
        if (!__s) {
          goto LABEL_80;
        }
        goto LABEL_7;
      case 4u:
        if (v16 != 40) {
          goto LABEL_52;
        }
        v6 |= 0x10u;
        unsigned int v36 = v15 + 1;
        unint64_t v37 = *v15;
        if ((*v15 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v38 = *v36;
        unint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v47 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, (const char *)v37);
          __s = v47;
          *((unsigned char *)this + 56) = v48 != 0;
          if (!v47) {
            goto LABEL_80;
          }
        }
        else
        {
          unsigned int v36 = v15 + 2;
LABEL_44:
          __s = v36;
          *((unsigned char *)this + 56) = v37 != 0;
        }
        goto LABEL_7;
      case 5u:
        if (v16 != 48) {
          goto LABEL_52;
        }
        v6 |= 0x20u;
        uint64_t v39 = v15 + 1;
        unint64_t v40 = *v15;
        if ((*v15 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v41 = *v39;
        unint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          unint64_t v49 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, (const char *)v40);
          __s = v49;
          *((unsigned char *)this + 57) = v50 != 0;
          if (!v49) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v39 = v15 + 2;
LABEL_49:
          __s = v39;
          *((unsigned char *)this + 57) = v40 != 0;
        }
        goto LABEL_7;
      default:
        goto LABEL_52;
    }
    goto LABEL_7;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return __s;
}

google::protobuf::internal *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MethodOptions>(int32x2_t *a1, google::protobuf::MethodOptions *a2, google::protobuf::internal *this)
{
  unsigned int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      uint64_t v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v7 = a1[1];
  int v8 = v5 + v6 - v7.i32[0];
  *a1 = (int32x2_t)(*(void *)&v7 + (v8 & (v8 >> 31)));
  __int32 v9 = a1[3].i32[1];
  a1[3].i32[1] = v8;
  v7.i32[0] = a1[11].i32[0];
  BOOL v10 = __OFSUB__(v7.i32[0]--, 1);
  a1[11].i32[0] = v7.i32[0];
  if (v7.i32[0] < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::MethodOptions::_InternalParse(a2, v6, a1);
  if (result)
  {
    ++a1[11].i32[0];
    if (!a1[10].i32[0])
    {
      int v12 = a1[3].i32[1] + v9 - v8;
      a1[3].i32[1] = v12;
      *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CE047B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE047C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::MethodDescriptorProto::_InternalSerialize(google::protobuf::MethodDescriptorProto *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 1) == 0)
  {
    if ((v7 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_20:
    char v15 = (unsigned __int8 *)*((void *)this + 4);
    if ((char)v15[23] < 0)
    {
      char v15 = *(unsigned __int8 **)v15;
      unsigned int v16 = *(const char **)(*((void *)this + 4) + 8);
    }
    else
    {
      unsigned int v16 = (const char *)v15[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v15, v16, 1, (google::protobuf::internal *)"google.protobuf.MethodDescriptorProto.input_type");
    uint64_t v17 = *((void *)this + 4);
    if (*(char *)(v17 + 23) < 0)
    {
      int64_t v18 = *(void *)(v17 + 8);
      if (v18 > 127) {
        goto LABEL_48;
      }
    }
    else
    {
      int64_t v18 = *(unsigned __int8 *)(v17 + 23);
    }
    if (*(void *)a3 - (void)a2 + 14 >= v18)
    {
      *(unsigned char *)a2 = 18;
      *((unsigned char *)a2 + 1) = v18;
      if (*(char *)(v17 + 23) >= 0) {
        uint64_t v19 = (const void *)v17;
      }
      else {
        uint64_t v19 = *(const void **)v17;
      }
      memcpy((char *)a2 + 2, v19, v18);
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v18 + 2);
      if ((v7 & 4) != 0) {
        goto LABEL_31;
      }
LABEL_4:
      if ((v7 & 8) == 0) {
        goto LABEL_5;
      }
LABEL_42:
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        unsigned int v25 = (google::protobuf::MethodOptions *)*((void *)this + 6);
        *(unsigned char *)a2 = 34;
        unsigned int v26 = *((_DWORD *)v25 + 11);
        if (v26 <= 0x7F)
        {
LABEL_44:
          *((unsigned char *)a2 + 1) = v26;
          a2 = google::protobuf::MethodOptions::_InternalSerialize(v25, (char *)a2 + 2, a3);
          if ((v7 & 0x10) != 0) {
            goto LABEL_59;
          }
          goto LABEL_6;
        }
      }
      else
      {
        unsigned int v25 = (google::protobuf::MethodOptions *)*((void *)this + 6);
        *(unsigned char *)a2 = 34;
        unsigned int v26 = *((_DWORD *)v25 + 11);
        if (v26 <= 0x7F) {
          goto LABEL_44;
        }
      }
      *((unsigned char *)a2 + 1) = v26 | 0x80;
      unsigned int v27 = v26 >> 7;
      if (v26 >> 14)
      {
        size_t v28 = (char *)a2 + 3;
        do
        {
          *(v28 - 1) = v27 | 0x80;
          unsigned int v29 = v27 >> 7;
          ++v28;
          unsigned int v30 = v27 >> 14;
          v27 >>= 7;
        }
        while (v30);
        *(v28 - 1) = v29;
        a2 = google::protobuf::MethodOptions::_InternalSerialize(v25, v28, a3);
        if ((v7 & 0x10) != 0) {
          goto LABEL_59;
        }
      }
      else
      {
        *((unsigned char *)a2 + 2) = v27;
        a2 = google::protobuf::MethodOptions::_InternalSerialize(v25, (char *)a2 + 3, a3);
        if ((v7 & 0x10) != 0) {
          goto LABEL_59;
        }
      }
LABEL_6:
      if ((v7 & 0x20) == 0) {
        goto LABEL_7;
      }
LABEL_62:
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      char v32 = *((unsigned char *)this + 57);
      *(unsigned char *)a2 = 48;
      *((unsigned char *)a2 + 1) = v32;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      uint64_t v8 = *((void *)this + 1);
      if ((v8 & 1) == 0) {
        return a2;
      }
      goto LABEL_65;
    }
LABEL_48:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 2, v17, (char *)a2);
    if ((v7 & 4) != 0) {
      goto LABEL_31;
    }
    goto LABEL_4;
  }
  BOOL v10 = (unsigned __int8 *)*((void *)this + 3);
  if ((char)v10[23] < 0)
  {
    BOOL v10 = *(unsigned __int8 **)v10;
    size_t v11 = *(const char **)(*((void *)this + 3) + 8);
  }
  else
  {
    size_t v11 = (const char *)v10[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v10, v11, 1, (google::protobuf::internal *)"google.protobuf.MethodDescriptorProto.name");
  uint64_t v12 = *((void *)this + 3);
  if (*(char *)(v12 + 23) < 0)
  {
    int64_t v13 = *(void *)(v12 + 8);
    if (v13 > 127) {
      goto LABEL_46;
    }
  }
  else
  {
    int64_t v13 = *(unsigned __int8 *)(v12 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v13)
  {
LABEL_46:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v12, (char *)a2);
    if ((v7 & 2) != 0) {
      goto LABEL_20;
    }
    goto LABEL_3;
  }
  *(unsigned char *)a2 = 10;
  *((unsigned char *)a2 + 1) = v13;
  if (*(char *)(v12 + 23) >= 0) {
    uint64_t v14 = (const void *)v12;
  }
  else {
    uint64_t v14 = *(const void **)v12;
  }
  memcpy((char *)a2 + 2, v14, v13);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v13 + 2);
  if ((v7 & 2) != 0) {
    goto LABEL_20;
  }
LABEL_3:
  if ((v7 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_31:
  unsigned int v20 = (unsigned __int8 *)*((void *)this + 5);
  if ((char)v20[23] < 0)
  {
    unsigned int v20 = *(unsigned __int8 **)v20;
    unsigned int v21 = *(const char **)(*((void *)this + 5) + 8);
  }
  else
  {
    unsigned int v21 = (const char *)v20[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v20, v21, 1, (google::protobuf::internal *)"google.protobuf.MethodDescriptorProto.output_type");
  uint64_t v22 = *((void *)this + 5);
  if (*(char *)(v22 + 23) < 0)
  {
    int64_t v23 = *(void *)(v22 + 8);
    if (v23 > 127) {
      goto LABEL_50;
    }
  }
  else
  {
    int64_t v23 = *(unsigned __int8 *)(v22 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v23)
  {
LABEL_50:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 3, v22, (char *)a2);
    if ((v7 & 8) != 0) {
      goto LABEL_42;
    }
    goto LABEL_5;
  }
  *(unsigned char *)a2 = 26;
  *((unsigned char *)a2 + 1) = v23;
  if (*(char *)(v22 + 23) >= 0) {
    uint64_t v24 = (const void *)v22;
  }
  else {
    uint64_t v24 = *(const void **)v22;
  }
  memcpy((char *)a2 + 2, v24, v23);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v23 + 2);
  if ((v7 & 8) != 0) {
    goto LABEL_42;
  }
LABEL_5:
  if ((v7 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_59:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
  }
  char v31 = *((unsigned char *)this + 56);
  *(unsigned char *)a2 = 40;
  *((unsigned char *)a2 + 1) = v31;
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  if ((v7 & 0x20) != 0) {
    goto LABEL_62;
  }
LABEL_7:
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return a2;
  }
LABEL_65:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::MethodDescriptorProto::ByteSizeLong(google::protobuf::MethodDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v4 = 0;
    goto LABEL_20;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = *((void *)this + 4);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v14 = *((void *)this + 5);
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if ((v2 & 8) != 0)
  {
LABEL_14:
    size_t v11 = google::protobuf::MethodOptions::ByteSizeLong(*((google::protobuf::MethodOptions **)this + 6));
    v3 += (uint64_t)&v11[((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
LABEL_15:
  uint64_t v12 = v3 + 2;
  if ((v2 & 0x10) == 0) {
    uint64_t v12 = v3;
  }
  if ((v2 & 0x20) != 0) {
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
  }
  else {
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)v12;
  }
LABEL_20:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MethodDescriptorProto *)((char *)this + 8), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v4;
    return (char *)v4;
  }
}

void google::protobuf::MethodDescriptorProto::MergeFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 6124);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::MethodDescriptorProto::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE04E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE04E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodDescriptorProto::MergeFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::MethodDescriptorProto *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v29, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 6139);
    char v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v29, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v28, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v29[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      int v6 = *((_DWORD *)a2 + 4);
      if ((v6 & 0x3F) == 0) {
        return;
      }
LABEL_8:
      if ((v6 & 1) == 0)
      {
        if ((v6 & 2) == 0) {
          goto LABEL_10;
        }
LABEL_24:
        uint64_t v15 = (std::string *)*((void *)a2 + 4);
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v16 = (std::string **)((char *)this + 32);
        uint64_t v17 = *((void *)this + 1);
        int64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
        if (v17)
        {
          int64_t v18 = *(google::protobuf::Arena **)v18;
          uint64_t v19 = *v16;
          if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
LABEL_26:
            std::string::operator=(v19, v15);
            if ((v6 & 4) != 0) {
              goto LABEL_30;
            }
LABEL_11:
            if ((v6 & 8) == 0) {
              goto LABEL_12;
            }
LABEL_36:
            *((_DWORD *)this + 4) |= 8u;
            unsigned int v25 = (google::protobuf::MethodOptions *)*((void *)this + 6);
            if (!v25)
            {
              unsigned int v26 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
              if (*v4) {
                unsigned int v26 = *(google::protobuf::Arena **)v26;
              }
              unsigned int v25 = (google::protobuf::MethodOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v26);
              *((void *)this + 6) = v25;
            }
            if (*((void *)a2 + 6)) {
              unsigned int v27 = (const google::protobuf::MethodOptions *)*((void *)a2 + 6);
            }
            else {
              unsigned int v27 = (const google::protobuf::MethodOptions *)&google::protobuf::_MethodOptions_default_instance_;
            }
            google::protobuf::MethodOptions::MergeFrom(v25, v27);
            if ((v6 & 0x10) == 0)
            {
LABEL_13:
              if ((v6 & 0x20) == 0)
              {
LABEL_15:
                *((_DWORD *)this + 4) |= v6;
                return;
              }
LABEL_14:
              *((unsigned char *)this + 57) = *((unsigned char *)a2 + 57);
              goto LABEL_15;
            }
LABEL_44:
            *((unsigned char *)this + 56) = *((unsigned char *)a2 + 56);
            if ((v6 & 0x20) == 0) {
              goto LABEL_15;
            }
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v19 = *v16;
          if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_26;
          }
        }
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v16, v18, (long long *)v15);
        if ((v6 & 4) != 0) {
          goto LABEL_30;
        }
        goto LABEL_11;
      }
      uint64_t v9 = (std::string *)*((void *)a2 + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v10 = (std::string **)((char *)this + 24);
      uint64_t v11 = *((void *)this + 1);
      uint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
      if (v11)
      {
        uint64_t v12 = *(google::protobuf::Arena **)v12;
        int64_t v13 = *v10;
        if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
LABEL_18:
          std::string::operator=(v13, v9);
          if ((v6 & 2) != 0) {
            goto LABEL_24;
          }
LABEL_10:
          if ((v6 & 4) == 0) {
            goto LABEL_11;
          }
LABEL_30:
          unsigned int v20 = (std::string *)*((void *)a2 + 5);
          *((_DWORD *)this + 4) |= 4u;
          unsigned int v21 = (std::string **)((char *)this + 40);
          uint64_t v22 = *((void *)this + 1);
          int64_t v23 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
          if (v22)
          {
            int64_t v23 = *(google::protobuf::Arena **)v23;
            uint64_t v24 = *v21;
            if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            {
LABEL_32:
              std::string::operator=(v24, v20);
              if ((v6 & 8) != 0) {
                goto LABEL_36;
              }
LABEL_12:
              if ((v6 & 0x10) == 0) {
                goto LABEL_13;
              }
              goto LABEL_44;
            }
          }
          else
          {
            uint64_t v24 = *v21;
            if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_32;
            }
          }
          google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, v23, (long long *)v20);
          if ((v6 & 8) != 0) {
            goto LABEL_36;
          }
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v13 = *v10;
        if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_18;
        }
      }
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v10, v12, (long long *)v9);
      if ((v6 & 2) != 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = (unint64_t *)((char *)this + 8);
    uint64_t v5 = *((void *)a2 + 1);
    if ((v5 & 1) == 0) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  if (*v4)
  {
    google::protobuf::UnknownFieldSet::InternalMergeFrom((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8, v8);
    int v6 = *((_DWORD *)a2 + 4);
    if ((v6 & 0x3F) != 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v14 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v4);
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v14, v8);
    int v6 = *((_DWORD *)a2 + 4);
    if ((v6 & 0x3F) != 0) {
      goto LABEL_8;
    }
  }
}

void sub_23CE050E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE050F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::MergeFrom(google::protobuf::MethodOptions *this, const google::protobuf::MethodOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::MethodOptions *)((char *)this + 16), (const google::protobuf::MethodOptions *)((char *)a2 + 16));
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    uint64_t v8 = *((void *)this + 1);
    if (v8) {
      uint64_t v9 = (char *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
    }
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v7);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
    int v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 3) == 0) {
      return;
    }
    goto LABEL_9;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9274);
  int v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
  google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v6);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::MethodOptions *)((char *)this + 16), (const google::protobuf::MethodOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, (uint64_t)a2 + 48);
  int v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 3) == 0) {
    return;
  }
LABEL_9:
  if (v5) {
    *((unsigned char *)this + 72) = *((unsigned char *)a2 + 72);
  }
  if ((v5 & 2) != 0) {
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  }
  *((_DWORD *)this + 10) |= v5;
}

void sub_23CE05240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE05254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodDescriptorProto::CopyFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::MethodDescriptorProto::Clear(this);
    google::protobuf::MethodDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::MethodDescriptorProto::IsInitialized(google::protobuf::MethodDescriptorProto *this)
{
  if ((*((_DWORD *)this + 4) & 8) == 0) {
    return 1;
  }
  uint64_t v3 = *((void *)this + 6);
  if (v3)
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.h", 10444);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v5, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    uint64_t v3 = *((void *)this + 6);
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 16));
    if (!result) {
      return result;
    }
  }
  uint64_t result = google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>(v3 + 48);
  if (result) {
    return 1;
  }
  return result;
}

void sub_23CE05368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0537C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::MethodOptions::IsInitialized(google::protobuf::MethodOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::MethodOptions *)((char *)this + 16));
  if (result)
  {
    return google::protobuf::internal::AllAreInitialized<google::protobuf::UninterpretedOption>((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::MethodDescriptorProto::GetMetadata(google::protobuf::MethodDescriptorProto *this)
{
  return off_26AED0A18[24];
}

google::protobuf::FileOptions *google::protobuf::FileOptions::FileOptions(google::protobuf::FileOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C5488;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 6) = a2;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if (atomic_load_explicit(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 19) = 0;
  *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 1;
  *((unsigned char *)this + 164) = 1;
  return this;
}

void sub_23CE054C8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileOptions::~FileOptions(google::protobuf::FileOptions *this)
{
  google::protobuf::FileOptions::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      int v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        int v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::FileOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::FileOptions::~FileOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::FileOptions::SharedDtor(google::protobuf::FileOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 6374);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v18, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 9);
  if ((uint64_t *)v5 == &google::protobuf::internal::fixed_address_empty_string || v5 == 0)
  {
    uint64_t v7 = *((void *)this + 10);
    if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0) {
      goto LABEL_22;
    }
LABEL_14:
    uint64_t v9 = *((void *)this + 11);
    if ((uint64_t *)v9 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  if (*(char *)(v5 + 23) < 0) {
    operator delete(*(void **)v5);
  }
  MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  uint64_t v7 = *((void *)this + 10);
  if ((uint64_t *)v7 == &google::protobuf::internal::fixed_address_empty_string || v7 == 0) {
    goto LABEL_14;
  }
LABEL_22:
  if (*(char *)(v7 + 23) < 0) {
    operator delete(*(void **)v7);
  }
  MEMORY[0x23ECF2BC0](v7, 0x1012C40EC159624);
  uint64_t v9 = *((void *)this + 11);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
LABEL_25:
    if (v9)
    {
      if (*(char *)(v9 + 23) < 0) {
        operator delete(*(void **)v9);
      }
      MEMORY[0x23ECF2BC0](v9, 0x1012C40EC159624);
    }
  }
LABEL_29:
  uint64_t v11 = *((void *)this + 12);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x23ECF2BC0](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = *((void *)this + 13);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    MEMORY[0x23ECF2BC0](v12, 0x1012C40EC159624);
  }
  uint64_t v13 = *((void *)this + 14);
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string && v13)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    MEMORY[0x23ECF2BC0](v13, 0x1012C40EC159624);
  }
  uint64_t v14 = *((void *)this + 15);
  if ((uint64_t *)v14 != &google::protobuf::internal::fixed_address_empty_string && v14)
  {
    if (*(char *)(v14 + 23) < 0) {
      operator delete(*(void **)v14);
    }
    MEMORY[0x23ECF2BC0](v14, 0x1012C40EC159624);
  }
  uint64_t v15 = *((void *)this + 16);
  if ((uint64_t *)v15 != &google::protobuf::internal::fixed_address_empty_string && v15)
  {
    if (*(char *)(v15 + 23) < 0) {
      operator delete(*(void **)v15);
    }
    MEMORY[0x23ECF2BC0](v15, 0x1012C40EC159624);
  }
  uint64_t v16 = *((void *)this + 17);
  if ((uint64_t *)v16 != &google::protobuf::internal::fixed_address_empty_string && v16)
  {
    if (*(char *)(v16 + 23) < 0) {
      operator delete(*(void **)v16);
    }
    MEMORY[0x23ECF2BC0](v16, 0x1012C40EC159624);
  }
  uint64_t v17 = *((void *)this + 18);
  if ((uint64_t *)v17 != &google::protobuf::internal::fixed_address_empty_string && v17)
  {
    if (*(char *)(v17 + 23) < 0) {
      operator delete(*(void **)v17);
    }
    MEMORY[0x23ECF2BC0](v17, 0x1012C40EC159624);
  }
}

void sub_23CE05868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0587C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t *google::protobuf::FileOptions::default_instance(google::protobuf::FileOptions *this)
{
  if (atomic_load_explicit(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_FileOptions_default_instance_;
}

std::string::value_type *google::protobuf::FileOptions::_InternalParse(google::protobuf::FileOptions *this, std::string::value_type *a2, int32x2_t *a3)
{
  __s = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v148 = (std::string **)((char *)this + 136);
    std::string v149 = (std::string **)((char *)this + 144);
    uint64_t v146 = (std::string **)((char *)this + 120);
    uint64_t v147 = (std::string **)((char *)this + 128);
    uint64_t v144 = (std::string **)((char *)this + 104);
    uint64_t v145 = (std::string **)((char *)this + 112);
    int v142 = (std::string **)((char *)this + 88);
    uint64_t v143 = (std::string **)((char *)this + 96);
    int v140 = (unint64_t *)((char *)this + 8);
    std::string::size_type v141 = (std::string **)((char *)this + 80);
    uint64_t v8 = (uint64_t **)((char *)this + 72);
    while (1)
    {
      uint64_t v13 = __s + 1;
      LODWORD(v14) = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_11;
      }
      uint64_t v14 = (const char *)(v14 + (*v13 << 7) - 128);
      if ((*v13 & 0x80000000) == 0)
      {
        uint64_t v13 = __s + 2;
LABEL_11:
        __s = v13;
        unsigned int v15 = v14 >> 3;
        unsigned int v16 = (v14 >> 3) - 1;
LABEL_12:
        switch(v16)
        {
          case 0u:
            if (v14 != 10) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 1u;
            uint64_t v17 = *((void *)this + 1);
            char v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
            if ((v17 & 1) == 0)
            {
              uint64_t v19 = *v8;
              if (*v8 != &google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_17;
              }
LABEL_16:
              google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, v18, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              uint64_t v19 = *v8;
              uint64_t v13 = __s;
              goto LABEL_17;
            }
            char v18 = *(google::protobuf::Arena **)v18;
            uint64_t v19 = *v8;
            if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_16;
            }
LABEL_17:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v19, v13, (uint64_t)a3);
            if (*((char *)v19 + 23) < 0)
            {
              unsigned int v21 = (uint64_t *)*v19;
              size_t v9 = v19[1];
              if ((v9 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v19[1], "size_t to int conversion", v20);
              }
              uint64_t v19 = v21;
            }
            else
            {
              size_t v9 = *((unsigned __int8 *)v19 + 23);
            }
            char v10 = (std::string *)v19;
            size_t v11 = v9;
            uint64_t v12 = "google.protobuf.FileOptions.java_package";
            goto LABEL_6;
          case 1u:
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 0xBu:
          case 0xCu:
          case 0xDu:
          case 0xEu:
          case 0x12u:
          case 0x14u:
          case 0x15u:
          case 0x17u:
          case 0x18u:
          case 0x19u:
          case 0x1Bu:
          case 0x1Cu:
          case 0x1Du:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
          case 0x22u:
          case 0x25u:
          case 0x2Au:
            goto LABEL_142;
          case 7u:
            if (v14 != 66) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 2u;
            uint64_t v31 = *((void *)this + 1);
            char v32 = (google::protobuf::Arena *)(v31 & 0xFFFFFFFFFFFFFFFELL);
            if ((v31 & 1) == 0)
            {
              size_t v33 = *v141;
              if (*v141 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_41;
              }
LABEL_40:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v141, v32, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              size_t v33 = *v141;
              uint64_t v13 = __s;
              goto LABEL_41;
            }
            char v32 = *(google::protobuf::Arena **)v32;
            size_t v33 = *v141;
            if (*v141 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_40;
            }
LABEL_41:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v33, v13, (uint64_t)a3);
            if (SHIBYTE(v33->__r_.__value_.__r.__words[2]) < 0)
            {
              int v111 = (std::string *)v33->__r_.__value_.__r.__words[0];
              std::string::size_type size = v33->__r_.__value_.__l.__size_;
              if ((size & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v33->__r_.__value_.__l.__size_, "size_t to int conversion", v34);
              }
              size_t v33 = v111;
            }
            else
            {
              std::string::size_type size = HIBYTE(v33->__r_.__value_.__r.__words[2]);
            }
            char v10 = v33;
            size_t v11 = size;
            uint64_t v12 = "google.protobuf.FileOptions.java_outer_classname";
            goto LABEL_6;
          case 8u:
            if (v14 != 72) {
              goto LABEL_142;
            }
            unsigned int v36 = v13 + 1;
            uint64_t v37 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_47;
            }
            int v38 = *v36;
            int v39 = v37 + (v38 << 7);
            uint64_t v37 = (v39 - 128);
            if (v38 < 0)
            {
              __s = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)(v39 - 128));
              if (!__s) {
                goto LABEL_235;
              }
              uint64_t v37 = v118;
              if ((v118 - 1) <= 2)
              {
LABEL_48:
                *((_DWORD *)this + 10) |= 0x40000u;
                *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v37;
                goto LABEL_7;
              }
            }
            else
            {
              unsigned int v36 = v13 + 2;
LABEL_47:
              __s = v36;
              if ((v37 - 1) <= 2) {
                goto LABEL_48;
              }
            }
            if (*v140) {
              uint64_t v119 = (char *)((*v140 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              uint64_t v119 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v140);
            }
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v119, 9u, v37);
            break;
          case 9u:
            if (v14 != 80) {
              goto LABEL_142;
            }
            v6 |= 0x400u;
            unint64_t v40 = v13 + 1;
            unint64_t v41 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_53;
            }
            int v42 = *v40;
            unint64_t v41 = v41 + (v42 << 7) - 128;
            if (v42 < 0)
            {
              std::string v120 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v41);
              __s = v120;
              *((unsigned char *)this + 152) = v121 != 0;
              if (!v120) {
                goto LABEL_235;
              }
            }
            else
            {
              unint64_t v40 = v13 + 2;
LABEL_53:
              __s = v40;
              *((unsigned char *)this + 152) = v41 != 0;
            }
            goto LABEL_7;
          case 0xAu:
            if (v14 != 90) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 4u;
            uint64_t v43 = *((void *)this + 1);
            BOOL v44 = (google::protobuf::Arena *)(v43 & 0xFFFFFFFFFFFFFFFELL);
            if ((v43 & 1) == 0)
            {
              uint64_t v45 = *v142;
              if (*v142 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_58;
              }
LABEL_57:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v142, v44, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              uint64_t v45 = *v142;
              uint64_t v13 = __s;
              goto LABEL_58;
            }
            BOOL v44 = *(google::protobuf::Arena **)v44;
            uint64_t v45 = *v142;
            if (*v142 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_57;
            }
LABEL_58:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v45, v13, (uint64_t)a3);
            if (SHIBYTE(v45->__r_.__value_.__r.__words[2]) < 0)
            {
              uint64_t v112 = (std::string *)v45->__r_.__value_.__r.__words[0];
              std::string::size_type v47 = v45->__r_.__value_.__l.__size_;
              if ((v47 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v45->__r_.__value_.__l.__size_, "size_t to int conversion", v46);
              }
              uint64_t v45 = v112;
            }
            else
            {
              std::string::size_type v47 = HIBYTE(v45->__r_.__value_.__r.__words[2]);
            }
            char v10 = v45;
            size_t v11 = v47;
            uint64_t v12 = "google.protobuf.FileOptions.go_package";
            goto LABEL_6;
          case 0xFu:
            if (v14 != 128) {
              goto LABEL_142;
            }
            v6 |= 0x2000u;
            uint64_t v48 = v13 + 1;
            unint64_t v49 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_64;
            }
            int v50 = *v48;
            unint64_t v49 = v49 + (v50 << 7) - 128;
            if (v50 < 0)
            {
              int v122 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v49);
              __s = v122;
              *((unsigned char *)this + 155) = v123 != 0;
              if (!v122) {
                goto LABEL_235;
              }
            }
            else
            {
              uint64_t v48 = v13 + 2;
LABEL_64:
              __s = v48;
              *((unsigned char *)this + 155) = v49 != 0;
            }
            goto LABEL_7;
          case 0x10u:
            if (v14 != 136) {
              goto LABEL_142;
            }
            v6 |= 0x4000u;
            unsigned int v51 = v13 + 1;
            unint64_t v52 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_69;
            }
            int v53 = *v51;
            unint64_t v52 = v52 + (v53 << 7) - 128;
            if (v53 < 0)
            {
              std::string v124 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v52);
              __s = v124;
              *((unsigned char *)this + 156) = v125 != 0;
              if (!v124) {
                goto LABEL_235;
              }
            }
            else
            {
              unsigned int v51 = v13 + 2;
LABEL_69:
              __s = v51;
              *((unsigned char *)this + 156) = v52 != 0;
            }
            goto LABEL_7;
          case 0x11u:
            if (v14 != 144) {
              goto LABEL_142;
            }
            v6 |= 0x8000u;
            uint64_t v54 = v13 + 1;
            unint64_t v55 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_74;
            }
            int v56 = *v54;
            unint64_t v55 = v55 + (v56 << 7) - 128;
            if (v56 < 0)
            {
              int v126 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v55);
              __s = v126;
              *((unsigned char *)this + 157) = v127 != 0;
              if (!v126) {
                goto LABEL_235;
              }
            }
            else
            {
              uint64_t v54 = v13 + 2;
LABEL_74:
              __s = v54;
              *((unsigned char *)this + 157) = v55 != 0;
            }
            goto LABEL_7;
          case 0x13u:
            if (v14 != 160) {
              goto LABEL_142;
            }
            v6 |= 0x800u;
            char v57 = v13 + 1;
            unint64_t v58 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_79;
            }
            int v59 = *v57;
            unint64_t v58 = v58 + (v59 << 7) - 128;
            if (v59 < 0)
            {
              std::string::size_type v128 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v58);
              __s = v128;
              *((unsigned char *)this + 153) = v129 != 0;
              if (!v128) {
                goto LABEL_235;
              }
            }
            else
            {
              char v57 = v13 + 2;
LABEL_79:
              __s = v57;
              *((unsigned char *)this + 153) = v58 != 0;
            }
            goto LABEL_7;
          case 0x16u:
            if (v14 != 184) {
              goto LABEL_142;
            }
            v6 |= 0x20000u;
            uint64_t v60 = v13 + 1;
            unint64_t v61 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_84;
            }
            int v62 = *v60;
            unint64_t v61 = v61 + (v62 << 7) - 128;
            if (v62 < 0)
            {
              uint64_t v130 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v61);
              __s = v130;
              *((unsigned char *)this + 159) = v131 != 0;
              if (!v130) {
                goto LABEL_235;
              }
            }
            else
            {
              uint64_t v60 = v13 + 2;
LABEL_84:
              __s = v60;
              *((unsigned char *)this + 159) = v61 != 0;
            }
            goto LABEL_7;
          case 0x1Au:
            if (v14 != 216) {
              goto LABEL_142;
            }
            v6 |= 0x1000u;
            BOOL v63 = v13 + 1;
            unint64_t v64 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_89;
            }
            int v65 = *v63;
            unint64_t v64 = v64 + (v65 << 7) - 128;
            if (v65 < 0)
            {
              long long v132 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v64);
              __s = v132;
              *((unsigned char *)this + 154) = v133 != 0;
              if (!v132) {
                goto LABEL_235;
              }
            }
            else
            {
              BOOL v63 = v13 + 2;
LABEL_89:
              __s = v63;
              *((unsigned char *)this + 154) = v64 != 0;
            }
            goto LABEL_7;
          case 0x1Eu:
            if (v14 != 248) {
              goto LABEL_142;
            }
            v6 |= 0x80000u;
            uint64_t v66 = v13 + 1;
            unint64_t v67 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_94;
            }
            int v68 = *v66;
            unint64_t v67 = v67 + (v68 << 7) - 128;
            if (v68 < 0)
            {
              long long v134 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v67);
              __s = v134;
              *((unsigned char *)this + 164) = v135 != 0;
              if (!v134) {
                goto LABEL_235;
              }
            }
            else
            {
              uint64_t v66 = v13 + 2;
LABEL_94:
              __s = v66;
              *((unsigned char *)this + 164) = v67 != 0;
            }
            goto LABEL_7;
          case 0x23u:
            if (v14 != 34) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 8u;
            uint64_t v69 = *((void *)this + 1);
            int v70 = (google::protobuf::Arena *)(v69 & 0xFFFFFFFFFFFFFFFELL);
            if ((v69 & 1) == 0)
            {
              int v71 = *v143;
              if (*v143 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_99;
              }
LABEL_98:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v143, v70, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              int v71 = *v143;
              uint64_t v13 = __s;
              goto LABEL_99;
            }
            int v70 = *(google::protobuf::Arena **)v70;
            int v71 = *v143;
            if (*v143 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_98;
            }
LABEL_99:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v71, v13, (uint64_t)a3);
            if (SHIBYTE(v71->__r_.__value_.__r.__words[2]) < 0)
            {
              std::string::size_type v113 = (std::string *)v71->__r_.__value_.__r.__words[0];
              std::string::size_type v73 = v71->__r_.__value_.__l.__size_;
              if ((v73 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v71->__r_.__value_.__l.__size_, "size_t to int conversion", v72);
              }
              int v71 = v113;
            }
            else
            {
              std::string::size_type v73 = HIBYTE(v71->__r_.__value_.__r.__words[2]);
            }
            char v10 = v71;
            size_t v11 = v73;
            uint64_t v12 = "google.protobuf.FileOptions.objc_class_prefix";
            goto LABEL_6;
          case 0x24u:
            if (v14 != 42) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 0x10u;
            uint64_t v74 = *((void *)this + 1);
            uint64_t v75 = (google::protobuf::Arena *)(v74 & 0xFFFFFFFFFFFFFFFELL);
            if ((v74 & 1) == 0)
            {
              unsigned int v76 = *v144;
              if (*v144 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_105;
              }
LABEL_104:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v144, v75, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              unsigned int v76 = *v144;
              uint64_t v13 = __s;
              goto LABEL_105;
            }
            uint64_t v75 = *(google::protobuf::Arena **)v75;
            unsigned int v76 = *v144;
            if (*v144 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_104;
            }
LABEL_105:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v76, v13, (uint64_t)a3);
            if (SHIBYTE(v76->__r_.__value_.__r.__words[2]) < 0)
            {
              long long v114 = (std::string *)v76->__r_.__value_.__r.__words[0];
              std::string::size_type v78 = v76->__r_.__value_.__l.__size_;
              if ((v78 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v76->__r_.__value_.__l.__size_, "size_t to int conversion", v77);
              }
              unsigned int v76 = v114;
            }
            else
            {
              std::string::size_type v78 = HIBYTE(v76->__r_.__value_.__r.__words[2]);
            }
            char v10 = v76;
            size_t v11 = v78;
            uint64_t v12 = "google.protobuf.FileOptions.csharp_namespace";
            goto LABEL_6;
          case 0x26u:
            if (v14 != 58) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 0x20u;
            uint64_t v79 = *((void *)this + 1);
            unsigned int v80 = (google::protobuf::Arena *)(v79 & 0xFFFFFFFFFFFFFFFELL);
            if ((v79 & 1) == 0)
            {
              int v81 = *v145;
              if (*v145 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_111;
              }
LABEL_110:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v145, v80, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              int v81 = *v145;
              uint64_t v13 = __s;
              goto LABEL_111;
            }
            unsigned int v80 = *(google::protobuf::Arena **)v80;
            int v81 = *v145;
            if (*v145 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_110;
            }
LABEL_111:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v81, v13, (uint64_t)a3);
            if (SHIBYTE(v81->__r_.__value_.__r.__words[2]) < 0)
            {
              uint64_t v115 = (std::string *)v81->__r_.__value_.__r.__words[0];
              std::string::size_type v83 = v81->__r_.__value_.__l.__size_;
              if ((v83 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v81->__r_.__value_.__l.__size_, "size_t to int conversion", v82);
              }
              int v81 = v115;
            }
            else
            {
              std::string::size_type v83 = HIBYTE(v81->__r_.__value_.__r.__words[2]);
            }
            char v10 = v81;
            size_t v11 = v83;
            uint64_t v12 = "google.protobuf.FileOptions.swift_prefix";
            goto LABEL_6;
          case 0x27u:
            if (v14 != 66) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 0x40u;
            uint64_t v84 = *((void *)this + 1);
            int v85 = (google::protobuf::Arena *)(v84 & 0xFFFFFFFFFFFFFFFELL);
            if ((v84 & 1) == 0)
            {
              unint64_t v86 = *v146;
              if (*v146 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_117;
              }
LABEL_116:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v146, v85, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              unint64_t v86 = *v146;
              uint64_t v13 = __s;
              goto LABEL_117;
            }
            int v85 = *(google::protobuf::Arena **)v85;
            unint64_t v86 = *v146;
            if (*v146 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_116;
            }
LABEL_117:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v86, v13, (uint64_t)a3);
            if (SHIBYTE(v86->__r_.__value_.__r.__words[2]) < 0)
            {
              long long v116 = (std::string *)v86->__r_.__value_.__r.__words[0];
              std::string::size_type v88 = v86->__r_.__value_.__l.__size_;
              if ((v88 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v86->__r_.__value_.__l.__size_, "size_t to int conversion", v87);
              }
              unint64_t v86 = v116;
            }
            else
            {
              std::string::size_type v88 = HIBYTE(v86->__r_.__value_.__r.__words[2]);
            }
            char v10 = v86;
            size_t v11 = v88;
            uint64_t v12 = "google.protobuf.FileOptions.php_class_prefix";
            goto LABEL_6;
          case 0x28u:
            if (v14 != 74) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 0x80u;
            uint64_t v89 = *((void *)this + 1);
            int v90 = (google::protobuf::Arena *)(v89 & 0xFFFFFFFFFFFFFFFELL);
            if ((v89 & 1) == 0)
            {
              int v91 = *v147;
              if (*v147 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_123;
              }
LABEL_122:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v147, v90, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              int v91 = *v147;
              uint64_t v13 = __s;
              goto LABEL_123;
            }
            int v90 = *(google::protobuf::Arena **)v90;
            int v91 = *v147;
            if (*v147 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_122;
            }
LABEL_123:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v91, v13, (uint64_t)a3);
            if (SHIBYTE(v91->__r_.__value_.__r.__words[2]) < 0)
            {
              int v109 = (std::string *)v91->__r_.__value_.__r.__words[0];
              std::string::size_type v93 = v91->__r_.__value_.__l.__size_;
              if ((v93 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v91->__r_.__value_.__l.__size_, "size_t to int conversion", v92);
              }
              int v91 = v109;
            }
            else
            {
              std::string::size_type v93 = HIBYTE(v91->__r_.__value_.__r.__words[2]);
            }
            char v10 = v91;
            size_t v11 = v93;
            uint64_t v12 = "google.protobuf.FileOptions.php_namespace";
            goto LABEL_6;
          case 0x29u:
            if (v14 != 80) {
              goto LABEL_142;
            }
            v6 |= 0x10000u;
            uint64_t v94 = v13 + 1;
            unint64_t v95 = *v13;
            if ((*v13 & 0x80000000) == 0) {
              goto LABEL_129;
            }
            int v96 = *v94;
            unint64_t v95 = v95 + (v96 << 7) - 128;
            if (v96 < 0)
            {
              size_t v136 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v13, (const char *)v95);
              __s = v136;
              *((unsigned char *)this + 15google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v137 != 0;
              if (!v136) {
                goto LABEL_235;
              }
            }
            else
            {
              uint64_t v94 = v13 + 2;
LABEL_129:
              __s = v94;
              *((unsigned char *)this + 15google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v95 != 0;
            }
            goto LABEL_7;
          case 0x2Bu:
            if (v14 != 98) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 0x100u;
            uint64_t v97 = *((void *)this + 1);
            long long v98 = (google::protobuf::Arena *)(v97 & 0xFFFFFFFFFFFFFFFELL);
            if ((v97 & 1) == 0)
            {
              uint64_t v99 = *v148;
              if (*v148 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_134;
              }
LABEL_133:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v148, v98, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              uint64_t v99 = *v148;
              uint64_t v13 = __s;
              goto LABEL_134;
            }
            long long v98 = *(google::protobuf::Arena **)v98;
            uint64_t v99 = *v148;
            if (*v148 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_133;
            }
LABEL_134:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v99, v13, (uint64_t)a3);
            if (SHIBYTE(v99->__r_.__value_.__r.__words[2]) < 0)
            {
              std::string::size_type v117 = (std::string *)v99->__r_.__value_.__r.__words[0];
              std::string::size_type v101 = v99->__r_.__value_.__l.__size_;
              if ((v101 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v99->__r_.__value_.__l.__size_, "size_t to int conversion", v100);
              }
              uint64_t v99 = v117;
            }
            else
            {
              std::string::size_type v101 = HIBYTE(v99->__r_.__value_.__r.__words[2]);
            }
            char v10 = v99;
            size_t v11 = v101;
            uint64_t v12 = "google.protobuf.FileOptions.php_metadata_namespace";
            goto LABEL_6;
          case 0x2Cu:
            if (v14 != 106) {
              goto LABEL_142;
            }
            *((_DWORD *)this + 10) |= 0x200u;
            uint64_t v102 = *((void *)this + 1);
            std::string::size_type v103 = (google::protobuf::Arena *)(v102 & 0xFFFFFFFFFFFFFFFELL);
            if ((v102 & 1) == 0)
            {
              std::string::size_type v104 = *v149;
              if (*v149 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_140;
              }
LABEL_139:
              google::protobuf::internal::ArenaStringPtr::CreateInstance(v149, v103, (long long *)&google::protobuf::internal::fixed_address_empty_string);
              std::string::size_type v104 = *v149;
              uint64_t v13 = __s;
              goto LABEL_140;
            }
            std::string::size_type v103 = *(google::protobuf::Arena **)v103;
            std::string::size_type v104 = *v149;
            if (*v149 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_139;
            }
LABEL_140:
            __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v104, v13, (uint64_t)a3);
            if (SHIBYTE(v104->__r_.__value_.__r.__words[2]) < 0)
            {
              int v110 = (std::string *)v104->__r_.__value_.__r.__words[0];
              std::string::size_type v106 = v104->__r_.__value_.__l.__size_;
              if ((v106 & 0x8000000000000000) != 0) {
                google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v104->__r_.__value_.__l.__size_, "size_t to int conversion", v105);
              }
              std::string::size_type v104 = v110;
            }
            else
            {
              std::string::size_type v106 = HIBYTE(v104->__r_.__value_.__r.__words[2]);
            }
            char v10 = v104;
            size_t v11 = v106;
            uint64_t v12 = "google.protobuf.FileOptions.ruby_package";
LABEL_6:
            google::protobuf::internal::VerifyUTF8(v10, v11, (google::protobuf::internal *)v12);
            if (!__s) {
              goto LABEL_235;
            }
            goto LABEL_7;
          default:
            goto LABEL_23;
        }
        goto LABEL_7;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, v14);
      __s = TagFallback;
      if (!TagFallback) {
        goto LABEL_235;
      }
      uint64_t v13 = TagFallback;
      unsigned int v15 = v14 >> 3;
      unsigned int v16 = (v14 >> 3) - 1;
      if (v16 <= 0x2C) {
        goto LABEL_12;
      }
LABEL_23:
      if (v15 == 999 && v14 == 58) {
        break;
      }
LABEL_142:
      if (v14) {
        BOOL v107 = (v14 & 7) == 4;
      }
      else {
        BOOL v107 = 1;
      }
      if (v107)
      {
        a3[10].i32[0] = v14 - 1;
        goto LABEL_2;
      }
      int v108 = (google::protobuf::internal *)v14;
      if (v14 >> 6 < 0x7D)
      {
        if (*v140)
        {
          __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v14, (google::protobuf::UnknownFieldSet *)((*v140 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v13, (const char *)a3, v5);
          if (!__s) {
            goto LABEL_235;
          }
        }
        else
        {
          uint64_t v138 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v140);
          __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse(v108, (google::protobuf::UnknownFieldSet *)v138, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v139);
          if (!__s)
          {
LABEL_235:
            __s = 0;
            goto LABEL_2;
          }
        }
      }
      else
      {
        __s = google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::FileOptions *)((char *)this + 16), (google::protobuf::internal *)v14, (google::protobuf::internal *)v13, (uint64_t)&google::protobuf::_FileOptions_default_instance_, v140, a3);
        if (!__s) {
          goto LABEL_235;
        }
      }
LABEL_7:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&__s, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    int64_t v23 = v13 - 2;
    while (1)
    {
      uint64_t v24 = v23 + 2;
      __s = v23 + 2;
      unsigned int v25 = (int *)*((void *)this + 8);
      if (!v25) {
        break;
      }
      uint64_t v26 = *((int *)this + 14);
      int v27 = *v25;
      if ((int)v26 >= *v25)
      {
        if (v27 == *((_DWORD *)this + 15))
        {
LABEL_31:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v27 + 1);
          unsigned int v25 = (int *)*((void *)this + 8);
          int v27 = *v25;
        }
        *unsigned int v25 = v27 + 1;
        char v28 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
        uint64_t v29 = *((void *)this + 8);
        uint64_t v30 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v30 + 1;
        *(void *)(v29 + 8 * v30 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v28;
        uint64_t v24 = __s;
        goto LABEL_33;
      }
      *((_DWORD *)this + 14) = v26 + 1;
      char v28 = *(google::protobuf::UninterpretedOption **)&v25[2 * v26 + 2];
LABEL_33:
      int64_t v23 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((uint64_t)a3, v28, v24);
      __s = v23;
      if (!v23) {
        goto LABEL_235;
      }
      if (*(void *)a3 <= (unint64_t)v23 || *(_WORD *)v23 != 16058) {
        goto LABEL_7;
      }
    }
    int v27 = *((_DWORD *)this + 15);
    goto LABEL_31;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return __s;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileOptions::_InternalSerialize(google::protobuf::FileOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)*((void *)this + 9);
    if ((char)v8[23] < 0)
    {
      uint64_t v8 = *(unsigned __int8 **)v8;
      size_t v9 = *(const char **)(*((void *)this + 9) + 8);
    }
    else
    {
      size_t v9 = (const char *)v8[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v8, v9, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.java_package");
    uint64_t v10 = *((void *)this + 9);
    if (*(char *)(v10 + 23) < 0)
    {
      int64_t v11 = *(void *)(v10 + 8);
      if (v11 > 127) {
        goto LABEL_49;
      }
    }
    else
    {
      int64_t v11 = *(unsigned __int8 *)(v10 + 23);
    }
    if (*(void *)a3 - (void)a2 + 14 >= v11)
    {
      *a2 = 10;
      a2[1] = v11;
      if (*(char *)(v10 + 23) >= 0) {
        uint64_t v12 = (const void *)v10;
      }
      else {
        uint64_t v12 = *(const void **)v10;
      }
      memcpy(a2 + 2, v12, v11);
      a2 += v11 + 2;
      if ((v6 & 2) != 0) {
        goto LABEL_34;
      }
LABEL_3:
      if ((v6 & 0x40000) == 0) {
        goto LABEL_4;
      }
LABEL_45:
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
        unint64_t v18 = *((int *)this + 40);
        *a2 = 72;
        if (v18 <= 0x7F)
        {
LABEL_47:
          a2[1] = v18;
          a2 += 2;
          if ((v6 & 0x400) != 0) {
            goto LABEL_60;
          }
          goto LABEL_5;
        }
      }
      else
      {
        unint64_t v18 = *((int *)this + 40);
        *a2 = 72;
        if (v18 <= 0x7F) {
          goto LABEL_47;
        }
      }
      a2[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      if (v18 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - 1) = v19 | 0x80;
          unint64_t v20 = v19 >> 7;
          ++a2;
          unint64_t v21 = v19 >> 14;
          v19 >>= 7;
        }
        while (v21);
        *(a2 - 1) = v20;
        if ((v6 & 0x400) != 0) {
          goto LABEL_60;
        }
      }
      else
      {
        a2[2] = v19;
        a2 += 3;
        if ((v6 & 0x400) != 0) {
          goto LABEL_60;
        }
      }
LABEL_5:
      if ((v6 & 4) == 0) {
        goto LABEL_6;
      }
LABEL_63:
      int64_t v23 = (unsigned __int8 *)*((void *)this + 11);
      if ((char)v23[23] < 0)
      {
        int64_t v23 = *(unsigned __int8 **)v23;
        uint64_t v24 = *(const char **)(*((void *)this + 11) + 8);
      }
      else
      {
        uint64_t v24 = (const char *)v23[23];
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v23, v24, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.go_package");
      uint64_t v25 = *((void *)this + 11);
      if (*(char *)(v25 + 23) < 0)
      {
        int64_t v26 = *(void *)(v25 + 8);
        if (v26 > 127) {
          goto LABEL_186;
        }
      }
      else
      {
        int64_t v26 = *(unsigned __int8 *)(v25 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v26)
      {
        *a2 = 90;
        a2[1] = v26;
        if (*(char *)(v25 + 23) >= 0) {
          int v27 = (const void *)v25;
        }
        else {
          int v27 = *(const void **)v25;
        }
        memcpy(a2 + 2, v27, v26);
        a2 += v26 + 2;
        if ((v6 & 0x2000) != 0) {
          goto LABEL_74;
        }
LABEL_7:
        if ((v6 & 0x4000) == 0) {
          goto LABEL_8;
        }
        goto LABEL_77;
      }
LABEL_186:
      a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 11, v25, a2);
      if ((v6 & 0x2000) != 0) {
        goto LABEL_74;
      }
      goto LABEL_7;
    }
LABEL_49:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v10, a2);
    if ((v6 & 2) != 0) {
      goto LABEL_34;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_34:
  uint64_t v13 = (unsigned __int8 *)*((void *)this + 10);
  if ((char)v13[23] < 0)
  {
    uint64_t v13 = *(unsigned __int8 **)v13;
    uint64_t v14 = *(const char **)(*((void *)this + 10) + 8);
  }
  else
  {
    uint64_t v14 = (const char *)v13[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v13, v14, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.java_outer_classname");
  uint64_t v15 = *((void *)this + 10);
  if (*(char *)(v15 + 23) < 0)
  {
    int64_t v16 = *(void *)(v15 + 8);
    if (v16 > 127) {
      goto LABEL_51;
    }
  }
  else
  {
    int64_t v16 = *(unsigned __int8 *)(v15 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v16)
  {
LABEL_51:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 8, v15, a2);
    if ((v6 & 0x40000) != 0) {
      goto LABEL_45;
    }
    goto LABEL_4;
  }
  *a2 = 66;
  a2[1] = v16;
  if (*(char *)(v15 + 23) >= 0) {
    uint64_t v17 = (const void *)v15;
  }
  else {
    uint64_t v17 = *(const void **)v15;
  }
  memcpy(a2 + 2, v17, v16);
  a2 += v16 + 2;
  if ((v6 & 0x40000) != 0) {
    goto LABEL_45;
  }
LABEL_4:
  if ((v6 & 0x400) == 0) {
    goto LABEL_5;
  }
LABEL_60:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v22 = *((unsigned char *)this + 152);
  *a2 = 80;
  a2[1] = v22;
  a2 += 2;
  if ((v6 & 4) != 0) {
    goto LABEL_63;
  }
LABEL_6:
  if ((v6 & 0x2000) == 0) {
    goto LABEL_7;
  }
LABEL_74:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v28 = *((unsigned char *)this + 155);
  *(_WORD *)a2 = 384;
  a2[2] = v28;
  a2 += 3;
  if ((v6 & 0x4000) == 0)
  {
LABEL_8:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_80;
  }
LABEL_77:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v29 = *((unsigned char *)this + 156);
  *(_WORD *)a2 = 392;
  a2[2] = v29;
  a2 += 3;
  if ((v6 & 0x8000) == 0)
  {
LABEL_9:
    if ((v6 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_83;
  }
LABEL_80:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v30 = *((unsigned char *)this + 157);
  *(_WORD *)a2 = 400;
  a2[2] = v30;
  a2 += 3;
  if ((v6 & 0x800) == 0)
  {
LABEL_10:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_86;
  }
LABEL_83:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v31 = *((unsigned char *)this + 153);
  *(_WORD *)a2 = 416;
  a2[2] = v31;
  a2 += 3;
  if ((v6 & 0x20000) == 0)
  {
LABEL_11:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_89;
  }
LABEL_86:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v32 = *((unsigned char *)this + 159);
  *(_WORD *)a2 = 440;
  a2[2] = v32;
  a2 += 3;
  if ((v6 & 0x1000) == 0)
  {
LABEL_12:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }
LABEL_89:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v33 = *((unsigned char *)this + 154);
  *(_WORD *)a2 = 472;
  a2[2] = v33;
  a2 += 3;
  if ((v6 & 0x80000) == 0)
  {
LABEL_13:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_95:
    unsigned int v35 = (unsigned __int8 *)*((void *)this + 12);
    if ((char)v35[23] < 0)
    {
      unsigned int v35 = *(unsigned __int8 **)v35;
      unsigned int v36 = *(const char **)(*((void *)this + 12) + 8);
    }
    else
    {
      unsigned int v36 = (const char *)v35[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v35, v36, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.objc_class_prefix");
    uint64_t v37 = *((void *)this + 12);
    if (*(char *)(v37 + 23) < 0)
    {
      int64_t v38 = *(void *)(v37 + 8);
      if (v38 > 127) {
        goto LABEL_188;
      }
    }
    else
    {
      int64_t v38 = *(unsigned __int8 *)(v37 + 23);
    }
    if (*(void *)a3 - (void)a2 + 13 >= v38)
    {
      *(_WORD *)a2 = 674;
      a2[2] = v38;
      if (*(char *)(v37 + 23) >= 0) {
        int v39 = (const void *)v37;
      }
      else {
        int v39 = *(const void **)v37;
      }
      memcpy(a2 + 3, v39, v38);
      a2 += v38 + 3;
      if ((v6 & 0x10) != 0) {
        goto LABEL_106;
      }
LABEL_15:
      if ((v6 & 0x20) == 0) {
        goto LABEL_16;
      }
LABEL_117:
      uint64_t v45 = (unsigned __int8 *)*((void *)this + 14);
      if ((char)v45[23] < 0)
      {
        uint64_t v45 = *(unsigned __int8 **)v45;
        unsigned int v46 = *(const char **)(*((void *)this + 14) + 8);
      }
      else
      {
        unsigned int v46 = (const char *)v45[23];
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v45, v46, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.swift_prefix");
      uint64_t v47 = *((void *)this + 14);
      if (*(char *)(v47 + 23) < 0)
      {
        int64_t v48 = *(void *)(v47 + 8);
        if (v48 > 127) {
          goto LABEL_192;
        }
      }
      else
      {
        int64_t v48 = *(unsigned __int8 *)(v47 + 23);
      }
      if (*(void *)a3 - (void)a2 + 13 >= v48)
      {
        *(_WORD *)a2 = 698;
        a2[2] = v48;
        if (*(char *)(v47 + 23) >= 0) {
          unint64_t v49 = (const void *)v47;
        }
        else {
          unint64_t v49 = *(const void **)v47;
        }
        memcpy(a2 + 3, v49, v48);
        a2 += v48 + 3;
        if ((v6 & 0x40) != 0) {
          goto LABEL_128;
        }
LABEL_17:
        if ((v6 & 0x80) == 0) {
          goto LABEL_18;
        }
LABEL_139:
        unint64_t v55 = (unsigned __int8 *)*((void *)this + 16);
        if ((char)v55[23] < 0)
        {
          unint64_t v55 = *(unsigned __int8 **)v55;
          int v56 = *(const char **)(*((void *)this + 16) + 8);
        }
        else
        {
          int v56 = (const char *)v55[23];
        }
        google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v55, v56, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.php_namespace");
        uint64_t v57 = *((void *)this + 16);
        if (*(char *)(v57 + 23) < 0)
        {
          int64_t v58 = *(void *)(v57 + 8);
          if (v58 > 127) {
            goto LABEL_196;
          }
        }
        else
        {
          int64_t v58 = *(unsigned __int8 *)(v57 + 23);
        }
        if (*(void *)a3 - (void)a2 + 13 >= v58)
        {
          *(_WORD *)a2 = 714;
          a2[2] = v58;
          if (*(char *)(v57 + 23) >= 0) {
            int v59 = (const void *)v57;
          }
          else {
            int v59 = *(const void **)v57;
          }
          memcpy(a2 + 3, v59, v58);
          a2 += v58 + 3;
          if ((v6 & 0x10000) != 0) {
            goto LABEL_150;
          }
LABEL_19:
          if ((v6 & 0x100) == 0) {
            goto LABEL_20;
          }
LABEL_153:
          unint64_t v61 = (unsigned __int8 *)*((void *)this + 17);
          if ((char)v61[23] < 0)
          {
            unint64_t v61 = *(unsigned __int8 **)v61;
            int v62 = *(const char **)(*((void *)this + 17) + 8);
          }
          else
          {
            int v62 = (const char *)v61[23];
          }
          google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v61, v62, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.php_metadata_namespace");
          uint64_t v63 = *((void *)this + 17);
          if (*(char *)(v63 + 23) < 0)
          {
            int64_t v64 = *(void *)(v63 + 8);
            if (v64 > 127) {
              goto LABEL_198;
            }
          }
          else
          {
            int64_t v64 = *(unsigned __int8 *)(v63 + 23);
          }
          if (*(void *)a3 - (void)a2 + 13 >= v64)
          {
            *(_WORD *)a2 = 738;
            a2[2] = v64;
            if (*(char *)(v63 + 23) >= 0) {
              int v65 = (const void *)v63;
            }
            else {
              int v65 = *(const void **)v63;
            }
            memcpy(a2 + 3, v65, v64);
            a2 += v64 + 3;
            if ((v6 & 0x200) != 0) {
              goto LABEL_164;
            }
LABEL_21:
            int v7 = *((_DWORD *)this + 14);
            if (!v7) {
              goto LABEL_201;
            }
            goto LABEL_175;
          }
LABEL_198:
          a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 44, v63, a2);
          if ((v6 & 0x200) != 0) {
            goto LABEL_164;
          }
          goto LABEL_21;
        }
LABEL_196:
        a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 41, v57, a2);
        if ((v6 & 0x10000) != 0) {
          goto LABEL_150;
        }
        goto LABEL_19;
      }
LABEL_192:
      a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 39, v47, a2);
      if ((v6 & 0x40) != 0) {
        goto LABEL_128;
      }
      goto LABEL_17;
    }
LABEL_188:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 36, v37, a2);
    if ((v6 & 0x10) != 0) {
      goto LABEL_106;
    }
    goto LABEL_15;
  }
LABEL_92:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v34 = *((unsigned char *)this + 164);
  *(_WORD *)a2 = 504;
  a2[2] = v34;
  a2 += 3;
  if ((v6 & 8) != 0) {
    goto LABEL_95;
  }
LABEL_14:
  if ((v6 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_106:
  unint64_t v40 = (unsigned __int8 *)*((void *)this + 13);
  if ((char)v40[23] < 0)
  {
    unint64_t v40 = *(unsigned __int8 **)v40;
    unint64_t v41 = *(const char **)(*((void *)this + 13) + 8);
  }
  else
  {
    unint64_t v41 = (const char *)v40[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v40, v41, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.csharp_namespace");
  uint64_t v42 = *((void *)this + 13);
  if (*(char *)(v42 + 23) < 0)
  {
    int64_t v43 = *(void *)(v42 + 8);
    if (v43 > 127) {
      goto LABEL_190;
    }
  }
  else
  {
    int64_t v43 = *(unsigned __int8 *)(v42 + 23);
  }
  if (*(void *)a3 - (void)a2 + 13 < v43)
  {
LABEL_190:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 37, v42, a2);
    if ((v6 & 0x20) != 0) {
      goto LABEL_117;
    }
    goto LABEL_16;
  }
  *(_WORD *)a2 = 682;
  a2[2] = v43;
  if (*(char *)(v42 + 23) >= 0) {
    BOOL v44 = (const void *)v42;
  }
  else {
    BOOL v44 = *(const void **)v42;
  }
  memcpy(a2 + 3, v44, v43);
  a2 += v43 + 3;
  if ((v6 & 0x20) != 0) {
    goto LABEL_117;
  }
LABEL_16:
  if ((v6 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_128:
  int v50 = (unsigned __int8 *)*((void *)this + 15);
  if ((char)v50[23] < 0)
  {
    int v50 = *(unsigned __int8 **)v50;
    unsigned int v51 = *(const char **)(*((void *)this + 15) + 8);
  }
  else
  {
    unsigned int v51 = (const char *)v50[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v50, v51, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.php_class_prefix");
  uint64_t v52 = *((void *)this + 15);
  if (*(char *)(v52 + 23) < 0)
  {
    int64_t v53 = *(void *)(v52 + 8);
    if (v53 > 127) {
      goto LABEL_194;
    }
  }
  else
  {
    int64_t v53 = *(unsigned __int8 *)(v52 + 23);
  }
  if (*(void *)a3 - (void)a2 + 13 < v53)
  {
LABEL_194:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 40, v52, a2);
    if ((v6 & 0x80) != 0) {
      goto LABEL_139;
    }
    goto LABEL_18;
  }
  *(_WORD *)a2 = 706;
  a2[2] = v53;
  if (*(char *)(v52 + 23) >= 0) {
    uint64_t v54 = (const void *)v52;
  }
  else {
    uint64_t v54 = *(const void **)v52;
  }
  memcpy(a2 + 3, v54, v53);
  a2 += v53 + 3;
  if ((v6 & 0x80) != 0) {
    goto LABEL_139;
  }
LABEL_18:
  if ((v6 & 0x10000) == 0) {
    goto LABEL_19;
  }
LABEL_150:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v60 = *((unsigned char *)this + 158);
  *(_WORD *)a2 = 720;
  a2[2] = v60;
  a2 += 3;
  if ((v6 & 0x100) != 0) {
    goto LABEL_153;
  }
LABEL_20:
  if ((v6 & 0x200) == 0) {
    goto LABEL_21;
  }
LABEL_164:
  uint64_t v66 = (unsigned __int8 *)*((void *)this + 18);
  if ((char)v66[23] < 0)
  {
    uint64_t v66 = *(unsigned __int8 **)v66;
    unint64_t v67 = *(const char **)(*((void *)this + 18) + 8);
  }
  else
  {
    unint64_t v67 = (const char *)v66[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v66, v67, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.ruby_package");
  uint64_t v68 = *((void *)this + 18);
  if ((*(char *)(v68 + 23) & 0x80000000) == 0)
  {
    int64_t v69 = *(unsigned __int8 *)(v68 + 23);
    goto LABEL_170;
  }
  int64_t v69 = *(void *)(v68 + 8);
  if (v69 <= 127)
  {
LABEL_170:
    if (*(void *)a3 - (void)a2 + 13 >= v69)
    {
      *(_WORD *)a2 = 746;
      a2[2] = v69;
      if (*(char *)(v68 + 23) >= 0) {
        int v70 = (const void *)v68;
      }
      else {
        int v70 = *(const void **)v68;
      }
      memcpy(a2 + 3, v70, v69);
      a2 += v69 + 3;
      int v7 = *((_DWORD *)this + 14);
      if (!v7) {
        goto LABEL_201;
      }
      goto LABEL_175;
    }
  }
  a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 45, v68, a2);
  int v7 = *((_DWORD *)this + 14);
  if (!v7) {
    goto LABEL_201;
  }
LABEL_175:
  for (int i = 0; i != v7; ++i)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    std::string::size_type v73 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
    *(_WORD *)a2 = 16058;
    unsigned int v75 = *((_DWORD *)v73 + 5);
    if (v75 <= 0x7F)
    {
      a2[2] = v75;
      uint64_t v72 = (unsigned __int8 *)(a2 + 3);
    }
    else
    {
      a2[2] = v75 | 0x80;
      unsigned int v76 = v75 >> 7;
      if (v75 >> 14)
      {
        uint64_t v72 = (unsigned __int8 *)(a2 + 4);
        do
        {
          *(v72 - 1) = v76 | 0x80;
          unsigned int v77 = v76 >> 7;
          ++v72;
          unsigned int v78 = v76 >> 14;
          v76 >>= 7;
        }
        while (v78);
        *(v72 - 1) = v77;
      }
      else
      {
        a2[3] = v76;
        uint64_t v72 = (unsigned __int8 *)(a2 + 4);
      }
    }
    a2 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v73, v72, a3, v74);
  }
LABEL_201:
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::FileOptions *)((char *)this + 16), 1000, 0x20000000, a2, a3);
  uint64_t v81 = *((void *)this + 1);
  if (v81)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v81 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v80);
  }
  return result;
}

char *google::protobuf::FileOptions::ByteSizeLong(google::protobuf::FileOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::FileOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      size_t v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  if (!(_BYTE)v10) {
    goto LABEL_19;
  }
  if (v10)
  {
    uint64_t v26 = *((void *)this + 9);
    uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
    uint64_t v28 = *(void *)(v26 + 8);
    if ((v27 & 0x80u) == 0) {
      uint64_t v28 = v27;
    }
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_62;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v29 = *((void *)this + 10);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
  uint64_t v31 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    uint64_t v31 = v30;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_65;
  }
LABEL_62:
  uint64_t v32 = *((void *)this + 11);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
  uint64_t v34 = *(void *)(v32 + 8);
  if ((v33 & 0x80u) == 0) {
    uint64_t v34 = v33;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_68;
  }
LABEL_65:
  uint64_t v35 = *((void *)this + 12);
  uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
  uint64_t v37 = *(void *)(v35 + 8);
  if ((v36 & 0x80u) == 0) {
    uint64_t v37 = v36;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_71:
    uint64_t v41 = *((void *)this + 14);
    uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
    uint64_t v43 = *(void *)(v41 + 8);
    if ((v42 & 0x80u) == 0) {
      uint64_t v43 = v42;
    }
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2);
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_16;
    }
    goto LABEL_74;
  }
LABEL_68:
  uint64_t v38 = *((void *)this + 13);
  uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
  uint64_t v40 = *(void *)(v38 + 8);
  if ((v39 & 0x80u) == 0) {
    uint64_t v40 = v39;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x20) != 0) {
    goto LABEL_71;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_74:
  uint64_t v44 = *((void *)this + 15);
  uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
  uint64_t v46 = *(void *)(v44 + 8);
  if ((v45 & 0x80u) == 0) {
    uint64_t v46 = v45;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x80) != 0)
  {
LABEL_16:
    uint64_t v11 = *((void *)this + 16);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2);
  }
LABEL_19:
  if ((v10 & 0xFF00) != 0)
  {
    if ((v10 & 0x100) != 0)
    {
      uint64_t v14 = *((void *)this + 17);
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v16 = *(void *)(v14 + 8);
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = v15;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2);
    }
    if ((v10 & 0x200) != 0)
    {
      uint64_t v17 = *((void *)this + 18);
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2);
    }
    unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 0x400) == 0) {
      unint64_t v20 = v4;
    }
    if ((v10 & 0x800) != 0) {
      unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    if ((v10 & 0x1000) != 0) {
      unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    if ((v10 & 0x2000) != 0) {
      unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    if ((v10 & 0x4000) != 0) {
      unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    if ((v10 & 0x8000) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    else {
      uint64_t v4 = v20;
    }
  }
  if ((v10 & 0xF0000) != 0)
  {
    unint64_t v21 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    if ((v10 & 0x10000) == 0) {
      unint64_t v21 = v4;
    }
    if ((v10 & 0x20000) != 0) {
      unint64_t v21 = (const google::protobuf::UnknownFieldSet *)((char *)v21 + 3);
    }
    if ((v10 & 0x40000) != 0)
    {
      int v22 = *((_DWORD *)this + 40);
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v22 >= 0) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 11;
      }
      unint64_t v21 = (const google::protobuf::UnknownFieldSet *)((char *)v21 + v24);
    }
    if ((v10 & 0x80000) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v21 + 3);
    }
    else {
      uint64_t v4 = v21;
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileOptions *)((char *)this + 8), v4, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 11) = v4;
    return (char *)v4;
  }
}

void google::protobuf::FileOptions::MergeFrom(google::protobuf::FileOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 7049);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::FileOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE07854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE07868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileOptions::CopyFrom(google::protobuf::FileOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FileOptions::Clear(this);
    google::protobuf::FileOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::FileOptions::CopyFrom(google::protobuf::FileOptions *this, const google::protobuf::FileOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::FileOptions::Clear(this);
    google::protobuf::FileOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FileOptions::GetMetadata(google::protobuf::FileOptions *this)
{
  return off_26AED0A18[26];
}

google::protobuf::MessageOptions *google::protobuf::MessageOptions::MessageOptions(google::protobuf::MessageOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C5538;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 6) = a2;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if (atomic_load_explicit(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  return this;
}

void sub_23CE079D8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::MessageOptions::~MessageOptions(google::protobuf::MessageOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 7251);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    uint64_t v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      int v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        int v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::MessageOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::MessageOptions::~MessageOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CE07AF0(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CE07B04(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::MessageOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t *google::protobuf::MessageOptions::default_instance(google::protobuf::MessageOptions *this)
{
  if (atomic_load_explicit(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_MessageOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::MessageOptions::_InternalParse(google::protobuf::MessageOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v46 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v46, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v8 = (void *)((char *)this + 8);
    while (1)
    {
      int v10 = (google::protobuf::internal *)((char *)v46 + 1);
      LODWORD(v11) = *(unsigned __int8 *)v46;
      if ((*(char *)v46 & 0x80000000) == 0) {
        goto LABEL_10;
      }
      uint64_t v11 = (const char *)(v11 + (*(unsigned __int8 *)v10 << 7) - 128);
      if ((*(char *)v10 & 0x80000000) == 0)
      {
        int v10 = (google::protobuf::internal *)((char *)v46 + 2);
LABEL_10:
        uint64_t v46 = v10;
        unsigned int v12 = v11 >> 3;
        unsigned int v13 = (v11 >> 3) - 1;
LABEL_11:
        switch(v13)
        {
          case 0u:
            if (v11 != 8) {
              goto LABEL_48;
            }
            v6 |= 1u;
            uint64_t v14 = (google::protobuf::internal *)((char *)v10 + 1);
            uint64_t v15 = (const char *)*(unsigned __int8 *)v10;
            if ((*(char *)v10 & 0x80000000) == 0) {
              goto LABEL_16;
            }
            int v16 = *(char *)v14;
            uint64_t v15 = (const char *)(v15 + (v16 << 7) - 128);
            if (v16 < 0)
            {
              uint64_t v38 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v15);
              uint64_t v46 = v38;
              *((unsigned char *)this + 72) = v39 != 0;
              if (!v38) {
                goto LABEL_65;
              }
            }
            else
            {
              uint64_t v14 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_16:
              uint64_t v46 = v14;
              *((unsigned char *)this + 72) = v15 != 0;
            }
            goto LABEL_6;
          case 1u:
            if (v11 != 16) {
              goto LABEL_48;
            }
            v6 |= 2u;
            uint64_t v17 = (google::protobuf::internal *)((char *)v10 + 1);
            uint64_t v18 = (const char *)*(unsigned __int8 *)v10;
            if ((*(char *)v10 & 0x80000000) == 0) {
              goto LABEL_21;
            }
            int v19 = *(char *)v17;
            uint64_t v18 = (const char *)(v18 + (v19 << 7) - 128);
            if (v19 < 0)
            {
              uint64_t v40 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v18);
              uint64_t v46 = v40;
              *((unsigned char *)this + 73) = v41 != 0;
              if (!v40) {
                goto LABEL_65;
              }
            }
            else
            {
              uint64_t v17 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_21:
              uint64_t v46 = v17;
              *((unsigned char *)this + 73) = v18 != 0;
            }
            goto LABEL_6;
          case 2u:
            if (v11 != 24) {
              goto LABEL_48;
            }
            v6 |= 4u;
            unint64_t v20 = (google::protobuf::internal *)((char *)v10 + 1);
            unint64_t v21 = (const char *)*(unsigned __int8 *)v10;
            if ((*(char *)v10 & 0x80000000) == 0) {
              goto LABEL_26;
            }
            int v22 = *(char *)v20;
            unint64_t v21 = (const char *)(v21 + (v22 << 7) - 128);
            if (v22 < 0)
            {
              uint64_t v42 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v21);
              uint64_t v46 = v42;
              *((unsigned char *)this + 74) = v43 != 0;
              if (!v42) {
                goto LABEL_65;
              }
            }
            else
            {
              unint64_t v20 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_26:
              uint64_t v46 = v20;
              *((unsigned char *)this + 74) = v21 != 0;
            }
            break;
          case 3u:
          case 4u:
          case 5u:
            goto LABEL_48;
          case 6u:
            if (v11 != 56) {
              goto LABEL_48;
            }
            v6 |= 8u;
            size_t v9 = (google::protobuf::internal *)((char *)v10 + 1);
            uint64_t v23 = (const char *)*(unsigned __int8 *)v10;
            if ((*(char *)v10 & 0x80000000) == 0) {
              goto LABEL_5;
            }
            int v24 = *(char *)v9;
            uint64_t v23 = (const char *)(v23 + (v24 << 7) - 128);
            if (v24 < 0)
            {
              uint64_t v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v23);
              uint64_t v46 = v25;
              *((unsigned char *)this + 75) = v26 != 0;
              if (!v25) {
                goto LABEL_65;
              }
            }
            else
            {
              size_t v9 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_5:
              uint64_t v46 = v9;
              *((unsigned char *)this + 75) = v23 != 0;
            }
            goto LABEL_6;
          default:
            goto LABEL_34;
        }
        goto LABEL_6;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v46, v11);
      uint64_t v46 = TagFallback;
      if (!TagFallback) {
        goto LABEL_65;
      }
      int v10 = TagFallback;
      unsigned int v12 = v11 >> 3;
      unsigned int v13 = (v11 >> 3) - 1;
      if (v13 <= 6) {
        goto LABEL_11;
      }
LABEL_34:
      if (v12 == 999 && v11 == 58) {
        break;
      }
LABEL_48:
      if (v11) {
        BOOL v36 = (v11 & 7) == 4;
      }
      else {
        BOOL v36 = 1;
      }
      if (v36)
      {
        a3[10].i32[0] = v11 - 1;
        goto LABEL_2;
      }
      uint64_t v37 = (google::protobuf::internal *)v11;
      if (v11 >> 6 < 0x7D)
      {
        if (*v8)
        {
          uint64_t v46 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v10, (const char *)a3, v5);
          if (!v46) {
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v44 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
          uint64_t v46 = google::protobuf::internal::UnknownFieldParse(v37, (google::protobuf::UnknownFieldSet *)v44, v46, (const char *)a3, v45);
          if (!v46)
          {
LABEL_65:
            uint64_t v46 = 0;
            goto LABEL_2;
          }
        }
      }
      else
      {
        uint64_t v46 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::MessageOptions *)((char *)this + 16), (google::protobuf::internal *)v11, v10, (uint64_t)&google::protobuf::_MessageOptions_default_instance_, (unint64_t *)this + 1, a3);
        if (!v46) {
          goto LABEL_65;
        }
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v46, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    uint64_t v28 = (char *)v10 - 2;
    while (1)
    {
      uint64_t v29 = v28 + 2;
      uint64_t v46 = (google::protobuf::internal *)(v28 + 2);
      uint64_t v30 = (int *)*((void *)this + 8);
      if (!v30) {
        break;
      }
      uint64_t v31 = *((int *)this + 14);
      int v32 = *v30;
      if ((int)v31 >= *v30)
      {
        if (v32 == *((_DWORD *)this + 15))
        {
LABEL_42:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v32 + 1);
          uint64_t v30 = (int *)*((void *)this + 8);
          int v32 = *v30;
        }
        *uint64_t v30 = v32 + 1;
        uint64_t v33 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
        uint64_t v34 = *((void *)this + 8);
        uint64_t v35 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v35 + 1;
        *(void *)(v34 + 8 * v35 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v33;
        uint64_t v29 = (std::string::value_type *)v46;
        goto LABEL_44;
      }
      *((_DWORD *)this + 14) = v31 + 1;
      uint64_t v33 = *(google::protobuf::UninterpretedOption **)&v30[2 * v31 + 2];
LABEL_44:
      uint64_t v28 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((uint64_t)a3, v33, v29);
      uint64_t v46 = (google::protobuf::internal *)v28;
      if (!v28) {
        goto LABEL_65;
      }
      if (*(void *)a3 <= (unint64_t)v28 || *(_WORD *)v28 != 16058) {
        goto LABEL_6;
      }
    }
    int v32 = *((_DWORD *)this + 15);
    goto LABEL_42;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v46;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MessageOptions::_InternalSerialize(google::protobuf::MessageOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v8 = *((unsigned char *)this + 72);
    char *v4 = 8;
    v4[1] = v8;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v9 = *((unsigned char *)this + 73);
  char *v4 = 16;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v10 = *((unsigned char *)this + 74);
  char *v4 = 24;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    int v7 = *((_DWORD *)this + 14);
    if (!v7) {
      goto LABEL_30;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v11 = *((unsigned char *)this + 75);
  char *v4 = 56;
  v4[1] = v11;
  v4 += 2;
  int v7 = *((_DWORD *)this + 14);
  if (v7)
  {
LABEL_19:
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v14 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v16 = *((_DWORD *)v14 + 5);
      if (v16 <= 0x7F)
      {
        v4[2] = v16;
        unsigned int v13 = (unsigned __int8 *)(v4 + 3);
      }
      else
      {
        v4[2] = v16 | 0x80;
        unsigned int v17 = v16 >> 7;
        if (v16 >> 14)
        {
          unsigned int v13 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v13 - 1) = v17 | 0x80;
            unsigned int v18 = v17 >> 7;
            ++v13;
            unsigned int v19 = v17 >> 14;
            v17 >>= 7;
          }
          while (v19);
          *(v13 - 1) = v18;
        }
        else
        {
          v4[3] = v17;
          unsigned int v13 = (unsigned __int8 *)(v4 + 4);
        }
      }
      uint64_t v4 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v14, v13, a3, v15);
    }
  }
LABEL_30:
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::MessageOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v22 = *((void *)this + 1);
  if (v22)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v21);
  }
  return result;
}

char *google::protobuf::MessageOptions::ByteSizeLong(google::protobuf::MessageOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::MessageOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      char v8 = *v6++;
      char v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  if ((v10 & 0xF) != 0)
  {
    char v11 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 1) == 0) {
      char v11 = v4;
    }
    if ((v10 & 2) != 0) {
      char v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    }
    if ((v10 & 4) != 0) {
      char v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    }
    if ((v10 & 8) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    }
    else {
      uint64_t v4 = v11;
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MessageOptions *)((char *)this + 8), v4, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 11) = v4;
    return (char *)v4;
  }
}

void google::protobuf::MessageOptions::MergeFrom(google::protobuf::MessageOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 7468);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::MessageOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE08438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0844C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MessageOptions::CopyFrom(google::protobuf::MessageOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::MessageOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::MessageOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::MessageOptions::CopyFrom(google::protobuf::MessageOptions *this, const google::protobuf::MessageOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::MessageOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::MessageOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::MessageOptions::GetMetadata(google::protobuf::MessageOptions *this)
{
  return off_26AED0A18[28];
}

google::protobuf::FieldOptions *google::protobuf::FieldOptions::FieldOptions(google::protobuf::FieldOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C55E8;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 6) = a2;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if (atomic_load_explicit(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *((void *)this + 9) = 0;
  return this;
}

void sub_23CE08620(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldOptions::~FieldOptions(google::protobuf::FieldOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 7611);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    uint64_t v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      int v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        int v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::FieldOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::FieldOptions::~FieldOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CE08738(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CE0874C(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::FieldOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t *google::protobuf::FieldOptions::default_instance(google::protobuf::FieldOptions *this)
{
  if (atomic_load_explicit(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_FieldOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::FieldOptions::_InternalParse(google::protobuf::FieldOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  int64_t v53 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v53, a3[11].i32[1]) & 1) == 0)
  {
    char v8 = (void *)((char *)this + 8);
    while (1)
    {
      int v10 = (google::protobuf::internal *)((char *)v53 + 1);
      LODWORD(v11) = *(unsigned __int8 *)v53;
      if ((*(char *)v53 & 0x80000000) == 0)
      {
        int64_t v53 = (google::protobuf::internal *)((char *)v53 + 1);
        unsigned int v12 = v11 >> 3;
        unsigned int v13 = (v11 >> 3) - 1;
LABEL_9:
        switch(v13)
        {
          case 0u:
            if (v11 != 8) {
              goto LABEL_57;
            }
            uint64_t v14 = *(unsigned __int8 *)v10;
            if (*(char *)v10 < 0)
            {
              uint64_t v14 = v14 + (*((unsigned __int8 *)v10 + 1) << 7) - 128;
              if (*((char *)v10 + 1) < 0)
              {
                int64_t v53 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, (const char *)v14);
                if (!v53) {
                  goto LABEL_95;
                }
                uint64_t v14 = v47;
                if (v47 <= 2)
                {
LABEL_13:
                  *((_DWORD *)this + 10) |= 1u;
                  *((_DWORD *)this + 1google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v14;
                  goto LABEL_6;
                }
              }
              else
              {
                int64_t v53 = (google::protobuf::internal *)((char *)v10 + 2);
                if (v14 <= 2) {
                  goto LABEL_13;
                }
              }
            }
            else
            {
              int64_t v53 = (google::protobuf::internal *)((char *)v10 + 1);
              if (v14 <= 2) {
                goto LABEL_13;
              }
            }
            if (*v8)
            {
              uint64_t v39 = (char *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v51 = v14;
              uint64_t v39 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
              uint64_t v14 = v51;
            }
            unsigned int v40 = 1;
            goto LABEL_77;
          case 1u:
            if (v11 != 16) {
              goto LABEL_57;
            }
            v6 |= 2u;
            int v24 = (google::protobuf::internal *)((char *)v10 + 1);
            unint64_t v25 = *(unsigned __int8 *)v10;
            if ((*(char *)v10 & 0x80000000) == 0) {
              goto LABEL_37;
            }
            int v26 = *(char *)v24;
            unint64_t v25 = v25 + (v26 << 7) - 128;
            if (v26 < 0)
            {
              uint64_t v41 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, (const char *)v25);
              int64_t v53 = v41;
              *((unsigned char *)this + 76) = v42 != 0;
              if (!v41) {
                goto LABEL_95;
              }
            }
            else
            {
              int v24 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_37:
              int64_t v53 = v24;
              *((unsigned char *)this + 76) = v25 != 0;
            }
            goto LABEL_6;
          case 2u:
            if (v11 != 24) {
              goto LABEL_57;
            }
            v6 |= 8u;
            uint64_t v27 = (google::protobuf::internal *)((char *)v10 + 1);
            unint64_t v28 = *(unsigned __int8 *)v10;
            if ((*(char *)v10 & 0x80000000) == 0) {
              goto LABEL_42;
            }
            int v29 = *(char *)v27;
            unint64_t v28 = v28 + (v29 << 7) - 128;
            if (v29 < 0)
            {
              uint64_t v43 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, (const char *)v28);
              int64_t v53 = v43;
              *((unsigned char *)this + 7google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v44 != 0;
              if (!v43) {
                goto LABEL_95;
              }
            }
            else
            {
              uint64_t v27 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_42:
              int64_t v53 = v27;
              *((unsigned char *)this + 7google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v28 != 0;
            }
            goto LABEL_6;
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            goto LABEL_57;
          case 4u:
            if (v11 != 40) {
              goto LABEL_57;
            }
            v6 |= 4u;
            uint64_t v30 = (google::protobuf::internal *)((char *)v10 + 1);
            unint64_t v31 = *(unsigned __int8 *)v10;
            if ((*(char *)v10 & 0x80000000) == 0) {
              goto LABEL_47;
            }
            int v32 = *(char *)v30;
            unint64_t v31 = v31 + (v32 << 7) - 128;
            if (v32 < 0)
            {
              uint64_t v45 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, (const char *)v31);
              int64_t v53 = v45;
              *((unsigned char *)this + 77) = v46 != 0;
              if (!v45) {
                goto LABEL_95;
              }
            }
            else
            {
              uint64_t v30 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_47:
              int64_t v53 = v30;
              *((unsigned char *)this + 77) = v31 != 0;
            }
            goto LABEL_6;
          case 5u:
            if (v11 != 48) {
              goto LABEL_57;
            }
            uint64_t v14 = *(unsigned __int8 *)v10;
            if (*(char *)v10 < 0)
            {
              uint64_t v14 = v14 + (*((unsigned __int8 *)v10 + 1) << 7) - 128;
              if (*((char *)v10 + 1) < 0)
              {
                int64_t v53 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, (const char *)v14);
                if (!v53) {
                  goto LABEL_95;
                }
                uint64_t v14 = v48;
                if (v48 <= 2)
                {
LABEL_51:
                  *((_DWORD *)this + 10) |= 0x20u;
                  *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v14;
                  goto LABEL_6;
                }
              }
              else
              {
                int64_t v53 = (google::protobuf::internal *)((char *)v10 + 2);
                if (v14 <= 2) {
                  goto LABEL_51;
                }
              }
            }
            else
            {
              int64_t v53 = (google::protobuf::internal *)((char *)v10 + 1);
              if (v14 <= 2) {
                goto LABEL_51;
              }
            }
            if (*v8)
            {
              uint64_t v39 = (char *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v52 = v14;
              uint64_t v39 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
              uint64_t v14 = v52;
            }
            unsigned int v40 = 6;
LABEL_77:
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v39, v40, v14);
            break;
          case 9u:
            if (v11 != 80) {
              goto LABEL_57;
            }
            v6 |= 0x10u;
            char v9 = (google::protobuf::internal *)((char *)v10 + 1);
            unint64_t v33 = *(unsigned __int8 *)v10;
            if ((*(char *)v10 & 0x80000000) == 0) {
              goto LABEL_5;
            }
            int v34 = *(char *)v9;
            unint64_t v33 = v33 + (v34 << 7) - 128;
            if (v34 < 0)
            {
              uint64_t v35 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, (const char *)v33);
              int64_t v53 = v35;
              *((unsigned char *)this + 79) = v36 != 0;
              if (!v35) {
                goto LABEL_95;
              }
            }
            else
            {
              char v9 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_5:
              int64_t v53 = v9;
              *((unsigned char *)this + 79) = v33 != 0;
            }
            goto LABEL_6;
          default:
            goto LABEL_16;
        }
        goto LABEL_6;
      }
      char v11 = (const char *)(v11 + (*(unsigned __int8 *)v10 << 7) - 128);
      if (*(char *)v10 < 0)
      {
        TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v53, v11);
        int64_t v53 = TagFallback;
        if (!TagFallback) {
          goto LABEL_95;
        }
        int v10 = TagFallback;
        unsigned int v12 = v11 >> 3;
        unsigned int v13 = (v11 >> 3) - 1;
        if (v13 <= 9) {
          goto LABEL_9;
        }
      }
      else
      {
        int v10 = (google::protobuf::internal *)((char *)v53 + 2);
        int64_t v53 = (google::protobuf::internal *)((char *)v53 + 2);
        unsigned int v12 = v11 >> 3;
        unsigned int v13 = (v11 >> 3) - 1;
        if (v13 <= 9) {
          goto LABEL_9;
        }
      }
LABEL_16:
      if (v12 == 999 && v11 == 58) {
        break;
      }
LABEL_57:
      if (v11) {
        BOOL v37 = (v11 & 7) == 4;
      }
      else {
        BOOL v37 = 1;
      }
      if (v37)
      {
        a3[10].i32[0] = v11 - 1;
        goto LABEL_2;
      }
      uint64_t v38 = (google::protobuf::internal *)v11;
      if (v11 >> 6 < 0x7D)
      {
        if (*v8)
        {
          int64_t v53 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v10, (const char *)a3, v5);
          if (!v53) {
            goto LABEL_95;
          }
        }
        else
        {
          unint64_t v49 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
          int64_t v53 = google::protobuf::internal::UnknownFieldParse(v38, (google::protobuf::UnknownFieldSet *)v49, v53, (const char *)a3, v50);
          if (!v53)
          {
LABEL_95:
            int64_t v53 = 0;
            goto LABEL_2;
          }
        }
      }
      else
      {
        int64_t v53 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::FieldOptions *)((char *)this + 16), (google::protobuf::internal *)v11, v10, (uint64_t)&google::protobuf::_FieldOptions_default_instance_, (unint64_t *)this + 1, a3);
        if (!v53) {
          goto LABEL_95;
        }
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v53, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    uint64_t v15 = (char *)v10 - 2;
    while (1)
    {
      unsigned int v16 = v15 + 2;
      int64_t v53 = (google::protobuf::internal *)(v15 + 2);
      unsigned int v17 = (int *)*((void *)this + 8);
      if (!v17) {
        break;
      }
      uint64_t v18 = *((int *)this + 14);
      int v19 = *v17;
      if ((int)v18 >= *v17)
      {
        if (v19 == *((_DWORD *)this + 15))
        {
LABEL_24:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v19 + 1);
          unsigned int v17 = (int *)*((void *)this + 8);
          int v19 = *v17;
        }
        *unsigned int v17 = v19 + 1;
        unint64_t v20 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
        uint64_t v21 = *((void *)this + 8);
        uint64_t v22 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v22 + 1;
        *(void *)(v21 + 8 * v22 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v20;
        unsigned int v16 = (std::string::value_type *)v53;
        goto LABEL_26;
      }
      *((_DWORD *)this + 14) = v18 + 1;
      unint64_t v20 = *(google::protobuf::UninterpretedOption **)&v17[2 * v18 + 2];
LABEL_26:
      uint64_t v15 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((uint64_t)a3, v20, v16);
      int64_t v53 = (google::protobuf::internal *)v15;
      if (!v15) {
        goto LABEL_95;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *(_WORD *)v15 != 16058) {
        goto LABEL_6;
      }
    }
    int v19 = *((_DWORD *)this + 15);
    goto LABEL_24;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v53;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FieldOptions::_InternalSerialize(google::protobuf::FieldOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unint64_t v8 = *((int *)this + 18);
      char *v4 = 8;
      if (v8 <= 0x7F)
      {
LABEL_11:
        v4[1] = v8;
        v4 += 2;
        if ((v6 & 2) != 0) {
          goto LABEL_20;
        }
        goto LABEL_3;
      }
    }
    else
    {
      unint64_t v8 = *((int *)this + 18);
      *a2 = 8;
      if (v8 <= 0x7F) {
        goto LABEL_11;
      }
    }
    v4[1] = v8 | 0x80;
    unint64_t v9 = v8 >> 7;
    if (v8 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        ++v4;
        unint64_t v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
      *(v4 - 1) = v10;
      if ((v6 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      v4[2] = v9;
      v4 += 3;
      if ((v6 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_3:
    if ((v6 & 8) == 0) {
      goto LABEL_4;
    }
    goto LABEL_23;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v12 = *((unsigned char *)this + 76);
  char *v4 = 16;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_23:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v13 = *((unsigned char *)this + 78);
  char *v4 = 24;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
LABEL_29:
    if (*(void *)a3 <= (unint64_t)v4)
    {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      unint64_t v15 = *((int *)this + 20);
      char *v4 = 48;
      if (v15 <= 0x7F)
      {
LABEL_31:
        v4[1] = v15;
        v4 += 2;
        if ((v6 & 0x10) != 0) {
          goto LABEL_40;
        }
        goto LABEL_7;
      }
    }
    else
    {
      unint64_t v15 = *((int *)this + 20);
      char *v4 = 48;
      if (v15 <= 0x7F) {
        goto LABEL_31;
      }
    }
    v4[1] = v15 | 0x80;
    unint64_t v16 = v15 >> 7;
    if (v15 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v16 | 0x80;
        unint64_t v17 = v16 >> 7;
        ++v4;
        unint64_t v18 = v16 >> 14;
        v16 >>= 7;
      }
      while (v18);
      *(v4 - 1) = v17;
      if ((v6 & 0x10) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      v4[2] = v16;
      v4 += 3;
      if ((v6 & 0x10) != 0) {
        goto LABEL_40;
      }
    }
LABEL_7:
    int v7 = *((_DWORD *)this + 14);
    if (!v7) {
      goto LABEL_54;
    }
    goto LABEL_43;
  }
LABEL_26:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v14 = *((unsigned char *)this + 77);
  char *v4 = 40;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_6:
  if ((v6 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_40:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v19 = *((unsigned char *)this + 79);
  char *v4 = 80;
  v4[1] = v19;
  v4 += 2;
  int v7 = *((_DWORD *)this + 14);
  if (v7)
  {
LABEL_43:
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v22 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v24 = *((_DWORD *)v22 + 5);
      if (v24 <= 0x7F)
      {
        v4[2] = v24;
        uint64_t v21 = (unsigned __int8 *)(v4 + 3);
      }
      else
      {
        v4[2] = v24 | 0x80;
        unsigned int v25 = v24 >> 7;
        if (v24 >> 14)
        {
          uint64_t v21 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v21 - 1) = v25 | 0x80;
            unsigned int v26 = v25 >> 7;
            ++v21;
            unsigned int v27 = v25 >> 14;
            v25 >>= 7;
          }
          while (v27);
          *(v21 - 1) = v26;
        }
        else
        {
          v4[3] = v25;
          uint64_t v21 = (unsigned __int8 *)(v4 + 4);
        }
      }
      uint64_t v4 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v22, v21, a3, v23);
    }
  }
LABEL_54:
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::FieldOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v30 = *((void *)this + 1);
  if (v30)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v30 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v29);
  }
  return result;
}

char *google::protobuf::FieldOptions::ByteSizeLong(google::protobuf::FieldOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::FieldOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unint64_t v8 = *v6++;
      unint64_t v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  if ((v10 & 0x3F) != 0)
  {
    if (v10)
    {
      int v11 = *((_DWORD *)this + 18);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v12);
    }
    char v13 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 2) == 0) {
      char v13 = v4;
    }
    if ((v10 & 4) != 0) {
      char v13 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    }
    if ((v10 & 8) != 0) {
      char v13 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    }
    if ((v10 & 0x10) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    }
    else {
      uint64_t v4 = v13;
    }
    if ((v10 & 0x20) != 0)
    {
      int v14 = *((_DWORD *)this + 20);
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v14 >= 0) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 11;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v16);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FieldOptions *)((char *)this + 8), v4, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 11) = v4;
    return (char *)v4;
  }
}

void google::protobuf::FieldOptions::MergeFrom(google::protobuf::FieldOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 7881);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::FieldOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE093C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE093D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldOptions::CopyFrom(google::protobuf::FieldOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::FieldOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    if ((*((unsigned char *)this + 40) & 0x3F) != 0)
    {
      *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
      *((void *)this + 9) = 0;
    }
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::FieldOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::FieldOptions::CopyFrom(google::protobuf::FieldOptions *this, const google::protobuf::FieldOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::FieldOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    if ((*((unsigned char *)this + 40) & 0x3F) != 0)
    {
      *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
      *((void *)this + 9) = 0;
    }
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::FieldOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FieldOptions::GetMetadata(google::protobuf::FieldOptions *this)
{
  return off_26AED0A18[30];
}

google::protobuf::OneofOptions *google::protobuf::OneofOptions::OneofOptions(google::protobuf::OneofOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C5698;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 5) = a2;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  if (atomic_load_explicit(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return this;
}

void sub_23CE095C0(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofOptions::~OneofOptions(google::protobuf::OneofOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8004);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    uint64_t v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      int v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        int v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 40);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::OneofOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::OneofOptions::~OneofOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CE096D8(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CE096EC(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::OneofOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t *google::protobuf::OneofOptions::default_instance(google::protobuf::OneofOptions *this)
{
  if (atomic_load_explicit(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_OneofOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::OneofOptions::_InternalParse(google::protobuf::OneofOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  int v34 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v34, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)((char *)this + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v34 + 1);
      LODWORD(vgoogle::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = *(unsigned __int8 *)v34;
      if ((*(char *)v34 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unint64_t v8 = (const char *)(v8 + (*(unsigned __int8 *)v7 << 7) - 128);
      if ((*(char *)v7 & 0x80000000) == 0)
      {
        char v7 = (google::protobuf::internal *)((char *)v34 + 2);
LABEL_6:
        int v34 = v7;
        if (v8 == 7994) {
          break;
        }
        goto LABEL_7;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v34, v8);
      int v34 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v7 = TagFallback;
      if (v8 == 7994) {
        break;
      }
LABEL_7:
      if (v8) {
        BOOL v9 = (v8 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        a3[10].i32[0] = v8 - 1;
        return v34;
      }
      int v10 = (google::protobuf::internal *)v8;
      if (v8 >> 6 < 0x7D)
      {
        if (*v6)
        {
          uint64_t v12 = (char *)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v12 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
          char v7 = v34;
        }
        int v11 = google::protobuf::internal::UnknownFieldParse(v10, (google::protobuf::UnknownFieldSet *)v12, v7, (const char *)a3, v5);
      }
      else
      {
        int v11 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::OneofOptions *)((char *)this + 16), (google::protobuf::internal *)v8, v7, (uint64_t)&google::protobuf::_OneofOptions_default_instance_, (unint64_t *)this + 1, a3);
      }
      int v34 = v11;
      if (!v11) {
        return 0;
      }
LABEL_37:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v34, a3[11].i32[1]))return v34; {
    }
      }
    int v14 = (char *)v7 - 2;
    while (1)
    {
      uint64_t v15 = (google::protobuf::internal *)(v14 + 2);
      int v34 = v15;
      uint64_t v16 = (int *)*((void *)this + 7);
      if (!v16) {
        break;
      }
      uint64_t v17 = *((int *)this + 12);
      int v18 = *v16;
      if ((int)v17 < *v16)
      {
        *((_DWORD *)this + 12) = v17 + 1;
        char v19 = *(google::protobuf::UninterpretedOption **)&v16[2 * v17 + 2];
        unint64_t v20 = (const char *)*(unsigned __int8 *)v15;
        if ((*(char *)v15 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        goto LABEL_24;
      }
      if (v18 == *((_DWORD *)this + 13)) {
        goto LABEL_29;
      }
LABEL_30:
      *uint64_t v16 = v18 + 1;
      char v19 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 5));
      uint64_t v25 = *((void *)this + 7);
      uint64_t v26 = *((int *)this + 12);
      *((_DWORD *)this + 12) = v26 + 1;
      *(void *)(v25 + 8 * v26 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v19;
      uint64_t v15 = v34;
      unint64_t v20 = (const char *)*(unsigned __int8 *)v34;
      if ((*(char *)v34 & 0x80000000) == 0)
      {
LABEL_31:
        uint64_t v23 = (char *)v15 + 1;
        goto LABEL_32;
      }
LABEL_24:
      uint64_t SizeFallback = google::protobuf::internal::ReadSizeFallback(v15, v20);
      if (!SizeFallback) {
        return 0;
      }
      uint64_t v23 = (std::string::value_type *)SizeFallback;
      LODWORD(v2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v22;
      if (v22 >= 0x7FFFFFF0)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v36, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
        unsigned int v24 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v36, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v35, v24);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v36[0].__r_.__value_.__l.__data_);
      }
LABEL_32:
      int32x2_t v27 = a3[1];
      int v28 = v20 + v23 - v27.i32[0];
      *a3 = (int32x2_t)(*(void *)&v27 + (v28 & (v28 >> 31)));
      __int32 v29 = a3[3].i32[1];
      a3[3].i32[1] = v28;
      v27.i32[0] = a3[11].i32[0];
      BOOL v30 = __OFSUB__(v27.i32[0]--, 1);
      a3[11].i32[0] = v27.i32[0];
      if (v27.i32[0] < 0 != v30) {
        return 0;
      }
      int v14 = google::protobuf::UninterpretedOption::_InternalParse(v19, v23, (google::protobuf::internal::ParseContext *)a3);
      if (!v14) {
        return 0;
      }
      ++a3[11].i32[0];
      if (a3[10].i32[0]) {
        return 0;
      }
      int v31 = a3[3].i32[1] + v29 - v28;
      a3[3].i32[1] = v31;
      int32x2_t v32 = (int32x2_t)(*(void *)&a3[1] + (v31 & (v31 >> 31)));
      *a3 = v32;
      int v34 = (google::protobuf::internal *)v14;
      if (*(void *)&v32 <= (unint64_t)v14 || *(_WORD *)v14 != 16058) {
        goto LABEL_37;
      }
    }
    int v18 = *((_DWORD *)this + 13);
LABEL_29:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 10, v18 + 1);
    uint64_t v16 = (int *)*((void *)this + 7);
    int v18 = *v16;
    goto LABEL_30;
  }
  return v34;
}

void sub_23CE09AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE09AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::OneofOptions::_InternalSerialize(google::protobuf::OneofOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      BOOL v9 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40, i);
      *(_WORD *)a2 = 16058;
      unsigned int v11 = *((_DWORD *)v9 + 5);
      if (v11 <= 0x7F)
      {
        a2[2] = v11;
        unint64_t v8 = (unsigned __int8 *)(a2 + 3);
      }
      else
      {
        a2[2] = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        if (v11 >> 14)
        {
          unint64_t v8 = (unsigned __int8 *)(a2 + 4);
          do
          {
            *(v8 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v8;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v8 - 1) = v13;
        }
        else
        {
          a2[3] = v12;
          unint64_t v8 = (unsigned __int8 *)(a2 + 4);
        }
      }
      a2 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v9, v8, a3, v10);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::OneofOptions *)((char *)this + 16), 1000, 0x20000000, a2, a3);
  uint64_t v17 = *((void *)this + 1);
  if (v17)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v16);
  }
  return result;
}

char *google::protobuf::OneofOptions::ByteSizeLong(google::protobuf::OneofOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::OneofOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 12);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 7);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unint64_t v8 = *v6++;
      BOOL v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::OneofOptions *)((char *)this + 8), v4, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + 16) = v4;
    return (char *)v4;
  }
}

void google::protobuf::OneofOptions::MergeFrom(google::protobuf::OneofOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8135);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::OneofOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE09DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE09DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofOptions::CopyFrom(google::protobuf::OneofOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::OneofOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40);
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::OneofOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::OneofOptions::CopyFrom(google::protobuf::OneofOptions *this, const google::protobuf::OneofOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::OneofOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 40);
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::OneofOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::OneofOptions::GetMetadata(google::protobuf::OneofOptions *this)
{
  return off_26AED0A18[32];
}

google::protobuf::EnumOptions *google::protobuf::EnumOptions::EnumOptions(google::protobuf::EnumOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C5748;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 6) = a2;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if (atomic_load_explicit(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((_WORD *)this + 36) = 0;
  return this;
}

void sub_23CE09F90(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumOptions::~EnumOptions(google::protobuf::EnumOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8243);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    uint64_t v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      int v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        int v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::EnumOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::EnumOptions::~EnumOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CE0A0A8(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CE0A0BC(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::EnumOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t *google::protobuf::EnumOptions::default_instance(google::protobuf::EnumOptions *this)
{
  if (atomic_load_explicit(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_EnumOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::EnumOptions::_InternalParse(google::protobuf::EnumOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v36 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v36, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v8 = (void *)((char *)this + 8);
    while (1)
    {
      int v10 = (google::protobuf::internal *)((char *)v36 + 1);
      LODWORD(v11) = *(unsigned __int8 *)v36;
      if ((*(char *)v36 & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v11 = (const char *)(v11 + (*(unsigned __int8 *)v10 << 7) - 128);
      if ((*(char *)v10 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v36, v11);
      uint64_t v36 = TagFallback;
      if (!TagFallback) {
        goto LABEL_53;
      }
      int v10 = TagFallback;
      unsigned int v12 = v11 >> 3;
      if (v11 >> 3 == 999)
      {
LABEL_34:
        if (v11 != 58)
        {
LABEL_16:
          if (v11) {
            BOOL v14 = (v11 & 7) == 4;
          }
          else {
            BOOL v14 = 1;
          }
          if (v14)
          {
            a3[10].i32[0] = v11 - 1;
            goto LABEL_2;
          }
          uint64_t v15 = (google::protobuf::internal *)v11;
          if (v11 >> 6 < 0x7D)
          {
            if (*v8)
            {
              uint64_t v36 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v10, (const char *)a3, v5);
              if (!v36) {
                goto LABEL_53;
              }
            }
            else
            {
              int v34 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
              uint64_t v36 = google::protobuf::internal::UnknownFieldParse(v15, (google::protobuf::UnknownFieldSet *)v34, v36, (const char *)a3, v35);
              if (!v36)
              {
LABEL_53:
                uint64_t v36 = 0;
                goto LABEL_2;
              }
            }
          }
          else
          {
            uint64_t v36 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::EnumOptions *)((char *)this + 16), (google::protobuf::internal *)v11, v10, (uint64_t)&google::protobuf::_EnumOptions_default_instance_, (unint64_t *)this + 1, a3);
            if (!v36) {
              goto LABEL_53;
            }
          }
          goto LABEL_6;
        }
        unsigned int v24 = (char *)v10 - 2;
        while (2)
        {
          uint64_t v25 = v24 + 2;
          uint64_t v36 = (google::protobuf::internal *)(v24 + 2);
          uint64_t v26 = (int *)*((void *)this + 8);
          if (v26)
          {
            uint64_t v27 = *((int *)this + 14);
            int v28 = *v26;
            if ((int)v27 < *v26)
            {
              *((_DWORD *)this + 14) = v27 + 1;
              __int32 v29 = *(google::protobuf::UninterpretedOption **)&v26[2 * v27 + 2];
              goto LABEL_43;
            }
            if (v28 == *((_DWORD *)this + 15))
            {
LABEL_41:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v28 + 1);
              uint64_t v26 = (int *)*((void *)this + 8);
              int v28 = *v26;
            }
            *uint64_t v26 = v28 + 1;
            __int32 v29 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            uint64_t v30 = *((void *)this + 8);
            uint64_t v31 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v31 + 1;
            *(void *)(v30 + 8 * v31 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v29;
            uint64_t v25 = (std::string::value_type *)v36;
LABEL_43:
            unsigned int v24 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((uint64_t)a3, v29, v25);
            uint64_t v36 = (google::protobuf::internal *)v24;
            if (!v24) {
              goto LABEL_53;
            }
            if (*(void *)a3 <= (unint64_t)v24 || *(_WORD *)v24 != 16058) {
              goto LABEL_6;
            }
            continue;
          }
          break;
        }
        int v28 = *((_DWORD *)this + 15);
        goto LABEL_41;
      }
LABEL_11:
      if (v12 == 3)
      {
        if (v11 != 24) {
          goto LABEL_16;
        }
        v6 |= 2u;
        BOOL v9 = (google::protobuf::UnknownFieldSet *)((char *)v10 + 1);
        uint64_t v16 = (const char *)*(unsigned __int8 *)v10;
        if ((*(char *)v10 & 0x80000000) == 0) {
          goto LABEL_5;
        }
        int v17 = *(char *)v9;
        uint64_t v16 = (const char *)(v16 + (v17 << 7) - 128);
        if ((v17 & 0x80000000) == 0)
        {
          BOOL v9 = (google::protobuf::UnknownFieldSet *)((char *)v10 + 2);
LABEL_5:
          uint64_t v36 = v9;
          *((unsigned char *)this + 73) = v16 != 0;
          goto LABEL_6;
        }
        int v18 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v16);
        uint64_t v36 = v18;
        *((unsigned char *)this + 73) = v19 != 0;
        if (!v18) {
          goto LABEL_53;
        }
      }
      else
      {
        if (v12 != 2 || v11 != 16) {
          goto LABEL_16;
        }
        v6 |= 1u;
        unint64_t v20 = (google::protobuf::UnknownFieldSet *)((char *)v10 + 1);
        uint64_t v21 = (const char *)*(unsigned __int8 *)v10;
        if ((*(char *)v10 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v22 = *(char *)v20;
        uint64_t v21 = (const char *)(v21 + (v22 << 7) - 128);
        if ((v22 & 0x80000000) == 0)
        {
          unint64_t v20 = (google::protobuf::UnknownFieldSet *)((char *)v10 + 2);
LABEL_31:
          uint64_t v36 = v20;
          *((unsigned char *)this + 72) = v21 != 0;
          goto LABEL_6;
        }
        int32x2_t v32 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v21);
        uint64_t v36 = v32;
        *((unsigned char *)this + 72) = v33 != 0;
        if (!v32) {
          goto LABEL_53;
        }
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v36, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    int v10 = (google::protobuf::internal *)((char *)v36 + 2);
LABEL_10:
    uint64_t v36 = v10;
    unsigned int v12 = v11 >> 3;
    if (v11 >> 3 == 999) {
      goto LABEL_34;
    }
    goto LABEL_11;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v36;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumOptions::_InternalSerialize(google::protobuf::EnumOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v8 = *((unsigned char *)this + 72);
    char *v4 = 16;
    v4[1] = v8;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      int v7 = *((_DWORD *)this + 14);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v9 = *((unsigned char *)this + 73);
  char *v4 = 24;
  v4[1] = v9;
  v4 += 2;
  int v7 = *((_DWORD *)this + 14);
  if (v7)
  {
LABEL_11:
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v12 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v14 = *((_DWORD *)v12 + 5);
      if (v14 <= 0x7F)
      {
        v4[2] = v14;
        unsigned int v11 = (unsigned __int8 *)(v4 + 3);
      }
      else
      {
        v4[2] = v14 | 0x80;
        unsigned int v15 = v14 >> 7;
        if (v14 >> 14)
        {
          unsigned int v11 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v11 - 1) = v15 | 0x80;
            unsigned int v16 = v15 >> 7;
            ++v11;
            unsigned int v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v11 - 1) = v16;
        }
        else
        {
          v4[3] = v15;
          unsigned int v11 = (unsigned __int8 *)(v4 + 4);
        }
      }
      uint64_t v4 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v12, v11, a3, v13);
    }
  }
LABEL_22:
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::EnumOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v20 = *((void *)this + 1);
  if (v20)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v20 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v19);
  }
  return result;
}

char *google::protobuf::EnumOptions::ByteSizeLong(google::protobuf::EnumOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::EnumOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      char v8 = *v6++;
      char v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  unsigned int v11 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((v10 & 1) == 0) {
    unsigned int v11 = v4;
  }
  if ((v10 & 2) != 0) {
    unsigned int v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
  }
  if ((v10 & 3) != 0) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = v4;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumOptions *)((char *)this + 8), v12, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 11) = v12;
    return (char *)v12;
  }
}

void google::protobuf::EnumOptions::MergeFrom(google::protobuf::EnumOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8422);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::EnumOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE0A844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0A858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumOptions::CopyFrom(google::protobuf::EnumOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::EnumOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    *((_WORD *)this + 36) = 0;
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::EnumOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::EnumOptions::CopyFrom(google::protobuf::EnumOptions *this, const google::protobuf::EnumOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::EnumOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    *((_WORD *)this + 36) = 0;
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::EnumOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::EnumOptions::GetMetadata(google::protobuf::EnumOptions *this)
{
  return off_26AED0A18[34];
}

google::protobuf::EnumValueOptions *google::protobuf::EnumValueOptions::EnumValueOptions(google::protobuf::EnumValueOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C57F8;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 6) = a2;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if (atomic_load_explicit(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((unsigned char *)this + 72) = 0;
  return this;
}

void sub_23CE0AA28(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueOptions::~EnumValueOptions(google::protobuf::EnumValueOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8540);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    uint64_t v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      int v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        int v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::EnumValueOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::EnumValueOptions::~EnumValueOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CE0AB40(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CE0AB54(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::EnumValueOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t *google::protobuf::EnumValueOptions::default_instance(google::protobuf::EnumValueOptions *this)
{
  if (atomic_load_explicit(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_EnumValueOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::EnumValueOptions::_InternalParse(google::protobuf::EnumValueOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v31, a3[11].i32[1]) & 1) == 0)
  {
    char v8 = (void *)((char *)this + 8);
    while (1)
    {
      unsigned int v11 = (google::protobuf::internal *)((char *)v31 + 1);
      LODWORD(v12) = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = (const char *)(v12 + (*(unsigned __int8 *)v11 << 7) - 128);
      if ((*(char *)v11 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, v12);
      uint64_t v31 = TagFallback;
      if (!TagFallback) {
        goto LABEL_45;
      }
      unsigned int v11 = TagFallback;
      unsigned int v13 = v12 >> 3;
      if (v12 >> 3 == 999)
      {
LABEL_27:
        if (v12 != 58)
        {
LABEL_15:
          if (v12) {
            BOOL v15 = (v12 & 7) == 4;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15)
          {
            a3[10].i32[0] = v12 - 1;
            goto LABEL_2;
          }
          unsigned int v16 = (google::protobuf::internal *)v12;
          if (v12 >> 6 < 0x7D)
          {
            if (*v8)
            {
              uint64_t v31 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v11, (const char *)a3, v5);
              if (!v31) {
                goto LABEL_45;
              }
            }
            else
            {
              __int32 v29 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
              uint64_t v31 = google::protobuf::internal::UnknownFieldParse(v16, (google::protobuf::UnknownFieldSet *)v29, v31, (const char *)a3, v30);
              if (!v31)
              {
LABEL_45:
                uint64_t v31 = 0;
                goto LABEL_2;
              }
            }
          }
          else
          {
            uint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::EnumValueOptions *)((char *)this + 16), (google::protobuf::internal *)v12, v11, (uint64_t)&google::protobuf::_EnumValueOptions_default_instance_, (unint64_t *)this + 1, a3);
            if (!v31) {
              goto LABEL_45;
            }
          }
          goto LABEL_6;
        }
        int v18 = (char *)v11 - 2;
        while (2)
        {
          uint64_t v19 = v18 + 2;
          uint64_t v31 = (google::protobuf::internal *)(v18 + 2);
          uint64_t v20 = (int *)*((void *)this + 8);
          if (v20)
          {
            uint64_t v21 = *((int *)this + 14);
            int v22 = *v20;
            if ((int)v21 < *v20)
            {
              *((_DWORD *)this + 14) = v21 + 1;
              uint64_t v23 = *(google::protobuf::UninterpretedOption **)&v20[2 * v21 + 2];
              goto LABEL_36;
            }
            if (v22 == *((_DWORD *)this + 15))
            {
LABEL_34:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v22 + 1);
              uint64_t v20 = (int *)*((void *)this + 8);
              int v22 = *v20;
            }
            int *v20 = v22 + 1;
            uint64_t v23 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            uint64_t v24 = *((void *)this + 8);
            uint64_t v25 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v25 + 1;
            *(void *)(v24 + 8 * v25 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v23;
            uint64_t v19 = (std::string::value_type *)v31;
LABEL_36:
            int v18 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((uint64_t)a3, v23, v19);
            uint64_t v31 = (google::protobuf::internal *)v18;
            if (!v18) {
              goto LABEL_45;
            }
            if (*(void *)a3 <= (unint64_t)v18 || *(_WORD *)v18 != 16058) {
              goto LABEL_6;
            }
            continue;
          }
          break;
        }
        int v22 = *((_DWORD *)this + 15);
        goto LABEL_34;
      }
LABEL_11:
      if (v13 != 1 || v12 != 8) {
        goto LABEL_15;
      }
      char v9 = (google::protobuf::UnknownFieldSet *)((char *)v11 + 1);
      int v10 = (const char *)*(unsigned __int8 *)v11;
      if ((*(char *)v11 & 0x80000000) == 0) {
        goto LABEL_5;
      }
      int v26 = *(char *)v9;
      int v10 = (const char *)(v10 + (v26 << 7) - 128);
      if ((v26 & 0x80000000) == 0)
      {
        char v9 = (google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
LABEL_5:
        uint64_t v31 = v9;
        *((unsigned char *)this + 72) = v10 != 0;
        int v6 = 1;
        goto LABEL_6;
      }
      uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v11, v10);
      uint64_t v31 = v27;
      *((unsigned char *)this + 72) = v28 != 0;
      int v6 = 1;
      if (!v27) {
        goto LABEL_45;
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v31, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    unsigned int v11 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_10:
    uint64_t v31 = v11;
    unsigned int v13 = v12 >> 3;
    if (v12 >> 3 == 999) {
      goto LABEL_27;
    }
    goto LABEL_11;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v31;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumValueOptions::_InternalSerialize(google::protobuf::EnumValueOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v6 = *((unsigned char *)this + 72);
    char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  int v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v10 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v12 = *((_DWORD *)v10 + 5);
      if (v12 <= 0x7F)
      {
        v4[2] = v12;
        char v9 = (unsigned __int8 *)(v4 + 3);
      }
      else
      {
        v4[2] = v12 | 0x80;
        unsigned int v13 = v12 >> 7;
        if (v12 >> 14)
        {
          char v9 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v9 - 1) = v13 | 0x80;
            unsigned int v14 = v13 >> 7;
            ++v9;
            unsigned int v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v9 - 1) = v14;
        }
        else
        {
          v4[3] = v13;
          char v9 = (unsigned __int8 *)(v4 + 4);
        }
      }
      uint64_t v4 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v10, v9, a3, v11);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::EnumValueOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v18 = *((void *)this + 1);
  if (v18)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v18 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v17);
  }
  return result;
}

char *google::protobuf::EnumValueOptions::ByteSizeLong(google::protobuf::EnumValueOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::EnumValueOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = v2 + 2 * v3;
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    char v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    char v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      char v8 = *v6++;
      char v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 += (uint64_t)&v9[(9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6];
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 40)) {
    int v10 = (const google::protobuf::UnknownFieldSet *)(v4 + 2);
  }
  else {
    int v10 = (const google::protobuf::UnknownFieldSet *)v4;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumValueOptions *)((char *)this + 8), v10, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 11) = v10;
    return (char *)v10;
  }
}

void google::protobuf::EnumValueOptions::MergeFrom(google::protobuf::EnumValueOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8696);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::EnumValueOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE0B214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0B228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueOptions::CopyFrom(google::protobuf::EnumValueOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::EnumValueOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    *((unsigned char *)this + 72) = 0;
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::EnumValueOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::EnumValueOptions::CopyFrom(google::protobuf::EnumValueOptions *this, const google::protobuf::EnumValueOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::EnumValueOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    *((unsigned char *)this + 72) = 0;
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::EnumValueOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::EnumValueOptions::GetMetadata(google::protobuf::EnumValueOptions *this)
{
  return off_26AED0A18[36];
}

google::protobuf::ServiceOptions *google::protobuf::ServiceOptions::ServiceOptions(google::protobuf::ServiceOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C58A8;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 6) = a2;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if (atomic_load_explicit(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((unsigned char *)this + 72) = 0;
  return this;
}

void sub_23CE0B3F8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceOptions::~ServiceOptions(google::protobuf::ServiceOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8802);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    uint64_t v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      char v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        char v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::ServiceOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::ServiceOptions::~ServiceOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CE0B510(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CE0B524(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::ServiceOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t *google::protobuf::ServiceOptions::default_instance(google::protobuf::ServiceOptions *this)
{
  if (atomic_load_explicit(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_ServiceOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::ServiceOptions::_InternalParse(google::protobuf::ServiceOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v31, a3[11].i32[1]) & 1) == 0)
  {
    char v8 = (void *)((char *)this + 8);
    while (1)
    {
      unsigned int v11 = (google::protobuf::internal *)((char *)v31 + 1);
      LODWORD(v12) = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = (const char *)(v12 + (*(unsigned __int8 *)v11 << 7) - 128);
      if ((*(char *)v11 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, v12);
      uint64_t v31 = TagFallback;
      if (!TagFallback) {
        goto LABEL_45;
      }
      unsigned int v11 = TagFallback;
      unsigned int v13 = v12 >> 3;
      if (v12 >> 3 == 999)
      {
LABEL_27:
        if (v12 != 58)
        {
LABEL_15:
          if (v12) {
            BOOL v15 = (v12 & 7) == 4;
          }
          else {
            BOOL v15 = 1;
          }
          if (v15)
          {
            a3[10].i32[0] = v12 - 1;
            goto LABEL_2;
          }
          unsigned int v16 = (google::protobuf::internal *)v12;
          if (v12 >> 6 < 0x7D)
          {
            if (*v8)
            {
              uint64_t v31 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v11, (const char *)a3, v5);
              if (!v31) {
                goto LABEL_45;
              }
            }
            else
            {
              __int32 v29 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
              uint64_t v31 = google::protobuf::internal::UnknownFieldParse(v16, (google::protobuf::UnknownFieldSet *)v29, v31, (const char *)a3, v30);
              if (!v31)
              {
LABEL_45:
                uint64_t v31 = 0;
                goto LABEL_2;
              }
            }
          }
          else
          {
            uint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::ServiceOptions *)((char *)this + 16), (google::protobuf::internal *)v12, v11, (uint64_t)&google::protobuf::_ServiceOptions_default_instance_, (unint64_t *)this + 1, a3);
            if (!v31) {
              goto LABEL_45;
            }
          }
          goto LABEL_6;
        }
        uint64_t v18 = (char *)v11 - 2;
        while (2)
        {
          uint64_t v19 = v18 + 2;
          uint64_t v31 = (google::protobuf::internal *)(v18 + 2);
          uint64_t v20 = (int *)*((void *)this + 8);
          if (v20)
          {
            uint64_t v21 = *((int *)this + 14);
            int v22 = *v20;
            if ((int)v21 < *v20)
            {
              *((_DWORD *)this + 14) = v21 + 1;
              uint64_t v23 = *(google::protobuf::UninterpretedOption **)&v20[2 * v21 + 2];
              goto LABEL_36;
            }
            if (v22 == *((_DWORD *)this + 15))
            {
LABEL_34:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v22 + 1);
              uint64_t v20 = (int *)*((void *)this + 8);
              int v22 = *v20;
            }
            int *v20 = v22 + 1;
            uint64_t v23 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            uint64_t v24 = *((void *)this + 8);
            uint64_t v25 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v25 + 1;
            *(void *)(v24 + 8 * v25 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v23;
            uint64_t v19 = (std::string::value_type *)v31;
LABEL_36:
            uint64_t v18 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((uint64_t)a3, v23, v19);
            uint64_t v31 = (google::protobuf::internal *)v18;
            if (!v18) {
              goto LABEL_45;
            }
            if (*(void *)a3 <= (unint64_t)v18 || *(_WORD *)v18 != 16058) {
              goto LABEL_6;
            }
            continue;
          }
          break;
        }
        int v22 = *((_DWORD *)this + 15);
        goto LABEL_34;
      }
LABEL_11:
      if (v13 != 33 || v12 != 8) {
        goto LABEL_15;
      }
      char v9 = (google::protobuf::UnknownFieldSet *)((char *)v11 + 1);
      int v10 = (const char *)*(unsigned __int8 *)v11;
      if ((*(char *)v11 & 0x80000000) == 0) {
        goto LABEL_5;
      }
      int v26 = *(char *)v9;
      int v10 = (const char *)(v10 + (v26 << 7) - 128);
      if ((v26 & 0x80000000) == 0)
      {
        char v9 = (google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
LABEL_5:
        uint64_t v31 = v9;
        *((unsigned char *)this + 72) = v10 != 0;
        int v6 = 1;
        goto LABEL_6;
      }
      uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v11, v10);
      uint64_t v31 = v27;
      *((unsigned char *)this + 72) = v28 != 0;
      int v6 = 1;
      if (!v27) {
        goto LABEL_45;
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v31, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    unsigned int v11 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_10:
    uint64_t v31 = v11;
    unsigned int v13 = v12 >> 3;
    if (v12 >> 3 == 999) {
      goto LABEL_27;
    }
    goto LABEL_11;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v31;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ServiceOptions::_InternalSerialize(google::protobuf::ServiceOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v6 = *((unsigned char *)this + 72);
    *(_WORD *)uint64_t v4 = 648;
    v4[2] = v6;
    v4 += 3;
  }
  int v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v10 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v12 = *((_DWORD *)v10 + 5);
      if (v12 <= 0x7F)
      {
        v4[2] = v12;
        char v9 = (unsigned __int8 *)(v4 + 3);
      }
      else
      {
        v4[2] = v12 | 0x80;
        unsigned int v13 = v12 >> 7;
        if (v12 >> 14)
        {
          char v9 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v9 - 1) = v13 | 0x80;
            unsigned int v14 = v13 >> 7;
            ++v9;
            unsigned int v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v9 - 1) = v14;
        }
        else
        {
          v4[3] = v13;
          char v9 = (unsigned __int8 *)(v4 + 4);
        }
      }
      uint64_t v4 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v10, v9, a3, v11);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::ServiceOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v18 = *((void *)this + 1);
  if (v18)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v18 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v17);
  }
  return result;
}

char *google::protobuf::ServiceOptions::ByteSizeLong(google::protobuf::ServiceOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::ServiceOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = v2 + 2 * v3;
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    char v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    char v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      char v8 = *v6++;
      char v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 += (uint64_t)&v9[(9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6];
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 40)) {
    int v10 = (const google::protobuf::UnknownFieldSet *)(v4 + 3);
  }
  else {
    int v10 = (const google::protobuf::UnknownFieldSet *)v4;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ServiceOptions *)((char *)this + 8), v10, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 11) = v10;
    return (char *)v10;
  }
}

void google::protobuf::ServiceOptions::MergeFrom(google::protobuf::ServiceOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 8958);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::ServiceOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE0BBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0BBF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceOptions::CopyFrom(google::protobuf::ServiceOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::ServiceOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    *((unsigned char *)this + 72) = 0;
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::ServiceOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::ServiceOptions::CopyFrom(google::protobuf::ServiceOptions *this, const google::protobuf::ServiceOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::ServiceOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    *((unsigned char *)this + 72) = 0;
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::ServiceOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::ServiceOptions::GetMetadata(google::protobuf::ServiceOptions *this)
{
  return off_26AED0A18[38];
}

google::protobuf::MethodOptions *google::protobuf::MethodOptions::MethodOptions(google::protobuf::MethodOptions *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C5958;
  *((void *)this + 1) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 16, a2);
  *((void *)this + 6) = a2;
  *((void *)this + 5) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if (atomic_load_explicit(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *((void *)this + 9) = 0;
  return this;
}

void sub_23CE0BDC8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::~MethodOptions(google::protobuf::MethodOptions *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9071);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    uint64_t v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      char v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        char v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::~RepeatedPtrField((uint64_t)this + 48);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::MethodOptions *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::MethodOptions::~MethodOptions(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CE0BEE0(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CE0BEF4(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::MethodOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t *google::protobuf::MethodOptions::default_instance(google::protobuf::MethodOptions *this)
{
  if (atomic_load_explicit(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_MethodOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::MethodOptions::_InternalParse(google::protobuf::MethodOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  BOOL v37 = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v37, a3[11].i32[1]) & 1) == 0)
  {
    char v8 = (void *)((char *)this + 8);
    while (1)
    {
      unsigned int v11 = (google::protobuf::internal *)((char *)v37 + 1);
      LODWORD(v12) = *(unsigned __int8 *)v37;
      if ((*(char *)v37 & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v12 = (const char *)(v12 + (*(unsigned __int8 *)v11 << 7) - 128);
      if ((*(char *)v11 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v37, v12);
      BOOL v37 = TagFallback;
      if (!TagFallback) {
        goto LABEL_60;
      }
      unsigned int v11 = TagFallback;
      unsigned int v13 = v12 >> 3;
      if (v12 >> 3 == 999)
      {
LABEL_31:
        if (v12 != 58) {
          goto LABEL_16;
        }
        uint64_t v21 = (char *)v11 - 2;
        while (2)
        {
          int v22 = v21 + 2;
          BOOL v37 = (google::protobuf::internal *)(v21 + 2);
          uint64_t v23 = (int *)*((void *)this + 8);
          if (v23)
          {
            uint64_t v24 = *((int *)this + 14);
            int v25 = *v23;
            if ((int)v24 < *v23)
            {
              *((_DWORD *)this + 14) = v24 + 1;
              int v26 = *(google::protobuf::UninterpretedOption **)&v23[2 * v24 + 2];
              goto LABEL_40;
            }
            if (v25 == *((_DWORD *)this + 15))
            {
LABEL_38:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v25 + 1);
              uint64_t v23 = (int *)*((void *)this + 8);
              int v25 = *v23;
            }
            *uint64_t v23 = v25 + 1;
            int v26 = (google::protobuf::UninterpretedOption *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            uint64_t v27 = *((void *)this + 8);
            uint64_t v28 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v28 + 1;
            *(void *)(v27 + 8 * v28 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v26;
            int v22 = (std::string::value_type *)v37;
LABEL_40:
            uint64_t v21 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((uint64_t)a3, v26, v22);
            BOOL v37 = (google::protobuf::internal *)v21;
            if (!v21) {
              goto LABEL_60;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *(_WORD *)v21 != 16058) {
              goto LABEL_6;
            }
            continue;
          }
          break;
        }
        int v25 = *((_DWORD *)this + 15);
        goto LABEL_38;
      }
LABEL_11:
      if (v13 == 34)
      {
        if (v12 == 16)
        {
          unsigned int v17 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v18 = *(unsigned __int8 *)v11;
          if (*(char *)v11 < 0)
          {
            int v19 = *(char *)v17;
            uint64_t v18 = v18 + (v19 << 7) - 128;
            if (v19 < 0)
            {
              BOOL v37 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v11, (const char *)v18);
              if (!v37) {
                goto LABEL_60;
              }
              uint64_t v18 = v30;
              if (v30 > 2)
              {
LABEL_51:
                if (*v8)
                {
                  uint64_t v31 = (char *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
                }
                else
                {
                  uint64_t v36 = v18;
                  uint64_t v31 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
                  uint64_t v18 = v36;
                }
                google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v31, 0x22u, v18);
                goto LABEL_6;
              }
              goto LABEL_28;
            }
            unsigned int v17 = (google::protobuf::internal *)((char *)v11 + 2);
          }
          BOOL v37 = v17;
          if (v18 > 2) {
            goto LABEL_51;
          }
LABEL_28:
          *((_DWORD *)this + 10) |= 2u;
          *((_DWORD *)this + 19) = v18;
          goto LABEL_6;
        }
LABEL_16:
        if (v12) {
          BOOL v15 = (v12 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15)
        {
          a3[10].i32[0] = v12 - 1;
          goto LABEL_2;
        }
        unsigned int v16 = (google::protobuf::internal *)v12;
        if (v12 >> 6 < 0x7D)
        {
          if (*v8)
          {
            BOOL v37 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), v11, (const char *)a3, v5);
            if (!v37) {
              goto LABEL_60;
            }
          }
          else
          {
            int v34 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
            BOOL v37 = google::protobuf::internal::UnknownFieldParse(v16, (google::protobuf::UnknownFieldSet *)v34, v37, (const char *)a3, v35);
            if (!v37)
            {
LABEL_60:
              BOOL v37 = 0;
              goto LABEL_2;
            }
          }
        }
        else
        {
          BOOL v37 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::MethodOptions *)((char *)this + 16), (google::protobuf::internal *)v12, v11, (uint64_t)&google::protobuf::_MethodOptions_default_instance_, (unint64_t *)this + 1, a3);
          if (!v37) {
            goto LABEL_60;
          }
        }
        goto LABEL_6;
      }
      if (v13 != 33 || v12 != 8) {
        goto LABEL_16;
      }
      char v9 = (google::protobuf::internal *)((char *)v11 + 1);
      int v10 = (const char *)*(unsigned __int8 *)v11;
      if ((*(char *)v11 & 0x80000000) == 0) {
        goto LABEL_5;
      }
      int v29 = *(char *)v9;
      int v10 = (const char *)(v10 + (v29 << 7) - 128);
      if ((v29 & 0x80000000) == 0)
      {
        char v9 = (google::protobuf::internal *)((char *)v11 + 2);
LABEL_5:
        BOOL v37 = v9;
        *((unsigned char *)this + 72) = v10 != 0;
        int v6 = 1;
        goto LABEL_6;
      }
      int32x2_t v32 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v11, v10);
      BOOL v37 = v32;
      *((unsigned char *)this + 72) = v33 != 0;
      int v6 = 1;
      if (!v32) {
        goto LABEL_60;
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v37, a3[11].i32[1]))goto LABEL_2; {
    }
      }
    unsigned int v11 = (google::protobuf::internal *)((char *)v37 + 2);
LABEL_10:
    BOOL v37 = v11;
    unsigned int v13 = v12 >> 3;
    if (v12 >> 3 == 999) {
      goto LABEL_31;
    }
    goto LABEL_11;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v37;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MethodOptions::_InternalSerialize(google::protobuf::MethodOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v16 = *((unsigned char *)this + 72);
    *(_WORD *)uint64_t v4 = 648;
    v4[2] = v16;
    v4 += 3;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      int v7 = *((_DWORD *)this + 14);
      if (!v7) {
        goto LABEL_29;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4)
  {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    unint64_t v17 = *((int *)this + 19);
    *(_WORD *)uint64_t v4 = 656;
    if (v17 <= 0x7F)
    {
LABEL_20:
      v4[2] = v17;
      v4 += 3;
      int v7 = *((_DWORD *)this + 14);
      if (!v7) {
        goto LABEL_29;
      }
      goto LABEL_4;
    }
  }
  else
  {
    unint64_t v17 = *((int *)this + 19);
    *(_WORD *)uint64_t v4 = 656;
    if (v17 <= 0x7F) {
      goto LABEL_20;
    }
  }
  v4[2] = v17 | 0x80;
  unint64_t v18 = v17 >> 7;
  if (v17 >> 14)
  {
    v4 += 4;
    do
    {
      *(v4 - 1) = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      ++v4;
      unint64_t v20 = v18 >> 14;
      v18 >>= 7;
    }
    while (v20);
    *(v4 - 1) = v19;
    int v7 = *((_DWORD *)this + 14);
    if (!v7) {
      goto LABEL_29;
    }
  }
  else
  {
    v4[3] = v18;
    v4 += 4;
    int v7 = *((_DWORD *)this + 14);
    if (!v7) {
      goto LABEL_29;
    }
  }
LABEL_4:
  for (int i = 0; i != v7; ++i)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    int v10 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
    *(_WORD *)uint64_t v4 = 16058;
    unsigned int v12 = *((_DWORD *)v10 + 5);
    if (v12 <= 0x7F)
    {
      v4[2] = v12;
      char v9 = (unsigned __int8 *)(v4 + 3);
    }
    else
    {
      v4[2] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      if (v12 >> 14)
      {
        char v9 = (unsigned __int8 *)(v4 + 4);
        do
        {
          *(v9 - 1) = v13 | 0x80;
          unsigned int v14 = v13 >> 7;
          ++v9;
          unsigned int v15 = v13 >> 14;
          v13 >>= 7;
        }
        while (v15);
        *(v9 - 1) = v14;
      }
      else
      {
        v4[3] = v13;
        char v9 = (unsigned __int8 *)(v4 + 4);
      }
    }
    uint64_t v4 = (char *)google::protobuf::UninterpretedOption::_InternalSerialize(v10, v9, a3, v11);
  }
LABEL_29:
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::MethodOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v23 = *((void *)this + 1);
  if (v23)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v23 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v22);
  }
  return result;
}

char *google::protobuf::MethodOptions::ByteSizeLong(google::protobuf::MethodOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::MethodOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      char v8 = *v6++;
      char v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  if ((v10 & 3) != 0)
  {
    if (v10) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    if ((v10 & 2) != 0)
    {
      int v11 = *((_DWORD *)this + 19);
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v11 >= 0) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 12;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v13);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MethodOptions *)((char *)this + 8), v4, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 11) = v4;
    return (char *)v4;
  }
}

void google::protobuf::MethodOptions::MergeFrom(google::protobuf::MethodOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9259);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::MethodOptions::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE0C75C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0C770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::CopyFrom(google::protobuf::MethodOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::MethodOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    if ((*((unsigned char *)this + 40) & 3) != 0) {
      *((void *)this + 9) = 0;
    }
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::MethodOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::MethodOptions::CopyFrom(google::protobuf::MethodOptions *this, const google::protobuf::MethodOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::ExtensionSet::Clear((google::protobuf::MethodOptions *)((char *)this + 16));
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
    if ((*((unsigned char *)this + 40) & 3) != 0) {
      *((void *)this + 9) = 0;
    }
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::MethodOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::MethodOptions::GetMetadata(google::protobuf::MethodOptions *this)
{
  return off_26AED0A18[40];
}

void google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(google::protobuf::UninterpretedOption_NamePart *this)
{
  google::protobuf::UninterpretedOption_NamePart::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      int v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        int v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::UninterpretedOption_NamePart::SharedDtor(google::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9385);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 3);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  }
}

void sub_23CE0CA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0CA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::UninterpretedOption_NamePart::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::UninterpretedOption_NamePart::Clear(google::protobuf::UninterpretedOption_NamePart *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v1 = *((void *)this + 3);
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      *((unsigned char *)this + 32) = 0;
      *((_DWORD *)this + 4) = 0;
      uint64_t v2 = *((void *)this + 1);
      if ((v2 & 1) == 0) {
        return;
      }
      goto LABEL_5;
    }
    *(unsigned char *)uint64_t v1 = 0;
    *(unsigned char *)(v1 + 23) = 0;
  }
  *((unsigned char *)this + 32) = 0;
  *((_DWORD *)this + 4) = 0;
  uint64_t v2 = *((void *)this + 1);
  if ((v2 & 1) == 0) {
    return;
  }
LABEL_5:
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v2 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

std::string::value_type *google::protobuf::UninterpretedOption_NamePart::_InternalParse(google::protobuf::UninterpretedOption_NamePart *this, std::string::value_type *a2, google::protobuf::internal::ParseContext *a3)
{
  __s = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&__s, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    char v8 = (void *)((char *)this + 8);
    char v9 = (uint64_t **)((char *)this + 24);
    while (1)
    {
      int v11 = __s + 1;
      unsigned int v12 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v13 = v12 + (*v11 << 7);
      unsigned int v12 = v13 - 128;
      if ((*v11 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v13 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        goto LABEL_44;
      }
      int v11 = TagFallback;
      unsigned int v12 = v23;
      unsigned int v14 = v23 >> 3;
      if (v23 >> 3 != 2)
      {
LABEL_11:
        if (v14 != 1 || v12 != 10)
        {
LABEL_15:
          if (v12) {
            BOOL v16 = (v12 & 7) == 4;
          }
          else {
            BOOL v16 = 1;
          }
          if (v16)
          {
            *((_DWORD *)a3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v12 - 1;
            goto LABEL_2;
          }
          if (*v8)
          {
            __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, (google::protobuf::UnknownFieldSet *)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v11, (const char *)a3, v5);
            if (!__s) {
              goto LABEL_44;
            }
          }
          else
          {
            int v29 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
            __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, (google::protobuf::UnknownFieldSet *)v29, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v30);
            if (!__s) {
              goto LABEL_44;
            }
          }
          goto LABEL_6;
        }
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v17 = *((void *)this + 1);
        unint64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
        if (v17)
        {
          unint64_t v18 = *(google::protobuf::Arena **)v18;
          unint64_t v19 = *v9;
          if (*v9 == &google::protobuf::internal::fixed_address_empty_string)
          {
LABEL_24:
            google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, v18, (long long *)&google::protobuf::internal::fixed_address_empty_string);
            unint64_t v19 = *v9;
            int v11 = __s;
          }
        }
        else
        {
          unint64_t v19 = *v9;
          if (*v9 == &google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_24;
          }
        }
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v19, v11, (uint64_t)a3);
        if (*((char *)v19 + 23) < 0)
        {
          uint64_t v28 = (uint64_t *)*v19;
          size_t v21 = v19[1];
          if ((v21 & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v19[1], "size_t to int conversion", v20);
          }
          unint64_t v19 = v28;
        }
        else
        {
          size_t v21 = *((unsigned __int8 *)v19 + 23);
        }
        google::protobuf::internal::VerifyUTF8(v19, v21, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.NamePart.name_part");
        if (!__s)
        {
LABEL_44:
          __s = 0;
          goto LABEL_2;
        }
        goto LABEL_6;
      }
LABEL_29:
      if (v12 != 16) {
        goto LABEL_15;
      }
      v6 |= 2u;
      int v10 = v11 + 1;
      unint64_t v24 = *v11;
      if ((*v11 & 0x80000000) == 0) {
        goto LABEL_5;
      }
      int v25 = *v10;
      unint64_t v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        int v10 = v11 + 2;
LABEL_5:
        __s = v10;
        *((unsigned char *)this + 32) = v24 != 0;
        goto LABEL_6;
      }
      int v26 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v11, (const char *)v24);
      __s = v26;
      *((unsigned char *)this + 32) = v27 != 0;
      if (!v26) {
        goto LABEL_44;
      }
LABEL_6:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&__s, *((_DWORD *)a3 + 23))) {
        goto LABEL_2;
      }
    }
    int v11 = __s + 2;
LABEL_10:
    __s = v11;
    unsigned int v14 = v12 >> 3;
    if (v12 >> 3 != 2) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return __s;
}

const google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption_NamePart::_InternalSerialize(google::protobuf::UninterpretedOption_NamePart *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 4);
  if ((v7 & 1) == 0)
  {
    if ((v7 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_16:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    }
    char v15 = *((unsigned char *)this + 32);
    *(unsigned char *)a2 = 16;
    *((unsigned char *)a2 + 1) = v15;
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    uint64_t v8 = *((void *)this + 1);
    if ((v8 & 1) == 0) {
      return a2;
    }
    goto LABEL_19;
  }
  int v10 = (unsigned __int8 *)*((void *)this + 3);
  if ((char)v10[23] < 0)
  {
    int v10 = *(unsigned __int8 **)v10;
    int v11 = *(const char **)(*((void *)this + 3) + 8);
  }
  else
  {
    int v11 = (const char *)v10[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v10, v11, 1, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.NamePart.name_part");
  uint64_t v12 = *((void *)this + 3);
  if (*(char *)(v12 + 23) < 0)
  {
    int64_t v13 = *(void *)(v12 + 8);
    if (v13 > 127) {
      goto LABEL_22;
    }
  }
  else
  {
    int64_t v13 = *(unsigned __int8 *)(v12 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v13)
  {
LABEL_22:
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 1, v12, (char *)a2);
    if ((v7 & 2) != 0) {
      goto LABEL_16;
    }
    goto LABEL_3;
  }
  *(unsigned char *)a2 = 10;
  *((unsigned char *)a2 + 1) = v13;
  if (*(char *)(v12 + 23) >= 0) {
    unsigned int v14 = (const void *)v12;
  }
  else {
    unsigned int v14 = *(const void **)v12;
  }
  memcpy((char *)a2 + 2, v14, v13);
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v13 + 2);
  if ((v7 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return a2;
  }
LABEL_19:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::UninterpretedOption_NamePart::ByteSizeLong(google::protobuf::UninterpretedOption_NamePart *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((~v1 & 3) != 0)
  {
    if (v1)
    {
      uint64_t v7 = *((void *)this + 3);
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v9 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = v8;
      }
      uint64_t v6 = v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v6 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v6 + 2);
    }
    else {
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)v6;
    }
  }
  else
  {
    uint64_t v2 = *((void *)this + 3);
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 3);
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UninterpretedOption_NamePart *)((char *)this + 8), v5, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v5;
  return (char *)v5;
}

void google::protobuf::UninterpretedOption_NamePart::MergeFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9550);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE0D094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0D0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption_NamePart::MergeFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::UninterpretedOption_NamePart *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9565);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 3) == 0) {
        return;
      }
LABEL_8:
      if ((v5 & 1) == 0) {
        goto LABEL_12;
      }
      uint64_t v9 = (std::string *)*((void *)a2 + 3);
      *((_DWORD *)this + 4) |= 1u;
      int v10 = (std::string **)((char *)this + 24);
      uint64_t v11 = *((void *)this + 1);
      uint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
      if (v11)
      {
        uint64_t v12 = *(google::protobuf::Arena **)v12;
        int64_t v13 = *v10;
        if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_11;
        }
      }
      else
      {
        int64_t v13 = *v10;
        if (*v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
LABEL_11:
          std::string::operator=(v13, v9);
LABEL_12:
          if ((v5 & 2) == 0)
          {
LABEL_14:
            *((_DWORD *)this + 4) |= v5;
            return;
          }
LABEL_13:
          *((unsigned char *)this + 32) = *((unsigned char *)a2 + 32);
          goto LABEL_14;
        }
      }
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v10, v12, (long long *)v9);
      if ((v5 & 2) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v8 = *((void *)this + 1);
  if (v8)
  {
    google::protobuf::UnknownFieldSet::InternalMergeFrom((v8 & 0xFFFFFFFFFFFFFFFELL) + 8, v7);
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 3) != 0) {
      goto LABEL_8;
    }
  }
  else
  {
    unsigned int v14 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
    google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v14, v7);
    int v5 = *((_DWORD *)a2 + 4);
    if ((v5 & 3) != 0) {
      goto LABEL_8;
    }
  }
}

void sub_23CE0D230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0D244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption_NamePart::CopyFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    uint64_t v3 = lpsrc;
    uint64_t v4 = this;
    if (*((unsigned char *)this + 16))
    {
      uint64_t v5 = *((void *)this + 3);
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)uint64_t v5 = 0;
        *(void *)(v5 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
        *((unsigned char *)this + 32) = 0;
        *((_DWORD *)this + 4) = 0;
        uint64_t v6 = *((void *)this + 1);
        if ((v6 & 1) == 0) {
          goto LABEL_12;
        }
        goto LABEL_6;
      }
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
    *((unsigned char *)this + 32) = 0;
    *((_DWORD *)this + 4) = 0;
    uint64_t v6 = *((void *)this + 1);
    if ((v6 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_6:
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 16))
    {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v6 & 0xFFFFFFFFFFFFFFFELL)
                                                                                           + 8));
      this = v4;
      lpsrc = v3;
LABEL_9:
      google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, lpsrc);
      return;
    }
LABEL_12:
    goto LABEL_9;
  }
}

BOOL google::protobuf::UninterpretedOption_NamePart::IsInitialized(google::protobuf::UninterpretedOption_NamePart *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t google::protobuf::UninterpretedOption_NamePart::GetMetadata(google::protobuf::UninterpretedOption_NamePart *this)
{
  return off_26AED0A18[42];
}

void google::protobuf::UninterpretedOption::~UninterpretedOption(google::protobuf::UninterpretedOption *this)
{
  google::protobuf::UninterpretedOption::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      uint64_t v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        uint64_t v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)this + 24);
}

{
  uint64_t vars8;

  google::protobuf::UninterpretedOption::~UninterpretedOption(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::UninterpretedOption::SharedDtor(google::protobuf::UninterpretedOption *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9691);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v11, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 6);
  if ((uint64_t *)v5 == &google::protobuf::internal::fixed_address_empty_string || v5 == 0)
  {
    uint64_t v7 = *((void *)this + 7);
    if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0) {
      goto LABEL_22;
    }
LABEL_14:
    uint64_t v9 = *((void *)this + 8);
    if ((uint64_t *)v9 == &google::protobuf::internal::fixed_address_empty_string) {
      return;
    }
    goto LABEL_25;
  }
  if (*(char *)(v5 + 23) < 0) {
    operator delete(*(void **)v5);
  }
  MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  uint64_t v7 = *((void *)this + 7);
  if ((uint64_t *)v7 == &google::protobuf::internal::fixed_address_empty_string || v7 == 0) {
    goto LABEL_14;
  }
LABEL_22:
  if (*(char *)(v7 + 23) < 0) {
    operator delete(*(void **)v7);
  }
  MEMORY[0x23ECF2BC0](v7, 0x1012C40EC159624);
  uint64_t v9 = *((void *)this + 8);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
LABEL_25:
    if (v9)
    {
      if (*(char *)(v9 + 23) < 0) {
        operator delete(*(void **)v9);
      }
      MEMORY[0x23ECF2BC0](v9, 0x1012C40EC159624);
    }
  }
}

void sub_23CE0D570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0D584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::UninterpretedOption::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::UninterpretedOption::Clear(google::protobuf::UninterpretedOption *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) == 0) {
    goto LABEL_16;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    uint64_t v4 = *((void *)this + 7);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
      if ((v2 & 4) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v2 & 4) == 0) {
        goto LABEL_16;
      }
    }
    goto LABEL_14;
  }
  uint64_t v3 = *((void *)this + 6);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_10;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_10;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_16;
  }
LABEL_14:
  uint64_t v5 = *((void *)this + 8);
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)uint64_t v5 = 0;
    *(void *)(v5 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    if ((v2 & 0x38) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  *(unsigned char *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
LABEL_16:
  if ((v2 & 0x38) != 0)
  {
LABEL_17:
    *((void *)this + 9) = 0;
    *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    *((void *)this + 11) = 0;
  }
LABEL_18:
  *((_DWORD *)this + 4) = 0;
  uint64_t v6 = *((void *)this + 1);
  if ((v6 & 1) != 0 && *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v6 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::UninterpretedOption::_InternalParse(google::protobuf::UninterpretedOption *this, std::string::value_type *a2, google::protobuf::internal::ParseContext *a3)
{
  __s = a2;
  int v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&__s, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    int64_t v53 = (unint64_t *)((char *)this + 8);
    uint64_t v8 = (std::string **)((char *)this + 64);
    uint64_t v9 = (std::string **)((char *)this + 56);
    int v10 = (uint64_t **)((char *)this + 48);
    while (1)
    {
      uint64_t v12 = __s + 1;
      unsigned int v13 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_10;
      }
      unsigned int v14 = v13 + (*v12 << 7);
      unsigned int v13 = v14 - 128;
      if ((*v12 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v14 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        goto LABEL_85;
      }
      uint64_t v12 = TagFallback;
      unsigned int v13 = v25;
      unsigned int v15 = (v25 >> 3) - 2;
      if (v15 <= 6) {
        goto LABEL_11;
      }
LABEL_27:
      if (v13) {
        BOOL v26 = (v13 & 7) == 4;
      }
      else {
        BOOL v26 = 1;
      }
      if (v26)
      {
        *((_DWORD *)a3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v13 - 1;
        goto LABEL_2;
      }
      if (*v53)
      {
        uint64_t v27 = (char *)((*v53 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v27 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v53);
        uint64_t v12 = __s;
      }
      uint64_t v28 = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v13, (google::protobuf::UnknownFieldSet *)v27, (google::protobuf::UnknownFieldSet *)v12, (const char *)a3, v5);
LABEL_59:
      __s = v28;
      if (!v28) {
        goto LABEL_85;
      }
LABEL_71:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&__s, *((_DWORD *)a3 + 23))) {
        goto LABEL_2;
      }
    }
    uint64_t v12 = __s + 2;
LABEL_10:
    __s = v12;
    unsigned int v15 = (v13 >> 3) - 2;
LABEL_11:
    switch(v15)
    {
      case 0u:
        if (v13 != 18) {
          goto LABEL_27;
        }
        BOOL v16 = v12 - 1;
        break;
      case 1u:
        if (v13 != 26) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v29 = *((void *)this + 1);
        uint64_t v30 = (google::protobuf::Arena *)(v29 & 0xFFFFFFFFFFFFFFFELL);
        if ((v29 & 1) == 0)
        {
          uint64_t v31 = *v10;
          if (*v10 != &google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_38;
          }
LABEL_37:
          google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, v30, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          uint64_t v31 = *v10;
          uint64_t v12 = __s;
          goto LABEL_38;
        }
        uint64_t v30 = *(google::protobuf::Arena **)v30;
        uint64_t v31 = *v10;
        if (*v10 == &google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_37;
        }
LABEL_38:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v31, v12, (uint64_t)a3);
        if (*((char *)v31 + 23) < 0)
        {
          uint64_t v33 = (uint64_t *)*v31;
          size_t v11 = v31[1];
          if ((v11 & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v31[1], "size_t to int conversion", v32);
          }
          uint64_t v31 = v33;
          uint64_t v8 = (std::string **)((char *)this + 64);
        }
        else
        {
          size_t v11 = *((unsigned __int8 *)v31 + 23);
        }
        google::protobuf::internal::VerifyUTF8(v31, v11, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.identifier_value");
        if (!__s) {
          goto LABEL_85;
        }
        goto LABEL_71;
      case 2u:
        if (v13 != 32) {
          goto LABEL_27;
        }
        v6 |= 8u;
        int v34 = v12 + 1;
        unint64_t v35 = *v12;
        if ((*v12 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v36 = *v34;
        unint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          unint64_t v49 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v12, (const char *)v35);
          __s = v49;
          *((void *)this + 9) = v50;
          if (!v49) {
            goto LABEL_85;
          }
        }
        else
        {
          int v34 = v12 + 2;
LABEL_46:
          __s = v34;
          *((void *)this + 9) = v35;
        }
        goto LABEL_71;
      case 3u:
        if (v13 != 40) {
          goto LABEL_27;
        }
        v6 |= 0x10u;
        BOOL v37 = v12 + 1;
        unint64_t v38 = *v12;
        if ((*v12 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v39 = *v37;
        unint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v51 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v12, (const char *)v38);
          __s = v51;
          *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v52;
          if (!v51) {
            goto LABEL_85;
          }
        }
        else
        {
          BOOL v37 = v12 + 2;
LABEL_51:
          __s = v37;
          *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v38;
        }
        goto LABEL_71;
      case 4u:
        if (v13 != 49) {
          goto LABEL_27;
        }
        v6 |= 0x20u;
        *((void *)this + 11) = *(void *)v12;
        __s = v12 + 8;
        goto LABEL_71;
      case 5u:
        if (v13 != 58) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v40 = *((void *)this + 1);
        uint64_t v41 = (google::protobuf::Arena *)(v40 & 0xFFFFFFFFFFFFFFFELL);
        if ((v40 & 1) == 0)
        {
          uint64_t v42 = *v9;
          if (*v9 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_58;
          }
LABEL_57:
          google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, v41, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          uint64_t v42 = *v9;
          uint64_t v12 = __s;
          goto LABEL_58;
        }
        uint64_t v41 = *(google::protobuf::Arena **)v41;
        uint64_t v42 = *v9;
        if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_57;
        }
LABEL_58:
        uint64_t v28 = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v42, v12, (uint64_t)a3);
        goto LABEL_59;
      case 6u:
        if (v13 != 66) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 4) |= 4u;
        uint64_t v43 = *((void *)this + 1);
        uint64_t v44 = (google::protobuf::Arena *)(v43 & 0xFFFFFFFFFFFFFFFELL);
        if ((v43 & 1) == 0)
        {
          uint64_t v45 = *v8;
          if (*v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_65;
          }
LABEL_64:
          google::protobuf::internal::ArenaStringPtr::CreateInstance(v8, v44, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          uint64_t v45 = *v8;
          uint64_t v12 = __s;
          goto LABEL_65;
        }
        uint64_t v44 = *(google::protobuf::Arena **)v44;
        uint64_t v45 = *v8;
        if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_64;
        }
LABEL_65:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v45, v12, (uint64_t)a3);
        if (SHIBYTE(v45->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v48 = (std::string *)v45->__r_.__value_.__r.__words[0];
          size_t size = v45->__r_.__value_.__l.__size_;
          if ((size & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v45->__r_.__value_.__l.__size_, "size_t to int conversion", v46);
          }
          uint64_t v45 = v48;
          uint64_t v8 = (std::string **)((char *)this + 64);
        }
        else
        {
          size_t size = HIBYTE(v45->__r_.__value_.__r.__words[2]);
        }
        google::protobuf::internal::VerifyUTF8(v45, size, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.aggregate_value");
        if (__s) {
          goto LABEL_71;
        }
LABEL_85:
        __s = 0;
        goto LABEL_2;
      default:
        goto LABEL_27;
    }
    while (1)
    {
      uint64_t v17 = v16 + 1;
      __s = v16 + 1;
      unint64_t v18 = (int *)*((void *)this + 5);
      if (!v18) {
        break;
      }
      uint64_t v19 = *((int *)this + 8);
      int v20 = *v18;
      if ((int)v19 >= *v18)
      {
        if (v20 == *((_DWORD *)this + 9))
        {
LABEL_19:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v20 + 1);
          unint64_t v18 = (int *)*((void *)this + 5);
          int v20 = *v18;
        }
        *unint64_t v18 = v20 + 1;
        size_t v21 = (google::protobuf::UninterpretedOption_NamePart *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(*((google::protobuf::Arena **)this + 3));
        uint64_t v22 = *((void *)this + 5);
        uint64_t v23 = *((int *)this + 8);
        *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v23 + 1;
        *(void *)(v22 + 8 * v23 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v21;
        uint64_t v17 = __s;
        goto LABEL_21;
      }
      *((_DWORD *)this + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v19 + 1;
      size_t v21 = *(google::protobuf::UninterpretedOption_NamePart **)&v18[2 * v19 + 2];
LABEL_21:
      BOOL v16 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption_NamePart>(a3, v21, v17);
      __s = v16;
      if (!v16) {
        goto LABEL_85;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_71;
      }
    }
    int v20 = *((_DWORD *)this + 9);
    goto LABEL_19;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return __s;
}

std::string::value_type *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption_NamePart>(google::protobuf::internal::ParseContext *a1, google::protobuf::UninterpretedOption_NamePart *this, std::string::value_type *a3)
{
  unsigned int v5 = *a3;
  if (*a3 < 0)
  {
    uint64_t result = (std::string::value_type *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)a3, (const char *)*a3);
    if (!result) {
      return result;
    }
    int v6 = result;
    unsigned int v5 = v13;
    if (v13 >= 0x7FFFFFF0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
      unsigned int v14 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((uint64_t)&v15, v14);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    int v6 = a3 + 1;
  }
  uint64_t v7 = *((void *)a1 + 1);
  int v8 = v5 + v6 - v7;
  *(void *)a1 = v7 + (v8 & (v8 >> 31));
  int v9 = *((_DWORD *)a1 + 7);
  *((_DWORD *)a1 + 7) = v8;
  LODWORD(v7) = *((_DWORD *)a1 + 22);
  BOOL v10 = __OFSUB__(v7, 1);
  LODWORD(v7) = v7 - 1;
  *((_DWORD *)a1 + 22) = v7;
  if ((int)v7 < 0 != v10) {
    return 0;
  }
  uint64_t result = google::protobuf::UninterpretedOption_NamePart::_InternalParse(this, v6, a1);
  if (result)
  {
    ++*((_DWORD *)a1 + 22);
    if (!*((_DWORD *)a1 + 20))
    {
      int v12 = *((_DWORD *)a1 + 7) + v9 - v8;
      *((_DWORD *)a1 + 7) = v12;
      *(void *)a1 = *((void *)a1 + 1) + (v12 & (v12 >> 31));
      return result;
    }
    return 0;
  }
  return result;
}

void sub_23CE0DD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0DD84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption::_InternalSerialize(google::protobuf::UninterpretedOption *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      BOOL v10 = (google::protobuf::UninterpretedOption_NamePart *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((uint64_t)this + 24, i);
      *a2 = 18;
      unsigned int v12 = *((_DWORD *)v10 + 5);
      if (v12 <= 0x7F)
      {
        a2[1] = v12;
        int v9 = a2 + 2;
      }
      else
      {
        a2[1] = v12 | 0x80;
        unsigned int v13 = v12 >> 7;
        if (v12 >> 14)
        {
          int v9 = a2 + 3;
          do
          {
            *(v9 - 1) = v13 | 0x80;
            unsigned int v14 = v13 >> 7;
            ++v9;
            unsigned int v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v9 - 1) = v14;
        }
        else
        {
          a2[2] = v13;
          int v9 = a2 + 3;
        }
      }
      a2 = (unsigned __int8 *)google::protobuf::UninterpretedOption_NamePart::_InternalSerialize(v10, (google::protobuf::UnknownFieldSet *)v9, a3, v11);
    }
  }
  int v16 = *((_DWORD *)this + 4);
  if (v16)
  {
    uint64_t v19 = (unsigned __int8 *)*((void *)this + 6);
    if ((char)v19[23] < 0)
    {
      uint64_t v19 = *(unsigned __int8 **)v19;
      int v20 = *(const char **)(*((void *)this + 6) + 8);
    }
    else
    {
      int v20 = (const char *)v19[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v19, v20, 1, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.identifier_value");
    uint64_t v21 = *((void *)this + 6);
    if (*(char *)(v21 + 23) < 0)
    {
      int64_t v22 = *(void *)(v21 + 8);
      if (v22 > 127) {
        goto LABEL_36;
      }
    }
    else
    {
      int64_t v22 = *(unsigned __int8 *)(v21 + 23);
    }
    if (*(void *)a3 - (void)a2 + 14 >= v22)
    {
      *a2 = 26;
      a2[1] = v22;
      if (*(char *)(v21 + 23) >= 0) {
        uint64_t v23 = (const void *)v21;
      }
      else {
        uint64_t v23 = *(const void **)v21;
      }
      memcpy(a2 + 2, v23, v22);
      a2 += v22 + 2;
      if ((v16 & 8) != 0) {
        goto LABEL_32;
      }
LABEL_15:
      if ((v16 & 0x10) == 0) {
        goto LABEL_16;
      }
LABEL_45:
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        unint64_t v28 = *((void *)this + 10);
        *a2 = 40;
        if (v28 <= 0x7F)
        {
LABEL_47:
          a2[1] = v28;
          a2 += 2;
          if ((v16 & 0x20) != 0) {
            goto LABEL_56;
          }
          goto LABEL_17;
        }
      }
      else
      {
        unint64_t v28 = *((void *)this + 10);
        *a2 = 40;
        if (v28 <= 0x7F) {
          goto LABEL_47;
        }
      }
      a2[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      if (v28 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - 1) = v29 | 0x80;
          unint64_t v30 = v29 >> 7;
          ++a2;
          unint64_t v31 = v29 >> 14;
          v29 >>= 7;
        }
        while (v31);
        *(a2 - 1) = v30;
        if ((v16 & 0x20) != 0) {
          goto LABEL_56;
        }
      }
      else
      {
        a2[2] = v29;
        a2 += 3;
        if ((v16 & 0x20) != 0) {
          goto LABEL_56;
        }
      }
LABEL_17:
      if ((v16 & 2) == 0) {
        goto LABEL_18;
      }
      goto LABEL_59;
    }
LABEL_36:
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 3, v21, (char *)a2);
    if ((v16 & 8) != 0) {
      goto LABEL_32;
    }
    goto LABEL_15;
  }
  if ((v16 & 8) == 0) {
    goto LABEL_15;
  }
LABEL_32:
  if (*(void *)a3 <= (unint64_t)a2)
  {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    unint64_t v24 = *((void *)this + 9);
    *a2 = 32;
    if (v24 <= 0x7F)
    {
LABEL_34:
      a2[1] = v24;
      a2 += 2;
      if ((v16 & 0x10) != 0) {
        goto LABEL_45;
      }
      goto LABEL_16;
    }
  }
  else
  {
    unint64_t v24 = *((void *)this + 9);
    *a2 = 32;
    if (v24 <= 0x7F) {
      goto LABEL_34;
    }
  }
  a2[1] = v24 | 0x80;
  unint64_t v25 = v24 >> 7;
  if (v24 >> 14)
  {
    a2 += 3;
    do
    {
      *(a2 - 1) = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      ++a2;
      unint64_t v27 = v25 >> 14;
      v25 >>= 7;
    }
    while (v27);
    *(a2 - 1) = v26;
    if ((v16 & 0x10) != 0) {
      goto LABEL_45;
    }
  }
  else
  {
    a2[2] = v25;
    a2 += 3;
    if ((v16 & 0x10) != 0) {
      goto LABEL_45;
    }
  }
LABEL_16:
  if ((v16 & 0x20) == 0) {
    goto LABEL_17;
  }
LABEL_56:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
  }
  uint64_t v32 = *((void *)this + 11);
  *a2 = 49;
  *(void *)(a2 + 1) = v32;
  a2 += 9;
  if ((v16 & 2) == 0)
  {
LABEL_18:
    if ((v16 & 4) == 0) {
      goto LABEL_19;
    }
LABEL_67:
    int v36 = (unsigned __int8 *)*((void *)this + 8);
    if ((char)v36[23] < 0)
    {
      int v36 = *(unsigned __int8 **)v36;
      BOOL v37 = *(const char **)(*((void *)this + 8) + 8);
    }
    else
    {
      BOOL v37 = (const char *)v36[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v36, v37, 1, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.aggregate_value");
    uint64_t v38 = *((void *)this + 8);
    if (*(char *)(v38 + 23) < 0)
    {
      int64_t v39 = *(void *)(v38 + 8);
      if (v39 > 127)
      {
LABEL_83:
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 8, v38, (char *)a2);
        uint64_t v17 = *((void *)this + 1);
        if ((v17 & 1) == 0) {
          return (const google::protobuf::UnknownFieldSet *)a2;
        }
        goto LABEL_78;
      }
    }
    else
    {
      int64_t v39 = *(unsigned __int8 *)(v38 + 23);
    }
    if (*(void *)a3 - (void)a2 + 14 >= v39)
    {
      *a2 = 66;
      a2[1] = v39;
      if (*(char *)(v38 + 23) >= 0) {
        uint64_t v40 = (const void *)v38;
      }
      else {
        uint64_t v40 = *(const void **)v38;
      }
      memcpy(a2 + 2, v40, v39);
      a2 += v39 + 2;
      uint64_t v17 = *((void *)this + 1);
      if ((v17 & 1) == 0) {
        return (const google::protobuf::UnknownFieldSet *)a2;
      }
      goto LABEL_78;
    }
    goto LABEL_83;
  }
LABEL_59:
  uint64_t v33 = *((void *)this + 7);
  if (*(char *)(v33 + 23) < 0)
  {
    int64_t v34 = *(void *)(v33 + 8);
    if (v34 > 127) {
      goto LABEL_81;
    }
  }
  else
  {
    int64_t v34 = *(unsigned __int8 *)(v33 + 23);
  }
  if (*(void *)a3 - (void)a2 + 14 < v34)
  {
LABEL_81:
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 7, v33, (char *)a2);
    if ((v16 & 4) != 0) {
      goto LABEL_67;
    }
    goto LABEL_19;
  }
  *a2 = 58;
  a2[1] = v34;
  if (*(char *)(v33 + 23) >= 0) {
    unint64_t v35 = (const void *)v33;
  }
  else {
    unint64_t v35 = *(const void **)v33;
  }
  memcpy(a2 + 2, v35, v34);
  a2 += v34 + 2;
  if ((v16 & 4) != 0) {
    goto LABEL_67;
  }
LABEL_19:
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
LABEL_78:

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::UninterpretedOption::ByteSizeLong(google::protobuf::UninterpretedOption *this)
{
  int v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      uint64_t v6 = *v4;
      int v7 = *(_DWORD *)(*v4 + 16);
      if ((~v7 & 3) != 0)
      {
        if (v7)
        {
          uint64_t v13 = *(void *)(v6 + 24);
          uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
          uint64_t v15 = *(void *)(v13 + 8);
          if ((v14 & 0x80u) == 0) {
            uint64_t v15 = v14;
          }
          uint64_t v12 = v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        else
        {
          uint64_t v12 = 0;
        }
        if ((v7 & 2) != 0) {
          size_t v11 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
        }
        else {
          size_t v11 = (const google::protobuf::UnknownFieldSet *)v12;
        }
      }
      else
      {
        uint64_t v8 = *(void *)(v6 + 24);
        uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
        uint64_t v10 = *(void *)(v8 + 8);
        if ((v9 & 0x80u) == 0) {
          uint64_t v10 = v9;
        }
        size_t v11 = (const google::protobuf::UnknownFieldSet *)(v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 3);
      }
      if (*(unsigned char *)(v6 + 8)) {
        size_t v11 = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(v6 + 8), v11, (_DWORD *)(v6 + 20));
      }
      else {
        *(_DWORD *)(v6 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v11;
      }
      int v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v11
                                                     + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6));
      ++v4;
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    int v2 = 0;
  }
  int v16 = *((_DWORD *)this + 4);
  if ((v16 & 0x3F) != 0)
  {
    if (v16)
    {
      uint64_t v18 = *((void *)this + 6);
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      int v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1);
      if ((v16 & 2) == 0)
      {
LABEL_27:
        if ((v16 & 4) == 0) {
          goto LABEL_28;
        }
        goto LABEL_41;
      }
    }
    else if ((v16 & 2) == 0)
    {
      goto LABEL_27;
    }
    uint64_t v21 = *((void *)this + 7);
    uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
    uint64_t v23 = *(void *)(v21 + 8);
    if ((v22 & 0x80u) == 0) {
      uint64_t v23 = v22;
    }
    int v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v16 & 4) == 0)
    {
LABEL_28:
      if ((v16 & 8) == 0) {
        goto LABEL_29;
      }
      goto LABEL_44;
    }
LABEL_41:
    uint64_t v24 = *((void *)this + 8);
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    int v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v16 & 8) == 0)
    {
LABEL_29:
      if ((v16 & 0x10) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
LABEL_44:
    int v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((void *)this + 9) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 1);
    if ((v16 & 0x10) == 0)
    {
LABEL_31:
      if ((v16 & 0x20) != 0) {
        int v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + 9);
      }
      goto LABEL_33;
    }
LABEL_30:
    int v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((void *)this + 10) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 1);
    goto LABEL_31;
  }
LABEL_33:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UninterpretedOption *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void google::protobuf::UninterpretedOption::MergeFrom(google::protobuf::UninterpretedOption *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9974);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::UninterpretedOption::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE0E5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0E5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption::MergeFrom(google::protobuf::UninterpretedOption *this, const google::protobuf::UninterpretedOption *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 9989);
    uint64_t v6 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v25, v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
      int v5 = *((_DWORD *)a2 + 4);
      if ((v5 & 0x3F) == 0) {
        return;
      }
LABEL_9:
      if ((v5 & 1) == 0)
      {
        if ((v5 & 2) == 0) {
          goto LABEL_11;
        }
LABEL_24:
        uint64_t v15 = (std::string *)*((void *)a2 + 7);
        *((_DWORD *)this + 4) |= 2u;
        int v16 = (std::string **)((char *)this + 56);
        uint64_t v17 = *((void *)this + 1);
        uint64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
        if (v17)
        {
          uint64_t v18 = *(google::protobuf::Arena **)v18;
          uint64_t v19 = *v16;
          if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
LABEL_26:
            std::string::operator=(v19, v15);
            if ((v5 & 4) != 0) {
              goto LABEL_30;
            }
LABEL_12:
            if ((v5 & 8) == 0) {
              goto LABEL_13;
            }
LABEL_36:
            *((void *)this + 9) = *((void *)a2 + 9);
            if ((v5 & 0x10) == 0)
            {
LABEL_14:
              if ((v5 & 0x20) == 0)
              {
LABEL_16:
                *((_DWORD *)this + 4) |= v5;
                return;
              }
LABEL_15:
              *((void *)this + 11) = *((void *)a2 + 11);
              goto LABEL_16;
            }
LABEL_37:
            *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((void *)a2 + 10);
            if ((v5 & 0x20) == 0) {
              goto LABEL_16;
            }
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v19 = *v16;
          if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_26;
          }
        }
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v16, v18, (long long *)v15);
        if ((v5 & 4) != 0) {
          goto LABEL_30;
        }
        goto LABEL_12;
      }
      uint64_t v10 = (std::string *)*((void *)a2 + 6);
      *((_DWORD *)this + 4) |= 1u;
      size_t v11 = (std::string **)((char *)this + 48);
      uint64_t v12 = *((void *)this + 1);
      uint64_t v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
      if (v12)
      {
        uint64_t v13 = *(google::protobuf::Arena **)v13;
        uint64_t v14 = *v11;
        if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
LABEL_19:
          std::string::operator=(v14, v10);
          if ((v5 & 2) != 0) {
            goto LABEL_24;
          }
LABEL_11:
          if ((v5 & 4) == 0) {
            goto LABEL_12;
          }
LABEL_30:
          uint64_t v20 = (std::string *)*((void *)a2 + 8);
          *((_DWORD *)this + 4) |= 4u;
          uint64_t v21 = (std::string **)((char *)this + 64);
          uint64_t v22 = *((void *)this + 1);
          uint64_t v23 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
          if (v22)
          {
            uint64_t v23 = *(google::protobuf::Arena **)v23;
            uint64_t v24 = *v21;
            if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            {
LABEL_32:
              std::string::operator=(v24, v20);
              if ((v5 & 8) != 0) {
                goto LABEL_36;
              }
LABEL_13:
              if ((v5 & 0x10) == 0) {
                goto LABEL_14;
              }
              goto LABEL_37;
            }
          }
          else
          {
            uint64_t v24 = *v21;
            if (*v21 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              goto LABEL_32;
            }
          }
          google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, v23, (long long *)v20);
          if ((v5 & 8) != 0) {
            goto LABEL_36;
          }
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v14 = *v11;
        if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_19;
        }
      }
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v11, v13, (long long *)v10);
      if ((v5 & 2) != 0) {
        goto LABEL_24;
      }
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  char v7 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v8 = *((void *)this + 1);
  if (v8) {
    uint64_t v9 = (char *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v9 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v9, v7);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((uint64_t)this + 24, (uint64_t)a2 + 24);
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 0x3F) != 0) {
    goto LABEL_9;
  }
}

void sub_23CE0E85C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0E870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption::CopyFrom(google::protobuf::UninterpretedOption *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::UninterpretedOption::Clear(this);
    google::protobuf::UninterpretedOption::MergeFrom(this, a2);
  }
}

BOOL google::protobuf::UninterpretedOption::IsInitialized(google::protobuf::UninterpretedOption *this)
{
  int v1 = (char *)this + 24;
  int v2 = *((_DWORD *)this + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
  }
  while (v2 < 0 == v4
       && (~*(_DWORD *)(google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((uint64_t)v1, v2)+ 16) & 3) == 0);
  return v3 < 1;
}

uint64_t google::protobuf::UninterpretedOption::GetMetadata(google::protobuf::UninterpretedOption *this)
{
  return off_26AED0A18[44];
}

void google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(google::protobuf::SourceCodeInfo_Location *this)
{
  google::protobuf::SourceCodeInfo_Location::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      uint64_t v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        uint64_t v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 72);
  google::protobuf::RepeatedField<BOOL>::~RepeatedField((uint64_t)this + 48);
  google::protobuf::RepeatedField<BOOL>::~RepeatedField((uint64_t)this + 24);
}

{
  uint64_t vars8;

  google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::SourceCodeInfo_Location::SharedDtor(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 10116);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v10, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 12);
  if ((uint64_t *)v5 == &google::protobuf::internal::fixed_address_empty_string || v5 == 0)
  {
    uint64_t v7 = *((void *)this + 13);
    if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0)
    {
LABEL_21:
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x23ECF2BC0](v7, 0x1012C40EC159624);
    }
  }
  else
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
    uint64_t v7 = *((void *)this + 13);
    if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0) {
      goto LABEL_21;
    }
  }
}

void sub_23CE0EB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0EB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::SourceCodeInfo_Location::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::SourceCodeInfo_Location::Clear(google::protobuf::SourceCodeInfo_Location *this)
{
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0) {
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
LABEL_5:
    if ((v2 & 2) != 0) {
      goto LABEL_6;
    }
LABEL_10:
    *((_DWORD *)this + 4) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) == 0) {
      return;
    }
    goto LABEL_11;
  }
  uint64_t v3 = *((void *)this + 12);
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)uint64_t v3 = 0;
  *(void *)(v3 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_10;
  }
LABEL_6:
  uint64_t v4 = *((void *)this + 13);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    *((_DWORD *)this + 4) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) == 0) {
      return;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    *((_DWORD *)this + 4) = 0;
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) == 0) {
      return;
    }
  }
LABEL_11:
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16))
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
                                                                                         + 8));
  }
}

std::string::value_type *google::protobuf::SourceCodeInfo_Location::_InternalParse(int **this, std::string::value_type *a2, google::protobuf::internal::ParseContext *a3)
{
  __s = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&__s, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    uint64_t v9 = (uint64_t *)(this + 9);
    char v10 = (uint64_t **)(this + 13);
    size_t v11 = (uint64_t **)(this + 12);
    uint64_t v48 = (unint64_t *)(this + 1);
    while (1)
    {
      uint64_t v13 = __s + 1;
      unsigned int v14 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_13;
      }
      unsigned int v15 = v14 + (*v13 << 7);
      unsigned int v14 = v15 - 128;
      if ((*v13 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v15 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v13 = TagFallback;
      unsigned int v14 = v5;
      unsigned int v16 = (v5 >> 3) - 1;
      if (v16 <= 5) {
        goto LABEL_14;
      }
LABEL_54:
      if (v14) {
        BOOL v42 = (v14 & 7) == 4;
      }
      else {
        BOOL v42 = 1;
      }
      if (v42)
      {
        *((_DWORD *)a3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v14 - 1;
        return __s;
      }
      if (*v48)
      {
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v14, (google::protobuf::UnknownFieldSet *)((*v48 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v13, (const char *)a3, v7);
        if (!__s) {
          return 0;
        }
      }
      else
      {
        uint64_t v46 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v48);
        __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v14, (google::protobuf::UnknownFieldSet *)v46, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v47);
        if (!__s) {
          return 0;
        }
      }
LABEL_70:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&__s, *((_DWORD *)a3 + 23))) {
        return __s;
      }
    }
    uint64_t v13 = __s + 2;
LABEL_13:
    __s = v13;
    unsigned int v16 = (v14 >> 3) - 1;
LABEL_14:
    switch(v16)
    {
      case 0u:
        if (v14 == 10)
        {
          __s = google::protobuf::internal::PackedInt32Parser((google::protobuf::internal *)(this + 3), (unsigned __int8 *)v13, a3, v6);
          if (!__s) {
            return 0;
          }
          goto LABEL_70;
        }
        if (v14 == 8)
        {
          int Varint64 = google::protobuf::internal::ReadVarint64((google::protobuf::internal **)&__s, v5);
          google::protobuf::SourceCodeInfo_Location::_internal_add_path((google::protobuf::SourceCodeInfo_Location *)this, Varint64);
          if (!__s) {
            return 0;
          }
          goto LABEL_70;
        }
        goto LABEL_54;
      case 1u:
        if (v14 == 18)
        {
          __s = google::protobuf::internal::PackedInt32Parser((google::protobuf::internal *)(this + 6), (unsigned __int8 *)v13, a3, v6);
          if (!__s) {
            return 0;
          }
          goto LABEL_70;
        }
        if (v14 != 16) {
          goto LABEL_54;
        }
        int v45 = google::protobuf::internal::ReadVarint64((google::protobuf::internal **)&__s, v5);
        google::protobuf::SourceCodeInfo_Location::_internal_add_span((google::protobuf::SourceCodeInfo_Location *)this, v45);
        if (!__s) {
          return 0;
        }
        goto LABEL_70;
      case 2u:
        if (v14 != 26) {
          goto LABEL_54;
        }
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v17 = this[1];
        uint64_t v18 = (google::protobuf::Arena *)((unint64_t)v17 & 0xFFFFFFFFFFFFFFFELL);
        if ((v17 & 1) == 0)
        {
          uint64_t v19 = *v11;
          if (*v11 != &google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_22;
          }
LABEL_21:
          google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, v18, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          uint64_t v19 = *v11;
          uint64_t v13 = __s;
          goto LABEL_22;
        }
        uint64_t v18 = *(google::protobuf::Arena **)v18;
        uint64_t v19 = *v11;
        if (*v11 == &google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_21;
        }
LABEL_22:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v19, v13, (uint64_t)a3);
        if (*((char *)v19 + 23) < 0)
        {
          uint64_t v43 = (uint64_t *)*v19;
          size_t v21 = v19[1];
          if ((v21 & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v19[1], "size_t to int conversion", v20);
          }
          uint64_t v19 = v43;
        }
        else
        {
          size_t v21 = *((unsigned __int8 *)v19 + 23);
        }
        google::protobuf::internal::VerifyUTF8(v19, v21, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.leading_comments");
        if (!__s) {
          return 0;
        }
        goto LABEL_70;
      case 3u:
        if (v14 != 34) {
          goto LABEL_54;
        }
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v22 = this[1];
        uint64_t v23 = (google::protobuf::Arena *)((unint64_t)v22 & 0xFFFFFFFFFFFFFFFELL);
        if ((v22 & 1) == 0)
        {
          uint64_t v24 = *v10;
          if (*v10 != &google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_28;
          }
LABEL_27:
          google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 13, v23, (long long *)&google::protobuf::internal::fixed_address_empty_string);
          uint64_t v24 = *v10;
          uint64_t v13 = __s;
          goto LABEL_28;
        }
        uint64_t v23 = *(google::protobuf::Arena **)v23;
        uint64_t v24 = *v10;
        if (*v10 == &google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_27;
        }
LABEL_28:
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser((std::string *)v24, v13, (uint64_t)a3);
        if (*((char *)v24 + 23) < 0)
        {
          uint64_t v44 = (uint64_t *)*v24;
          size_t v26 = v24[1];
          if ((v26 & 0x8000000000000000) != 0) {
            google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v24[1], "size_t to int conversion", v25);
          }
          uint64_t v24 = v44;
        }
        else
        {
          size_t v26 = *((unsigned __int8 *)v24 + 23);
        }
        google::protobuf::internal::VerifyUTF8(v24, v26, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.trailing_comments");
        if (__s) {
          goto LABEL_70;
        }
        return 0;
      case 5u:
        if (v14 != 50) {
          goto LABEL_54;
        }
        unint64_t v27 = v13 - 1;
        break;
      default:
        goto LABEL_54;
    }
    while (1)
    {
      unint64_t v28 = v27 + 1;
      __s = v27 + 1;
      unint64_t v29 = this[11];
      if (!v29) {
        break;
      }
      uint64_t v30 = *((int *)this + 20);
      int v31 = *v29;
      if ((int)v30 < *v29)
      {
        *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v30 + 1;
        AlignedAndAddCleanup = *(std::string **)&v29[2 * v30 + 2];
        __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v28, (uint64_t)a3);
        int v34 = SHIBYTE(AlignedAndAddCleanup->__r_.__value_.__r.__words[2]);
        if (v34 < 0) {
          goto LABEL_35;
        }
        goto LABEL_47;
      }
      if (v31 == *((_DWORD *)this + 21)) {
        goto LABEL_40;
      }
LABEL_41:
      *unint64_t v29 = v31 + 1;
      BOOL v37 = (atomic_ullong *)*v9;
      if (!*v9) {
        operator new();
      }
      if (v37[14]) {
      AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v37, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
      }
      AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
      AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
      AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
      uint64_t v38 = this[11];
      uint64_t v39 = *((int *)this + 20);
      *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v39 + 1;
      *(void *)&v38[2 * v39 + 2] = AlignedAndAddCleanup;
      uint64_t v40 = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, __s, (uint64_t)a3);
      __s = v40;
      int v34 = SHIBYTE(AlignedAndAddCleanup->__r_.__value_.__r.__words[2]);
      if (v34 < 0)
      {
LABEL_35:
        int v36 = (std::string *)AlignedAndAddCleanup->__r_.__value_.__r.__words[0];
        size_t size = AlignedAndAddCleanup->__r_.__value_.__l.__size_;
        if ((size & 0x8000000000000000) != 0) {
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)AlignedAndAddCleanup->__r_.__value_.__l.__size_, "size_t to int conversion", v33);
        }
        AlignedAndAddCleanup = v36;
        goto LABEL_48;
      }
LABEL_47:
      size_t size = v34;
LABEL_48:
      google::protobuf::internal::VerifyUTF8(AlignedAndAddCleanup, size, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.leading_detached_comments");
      unint64_t v27 = __s;
      if (!__s) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)__s || *__s != 50) {
        goto LABEL_70;
      }
    }
    int v31 = *((_DWORD *)this + 21);
LABEL_40:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 18, v31 + 1);
    unint64_t v29 = this[11];
    int v31 = *v29;
    goto LABEL_41;
  }
  return __s;
}

void google::protobuf::SourceCodeInfo_Location::_internal_add_path(google::protobuf::SourceCodeInfo_Location *this, int a2)
{
  uint64_t v6 = *((unsigned int *)this + 6);
  int v5 = *((_DWORD *)this + 7);
  uint64_t v4 = (unsigned int *)((char *)this + 24);
  if (v6 == v5)
  {
    google::protobuf::RepeatedField<int>::Reserve(v4, v6 + 1);
    int v5 = *((_DWORD *)this + 7);
  }
  if (v5 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 353);
    uint64_t v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  *(_DWORD *)(*((void *)this + 4) + 4 * v6) = a2;
  *((_DWORD *)this + 6) = v6 + 1;
}

void sub_23CE0F26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0F280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo_Location::_internal_add_span(google::protobuf::SourceCodeInfo_Location *this, int a2)
{
  uint64_t v6 = *((unsigned int *)this + 12);
  int v5 = *((_DWORD *)this + 13);
  uint64_t v4 = (unsigned int *)((char *)this + 48);
  if (v6 == v5)
  {
    google::protobuf::RepeatedField<int>::Reserve(v4, v6 + 1);
    int v5 = *((_DWORD *)this + 13);
  }
  if (v5 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 353);
    uint64_t v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  *(_DWORD *)(*((void *)this + 7) + 4 * v6) = a2;
  *((_DWORD *)this + 12) = v6 + 1;
}

void sub_23CE0F334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0F348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo_Location::_InternalSerialize(google::protobuf::SourceCodeInfo_Location *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v5 = (char *)a2;
  unsigned int v7 = *((_DWORD *)this + 10);
  if ((int)v7 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      int v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      if (*(void *)a3 <= (unint64_t)v5)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v55, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 858);
        char v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v55, "CHECK failed: ptr < end_: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v54, v8);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v55[0].__r_.__value_.__l.__data_);
      }
    }
    *int v5 = 10;
    uint64_t v9 = v5 + 1;
    if (v7 >= 0x80)
    {
      do
      {
        *v9++ = v7 | 0x80;
        unsigned int v51 = v7 >> 14;
        v7 >>= 7;
      }
      while (v51);
      int v5 = v9 - 1;
    }
    v5 += 2;
    *uint64_t v9 = v7;
    char v10 = (int *)*((void *)this + 4);
    size_t v11 = &v10[*((int *)this + 6)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v5)
      {
        int v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
        unint64_t v17 = *v10++;
        unint64_t v12 = v17;
        if (v17 > 0x7F)
        {
LABEL_11:
          *int v5 = v12 | 0x80;
          unint64_t v14 = v12 >> 7;
          if (v12 >> 14)
          {
            v5 += 2;
            do
            {
              *(v5 - 1) = v14 | 0x80;
              unint64_t v15 = v14 >> 7;
              ++v5;
              unint64_t v16 = v14 >> 14;
              v14 >>= 7;
            }
            while (v16);
            *(v5 - 1) = v15;
          }
          else
          {
            v5[1] = v14;
            v5 += 2;
          }
          continue;
        }
      }
      else
      {
        unint64_t v13 = *v10++;
        unint64_t v12 = v13;
        if (v13 > 0x7F) {
          goto LABEL_11;
        }
      }
      *v5++ = v12;
    }
    while (v10 < v11);
  }
  unsigned int v18 = *((_DWORD *)this + 16);
  if ((int)v18 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v5)
    {
      int v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      if (*(void *)a3 <= (unint64_t)v5)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v55, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 858);
        uint64_t v19 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v55, "CHECK failed: ptr < end_: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v54, v19);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v55[0].__r_.__value_.__l.__data_);
      }
    }
    *int v5 = 18;
    uint64_t v20 = v5 + 1;
    if (v18 >= 0x80)
    {
      do
      {
        *v20++ = v18 | 0x80;
        unsigned int v52 = v18 >> 14;
        v18 >>= 7;
      }
      while (v52);
      int v5 = v20 - 1;
    }
    v5 += 2;
    unsigned char *v20 = v18;
    size_t v21 = (int *)*((void *)this + 7);
    uint64_t v22 = &v21[*((int *)this + 12)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v5)
      {
        int v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
        unint64_t v28 = *v21++;
        unint64_t v23 = v28;
        if (v28 > 0x7F)
        {
LABEL_28:
          *int v5 = v23 | 0x80;
          unint64_t v25 = v23 >> 7;
          if (v23 >> 14)
          {
            v5 += 2;
            do
            {
              *(v5 - 1) = v25 | 0x80;
              unint64_t v26 = v25 >> 7;
              ++v5;
              unint64_t v27 = v25 >> 14;
              v25 >>= 7;
            }
            while (v27);
            *(v5 - 1) = v26;
          }
          else
          {
            v5[1] = v25;
            v5 += 2;
          }
          continue;
        }
      }
      else
      {
        unint64_t v24 = *v21++;
        unint64_t v23 = v24;
        if (v24 > 0x7F) {
          goto LABEL_28;
        }
      }
      *v5++ = v23;
    }
    while (v21 < v22);
  }
  int v29 = *((_DWORD *)this + 4);
  if ((v29 & 1) == 0)
  {
    if ((v29 & 2) == 0) {
      goto LABEL_37;
    }
LABEL_50:
    int v36 = (unsigned __int8 *)*((void *)this + 13);
    if ((char)v36[23] < 0)
    {
      int v36 = *(unsigned __int8 **)v36;
      BOOL v37 = *(const char **)(*((void *)this + 13) + 8);
    }
    else
    {
      BOOL v37 = (const char *)v36[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v36, v37, 1, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.trailing_comments");
    uint64_t v38 = *((void *)this + 13);
    if (*(char *)(v38 + 23) < 0)
    {
      int64_t v39 = *(void *)(v38 + 8);
      if (v39 > 127) {
        goto LABEL_78;
      }
    }
    else
    {
      int64_t v39 = *(unsigned __int8 *)(v38 + 23);
    }
    if (*(void *)a3 - (void)v5 + 14 >= v39)
    {
      *int v5 = 34;
      v5[1] = v39;
      if (*(char *)(v38 + 23) >= 0) {
        uint64_t v40 = (const void *)v38;
      }
      else {
        uint64_t v40 = *(const void **)v38;
      }
      memcpy(v5 + 2, v40, v39);
      v5 += v39 + 2;
      int v30 = *((_DWORD *)this + 20);
      int64_t v53 = this;
      if (v30 < 1) {
        goto LABEL_79;
      }
      goto LABEL_61;
    }
LABEL_78:
    int v5 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 4, v38, v5);
    int v30 = *((_DWORD *)this + 20);
    int64_t v53 = this;
    if (v30 < 1) {
      goto LABEL_79;
    }
    goto LABEL_61;
  }
  int v31 = (unsigned __int8 *)*((void *)this + 12);
  if ((char)v31[23] < 0)
  {
    int v31 = *(unsigned __int8 **)v31;
    uint64_t v32 = *(const char **)(*((void *)this + 12) + 8);
  }
  else
  {
    uint64_t v32 = (const char *)v31[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v31, v32, 1, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.leading_comments");
  uint64_t v33 = *((void *)this + 12);
  if (*(char *)(v33 + 23) < 0)
  {
    int64_t v34 = *(void *)(v33 + 8);
    if (v34 > 127) {
      goto LABEL_76;
    }
  }
  else
  {
    int64_t v34 = *(unsigned __int8 *)(v33 + 23);
  }
  if (*(void *)a3 - (void)v5 + 14 < v34)
  {
LABEL_76:
    int v5 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 3, v33, v5);
    if ((v29 & 2) != 0) {
      goto LABEL_50;
    }
    goto LABEL_37;
  }
  *int v5 = 26;
  v5[1] = v34;
  if (*(char *)(v33 + 23) >= 0) {
    unint64_t v35 = (const void *)v33;
  }
  else {
    unint64_t v35 = *(const void **)v33;
  }
  memcpy(v5 + 2, v35, v34);
  v5 += v34 + 2;
  if ((v29 & 2) != 0) {
    goto LABEL_50;
  }
LABEL_37:
  int v30 = *((_DWORD *)this + 20);
  int64_t v53 = this;
  if (v30 >= 1)
  {
LABEL_61:
    int v41 = 0;
    BOOL v42 = (char *)this + 72;
    while (1)
    {
      uint64_t v43 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v42, v41);
      uint64_t v44 = v43;
      unsigned int v45 = *(_DWORD *)(v43 + 8);
      if (*(char *)(v43 + 23) >= 0)
      {
        unint64_t v46 = *(unsigned __int8 *)(v43 + 23);
      }
      else
      {
        uint64_t v43 = *(void *)v43;
        unint64_t v46 = v45;
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v43, (const char *)v46, 1, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.leading_detached_comments");
      if ((*(char *)(v44 + 23) & 0x80000000) == 0) {
        break;
      }
      int64_t v47 = *(void *)(v44 + 8);
      if (v47 > 127)
      {
LABEL_74:
        int v5 = google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 6, v44, v5);
        if (v30 == ++v41) {
          goto LABEL_79;
        }
      }
      else
      {
LABEL_68:
        if (*(void *)a3 - (void)v5 + 14 < v47) {
          goto LABEL_74;
        }
        *int v5 = 50;
        v5[1] = v47;
        if (*(char *)(v44 + 23) >= 0) {
          uint64_t v48 = (const void *)v44;
        }
        else {
          uint64_t v48 = *(const void **)v44;
        }
        memcpy(v5 + 2, v48, v47);
        v5 += v47 + 2;
        if (v30 == ++v41) {
          goto LABEL_79;
        }
      }
    }
    int64_t v47 = *(unsigned __int8 *)(v44 + 23);
    goto LABEL_68;
  }
LABEL_79:
  uint64_t v49 = *((void *)v53 + 1);
  if (v49) {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v49 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
  }
  return (const google::protobuf::UnknownFieldSet *)v5;
}

void sub_23CE0F8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0F8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0F90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0F920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::SourceCodeInfo_Location::ByteSizeLong(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 6);
  if (!v2)
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    uint64_t v3 = 0;
    uint64_t v4 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 12);
    if (!v4) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  if ((v2 & 0x80000000) != 0)
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v2;
    uint64_t v3 = v2 + 11;
    uint64_t v4 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 12);
    if (!v4) {
      goto LABEL_9;
    }
LABEL_6:
    if ((v4 & 0x80000000) != 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    *((_DWORD *)this + 16) = v4;
    uint64_t v6 = *((unsigned int *)this + 20);
    unsigned int v7 = (const google::protobuf::UnknownFieldSet *)(v5 + v3 + v4 + v6);
    if ((int)v6 < 1) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v2;
  uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1 + v2;
  uint64_t v4 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 12);
  if (v4) {
    goto LABEL_6;
  }
LABEL_9:
  *((_DWORD *)this + 16) = 0;
  uint64_t v6 = *((unsigned int *)this + 20);
  unsigned int v7 = (const google::protobuf::UnknownFieldSet *)(v3 + v4 + v6);
  if ((int)v6 < 1) {
    goto LABEL_17;
  }
LABEL_13:
  int v8 = 0;
  do
  {
    uint64_t v9 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, v8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    if ((v10 & 0x80u) != 0) {
      uint64_t v10 = *(void *)(v9 + 8);
    }
    unsigned int v7 = (const google::protobuf::UnknownFieldSet *)((char *)v7 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6));
    ++v8;
  }
  while (v6 != v8);
LABEL_17:
  int v11 = *((_DWORD *)this + 4);
  if ((v11 & 3) != 0)
  {
    if (v11)
    {
      uint64_t v12 = *((void *)this + 12);
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      unsigned int v7 = (const google::protobuf::UnknownFieldSet *)((char *)v7 + v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    if ((v11 & 2) != 0)
    {
      uint64_t v15 = *((void *)this + 13);
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v17 = *(void *)(v15 + 8);
      if ((v16 & 0x80u) == 0) {
        uint64_t v17 = v16;
      }
      unsigned int v7 = (const google::protobuf::UnknownFieldSet *)((char *)v7 + v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::SourceCodeInfo_Location *)((char *)this + 8), v7, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v7;
    return (char *)v7;
  }
}

void google::protobuf::SourceCodeInfo_Location::MergeFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 10385);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::SourceCodeInfo_Location::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE0FC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0FC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo_Location::MergeFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::SourceCodeInfo_Location *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 10400);
    uint64_t v5 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v20, v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *((void *)a2 + 1);
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v6 = (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v7 = *((void *)this + 1);
  if (v7) {
    int v8 = (char *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    int v8 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
  }
  google::protobuf::UnknownFieldSet::InternalMergeFrom((uint64_t)v8, v6);
LABEL_8:
  google::protobuf::RepeatedField<int>::MergeFrom((unsigned int *)this + 6, (int *)a2 + 6);
  google::protobuf::RepeatedField<int>::MergeFrom((unsigned int *)this + 12, (int *)a2 + 12);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, (uint64_t)a2 + 72);
  int v9 = *((_DWORD *)a2 + 4);
  if ((v9 & 3) == 0) {
    return;
  }
  if ((v9 & 1) == 0)
  {
LABEL_13:
    if ((v9 & 2) == 0) {
      return;
    }
LABEL_14:
    uint64_t v15 = (std::string *)*((void *)a2 + 13);
    *((_DWORD *)this + 4) |= 2u;
    uint64_t v16 = (std::string **)((char *)this + 104);
    uint64_t v17 = *((void *)this + 1);
    unsigned int v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
    if (v17)
    {
      unsigned int v18 = *(google::protobuf::Arena **)v18;
      uint64_t v19 = *v16;
      if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v19 = *v16;
      if (*v16 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
LABEL_16:
        std::string::operator=(v19, v15);
        return;
      }
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v16, v18, (long long *)v15);
    return;
  }
  uint64_t v10 = (std::string *)*((void *)a2 + 12);
  *((_DWORD *)this + 4) |= 1u;
  int v11 = (std::string **)((char *)this + 96);
  uint64_t v12 = *((void *)this + 1);
  uint64_t v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
  if (v12)
  {
    uint64_t v13 = *(google::protobuf::Arena **)v13;
    uint64_t v14 = *v11;
    if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v14 = *v11;
    if (*v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
LABEL_12:
      std::string::operator=(v14, v10);
      goto LABEL_13;
    }
  }
  google::protobuf::internal::ArenaStringPtr::CreateInstance(v11, v13, (long long *)v10);
  if ((v9 & 2) != 0) {
    goto LABEL_14;
  }
}

void sub_23CE0FE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE0FE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo_Location::CopyFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::Message *a2)
{
  if (a2 == this) {
    return;
  }
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  int v5 = *((_DWORD *)this + 4);
  if ((v5 & 3) == 0) {
    goto LABEL_13;
  }
  if ((v5 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = *((void *)this + 12);
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
LABEL_6:
    if ((v5 & 2) != 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  **(unsigned char **)uint64_t v6 = 0;
  *(void *)(v6 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if ((v5 & 2) != 0)
  {
LABEL_7:
    uint64_t v7 = *((void *)this + 13);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_13:
  *((_DWORD *)this + 4) = 0;
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) != 0 && *(void *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v8 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
  google::protobuf::SourceCodeInfo_Location::MergeFrom(this, a2);
}

void google::protobuf::SourceCodeInfo_Location::CopyFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::SourceCodeInfo_Location *a2)
{
  if (a2 == this) {
    return;
  }
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  int v5 = *((_DWORD *)this + 4);
  if ((v5 & 3) == 0) {
    goto LABEL_13;
  }
  if ((v5 & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = *((void *)this + 12);
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
LABEL_6:
    if ((v5 & 2) != 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  **(unsigned char **)uint64_t v6 = 0;
  *(void *)(v6 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if ((v5 & 2) != 0)
  {
LABEL_7:
    uint64_t v7 = *((void *)this + 13);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_13:
  *((_DWORD *)this + 4) = 0;
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) != 0 && *(void *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v8 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
  google::protobuf::SourceCodeInfo_Location::MergeFrom(this, a2);
}

uint64_t google::protobuf::SourceCodeInfo_Location::IsInitialized(google::protobuf::SourceCodeInfo_Location *this)
{
  return 1;
}

uint64_t google::protobuf::SourceCodeInfo_Location::GetMetadata(google::protobuf::SourceCodeInfo_Location *this)
{
  return off_26AED0A18[46];
}

google::protobuf::SourceCodeInfo *google::protobuf::SourceCodeInfo::SourceCodeInfo(google::protobuf::SourceCodeInfo *this, google::protobuf::Arena *a2)
{
  *(void *)this = &unk_26F0C5C18;
  *((void *)this + 1) = a2;
  *((void *)this + 2) = a2;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return this;
}

void sub_23CE100A4(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::~RepeatedPtrField(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo::~SourceCodeInfo(google::protobuf::SourceCodeInfo *this)
{
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (!*v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 10486);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    uint64_t v2 = *((void *)this + 1);
  }
LABEL_4:
  if (v2)
  {
    int v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) != 0 && !*v5)
    {
      uint64_t v6 = (void *)v5[1];
      if (v6 != (void *)v5[2])
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v5 + 1));
        uint64_t v6 = (void *)v5[1];
      }
      if (v6)
      {
        std::string v5[2] = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v5, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::~RepeatedPtrField((uint64_t)this + 16);
}

{
  uint64_t vars8;

  google::protobuf::SourceCodeInfo::~SourceCodeInfo(this);

  JUMPOUT(0x23ECF2BC0);
}

void sub_23CE101AC(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

void sub_23CE101C0(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::SourceCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

uint64_t *google::protobuf::SourceCodeInfo::default_instance(google::protobuf::SourceCodeInfo *this)
{
  if (atomic_load_explicit(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_SourceCodeInfo_default_instance_;
}

google::protobuf::internal *google::protobuf::SourceCodeInfo::_InternalParse(google::protobuf::SourceCodeInfo *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unint64_t v35 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v35, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    uint64_t v6 = (void *)((char *)this + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v35 + 1);
      unsigned int v8 = *(unsigned __int8 *)v35;
      if ((*(char *)v35 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0)
      {
        char v7 = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_6:
        unint64_t v35 = v7;
        if (v8 == 10) {
          break;
        }
        goto LABEL_7;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, (const char *)(v9 - 128));
      unint64_t v35 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v7 = TagFallback;
      unsigned int v8 = v12;
      if (v12 == 10) {
        break;
      }
LABEL_7:
      if (v8) {
        BOOL v10 = (v8 & 7) == 4;
      }
      else {
        BOOL v10 = 1;
      }
      if (v10)
      {
        *((_DWORD *)a3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v8 - 1;
        return v35;
      }
      if (*v6)
      {
        unint64_t v35 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v8, (google::protobuf::UnknownFieldSet *)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8), v7, (const char *)a3, v5);
        if (!v35) {
          return 0;
        }
        goto LABEL_33;
      }
      uint64_t v32 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>((unint64_t *)this + 1);
      unint64_t v35 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v8, (google::protobuf::UnknownFieldSet *)v32, v35, (const char *)a3, v33);
      if (!v35) {
        return 0;
      }
LABEL_33:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v35, *((_DWORD *)a3 + 23))) {
        return v35;
      }
    }
    uint64_t v13 = (char *)v7 - 1;
    while (1)
    {
      uint64_t v14 = (google::protobuf::internal *)(v13 + 1);
      unint64_t v35 = v14;
      uint64_t v15 = (int *)*((void *)this + 4);
      if (!v15) {
        break;
      }
      uint64_t v16 = *((int *)this + 6);
      int v17 = *v15;
      if ((int)v16 < *v15)
      {
        *((_DWORD *)this + 6) = v16 + 1;
        unsigned int v18 = *(int ***)&v15[2 * v16 + 2];
        uint64_t v19 = (const char *)*(unsigned __int8 *)v14;
        if ((*(char *)v14 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        goto LABEL_20;
      }
      if (v17 == *((_DWORD *)this + 7)) {
        goto LABEL_25;
      }
LABEL_26:
      *uint64_t v15 = v17 + 1;
      unsigned int v18 = (int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(*((google::protobuf::Arena **)this + 2));
      uint64_t v24 = *((void *)this + 4);
      uint64_t v25 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v25 + 1;
      *(void *)(v24 + 8 * v25 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = v18;
      uint64_t v14 = v35;
      uint64_t v19 = (const char *)*(unsigned __int8 *)v35;
      if ((*(char *)v35 & 0x80000000) == 0)
      {
LABEL_27:
        uint64_t v22 = (char *)v14 + 1;
        goto LABEL_28;
      }
LABEL_20:
      uint64_t SizeFallback = google::protobuf::internal::ReadSizeFallback(v14, v19);
      if (!SizeFallback) {
        return 0;
      }
      uint64_t v22 = (std::string::value_type *)SizeFallback;
      LODWORD(v19) = v21;
      if (v21 >= 0x7FFFFFF0)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v37, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/parse_context.h", 128);
        unint64_t v23 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v37, "CHECK failed: limit >= 0 && limit <= INT_MAX - kSlopBytes: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v36, v23);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v37[0].__r_.__value_.__l.__data_);
      }
LABEL_28:
      uint64_t v26 = *((void *)a3 + 1);
      int v27 = v19 + v22 - v26;
      *(void *)a3 = v26 + (v27 & (v27 >> 31));
      int v28 = *((_DWORD *)a3 + 7);
      *((_DWORD *)a3 + 7) = v27;
      LODWORD(v26) = *((_DWORD *)a3 + 22);
      BOOL v29 = __OFSUB__(v26, 1);
      LODWORD(v26) = v26 - 1;
      *((_DWORD *)a3 + 22) = v26;
      if ((int)v26 < 0 != v29) {
        return 0;
      }
      uint64_t v13 = google::protobuf::SourceCodeInfo_Location::_InternalParse(v18, v22, a3);
      if (!v13) {
        return 0;
      }
      ++*((_DWORD *)a3 + 22);
      if (*((_DWORD *)a3 + 20)) {
        return 0;
      }
      int v30 = *((_DWORD *)a3 + 7) + v28 - v27;
      *((_DWORD *)a3 + 7) = v30;
      unint64_t v31 = *((void *)a3 + 1) + (v30 & (v30 >> 31));
      *(void *)a3 = v31;
      unint64_t v35 = (google::protobuf::internal *)v13;
      if (v31 <= (unint64_t)v13 || *v13 != 10) {
        goto LABEL_33;
      }
    }
    int v17 = *((_DWORD *)this + 7);
LABEL_25:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 4, v17 + 1);
    uint64_t v15 = (int *)*((void *)this + 4);
    int v17 = *v15;
    goto LABEL_26;
  }
  return v35;
}

void sub_23CE1054C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE10560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo::_InternalSerialize(google::protobuf::SourceCodeInfo *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 6);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      BOOL v10 = (google::protobuf::SourceCodeInfo_Location *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)this + 16, i);
      *(unsigned char *)a2 = 10;
      unsigned int v12 = *((_DWORD *)v10 + 5);
      if (v12 <= 0x7F)
      {
        *((unsigned char *)a2 + 1) = v12;
        unsigned int v9 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      else
      {
        *((unsigned char *)a2 + 1) = v12 | 0x80;
        unsigned int v13 = v12 >> 7;
        if (v12 >> 14)
        {
          unsigned int v9 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v9 - 1) = v13 | 0x80;
            unsigned int v14 = v13 >> 7;
            unsigned int v9 = (google::protobuf::UnknownFieldSet *)((char *)v9 + 1);
            unsigned int v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *((unsigned char *)v9 - 1) = v14;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v13;
          unsigned int v9 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      a2 = google::protobuf::SourceCodeInfo_Location::_InternalSerialize(v10, v9, a3, v11);
    }
  }
  uint64_t v16 = *((void *)this + 1);
  if ((v16 & 1) == 0) {
    return a2;
  }

  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::SourceCodeInfo::ByteSizeLong(google::protobuf::SourceCodeInfo *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (google::protobuf::SourceCodeInfo_Location **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      uint64_t v6 = *v4++;
      int v7 = google::protobuf::SourceCodeInfo_Location::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
    unsigned int v8 = (google::protobuf::SourceCodeInfo *)((char *)this + 8);
    if ((*((unsigned char *)this + 8) & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v2 = 0;
    unsigned int v8 = (google::protobuf::SourceCodeInfo *)((char *)this + 8);
    if ((*((unsigned char *)this + 8) & 1) == 0)
    {
LABEL_8:
      *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v2;
      return (char *)v2;
    }
  }

  return google::protobuf::internal::ComputeUnknownFieldsSize(v8, v2, (_DWORD *)this + 10);
}

void google::protobuf::SourceCodeInfo::MergeFrom(google::protobuf::SourceCodeInfo *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 10604);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    google::protobuf::SourceCodeInfo::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_23CE10854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE10868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo::CopyFrom(google::protobuf::SourceCodeInfo *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)this + 16);
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::SourceCodeInfo::MergeFrom(this, a2);
  }
}

void google::protobuf::SourceCodeInfo::CopyFrom(google::protobuf::SourceCodeInfo *this, const google::protobuf::SourceCodeInfo *a2)
{
  if (a2 != this)
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)this + 16);
    uint64_t v5 = *((void *)this + 1);
    if ((v5 & 1) != 0 && *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL)
    }
                                                                                           + 8));
    google::protobuf::SourceCodeInfo::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::SourceCodeInfo::IsInitialized(google::protobuf::SourceCodeInfo *this)
{
  return 1;
}

uint64_t google::protobuf::SourceCodeInfo::GetMetadata(google::protobuf::SourceCodeInfo *this)
{
  return off_26AED0A18[48];
}

void google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  google::protobuf::GeneratedCodeInfo_Annotation::SharedDtor(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v3 && v4 == 0)
    {
      uint64_t v6 = *(void **)(v3 + 8);
      if (v6 != *(void **)(v3 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v3 + 8));
        uint64_t v6 = *(void **)(v3 + 8);
      }
      if (v6)
      {
        *(void *)(v3 + 16) = v6;
        operator delete(v6);
      }
      MEMORY[0x23ECF2BC0](v3, 0x20C40DC1BFBCFLL);
    }
  }
  google::protobuf::RepeatedField<BOOL>::~RepeatedField((uint64_t)this + 24);
}

{
  uint64_t vars8;

  google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(this);

  JUMPOUT(0x23ECF2BC0);
}

void google::protobuf::GeneratedCodeInfo_Annotation::SharedDtor(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  uint64_t v2 = *((void *)this + 1);
  unint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v2 & 1) == 0)
  {
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*v3)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/descriptor.pb.cc", 10712);
    uint64_t v4 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArena() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v7, v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  uint64_t v5 = *((void *)this + 6);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    MEMORY[0x23ECF2BC0](v5, 0x1012C40EC159624);
  }
}

void sub_23CE10AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE10B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void google::protobuf::GeneratedCodeInfo_Annotation::Clear(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  *((_DWORD *)this + 6) = 0;
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 1) == 0)
  {
LABEL_4:
    if ((v1 & 6) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v2 = *((void *)this + 6);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_4;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::~RepeatedPtrField((uint64_t)&xmmword_26AEE26A0 + 8) = 0;
  if ((v1 & 6) != 0) {
LABEL_5:
  }
    *((void *)this + 7) = 0;
LABEL_6:
  *((_DWORD *)this + 4) = 0;
  uint64_t v3 = *((void *)this + 1);
  if ((v3 & 1) != 0 && *(void *)((v3 & 0xFFFFFFFFFFFFFFFELL) + 8) != *(void *)((v3 & 0xFFFFFFFFFFFFFFFELL) + 16)) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)((v3 & 0xFFFFFFFFFFFFFFFELL)
  }
                                                                                         + 8));
}

std::string::value_type *google::protobuf::GeneratedCodeInfo_Annotation::_InternalParse(google::protobuf::GeneratedCodeInfo_Annotation *this, std::string::value_type *a2, google::protobuf::internal::ParseContext *a3)
{
  __s = a2;
  uint64_t v8 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&__s, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    BOOL v10 = (unint64_t *)((char *)this + 8);
    int v11 = (std::string **)((char *)this + 48);
    unsigned int v12 = (google::protobuf::GeneratedCodeInfo_Annotation *)((char *)this + 24);
    unsigned int v13 = (long long *)&google::protobuf::internal::fixed_address_empty_string;
    unsigned int v14 = (google::protobuf::internal *)"google.protobuf.GeneratedCodeInfo.Annotation.source_file";
    unsigned int v45 = this;
    while (1)
    {
      unsigned int v15 = __s + 1;
      unsigned int v16 = *__s;
      if ((*__s & 0x80000000) == 0) {
        goto LABEL_9;
      }
      unsigned int v17 = v16 + (*v15 << 7);
      unsigned int v16 = v17 - 128;
      if ((*v15 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (std::string::value_type *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)__s, (const char *)(v17 - 128));
      __s = TagFallback;
      if (!TagFallback) {
        goto LABEL_55;
      }
      unsigned int v15 = TagFallback;
      unsigned int v16 = v5;
      unsigned int v18 = (v5 >> 3) - 1;
      if (v18 > 3)
      {
LABEL_32:
        if (v16) {
          BOOL v31 = (v16 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (v31)
        {
          *((_DWORD *)a3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v16 - 1;
          goto LABEL_2;
        }
        if (*v10)
        {
          __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v16, (google::protobuf::UnknownFieldSet *)((*v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (google::protobuf::UnknownFieldSet *)v15, (const char *)a3, v7);
          if (!__s) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v32 = google::protobuf::internal::InternalMetadata::mutable_unknown_fields_slow<google::protobuf::UnknownFieldSet>(v10);
          __s = (std::string::value_type *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v16, (google::protobuf::UnknownFieldSet *)v32, (google::protobuf::UnknownFieldSet *)__s, (const char *)a3, v33);
          if (!__s) {
            goto LABEL_55;
          }
        }
        goto LABEL_43;
      }
LABEL_10:
      switch(v18)
      {
        case 0u:
          if (v16 == 10)
          {
            __s = google::protobuf::internal::PackedInt32Parser(v12, (unsigned __int8 *)v15, a3, v6);
            if (!__s) {
              goto LABEL_55;
            }
            break;
          }
          if (v16 != 8) {
            goto LABEL_32;
          }
          int Varint64 = google::protobuf::internal::ReadVarint64((google::protobuf::internal **)&__s, v5);
          google::protobuf::GeneratedCodeInfo_Annotation::_internal_add_path(this, Varint64);
          if (!__s) {
            goto LABEL_55;
          }
          break;
        case 1u:
          if (v16 != 18) {
            goto LABEL_32;
          }
          *((_DWORD *)this + 4) |= 1u;
          uint64_t v19 = *((void *)this + 1);
          char v20 = (google::protobuf::Arena *)(v19 & 0xFFFFFFFFFFFFFFFELL);
          if ((v19 & 1) == 0)
          {
            unsigned int v21 = *v11;
            if (*v11 != (std::string *)v13) {
              goto LABEL_18;
            }
LABEL_17:
            google::protobuf::internal::ArenaStringPtr::CreateInstance(v11, v20, v13);
            unsigned int v21 = *v11;
            unsigned int v15 = __s;
            goto LABEL_18;
          }
          char v20 = *(google::protobuf::Arena **)v20;
          unsigned int v21 = *v11;
          if (*v11 == (std::string *)v13) {
            goto LABEL_17;
          }
LABEL_18:
          __s = (std::string::value_type *)google::protobuf::internal::InlineGreedyStringParser(v21, v15, (uint64_t)a3);
          if (SHIBYTE(v21->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v34 = v8;
            unint64_t v35 = v12;
            char v36 = v10;
            BOOL v37 = v13;
            uint64_t v38 = v14;
            int64_t v39 = (std::string *)v21->__r_.__value_.__r.__words[0];
            size_t size = v21->__r_.__value_.__l.__size_;
            if ((size & 0x8000000000000000) != 0) {
              google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v21->__r_.__value_.__l.__size_, "size_t to int conversion", v22);
            }
            unsigned int v21 = v39;
            unsigned int v14 = v38;
            unsigned int v13 = v37;
            BOOL v10 = v36;
            unsigned int v12 = v35;
            uint64_t v8 = v34;
            this = v45;
          }
          else
          {
            size_t size = HIBYTE(v21->__r_.__value_.__r.__words[2]);
          }
          google::protobuf::internal::VerifyUTF8(v21, size, v14);
          if (__s) {
            break;
          }
LABEL_55:
          __s = 0;
          goto LABEL_2;
        case 2u:
          if (v16 != 24) {
            goto LABEL_32;
          }
          uint64_t v8 = v8 | 2;
          uint64_t v25 = v15 + 1;
          LODWORD(v24) = *v15;
          if ((v24 & 0x80) == 0) {
            goto LABEL_24;
          }
          int v26 = *v25;
          uint64_t v24 = (const char *)(v24 + (v26 << 7) - 128);
          if (v26 < 0)
          {
            uint64_t v40 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, v24);
            __s = v40;
            *((_DWORD *)this + 14) = v41;
            if (!v40) {
              goto LABEL_55;
            }
          }
          else
          {
            uint64_t v25 = v15 + 2;
LABEL_24:
            __s = v25;
            *((_DWORD *)this + 14) = v24;
          }
          break;
        case 3u:
          if (v16 != 32) {
            goto LABEL_32;
          }
          uint64_t v8 = v8 | 4;
          int v28 = v15 + 1;
          LODWORD(v27) = *v15;
          if ((v27 & 0x80) == 0) {
            goto LABEL_29;
          }
          int v29 = *v28;
          int v27 = (const char *)(v27 + (v29 << 7) - 128);
          if (v29 < 0)
          {
            BOOL v42 = (std::string::value_type *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v15, v27);
            __s = v42;
            *((_DWORD *)this + 15) = v43;
            if (!v42) {
              goto LABEL_55;
            }
          }
          else
          {
            int v28 = v15 + 2;
LABEL_29:
            __s = v28;
            *((_DWORD *)this + 15) = v27;
          }
          break;
        default:
          goto LABEL_32;
      }
LABEL_43:
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&__s, *((_DWORD *)a3 + 23))) {
        goto LABEL_2;
      }
    }
    unsigned int v15 = __s + 2;
LABEL_9:
    __s = v15;
    unsigned int v18 = (v16 >> 3) - 1;
    goto LABEL_10;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v8;
  return __s;
}

void google::protobuf::GeneratedCodeInfo_Annotation::_internal_add_path(google::protobuf::GeneratedCodeInfo_Annotation *this, int a2)
{
  uint64_t v6 = *((unsigned int *)this + 6);
  int v5 = *((_DWORD *)this + 7);
  uint64_t v4 = (unsigned int *)((char *)this + 24);
  if (v6 == v5)
  {
    google::protobuf::RepeatedField<int>::Reserve(v4, v6 + 1);
    int v5 = *((_DWORD *)this + 7);
  }
  if (v5 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/repeated_field.h", 353);
    char v7 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((uint64_t)&v8, v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  *(_DWORD *)(*((void *)this + 4) + 4 * v6) = a2;
  *((_DWORD *)this + 6) = v6 + 1;
}

void sub_23CE11000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_23CE11014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo_Annotation::_InternalSerialize(google::protobuf::GeneratedCodeInfo_Annotation *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v5 = (char *)a2;
  unsigned int v7 = *((_DWORD *)this + 10);
  if ((int)v7 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      int v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      if (*(void *)a3 <= (unint64_t)v5)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v36, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/ANECompiler/ext/or-tools/dependencies/sources/protobuf-v3.12.2/src/google/protobuf/io/coded_stream.h", 858);
        char v8 = (unsigned int *)google::protobuf::internal::LogMessage::operator<<(v36, "CHECK failed: ptr < end_: ");
        google::protobuf::internal::LogFinisher::operator=((uint64_t)&v35, v8);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v36[0].__r_.__value_.__l.__data_);
      }
    }
    *int v5 = 10;
    unsigned int v9 = v5 + 1;
    if (v7 >= 0x80)
    {
      do
      {
        *v9++ = v7 | 0x80;
        unsigned int v27 = v7 >> 14;
        v7 >>= 7;
      }
      while (v27);
      int v5 = v9 - 1;
    }
    v5 += 2;
    *unsigned int v9 = v7;
    BOOL v10 = (int *)*((void *)this + 4);
    int v11 = &v10[*((int *)this + 6)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v5)
      {
        int v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
        unint64_t v17 = *v10++;
        unint64_t v12 = v17;
        if (v17 > 0x7F)
        {
LABEL_11:
          *int v5 = v12 | 0x80;
          unint64_t v14 = v12 >> 7;
          if (v12 >> 14)
          {
            v5 += 2;
            do
            {
              *(v5 - 1) = v14 | 0x80;
              unint64_t v15 = v14 >> 7;
              ++v5;
              unint64_t v16 = v14 >> 14;
              v14 >>= 7;
            }
            while (v16);
            *(v5 - 1) = v15;
          }
          else
          {
            v5[1] = v14;
            v5 += 2;
          }
          continue;
        }
      }
      else
      {
        unint64_t v13 = *v10++;
        unint64_t v12 = v13;
        if (v13 > 0x7F) {
          goto LABEL_11;
        }
      }
      *v5++ = v12;
    }
    while (v10 < v11);
  }
  int v18 = *((_DWORD *)this + 4);
  if ((v18 & 1) == 0)
  {
    if ((v18 & 2) == 0) {
      goto LABEL_20;
    }
LABEL_34:
    if (*(void *)a3 <= (unint64_t)v5)
    {
      int v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unint64_t v26 = *((int *)this + 14);
      *int v5 = 24;
      if (v26 <= 0x7F)
      {
LABEL_36:
        v5[1] = v26;
        v5 += 2;
        if ((v18 & 4) != 0) {
          goto LABEL_51;
        }
        goto LABEL_21;
      }
    }
    else
    {
      unint64_t v26 = *((int *)this + 14);
      *int v5 = 24;
      if (v26 <= 0x7F) {
        goto LABEL_36;
      }
    }
    v5[1] = v26 | 0x80;
    unint64_t v28 = v26 >> 7;
    if (v26 >> 14)
    {
      v5 += 3;
      do
      {
        *(v5 - 1) = v28 | 0x80;
        unint64_t v29 = v28 >> 7;
        ++v5;
        unint64_t v30 = v28 >> 14;
        v28 >>= 7;
      }
      while (v30);
      *(v5 - 1) = v29;
      if ((v18 & 4) != 0) {
        goto LABEL_51;
      }
    }
    else
    {
      std::string v5[2] = v28;
      v5 += 3;
      if ((v18 & 4) != 0) {
        goto LABEL_51;
      }
    }
LABEL_21:
    uint64_t v19 = *((void *)this + 1);
    if ((v19 & 1) == 0) {
      return (const google::protobuf::UnknownFieldSet *)v5;
    }
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
  }
  unsigned int v21 = (unsigned __int8 *)*((void *)this + 6);
  if ((char)v21[23] < 0)
  {
    unsigned int v21 = *(unsigned __int8 **)v21;
    uint64_t v22 = *(const char **)(*((void *)this + 6) + 8);
  }
  else
  {
    uint64_t v22 = (const char *)v21[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v21, v22, 1, (google::protobuf::internal *)"google.protobuf.GeneratedCodeInfo.Annotation.source_file");
  uint64_t v23 = *((void *)this + 6);
  if (*(char *)(v23 + 23) < 0)
  {
    int64_t v24 = *(void *)(v23 + 8);
    if (v24 > 127) {
      goto LABEL_38;
    }
  }
  else
  {
    int64_t v24 = *(unsigned __int8 *)(v23 + 23);
  }
  if (*(void *)a3 - (void)v5 + 14 < v24)
  {
LABEL_38:
    int v5 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a3, 2, v23, v5);
    if ((v18 & 2) != 0) {
      goto LABEL_34;
    }
    goto LABEL_20;
  }
  *int v5 = 18;
  v5[1] = v24;
  if (*(char *)(v23 + 23) >= 0) {
    uint64_t v25 = (const void *)v23;
  }
  else {
    uint64_t v25 = *(const void **)v23;
  }
  memcpy(v5 + 2, v25, v24);
  v5 += v24 + 2;
  if ((v18 & 2) != 0) {
    goto LABEL_34;
  }
LABEL_20:
  if ((v18 & 4) == 0) {
    goto LABEL_21;
  }
LABEL_51:
  if (*(void *)a3 <= (unint64_t)v5)
  {
    int v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unint64_t v31 = *((int *)this + 15);
    *int v5 = 32;
    if (v31 <= 0x7F)
    {
LABEL_53:
      v5[1] = v31;
      v5 += 2;
      uint64_t v19 = *((void *)this + 1);
      if ((v19 & 1) == 0) {
        return (const google::protobuf::UnknownFieldSet *)v5;
      }
      return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
    }
  }
  else
  {
    unint64_t v31 = *((int *)this + 15);
    *int v5 = 32;
    if (v31 <= 0x7F) {
      goto LABEL_53;
    }
  }
  v5[1] = v31 | 0x80;
  unint64_t v32 = v31 >> 7;
  if (!(v31 >> 14))
  {
    std::string v5[2] = v32;
    v5 += 3;
    uint64_t v19 = *((void *)this + 1);
    if ((v19 & 1) == 0) {
      return (const google::protobuf::UnknownFieldSet *)v5;
    }
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
  }
  v5 += 3;
  do
  {
    *(v5 - 1) = v32 | 0x80;
    unint64_t v33 = v32 >> 7;
    ++v5;
    unint64_t v34 = v32 >> 14;
    v32 >>= 7;
  }
  while (v34);
  *(v5 - 1) = v33;
  uint64_t v19 = *((void *)this + 1);
  if (v19) {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
  }
  return (const google::protobuf::UnknownFieldSet *)v5;
}