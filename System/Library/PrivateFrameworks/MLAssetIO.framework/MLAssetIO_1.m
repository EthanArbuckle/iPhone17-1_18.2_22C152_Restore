uint64_t CoreML::Specification::Coefficients::ByteSizeLong(CoreML::Specification::Coefficients *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *((unsigned int *)this + 4);
  v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      v3 = 11;
    }
    else {
      v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    v3 = 0;
  }
  v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::Coefficients::IsInitialized(CoreML::Specification::Coefficients *this)
{
  return 1;
}

uint64_t CoreML::Specification::Coefficients::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::Coefficients::New(CoreML::Specification::Coefficients *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BDC1C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Coefficients>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Coefficients>;
    v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Coefficients>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Coefficients::New(CoreML::Specification::Coefficients *this)
{
}

void *CoreML::Specification::Coefficients::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Coefficients");
}

void CoreML::Specification::Coefficients::~Coefficients(CoreML::Specification::Coefficients *this)
{
  CoreML::Specification::Coefficients::~Coefficients(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F361AA20;
  v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DenseSupportVectors::GetCachedSize(CoreML::Specification::DenseSupportVectors *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::DenseSupportVectors::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::DenseSupportVectors::IsInitialized(CoreML::Specification::DenseSupportVectors *this)
{
  return 1;
}

uint64_t CoreML::Specification::DenseSupportVectors::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    int v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(_DWORD *)(v3 + 16) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

void CoreML::Specification::DenseSupportVectors::New(CoreML::Specification::DenseSupportVectors *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BDE68(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DenseSupportVectors>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseSupportVectors>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseSupportVectors>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DenseSupportVectors::New(CoreML::Specification::DenseSupportVectors *this)
{
}

void *CoreML::Specification::DenseSupportVectors::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DenseSupportVectors");
}

void CoreML::Specification::DenseSupportVectors::~DenseSupportVectors(CoreML::Specification::DenseSupportVectors *this)
{
  CoreML::Specification::DenseSupportVectors::~DenseSupportVectors(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361F328;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DenseVector::GetCachedSize(CoreML::Specification::DenseVector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::DenseVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      v12 = (char *)(v11 + 8);
    }
    else {
      v12 = 0;
    }
    int v13 = 8 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::DenseVector::ByteSizeLong(CoreML::Specification::DenseVector *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::DenseVector::IsInitialized(CoreML::Specification::DenseVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::DenseVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::DenseVector::New(CoreML::Specification::DenseVector *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BE1A8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DenseVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DenseVector::New(CoreML::Specification::DenseVector *this)
{
}

void *CoreML::Specification::DenseVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DenseVector");
}

void CoreML::Specification::DenseVector::~DenseVector(CoreML::Specification::DenseVector *this)
{
  CoreML::Specification::DenseVector::~DenseVector(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F361A560;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SparseSupportVectors::GetCachedSize(CoreML::Specification::SparseSupportVectors *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::SparseSupportVectors::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::SparseSupportVectors::IsInitialized(CoreML::Specification::SparseSupportVectors *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseSupportVectors::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = *(void *)(this + 32) + 8;
    do
    {
      uint64_t v4 = *(void *)(v3 + 8 * v2);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      if ((int)v5 >= 1)
      {
        uint64_t v6 = (uint64_t *)(*(void *)(v4 + 32) + 8);
        do
        {
          uint64_t v7 = *v6++;
          *(_DWORD *)(v7 + 24) = 0;
          *(void *)(v7 + 16) = 0;
          --v5;
        }
        while (v5);
        *(_DWORD *)(v4 + 24) = 0;
      }
      ++v2;
    }
    while (v2 != v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

void CoreML::Specification::SparseSupportVectors::New(CoreML::Specification::SparseSupportVectors *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BE424(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseSupportVectors>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseSupportVectors>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseSupportVectors>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SparseSupportVectors::New(CoreML::Specification::SparseSupportVectors *this)
{
}

void *CoreML::Specification::SparseSupportVectors::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseSupportVectors");
}

void CoreML::Specification::SparseSupportVectors::~SparseSupportVectors(CoreML::Specification::SparseSupportVectors *this)
{
  CoreML::Specification::SparseSupportVectors::~SparseSupportVectors(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3620168;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SparseVector::GetCachedSize(CoreML::Specification::SparseVector *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::SparseVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::SparseVector::IsInitialized(CoreML::Specification::SparseVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseVector::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    int v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(_DWORD *)(v3 + 24) = 0;
      *(void *)(v3 + 16) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

void CoreML::Specification::SparseVector::New(CoreML::Specification::SparseVector *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BE668(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SparseVector::New(CoreML::Specification::SparseVector *this)
{
}

void *CoreML::Specification::SparseVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseVector");
}

void CoreML::Specification::SparseVector::~SparseVector(CoreML::Specification::SparseVector *this)
{
  CoreML::Specification::SparseVector::~SparseVector(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361B438;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SparseNode::GetCachedSize(CoreML::Specification::SparseNode *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t CoreML::Specification::SparseNode::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 24);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  double v7 = *(double *)(v5 + 16);
  if (v7 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  return this;
}

uint64_t CoreML::Specification::SparseNode::IsInitialized(CoreML::Specification::SparseNode *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseNode::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::SparseNode::New(CoreML::Specification::SparseNode *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BE894(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseNode>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseNode>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseNode>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SparseNode::New(CoreML::Specification::SparseNode *this)
{
}

void *CoreML::Specification::SparseNode::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseNode");
}

void CoreML::Specification::SparseNode::~SparseNode(CoreML::Specification::SparseNode *this)
{
  *(void *)this = &unk_1F361A430;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361A430;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Kernel::GetCachedSize(CoreML::Specification::Kernel *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::Kernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(this + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 2)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 3)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 4)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(4, v5, a2);
  }
  return this;
}

uint64_t CoreML::Specification::Kernel::IsInitialized(CoreML::Specification::Kernel *this)
{
  return 1;
}

void CoreML::Specification::Kernel::New(CoreML::Specification::Kernel *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BEB18(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Kernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Kernel>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Kernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Kernel::New(CoreML::Specification::Kernel *this)
{
}

void *CoreML::Specification::Kernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Kernel");
}

void CoreML::Specification::Kernel::~Kernel(CoreML::Specification::Kernel *this)
{
  CoreML::Specification::Kernel::~Kernel(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3625060;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SigmoidKernel::GetCachedSize(CoreML::Specification::SigmoidKernel *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::SigmoidKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  double v5 = *(double *)(this + 16);
  if (v5 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  }
  double v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::SigmoidKernel::ByteSizeLong(CoreML::Specification::SigmoidKernel *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v1 += 9;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

uint64_t CoreML::Specification::SigmoidKernel::IsInitialized(CoreML::Specification::SigmoidKernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::SigmoidKernel::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::SigmoidKernel::New(CoreML::Specification::SigmoidKernel *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BED78(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SigmoidKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SigmoidKernel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SigmoidKernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SigmoidKernel::New(CoreML::Specification::SigmoidKernel *this)
{
}

void *CoreML::Specification::SigmoidKernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SigmoidKernel");
}

void CoreML::Specification::SigmoidKernel::~SigmoidKernel(CoreML::Specification::SigmoidKernel *this)
{
  *(void *)this = &unk_1F361BAC0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361BAC0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::PolyKernel::GetCachedSize(CoreML::Specification::PolyKernel *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::PolyKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 32);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  double v7 = *(double *)(v5 + 16);
  if (v7 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  double v8 = *(double *)(v5 + 24);
  if (v8 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  }
  return this;
}

uint64_t CoreML::Specification::PolyKernel::IsInitialized(CoreML::Specification::PolyKernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::PolyKernel::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void CoreML::Specification::PolyKernel::New(CoreML::Specification::PolyKernel *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BEFD8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::PolyKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::PolyKernel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::PolyKernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::PolyKernel::New(CoreML::Specification::PolyKernel *this)
{
}

void *CoreML::Specification::PolyKernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PolyKernel");
}

void CoreML::Specification::PolyKernel::~PolyKernel(CoreML::Specification::PolyKernel *this)
{
  *(void *)this = &unk_1F361A398;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361A398;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::RBFKernel::GetCachedSize(CoreML::Specification::RBFKernel *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::RBFKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  double v3 = *(double *)(this + 16);
  if (v3 != 0.0) {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  }
  return this;
}

uint64_t CoreML::Specification::RBFKernel::ByteSizeLong(CoreML::Specification::RBFKernel *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::RBFKernel::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  double v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::RBFKernel::IsInitialized(CoreML::Specification::RBFKernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::RBFKernel::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::RBFKernel::New(CoreML::Specification::RBFKernel *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BF22C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::RBFKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    double v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::RBFKernel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::RBFKernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::RBFKernel::New(CoreML::Specification::RBFKernel *this)
{
}

void *CoreML::Specification::RBFKernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RBFKernel");
}

void CoreML::Specification::RBFKernel::~RBFKernel(CoreML::Specification::RBFKernel *this)
{
  *(void *)this = &unk_1F3626820;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3626820;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::LinearKernel::New(CoreML::Specification::LinearKernel *this)
{
}

void *CoreML::Specification::LinearKernel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LinearKernel");
}

void CoreML::Specification::LinearKernel::~LinearKernel(CoreML::Specification::LinearKernel *this)
{
  *(void *)this = &unk_1F361B270;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361B270;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::GetCachedSize(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 8);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v8 = *(void *)(result + 8);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t result = *(void *)result;
    goto LABEL_8;
  }
  LODWORD(v8) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.Gazetteer.language");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 2), a2);
  }
LABEL_9:
  uint64_t v9 = *((void *)this + 3);
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v9 + 23)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (*(void *)(v9 + 8)) {
LABEL_11:
  }
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v9, a2);
LABEL_12:
  if (*((_DWORD *)this + 13) == 200)
  {
    uint64_t v10 = *((void *)this + 5);
    return google::protobuf::internal::WireFormatLite::WriteMessage(200, v10, a2);
  }
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::ByteSizeLong(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  int v9 = *((_DWORD *)this + 8);
  if (v9) {
    v5 += ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if (*((_DWORD *)this + 13) == 200)
  {
    uint64_t v10 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 5));
    v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

BOOL CoreML::Specification::CoreMLModels::Gazetteer::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)a2;
      unint64_t v8 = *((void *)a2 + 1);
      if (*(void *)a2 >= v8)
      {
        LODWORD(v1CoreML::Specification::LinearKernel::New(this, 0) = 0;
LABEL_45:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
        unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v11 & 0x100000000) == 0) {
          goto LABEL_46;
        }
        goto LABEL_9;
      }
      int v9 = v7 + 1;
      uint64_t v10 = *v7;
      if ((char)*v7 >= 1) {
        break;
      }
      if ((unint64_t)v9 >= v8) {
        goto LABEL_45;
      }
      int v12 = *v9;
      if ((v10 & ~v12) < 0x80) {
        goto LABEL_45;
      }
      *(void *)a2 = v7 + 2;
      unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
LABEL_9:
      unsigned int v13 = v11 >> 3;
      if (v11 >> 3 > 0x63)
      {
        if (v13 == 100)
        {
          if (v11 != 34) {
            goto LABEL_46;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5)) {
            return 0;
          }
        }
        else
        {
          if (v13 != 200 || v11 != 66) {
            goto LABEL_46;
          }
          if (*((_DWORD *)this + 13) != 200)
          {
            *((_DWORD *)this + 13) = 200;
            operator new();
          }
          v17 = (CoreML::Specification::StringVector *)*((void *)this + 5);
          v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v20;
            *(void *)a2 = v20 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 13) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          BOOL result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v17, (char **)a2, v23);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
            return 0;
          }
        }
      }
      else if (v13 == 1)
      {
        if (v11 != 8) {
          goto LABEL_46;
        }
        v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v19 = 0;
          goto LABEL_53;
        }
        int v19 = *v18;
        if (*v18 < 0)
        {
LABEL_53:
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          *((_DWORD *)this + 8) = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
        }
        else
        {
          *((_DWORD *)this + 8) = v19;
          *(void *)a2 = v18 + 1;
        }
      }
      else
      {
        if (v13 != 10 || v11 != 82) {
          goto LABEL_46;
        }
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
        if (!result) {
          return result;
        }
        v15 = (unsigned int *)*v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          v15 = *(unsigned int **)v15;
          std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v15, size, 0, (uint64_t)"CoreML.Specification.CoreMLModels.Gazetteer.language"))return 0; {
      }
        }
    }
    *(void *)a2 = v9;
    unint64_t v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_46:
    if (!v11 || (v11 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0BF94C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CoreMLModels::Gazetteer::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::Gazetteer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  data = (uint64_t *)v3[1].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v7);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  int v9 = *((_DWORD *)a2 + 8);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
  }
  if (*((_DWORD *)a2 + 13) == 200)
  {
    if (HIDWORD(v3[2].__r_.__value_.__r.__words[0]) != 200)
    {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = 200;
      operator new();
    }
    uint64_t v10 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 5);
    unint64_t v11 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v11, v10);
  }
  return this;
}

void sub_1DC0BFAF0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::IsInitialized(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::Clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *(void *)(this + 24);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(_DWORD *)(this + 52) == 200)
  {
    this = *(void *)(this + 40);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::Gazetteer::New(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BFC30(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C43D3D65);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::Gazetteer *CoreML::Specification::CoreMLModels::Gazetteer::Gazetteer(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  *(void *)this = &unk_1F361B0A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::Gazetteer *)&CoreML::Specification::CoreMLModels::_Gazetteer_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_1DC0BFCC4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::Gazetteer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::Gazetteer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::Gazetteer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  BOOL result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::CoreMLModels::_Gazetteer_default_instance_ = (uint64_t)&unk_1F361B0A8;
  unk_1EC0014A0 = 0;
  qword_1EC0014A8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC0014B0 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EC0014B8 = 0;
  qword_1EC0014C8 = 0;
  byte_1EC0014D0 = 1;
  return result;
}

void CoreML::Specification::CoreMLModels::Gazetteer::New(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
}

void *CoreML::Specification::CoreMLModels::Gazetteer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.Gazetteer");
}

void CoreML::Specification::CoreMLModels::Gazetteer::~Gazetteer(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  CoreML::Specification::CoreMLModels::Gazetteer::~Gazetteer(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  int v6;
  uint64_t v7;

  *(void *)this = &unk_1F361B0A8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  char v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((_DWORD *)this + 13);
  if (v6)
  {
    if (v6 == 200)
    {
      uint64_t v7 = *((void *)this + 5);
      if (v7) {
        (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
      }
    }
    *((_DWORD *)this + 13) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Normalizer::GetCachedSize(CoreML::Specification::Normalizer *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::Normalizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return google::protobuf::internal::WireFormatLite::WriteEnum(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::Normalizer::ByteSizeLong(CoreML::Specification::Normalizer *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t CoreML::Specification::Normalizer::MergePartialFromCodedStream(CoreML::Specification::Normalizer *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      signed int v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::Normalizer::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::Normalizer::IsInitialized(CoreML::Specification::Normalizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::Normalizer::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::Normalizer::New(CoreML::Specification::Normalizer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C0190(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::Normalizer *CoreML::Specification::Normalizer::Normalizer(CoreML::Specification::Normalizer *this)
{
  *(void *)this = &unk_1F361A300;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Normalizer *)&CoreML::Specification::_Normalizer_default_instance_) {
    CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC0C0214(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Normalizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Normalizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Normalizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(CoreML::Specification::protobuf_Normalizer_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_Normalizer_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Normalizer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Normalizer_2eproto::TableStruct *this)
{
  BOOL result = google::protobuf::internal::InitProtobufDefaults(this);
  qword_1EC001B40 = 0;
  *(void *)&dword_1EC001B48 = 0;
  CoreML::Specification::_Normalizer_default_instance_ = (uint64_t)&unk_1F361A300;
  byte_1EC001B50 = 1;
  return result;
}

void CoreML::Specification::Normalizer::New(CoreML::Specification::Normalizer *this)
{
}

void *CoreML::Specification::Normalizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Normalizer");
}

void CoreML::Specification::Normalizer::~Normalizer(CoreML::Specification::Normalizer *this)
{
  *(void *)this = &unk_1F361A300;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361A300;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::StringToInt64Map::GetCachedSize(CoreML::Specification::StringToInt64Map *this)
{
  return *((unsigned int *)this + 12);
}

void *CoreML::Specification::StringToInt64Map::SerializeWithCachedSizes(void *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = (unint64_t *)this[5];
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (uint64_t)this;
    if (*((unsigned char *)a2 + 26))
    {
      if (v4 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_24;
      }
    }
    else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_24:
      operator new[]();
    }
    this = google::protobuf::Map<std::string,std::string>::begin(v12, v3);
    uint64_t v7 = 0;
    while (v12[0])
    {
      unint64_t v8 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(*((google::protobuf::Arena **)v12[0] + 3), (google::protobuf::Arena *)(*((void *)v12[0] + 3) + 24), *(google::protobuf::Arena **)(v5 + 16));
      if ((google::protobuf::Arena **)v7 != v8)
      {
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        uint64_t v7 = (uint64_t)v8;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v7, a2);
      int v9 = (unsigned int *)*((void *)v12[0] + 3);
      if (*((char *)v9 + 23) < 0)
      {
        int v9 = *(unsigned int **)v9;
        uint64_t v10 = *(void *)(*((void *)v12[0] + 3) + 8);
      }
      else
      {
        LODWORD(v1CoreML::Specification::Normalizer::New(this, 0) = *((unsigned __int8 *)v9 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.StringToInt64Map.MapEntry.key");
      this = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v12);
    }
    if (v7) {
      return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  return this;
}

void sub_1DC0C06F4(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  unint64_t v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    v91 = a2 - 24;
    v92 = a2 - 16;
    int v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                v41 = *(void **)v95;
                v42 = *(void **)v9;
                BOOL result = std::less<std::string>::operator()[abi:ne180100](*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)int v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                BOOL result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                BOOL result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                BOOL result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                v47 = v9;
                do
                {
                  v49 = *(void **)v47;
                  v48 = (void *)*((void *)v47 + 1);
                  v47 = v43;
                  BOOL result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      v49 = *(void **)&v9[v50 - 8];
                      BOOL result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    v51 = v9;
LABEL_80:
                    *(void *)v51 = v48;
                  }
                  v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                BOOL result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                if (result)
                {
                  v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    BOOL result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    v58 = *(void **)v56;
                    v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    v60 = *(void **)v56;
                  }
                  v61 = &v98[8 * v54];
                  v62 = *(void **)v61;
                  BOOL result = std::less<std::string>::operator()[abi:ne180100](v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      v63 = v56;
                      *(void *)v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        v60 = *(void **)v56;
                        v66 = (void *)*((void *)v56 + 1);
                        if (std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v66))
                        {
                          v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      BOOL result = std::less<std::string>::operator()[abi:ne180100](v60, v62);
                      v61 = v63;
                    }
                    while (!result);
                    *(void *)v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              v68 = v98;
              do
              {
                v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    v76 = *(void **)v73;
                    v77 = *(void **)&v68[8 * v70 + 16];
                    BOOL result = std::less<std::string>::operator()[abi:ne180100](*(void **)v73, v77);
                    if (result) {
                      v78 = v77;
                    }
                    else {
                      v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)v68 = v78;
                  v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)v73 = v94;
                }
                else
                {
                  *(void *)v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    v81 = &v98[8 * v80];
                    v82 = *(void **)v81;
                    v83 = *(void **)v73;
                    BOOL result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        v84 = v81;
                        *(void *)v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        v81 = &v98[8 * v80];
                        v82 = *(void **)v81;
                        BOOL result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, v83);
                        v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            v15 = *(void **)v9;
            *(void *)int v9 = *(void *)v14;
            *(void *)v14 = v15;
          }
          --a3;
          v16 = *(void **)v9;
          v17 = v9;
          if (a4) {
            break;
          }
          v17 = v9;
          if (std::less<std::string>::operator()[abi:ne180100](*((void **)v9 - 1), *(void **)v9)) {
            break;
          }
          BOOL result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v95);
          if (result)
          {
            do
            {
              v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              BOOL result = std::less<std::string>::operator()[abi:ne180100](v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            v32 = v9 + 8;
            do
            {
              int v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              BOOL result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v9);
            }
            while (!result);
          }
          v33 = a2;
          if (v9 < a2)
          {
            v33 = a2;
            do
            {
              v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              BOOL result = std::less<std::string>::operator()[abi:ne180100](v16, v34);
            }
            while ((result & 1) != 0);
          }
          v35 = a2;
          if (v9 < v33)
          {
            v36 = *(void **)v9;
            v37 = *(void **)v33;
            do
            {
              *(void *)int v9 = v37;
              *(void *)v33 = v36;
              do
              {
                v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                v36 = v38;
              }
              while (!std::less<std::string>::operator()[abi:ne180100](v16, v38));
              do
              {
                v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                v37 = v39;
                BOOL result = std::less<std::string>::operator()[abi:ne180100](v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)v40 = v16;
        }
        do
        {
          v18 = v17;
          v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          int v19 = v20;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v20, v16));
        uint64_t v97 = a3;
        v21 = a2;
        if (v18 == (char *)v10)
        {
          v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            unsigned int v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v23, v16));
        }
        else
        {
          do
          {
            int v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v22, v16));
        }
        unint64_t v8 = (char *)v10;
        int v24 = a2;
        if (v17 < v21)
        {
          BOOL v25 = *(void **)v21;
          int v26 = v17;
          v27 = v21;
          do
          {
            *(void *)int v26 = v25;
            *(void *)v27 = v19;
            do
            {
              v18 = v26;
              v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              int v19 = v28;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v28, v16));
            do
            {
              v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              BOOL v25 = v29;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)unint64_t v8 = *(void *)v18;
        }
        *(void *)v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        BOOL result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        int v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>((void **)v8, (void **)v18);
      int v9 = v18 + 8;
      BOOL result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *BOOL result = (google::protobuf::Arena *)&unk_1F3627598;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Normalizer::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

unsigned char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BOOL v5 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  uint64_t v6 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v5, a3 + 1);
  unint64_t v7 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *uint64_t v6 = 16;
  unint64_t v8 = v6 + 1;
  if (v7 < 0x80)
  {
    LOBYTE(v9) = v7;
  }
  else
  {
    do
    {
      *v8++ = v7 | 0x80;
      unint64_t v9 = v7 >> 7;
      unint64_t v10 = v7 >> 14;
      v7 >>= 7;
    }
    while (v10);
  }
  *unint64_t v8 = v9;
  return v8 + 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v5 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0) {
      int v6 = *(_DWORD *)(v5 + 8);
    }
    unsigned int v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    int v4 = 0;
    return v4 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  int v4 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1) | 1) ^ 0x3F) + 73) >> 6)
     + 1;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  unint64_t v5 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteInt64(2, v5, a2, v6);
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v5 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0) {
      int v6 = *(_DWORD *)(v5 + 8);
    }
    uint64_t v3 = (int)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unint64_t v4 = 0;
    return v4 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  unint64_t v4 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1) | 1) ^ 0x3F) + 73) >> 6)
     + 1;
  return v4 + v3;
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1))
      {
        LODWORD(TagFallback) = 0;
      }
      else
      {
        unint64_t TagFallback = *v5;
        if ((*v5 & 0x80000000) == 0)
        {
          *(void *)this = v5 + 1;
          goto LABEL_6;
        }
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = *(std::string **)(a1 + 16);
      if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, v7);
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40) | 1;
      *(_DWORD *)(a1 + 4CoreML::Specification::Normalizer::New(this, 0) = v9;
      uint64_t v11 = *(char **)this;
      unint64_t v10 = *((void *)this + 1);
      if (*(void *)this < v10 && *v11 == 16)
      {
        uint64_t v12 = v11 + 1;
        *(void *)this = v12;
LABEL_19:
        int v13 = v9 | 2;
        *(_DWORD *)(a1 + 4CoreML::Specification::Normalizer::New(this, 0) = v13;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
          if ((v16 & 1) == 0) {
            return 0;
          }
          int v13 = *(_DWORD *)(a1 + 40);
          v15 = *(unsigned __int8 **)this;
          unint64_t v10 = *((void *)this + 1);
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          v15 = (unsigned __int8 *)(v12 + 1);
          *(void *)this = v15;
        }
        *(void *)(a1 + 24) = Varint64Fallback;
        *(_DWORD *)(a1 + 4CoreML::Specification::Normalizer::New(this, 0) = v13 | 2;
        if (v15 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          BOOL result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback == 16)
    {
      int v9 = *(_DWORD *)(a1 + 40);
      uint64_t v12 = *(char **)this;
      unint64_t v10 = *((void *)this + 1);
      goto LABEL_19;
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    unint64_t v4 = result;
    if (v2)
    {
      uint64_t v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      int v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      BOOL result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      BOOL result = (std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      v4[1].__r_.__value_.__r.__words[0] = result->__r_.__value_.__r.__words[0];
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Clear(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::Normalizer::New(this, 0) = 0;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *BOOL result = (google::protobuf::Arena *)&unk_1F3627EC8;
  result[1] = v5;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    unint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return a1 + 24;
}

void sub_1DC0C1710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1F3627640;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  JUMPOUT(0x1E0198C00);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3627640;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3627640;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

void *google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1F3627640;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1F3627640;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1F3627640;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      int v6 = *(a2 - 1);
      unint64_t v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      unint64_t v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      int v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    int v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        int v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      v17 = a1;
LABEL_12:
      void *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    unint64_t v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::StringToInt64Map::ByteSizeLong(CoreML::Specification::StringToInt64Map *this)
{
  int v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v8, v2);
  uint64_t v4 = 0;
  while (v8[0])
  {
    int v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(*((google::protobuf::Arena **)v8[0] + 3), (google::protobuf::Arena *)(*((void *)v8[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    unint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v8);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_1DC0C1CE4(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::StringToInt64Map::MergePartialFromCodedStream(CoreML::Specification::StringToInt64Map *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (google::protobuf::Arena **)((char *)this + 16);
  int v5 = (void *)((char *)this + 24);
  while (1)
  {
    unint64_t v6 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v7) = 0;
    }
    else
    {
      uint64_t v7 = *v6;
      if (*v6 >= 1)
      {
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
    unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0) {
      goto LABEL_12;
    }
LABEL_8:
    if (v8 == 10 && (v8 & 0xFFFFFFF8) == 8)
    {
      v42 = v4;
      v43 = v5;
      memset(&__p, 0, sizeof(__p));
      uint64_t v46 = 0;
      int v13 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v13 & 0x80000000) == 0)
      {
        int VarintSizeAsIntFallback = *v13;
        *(void *)a2 = v13 + 1;
        goto LABEL_24;
      }
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        goto LABEL_50;
      }
LABEL_24:
      int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v17 = *((_DWORD *)a2 + 13);
      BOOL v18 = __OFSUB__(v17--, 1);
      *((_DWORD *)a2 + 13) = v17;
      if (v17 < 0 == v18)
      {
        int v19 = v16;
        v20 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v20 == 10)
        {
          *(void *)a2 = v20 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p)) {
            goto LABEL_50;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 16)
          {
            uint64_t v21 = *(void *)v43[2];
            BOOL v45 = google::protobuf::Map<std::string,long long>::operator[]((uint64_t)v43, (uint64_t)&__p);
            if (v21 != *(void *)v43[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              int v22 = v45;
              int v24 = *(unsigned __int8 **)a2;
              unsigned int v23 = (char *)*((void *)a2 + 1);
              if (*(void *)a2 >= (unint64_t)v23 || (char)*v24 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if (v31)
                {
                  int v26 = *(char **)a2;
                  unsigned int v23 = (char *)*((void *)a2 + 1);
                  goto LABEL_52;
                }
                v15.n128_f64[0] = google::protobuf::Map<std::string,long long>::erase(v43, (unsigned __int8 *)&__p);
                goto LABEL_50;
              }
              unint64_t Varint64Fallback = *v24;
              int v26 = (char *)(v24 + 1);
              *(void *)a2 = v26;
LABEL_52:
              *int v22 = Varint64Fallback;
              if (v26 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                *((unsigned char *)a2 + 36) = 1;
LABEL_65:
                if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v19))
                {
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    p_p = (unsigned int *)&__p;
                  }
                  else {
                    p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                  }
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    int v39 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    int v39 = __p.__r_.__value_.__r.__words[1];
                  }
                  BOOL v40 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v39, 0, (uint64_t)"CoreML.Specification.StringToInt64Map.MapEntry.key");
                  BOOL v30 = v40;
                  if (v40) {
                    int v12 = 0;
                  }
                  else {
                    int v12 = 6;
                  }
                  goto LABEL_75;
                }
                goto LABEL_50;
              }
              v32 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(*v42);
              if (v46 != v32)
              {
                if (v46) {
                  (*((void (**)(void))*v46 + 1))();
                }
                uint64_t v46 = v32;
              }
              v33 = v45;
              v34 = v43;
              *((_DWORD *)v32 + 10) |= 2u;
              v32[3] = *v33;
              google::protobuf::Map<std::string,long long>::erase(v34, (unsigned __int8 *)&__p);
              v35 = v46;
              *((_DWORD *)v46 + 10) |= 1u;
              v36 = v35[2];
              if (v36 == (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstance();
              }
              if (*((char *)v36 + 23) < 0) {
                operator delete(*(void **)v36);
              }
              long long v37 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              *((void *)v36 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
              *(_OWORD *)v36 = v37;
              *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
              __p.__r_.__value_.__s.__data_[0] = 0;
              int v29 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v46
                     + 11))(v46, a2);
              if (v29) {
                google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry((uint64_t)&v42);
              }
              if (!(*((uint64_t (**)(google::protobuf::Arena **))*v46 + 5))(v46))
              {
LABEL_64:
                if (v29) {
                  goto LABEL_65;
                }
                goto LABEL_50;
              }
LABEL_46:
              uint64_t v46 = 0;
              if (v29) {
                goto LABEL_65;
              }
              BOOL v30 = 0;
              int v12 = 6;
LABEL_77:
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              if (!v30) {
                goto LABEL_18;
              }
              goto LABEL_17;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        v27 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(*v42);
        if (v46 != v27)
        {
          if (v46) {
            (*((void (**)(void))*v46 + 1))();
          }
          uint64_t v46 = v27;
        }
        v28 = (std::string *)v27[2];
        *((_DWORD *)v27 + 10) |= 1u;
        if (v28 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=(v28, &__p);
        int v29 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v46 + 11))(v46, a2);
        if (v29) {
          google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry((uint64_t)&v42);
        }
        if (!(*((uint64_t (**)(google::protobuf::Arena **))*v46 + 5))(v46)) {
          goto LABEL_64;
        }
        goto LABEL_46;
      }
LABEL_50:
      BOOL v30 = 0;
      int v12 = 6;
LABEL_75:
      if (v46) {
        (*((void (**)(google::protobuf::Arena **, __n128))*v46 + 1))(v46, v15);
      }
      goto LABEL_77;
    }
LABEL_12:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3))return 0; {
LABEL_17:
    }
    int v12 = 0;
LABEL_18:
    if (v12) {
      return 0;
    }
  }
}

void sub_1DC0C2268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,long long>::operator[](uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v23 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v25[0];
  if (v25[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v19 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v19, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v24, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v24[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v20 = 0;
    unint64_t v21 = ((5 * v8) >> 2) + 1;
    do
      ++v20;
    while (v21 << v20 < v9);
    uint64_t v19 = v7 >> v20 <= 8 ? 8 : v7 >> v20;
    if (v19 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v25[3];
LABEL_11:
  int v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  uint64_t v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v23;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v24, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v24[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 32);
    int v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    v16[2] = 0;
    void *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    v16[3] = 0;
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1DC0C24CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1E0198C00](v14, 0x1012C4092066FB6);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,long long>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,long long>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::Normalizer::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627EC8;
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  int v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  double result = google::protobuf::Map<std::string,long long>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::Normalizer::New(this, 0) = result;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  *double result = *(google::protobuf::Arena **)(v4 + 24);
  return result;
}

__n128 google::protobuf::Map<std::string,long long>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x1E0198C00](v7, 0x1012C4092066FB6);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 32);
  if (v8) {
    goto LABEL_7;
  }
  int v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    int v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        uint64_t v14 = v13;
        int v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        uint64_t v14 = *(void **)(v12 + 16);
        BOOL v15 = *v14 == v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    int v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  int v16 = (void *)a2[2];
  int v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  uint64_t v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  std::string::size_type v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (void *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

void *CoreML::Specification::StringToInt64Map::MergeFrom(CoreML::Specification::StringToInt64Map *this, const CoreML::Specification::StringToInt64Map *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  __n128 result = google::protobuf::Map<std::string,std::string>::begin(v10, *((void **)a2 + 5));
  uint64_t v6 = v10[0];
  if (v10[0])
  {
    uint64_t v7 = (char *)this + 24;
    do
    {
      uint64_t v8 = *((void *)v6 + 3);
      unint64_t v9 = *(google::protobuf::Arena **)(v8 + 24);
      *google::protobuf::Map<std::string,long long>::operator[]((uint64_t)v7, v8) = v9;
      __n128 result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v10);
      uint64_t v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

uint64_t CoreML::Specification::StringToInt64Map::IsInitialized(CoreML::Specification::StringToInt64Map *this)
{
  return 1;
}

void CoreML::Specification::StringToInt64Map::Clear(CoreML::Specification::StringToInt64Map *this)
{
}

void google::protobuf::Map<std::string,long long>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<std::string,long long>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

void CoreML::Specification::StringToInt64Map::New(CoreML::Specification::StringToInt64Map *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C2A0C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::StringToInt64Map::StringToInt64Map(CoreML::Specification::StringToInt64Map *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361DB68;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  operator new();
}

void sub_1DC0C2AD4(_Unwind_Exception *a1)
{
  google::protobuf::Map<std::string,long long>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringToInt64Map>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    __n128 result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *__n128 result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToInt64Map>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToInt64Map>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(CoreML::Specification::protobuf_DataStructures_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_DataStructures_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

void *google::protobuf::Map<std::string,long long>::~Map(void *a1)
{
  google::protobuf::Map<std::string,long long>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void CoreML::Specification::protobuf_DataStructures_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_DataStructures_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
  qword_1EC004F70 = 0;
  unk_1EC004F78 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004F80 = 0;
  unk_1EC004F88 = 0;
  dword_1EC004F90 = 0;
  CoreML::Specification::_StringToInt64Map_MapEntry_default_instance_ = (uint64_t)&unk_1F3627EC8;
  byte_1EC004F98 = 1;
  CoreML::Specification::StringToInt64Map::StringToInt64Map((CoreML::Specification::StringToInt64Map *)&CoreML::Specification::_StringToInt64Map_default_instance_);
}

void CoreML::Specification::Int64ToStringMap::Int64ToStringMap(CoreML::Specification::Int64ToStringMap *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361D6A8;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  operator new();
}

void sub_1DC0C3000(_Unwind_Exception *a1)
{
  google::protobuf::Map<long long,std::string>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::StringToDoubleMap::StringToDoubleMap(CoreML::Specification::StringToDoubleMap *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361E580;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  operator new();
}

void sub_1DC0C30E8(_Unwind_Exception *a1)
{
  google::protobuf::Map<std::string,long long>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::Int64ToDoubleMap::Int64ToDoubleMap(CoreML::Specification::Int64ToDoubleMap *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361D610;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  operator new();
}

void sub_1DC0C31D0(_Unwind_Exception *a1)
{
  google::protobuf::Map<long long,double>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PrecisionRecallCurve::GetCachedSize(CoreML::Specification::PrecisionRecallCurve *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t *CoreML::Specification::PrecisionRecallCurve::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    uint64_t v3 = this;
    uint64_t v4 = this[2];
    if (v4) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
    }
    uint64_t v5 = v3[3];
    if (v5) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
    }
    uint64_t v6 = v3[4];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v6, a2);
    }
    uint64_t v7 = v3[5];
    if (v7)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(4, v7, a2);
    }
  }
  return this;
}

unsigned int *CoreML::Specification::PrecisionRecallCurve::ByteSizeLong(CoreML::Specification::PrecisionRecallCurve *this)
{
  if (this == (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    unint64_t v1 = 0;
  }
  else
  {
    unint64_t v1 = (unsigned int *)*((void *)this + 2);
    if (v1)
    {
      uint64_t v2 = v1[4];
      uint64_t v3 = 4 * v2;
      if (v2)
      {
        if ((v3 & 0x80000000) != 0) {
          uint64_t v4 = 11;
        }
        else {
          uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v4 = 0;
      }
      uint64_t v5 = v4 + v3;
      v1[8] = v3;
      v1[9] = v5;
      unint64_t v1 = (unsigned int *)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    uint64_t v6 = (unsigned int *)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = v6[4];
      uint64_t v8 = 4 * v7;
      if (v7)
      {
        if ((v8 & 0x80000000) != 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      uint64_t v10 = v9 + v8;
      v6[8] = v8;
      v6[9] = v10;
      unint64_t v1 = (unsigned int *)((char *)v1 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    uint64_t v11 = (unsigned int *)*((void *)this + 4);
    if (v11)
    {
      uint64_t v12 = v11[4];
      uint64_t v13 = 4 * v12;
      if (v12)
      {
        if ((v13 & 0x80000000) != 0) {
          uint64_t v14 = 11;
        }
        else {
          uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
      uint64_t v15 = v14 + v13;
      v11[8] = v13;
      v11[9] = v15;
      unint64_t v1 = (unsigned int *)((char *)v1 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    int v16 = (unsigned int *)*((void *)this + 5);
    if (v16)
    {
      uint64_t v17 = v16[4];
      uint64_t v18 = 4 * v17;
      if (v17)
      {
        if ((v18 & 0x80000000) != 0) {
          uint64_t v19 = 11;
        }
        else {
          uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v19 = 0;
      }
      uint64_t v20 = v19 + v18;
      v16[8] = v18;
      v16[9] = v20;
      unint64_t v1 = (unsigned int *)((char *)v1 + v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  *((_DWORD *)this + 12) = v1;
  return v1;
}

BOOL CoreML::Specification::PrecisionRecallCurve::MergePartialFromCodedStream(CoreML::Specification::PrecisionRecallCurve *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_23;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_23;
          }
          uint64_t v9 = (CoreML::Specification::FloatVector *)*((void *)this + 2);
          if (!v9) {
            operator new();
          }
          return result;
        case 2u:
          if (v7 != 18) {
            goto LABEL_23;
          }
          uint64_t v9 = (CoreML::Specification::FloatVector *)*((void *)this + 3);
          if (!v9) {
            operator new();
          }
          return result;
        case 3u:
          if (v7 != 26) {
            goto LABEL_23;
          }
          uint64_t v9 = (CoreML::Specification::FloatVector *)*((void *)this + 4);
          if (!v9) {
            operator new();
          }
          return result;
        case 4u:
          if (v7 != 34) {
            goto LABEL_23;
          }
          uint64_t v9 = (CoreML::Specification::FloatVector *)*((void *)this + 5);
          if (!v9) {
            operator new();
          }
          return result;
        default:
          goto LABEL_23;
      }
      uint64_t v10 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v10;
        *(void *)a2 = v10 + 1;
      }
      int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v13;
        BOOL result = CoreML::Specification::FloatVector::MergePartialFromCodedStream(v9, (char **)a2, v14);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_23:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0C36D0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::FloatVector *CoreML::Specification::FloatVector::FloatVector(CoreML::Specification::FloatVector *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361A728;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::FloatVector *)&CoreML::Specification::_FloatVector_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0C377C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FloatVector::MergePartialFromCodedStream(CoreML::Specification::FloatVector *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 2;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v30 = 0;
          uint64_t v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result) {
              return result;
            }
            unsigned int v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unsigned int v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *uint64_t v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v17;
    return result;
  }
  return 0;
}

std::string *CoreML::Specification::PrecisionRecallCurve::MergeFrom(std::string *this, const CoreML::Specification::PrecisionRecallCurve *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      uint64_t v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(v5, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(data, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      std::string::size_type size = (unint64_t *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(size, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      if (!v3[1].__r_.__value_.__r.__words[2]) {
        operator new();
      }
      unint64_t v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((void *)a2 + 5);
      uint64_t v9 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(v9, v8);
    }
  }
  return this;
}

void sub_1DC0C3C38(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PrecisionRecallCurve::IsInitialized(CoreML::Specification::PrecisionRecallCurve *this)
{
  return 1;
}

uint64_t CoreML::Specification::PrecisionRecallCurve::Clear(CoreML::Specification::PrecisionRecallCurve *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

void CoreML::Specification::PrecisionRecallCurve::New(CoreML::Specification::PrecisionRecallCurve *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C3DA4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40668C0A6DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::PrecisionRecallCurve *CoreML::Specification::PrecisionRecallCurve::PrecisionRecallCurve(CoreML::Specification::PrecisionRecallCurve *this)
{
  *(void *)this = &unk_1F361FDD8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 12) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1DC0C3E30(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::PrecisionRecallCurve>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::PrecisionRecallCurve>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::PrecisionRecallCurve>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::PrecisionRecallCurve::New(CoreML::Specification::PrecisionRecallCurve *this)
{
}

void *CoreML::Specification::PrecisionRecallCurve::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PrecisionRecallCurve");
}

void CoreML::Specification::PrecisionRecallCurve::~PrecisionRecallCurve(CoreML::Specification::PrecisionRecallCurve *this)
{
  CoreML::Specification::PrecisionRecallCurve::~PrecisionRecallCurve(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(void *)this = &unk_1F361FDD8;
  if (this != (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    unint64_t v5 = *((void *)this + 5);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DoubleRange::GetCachedSize(CoreML::Specification::DoubleRange *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::DoubleRange::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  double v5 = *(double *)(this + 16);
  if (v5 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  }
  double v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::DoubleRange::ByteSizeLong(CoreML::Specification::DoubleRange *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v1 += 9;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

BOOL CoreML::Specification::DoubleRange::MergePartialFromCodedStream(CoreML::Specification::DoubleRange *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        double v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        BOOL v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v13 = v16;
        }
        else
        {
          unint64_t v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 9) {
        break;
      }
      unint64_t v16 = 0;
      uint64_t v10 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
        if (!result) {
          return result;
        }
        unint64_t v11 = v16;
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::DoubleRange::IsInitialized(CoreML::Specification::DoubleRange *this)
{
  return 1;
}

uint64_t CoreML::Specification::DoubleRange::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::DoubleRange::New(CoreML::Specification::DoubleRange *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C427C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::DoubleRange *CoreML::Specification::DoubleRange::DoubleRange(CoreML::Specification::DoubleRange *this)
{
  *(void *)this = &unk_1F361A5F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DoubleRange *)&CoreML::Specification::_DoubleRange_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0C4304(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleRange>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleRange>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleRange>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DoubleRange::New(CoreML::Specification::DoubleRange *this)
{
}

void *CoreML::Specification::DoubleRange::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleRange");
}

void CoreML::Specification::DoubleRange::~DoubleRange(CoreML::Specification::DoubleRange *this)
{
  *(void *)this = &unk_1F361A5F8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361A5F8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Int64Set::GetCachedSize(CoreML::Specification::Int64Set *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::Int64Set::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            int v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::Int64Set::ByteSizeLong(CoreML::Specification::Int64Set *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::Int64Set::MergePartialFromCodedStream(CoreML::Specification::Int64Set *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::DoubleRange::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::Int64Set::IsInitialized(CoreML::Specification::Int64Set *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Set::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::Int64Set::New(CoreML::Specification::Int64Set *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C48F4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Set *CoreML::Specification::Int64Set::Int64Set(CoreML::Specification::Int64Set *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3626528;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Int64Set *)&CoreML::Specification::_Int64Set_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0C4984(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Set>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Set>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Set>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64Set::New(CoreML::Specification::Int64Set *this)
{
}

void *CoreML::Specification::Int64Set::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Set");
}

void CoreML::Specification::Int64Set::~Int64Set(CoreML::Specification::Int64Set *this)
{
  CoreML::Specification::Int64Set::~Int64Set(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F3626528;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Int64Range::GetCachedSize(CoreML::Specification::Int64Range *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::Int64Range::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 24);
  if (v7)
  {
    return google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::Int64Range::ByteSizeLong(CoreML::Specification::Int64Range *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Int64Range::MergePartialFromCodedStream(CoreML::Specification::Int64Range *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        unint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::Int64Range::MergeFrom(std::string *this, const CoreML::Specification::Int64Range *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  return this;
}

uint64_t CoreML::Specification::Int64Range::IsInitialized(CoreML::Specification::Int64Range *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Range::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::Int64Range::New(CoreML::Specification::Int64Range *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C4D94(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Range *CoreML::Specification::Int64Range::Int64Range(CoreML::Specification::Int64Range *this)
{
  *(void *)this = &unk_1F361A1D0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Int64Range *)&CoreML::Specification::_Int64Range_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0C4E1C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Range>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Range>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Range>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64Range::New(CoreML::Specification::Int64Range *this)
{
}

void *CoreML::Specification::Int64Range::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Range");
}

void CoreML::Specification::Int64Range::~Int64Range(CoreML::Specification::Int64Range *this)
{
  *(void *)this = &unk_1F361A1D0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361A1D0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DoubleVector::GetCachedSize(CoreML::Specification::DoubleVector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::DoubleVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      BOOL v12 = (char *)(v11 + 8);
    }
    else {
      BOOL v12 = 0;
    }
    int v13 = 8 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::DoubleVector::ByteSizeLong(CoreML::Specification::DoubleVector *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

BOOL CoreML::Specification::DoubleVector::MergePartialFromCodedStream(CoreML::Specification::DoubleVector *this, char **a2, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 3;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v30 = 0;
          signed int v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result) {
              return result;
            }
            unint64_t v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unint64_t v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(void *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *unsigned int v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *unsigned int v5 = v17;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::DoubleVector::IsInitialized(CoreML::Specification::DoubleVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::DoubleVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::DoubleVector::New(CoreML::Specification::DoubleVector *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C5464(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::DoubleVector *CoreML::Specification::DoubleVector::DoubleVector(CoreML::Specification::DoubleVector *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361B140;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::DoubleVector *)&CoreML::Specification::_DoubleVector_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0C54F4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DoubleVector::New(CoreML::Specification::DoubleVector *this)
{
}

void *CoreML::Specification::DoubleVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleVector");
}

void CoreML::Specification::DoubleVector::~DoubleVector(CoreML::Specification::DoubleVector *this)
{
  CoreML::Specification::DoubleVector::~DoubleVector(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F361B140;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::FloatVector::GetCachedSize(CoreML::Specification::FloatVector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::FloatVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      BOOL v12 = (char *)(v11 + 8);
    }
    else {
      BOOL v12 = 0;
    }
    int v13 = 4 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::FloatVector::ByteSizeLong(CoreML::Specification::FloatVector *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::FloatVector::IsInitialized(CoreML::Specification::FloatVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::FloatVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::FloatVector::New(CoreML::Specification::FloatVector *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C5844(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FloatVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FloatVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FloatVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::FloatVector::New(CoreML::Specification::FloatVector *this)
{
}

void *CoreML::Specification::FloatVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FloatVector");
}

void CoreML::Specification::FloatVector::~FloatVector(CoreML::Specification::FloatVector *this)
{
  CoreML::Specification::FloatVector::~FloatVector(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F361A728;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Int64Vector::GetCachedSize(CoreML::Specification::Int64Vector *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::Int64Vector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            int v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            int v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          unsigned char *v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::Int64Vector::ByteSizeLong(CoreML::Specification::Int64Vector *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::Int64Vector::MergePartialFromCodedStream(CoreML::Specification::Int64Vector *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::FloatVector::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::Int64Vector::IsInitialized(CoreML::Specification::Int64Vector *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Vector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::Int64Vector::New(CoreML::Specification::Int64Vector *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C5E34(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Vector *CoreML::Specification::Int64Vector::Int64Vector(CoreML::Specification::Int64Vector *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361A7C0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Int64Vector *)&CoreML::Specification::_Int64Vector_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0C5EC4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Vector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Vector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Vector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64Vector::New(CoreML::Specification::Int64Vector *this)
{
}

void *CoreML::Specification::Int64Vector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Vector");
}

void CoreML::Specification::Int64Vector::~Int64Vector(CoreML::Specification::Int64Vector *this)
{
  CoreML::Specification::Int64Vector::~Int64Vector(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F361A7C0;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::StringVector::GetCachedSize(CoreML::Specification::StringVector *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::StringVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v2 = *(unsigned int *)(this + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = -v2;
    uint64_t v6 = 1;
    do
    {
      uint64_t v7 = *(unsigned int **)(*(void *)(v4 + 32) + 8 * v6);
      if (*((char *)v7 + 23) < 0)
      {
        uint64_t v7 = *(unsigned int **)v7;
        uint64_t v8 = *(void *)(*(void *)(*(void *)(v4 + 32) + 8 * v6) + 8);
      }
      else
      {
        LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.StringVector.vector");
      this = google::protobuf::internal::WireFormatLite::WriteString(1u, *(void *)(*(void *)(v4 + 32) + 8 * v6++), a2);
    }
    while (v5 + v6 != 1);
  }
  return this;
}

uint64_t CoreML::Specification::StringVector::ByteSizeLong(CoreML::Specification::StringVector *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *((unsigned int *)this + 6);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*((void *)this + 4) + 8);
    uint64_t v3 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  *((_DWORD *)this + 1CoreML::Specification::Int64Vector::New(this, 0) = v3;
  return v3;
}

BOOL CoreML::Specification::StringVector::MergePartialFromCodedStream(CoreML::Specification::StringVector *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (google::protobuf::Arena **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
        goto LABEL_23;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 >= *v12)
      {
        if (v14 != *((_DWORD *)this + 7))
        {
LABEL_26:
          int *v12 = v14 + 1;
          unint64_t v16 = *v5;
          if (!*v5) {
            operator new();
          }
          Aligned->__r_.__value_.__l.__size_ = 0;
          Aligned->__r_.__value_.__r.__words[2] = 0;
          Aligned->__r_.__value_.__r.__words[0] = 0;
          int v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          google::protobuf::Arena *v17 = (google::protobuf::Arena *)Aligned;
          v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
          int v18 = (unint64_t *)((char *)v16 + 32);
          do
            unint64_t v19 = __ldxr(v18);
          while (__stxr((unint64_t)v17, v18));
          v17[2] = (google::protobuf::Arena *)v19;
          uint64_t v20 = *((void *)this + 4);
          uint64_t v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(void *)(v20 + 8 * v21 + 8) = Aligned;
          goto LABEL_31;
        }
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v5, v14 - v13 + 1);
          BOOL v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      *((_DWORD *)this + 6) = v13 + 1;
      Aligned = *(std::string **)&v12[2 * v13 + 2];
LABEL_31:
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, Aligned);
      if (!result) {
        return result;
      }
      uint64_t v23 = *((void *)this + 4);
      uint64_t v24 = *(unsigned int **)(v23 + 8 * *((int *)this + 6));
      if (*((char *)v24 + 23) < 0)
      {
        uint64_t v24 = *(unsigned int **)v24;
        uint64_t v25 = *(void *)(*(void *)(v23 + 8 * *((int *)this + 6)) + 8);
      }
      else
      {
        LODWORD(v25) = *((unsigned __int8 *)v24 + 23);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v24, v25, 0, (uint64_t)"CoreML.Specification.StringVector.vector"))return 0; {
    }
      }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::StringVector::IsInitialized(CoreML::Specification::StringVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::StringVector::Clear(CoreML::Specification::StringVector *this)
{
  return google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 16);
}

void CoreML::Specification::StringVector::New(CoreML::Specification::StringVector *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C63C4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::StringVector *CoreML::Specification::StringVector::StringVector(CoreML::Specification::StringVector *this)
{
  *(void *)this = &unk_1F361B4D0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::StringVector *)&CoreML::Specification::_StringVector_default_instance_) {
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::Int64Vector::New(this, 0) = 0;
  return this;
}

void sub_1DC0C6458(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringVector>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringVector>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::StringVector::New(CoreML::Specification::StringVector *this)
{
}

void *CoreML::Specification::StringVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringVector");
}

void CoreML::Specification::StringVector::~StringVector(CoreML::Specification::StringVector *this)
{
  *(void *)this = &unk_1F361B4D0;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1F361B4D0;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

void *google::protobuf::Map<long long,double>::~Map(void *a1)
{
  google::protobuf::Map<long long,double>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<long long,double>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<long long,double>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<long long,double>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

uint64_t google::protobuf::Map<long long,double>::InnerMap::~InnerMap(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      do
      {
        uint64_t v4 = *(void *)(a1 + 32);
        uint64_t v5 = *(void *)(v4 + 8 * v3);
        if (v5)
        {
          if (v5 == *(void *)(v4 + 8 * (v3 ^ 1)))
          {
            uint64_t v7 = v3 + 1;
            *(void *)(v4 + 8 * (v3 + 1)) = 0;
            *(void *)(*(void *)(a1 + 32) + 8 * vgoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
            unint64_t v8 = *(uint64_t **)v5;
            do
            {
              unsigned int v9 = (void *)v8[4];
              int v10 = (uint64_t *)v8[1];
              uint64_t v11 = v8;
              if (v10)
              {
                do
                {
                  BOOL v12 = v10;
                  int v10 = (uint64_t *)*v10;
                }
                while (v10);
              }
              else
              {
                do
                {
                  BOOL v12 = (uint64_t *)v11[2];
                  BOOL v13 = *v12 == (void)v11;
                  uint64_t v11 = v12;
                }
                while (!v13);
              }
              std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v5, v8);
              if (!*(void *)(a1 + 40)) {
                operator delete(v9);
              }
              unint64_t v8 = v12;
            }
            while (v12 != (uint64_t *)(v5 + 8));
            google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(*(void *)(a1 + 40), (void **)v5);
            goto LABEL_21;
          }
          *(void *)(v4 + 8 * vgoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
          do
          {
            uint64_t v6 = *(void *)(v5 + 16);
            if (!*(void *)(a1 + 40)) {
              operator delete((void *)v5);
            }
            uint64_t v5 = v6;
          }
          while (v6);
        }
        uint64_t v7 = v3;
LABEL_21:
        uint64_t v3 = v7 + 1;
        unint64_t v2 = *(void *)(a1 + 8);
      }
      while (v7 + 1 < v2);
    }
    *(void *)a1 = 0;
    *(void *)(a1 + 24) = v2;
    if (!*(void *)(a1 + 40)) {
      operator delete(*(void **)(a1 + 32));
    }
  }
  return a1;
}

__n128 google::protobuf::Map<long long,double>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 8);
    if (v7)
    {
      MEMORY[0x1E0198C00](v7, 0x1000C40451B5BE8);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8) {
    goto LABEL_5;
  }
  uint64_t v29 = 0;
  if (google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, &v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    BOOL v12 = v29;
    BOOL v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        int v14 = v13;
        BOOL v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        int v14 = (void *)v12[2];
        BOOL v15 = *v14 == (void)v12;
        BOOL v12 = v14;
      }
      while (!v15);
    }
    uint64_t v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_5:
      *a3 = v8;
      goto LABEL_17;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_17:
  unint64_t v16 = (void *)a2[2];
  uint64_t v29 = 0;
  BOOL v17 = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, &v29);
  unint64_t v18 = v28;
  unint64_t v19 = (void *)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_23:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_24;
  }
  uint64_t v23 = (uint64_t *)std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(v21, (uint64_t *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_23;
  }
LABEL_24:
  if (!v16[5]) {
    operator delete(v19);
  }
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

BOOL google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary(uint64_t a1, void *a2)
{
  uint64_t v4 = *(uint64_t **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16) & (v3[1] - 1);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = v3[4];
  uint64_t v7 = *(uint64_t **)(v6 + 8 * v5);
  if (v7 == v4) {
    return 1;
  }
  if (v7 && v7 != *(uint64_t **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      uint64_t v7 = (uint64_t *)v7[2];
      if (!v7) {
        break;
      }
      if (v7 == v4) {
        return 1;
      }
    }
  }
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v13, v3, v4, a2);
  uint64_t v9 = v14;
  *(void *)(a1 + 16) = v14;
  uint64_t v10 = *(void *)(*(void *)(a1 + 8) + 32);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  return !v11 || v11 != *(void *)(v10 + 8 * (v9 ^ 1));
}

uint64_t google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a2 + 16);
  if (v2 == a1) {
    return v3;
  }
  *(void *)(v2 + 16) = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList();
  return v2;
}

uint64_t std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v2 = a1 + 8;
  uint64_t v3 = v4;
  if (!v4) {
    return v2;
  }
  uint64_t v5 = *a2;
  uint64_t v6 = v2;
  do
  {
    uint64_t v7 = **(void **)(v3 + 32);
    BOOL v8 = v7 < v5;
    if (v7 >= v5) {
      uint64_t v9 = (uint64_t *)v3;
    }
    else {
      uint64_t v9 = (uint64_t *)(v3 + 8);
    }
    if (!v8) {
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v9;
  }
  while (*v9);
  if (v6 == v2 || v5 < **(void **)(v6 + 32)) {
    return v2;
  }
  return v6;
}

void *google::protobuf::Map<long long,double>::InnerMap::FindHelper(void *result, void *a2, uint64_t *a3, void *a4)
{
  uint64_t v4 = result;
  uint64_t v5 = (a2[1] - 1) & (a2[2] + *a3);
  uint64_t v6 = a2[4];
  uint64_t v7 = *(void **)(v6 + 8 * v5);
  if (v7)
  {
    if (v7 != *(void **)(v6 + 8 * (v5 ^ 1)))
    {
      while (*v7 != *a3)
      {
        uint64_t v7 = (void *)v7[2];
        if (!v7) {
          goto LABEL_10;
        }
      }
      *__n128 result = v7;
      goto LABEL_12;
    }
    v5 &= ~1uLL;
    uint64_t v10 = *(void *)(v6 + 8 * v5);
    __n128 result = (void *)std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(v10, a3);
    if ((void *)(v10 + 8) != result)
    {
      if (a4) {
        *a4 = result;
      }
      void *v4 = result[4];
LABEL_12:
      v4[1] = a2;
      v4[2] = v5;
      goto LABEL_13;
    }
  }
LABEL_10:
  void *v4 = 0;
  v4[1] = 0;
  v4[2] = 0;
LABEL_13:
  v4[3] = v5;
  return result;
}

void *google::protobuf::Map<long long,double>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  uint64_t v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  uint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0C6CE4(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0C6CA0);
}

uint64_t CoreML::Specification::Int64ToDoubleMap::GetCachedSize(CoreML::Specification::Int64ToDoubleMap *this)
{
  return *((unsigned int *)this + 12);
}

void *CoreML::Specification::Int64ToDoubleMap::SerializeWithCachedSizes(void *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = (unint64_t *)this[5];
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (uint64_t)this;
    if (*((unsigned char *)a2 + 26))
    {
      if (v4 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_21;
      }
    }
    else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_21:
      operator new[]();
    }
    this = google::protobuf::Map<std::string,std::string>::begin(v10, v3);
    uint64_t v7 = 0;
    while (v10[0])
    {
      size_t v8 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((google::protobuf::Arena **)v10[0] + 1), (google::protobuf::Arena *)(v10[0][1] + 8), *(google::protobuf::Arena **)(v5 + 16));
      if ((google::protobuf::Arena **)v7 != v8)
      {
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        uint64_t v7 = (uint64_t)v8;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v7, a2);
      this = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v10);
    }
    if (v7) {
      return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  return this;
}

void sub_1DC0C6F84(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x1060C80832E3BDALL);
  _Unwind_Resume(a1);
}

double std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*,false>(unint64_t a1, void *a2, uint64_t a3, char a4)
{
  while (2)
  {
    uint64_t v10 = (long long *)(a2 - 2);
    unint64_t v11 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v11;
          uint64_t v12 = (uint64_t)a2 - v11;
          unint64_t v13 = (uint64_t)((uint64_t)a2 - v11) >> 4;
          if (v5 || !v4)
          {
            switch(v13)
            {
              case 0uLL:
              case 1uLL:
                return *(double *)&v16;
              case 2uLL:
                if (*(void *)v10 < *(void *)v11)
                {
                  long long v84 = *(_OWORD *)v11;
                  *(_OWORD *)unint64_t v11 = *v10;
                  *(void *)&long long v16 = v84;
                  *uint64_t v10 = v84;
                }
                break;
              case 3uLL:
                std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), a2 - 2);
                break;
              case 4uLL:
                *(void *)&long long v16 = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 32), (_OWORD *)a2 - 1).n128_u64[0];
                break;
              case 5uLL:
                *(void *)&long long v16 = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 32), (__n128 *)(v11 + 48), (__n128 *)a2 - 1).n128_u64[0];
                break;
              default:
                JUMPOUT(0);
            }
            return *(double *)&v16;
          }
          if (v12 <= 383)
          {
            v38 = (void *)(v11 + 16);
            BOOL v40 = (void *)v11 == a2 || v38 == a2;
            if (a4)
            {
              if (!v40)
              {
                uint64_t v41 = 0;
                v42 = (void *)v11;
                do
                {
                  v43 = v38;
                  uint64_t v44 = v42[2];
                  if (v44 < *v42)
                  {
                    uint64_t v45 = v42[3];
                    uint64_t v46 = v41;
                    while (1)
                    {
                      long long v16 = *(_OWORD *)(v11 + v46);
                      *(_OWORD *)(v11 + v46 + 16) = v16;
                      if (!v46) {
                        break;
                      }
                      uint64_t v47 = *(void *)(v11 + v46 - 16);
                      v46 -= 16;
                      if (v44 >= v47)
                      {
                        v48 = (void *)(v11 + v46 + 16);
                        goto LABEL_80;
                      }
                    }
                    v48 = (void *)v11;
LABEL_80:
                    void *v48 = v44;
                    v48[1] = v45;
                  }
                  v38 = v43 + 2;
                  v41 += 16;
                  v42 = v43;
                }
                while (v43 + 2 != a2);
              }
            }
            else if (!v40)
            {
              do
              {
                unint64_t v76 = (unint64_t)v38;
                uint64_t v77 = *(void *)(a1 + 16);
                if (v77 < *(void *)a1)
                {
                  uint64_t v78 = *(void *)(a1 + 24);
                  unint64_t v79 = v76;
                  do
                  {
                    long long v16 = *(_OWORD *)(v79 - 16);
                    *(_OWORD *)unint64_t v79 = v16;
                    uint64_t v80 = *(void *)(v79 - 32);
                    v79 -= 16;
                  }
                  while (v77 < v80);
                  *(void *)unint64_t v79 = v77;
                  *(void *)(v79 + 8) = v78;
                }
                v38 = (void *)(v76 + 16);
                a1 = v76;
              }
              while ((void *)(v76 + 16) != a2);
            }
            return *(double *)&v16;
          }
          if (!a3)
          {
            if ((void *)v11 != a2)
            {
              int64_t v49 = (v13 - 2) >> 1;
              int64_t v50 = v49;
              do
              {
                int64_t v51 = v50;
                if (v49 >= v50)
                {
                  uint64_t v52 = (2 * v50) | 1;
                  int64_t v53 = (void *)(v11 + 16 * v52);
                  if (2 * v51 + 2 < (uint64_t)v13)
                  {
                    uint64_t v55 = v53[2];
                    BOOL v54 = *v53 < v55;
                    if (*v53 > v55) {
                      uint64_t v55 = *v53;
                    }
                    if (v54)
                    {
                      v53 += 2;
                      uint64_t v52 = 2 * v51 + 2;
                    }
                  }
                  else
                  {
                    uint64_t v55 = *v53;
                  }
                  v56 = (void *)(v11 + 16 * v51);
                  uint64_t v57 = *v56;
                  if (v55 >= *v56)
                  {
                    uint64_t v58 = v56[1];
                    do
                    {
                      BOOL v59 = v56;
                      v56 = v53;
                      *BOOL v59 = *(_OWORD *)v53;
                      if (v49 < v52) {
                        break;
                      }
                      uint64_t v60 = (2 * v52) | 1;
                      int64_t v53 = (void *)(v11 + 16 * v60);
                      uint64_t v52 = 2 * v52 + 2;
                      if (v52 < (uint64_t)v13)
                      {
                        uint64_t v63 = *v53;
                        uint64_t v61 = v53[2];
                        BOOL v62 = *v53 < v61;
                        if (*v53 <= v61) {
                          uint64_t v63 = v53[2];
                        }
                        if (*v53 < v61) {
                          v53 += 2;
                        }
                        if (!v62) {
                          uint64_t v52 = v60;
                        }
                      }
                      else
                      {
                        uint64_t v63 = *v53;
                        uint64_t v52 = v60;
                      }
                    }
                    while (v63 >= v57);
                    void *v56 = v57;
                    v56[1] = v58;
                  }
                }
                int64_t v50 = v51 - 1;
              }
              while (v51);
              uint64_t v64 = (unint64_t)v12 >> 4;
              do
              {
                uint64_t v65 = 0;
                long long v85 = *(_OWORD *)v11;
                v66 = (_OWORD *)v11;
                do
                {
                  uint64_t v67 = &v66[v65 + 1];
                  uint64_t v68 = (2 * v65) | 1;
                  uint64_t v69 = 2 * v65 + 2;
                  if (v69 < v64 && *v67 < v67[2])
                  {
                    v67 += 2;
                    uint64_t v68 = v69;
                  }
                  _OWORD *v66 = *(_OWORD *)v67;
                  v66 = v67;
                  uint64_t v65 = v68;
                }
                while (v68 <= (uint64_t)((unint64_t)(v64 - 2) >> 1));
                a2 -= 2;
                if (v67 == a2)
                {
                  *(void *)&long long v16 = v85;
                  *(_OWORD *)uint64_t v67 = v85;
                }
                else
                {
                  *(_OWORD *)uint64_t v67 = *(_OWORD *)a2;
                  *(void *)&long long v16 = v85;
                  *(_OWORD *)a2 = v85;
                  uint64_t v70 = (uint64_t)v67 - v11 + 16;
                  if (v70 >= 17)
                  {
                    unint64_t v71 = (((unint64_t)v70 >> 4) - 2) >> 1;
                    uint64_t v72 = (_OWORD *)(v11 + 16 * v71);
                    uint64_t v73 = *v67;
                    if (*(void *)v72 < *v67)
                    {
                      uint64_t v74 = v67[1];
                      do
                      {
                        uint64_t v75 = v67;
                        uint64_t v67 = v72;
                        long long v16 = *v72;
                        *uint64_t v75 = *v72;
                        if (!v71) {
                          break;
                        }
                        unint64_t v71 = (v71 - 1) >> 1;
                        uint64_t v72 = (_OWORD *)(v11 + 16 * v71);
                      }
                      while (*(void *)v72 < v73);
                      *uint64_t v67 = v73;
                      v67[1] = v74;
                    }
                  }
                }
                BOOL v54 = v64-- <= 2;
              }
              while (!v54);
            }
            return *(double *)&v16;
          }
          unint64_t v14 = v13 >> 1;
          BOOL v15 = (uint64_t *)(v11 + 16 * (v13 >> 1));
          if ((unint64_t)v12 >= 0x801)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16 * (v13 >> 1)), a2 - 2);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 16), v15 - 2, a2 - 4);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 32), (uint64_t *)(a1 + 16 + 16 * v14), a2 - 6);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v15 - 1, v15, (uint64_t *)(a1 + 16 + 16 * v14));
            long long v82 = *(_OWORD *)a1;
            *(_OWORD *)a1 = *(_OWORD *)v15;
            *(void *)&long long v16 = v82;
            *(_OWORD *)BOOL v15 = v82;
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 16 * (v13 >> 1)), (uint64_t *)a1, a2 - 2);
          }
          --a3;
          uint64_t v17 = *(void *)a1;
          if ((a4 & 1) != 0 || *(void *)(a1 - 16) < v17) {
            break;
          }
          if (v17 >= *(void *)v10)
          {
            unint64_t v31 = a1 + 16;
            do
            {
              unint64_t v11 = v31;
              if (v31 >= (unint64_t)a2) {
                break;
              }
              v31 += 16;
            }
            while (v17 >= *(void *)v11);
          }
          else
          {
            unint64_t v11 = a1;
            do
            {
              uint64_t v30 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v17 >= v30);
          }
          v32 = (long long *)a2;
          if (v11 < (unint64_t)a2)
          {
            v32 = (long long *)a2;
            do
              uint64_t v33 = *((void *)v32-- - 2);
            while (v17 < v33);
          }
          uint64_t v34 = *(void *)(a1 + 8);
          while (v11 < (unint64_t)v32)
          {
            long long v83 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *v32;
            *(void *)&long long v16 = v83;
            long long *v32 = v83;
            do
            {
              uint64_t v35 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v17 >= v35);
            do
              uint64_t v36 = *((void *)v32-- - 2);
            while (v17 < v36);
          }
          long long v37 = (long long *)(v11 - 16);
          BOOL v4 = v11 - 16 >= a1;
          BOOL v5 = v11 - 16 == a1;
          if (v11 - 16 != a1)
          {
            long long v16 = *v37;
            *(_OWORD *)a1 = *v37;
          }
          a4 = 0;
          *(void *)(v11 - 16) = v17;
          *(void *)(v11 - 8) = v34;
        }
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = a1;
        do
        {
          unint64_t v20 = v19;
          uint64_t v21 = *(void *)(v19 + 16);
          v19 += 16;
        }
        while (v21 < v17);
        uint64_t v22 = (long long *)a2;
        if (v20 == a1)
        {
          uint64_t v22 = (long long *)a2;
          do
          {
            if (v19 >= (unint64_t)v22) {
              break;
            }
            uint64_t v24 = *((void *)v22-- - 2);
          }
          while (v24 >= v17);
        }
        else
        {
          do
            uint64_t v23 = *((void *)v22-- - 2);
          while (v23 >= v17);
        }
        unint64_t v11 = v19;
        if (v19 < (unint64_t)v22)
        {
          unint64_t v25 = v22;
          do
          {
            long long v26 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *v25;
            *unint64_t v25 = v26;
            do
            {
              uint64_t v27 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v27 < v17);
            do
              uint64_t v28 = *((void *)v25-- - 2);
            while (v28 >= v17);
          }
          while (v11 < (unint64_t)v25);
        }
        if (v11 - 16 != a1) {
          *(_OWORD *)a1 = *(_OWORD *)(v11 - 16);
        }
        *(void *)(v11 - 16) = v17;
        *(void *)(v11 - 8) = v18;
        if (v19 >= (unint64_t)v22) {
          break;
        }
LABEL_30:
        std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*,false>(a1, v11 - 16, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v29 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, (void *)(v11 - 16));
      if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(v11, a2))
      {
        break;
      }
      if (!v29) {
        goto LABEL_30;
      }
    }
    a2 = (void *)(v11 - 16);
    if (!v29) {
      continue;
    }
    return *(double *)&v16;
  }
}

uint64_t **google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(uint64_t **a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t *)(*a1)[2];
  if (v3) {
    goto LABEL_2;
  }
  long long v16 = 0;
  BOOL v4 = a1[1];
  uint64_t v5 = (unint64_t)a1[2] & (v4[1] - 1);
  a1[2] = (uint64_t *)v5;
  uint64_t v6 = v4[4];
  uint64_t v7 = *(uint64_t **)(v6 + 8 * v5);
  if (v7 == v2) {
    goto LABEL_11;
  }
  if (v7 && v7 != *(uint64_t **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      uint64_t v7 = (uint64_t *)v7[2];
      if (!v7) {
        break;
      }
      if (v7 == v2) {
        goto LABEL_11;
      }
    }
  }
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v17, v4, v2, &v16);
  uint64_t v5 = v18;
  a1[2] = (uint64_t *)v18;
  uint64_t v8 = a1[1][4];
  uint64_t v9 = *(void *)(v8 + 8 * v5);
  if (!v9 || v9 != *(void *)(v8 + 8 * (v5 ^ 1)))
  {
LABEL_11:
    unint64_t v10 = v5 + 1;
LABEL_12:
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a1, v10);
    return a1;
  }
  uint64_t v12 = v16;
  unint64_t v13 = (void *)v16[1];
  if (v13)
  {
    do
    {
      unint64_t v14 = v13;
      unint64_t v13 = (void *)*v13;
    }
    while (v13);
  }
  else
  {
    do
    {
      unint64_t v14 = (void *)v12[2];
      BOOL v15 = *v14 == (void)v12;
      uint64_t v12 = v14;
    }
    while (!v15);
  }
  long long v16 = v14;
  if (v14 == (void *)(v9 + 8))
  {
    unint64_t v10 = v5 + 2;
    goto LABEL_12;
  }
  uint64_t v3 = (uint64_t *)v14[4];
LABEL_2:
  *a1 = v3;
  return a1;
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[3] = 0;
  result[4] = this;
  result[1] = 0;
  result[2] = 0;
  *__n128 result = (google::protobuf::Arena *)&unk_1F3627838;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::StringVector::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

unsigned char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  unint64_t v5 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 8;
  uint64_t v6 = a3 + 1;
  if (v5 < 0x80)
  {
    LOBYTE(v7) = v5;
  }
  else
  {
    do
    {
      *v6++ = v5 | 0x80;
      unint64_t v7 = v5 >> 7;
      unint64_t v8 = v5 >> 14;
      v5 >>= 7;
    }
    while (v8);
  }
  *uint64_t v6 = v7;
  uint64_t v9 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  v6[1] = 17;
  *(void *)(v6 + 2) = v9;
  return v6 + 10;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    int v3 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_5:
    int v4 = 0;
    return (v4 + v3);
  }
  int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_5;
  }
LABEL_3:
  (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v4 = 9;
  return (v4 + v3);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteInt64(1, *v4, a2, v5);
  double v7 = *(double *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, v6);
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    unint64_t v3 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v4 = 0;
    return v4 + v3;
  }
  unint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_5;
  }
LABEL_3:
  (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v4 = 9;
  return v4 + v3;
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1))
      {
        LODWORD(TagFallback) = 0;
      }
      else
      {
        unint64_t TagFallback = *v5;
        if ((*v5 & 0x80000000) == 0)
        {
          *(void *)this = v5 + 1;
          goto LABEL_6;
        }
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
      if (TagFallback == 8) {
        break;
      }
      if (TagFallback == 17)
      {
        int v12 = *(_DWORD *)(a1 + 40);
        unint64_t v13 = *(unint64_t **)this;
        unint64_t v8 = *((void *)this + 1);
        goto LABEL_21;
      }
      if (!TagFallback || (TagFallback & 7) == 4) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v7 = *(_DWORD *)(a1 + 40) | 1;
    *(_DWORD *)(a1 + 4CoreML::Specification::StringVector::New(this, 0) = v7;
    uint64_t v9 = *(char **)this;
    unint64_t v8 = *((void *)this + 1);
    if (*(void *)this >= v8 || *v9 < 0)
    {
      unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
      if ((v14 & 1) == 0) {
        return 0;
      }
      int v7 = *(_DWORD *)(a1 + 40);
      unint64_t v11 = *(char **)this;
      unint64_t v8 = *((void *)this + 1);
    }
    else
    {
      unint64_t Varint64Fallback = *v9;
      unint64_t v11 = v9 + 1;
      *(void *)this = v11;
    }
    *(void *)(a1 + 16) = Varint64Fallback;
    int v12 = v7 | 1;
    *(_DWORD *)(a1 + 4CoreML::Specification::StringVector::New(this, 0) = v7 | 1;
    if ((unint64_t)v11 < v8 && *v11 == 17)
    {
      unint64_t v13 = (unint64_t *)(v11 + 1);
      *(void *)this = v11 + 1;
LABEL_21:
      int v15 = v12 | 2;
      *(_DWORD *)(a1 + 4CoreML::Specification::StringVector::New(this, 0) = v12 | 2;
      unint64_t v20 = 0;
      if ((int)v8 - (int)v13 < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)this, &v20);
        if (!result) {
          return result;
        }
        unint64_t v18 = v20;
        int v15 = *(_DWORD *)(a1 + 40);
        long long v16 = *(char **)this;
        unint64_t v8 = *((void *)this + 1);
      }
      else
      {
        unint64_t v17 = *v13;
        long long v16 = (char *)(v13 + 1);
        unint64_t v18 = v17;
        *(void *)this = v16;
      }
      *(void *)(a1 + 24) = v18;
      *(_DWORD *)(a1 + 4CoreML::Specification::StringVector::New(this, 0) = v15 | 2;
      if (v16 == (char *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))) {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  BOOL result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    if (v2)
    {
      *(void *)(a1 + 16) = *(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      *(_DWORD *)(a1 + 40) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v6 = (double *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      double result = *v6;
      *(double *)(a1 + 24) = *v6;
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Clear(uint64_t result)
{
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  *((_DWORD *)result + 1CoreML::Specification::StringVector::New(this, 0) = 0;
  result[3] = 0;
  result[4] = this;
  result[1] = 0;
  result[2] = 0;
  unint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *double result = (google::protobuf::Arena *)&unk_1F3628018;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1F36278E0;
  JUMPOUT(0x1E0198C00);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return a1 + 24;
}

void sub_1DC0C7FC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::key(uint64_t a1)
{
  return a1 + 16;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F36278E0;
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(void *result)
{
  *double result = &unk_1F36278E0;
  return result;
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(void *result)
{
  *double result = &unk_1F36278E0;
  return result;
}

long long *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(long long *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *a3;
  if (*a2 >= *(void *)result)
  {
    if (v4 < v3)
    {
      long long v6 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)a3 = v6;
      if (*a2 < *(void *)result)
      {
        long long v7 = *result;
        *double result = *(_OWORD *)a2;
        *(_OWORD *)a2 = v7;
      }
    }
  }
  else
  {
    if (v4 >= v3)
    {
      long long v8 = *result;
      *double result = *(_OWORD *)a2;
      *(_OWORD *)a2 = v8;
      if (*a3 >= *a2) {
        return result;
      }
      long long v5 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
    }
    else
    {
      long long v5 = *result;
      *double result = *(_OWORD *)a3;
    }
    *(_OWORD *)a3 = v5;
  }
  return result;
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(long long *a1, uint64_t *a2, uint64_t *a3, _OWORD *a4)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, a2, a3);
  if (*(void *)a4 < *a3)
  {
    __n128 result = *(__n128 *)a3;
    *(_OWORD *)a3 = *a4;
    *a4 = result;
    if (*a3 < *a2)
    {
      __n128 result = *(__n128 *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(__n128 *)a3 = result;
      if (*a2 < *(void *)a1)
      {
        __n128 result = (__n128)*a1;
        *a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

__n128 std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(long long *a1, uint64_t *a2, uint64_t *a3, __n128 *a4, __n128 *a5)
{
  result.n128_u64[0] = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, a2, a3, a4).n128_u64[0];
  if ((int64_t)a5->n128_u64[0] < (int64_t)a4->n128_u64[0])
  {
    __n128 result = *a4;
    *a4 = *a5;
    *a5 = result;
    if ((int64_t)a4->n128_u64[0] < *a3)
    {
      __n128 result = *(__n128 *)a3;
      *(__n128 *)a3 = *a4;
      *a4 = result;
      if (*a3 < *a2)
      {
        __n128 result = *(__n128 *)a2;
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(__n128 *)a3 = result;
        if (*a2 < *(void *)a1)
        {
          __n128 result = (__n128)*a1;
          *a1 = *(_OWORD *)a2;
          *(__n128 *)a2 = result;
        }
      }
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(uint64_t a1, void *a2)
{
  uint64_t v4 = ((uint64_t)a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      long long v6 = (long long *)(a2 - 2);
      if (*(a2 - 2) < *(void *)a1)
      {
        long long v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        *long long v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (_OWORD *)a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (__n128 *)(a1 + 48), (__n128 *)a2 - 1);
      return 1;
    default:
      long long v8 = (void *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32));
      uint64_t v9 = (void *)(a1 + 48);
      if ((void *)(a1 + 48) == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    if (*v9 < *v8)
    {
      uint64_t v13 = v9[1];
      uint64_t v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 48) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32) {
          break;
        }
        uint64_t v15 = *(void *)(a1 + v14 + 16);
        v14 -= 16;
        if (v12 >= v15)
        {
          long long v16 = (void *)(a1 + v14 + 48);
          goto LABEL_12;
        }
      }
      long long v16 = (void *)a1;
LABEL_12:
      void *v16 = v12;
      v16[1] = v13;
      if (++v11 == 8) {
        return v9 + 2 == a2;
      }
    }
    long long v8 = v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::Int64ToDoubleMap::ByteSizeLong(CoreML::Specification::Int64ToDoubleMap *this)
{
  int v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v8, v2);
  uint64_t v4 = 0;
  while (v8[0])
  {
    long long v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((google::protobuf::Arena **)v8[0] + 1), (google::protobuf::Arena *)(v8[0][1] + 8), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    unint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v8);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_1DC0C8504(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::Int64ToDoubleMap::MergePartialFromCodedStream(CoreML::Specification::Int64ToDoubleMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  long long v5 = (google::protobuf::Arena **)((char *)this + 16);
  unint64_t v6 = (char *)this + 24;
  while (1)
  {
    long long v7 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v8) = 0;
    }
    else
    {
      uint64_t v8 = *v7;
      if (*v7 >= 1)
      {
        *(void *)a2 = v7 + 1;
        unint64_t v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
    unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v9 & 0x100000000) == 0) {
      goto LABEL_12;
    }
LABEL_8:
    if (v9 == 10 && (v9 & 0xFFFFFFF8) == 8)
    {
      v42[0] = v5;
      v42[1] = v6;
      uint64_t v44 = 0;
      uint64_t v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        int VarintSizeAsIntFallback = *v14;
        *(void *)a2 = v14 + 1;
        goto LABEL_24;
      }
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        goto LABEL_63;
      }
LABEL_24:
      int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v17 = *((_DWORD *)a2 + 13);
      BOOL v18 = __OFSUB__(v17--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = v17;
      if (v17 < 0 != v18) {
        goto LABEL_63;
      }
      int v19 = v16;
      uint64_t v21 = *(char **)a2;
      unint64_t v20 = *((void *)a2 + 1);
      if (*(void *)a2 < v20 && *v21 == 8)
      {
        *(void *)a2 = v21 + 1;
        if ((unint64_t)(v21 + 1) >= v20 || v21[1] < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if (v25)
          {
            unint64_t v22 = Varint64Fallback;
            uint64_t v23 = *(char **)a2;
            unint64_t v20 = *((void *)a2 + 1);
            goto LABEL_33;
          }
          goto LABEL_63;
        }
        unint64_t v22 = v21[1];
        uint64_t v23 = v21 + 2;
        *(void *)a2 = v23;
LABEL_33:
        v43[0] = (google::protobuf::Arena *)v22;
        if ((int)v20 - (int)v23 >= 1 && *v23 == 17)
        {
          uint64_t v26 = **((void **)this + 5);
          uint64_t v27 = google::protobuf::Map<long long,double>::operator[]((uint64_t)v6, v43);
          v43[1] = (google::protobuf::Arena *)v27;
          if (v26 != **((void **)this + 5))
          {
            google::protobuf::io::CodedInputStream::Skip(a2, 1u);
            unint64_t v45 = 0;
            uint64_t v28 = *(unint64_t **)a2;
            BOOL v29 = (char *)*((void *)a2 + 1);
            if ((int)(v29 - *(void *)a2) < 8)
            {
              if (google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v45))
              {
                unint64_t v32 = v45;
                uint64_t v30 = *(char **)a2;
                BOOL v29 = (char *)*((void *)a2 + 1);
                goto LABEL_38;
              }
              google::protobuf::Map<long long,double>::erase((uint64_t)v6, (uint64_t *)v43);
              goto LABEL_63;
            }
            unint64_t v31 = *v28;
            uint64_t v30 = (char *)(v28 + 1);
            unint64_t v32 = v31;
            *(void *)a2 = v30;
LABEL_38:
            char *v27 = (google::protobuf::Arena *)v32;
            if (v30 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              *((unsigned char *)a2 + 36) = 1;
              goto LABEL_57;
            }
            uint64_t v33 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v5);
            if (v33)
            {
              uint64_t v44 = v33;
              uint64_t v34 = v33;
            }
            else
            {
              uint64_t v34 = 0;
            }
            *((_DWORD *)v33 + 10) |= 2u;
            v33[3] = *v27;
            double v38 = google::protobuf::Map<long long,double>::erase((uint64_t)v6, (uint64_t *)v43);
            *((_DWORD *)v34 + 10) |= 1u;
            v34[2] = (google::protobuf::Arena *)v22;
            int v37 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *, double))*v34
                   + 11))(v34, a2, v38);
            if (v37)
            {
              google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry((uint64_t)v42);
              uint64_t v34 = v44;
            }
            if (!(*((uint64_t (**)(google::protobuf::Arena **))*v34 + 5))(v34))
            {
LABEL_56:
              if (v37) {
                goto LABEL_57;
              }
LABEL_63:
              BOOL v40 = 0;
              int v13 = 6;
LABEL_64:
              if (v44) {
                (*((void (**)(google::protobuf::Arena **))*v44 + 1))(v44);
              }
              if (!v40) {
                goto LABEL_18;
              }
              goto LABEL_17;
            }
LABEL_47:
            uint64_t v44 = 0;
            if ((v37 & 1) == 0) {
              return 0;
            }
LABEL_57:
            BOOL v39 = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v19);
            BOOL v40 = v39;
            if (v39) {
              int v13 = 0;
            }
            else {
              int v13 = 6;
            }
            goto LABEL_64;
          }
        }
      }
      else
      {
        unint64_t v22 = 0;
        v43[0] = 0;
      }
      uint64_t v35 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v5);
      if (v35)
      {
        uint64_t v44 = v35;
        uint64_t v36 = v35;
      }
      else
      {
        uint64_t v36 = 0;
      }
      *((_DWORD *)v35 + 10) |= 1u;
      v35[2] = (google::protobuf::Arena *)v22;
      int v37 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v35 + 11))(v35, a2);
      if (v37)
      {
        google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry((uint64_t)v42);
        uint64_t v36 = v44;
      }
      if (!(*((uint64_t (**)(google::protobuf::Arena **))*v36 + 5))(v36)) {
        goto LABEL_56;
      }
      goto LABEL_47;
    }
LABEL_12:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3))return 0; {
LABEL_17:
    }
    int v13 = 0;
LABEL_18:
    if (v13) {
      return 0;
    }
  }
}

void sub_1DC0C8978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8))(a13);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::Arena **google::protobuf::Map<long long,double>::operator[](uint64_t a1, google::protobuf::Arena **a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  long long v19 = (unint64_t)*a2;
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(v21, v4, (uint64_t *)&v19, 0);
  uint64_t v6 = v21[0];
  if (v21[0]) {
    goto LABEL_12;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v16 = 2 * v7;
LABEL_25:
      google::protobuf::Map<long long,double>::InnerMap::Resize((uint64_t)v4, v16, v5);
      google::protobuf::Map<long long,double>::InnerMap::FindHelper(v20, v4, (uint64_t *)&v19, 0);
      uint64_t v11 = v20[3];
      goto LABEL_8;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v17 = 0;
    unint64_t v18 = ((5 * v8) >> 2) + 1;
    do
      ++v17;
    while (v18 << v17 < v9);
    uint64_t v16 = v7 >> v17 <= 8 ? 8 : v7 >> v17;
    if (v16 != v7) {
      goto LABEL_25;
    }
  }
  uint64_t v11 = v21[3];
LABEL_8:
  uint64_t v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (uint64_t *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 24);
  }
  else {
    Aligned = (uint64_t *)operator new(0x18uLL);
  }
  *(_OWORD *)Aligned = v19;
  google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v20, (uint64_t)v4, v11, Aligned);
  ++*v4;
  uint64_t v6 = v20[0];
LABEL_12:
  uint64_t v14 = *(google::protobuf::Arena ***)(v6 + 8);
  if (!v14)
  {
    if (!*(void *)a1) {
      operator new();
    }
    uint64_t v14 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 16);
    char *v14 = 0;
    v14[1] = 0;
    char *v14 = *a2;
    *(void *)(v6 + 8) = v14;
  }
  return v14 + 1;
}

double google::protobuf::Map<long long,double>::erase(uint64_t a1, uint64_t *a2)
{
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v6, *(void **)(a1 + 16), a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<long long,double>::erase((uint64_t)&v6, (void *)a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  *((_DWORD *)result + 1CoreML::Specification::StringVector::New(this, 0) = 0;
  result[3] = 0;
  result[4] = a1;
  result[1] = 0;
  result[2] = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3628018;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  *(void *)(a1 + 16) = *(void *)(*(uint64_t (**)(void))(**(void **)(a1 + 32) + 136))(*(void *)(a1 + 32));
  int v2 = google::protobuf::Map<long long,double>::operator[](*(void *)(a1 + 8), (google::protobuf::Arena **)(a1 + 16));
  *(void *)(a1 + 24) = v2;
  uint64_t v3 = *(void *)(a1 + 32);
  *(_DWORD *)(v3 + 40) |= 2u;
  double result = *(double *)(v3 + 24);
  *(double *)int v2 = result;
  return result;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  long long v4 = a4;
  unint64_t v5 = a3;
  uint64_t v7 = result;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(v8 + 8 * a3);
  if (!v9)
  {
    a4[2] = 0;
    *(void *)(v8 + 8 * agoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a3 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a3);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 16);
    }
    while (v11);
    if (v10 < 8)
    {
      a4[2] = v9;
      *(void *)(v8 + 8 * agoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = a4;
LABEL_11:
      void *v7 = v4;
      v7[1] = a2;
      v7[2] = v5;
      return result;
    }
    google::protobuf::Map<long long,double>::InnerMap::TreeConvert(a2, a3);
    v4[2] = 0;
    uint64_t v14 = *(void *)(*(void *)(a2 + 32) + 8 * v5);
    uint64_t v15 = v4;
    double result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v14, v4, (uint64_t *)&v15);
    v5 &= ~1uLL;
    long long v4 = (uint64_t *)result[4];
LABEL_8:
    unint64_t v12 = *(void *)(a2 + 24);
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    *(void *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  a4[2] = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a3);
  uint64_t v15 = a4;
  double result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v13, a4, (uint64_t *)&v15);
  void *v7 = result[4];
  v7[1] = a2;
  v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  long long v4 = *(google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x1E4FBA3A0], 32);
  }
  else {
    Aligned = operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  uint64_t v25 = *(void *)(a1 + 40);
  uint64_t v7 = v25;
  uint64_t v26 = 0;
  uint64_t v23 = &v24;
  uint64_t v24 = 0;
  Aligned[1] = 0;
  uint64_t v8 = (uint64_t **)(Aligned + 1);
  Aligned[2] = v7;
  Aligned[3] = 0;
  void *Aligned = Aligned + 1;
  uint64_t v9 = v23;
  if (v23 != &v24)
  {
    do
    {
      unint64_t v10 = *(uint64_t **)(v6 + 8);
      uint64_t v11 = v8;
      if (*(uint64_t ***)v6 == v8) {
        goto LABEL_11;
      }
      uint64_t v12 = *(void *)(v6 + 8);
      uint64_t v13 = v8;
      if (v10)
      {
        do
        {
          uint64_t v11 = (uint64_t **)v12;
          uint64_t v12 = *(void *)(v12 + 8);
        }
        while (v12);
      }
      else
      {
        do
        {
          uint64_t v11 = (uint64_t **)v13[2];
          BOOL v14 = *v11 == (uint64_t *)v13;
          uint64_t v13 = v11;
        }
        while (v14);
      }
      uint64_t v15 = *v9[4];
      if (*v11[4] < v15)
      {
LABEL_11:
        if (v10) {
          uint64_t v16 = v11;
        }
        else {
          uint64_t v16 = v8;
        }
        if (v10) {
          char v17 = v11 + 1;
        }
        else {
          char v17 = v8;
        }
      }
      else
      {
        uint64_t v16 = v8;
        char v17 = v8;
        if (v10)
        {
          char v17 = v8;
          while (1)
          {
            while (1)
            {
              uint64_t v16 = (uint64_t **)v10;
              uint64_t v21 = *(void *)v10[4];
              if (v15 >= v21) {
                break;
              }
              unint64_t v10 = *v16;
              char v17 = v16;
              if (!*v16) {
                goto LABEL_18;
              }
            }
            if (v21 >= v15) {
              break;
            }
            char v17 = v16 + 1;
            unint64_t v10 = v16[1];
            if (!v10) {
              goto LABEL_18;
            }
          }
        }
      }
      if (!*v17)
      {
LABEL_18:
        unint64_t v18 = (uint64_t *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(v6 + 16));
        v18[4] = (uint64_t)v9[4];
        std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)v6, (uint64_t)v16, v17, v18);
      }
      long long v19 = v9[1];
      if (v19)
      {
        do
        {
          unint64_t v20 = (void **)v19;
          long long v19 = (void *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          unint64_t v20 = (void **)v9[2];
          BOOL v14 = *v20 == v9;
          uint64_t v9 = v20;
        }
        while (!v14);
      }
      uint64_t v9 = v20;
    }
    while (v20 != &v24);
  }
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&v23, v24);
  google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, v6);
  double result = google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_1DC0C8FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(v10, *(void **)(v10 + 8));
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = (uint64_t **)(a1 + 8);
  unint64_t v5 = *(uint64_t **)(a1 + 8);
  if (v5)
  {
    uint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        uint64_t v9 = *(void *)v5[4];
        if (v7 >= v9) {
          break;
        }
        unint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      unint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = (uint64_t **)(a1 + 8);
LABEL_10:
    uint64_t v10 = (uint64_t *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(a1 + 16));
    v10[4] = *a3;
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (uint64_t *)result[a2];
  if (v3)
  {
    do
    {
      uint64_t v6 = v3;
      double result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(a3, v3, (uint64_t *)&v6);
      unint64_t v5 = (uint64_t *)v3[2];
      void v3[2] = 0;
      uint64_t v3 = v5;
    }
    while (v5);
  }
  return result;
}

void google::protobuf::Map<long long,double>::InnerMap::Resize(uint64_t a1, uint64_t a2, size_t a3)
{
  unint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2;
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(*(google::protobuf::Arena **)(a1 + 40), a2, a3);
  bzero(v7, 8 * a2);
  unint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a1 + 8);
  *(void *)(a1 + 32) = v7;
  while (v8 < v5)
  {
    uint64_t v9 = v6[v8];
    if (v9)
    {
      if (v9 == v6[v8 ^ 1])
      {
        uint64_t v11 = *(void **)v9;
        do
        {
          google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v15, a1, (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + *(void *)v11[4]), (uint64_t *)v11[4]);
          uint64_t v12 = (void *)v11[1];
          if (v12)
          {
            do
            {
              uint64_t v13 = v12;
              uint64_t v12 = (void *)*v12;
            }
            while (v12);
          }
          else
          {
            do
            {
              uint64_t v13 = (void *)v11[2];
              BOOL v14 = *v13 == (void)v11;
              uint64_t v11 = v13;
            }
            while (!v14);
          }
          uint64_t v11 = v13;
        }
        while (v13 != (void *)(v9 + 8));
        ++v8;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(*(void *)(a1 + 40), (void **)v9);
      }
      else
      {
        do
        {
          uint64_t v10 = *(void *)(v9 + 16);
          google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v15, a1, (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + *(void *)v9), (uint64_t *)v9);
          uint64_t v9 = v10;
        }
        while (v10);
      }
    }
    ++v8;
  }
  if (!*(void *)(a1 + 40))
  {
    operator delete(v6);
  }
}

void *CoreML::Specification::Int64ToDoubleMap::MergeFrom(CoreML::Specification::Int64ToDoubleMap *this, const CoreML::Specification::Int64ToDoubleMap *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double result = google::protobuf::Map<std::string,std::string>::begin(v10, *((void **)a2 + 5));
  uint64_t v6 = v10[0];
  if (v10[0])
  {
    uint64_t v7 = (char *)this + 24;
    do
    {
      unint64_t v8 = (google::protobuf::Arena **)v6[1];
      uint64_t v9 = v8[1];
      *google::protobuf::Map<long long,double>::operator[]((uint64_t)v7, v8) = v9;
      double result = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v10);
      uint64_t v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

uint64_t CoreML::Specification::Int64ToDoubleMap::IsInitialized(CoreML::Specification::Int64ToDoubleMap *this)
{
  return 1;
}

void CoreML::Specification::Int64ToDoubleMap::Clear(CoreML::Specification::Int64ToDoubleMap *this)
{
}

void CoreML::Specification::Int64ToDoubleMap::New(CoreML::Specification::Int64ToDoubleMap *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0C9348(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64ToDoubleMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToDoubleMap>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToDoubleMap>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64ToDoubleMap::New(CoreML::Specification::Int64ToDoubleMap *this)
{
}

void *CoreML::Specification::Int64ToDoubleMap::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64ToDoubleMap");
}

void CoreML::Specification::Int64ToDoubleMap::~Int64ToDoubleMap(CoreML::Specification::Int64ToDoubleMap *this)
{
  *(void *)this = &unk_1F361D610;
  google::protobuf::Map<long long,double>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361D610;
  google::protobuf::Map<long long,double>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1F36278E0;
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(void *result)
{
  *double result = &unk_1F36278E0;
  return result;
}

void *google::protobuf::Map<std::string,double>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  uint64_t v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  uint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + google::protobuf::Map<long long,double>::clear((void *)this + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0C95E0(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0C959CLL);
}

uint64_t CoreML::Specification::StringToDoubleMap::GetCachedSize(CoreML::Specification::StringToDoubleMap *this)
{
  return *((unsigned int *)this + 12);
}

void *CoreML::Specification::StringToDoubleMap::SerializeWithCachedSizes(void *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = (unint64_t *)this[5];
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (uint64_t)this;
    if (*((unsigned char *)a2 + 26))
    {
      if (v4 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_24;
      }
    }
    else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_24:
      operator new[]();
    }
    this = google::protobuf::Map<std::string,std::string>::begin(v12, v3);
    uint64_t v7 = 0;
    while (v12[0])
    {
      size_t v8 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((google::protobuf::Arena **)v12[0] + 3), (google::protobuf::Arena *)(*((void *)v12[0] + 3) + 24), *(google::protobuf::Arena **)(v5 + 16));
      if ((google::protobuf::Arena **)v7 != v8)
      {
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        uint64_t v7 = (uint64_t)v8;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v7, a2);
      uint64_t v9 = (unsigned int *)*((void *)v12[0] + 3);
      if (*((char *)v9 + 23) < 0)
      {
        uint64_t v9 = *(unsigned int **)v9;
        uint64_t v10 = *(void *)(*((void *)v12[0] + 3) + 8);
      }
      else
      {
        LODWORD(v1CoreML::Specification::Int64ToDoubleMap::New(this, 0) = *((unsigned __int8 *)v9 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.StringToDoubleMap.MapEntry.key");
      this = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v12);
    }
    if (v7) {
      return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  return this;
}

void sub_1DC0C98D0(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  size_t v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    v91 = a2 - 24;
    v92 = a2 - 16;
    uint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                uint64_t v41 = *(void **)v95;
                v42 = *(void **)v9;
                double result = std::less<std::string>::operator()[abi:ne180100](*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)uint64_t v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                double result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                double result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                double result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                uint64_t v47 = v9;
                do
                {
                  int64_t v49 = *(void **)v47;
                  v48 = (void *)*((void *)v47 + 1);
                  uint64_t v47 = v43;
                  double result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      int64_t v49 = *(void **)&v9[v50 - 8];
                      double result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        int64_t v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    int64_t v51 = v9;
LABEL_80:
                    *(void *)int64_t v51 = v48;
                  }
                  v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                double result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                if (result)
                {
                  v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    double result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    uint64_t v58 = *(void **)v56;
                    uint64_t v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      uint64_t v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void **)v56;
                  }
                  uint64_t v61 = &v98[8 * v54];
                  BOOL v62 = *(void **)v61;
                  double result = std::less<std::string>::operator()[abi:ne180100](v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      uint64_t v63 = v56;
                      *(void *)uint64_t v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        uint64_t v60 = *(void **)v56;
                        v66 = (void *)*((void *)v56 + 1);
                        if (std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v66))
                        {
                          uint64_t v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        uint64_t v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      double result = std::less<std::string>::operator()[abi:ne180100](v60, v62);
                      uint64_t v61 = v63;
                    }
                    while (!result);
                    *(void *)uint64_t v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              uint64_t v68 = v98;
              do
              {
                uint64_t v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    uint64_t v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    unint64_t v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    double result = std::less<std::string>::operator()[abi:ne180100](*(void **)v73, v77);
                    if (result) {
                      uint64_t v78 = v77;
                    }
                    else {
                      uint64_t v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)uint64_t v68 = v78;
                  uint64_t v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    v81 = &v98[8 * v80];
                    long long v82 = *(void **)v81;
                    long long v83 = *(void **)v73;
                    double result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        long long v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        v81 = &v98[8 * v80];
                        long long v82 = *(void **)v81;
                        double result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)long long v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                uint64_t v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          BOOL v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            uint64_t v15 = *(void **)v9;
            *(void *)uint64_t v9 = *(void *)v14;
            *(void *)BOOL v14 = v15;
          }
          --a3;
          uint64_t v16 = *(void **)v9;
          char v17 = v9;
          if (a4) {
            break;
          }
          char v17 = v9;
          if (std::less<std::string>::operator()[abi:ne180100](*((void **)v9 - 1), *(void **)v9)) {
            break;
          }
          double result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v95);
          if (result)
          {
            do
            {
              unint64_t v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              double result = std::less<std::string>::operator()[abi:ne180100](v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            unint64_t v32 = v9 + 8;
            do
            {
              uint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              double result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v9);
            }
            while (!result);
          }
          uint64_t v33 = a2;
          if (v9 < a2)
          {
            uint64_t v33 = a2;
            do
            {
              uint64_t v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              double result = std::less<std::string>::operator()[abi:ne180100](v16, v34);
            }
            while ((result & 1) != 0);
          }
          uint64_t v35 = a2;
          if (v9 < v33)
          {
            uint64_t v36 = *(void **)v9;
            int v37 = *(void **)v33;
            do
            {
              *(void *)uint64_t v9 = v37;
              *(void *)uint64_t v33 = v36;
              do
              {
                double v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                uint64_t v36 = v38;
              }
              while (!std::less<std::string>::operator()[abi:ne180100](v16, v38));
              do
              {
                BOOL v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                int v37 = v39;
                double result = std::less<std::string>::operator()[abi:ne180100](v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          BOOL v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)BOOL v40 = v16;
        }
        do
        {
          unint64_t v18 = v17;
          unint64_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          long long v19 = v20;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v20, v16));
        uint64_t v97 = a3;
        uint64_t v21 = a2;
        if (v18 == (char *)v10)
        {
          uint64_t v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            uint64_t v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v23, v16));
        }
        else
        {
          do
          {
            unint64_t v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v22, v16));
        }
        size_t v8 = (char *)v10;
        uint64_t v24 = a2;
        if (v17 < v21)
        {
          uint64_t v25 = *(void **)v21;
          uint64_t v26 = v17;
          uint64_t v27 = v21;
          do
          {
            *(void *)uint64_t v26 = v25;
            *(void *)uint64_t v27 = v19;
            do
            {
              unint64_t v18 = v26;
              uint64_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              long long v19 = v28;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v28, v16));
            do
            {
              BOOL v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              uint64_t v25 = v29;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)size_t v8 = *(void *)v18;
        }
        *(void *)unint64_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        double result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        uint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>((void **)v8, (void **)v18);
      uint64_t v9 = v18 + 8;
      double result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *double result = (google::protobuf::Arena *)&unk_1F3627448;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Int64ToDoubleMap::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BOOL v5 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  unsigned int v6 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v5, a3 + 1);
  uint64_t v7 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  *unsigned int v6 = 17;
  *(void *)(v6 + 1) = v7;
  return v6 + 9;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v5 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0) {
      int v6 = *(_DWORD *)(v5 + 8);
    }
    unsigned int v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    int v4 = 0;
    return v4 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v4 = 9;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  double v6 = *(double *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v6, v5);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v5 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0) {
      int v6 = *(_DWORD *)(v5 + 8);
    }
    uint64_t v3 = (int)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    return v4 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  (*(void (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v4 = 9;
  return v4 + v3;
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MergePartialFromCodedStream(uint64_t a1, char **this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *this;
        if (*this >= this[1])
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(this, v7);
        if (!result) {
          return result;
        }
        int v8 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::Int64ToDoubleMap::New(this, 0) = v8;
        unint64_t v10 = *this;
        uint64_t v9 = this[1];
        if (*this < v9 && *v10 == 17)
        {
          uint64_t v11 = (unint64_t *)(v10 + 1);
          *this = (char *)v11;
          goto LABEL_19;
        }
      }
      if (TagFallback == 17) {
        break;
      }
      if (!TagFallback || (TagFallback & 7) == 4) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = *(_DWORD *)(a1 + 40);
    uint64_t v11 = (unint64_t *)*this;
    uint64_t v9 = this[1];
LABEL_19:
    int v12 = v8 | 2;
    *(_DWORD *)(a1 + 4CoreML::Specification::Int64ToDoubleMap::New(this, 0) = v12;
    unint64_t v17 = 0;
    if ((int)v9 - (int)v11 < 8)
    {
      BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)this, &v17);
      if (!result) {
        return result;
      }
      unint64_t v15 = v17;
      int v12 = *(_DWORD *)(a1 + 40);
      unint64_t v13 = *this;
      uint64_t v9 = this[1];
    }
    else
    {
      unint64_t v14 = *v11;
      unint64_t v13 = (char *)(v11 + 1);
      unint64_t v15 = v14;
      *this = v13;
    }
    *(void *)(a1 + 24) = v15;
    *(_DWORD *)(a1 + 4CoreML::Specification::Int64ToDoubleMap::New(this, 0) = v12 | 2;
  }
  while (v13 != v9 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  BOOL result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    if (v2)
    {
      uint64_t v5 = (std::string **)(a1 + 16);
      if (*(uint64_t **)(a1 + 16) == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      int v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      std::string::operator=(*v5, v6);
      *(_DWORD *)(a1 + 40) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      int v8 = (double *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      double result = *v8;
      *(double *)(a1 + 24) = *v8;
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Clear(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,double>::clear((void *)this + 3) = 0;
    }
  }
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::Int64ToDoubleMap::New(this, 0) = 0;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *double result = (google::protobuf::Arena *)&unk_1F3627E20;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1F36274F0;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  JUMPOUT(0x1E0198C00);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return a1 + 24;
}

void sub_1DC0CA994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F36274F0;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F36274F0;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1F36274F0;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      int v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      int v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      uint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    int v12 = *v9;
    unint64_t v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        unint64_t v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          unint64_t v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      unint64_t v17 = a1;
LABEL_12:
      void *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    int v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::StringToDoubleMap::ByteSizeLong(CoreML::Specification::StringToDoubleMap *this)
{
  int v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v8, v2);
  uint64_t v4 = 0;
  while (v8[0])
  {
    int v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((google::protobuf::Arena **)v8[0] + 3), (google::protobuf::Arena *)(*((void *)v8[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    uint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v8);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_1DC0CAD98(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::StringToDoubleMap::MergePartialFromCodedStream(CoreML::Specification::StringToDoubleMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (google::protobuf::Arena **)((char *)this + 16);
  int v5 = (void *)((char *)this + 24);
  while (1)
  {
    uint64_t v6 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v7) = 0;
    }
    else
    {
      uint64_t v7 = *v6;
      if (*v6 >= 1)
      {
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
    unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0) {
      goto LABEL_12;
    }
LABEL_8:
    if (v8 == 10 && (v8 & 0xFFFFFFF8) == 8)
    {
      v43 = v4;
      uint64_t v44 = v5;
      memset(&__p, 0, sizeof(__p));
      uint64_t v47 = 0;
      unint64_t v13 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v13 & 0x80000000) == 0)
      {
        int VarintSizeAsIntFallback = *v13;
        *(void *)a2 = v13 + 1;
        goto LABEL_24;
      }
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        goto LABEL_83;
      }
LABEL_24:
      int v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v16 = *((_DWORD *)a2 + 13);
      BOOL v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,double>::clear((void *)this + 3) = v16;
      if (v16 < 0 == v17)
      {
        int v18 = v15;
        long long v19 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v19 == 10)
        {
          *(void *)a2 = v19 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p)) {
            goto LABEL_83;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 17)
          {
            uint64_t v20 = *(void *)v44[2];
            uint64_t v46 = google::protobuf::Map<std::string,double>::operator[]((uint64_t)v44, (uint64_t)&__p);
            if (v20 != *(void *)v44[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              uint64_t v21 = v46;
              unint64_t v48 = 0;
              unint64_t v22 = *(unint64_t **)a2;
              uint64_t v23 = (char *)*((void *)a2 + 1);
              if ((int)(v23 - *(void *)a2) < 8)
              {
                if (google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48))
                {
                  unint64_t v26 = v48;
                  uint64_t v24 = *(char **)a2;
                  uint64_t v23 = (char *)*((void *)a2 + 1);
                  goto LABEL_33;
                }
                google::protobuf::Map<std::string,long long>::erase(v44, (unsigned __int8 *)&__p);
                goto LABEL_83;
              }
              unint64_t v25 = *v22;
              uint64_t v24 = (char *)(v22 + 1);
              unint64_t v26 = v25;
              *(void *)a2 = v24;
LABEL_33:
              void *v21 = v26;
              if (v24 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                *((unsigned char *)a2 + 36) = 1;
LABEL_60:
                if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18))
                {
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    p_p = (unsigned int *)&__p;
                  }
                  else {
                    p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                  }
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    int v39 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    int v39 = __p.__r_.__value_.__r.__words[1];
                  }
                  BOOL v40 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v39, 0, (uint64_t)"CoreML.Specification.StringToDoubleMap.MapEntry.key");
                  BOOL v41 = v40;
                  if (v40) {
                    int v12 = 0;
                  }
                  else {
                    int v12 = 6;
                  }
                  goto LABEL_70;
                }
                goto LABEL_83;
              }
              uint64_t v27 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v43);
              if (v47 != v27)
              {
                if (v47) {
                  (*((void (**)(void))*v47 + 1))();
                }
                uint64_t v47 = v27;
              }
              uint64_t v28 = v46;
              BOOL v29 = v44;
              *((_DWORD *)v27 + 10) |= 2u;
              v27[3] = *v28;
              google::protobuf::Map<std::string,long long>::erase(v29, (unsigned __int8 *)&__p);
              BOOL v30 = v47;
              *((_DWORD *)v47 + 10) |= 1u;
              unint64_t v31 = v30[2];
              if (v31 == (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstance();
              }
              if (*((char *)v31 + 23) < 0) {
                operator delete(*(void **)v31);
              }
              long long v32 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              *((void *)v31 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
              *(_OWORD *)unint64_t v31 = v32;
              *((unsigned char *)&__p.__r_.__value_.__s + 2google::protobuf::Map<long long,double>::clear((void *)this + 3) = 0;
              __p.__r_.__value_.__s.__data_[0] = 0;
              int v33 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v47
                     + 11))(v47, a2);
              if (v33) {
                v34.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry((uint64_t)&v43);
              }
              if (!(*((uint64_t (**)(google::protobuf::Arena **, __n128))*v47 + 5))(v47, v34))
              {
LABEL_45:
                if (v33) {
                  goto LABEL_60;
                }
                goto LABEL_83;
              }
LABEL_59:
              uint64_t v47 = 0;
              if (v33) {
                goto LABEL_60;
              }
              BOOL v41 = 0;
              int v12 = 6;
LABEL_72:
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              if (!v41) {
                goto LABEL_18;
              }
              goto LABEL_17;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        uint64_t v35 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v43);
        if (v47 != v35)
        {
          if (v47) {
            (*((void (**)(void))*v47 + 1))();
          }
          uint64_t v47 = v35;
        }
        uint64_t v36 = (std::string *)v35[2];
        *((_DWORD *)v35 + 10) |= 1u;
        if (v36 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=(v36, &__p);
        int v33 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v47 + 11))(v47, a2);
        if (v33) {
          v37.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry((uint64_t)&v43);
        }
        if (!(*((uint64_t (**)(google::protobuf::Arena **, __n128))*v47 + 5))(v47, v37)) {
          goto LABEL_45;
        }
        goto LABEL_59;
      }
LABEL_83:
      BOOL v41 = 0;
      int v12 = 6;
LABEL_70:
      if (v47) {
        (*((void (**)(google::protobuf::Arena **))*v47 + 1))(v47);
      }
      goto LABEL_72;
    }
LABEL_12:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3))return 0; {
LABEL_17:
    }
    int v12 = 0;
LABEL_18:
    if (v12) {
      return 0;
    }
  }
}

void sub_1DC0CB324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

google::protobuf::Arena **google::protobuf::Map<std::string,double>::operator[](uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v23 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v25[0];
  if (v25[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v19 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v19, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v24, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v24[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v20 = 0;
    unint64_t v21 = ((5 * v8) >> 2) + 1;
    do
      ++v20;
    while (v21 << v20 < v9);
    uint64_t v19 = v7 >> v20 <= 8 ? 8 : v7 >> v20;
    if (v19 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v25[3];
LABEL_11:
  int v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  uint64_t v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v23;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v24, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v24[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 32);
    BOOL v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    v16[2] = 0;
    void *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    v16[3] = 0;
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1DC0CB588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1E0198C00](v14, 0x1012C4092066FB6);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::Int64ToDoubleMap::New(this, 0) = 0;
  *BOOL result = (google::protobuf::Arena *)&unk_1F3627E20;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  int v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  uint64_t v3 = google::protobuf::Map<std::string,double>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::Int64ToDoubleMap::New(this, 0) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  double result = *(double *)(v4 + 24);
  *(double *)uint64_t v3 = result;
  return result;
}

void *CoreML::Specification::StringToDoubleMap::MergeFrom(CoreML::Specification::StringToDoubleMap *this, const CoreML::Specification::StringToDoubleMap *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double result = google::protobuf::Map<std::string,std::string>::begin(v10, *((void **)a2 + 5));
  uint64_t v6 = v10[0];
  if (v10[0])
  {
    unint64_t v7 = (char *)this + 24;
    do
    {
      uint64_t v8 = *((void *)v6 + 3);
      unint64_t v9 = *(google::protobuf::Arena **)(v8 + 24);
      *google::protobuf::Map<std::string,double>::operator[]((uint64_t)v7, v8) = v9;
      double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v10);
      uint64_t v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

uint64_t CoreML::Specification::StringToDoubleMap::IsInitialized(CoreML::Specification::StringToDoubleMap *this)
{
  return 1;
}

void CoreML::Specification::StringToDoubleMap::Clear(CoreML::Specification::StringToDoubleMap *this)
{
}

void CoreML::Specification::StringToDoubleMap::New(CoreML::Specification::StringToDoubleMap *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0CB7B4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringToDoubleMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToDoubleMap>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToDoubleMap>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::StringToDoubleMap::New(CoreML::Specification::StringToDoubleMap *this)
{
}

void *CoreML::Specification::StringToDoubleMap::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringToDoubleMap");
}

void CoreML::Specification::StringToDoubleMap::~StringToDoubleMap(CoreML::Specification::StringToDoubleMap *this)
{
  *(void *)this = &unk_1F361E580;
  google::protobuf::Map<std::string,long long>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361E580;
  google::protobuf::Map<std::string,long long>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1F36274F0;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1F36274F0;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  }
  return a1;
}

void *google::protobuf::Map<long long,std::string>::~Map(void *a1)
{
  google::protobuf::Map<long long,std::string>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<long long,double>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<long long,std::string>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<long long,std::string>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

__n128 google::protobuf::Map<long long,std::string>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 8);
    if (v7)
    {
      if (*(char *)(v7 + 31) < 0) {
        operator delete(*(void **)(v7 + 8));
      }
      MEMORY[0x1E0198C00](v7, 0x1012C404EF22A49);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 16);
  if (v8) {
    goto LABEL_7;
  }
  BOOL v29 = 0;
  if (google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, &v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    int v12 = v29;
    unint64_t v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        uint64_t v14 = v13;
        unint64_t v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        uint64_t v14 = (void *)v12[2];
        BOOL v15 = *v14 == (void)v12;
        int v12 = v14;
      }
      while (!v15);
    }
    BOOL v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  int v16 = (void *)a2[2];
  BOOL v29 = 0;
  BOOL v17 = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, &v29);
  unint64_t v18 = v28;
  uint64_t v19 = (void *)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  std::string::size_type v23 = (uint64_t *)std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(v21, (uint64_t *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  if (!v16[5]) {
    operator delete(v19);
  }
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

void *google::protobuf::Map<long long,std::string>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  uint64_t v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  unint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)unint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0CBDE0(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0CBD9CLL);
}

uint64_t CoreML::Specification::Int64ToStringMap::GetCachedSize(CoreML::Specification::Int64ToStringMap *this)
{
  return *((unsigned int *)this + 12);
}

void *CoreML::Specification::Int64ToStringMap::SerializeWithCachedSizes(void *this, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t v3 = (unint64_t *)this[5];
  unint64_t v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = (uint64_t)this;
    if (*((unsigned char *)a2 + 26))
    {
      if (v4 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_24;
      }
    }
    else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_24:
      operator new[]();
    }
    this = google::protobuf::Map<std::string,std::string>::begin(v13, v3);
    uint64_t v7 = 0;
    while (v13[0])
    {
      size_t v8 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(*((google::protobuf::Arena **)v13[0] + 1), (google::protobuf::Arena *)(v13[0][1] + 8), *(google::protobuf::Arena **)(v5 + 16));
      if ((google::protobuf::Arena **)v7 != v8)
      {
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
        uint64_t v7 = (uint64_t)v8;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(1, v7, a2);
      uint64_t v9 = v13[0][1];
      if (*(char *)(v9 + 31) < 0)
      {
        uint64_t v10 = *(unsigned int **)(v9 + 8);
        uint64_t v11 = *(void *)(v9 + 16);
      }
      else
      {
        uint64_t v10 = (unsigned int *)(v9 + 8);
        LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.Int64ToStringMap.MapEntry.value");
      this = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v13);
    }
    if (v7) {
      return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  return this;
}

void sub_1DC0CC0E4(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x1060C80832E3BDALL);
  _Unwind_Resume(a1);
}

double std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*,false>(unint64_t a1, void *a2, uint64_t a3, char a4)
{
  while (2)
  {
    uint64_t v10 = (long long *)(a2 - 2);
    unint64_t v11 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v11;
          uint64_t v12 = (uint64_t)a2 - v11;
          unint64_t v13 = (uint64_t)((uint64_t)a2 - v11) >> 4;
          if (v5 || !v4)
          {
            switch(v13)
            {
              case 0uLL:
              case 1uLL:
                return *(double *)&v16;
              case 2uLL:
                if (*(void *)v10 < *(void *)v11)
                {
                  long long v84 = *(_OWORD *)v11;
                  *(_OWORD *)unint64_t v11 = *v10;
                  *(void *)&long long v16 = v84;
                  *uint64_t v10 = v84;
                }
                break;
              case 3uLL:
                std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), a2 - 2);
                break;
              case 4uLL:
                *(void *)&long long v16 = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 32), (_OWORD *)a2 - 1).n128_u64[0];
                break;
              case 5uLL:
                *(void *)&long long v16 = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v11, (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 32), (__n128 *)(v11 + 48), (__n128 *)a2 - 1).n128_u64[0];
                break;
              default:
                JUMPOUT(0);
            }
            return *(double *)&v16;
          }
          if (v12 <= 383)
          {
            double v38 = (void *)(v11 + 16);
            BOOL v40 = (void *)v11 == a2 || v38 == a2;
            if (a4)
            {
              if (!v40)
              {
                uint64_t v41 = 0;
                v42 = (void *)v11;
                do
                {
                  v43 = v38;
                  uint64_t v44 = v42[2];
                  if (v44 < *v42)
                  {
                    uint64_t v45 = v42[3];
                    uint64_t v46 = v41;
                    while (1)
                    {
                      long long v16 = *(_OWORD *)(v11 + v46);
                      *(_OWORD *)(v11 + v46 + 16) = v16;
                      if (!v46) {
                        break;
                      }
                      uint64_t v47 = *(void *)(v11 + v46 - 16);
                      v46 -= 16;
                      if (v44 >= v47)
                      {
                        unint64_t v48 = (void *)(v11 + v46 + 16);
                        goto LABEL_80;
                      }
                    }
                    unint64_t v48 = (void *)v11;
LABEL_80:
                    void *v48 = v44;
                    v48[1] = v45;
                  }
                  double v38 = v43 + 2;
                  v41 += 16;
                  v42 = v43;
                }
                while (v43 + 2 != a2);
              }
            }
            else if (!v40)
            {
              do
              {
                unint64_t v76 = (unint64_t)v38;
                uint64_t v77 = *(void *)(a1 + 16);
                if (v77 < *(void *)a1)
                {
                  uint64_t v78 = *(void *)(a1 + 24);
                  unint64_t v79 = v76;
                  do
                  {
                    long long v16 = *(_OWORD *)(v79 - 16);
                    *(_OWORD *)unint64_t v79 = v16;
                    uint64_t v80 = *(void *)(v79 - 32);
                    v79 -= 16;
                  }
                  while (v77 < v80);
                  *(void *)unint64_t v79 = v77;
                  *(void *)(v79 + 8) = v78;
                }
                double v38 = (void *)(v76 + 16);
                a1 = v76;
              }
              while ((void *)(v76 + 16) != a2);
            }
            return *(double *)&v16;
          }
          if (!a3)
          {
            if ((void *)v11 != a2)
            {
              int64_t v49 = (v13 - 2) >> 1;
              int64_t v50 = v49;
              do
              {
                int64_t v51 = v50;
                if (v49 >= v50)
                {
                  uint64_t v52 = (2 * v50) | 1;
                  int64_t v53 = (void *)(v11 + 16 * v52);
                  if (2 * v51 + 2 < (uint64_t)v13)
                  {
                    uint64_t v55 = v53[2];
                    BOOL v54 = *v53 < v55;
                    if (*v53 > v55) {
                      uint64_t v55 = *v53;
                    }
                    if (v54)
                    {
                      v53 += 2;
                      uint64_t v52 = 2 * v51 + 2;
                    }
                  }
                  else
                  {
                    uint64_t v55 = *v53;
                  }
                  v56 = (void *)(v11 + 16 * v51);
                  uint64_t v57 = *v56;
                  if (v55 >= *v56)
                  {
                    uint64_t v58 = v56[1];
                    do
                    {
                      BOOL v59 = v56;
                      v56 = v53;
                      *BOOL v59 = *(_OWORD *)v53;
                      if (v49 < v52) {
                        break;
                      }
                      uint64_t v60 = (2 * v52) | 1;
                      int64_t v53 = (void *)(v11 + 16 * v60);
                      uint64_t v52 = 2 * v52 + 2;
                      if (v52 < (uint64_t)v13)
                      {
                        uint64_t v63 = *v53;
                        uint64_t v61 = v53[2];
                        BOOL v62 = *v53 < v61;
                        if (*v53 <= v61) {
                          uint64_t v63 = v53[2];
                        }
                        if (*v53 < v61) {
                          v53 += 2;
                        }
                        if (!v62) {
                          uint64_t v52 = v60;
                        }
                      }
                      else
                      {
                        uint64_t v63 = *v53;
                        uint64_t v52 = v60;
                      }
                    }
                    while (v63 >= v57);
                    void *v56 = v57;
                    v56[1] = v58;
                  }
                }
                int64_t v50 = v51 - 1;
              }
              while (v51);
              uint64_t v64 = (unint64_t)v12 >> 4;
              do
              {
                uint64_t v65 = 0;
                long long v85 = *(_OWORD *)v11;
                v66 = (_OWORD *)v11;
                do
                {
                  uint64_t v67 = &v66[v65 + 1];
                  uint64_t v68 = (2 * v65) | 1;
                  uint64_t v69 = 2 * v65 + 2;
                  if (v69 < v64 && *v67 < v67[2])
                  {
                    v67 += 2;
                    uint64_t v68 = v69;
                  }
                  _OWORD *v66 = *(_OWORD *)v67;
                  v66 = v67;
                  uint64_t v65 = v68;
                }
                while (v68 <= (uint64_t)((unint64_t)(v64 - 2) >> 1));
                a2 -= 2;
                if (v67 == a2)
                {
                  *(void *)&long long v16 = v85;
                  *(_OWORD *)uint64_t v67 = v85;
                }
                else
                {
                  *(_OWORD *)uint64_t v67 = *(_OWORD *)a2;
                  *(void *)&long long v16 = v85;
                  *(_OWORD *)a2 = v85;
                  uint64_t v70 = (uint64_t)v67 - v11 + 16;
                  if (v70 >= 17)
                  {
                    unint64_t v71 = (((unint64_t)v70 >> 4) - 2) >> 1;
                    uint64_t v72 = (_OWORD *)(v11 + 16 * v71);
                    uint64_t v73 = *v67;
                    if (*(void *)v72 < *v67)
                    {
                      uint64_t v74 = v67[1];
                      do
                      {
                        uint64_t v75 = v67;
                        uint64_t v67 = v72;
                        long long v16 = *v72;
                        *uint64_t v75 = *v72;
                        if (!v71) {
                          break;
                        }
                        unint64_t v71 = (v71 - 1) >> 1;
                        uint64_t v72 = (_OWORD *)(v11 + 16 * v71);
                      }
                      while (*(void *)v72 < v73);
                      *uint64_t v67 = v73;
                      v67[1] = v74;
                    }
                  }
                }
                BOOL v54 = v64-- <= 2;
              }
              while (!v54);
            }
            return *(double *)&v16;
          }
          unint64_t v14 = v13 >> 1;
          BOOL v15 = (uint64_t *)(v11 + 16 * (v13 >> 1));
          if ((unint64_t)v12 >= 0x801)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16 * (v13 >> 1)), a2 - 2);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 16), v15 - 2, a2 - 4);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 32), (uint64_t *)(a1 + 16 + 16 * v14), a2 - 6);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)v15 - 1, v15, (uint64_t *)(a1 + 16 + 16 * v14));
            long long v82 = *(_OWORD *)a1;
            *(_OWORD *)a1 = *(_OWORD *)v15;
            *(void *)&long long v16 = v82;
            *(_OWORD *)BOOL v15 = v82;
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)(a1 + 16 * (v13 >> 1)), (uint64_t *)a1, a2 - 2);
          }
          --a3;
          uint64_t v17 = *(void *)a1;
          if ((a4 & 1) != 0 || *(void *)(a1 - 16) < v17) {
            break;
          }
          if (v17 >= *(void *)v10)
          {
            unint64_t v31 = a1 + 16;
            do
            {
              unint64_t v11 = v31;
              if (v31 >= (unint64_t)a2) {
                break;
              }
              v31 += 16;
            }
            while (v17 >= *(void *)v11);
          }
          else
          {
            unint64_t v11 = a1;
            do
            {
              uint64_t v30 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v17 >= v30);
          }
          long long v32 = (long long *)a2;
          if (v11 < (unint64_t)a2)
          {
            long long v32 = (long long *)a2;
            do
              uint64_t v33 = *((void *)v32-- - 2);
            while (v17 < v33);
          }
          uint64_t v34 = *(void *)(a1 + 8);
          while (v11 < (unint64_t)v32)
          {
            long long v83 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *v32;
            *(void *)&long long v16 = v83;
            long long *v32 = v83;
            do
            {
              uint64_t v35 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v17 >= v35);
            do
              uint64_t v36 = *((void *)v32-- - 2);
            while (v17 < v36);
          }
          __n128 v37 = (long long *)(v11 - 16);
          BOOL v4 = v11 - 16 >= a1;
          BOOL v5 = v11 - 16 == a1;
          if (v11 - 16 != a1)
          {
            long long v16 = *v37;
            *(_OWORD *)a1 = *v37;
          }
          a4 = 0;
          *(void *)(v11 - 16) = v17;
          *(void *)(v11 - 8) = v34;
        }
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = a1;
        do
        {
          unint64_t v20 = v19;
          uint64_t v21 = *(void *)(v19 + 16);
          v19 += 16;
        }
        while (v21 < v17);
        uint64_t v22 = (long long *)a2;
        if (v20 == a1)
        {
          uint64_t v22 = (long long *)a2;
          do
          {
            if (v19 >= (unint64_t)v22) {
              break;
            }
            uint64_t v24 = *((void *)v22-- - 2);
          }
          while (v24 >= v17);
        }
        else
        {
          do
            uint64_t v23 = *((void *)v22-- - 2);
          while (v23 >= v17);
        }
        unint64_t v11 = v19;
        if (v19 < (unint64_t)v22)
        {
          unint64_t v25 = v22;
          do
          {
            long long v26 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *v25;
            *unint64_t v25 = v26;
            do
            {
              uint64_t v27 = *(void *)(v11 + 16);
              v11 += 16;
            }
            while (v27 < v17);
            do
              uint64_t v28 = *((void *)v25-- - 2);
            while (v28 >= v17);
          }
          while (v11 < (unint64_t)v25);
        }
        if (v11 - 16 != a1) {
          *(_OWORD *)a1 = *(_OWORD *)(v11 - 16);
        }
        *(void *)(v11 - 16) = v17;
        *(void *)(v11 - 8) = v18;
        if (v19 >= (unint64_t)v22) {
          break;
        }
LABEL_30:
        std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*,false>(a1, v11 - 16, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v29 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(a1, (void *)(v11 - 16));
      if (std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(v11, a2))
      {
        break;
      }
      if (!v29) {
        goto LABEL_30;
      }
    }
    a2 = (void *)(v11 - 16);
    if (!v29) {
      continue;
    }
    return *(double *)&v16;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = 0;
  result[4] = this;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  *__n128 result = (google::protobuf::Arena *)&unk_1F36276E8;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::StringToDoubleMap::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  unint64_t v5 = *(void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 8;
  unsigned int v6 = a3 + 1;
  if (v5 < 0x80)
  {
    LOBYTE(v7) = v5;
  }
  else
  {
    do
    {
      *v6++ = v5 | 0x80;
      unint64_t v7 = v5 >> 7;
      unint64_t v8 = v5 >> 14;
      v5 >>= 7;
    }
    while (v8);
  }
  *unsigned int v6 = v7;
  uint64_t v9 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  v6[1] = 18;
  return google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v9, v6 + 2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    int v3 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v6 = 0;
    return v6 + v3;
  }
  int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0) {
    int v5 = *(_DWORD *)(v4 + 8);
  }
  unsigned int v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteInt64(1, *v4, a2, v5);
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteString(2u, v6, a2);
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    unint64_t v3 = ((9 * (__clz(*(void *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  unint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0) {
    int v5 = *(_DWORD *)(v4 + 8);
  }
  uint64_t v6 = (int)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6)) + 1;
  return v6 + v3;
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 8) {
          break;
        }
        int v7 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::StringToDoubleMap::New(this, 0) = v7;
        uint64_t v9 = *(char **)this;
        unint64_t v8 = *((void *)this + 1);
        if (*(void *)this >= v8 || *v9 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
          if ((v13 & 1) == 0) {
            return 0;
          }
          int v7 = *(_DWORD *)(a1 + 40);
          unint64_t v11 = *(char **)this;
          unint64_t v8 = *((void *)this + 1);
        }
        else
        {
          unint64_t Varint64Fallback = *v9;
          unint64_t v11 = v9 + 1;
          *(void *)this = v11;
        }
        *(void *)(a1 + 16) = Varint64Fallback;
        int v12 = v7 | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::StringToDoubleMap::New(this, 0) = v12;
        if ((unint64_t)v11 < v8 && *v11 == 18)
        {
          *(void *)this = v11 + 1;
          goto LABEL_21;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v12 = *(_DWORD *)(a1 + 40);
LABEL_21:
      *(_DWORD *)(a1 + 4CoreML::Specification::StringToDoubleMap::New(this, 0) = v12 | 2;
      unint64_t v14 = *(std::string **)(a1 + 24);
      if (v14 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, v14);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        BOOL result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      BOOL result = (std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      v4->__r_.__value_.__r.__words[2] = result->__r_.__value_.__r.__words[0];
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      int v5 = (std::string **)&v4[1];
      if ((uint64_t *)v4[1].__r_.__value_.__l.__data_ == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      BOOL result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Clear(uint64_t result)
{
  *(void *)(result + 16) = 0;
  uint64_t v1 = *(void *)(result + 24);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
    }
  }
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = 0;
  result[4] = this;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)result + 1CoreML::Specification::StringToDoubleMap::New(this, 0) = 0;
  int v5 = *(google::protobuf::Arena **)(a1 + 8);
  *BOOL result = (google::protobuf::Arena *)&unk_1F3627F70;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1F3627790;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  JUMPOUT(0x1E0198C00);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(a1 + 24);
}

void sub_1DC0CD138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::key(uint64_t a1)
{
  return a1 + 16;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3627790;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3627790;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  return a1;
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  *a1 = &unk_1F3627790;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  return a1;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(uint64_t a1, void *a2)
{
  uint64_t v4 = ((uint64_t)a2 - a1) >> 4;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = (long long *)(a2 - 2);
      if (*(a2 - 2) < *(void *)a1)
      {
        long long v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        *uint64_t v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (_OWORD *)a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (__n128 *)(a1 + 48), (__n128 *)a2 - 1);
      return 1;
    default:
      unint64_t v8 = (void *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((long long *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32));
      uint64_t v9 = (void *)(a1 + 48);
      if ((void *)(a1 + 48) == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    if (*v9 < *v8)
    {
      uint64_t v13 = v9[1];
      uint64_t v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 48) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32) {
          break;
        }
        uint64_t v15 = *(void *)(a1 + v14 + 16);
        v14 -= 16;
        if (v12 >= v15)
        {
          long long v16 = (void *)(a1 + v14 + 48);
          goto LABEL_12;
        }
      }
      long long v16 = (void *)a1;
LABEL_12:
      void *v16 = v12;
      v16[1] = v13;
      if (++v11 == 8) {
        return v9 + 2 == a2;
      }
    }
    unint64_t v8 = v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::Int64ToStringMap::ByteSizeLong(CoreML::Specification::Int64ToStringMap *this)
{
  int v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v8, v2);
  uint64_t v4 = 0;
  while (v8[0])
  {
    int v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(*((google::protobuf::Arena **)v8[0] + 1), (google::protobuf::Arena *)(v8[0][1] + 8), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    unint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v8);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_1DC0CD530(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::Int64ToStringMap::MergePartialFromCodedStream(CoreML::Specification::Int64ToStringMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (google::protobuf::Arena **)((char *)this + 16);
  unint64_t v6 = (char *)this + 24;
  long long v7 = (google::protobuf::Arena **)&v45;
  while (1)
  {
    unint64_t v8 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v9) = 0;
    }
    else
    {
      uint64_t v9 = *v8;
      if (*v8 >= 1)
      {
        *(void *)a2 = v8 + 1;
        unint64_t v10 = v9 | 0x100000000;
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_12;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
    unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v10 & 0x100000000) == 0) {
      goto LABEL_12;
    }
LABEL_8:
    if (v10 == 10 && (v10 & 0xFFFFFFF8) == 8)
    {
      v44[0] = v5;
      v44[1] = v6;
      uint64_t v47 = 0;
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v15 & 0x80000000) == 0)
      {
        int VarintSizeAsIntFallback = *v15;
        *(void *)a2 = v15 + 1;
        goto LABEL_24;
      }
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        goto LABEL_49;
      }
LABEL_24:
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v19 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = v19;
      if (v19 < 0 != v20) {
        goto LABEL_49;
      }
      int v21 = v18;
      uint64_t v23 = *(char **)a2;
      unint64_t v22 = *((void *)a2 + 1);
      if (*(void *)a2 < v22 && *v23 == 8)
      {
        *(void *)a2 = v23 + 1;
        if ((unint64_t)(v23 + 1) >= v22 || v23[1] < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if (v27)
          {
            unint64_t v24 = Varint64Fallback;
            unint64_t v25 = *(char **)a2;
            unint64_t v22 = *((void *)a2 + 1);
            goto LABEL_33;
          }
          goto LABEL_49;
        }
        unint64_t v24 = v23[1];
        unint64_t v25 = v23 + 2;
        *(void *)a2 = v25;
LABEL_33:
        unint64_t v45 = v24;
        if ((int)v22 - (int)v25 >= 1 && *v25 == 18)
        {
          uint64_t v28 = **((void **)this + 5);
          BOOL v29 = google::protobuf::Map<long long,std::string>::operator[]((uint64_t)v6, v7);
          uint64_t v46 = v29;
          if (v28 != **((void **)this + 5))
          {
            google::protobuf::io::CodedInputStream::Skip(a2, 1u);
            if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, (std::string *)v29))
            {
              v17.n128_f64[0] = google::protobuf::Map<long long,std::string>::erase((uint64_t)v6, (uint64_t *)v7);
              goto LABEL_49;
            }
            if (*(void *)a2 == *((void *)a2 + 1)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              *((unsigned char *)a2 + 36) = 1;
              goto LABEL_62;
            }
            uint64_t v30 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(*v5);
            v43 = (uint64_t *)v7;
            if (v30)
            {
              uint64_t v47 = v30;
              unint64_t v31 = v30;
            }
            else
            {
              unint64_t v31 = 0;
            }
            uint64_t v36 = v30[3];
            *((_DWORD *)v30 + 10) |= 2u;
            if (v36 == (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstance();
            }
            if (*((char *)v36 + 23) < 0) {
              operator delete(*(void **)v36);
            }
            long long v37 = *(_OWORD *)v29;
            *((void *)v36 + 2) = v29[2];
            *(_OWORD *)uint64_t v36 = v37;
            *((unsigned char *)v29 + 2google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
            *(unsigned char *)BOOL v29 = 0;
            long long v7 = (google::protobuf::Arena **)v43;
            double v38 = google::protobuf::Map<long long,std::string>::erase((uint64_t)v6, v43);
            *((_DWORD *)v31 + 10) |= 1u;
            v31[2] = (google::protobuf::Arena *)v24;
            int v34 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *, double))*v31
                   + 11))(v31, a2, v38);
            if (v34)
            {
              google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry((uint64_t)v44);
              unint64_t v31 = v47;
            }
            if (!(*((uint64_t (**)(google::protobuf::Arena **))*v31 + 5))(v31))
            {
LABEL_61:
              if (v34) {
                goto LABEL_62;
              }
              goto LABEL_49;
            }
LABEL_46:
            uint64_t v47 = 0;
            if ((v34 & 1) == 0) {
              return 0;
            }
LABEL_62:
            if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21))
            {
              int v39 = (unsigned int *)v46;
              if (*((char *)v46 + 23) < 0)
              {
                int v39 = (unsigned int *)*v46;
                BOOL v40 = v46[1];
              }
              else
              {
                LODWORD(v4CoreML::Specification::StringToDoubleMap::New(this, 0) = *((unsigned __int8 *)v46 + 23);
              }
              BOOL v41 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(v39, (int)v40, 0, (uint64_t)"CoreML.Specification.Int64ToStringMap.MapEntry.value");
              BOOL v35 = v41;
              if (v41) {
                int v14 = 0;
              }
              else {
                int v14 = 6;
              }
            }
            else
            {
LABEL_49:
              BOOL v35 = 0;
              int v14 = 6;
            }
            if (v47) {
              (*((void (**)(google::protobuf::Arena **, __n128))*v47 + 1))(v47, v17);
            }
            if (!v35) {
              goto LABEL_18;
            }
            goto LABEL_17;
          }
        }
      }
      else
      {
        unint64_t v24 = 0;
        unint64_t v45 = 0;
      }
      long long v32 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(*v5);
      if (v32)
      {
        uint64_t v47 = v32;
        uint64_t v33 = v32;
      }
      else
      {
        uint64_t v33 = 0;
      }
      *((_DWORD *)v32 + 10) |= 1u;
      v32[2] = (google::protobuf::Arena *)v24;
      int v34 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v32 + 11))(v32, a2);
      if (v34)
      {
        google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry((uint64_t)v44);
        uint64_t v33 = v47;
      }
      if (!(*((uint64_t (**)(google::protobuf::Arena **))*v33 + 5))(v33)) {
        goto LABEL_61;
      }
      goto LABEL_46;
    }
LABEL_12:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3))return 0; {
LABEL_17:
    }
    int v14 = 0;
LABEL_18:
    if (v14) {
      return 0;
    }
  }
}

void sub_1DC0CDA00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14) {
    (*(void (**)(uint64_t))(*(void *)a14 + 8))(a14);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::Arena **google::protobuf::Map<long long,std::string>::operator[](uint64_t a1, google::protobuf::Arena **a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  long long v20 = (unint64_t)*a2;
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(v22, v4, (uint64_t *)&v20, 0);
  uint64_t v6 = v22[0];
  if (v22[0]) {
    goto LABEL_12;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v17 = 2 * v7;
LABEL_25:
      google::protobuf::Map<long long,std::string>::InnerMap::Resize((uint64_t)v4, v17, v5);
      google::protobuf::Map<long long,double>::InnerMap::FindHelper(v21, v4, (uint64_t *)&v20, 0);
      uint64_t v11 = v21[3];
      goto LABEL_8;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v18 = 0;
    unint64_t v19 = ((5 * v8) >> 2) + 1;
    do
      ++v18;
    while (v19 << v18 < v9);
    uint64_t v17 = v7 >> v18 <= 8 ? 8 : v7 >> v18;
    if (v17 != v7) {
      goto LABEL_25;
    }
  }
  uint64_t v11 = v22[3];
LABEL_8:
  uint64_t v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (uint64_t *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 24);
  }
  else {
    Aligned = (uint64_t *)operator new(0x18uLL);
  }
  *(_OWORD *)Aligned = v20;
  google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v21, (uint64_t)v4, v11, Aligned);
  ++*v4;
  uint64_t v6 = v21[0];
LABEL_12:
  int v14 = *(google::protobuf::Arena ***)(v6 + 8);
  if (!v14)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v14 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 32);
    std::string *v14 = 0;
    uint64_t v15 = *(google::protobuf::Arena **)a1;
    v14[2] = 0;
    v14[3] = 0;
    v14[1] = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v15, (google::protobuf::Arena *)(v14 + 1));
    std::string *v14 = *a2;
    *(void *)(v6 + 8) = v14;
  }
  return v14 + 1;
}

double google::protobuf::Map<long long,std::string>::erase(uint64_t a1, uint64_t *a2)
{
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v6, *(void **)(a1 + 16), a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<long long,std::string>::erase((uint64_t)&v6, (void *)a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = 0;
  result[2] = 0;
  result[4] = a1;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)result + 1CoreML::Specification::StringToDoubleMap::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627F70;
  return result;
}

__n128 google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  *(void *)(a1 + 16) = *(void *)(*(uint64_t (**)(void))(**(void **)(a1 + 32) + 136))(*(void *)(a1 + 32));
  int v2 = google::protobuf::Map<long long,std::string>::operator[](*(void *)(a1 + 8), (google::protobuf::Arena **)(a1 + 16));
  *(void *)(a1 + 24) = v2;
  uint64_t v3 = *(void *)(a1 + 32);
  *(_DWORD *)(v3 + 40) |= 2u;
  uint64_t v4 = *(void *)(v3 + 24);
  if ((uint64_t *)v4 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*((char *)v2 + 23) < 0) {
    operator delete(*v2);
  }
  __n128 result = *(__n128 *)v4;
  v2[2] = *(google::protobuf::Arena **)(v4 + 16);
  *(__n128 *)int v2 = result;
  *(unsigned char *)(v4 + 2google::protobuf::Map<std::string,long long>::clear((void *)this + 3) = 0;
  *(unsigned char *)uint64_t v4 = 0;
  return result;
}

uint64_t *google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a4;
  unint64_t v5 = a3;
  uint64_t v7 = result;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(v8 + 8 * a3);
  if (!v9)
  {
    a4[2] = 0;
    *(void *)(v8 + 8 * agoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a3 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a3);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 16);
    }
    while (v11);
    if (v10 < 8)
    {
      a4[2] = v9;
      *(void *)(v8 + 8 * agoogle::protobuf::Map<std::string,long long>::clear((void *)this + 3) = a4;
LABEL_11:
      void *v7 = v4;
      v7[1] = a2;
      v7[2] = v5;
      return result;
    }
    google::protobuf::Map<long long,std::string>::InnerMap::TreeConvert(a2, a3);
    v4[2] = 0;
    uint64_t v14 = *(void *)(*(void *)(a2 + 32) + 8 * v5);
    uint64_t v15 = v4;
    __n128 result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v14, v4, (uint64_t *)&v15);
    v5 &= ~1uLL;
    uint64_t v4 = (uint64_t *)result[4];
LABEL_8:
    unint64_t v12 = *(void *)(a2 + 24);
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    *(void *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  a4[2] = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a3);
  uint64_t v15 = a4;
  __n128 result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v13, a4, (uint64_t *)&v15);
  void *v7 = result[4];
  v7[1] = a2;
  v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

uint64_t *google::protobuf::Map<long long,std::string>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x1E4FBA3A0], 32);
  }
  else {
    Aligned = operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  uint64_t v25 = *(void *)(a1 + 40);
  uint64_t v7 = v25;
  uint64_t v26 = 0;
  uint64_t v23 = &v24;
  unint64_t v24 = 0;
  Aligned[1] = 0;
  uint64_t v8 = (uint64_t **)(Aligned + 1);
  Aligned[2] = v7;
  Aligned[3] = 0;
  void *Aligned = Aligned + 1;
  uint64_t v9 = v23;
  if (v23 != &v24)
  {
    do
    {
      unint64_t v10 = *(uint64_t **)(v6 + 8);
      uint64_t v11 = v8;
      if (*(uint64_t ***)v6 == v8) {
        goto LABEL_11;
      }
      uint64_t v12 = *(void *)(v6 + 8);
      uint64_t v13 = v8;
      if (v10)
      {
        do
        {
          uint64_t v11 = (uint64_t **)v12;
          uint64_t v12 = *(void *)(v12 + 8);
        }
        while (v12);
      }
      else
      {
        do
        {
          uint64_t v11 = (uint64_t **)v13[2];
          BOOL v14 = *v11 == (uint64_t *)v13;
          uint64_t v13 = v11;
        }
        while (v14);
      }
      uint64_t v15 = *v9[4];
      if (*v11[4] < v15)
      {
LABEL_11:
        if (v10) {
          long long v16 = v11;
        }
        else {
          long long v16 = v8;
        }
        if (v10) {
          uint64_t v17 = v11 + 1;
        }
        else {
          uint64_t v17 = v8;
        }
      }
      else
      {
        long long v16 = v8;
        uint64_t v17 = v8;
        if (v10)
        {
          uint64_t v17 = v8;
          while (1)
          {
            while (1)
            {
              long long v16 = (uint64_t **)v10;
              uint64_t v21 = *(void *)v10[4];
              if (v15 >= v21) {
                break;
              }
              unint64_t v10 = *v16;
              uint64_t v17 = v16;
              if (!*v16) {
                goto LABEL_18;
              }
            }
            if (v21 >= v15) {
              break;
            }
            uint64_t v17 = v16 + 1;
            unint64_t v10 = v16[1];
            if (!v10) {
              goto LABEL_18;
            }
          }
        }
      }
      if (!*v17)
      {
LABEL_18:
        char v18 = (uint64_t *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(v6 + 16));
        v18[4] = (uint64_t)v9[4];
        std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)v6, (uint64_t)v16, v17, v18);
      }
      unint64_t v19 = v9[1];
      if (v19)
      {
        do
        {
          long long v20 = (void **)v19;
          unint64_t v19 = (void *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          long long v20 = (void **)v9[2];
          BOOL v14 = *v20 == v9;
          uint64_t v9 = v20;
        }
        while (!v14);
      }
      uint64_t v9 = v20;
    }
    while (v20 != &v24);
  }
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&v23, v24);
  google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, v6);
  __n128 result = google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_1DC0CE0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(v10, *(void **)(v10 + 8));
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void google::protobuf::Map<long long,std::string>::InnerMap::Resize(uint64_t a1, uint64_t a2, size_t a3)
{
  unint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2;
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(*(google::protobuf::Arena **)(a1 + 40), a2, a3);
  bzero(v7, 8 * a2);
  unint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a1 + 8);
  *(void *)(a1 + 32) = v7;
  while (v8 < v5)
  {
    uint64_t v9 = v6[v8];
    if (v9)
    {
      if (v9 == v6[v8 ^ 1])
      {
        uint64_t v11 = *(void **)v9;
        do
        {
          google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v15, a1, (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + *(void *)v11[4]), (uint64_t *)v11[4]);
          uint64_t v12 = (void *)v11[1];
          if (v12)
          {
            do
            {
              uint64_t v13 = v12;
              uint64_t v12 = (void *)*v12;
            }
            while (v12);
          }
          else
          {
            do
            {
              uint64_t v13 = (void *)v11[2];
              BOOL v14 = *v13 == (void)v11;
              uint64_t v11 = v13;
            }
            while (!v14);
          }
          uint64_t v11 = v13;
        }
        while (v13 != (void *)(v9 + 8));
        ++v8;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(*(void *)(a1 + 40), (void **)v9);
      }
      else
      {
        do
        {
          uint64_t v10 = *(void *)(v9 + 16);
          google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v15, a1, (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + *(void *)v9), (uint64_t *)v9);
          uint64_t v9 = v10;
        }
        while (v10);
      }
    }
    ++v8;
  }
  if (!*(void *)(a1 + 40))
  {
    operator delete(v6);
  }
}

void *CoreML::Specification::Int64ToStringMap::MergeFrom(CoreML::Specification::Int64ToStringMap *this, const CoreML::Specification::Int64ToStringMap *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  __n128 result = google::protobuf::Map<std::string,std::string>::begin(v11, *((void **)a2 + 5));
  uint64_t v6 = v11[0];
  if (v11[0])
  {
    uint64_t v7 = (char *)this + 24;
    do
    {
      unint64_t v8 = (google::protobuf::Arena **)v6[1];
      uint64_t v9 = (const std::string *)(v8 + 1);
      uint64_t v10 = google::protobuf::Map<long long,std::string>::operator[]((uint64_t)v7, v8);
      std::string::operator=((std::string *)v10, v9);
      __n128 result = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v11);
      uint64_t v6 = v11[0];
    }
    while (v11[0]);
  }
  return result;
}

uint64_t CoreML::Specification::Int64ToStringMap::IsInitialized(CoreML::Specification::Int64ToStringMap *this)
{
  return 1;
}

void CoreML::Specification::Int64ToStringMap::Clear(CoreML::Specification::Int64ToStringMap *this)
{
}

void CoreML::Specification::Int64ToStringMap::New(CoreML::Specification::Int64ToStringMap *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0CE344(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64ToStringMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    __n128 result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *__n128 result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToStringMap>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToStringMap>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Int64ToStringMap::New(CoreML::Specification::Int64ToStringMap *this)
{
}

void *CoreML::Specification::Int64ToStringMap::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64ToStringMap");
}

void CoreML::Specification::Int64ToStringMap::~Int64ToStringMap(CoreML::Specification::Int64ToStringMap *this)
{
  *(void *)this = &unk_1F361D6A8;
  google::protobuf::Map<long long,std::string>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361D6A8;
  google::protobuf::Map<long long,std::string>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1F3627790;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryLite(void *a1)
{
  *a1 = &unk_1F3627790;
  if ((void *)a1[1] != a1 && !a1[4]) {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  return a1;
}

void *google::protobuf::Map<std::string,long long>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  uint64_t v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  uint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0CE664(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0CE620);
}

void CoreML::Specification::StringToInt64Map::New(CoreML::Specification::StringToInt64Map *this)
{
}

void *CoreML::Specification::StringToInt64Map::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringToInt64Map");
}

void CoreML::Specification::StringToInt64Map::~StringToInt64Map(CoreML::Specification::StringToInt64Map *this)
{
  *(void *)this = &unk_1F361DB68;
  google::protobuf::Map<std::string,long long>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361DB68;
  google::protobuf::Map<std::string,long long>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t *CoreML::Specification::Int64Range::default_instance(CoreML::Specification::Int64Range *this)
{
  return &CoreML::Specification::_Int64Range_default_instance_;
}

uint64_t *CoreML::Specification::Int64Set::default_instance(CoreML::Specification::Int64Set *this)
{
  return &CoreML::Specification::_Int64Set_default_instance_;
}

uint64_t *CoreML::Specification::DoubleRange::default_instance(CoreML::Specification::DoubleRange *this)
{
  return &CoreML::Specification::_DoubleRange_default_instance_;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  double v5 = *(double *)(this + 16);
  if (v5 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  }
  double v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  }
  return this;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v1 += 9;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

BOOL CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_Gaussian *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        double v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        uint64_t v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v13 = v16;
        }
        else
        {
          unint64_t v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 9) {
        break;
      }
      unint64_t v16 = 0;
      uint64_t v10 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
        if (!result) {
          return result;
        }
        unint64_t v11 = v16;
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::IsInitialized(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::BayesianProbitRegressor_Gaussian::New(CoreML::Specification::BayesianProbitRegressor_Gaussian *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0CEA18(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::BayesianProbitRegressor_Gaussian *CoreML::Specification::BayesianProbitRegressor_Gaussian::BayesianProbitRegressor_Gaussian(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  *(void *)this = &unk_1F3624188;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BayesianProbitRegressor_Gaussian *)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_) {
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0CEAA0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_Gaussian>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_Gaussian>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_Gaussian>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::TableStruct *this)
{
  google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_ = (uint64_t)&unk_1F3624188;
  unk_1EC005870 = 0;
  qword_1EC005878 = 0;
  unk_1EC005880 = 0;
  dword_1EC005888 = 0;
  byte_1EC005890 = 1;
  CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_ = (uint64_t)&unk_1F3624E98;
  *(void *)algn_1EC005CE8 = 0;
  unk_1EC005CF8 = 0;
  byte_1EC005D00 = 1;
  CoreML::Specification::_BayesianProbitRegressor_FeatureWeight_default_instance_ = (uint64_t)&unk_1F3624A70;
  double result = 0.0;
  *(_OWORD *)algn_1EC005B60 = 0u;
  *(_OWORD *)&algn_1EC005B60[16] = 0u;
  qword_1EC005B80 = 0;
  byte_1EC005B88 = 1;
  CoreML::Specification::_BayesianProbitRegressor_default_instance_ = (uint64_t)&unk_1F3621630;
  unk_1EC004638 = 0u;
  unk_1EC004628 = 0u;
  qword_1EC004648 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004650 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004658 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004660 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004668 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004670 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004678 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004680 = &google::protobuf::internal::fixed_address_empty_string;
  byte_1EC004698 = 1;
  qword_1EC005CF0 = (uint64_t)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_;
  qword_1EC004688 = (uint64_t)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_;
  unk_1EC004690 = 0;
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor::GetCachedSize(CoreML::Specification::BayesianProbitRegressor *this)
{
  return *((unsigned int *)this + 29);
}

uint64_t CoreML::Specification::BayesianProbitRegressor::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 28);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    uint64_t v7 = *((void *)this + 13);
    if (v7) {
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
    }
  }
  int v8 = *((_DWORD *)this + 6);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(*((void *)this + 4) + 8 * i + 8), a2);
  }
  uint64_t v10 = (unsigned int *)*((void *)this + 5);
  if (*((char *)v10 + 23) < 0)
  {
    uint64_t v11 = *((void *)v10 + 1);
    if (!v11) {
      goto LABEL_15;
    }
    uint64_t v10 = *(unsigned int **)v10;
    goto LABEL_14;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((unsigned char *)v10 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 5), a2);
  }
LABEL_15:
  uint64_t v12 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v12 + 23) < 0)
  {
    uint64_t v13 = *((void *)v12 + 1);
    if (!v13) {
      goto LABEL_21;
    }
    uint64_t v12 = *(unsigned int **)v12;
    goto LABEL_20;
  }
  LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *((unsigned __int8 *)v12 + 23);
  if (*((unsigned char *)v12 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xBu, *((void *)this + 6), a2);
  }
LABEL_21:
  BOOL v14 = (unsigned int *)*((void *)this + 7);
  if (*((char *)v14 + 23) < 0)
  {
    uint64_t v15 = *((void *)v14 + 1);
    if (!v15) {
      goto LABEL_27;
    }
    BOOL v14 = *(unsigned int **)v14;
    goto LABEL_26;
  }
  LODWORD(v15) = *((unsigned __int8 *)v14 + 23);
  if (*((unsigned char *)v14 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, v15, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCu, *((void *)this + 7), a2);
  }
LABEL_27:
  unint64_t v16 = (unsigned int *)*((void *)this + 8);
  if (*((char *)v16 + 23) < 0)
  {
    uint64_t v17 = *((void *)v16 + 1);
    if (!v17) {
      goto LABEL_33;
    }
    unint64_t v16 = *(unsigned int **)v16;
    goto LABEL_32;
  }
  LODWORD(v17) = *((unsigned __int8 *)v16 + 23);
  if (*((unsigned char *)v16 + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v16, v17, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xDu, *((void *)this + 8), a2);
  }
LABEL_33:
  char v18 = (unsigned int *)*((void *)this + 9);
  if (*((char *)v18 + 23) < 0)
  {
    uint64_t v19 = *((void *)v18 + 1);
    if (!v19) {
      goto LABEL_39;
    }
    char v18 = *(unsigned int **)v18;
    goto LABEL_38;
  }
  LODWORD(v19) = *((unsigned __int8 *)v18 + 23);
  if (*((unsigned char *)v18 + 23))
  {
LABEL_38:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v18, v19, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((void *)this + 9), a2);
  }
LABEL_39:
  long long v20 = (unsigned int *)*((void *)this + 10);
  if (*((char *)v20 + 23) < 0)
  {
    uint64_t v21 = *((void *)v20 + 1);
    if (!v21) {
      goto LABEL_45;
    }
    long long v20 = *(unsigned int **)v20;
    goto LABEL_44;
  }
  LODWORD(v21) = *((unsigned __int8 *)v20 + 23);
  if (*((unsigned char *)v20 + 23))
  {
LABEL_44:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v20, v21, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, *((void *)this + 10), a2);
  }
LABEL_45:
  unint64_t v22 = (unsigned int *)*((void *)this + 11);
  if (*((char *)v22 + 23) < 0)
  {
    uint64_t v23 = *((void *)v22 + 1);
    if (!v23) {
      goto LABEL_51;
    }
    unint64_t v22 = *(unsigned int **)v22;
    goto LABEL_50;
  }
  LODWORD(v2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *((unsigned __int8 *)v22 + 23);
  if (*((unsigned char *)v22 + 23))
  {
LABEL_50:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v22, v23, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x16u, *((void *)this + 11), a2);
  }
LABEL_51:
  uint64_t result = *((void *)this + 12);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v25 = *(void *)(result + 8);
    if (!v25) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v25) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v25, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName");
  uint64_t v26 = *((void *)this + 12);
  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x17u, v26, a2);
}

uint64_t CoreML::Specification::BayesianProbitRegressor::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::BayesianProbitRegressor_FeatureWeight::ByteSizeLong(*(CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((void *)this + 5);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v9 = *((void *)this + 6);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_16;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v12 = *((void *)this + 7);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_21:
  uint64_t v15 = *((void *)this + 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_26;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_26;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_26:
  uint64_t v18 = *((void *)this + 9);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_31;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_31;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_31:
  uint64_t v21 = *((void *)this + 10);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(void *)(v21 + 8)) {
      goto LABEL_36;
    }
  }
  else if (!*(unsigned char *)(v21 + 23))
  {
    goto LABEL_36;
  }
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_36:
  uint64_t v24 = *((void *)this + 11);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
  if (*(char *)(v24 + 23) < 0)
  {
    if (!*(void *)(v24 + 8)) {
      goto LABEL_41;
    }
  }
  else if (!*(unsigned char *)(v24 + 23))
  {
    goto LABEL_41;
  }
  uint64_t v26 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    uint64_t v26 = v25;
  }
  v4 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_41:
  uint64_t v27 = *((void *)this + 12);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
  if (*(char *)(v27 + 23) < 0)
  {
    if (!*(void *)(v27 + 8)) {
      goto LABEL_46;
    }
  }
  else if (!*(unsigned char *)(v27 + 23))
  {
    goto LABEL_46;
  }
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) == 0) {
    uint64_t v29 = v28;
  }
  v4 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_46:
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    uint64_t v30 = *((void *)this + 13);
    if (v30)
    {
      uint64_t v31 = 9;
      if (*(double *)(v30 + 16) == 0.0) {
        uint64_t v31 = 0;
      }
      if (*(double *)(v30 + 24) != 0.0) {
        v31 += 9;
      }
      *(_DWORD *)(v30 + 32) = v31;
      v4 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  int v32 = *((_DWORD *)this + 28);
  if (v32) {
    v4 += ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 29) = v4;
  return v4;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::ByteSizeLong(*(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  int v6 = *((_DWORD *)this + 10);
  if (v6) {
    v4 += ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  if (this == (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    uint64_t v1 = 0;
  }
  else
  {
    uint64_t v1 = *((void *)this + 2);
    if (v1)
    {
      uint64_t v2 = 9;
      if (*(double *)(v1 + 16) == 0.0) {
        uint64_t v2 = 0;
      }
      if (*(double *)(v1 + 24) != 0.0) {
        v2 += 9;
      }
      *(_DWORD *)(v1 + 32) = v2;
      uint64_t v1 = v2 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  int v3 = *((_DWORD *)this + 6);
  if (v3) {
    v1 += ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

BOOL CoreML::Specification::BayesianProbitRegressor::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int64_t v50 = (std::string **)((char *)this + 88);
  int64_t v51 = (std::string **)((char *)this + 96);
  uint64_t v5 = (std::string **)((char *)this + 72);
  int v6 = (std::string **)((char *)this + 64);
  uint64_t v7 = (std::string **)((char *)this + 56);
  uint64_t v8 = (std::string **)((char *)this + 48);
  uint64_t v9 = (std::string **)((char *)this + 40);
  unint64_t v48 = (CoreML::Specification::BayesianProbitRegressor *)((char *)this + 16);
  int64_t v49 = (std::string **)((char *)this + 80);
  while (1)
  {
LABEL_2:
    uint64_t v10 = *(unsigned __int8 **)a2;
    unint64_t v11 = *((void *)a2 + 1);
    if (*(void *)a2 >= v11)
    {
      LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      goto LABEL_16;
    }
    uint64_t v12 = v10 + 1;
    uint64_t v13 = *v10;
    if ((char)*v10 >= 1)
    {
      *(void *)a2 = v12;
      unint64_t v14 = v13 | 0x100000000;
      if ((v14 & 0x100000000) != 0) {
        goto LABEL_17;
      }
      goto LABEL_9;
    }
    if ((unint64_t)v12 < v11)
    {
      int v15 = *v12;
      if ((v13 & ~v15) >= 0x80) {
        break;
      }
    }
LABEL_16:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
    unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v14 & 0x100000000) != 0) {
      goto LABEL_17;
    }
LABEL_9:
    if (v14) {
      BOOL v16 = (v14 & 7) == 4;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0) {
      goto LABEL_122;
    }
  }
  *(void *)a2 = v10 + 2;
  unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
LABEL_17:
  switch(v14 >> 3)
  {
    case 1u:
      if (v14 != 8) {
        goto LABEL_9;
      }
      uint64_t v18 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v19 = 0;
      }
      else
      {
        int v19 = *v18;
        if ((*v18 & 0x80000000) == 0)
        {
          *((_DWORD *)this + 28) = v19;
          *(void *)a2 = v18 + 1;
          goto LABEL_2;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
      *((_DWORD *)this + 28) = Varint32Fallback;
      if (Varint32Fallback < 0) {
        goto LABEL_122;
      }
      goto LABEL_2;
    case 2u:
      if (v14 != 18) {
        goto LABEL_9;
      }
      uint64_t v20 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)*((void *)this + 13);
      if (!v20) {
        operator new();
      }
      uint64_t v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_122;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v21;
        *(void *)a2 = v21 + 1;
      }
      int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v32 = *((_DWORD *)a2 + 13);
      BOOL v33 = __OFSUB__(v32--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v32;
      if (v32 < 0 != v33) {
        goto LABEL_122;
      }
      int v34 = v30;
      BOOL result = CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(v20, (char **)a2, v31);
      if (!result) {
        return result;
      }
      goto LABEL_118;
    case 3u:
      if (v14 != 26) {
        goto LABEL_9;
      }
      uint64_t v23 = (int *)*((void *)this + 4);
      if (!v23)
      {
        int v24 = *((_DWORD *)this + 6);
        int v25 = *((_DWORD *)this + 7);
LABEL_104:
        if (v24 <= v25)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v48, v25 - v24 + 1);
          uint64_t v23 = (int *)*((void *)this + 4);
        }
        int v25 = *v23;
        goto LABEL_107;
      }
      int v24 = *((_DWORD *)this + 6);
      int v25 = *v23;
      if (v24 < *v23)
      {
        *((_DWORD *)this + 6) = v24 + 1;
        Aligned = *(google::protobuf::Arena ***)&v23[2 * v24 + 2];
        goto LABEL_112;
      }
      if (v25 == *((_DWORD *)this + 7)) {
        goto LABEL_104;
      }
LABEL_107:
      *uint64_t v23 = v25 + 1;
      uint64_t v36 = *(google::protobuf::Arena **)v48;
      if (!*(void *)v48) {
        operator new();
      }
      CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight((CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)Aligned);
      long long v37 = google::protobuf::Arena::AllocateAligned(v36, 0, 24);
      long long *v37 = (google::protobuf::Arena *)Aligned;
      v37[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>;
      double v38 = (unint64_t *)((char *)v36 + 32);
      do
        unint64_t v39 = __ldxr(v38);
      while (__stxr((unint64_t)v37, v38));
      v37[2] = (google::protobuf::Arena *)v39;
      uint64_t v40 = *((void *)this + 4);
      uint64_t v41 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v41 + 1;
      *(void *)(v40 + 8 * v41 + 8) = Aligned;
LABEL_112:
      v42 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v42 < 0)
      {
        int v43 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v43 < 0) {
          goto LABEL_122;
        }
      }
      else
      {
        int v43 = *v42;
        *(void *)a2 = v42 + 1;
      }
      int v44 = google::protobuf::io::CodedInputStream::PushLimit(a2, v43);
      int v46 = *((_DWORD *)a2 + 13);
      BOOL v33 = __OFSUB__(v46--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v46;
      if (v46 < 0 == v33)
      {
        int v34 = v44;
        BOOL result = CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergePartialFromCodedStream((CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)Aligned, a2, v45);
        if (!result) {
          return result;
        }
LABEL_118:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v34)) {
          goto LABEL_2;
        }
      }
LABEL_122:
      BOOL result = 0;
      break;
    case 0xAu:
      if (v14 != 82) {
        goto LABEL_9;
      }
      if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v9);
      if (!result) {
        return result;
      }
      uint64_t v28 = *v9;
      if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
      }
      BOOL v35 = "CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName";
      goto LABEL_101;
    case 0xBu:
      if (v14 != 90) {
        goto LABEL_9;
      }
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v8);
      if (!result) {
        return result;
      }
      uint64_t v28 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      BOOL v35 = "CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName";
      goto LABEL_101;
    case 0xCu:
      if (v14 != 98) {
        goto LABEL_9;
      }
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7);
      if (!result) {
        return result;
      }
      uint64_t v28 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      BOOL v35 = "CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName";
      goto LABEL_101;
    case 0xDu:
      if (v14 != 106) {
        goto LABEL_9;
      }
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
      if (!result) {
        return result;
      }
      uint64_t v28 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      BOOL v35 = "CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName";
      goto LABEL_101;
    case 0x14u:
      if (v14 != 162) {
        goto LABEL_9;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
      if (!result) {
        return result;
      }
      uint64_t v28 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      BOOL v35 = "CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName";
      goto LABEL_101;
    case 0x15u:
      if (v14 != 170) {
        goto LABEL_9;
      }
      if (*v49 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v49, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v49);
      if (!result) {
        return result;
      }
      uint64_t v28 = *v49;
      if (SHIBYTE((*v49)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v49)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v49)->__r_.__value_.__r.__words[2]);
      }
      BOOL v35 = "CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName";
      goto LABEL_101;
    case 0x16u:
      if (v14 != 178) {
        goto LABEL_9;
      }
      if (*v50 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v50, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v50);
      if (!result) {
        return result;
      }
      uint64_t v28 = *v50;
      if (SHIBYTE((*v50)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v50)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v50)->__r_.__value_.__r.__words[2]);
      }
      BOOL v35 = "CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName";
      goto LABEL_101;
    case 0x17u:
      if (v14 != 186) {
        goto LABEL_9;
      }
      if (*v51 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v51, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v51);
      if (!result) {
        return result;
      }
      uint64_t v28 = *v51;
      if (SHIBYTE((*v51)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v51)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v51)->__r_.__value_.__r.__words[2]);
      }
      BOOL v35 = "CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName";
LABEL_101:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v28, size, 0, (uint64_t)v35)) {
        goto LABEL_122;
      }
      goto LABEL_2;
    default:
      goto LABEL_9;
  }
  return result;
}

void sub_1DC0CFB64(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C408C5061CCLL);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_21;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_21;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 18) {
          goto LABEL_21;
        }
        uint64_t v13 = (int *)*((void *)this + 4);
        if (!v13)
        {
          int v14 = *((_DWORD *)this + 6);
          int v15 = *((_DWORD *)this + 7);
          goto LABEL_29;
        }
        int v14 = *((_DWORD *)this + 6);
        int v15 = *v13;
        if (v14 >= *v13)
        {
          if (v15 == *((_DWORD *)this + 7))
          {
LABEL_29:
            if (v14 <= v15)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v15 - v14 + 1);
              uint64_t v13 = (int *)*((void *)this + 4);
            }
            int v15 = *v13;
          }
          *uint64_t v13 = v15 + 1;
          uint64_t v18 = *(google::protobuf::Arena **)v5;
          if (!*(void *)v5) {
            operator new();
          }
          CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight((CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)Aligned);
          int v19 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
          *int v19 = (google::protobuf::Arena *)Aligned;
          v19[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>;
          uint64_t v20 = (unint64_t *)((char *)v18 + 32);
          do
            unint64_t v21 = __ldxr(v20);
          while (__stxr((unint64_t)v19, v20));
          v19[2] = (google::protobuf::Arena *)v21;
          uint64_t v22 = *((void *)this + 4);
          uint64_t v23 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v23 + 1;
          *(void *)(v22 + 8 * v23 + 8) = Aligned;
          goto LABEL_37;
        }
        *((_DWORD *)this + 6) = v14 + 1;
        Aligned = *(google::protobuf::Arena ***)&v13[2 * v14 + 2];
LABEL_37:
        int v24 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v24;
          *(void *)a2 = v24 + 1;
        }
        int v26 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v28 = *((_DWORD *)a2 + 13);
        BOOL v29 = __OFSUB__(v28--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v28;
        if (v28 < 0 == v29)
        {
          int v30 = v26;
          BOOL result = CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergePartialFromCodedStream((CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)Aligned, a2, v27);
          if (!result) {
            return result;
          }
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v30)) {
            continue;
          }
        }
        return 0;
      }
      if (v8 >> 3 != 1 || v8 != 8) {
        break;
      }
      unint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v12 = 0;
        goto LABEL_46;
      }
      int v12 = *v11;
      if (*v11 < 0)
      {
LABEL_46:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v12);
        *((_DWORD *)this + 1CoreML::Specification::StringToInt64Map::New(this, 0) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 1CoreML::Specification::StringToInt64Map::New(this, 0) = v12;
        *(void *)a2 = v11 + 1;
      }
    }
LABEL_21:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0CFE94(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_22;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *(void *)a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_22;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 18) {
          goto LABEL_22;
        }
        int v12 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)*((void *)this + 2);
        if (!v12) {
          operator new();
        }
        uint64_t v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v18 = *((_DWORD *)a2 + 13);
        BOOL v19 = __OFSUB__(v18--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
        if (v18 < 0 == v19)
        {
          int v20 = v16;
          BOOL result = CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(v12, (char **)a2, v17);
          if (!result) {
            return result;
          }
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20)) {
            continue;
          }
        }
        return 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v11 = 0;
        goto LABEL_34;
      }
      int v11 = *v10;
      if (*v10 < 0)
      {
LABEL_34:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
        *((_DWORD *)this + 6) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 6) = v11;
        *(void *)a2 = v10 + 1;
      }
    }
LABEL_22:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0D0068(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  *(void *)this = &unk_1F3624E98;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_) {
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0D00EC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::BayesianProbitRegressor_FeatureWeight *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  *(void *)this = &unk_1F3624A70;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureWeight_default_instance_) {
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_1DC0D0198(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

unint64_t *CoreML::Specification::BayesianProbitRegressor::MergeFrom(unint64_t *this, const CoreML::Specification::BayesianProbitRegressor *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v46 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    unsigned int v45 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (unint64_t **)this;
      int v11 = (const CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(v46 + 8);
      do
      {
        uint64_t v13 = *v11++;
        int v12 = v13;
        int v14 = *v10++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v45 + v17);
      BOOL v19 = (const CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(v17 + v46 + 8);
      do
      {
        int v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight((CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)Aligned);
        uint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *uint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(v20, (unint64_t *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    int v26 = (int *)v3[4];
    if (*v26 < v25) {
      *int v26 = v25;
    }
  }
  uint64_t v27 = *((void *)a2 + 5);
  if (*(char *)(v27 + 23) < 0)
  {
    if (!*(void *)(v27 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v27 + 23))
  {
    goto LABEL_28;
  }
  this = v3 + 5;
  int v28 = (uint64_t *)v3[5];
  if (v28 != (uint64_t *)v27)
  {
    if (v28 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v27);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[5], (const std::string *)v27);
  }
LABEL_28:
  uint64_t v29 = *((void *)a2 + 6);
  if (*(char *)(v29 + 23) < 0)
  {
    if (!*(void *)(v29 + 8)) {
      goto LABEL_36;
    }
  }
  else if (!*(unsigned char *)(v29 + 23))
  {
    goto LABEL_36;
  }
  this = v3 + 6;
  int v30 = (uint64_t *)v3[6];
  if (v30 != (uint64_t *)v29)
  {
    if (v30 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v29);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[6], (const std::string *)v29);
  }
LABEL_36:
  uint64_t v31 = *((void *)a2 + 7);
  if (*(char *)(v31 + 23) < 0)
  {
    if (!*(void *)(v31 + 8)) {
      goto LABEL_44;
    }
  }
  else if (!*(unsigned char *)(v31 + 23))
  {
    goto LABEL_44;
  }
  this = v3 + 7;
  int v32 = (uint64_t *)v3[7];
  if (v32 != (uint64_t *)v31)
  {
    if (v32 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v31);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[7], (const std::string *)v31);
  }
LABEL_44:
  uint64_t v33 = *((void *)a2 + 8);
  if (*(char *)(v33 + 23) < 0)
  {
    if (!*(void *)(v33 + 8)) {
      goto LABEL_52;
    }
  }
  else if (!*(unsigned char *)(v33 + 23))
  {
    goto LABEL_52;
  }
  this = v3 + 8;
  int v34 = (uint64_t *)v3[8];
  if (v34 != (uint64_t *)v33)
  {
    if (v34 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v33);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[8], (const std::string *)v33);
  }
LABEL_52:
  uint64_t v35 = *((void *)a2 + 9);
  if (*(char *)(v35 + 23) < 0)
  {
    if (!*(void *)(v35 + 8)) {
      goto LABEL_60;
    }
  }
  else if (!*(unsigned char *)(v35 + 23))
  {
    goto LABEL_60;
  }
  this = v3 + 9;
  uint64_t v36 = (uint64_t *)v3[9];
  if (v36 != (uint64_t *)v35)
  {
    if (v36 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v35);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[9], (const std::string *)v35);
  }
LABEL_60:
  uint64_t v37 = *((void *)a2 + 10);
  if (*(char *)(v37 + 23) < 0)
  {
    if (!*(void *)(v37 + 8)) {
      goto LABEL_68;
    }
  }
  else if (!*(unsigned char *)(v37 + 23))
  {
    goto LABEL_68;
  }
  this = v3 + 10;
  double v38 = (uint64_t *)v3[10];
  if (v38 != (uint64_t *)v37)
  {
    if (v38 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v37);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[10], (const std::string *)v37);
  }
LABEL_68:
  uint64_t v39 = *((void *)a2 + 11);
  if (*(char *)(v39 + 23) < 0)
  {
    if (!*(void *)(v39 + 8)) {
      goto LABEL_76;
    }
  }
  else if (!*(unsigned char *)(v39 + 23))
  {
    goto LABEL_76;
  }
  this = v3 + 11;
  uint64_t v40 = (uint64_t *)v3[11];
  if (v40 != (uint64_t *)v39)
  {
    if (v40 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v39);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[11], (const std::string *)v39);
  }
LABEL_76:
  uint64_t v41 = *((void *)a2 + 12);
  if (*(char *)(v41 + 23) < 0)
  {
    if (!*(void *)(v41 + 8)) {
      goto LABEL_84;
    }
  }
  else if (!*(unsigned char *)(v41 + 23))
  {
    goto LABEL_84;
  }
  this = v3 + 12;
  v42 = (uint64_t *)v3[12];
  if (v42 != (uint64_t *)v41)
  {
    if (v42 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v41);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[12], (const std::string *)v41);
  }
LABEL_84:
  if (a2 != (const CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_
    && *((void *)a2 + 13))
  {
    int v43 = (std::string *)v3[13];
    if (!v43) {
      operator new();
    }
    this = (unint64_t *)CoreML::Specification::SigmoidKernel::MergeFrom(v43, *((const CoreML::Specification::SigmoidKernel **)a2 + 13));
  }
  int v44 = *((_DWORD *)a2 + 28);
  if (v44) {
    *((_DWORD *)v3 + 28) = v44;
  }
  return this;
}

void sub_1DC0D0678(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *a1, unint64_t *a2)
{
  return CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergeFrom(a2, a1);
}

unint64_t *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergeFrom(unint64_t *this, const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v29 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    int v28 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (std::string **)this;
      int v11 = (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(v29 + 8);
      do
      {
        uint64_t v13 = *v11++;
        int v12 = v13;
        int v14 = *v10++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v28 + v17);
      BOOL v19 = (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(v17 + v29 + 8);
      do
      {
        int v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight((CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)Aligned);
        uint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *uint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(v20, (std::string *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    int v26 = (int *)v3[4];
    if (*v26 < v25) {
      *int v26 = v25;
    }
  }
  int v27 = *((_DWORD *)a2 + 10);
  if (v27) {
    *((_DWORD *)v3 + 1CoreML::Specification::StringToInt64Map::New(this, 0) = v27;
  }
  return this;
}

void sub_1DC0D0880(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *a1, std::string *a2)
{
  return CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergeFrom(std::string *this, const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_
    && v5 != 0)
  {
    uint64_t v7 = (std::string *)v3->__r_.__value_.__r.__words[2];
    if (!v7) {
      operator new();
    }
    if (v5) {
      int v8 = (const CoreML::Specification::SigmoidKernel *)*((void *)a2 + 2);
    }
    else {
      int v8 = (const CoreML::Specification::SigmoidKernel *)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_;
    }
    this = CoreML::Specification::SigmoidKernel::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 6);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
  }
  return this;
}

void sub_1DC0D0960(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor::IsInitialized(CoreML::Specification::BayesianProbitRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor::Clear(CoreML::Specification::BayesianProbitRegressor *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>(v4 + 16);
      *(_DWORD *)(v4 + 4CoreML::Specification::StringToInt64Map::New(this, 0) = 0;
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((void *)this + 5);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v6 = *((void *)this + 6);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v7 = *((void *)this + 7);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v8 = *((void *)this + 8);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)uint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v8 = 0;
      *(unsigned char *)(v8 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v9 = *((void *)this + 9);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v10 = *((void *)this + 10);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)uint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v10 = 0;
      *(unsigned char *)(v10 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v11 = *((void *)this + 11);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v12 = *((void *)this + 12);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v12 = 0;
      *(unsigned char *)(v12 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t result = *((void *)this + 13);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 28) = 0;
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(result + 16) + 8;
    do
    {
      uint64_t v4 = *(void *)v3;
      uint64_t result = *(void *)(*(void *)v3 + 16);
      if (result) {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      }
      *(void *)(v4 + 16) = 0;
      *(_DWORD *)(v4 + 24) = 0;
      v3 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void CoreML::Specification::BayesianProbitRegressor::New(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D0C58(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4092A090F6);
  _Unwind_Resume(a1);
}

CoreML::Specification::BayesianProbitRegressor *CoreML::Specification::BayesianProbitRegressor::BayesianProbitRegressor(CoreML::Specification::BayesianProbitRegressor *this)
{
  *(void *)this = &unk_1F3621630;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_) {
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1CoreML::Specification::StringToInt64Map::New(this, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 14) = 0;
  return this;
}

void sub_1DC0D0D08(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::BayesianProbitRegressor::New(CoreML::Specification::BayesianProbitRegressor *this)
{
}

void *CoreML::Specification::BayesianProbitRegressor::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor");
}

void CoreML::Specification::BayesianProbitRegressor::~BayesianProbitRegressor(CoreML::Specification::BayesianProbitRegressor *this)
{
  CoreML::Specification::BayesianProbitRegressor::~BayesianProbitRegressor(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(void *)this = &unk_1F3621630;
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 6);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 7);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1E0198C00](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 8);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x1E0198C00](v7, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1E0198C00](v8, 0x1012C40EC159624);
  }
  uint64_t v9 = *((void *)this + 10);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x1E0198C00](v9, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 11);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x1E0198C00](v10, 0x1012C40EC159624);
  }
  uint64_t v11 = *((void *)this + 12);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x1E0198C00](v11, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    uint64_t v12 = *((void *)this + 13);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((unsigned int *)this + 10);
  if (result) {
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteUInt32(result, a2, a3, a4);
  }
  int v7 = *((_DWORD *)this + 6);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
      uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(*((void *)this + 4) + 8 * i + 8), a2);
  }
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::IsInitialized(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::Clear(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>((uint64_t)this + 16);
  *((_DWORD *)this + 1CoreML::Specification::BayesianProbitRegressor::New(this, 0) = 0;
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D1164(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C408C5061CCLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
}

void *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.FeatureWeight");
}

void CoreML::Specification::BayesianProbitRegressor_FeatureWeight::~BayesianProbitRegressor_FeatureWeight(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  CoreML::Specification::BayesianProbitRegressor_FeatureWeight::~BayesianProbitRegressor_FeatureWeight(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3624A70;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((unsigned int *)this + 6);
  if (result) {
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteUInt32(result, a2, a3, a4);
  }
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    uint64_t v7 = *((void *)this + 2);
    if (v7)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
    }
  }
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::IsInitialized(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::Clear(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D13E0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
}

void *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight");
}

void CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::~BayesianProbitRegressor_FeatureValueWeight(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::~BayesianProbitRegressor_FeatureValueWeight(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F3624E98;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::BayesianProbitRegressor_Gaussian::New(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
}

void *CoreML::Specification::BayesianProbitRegressor_Gaussian::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.Gaussian");
}

void CoreML::Specification::BayesianProbitRegressor_Gaussian::~BayesianProbitRegressor_Gaussian(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  *(void *)this = &unk_1F3624188;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3624188;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::GetCachedSize(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 8);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v8 = *(void *)(result + 8);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t result = *(void *)result;
    goto LABEL_8;
  }
  LODWORD(v8) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordEmbedding.language");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 2), a2);
  }
LABEL_9:
  uint64_t v9 = *((void *)this + 3);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    return result;
  }
  return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v9, a2);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::ByteSizeLong(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  int v8 = *((_DWORD *)this + 8);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 9) = v4;
  return v4;
}

BOOL CoreML::Specification::CoreMLModels::WordEmbedding::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v7 = *(unsigned __int8 **)a2;
          unint64_t v8 = *((void *)a2 + 1);
          if (*(void *)a2 >= v8)
          {
            LODWORD(v1CoreML::Specification::BayesianProbitRegressor_Gaussian::New(this, 0) = 0;
LABEL_34:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
            unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v11 & 0x100000000) == 0) {
              goto LABEL_35;
            }
            goto LABEL_9;
          }
          uint64_t v9 = v7 + 1;
          uint64_t v10 = *v7;
          if ((char)*v7 < 1)
          {
            if ((unint64_t)v9 < v8)
            {
              int v12 = *v9;
              if ((v10 & ~v12) >= 0x80)
              {
                *(void *)a2 = v7 + 2;
                unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
                goto LABEL_9;
              }
            }
            goto LABEL_34;
          }
          *(void *)a2 = v9;
          unint64_t v11 = v10 | 0x100000000;
          if ((v11 & 0x100000000) == 0) {
            goto LABEL_35;
          }
LABEL_9:
          unsigned int v13 = v11 >> 3;
          if (v11 >> 3 != 100) {
            break;
          }
          if (v11 != 34) {
            goto LABEL_35;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5)) {
            return 0;
          }
        }
        if (v13 != 10) {
          break;
        }
        if (v11 != 82) {
          goto LABEL_35;
        }
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
        if (!result) {
          return result;
        }
        int v18 = (unsigned int *)*v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          int v18 = *(unsigned int **)v18;
          std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v18, size, 0, (uint64_t)"CoreML.Specification.CoreMLModels.WordEmbedding.language"))return 0; {
      }
        }
      if (v13 != 1 || v11 != 8) {
        break;
      }
      int v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v16 = 0;
        goto LABEL_42;
      }
      int v16 = *v15;
      if (*v15 < 0)
      {
LABEL_42:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
        *((_DWORD *)this + 8) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 8) = v16;
        *(void *)a2 = v15 + 1;
      }
    }
LABEL_35:
    if (!v11 || (v11 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
}

std::string *CoreML::Specification::CoreMLModels::WordEmbedding::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::WordEmbedding *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  data = (uint64_t *)v3[1].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v7);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  int v9 = *((_DWORD *)a2 + 8);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::IsInitialized(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v2 = *(void *)(this + 24);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::WordEmbedding::New(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D1B74(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::WordEmbedding *CoreML::Specification::CoreMLModels::WordEmbedding::WordEmbedding(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  *(void *)this = &unk_1F361AB50;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::WordEmbedding *)&CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0D1C04(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordEmbedding>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordEmbedding>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordEmbedding>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  BOOL result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_ = (uint64_t)&unk_1F361AB50;
  unk_1EC001550 = 0;
  qword_1EC001558 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC001560 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC001568 = 0;
  byte_1EC001570 = 1;
  return result;
}

void CoreML::Specification::CoreMLModels::WordEmbedding::New(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
}

void *CoreML::Specification::CoreMLModels::WordEmbedding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.WordEmbedding");
}

void CoreML::Specification::CoreMLModels::WordEmbedding::~WordEmbedding(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  *(void *)this = &unk_1F361AB50;
  unint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1F361AB50;
  unint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

uint64_t CoreML::Specification::Int64Parameter::GetCachedSize(CoreML::Specification::Int64Parameter *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::Int64Parameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  int v7 = *(_DWORD *)(v5 + 36);
  if (v7 == 10)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(10, *(void *)(v5 + 24), a2);
    int v7 = *(_DWORD *)(v5 + 36);
  }
  if (v7 == 11)
  {
    uint64_t v8 = *(void *)(v5 + 24);
    return google::protobuf::internal::WireFormatLite::WriteMessage(11, v8, a2);
  }
  return this;
}

unint64_t CoreML::Specification::Int64Parameter::ByteSizeLong(CoreML::Specification::Int64Parameter *this)
{
  uint64_t v2 = *((void *)this + 2);
  unint64_t v3 = (9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6;
  if (v2) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 11)
  {
    unint64_t v6 = CoreML::Specification::Int64Set::ByteSizeLong(*((CoreML::Specification::Int64Set **)this + 3));
    goto LABEL_8;
  }
  if (v5 == 10)
  {
    unint64_t v6 = CoreML::Specification::Int64Range::ByteSizeLong(*((CoreML::Specification::Int64Range **)this + 3));
LABEL_8:
    v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(CoreML::Specification::Int64Parameter *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_23;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *(void *)a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_23;
        }
LABEL_7:
        unsigned int v9 = v7 >> 3;
        if (v7 >> 3 == 11)
        {
          if (v7 != 90) {
            goto LABEL_23;
          }
          if (*((_DWORD *)this + 9) != 11)
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            operator new();
          }
          unsigned int v13 = (CoreML::Specification::Int64Set *)*((void *)this + 3);
          int v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v23 = *((_DWORD *)a2 + 13);
          BOOL v24 = __OFSUB__(v23--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v23;
          if (v23 < 0 != v24) {
            return 0;
          }
          int v25 = v21;
          uint64_t result = CoreML::Specification::Int64Set::MergePartialFromCodedStream(v13, a2, v22);
          if (!result) {
            return result;
          }
          goto LABEL_46;
        }
        if (v9 != 10) {
          break;
        }
        if (v7 != 82) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 9) != 10)
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          operator new();
        }
        int v14 = (CoreML::Specification::Int64Range *)*((void *)this + 3);
        int v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0) {
            return 0;
          }
        }
        else
        {
          int v19 = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
        int v29 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
        if (v29 < 0 != v24) {
          return 0;
        }
        int v25 = v27;
        uint64_t result = CoreML::Specification::Int64Range::MergePartialFromCodedStream(v14, (char **)a2, v28);
        if (!result) {
          return result;
        }
LABEL_46:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25)) {
          return 0;
        }
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      unint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_23:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0D21F8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64Parameter::clear_AllowedValues(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 11 || v2 == 10)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

std::string *CoreML::Specification::Int64Parameter::MergeFrom(std::string *this, const CoreML::Specification::Int64Parameter *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (v5) {
    *(void *)(v3 + 16) = v5;
  }
  int v6 = *((_DWORD *)a2 + 9);
  if (v6 == 11)
  {
    if (*(_DWORD *)(v3 + 36) != 11)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues(v3);
      *(_DWORD *)(v3 + 36) = 11;
      operator new();
    }
    uint64_t v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 3);
    uint64_t v10 = *(unint64_t **)(v3 + 24);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v10, v8);
  }
  else if (v6 == 10)
  {
    if (*(_DWORD *)(v3 + 36) != 10)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues(v3);
      *(_DWORD *)(v3 + 36) = 10;
      operator new();
    }
    unint64_t v7 = (const CoreML::Specification::Int64Range *)*((void *)a2 + 3);
    unsigned int v9 = *(std::string **)(v3 + 24);
    return CoreML::Specification::Int64Range::MergeFrom(v9, v7);
  }
  return this;
}

void sub_1DC0D2418(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64Parameter::IsInitialized(CoreML::Specification::Int64Parameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Parameter::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return CoreML::Specification::Int64Parameter::clear_AllowedValues(this);
}

void CoreML::Specification::Int64Parameter::New(CoreML::Specification::Int64Parameter *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D24BC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Parameter *CoreML::Specification::Int64Parameter::Int64Parameter(CoreML::Specification::Int64Parameter *this)
{
  *(void *)this = &unk_1F361BF80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Int64Parameter *)&CoreML::Specification::_Int64Parameter_default_instance_) {
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0D2544(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Parameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Parameter>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Parameter>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(CoreML::Specification::protobuf_Parameters_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_Parameters_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_Parameters_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Parameters_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  double result = 0.0;
  qword_1EC0022D0 = 0;
  qword_1EC0022B8 = 0;
  unk_1EC0022C0 = 0;
  CoreML::Specification::_Int64Parameter_default_instance_ = (uint64_t)&unk_1F361BF80;
  byte_1EC0022D8 = 1;
  qword_1EC002550 = 0;
  qword_1EC002538 = 0;
  unk_1EC002540 = 0;
  CoreML::Specification::_DoubleParameter_default_instance_ = (uint64_t)&unk_1F361C900;
  byte_1EC002558 = 1;
  CoreML::Specification::_StringParameter_default_instance_ = (uint64_t)&unk_1F361CDC0;
  unk_1EC002690 = 0;
  qword_1EC002698 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  dword_1EC0026A0 = 0;
  byte_1EC0026A8 = 1;
  CoreML::Specification::_BoolParameter_default_instance_ = (uint64_t)&unk_1F361B7C8;
  *(void *)algn_1EC001FB8 = 0;
  byte_1EC001FC0 = 0;
  dword_1EC001FC4 = 0;
  byte_1EC001FC8 = 1;
  return result;
}

uint64_t CoreML::Specification::BoolParameter::GetCachedSize(CoreML::Specification::BoolParameter *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::BoolParameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::BoolParameter::ByteSizeLong(CoreML::Specification::BoolParameter *this)
{
  uint64_t v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

uint64_t CoreML::Specification::BoolParameter::MergePartialFromCodedStream(CoreML::Specification::BoolParameter *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::BoolParameter::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::BoolParameter::IsInitialized(CoreML::Specification::BoolParameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::BoolParameter::Clear(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::BoolParameter::New(CoreML::Specification::BoolParameter *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D291C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

CoreML::Specification::BoolParameter *CoreML::Specification::BoolParameter::BoolParameter(CoreML::Specification::BoolParameter *this)
{
  *(void *)this = &unk_1F361B7C8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BoolParameter *)&CoreML::Specification::_BoolParameter_default_instance_) {
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1DC0D29A4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BoolParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BoolParameter>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BoolParameter>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::BoolParameter::New(CoreML::Specification::BoolParameter *this)
{
}

void *CoreML::Specification::BoolParameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BoolParameter");
}

void CoreML::Specification::BoolParameter::~BoolParameter(CoreML::Specification::BoolParameter *this)
{
  *(void *)this = &unk_1F361B7C8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361B7C8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::StringParameter::GetCachedSize(CoreML::Specification::StringParameter *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::StringParameter::SerializeWithCachedSizes(CoreML::Specification::StringParameter *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v5) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v5, 1, (uint64_t)"CoreML.Specification.StringParameter.defaultValue");
  uint64_t v6 = *((void *)this + 2);
  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, v6, a2);
}

uint64_t CoreML::Specification::StringParameter::ByteSizeLong(CoreML::Specification::StringParameter *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  *((_DWORD *)this + 6) = v4;
  return v4;
}

BOOL CoreML::Specification::StringParameter::MergePartialFromCodedStream(CoreML::Specification::StringParameter *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v4);
      if (!result) {
        return result;
      }
      int v12 = (unsigned int *)*v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v12 = *(unsigned int **)v12;
        std::string::size_type size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.StringParameter.defaultValue"))return 0; {
    }
      }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::StringParameter::IsInitialized(CoreML::Specification::StringParameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::StringParameter::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  return this;
}

void CoreML::Specification::StringParameter::New(CoreML::Specification::StringParameter *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D2DA4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

CoreML::Specification::StringParameter *CoreML::Specification::StringParameter::StringParameter(CoreML::Specification::StringParameter *this)
{
  *(void *)this = &unk_1F361CDC0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::StringParameter *)&CoreML::Specification::_StringParameter_default_instance_) {
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC0D2E34(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringParameter>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringParameter>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::StringParameter::New(CoreML::Specification::StringParameter *this)
{
}

void *CoreML::Specification::StringParameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringParameter");
}

void CoreML::Specification::StringParameter::~StringParameter(CoreML::Specification::StringParameter *this)
{
  *(void *)this = &unk_1F361CDC0;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361CDC0;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::DoubleParameter::GetCachedSize(CoreML::Specification::DoubleParameter *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::DoubleParameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  double v5 = *(double *)(this + 16);
  if (v5 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  }
  if (*(_DWORD *)(v4 + 36) == 10)
  {
    uint64_t v6 = *(void *)(v4 + 24);
    return google::protobuf::internal::WireFormatLite::WriteMessage(10, v6, a2);
  }
  return this;
}

uint64_t CoreML::Specification::DoubleParameter::ByteSizeLong(CoreML::Specification::DoubleParameter *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((_DWORD *)this + 9) == 10)
  {
    uint64_t v2 = *((void *)this + 3);
    uint64_t v3 = 9;
    if (*(double *)(v2 + 16) == 0.0) {
      uint64_t v3 = 0;
    }
    if (*(double *)(v2 + 24) != 0.0) {
      v3 += 9;
    }
    *(_DWORD *)(v2 + 32) = v3;
    v1 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

BOOL CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(CoreML::Specification::DoubleParameter *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        double v5 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0) {
          goto LABEL_7;
        }
LABEL_19:
        if (v7) {
          BOOL v13 = (v7 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_19;
      }
LABEL_7:
      if (v7 >> 3 == 10) {
        break;
      }
      if (v7 >> 3 != 1 || v7 != 9) {
        goto LABEL_19;
      }
      unint64_t v22 = 0;
      BOOL v10 = *(unint64_t **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v22);
        if (!result) {
          return result;
        }
        unint64_t v11 = v22;
      }
      else
      {
        unint64_t v11 = *v10;
        *(void *)a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
    if (v7 != 82) {
      goto LABEL_19;
    }
    if (*((_DWORD *)this + 9) != 10)
    {
      *((_DWORD *)this + 9) = 10;
      operator new();
    }
    int v12 = (CoreML::Specification::DoubleRange *)*((void *)this + 3);
    int v14 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        return 0;
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v14;
      *(void *)a2 = v14 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::DoubleRange::MergePartialFromCodedStream(v12, (char **)a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1DC0D3268(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::DoubleParameter::MergeFrom(std::string *this, const CoreML::Specification::DoubleParameter *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  if (*((_DWORD *)a2 + 9) == 10)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[1]) != 10)
    {
      HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = 10;
      operator new();
    }
    uint64_t v6 = (const CoreML::Specification::SigmoidKernel *)*((void *)a2 + 3);
    data = (std::string *)v3[1].__r_.__value_.__l.__data_;
    return CoreML::Specification::SigmoidKernel::MergeFrom(data, v6);
  }
  return this;
}

void sub_1DC0D3370(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DoubleParameter::IsInitialized(CoreML::Specification::DoubleParameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::DoubleParameter::Clear(uint64_t this)
{
  uint64_t v1 = this;
  *(void *)(this + 16) = 0;
  if (*(_DWORD *)(this + 36) == 10)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

void CoreML::Specification::DoubleParameter::New(CoreML::Specification::DoubleParameter *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D3450(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::DoubleParameter *CoreML::Specification::DoubleParameter::DoubleParameter(CoreML::Specification::DoubleParameter *this)
{
  *(void *)this = &unk_1F361C900;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_) {
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0D34D8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleParameter>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleParameter>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::DoubleParameter::New(CoreML::Specification::DoubleParameter *this)
{
}

void *CoreML::Specification::DoubleParameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleParameter");
}

void CoreML::Specification::DoubleParameter::~DoubleParameter(CoreML::Specification::DoubleParameter *this)
{
  CoreML::Specification::DoubleParameter::~DoubleParameter(this);
  JUMPOUT(0x1E0198C00);
}

{
  int v2;
  uint64_t v3;

  *(void *)this = &unk_1F361C900;
  uint64_t v2 = *((_DWORD *)this + 9);
  if (v2)
  {
    if (v2 == 10)
    {
      uint64_t v3 = *((void *)this + 3);
      if (v3) {
        (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      }
    }
    *((_DWORD *)this + 9) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::Int64Parameter::New(CoreML::Specification::Int64Parameter *this)
{
}

void *CoreML::Specification::Int64Parameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Parameter");
}

void CoreML::Specification::Int64Parameter::~Int64Parameter(CoreML::Specification::Int64Parameter *this)
{
  CoreML::Specification::Int64Parameter::~Int64Parameter(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361BF80;
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(unint64_t a1)
{
  if (a1 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a1);
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::GetCachedSize(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::ByteSizeLong(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  uint64_t v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppression_PickTop *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::NonMaximumSuppression_PickTop::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::IsInitialized(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  return 1;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::Clear(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::NonMaximumSuppression_PickTop::New(CoreML::Specification::NonMaximumSuppression_PickTop *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D3924(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

CoreML::Specification::NonMaximumSuppression_PickTop *CoreML::Specification::NonMaximumSuppression_PickTop::NonMaximumSuppression_PickTop(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  *(void *)this = &unk_1F3623B00;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppression_PickTop *)&CoreML::Specification::_NonMaximumSuppression_PickTop_default_instance_) {
    CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1DC0D39AC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NonMaximumSuppression_PickTop>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression_PickTop>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression_PickTop>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(CoreML::Specification::protobuf_NonMaximumSuppression_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  BOOL result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_NonMaximumSuppression_PickTop_default_instance_ = (uint64_t)&unk_1F3623B00;
  qword_1EC0055F8 = 0;
  byte_1EC005600 = 0;
  dword_1EC005604 = 0;
  byte_1EC005608 = 1;
  CoreML::Specification::_NonMaximumSuppression_default_instance_ = (uint64_t)&unk_1F3620920;
  *(void *)algn_1EC004048 = 0;
  qword_1EC004050 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004058 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004060 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004068 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004070 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004078 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004080 = 0;
  unk_1EC004088 = 0;
  dword_1EC0040A8 = 0;
  qword_1EC0040A0 = 0;
  byte_1EC0040B0 = 1;
  return result;
}

uint64_t CoreML::Specification::NonMaximumSuppression::GetCachedSize(CoreML::Specification::NonMaximumSuppression *this)
{
  return *((unsigned int *)this + 24);
}

uint64_t CoreML::Specification::NonMaximumSuppression::SerializeWithCachedSizes(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  if (*((_DWORD *)this + 25) == 1) {
    google::protobuf::internal::WireFormatLite::WriteMessage(1, *((void *)this + 10), a2);
  }
  int v5 = *((_DWORD *)this + 26);
  if (v5 == 100)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage(100, *((void *)this + 11), a2);
    int v5 = *((_DWORD *)this + 26);
  }
  if (v5 == 101) {
    google::protobuf::internal::WireFormatLite::WriteMessage(101, *((void *)this + 11), a2);
  }
  double v6 = *((double *)this + 8);
  if (v6 != 0.0) {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x6E, a2, v6, a3);
  }
  double v7 = *((double *)this + 9);
  if (v7 != 0.0) {
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x6F, a2, v7, a3);
  }
  uint64_t v8 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v8 + 23) < 0)
  {
    uint64_t v9 = *((void *)v8 + 1);
    if (!v9) {
      goto LABEL_17;
    }
    uint64_t v8 = *(unsigned int **)v8;
    goto LABEL_16;
  }
  LODWORD(v9) = *((unsigned __int8 *)v8 + 23);
  if (*((unsigned char *)v8 + 23))
  {
LABEL_16:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v8, v9, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xC8u, *((void *)this + 2), a2);
  }
LABEL_17:
  BOOL v10 = (unsigned int *)*((void *)this + 3);
  if (*((char *)v10 + 23) < 0)
  {
    uint64_t v11 = *((void *)v10 + 1);
    if (!v11) {
      goto LABEL_23;
    }
    BOOL v10 = *(unsigned int **)v10;
    goto LABEL_22;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((unsigned char *)v10 + 23))
  {
LABEL_22:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xC9u, *((void *)this + 3), a2);
  }
LABEL_23:
  int v12 = (unsigned int *)*((void *)this + 4);
  if (*((char *)v12 + 23) < 0)
  {
    uint64_t v13 = *((void *)v12 + 1);
    if (!v13) {
      goto LABEL_29;
    }
    int v12 = *(unsigned int **)v12;
    goto LABEL_28;
  }
  LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *((unsigned __int8 *)v12 + 23);
  if (*((unsigned char *)v12 + 23))
  {
LABEL_28:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCAu, *((void *)this + 4), a2);
  }
LABEL_29:
  int v14 = (unsigned int *)*((void *)this + 5);
  if (*((char *)v14 + 23) < 0)
  {
    uint64_t v15 = *((void *)v14 + 1);
    if (!v15) {
      goto LABEL_35;
    }
    int v14 = *(unsigned int **)v14;
    goto LABEL_34;
  }
  LODWORD(v15) = *((unsigned __int8 *)v14 + 23);
  if (*((unsigned char *)v14 + 23))
  {
LABEL_34:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, v15, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCBu, *((void *)this + 5), a2);
  }
LABEL_35:
  int v16 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v16 + 23) < 0)
  {
    uint64_t v17 = *((void *)v16 + 1);
    if (!v17) {
      goto LABEL_41;
    }
    int v16 = *(unsigned int **)v16;
    goto LABEL_40;
  }
  LODWORD(v17) = *((unsigned __int8 *)v16 + 23);
  if (*((unsigned char *)v16 + 23))
  {
LABEL_40:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v16, v17, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xD2u, *((void *)this + 6), a2);
  }
LABEL_41:
  uint64_t result = *((void *)this + 7);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v19 = *(void *)(result + 8);
    if (!v19) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v19) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v19, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName");
  uint64_t v20 = *((void *)this + 7);
  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xD3u, v20, a2);
}

uint64_t CoreML::Specification::NonMaximumSuppression::ByteSizeLong(CoreML::Specification::NonMaximumSuppression *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  uint64_t v9 = *((void *)this + 4);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_18;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v5 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_18:
  uint64_t v12 = *((void *)this + 5);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v5 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  uint64_t v15 = *((void *)this + 6);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v5 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_28:
  uint64_t v18 = *((void *)this + 7);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_33;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_33;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v5 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_33:
  if (*((double *)this + 8) != 0.0) {
    v5 += 10;
  }
  if (*((double *)this + 9) == 0.0) {
    uint64_t v21 = v5;
  }
  else {
    uint64_t v21 = v5 + 10;
  }
  if (*((_DWORD *)this + 25) == 1)
  {
    uint64_t v22 = *((void *)this + 10);
    uint64_t v23 = *(unsigned __int8 *)(v22 + 16);
    *(_DWORD *)(v22 + 2CoreML::Specification::Int64Parameter::New(this, 0) = 2 * v23;
    v21 += 2 * v23 + 2;
  }
  int v24 = *((_DWORD *)this + 26);
  if (v24 == 101)
  {
    uint64_t v25 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 11));
    goto LABEL_54;
  }
  if (v24 == 100)
  {
    uint64_t v25 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 11));
LABEL_54:
    v21 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 24) = v21;
  return v21;
}

uint64_t CoreML::Specification::NonMaximumSuppression::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v47 = (std::string **)((char *)this + 56);
  uint64_t v5 = (std::string **)((char *)this + 48);
  uint64_t v6 = (std::string **)((char *)this + 40);
  uint64_t v7 = (std::string **)((char *)this + 32);
  uint64_t v8 = (std::string **)((char *)this + 24);
  uint64_t v9 = (std::string **)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v10 = *(unsigned __int8 **)a2;
    unint64_t v11 = *((void *)a2 + 1);
    if (*(void *)a2 >= v11)
    {
      LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
    else
    {
      uint64_t v12 = v10 + 1;
      uint64_t v13 = *v10;
      if ((char)*v10 >= 1)
      {
        *(void *)a2 = v12;
        unint64_t v14 = v13 | 0x100000000;
        if ((v14 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      if ((unint64_t)v12 < v11)
      {
        int v15 = *v12;
        if ((v13 & ~v15) >= 0x80)
        {
          *(void *)a2 = v10 + 2;
          unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
    unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v14 & 0x100000000) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    unsigned int v18 = v14 >> 3;
    if (v14 >> 3 > 0x6D) {
      break;
    }
    if (v18 == 1)
    {
      if (v14 != 10) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 25) != 1)
      {
        *((_DWORD *)this + 25) = 1;
        operator new();
      }
      uint64_t v25 = (CoreML::Specification::NonMaximumSuppression_PickTop *)*((void *)this + 10);
      uint64_t v31 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v31;
        *(void *)a2 = v31 + 1;
      }
      int v40 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v42 = *((_DWORD *)a2 + 13);
      BOOL v38 = __OFSUB__(v42--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v42;
      if (v42 < 0 != v38) {
        return 0;
      }
      int v39 = v40;
      uint64_t result = CoreML::Specification::NonMaximumSuppression_PickTop::MergePartialFromCodedStream(v25, (char **)a2, v41);
      if (!result) {
        return result;
      }
    }
    else if (v18 == 100)
    {
      if (v14 != 34) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 26) != 100)
      {
        CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
        *((_DWORD *)this + 26) = 100;
        operator new();
      }
      int v26 = (CoreML::Specification::StringVector *)*((void *)this + 11);
      uint64_t v33 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v33 < 0)
      {
        int v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v34 < 0) {
          return 0;
        }
      }
      else
      {
        int v34 = *v33;
        *(void *)a2 = v33 + 1;
      }
      int v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
      int v45 = *((_DWORD *)a2 + 13);
      BOOL v38 = __OFSUB__(v45--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v45;
      if (v45 < 0 != v38) {
        return 0;
      }
      int v39 = v43;
      uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v26, (char **)a2, v44);
      if (!result) {
        return result;
      }
    }
    else
    {
      if (v18 != 101 || v14 != 42) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 26) != 101)
      {
        CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
        *((_DWORD *)this + 26) = 101;
        operator new();
      }
      uint64_t v22 = (CoreML::Specification::Int64Vector *)*((void *)this + 11);
      int v29 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v29 < 0)
      {
        int v30 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v30 < 0) {
          return 0;
        }
      }
      else
      {
        int v30 = *v29;
        *(void *)a2 = v29 + 1;
      }
      int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
      int v37 = *((_DWORD *)a2 + 13);
      BOOL v38 = __OFSUB__(v37--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v37;
      if (v37 < 0 != v38) {
        return 0;
      }
      int v39 = v35;
      uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v22, a2, v36);
      if (!result) {
        return result;
      }
    }
    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v39)) {
      return 0;
    }
  }
  switch(v18)
  {
    case 0xC8u:
      if (v14 != 66) {
        goto LABEL_9;
      }
      if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v9);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v9;
      if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
      }
      uint64_t v46 = "CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName";
      goto LABEL_114;
    case 0xC9u:
      if (v14 != 74) {
        goto LABEL_9;
      }
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v8);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      uint64_t v46 = "CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName";
      goto LABEL_114;
    case 0xCAu:
      if (v14 != 82) {
        goto LABEL_9;
      }
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      uint64_t v46 = "CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName";
      goto LABEL_114;
    case 0xCBu:
      if (v14 != 90) {
        goto LABEL_9;
      }
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      uint64_t v46 = "CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName";
      goto LABEL_114;
    case 0xCCu:
    case 0xCDu:
    case 0xCEu:
    case 0xCFu:
    case 0xD0u:
    case 0xD1u:
      goto LABEL_9;
    case 0xD2u:
      if (v14 != 146) {
        goto LABEL_9;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      uint64_t v46 = "CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName";
      goto LABEL_114;
    case 0xD3u:
      if (v14 != 154) {
        goto LABEL_9;
      }
      if (*v47 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v47, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v47);
      if (!result) {
        return result;
      }
      uint64_t v20 = *v47;
      if (SHIBYTE((*v47)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v47)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v47)->__r_.__value_.__r.__words[2]);
      }
      uint64_t v46 = "CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName";
LABEL_114:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v20, size, 0, (uint64_t)v46)) {
        return 0;
      }
      goto LABEL_2;
    default:
      if (v18 != 110)
      {
        if (v18 != 111 || v14 != 121) {
          goto LABEL_9;
        }
        unint64_t v48 = 0;
        uint64_t v23 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48);
          if (!result) {
            return result;
          }
          unint64_t v24 = v48;
        }
        else
        {
          unint64_t v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        *((void *)this + 9) = v24;
        goto LABEL_2;
      }
      if (v14 == 113)
      {
        unint64_t v48 = 0;
        int v27 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48);
          if (!result) {
            return result;
          }
          unint64_t v28 = v48;
        }
        else
        {
          unint64_t v28 = *v27;
          *(void *)a2 = v27 + 1;
        }
        *((void *)this + 8) = v28;
        goto LABEL_2;
      }
LABEL_9:
      if (v14) {
        BOOL v16 = (v14 & 7) == 4;
      }
      else {
        BOOL v16 = 1;
      }
      if (!v16)
      {
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      return 1;
  }
}

void sub_1DC0D4700(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NonMaximumSuppression::clear_ClassLabels(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 104);
  if (v2 == 101 || v2 == 100)
  {
    this = *(void *)(this + 88);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 104) = 0;
  return this;
}

std::string *CoreML::Specification::NonMaximumSuppression::MergeFrom(std::string *this, const CoreML::Specification::NonMaximumSuppression *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  data = (uint64_t *)v3[1].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v7);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  uint64_t v9 = *((void *)a2 + 4);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_27;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_27;
  }
  this = (std::string *)((char *)v3 + 32);
  std::string::size_type size = (uint64_t *)v3[1].__r_.__value_.__l.__size_;
  if (size != (uint64_t *)v9)
  {
    if (size == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v9);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__size_, (const std::string *)v9);
  }
LABEL_27:
  uint64_t v11 = *((void *)a2 + 5);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_35;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_35;
  }
  this = (std::string *)((char *)v3 + 40);
  uint64_t v12 = (uint64_t *)v3[1].__r_.__value_.__r.__words[2];
  if (v12 != (uint64_t *)v11)
  {
    if (v12 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v11);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__r.__words[2], (const std::string *)v11);
  }
LABEL_35:
  uint64_t v13 = *((void *)a2 + 6);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      goto LABEL_43;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    goto LABEL_43;
  }
  this = v3 + 2;
  unint64_t v14 = (uint64_t *)v3[2].__r_.__value_.__l.__data_;
  if (v14 != (uint64_t *)v13)
  {
    if (v14 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v13);
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__l.__data_, (const std::string *)v13);
  }
LABEL_43:
  uint64_t v15 = *((void *)a2 + 7);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_51;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_51;
  }
  this = (std::string *)((char *)v3 + 56);
  BOOL v16 = (uint64_t *)v3[2].__r_.__value_.__l.__size_;
  if (v16 != (uint64_t *)v15)
  {
    if (v16 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v15);
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__l.__size_, (const std::string *)v15);
  }
LABEL_51:
  double v17 = *((double *)a2 + 8);
  if (v17 != 0.0) {
    *(double *)&v3[2].__r_.__value_.__r.__words[2] = v17;
  }
  double v18 = *((double *)a2 + 9);
  if (v18 != 0.0) {
    *(double *)&v3[3].__r_.__value_.__l.__data_ = v18;
  }
  if (*((_DWORD *)a2 + 25) == 1)
  {
    if (HIDWORD(v3[4].__r_.__value_.__r.__words[0]) != 1)
    {
      HIDWORD(v3[4].__r_.__value_.__r.__words[0]) = 1;
      operator new();
    }
    std::string::size_type v19 = v3[3].__r_.__value_.__l.__size_;
    uint64_t v20 = *((void *)a2 + 10);
    uint64_t v21 = *(void *)(v20 + 8);
    if (v21) {
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v19 + 8), v21 & 0xFFFFFFFFFFFFFFFELL);
    }
    if (*(unsigned char *)(v20 + 16)) {
      *(unsigned char *)(v19 + 16) = 1;
    }
  }
  int v22 = *((_DWORD *)a2 + 26);
  if (v22 == 101)
  {
    if (LODWORD(v3[4].__r_.__value_.__r.__words[1]) != 101)
    {
      CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)v3);
      LODWORD(v3[4].__r_.__value_.__r.__words[1]) = 101;
      operator new();
    }
    unint64_t v24 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 11);
    int v26 = (unint64_t *)v3[3].__r_.__value_.__r.__words[2];
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v26, v24);
  }
  else if (v22 == 100)
  {
    if (LODWORD(v3[4].__r_.__value_.__r.__words[1]) != 100)
    {
      CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)v3);
      LODWORD(v3[4].__r_.__value_.__r.__words[1]) = 100;
      operator new();
    }
    uint64_t v23 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 11);
    uint64_t v25 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v25, v23);
  }
  return this;
}

void sub_1DC0D4BE8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NonMaximumSuppression::IsInitialized(CoreML::Specification::NonMaximumSuppression *this)
{
  return 1;
}

uint64_t CoreML::Specification::NonMaximumSuppression::Clear(CoreML::Specification::NonMaximumSuppression *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v5 = *((void *)this + 5);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v6 = *((void *)this + 6);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v7 = *((void *)this + 7);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  if (*((_DWORD *)this + 25) == 1)
  {
    uint64_t v8 = *((void *)this + 10);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
  }
  *((_DWORD *)this + 25) = 0;
  return CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
}

void CoreML::Specification::NonMaximumSuppression::New(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D4E1C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40D18C2FB1);
  _Unwind_Resume(a1);
}

CoreML::Specification::NonMaximumSuppression *CoreML::Specification::NonMaximumSuppression::NonMaximumSuppression(CoreML::Specification::NonMaximumSuppression *this)
{
  *(void *)this = &unk_1F3620920;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppression *)&CoreML::Specification::_NonMaximumSuppression_default_instance_) {
    CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 26) = 0;
  *((void *)this + 12) = 0;
  return this;
}

void sub_1DC0D4EBC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NonMaximumSuppression>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::NonMaximumSuppression::New(CoreML::Specification::NonMaximumSuppression *this)
{
}

void *CoreML::Specification::NonMaximumSuppression::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NonMaximumSuppression");
}

void CoreML::Specification::NonMaximumSuppression::~NonMaximumSuppression(CoreML::Specification::NonMaximumSuppression *this)
{
  CoreML::Specification::NonMaximumSuppression::~NonMaximumSuppression(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(void *)this = &unk_1F3620920;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 4);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1E0198C00](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 5);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x1E0198C00](v7, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 6);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1E0198C00](v8, 0x1012C40EC159624);
  }
  uint64_t v9 = *((void *)this + 7);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x1E0198C00](v9, 0x1012C40EC159624);
  }
  uint64_t v10 = *((_DWORD *)this + 25);
  if (v10)
  {
    if (v10 == 1)
    {
      uint64_t v11 = *((void *)this + 10);
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
    }
    *((_DWORD *)this + 25) = 0;
  }
  if (*((_DWORD *)this + 26)) {
    CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::NonMaximumSuppression_PickTop::New(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
}

void *CoreML::Specification::NonMaximumSuppression_PickTop::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NonMaximumSuppression.PickTop");
}

void CoreML::Specification::NonMaximumSuppression_PickTop::~NonMaximumSuppression_PickTop(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  *(void *)this = &unk_1F3623B00;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3623B00;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  }
  double v7 = *(double *)(v5 + 24);
  if (v7 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  return this;
}

unint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v3 += 9;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

BOOL CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        uint64_t v11 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v12 = v16;
        }
        else
        {
          unint64_t v12 = *v11;
          *a2 = (char *)(v11 + 1);
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v12;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v10;
        *a2 = v10 + 1;
      }
    }
LABEL_20:
    if (v7) {
      BOOL v13 = (v7 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergeFrom(std::string *this, const CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  double v6 = *((double *)a2 + 3);
  if (v6 != 0.0) {
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::IsInitialized(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  return 1;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D5524(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  *(void *)this = &unk_1F3624D68;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)&CoreML::Specification::_ItemSimilarityRecommender_ConnectedItem_default_instance_) {
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0D55AC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_ItemSimilarityRecommender_ConnectedItem_default_instance_ = (uint64_t)&unk_1F3624D68;
  *(void *)algn_1EC005C88 = 0;
  qword_1EC005C90 = 0;
  unk_1EC005C98 = 0;
  dword_1EC005CA0 = 0;
  byte_1EC005CA8 = 1;
  CoreML::Specification::_ItemSimilarityRecommender_SimilarItems_default_instance_ = (uint64_t)&unk_1F3624C38;
  double result = 0.0;
  unk_1EC005BF0 = 0u;
  unk_1EC005C00 = 0u;
  unk_1EC005C10 = 0u;
  dword_1EC005C20 = 0;
  byte_1EC005C28 = 1;
  CoreML::Specification::_ItemSimilarityRecommender_default_instance_ = (uint64_t)&unk_1F3622470;
  unk_1EC004D38 = 0u;
  unk_1EC004D48 = 0u;
  qword_1EC004D58 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004D60 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004D68 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004D70 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004D78 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004D80 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EC004D98 = 0;
  byte_1EC004DA0 = 1;
  qword_1EC004D88 = (uint64_t)&CoreML::Specification::_StringVector_default_instance_;
  unk_1EC004D90 = &CoreML::Specification::_Int64Vector_default_instance_;
  return result;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::SerializeWithCachedSizes(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    for (int i = 0; i != v4; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*((void *)this + 4) + 8 * i + 8), a2);
  }
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    uint64_t v6 = *((void *)this + 11);
    if (v6) {
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
    }
    uint64_t v7 = *((void *)this + 12);
    if (v7) {
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v7, a2);
    }
  }
  uint64_t v8 = (unsigned int *)*((void *)this + 5);
  if (*((char *)v8 + 23) < 0)
  {
    uint64_t v9 = *((void *)v8 + 1);
    if (!v9) {
      goto LABEL_15;
    }
    uint64_t v8 = *(unsigned int **)v8;
    goto LABEL_14;
  }
  LODWORD(v9) = *((unsigned __int8 *)v8 + 23);
  if (*((unsigned char *)v8 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v8, v9, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 5), a2);
  }
LABEL_15:
  uint64_t v10 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v10 + 23) < 0)
  {
    uint64_t v11 = *((void *)v10 + 1);
    if (!v11) {
      goto LABEL_21;
    }
    uint64_t v10 = *(unsigned int **)v10;
    goto LABEL_20;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((unsigned char *)v10 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.numRecommendationsInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xBu, *((void *)this + 6), a2);
  }
LABEL_21:
  unint64_t v12 = (unsigned int *)*((void *)this + 7);
  if (*((char *)v12 + 23) < 0)
  {
    uint64_t v13 = *((void *)v12 + 1);
    if (!v13) {
      goto LABEL_27;
    }
    unint64_t v12 = *(unsigned int **)v12;
    goto LABEL_26;
  }
  LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *((unsigned __int8 *)v12 + 23);
  if (*((unsigned char *)v12 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemRestrictionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCu, *((void *)this + 7), a2);
  }
LABEL_27:
  char v14 = (unsigned int *)*((void *)this + 8);
  if (*((char *)v14 + 23) < 0)
  {
    uint64_t v15 = *((void *)v14 + 1);
    if (!v15) {
      goto LABEL_33;
    }
    char v14 = *(unsigned int **)v14;
    goto LABEL_32;
  }
  LODWORD(v15) = *((unsigned __int8 *)v14 + 23);
  if (*((unsigned char *)v14 + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, v15, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemExclusionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xDu, *((void *)this + 8), a2);
  }
LABEL_33:
  unint64_t v16 = (unsigned int *)*((void *)this + 9);
  if (*((char *)v16 + 23) < 0)
  {
    uint64_t v17 = *((void *)v16 + 1);
    if (!v17) {
      goto LABEL_39;
    }
    unint64_t v16 = *(unsigned int **)v16;
    goto LABEL_38;
  }
  LODWORD(v17) = *((unsigned __int8 *)v16 + 23);
  if (*((unsigned char *)v16 + 23))
  {
LABEL_38:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v16, v17, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.recommendedItemListOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((void *)this + 9), a2);
  }
LABEL_39:
  uint64_t result = *((void *)this + 10);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v19 = *(void *)(result + 8);
    if (!v19) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v19) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v19, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.recommendedItemScoreOutputFeatureName");
  uint64_t v20 = *((void *)this + 10);
  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, v20, a2);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ByteSizeLong(*(CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((void *)this + 5);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v9 = *((void *)this + 6);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_16;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v12 = *((void *)this + 7);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_21:
  uint64_t v15 = *((void *)this + 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_26;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_26;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_26:
  uint64_t v18 = *((void *)this + 9);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_31;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_31;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_31:
  uint64_t v21 = *((void *)this + 10);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(void *)(v21 + 8)) {
      goto LABEL_36;
    }
  }
  else if (!*(unsigned char *)(v21 + 23))
  {
    goto LABEL_36;
  }
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_36:
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    unint64_t v24 = (CoreML::Specification::StringVector *)*((void *)this + 11);
    if (v24)
    {
      uint64_t v25 = CoreML::Specification::StringVector::ByteSizeLong(v24);
      v4 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    int v26 = (CoreML::Specification::Int64Vector *)*((void *)this + 12);
    if (v26)
    {
      uint64_t v27 = CoreML::Specification::Int64Vector::ByteSizeLong(v26);
      v4 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 26) = v4;
  return v4;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  int v1 = *((_DWORD *)this + 6);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = *((void *)this + 4);
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = *(void *)(v3 + 8 * v2 + 8);
      uint64_t v6 = *(void *)(v5 + 16);
      unint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6;
      if (v6) {
        unint64_t v8 = v7 + 1;
      }
      else {
        unint64_t v8 = 0;
      }
      if (*(double *)(v5 + 24) != 0.0) {
        v8 += 9;
      }
      *(_DWORD *)(v5 + 32) = v8;
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v9 = *((void *)this + 5);
  uint64_t v10 = v4 + ((9 * (__clz(v9 | 1) ^ 0x3F) + 73) >> 6);
  if (v9) {
    uint64_t v4 = v10 + 1;
  }
  if (*((double *)this + 6) != 0.0) {
    v4 += 9;
  }
  *((_DWORD *)this + 14) = v4;
  return v4;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 72);
  uint64_t v6 = (std::string **)((char *)this + 64);
  unint64_t v7 = (std::string **)((char *)this + 56);
  unint64_t v8 = (std::string **)((char *)this + 48);
  uint64_t v9 = (std::string **)((char *)this + 40);
  int64_t v51 = (CoreML::Specification::ItemSimilarityRecommender *)((char *)this + 16);
  uint64_t v52 = (std::string **)((char *)this + 80);
  while (1)
  {
LABEL_2:
    uint64_t v10 = *(unsigned __int8 **)a2;
    unint64_t v11 = *((void *)a2 + 1);
    if (*(void *)a2 >= v11)
    {
      LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      goto LABEL_16;
    }
    uint64_t v12 = v10 + 1;
    uint64_t v13 = *v10;
    if ((char)*v10 >= 1)
    {
      *(void *)a2 = v12;
      unint64_t v14 = v13 | 0x100000000;
      if ((v14 & 0x100000000) != 0) {
        goto LABEL_17;
      }
      goto LABEL_9;
    }
    if ((unint64_t)v12 < v11)
    {
      int v15 = *v12;
      if ((v13 & ~v15) >= 0x80) {
        break;
      }
    }
LABEL_16:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
    unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v14 & 0x100000000) != 0) {
      goto LABEL_17;
    }
LABEL_9:
    if (v14) {
      BOOL v16 = (v14 & 7) == 4;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0) {
      goto LABEL_109;
    }
  }
  *(void *)a2 = v10 + 2;
  unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
LABEL_17:
  switch(v14 >> 3)
  {
    case 1u:
      if (v14 != 10) {
        goto LABEL_9;
      }
      uint64_t v18 = (int *)*((void *)this + 4);
      if (!v18)
      {
        int v19 = *((_DWORD *)this + 6);
        int v20 = *((_DWORD *)this + 7);
LABEL_94:
        if (v19 <= v20)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v51, v20 - v19 + 1);
          uint64_t v18 = (int *)*((void *)this + 4);
        }
        int v20 = *v18;
        goto LABEL_97;
      }
      int v19 = *((_DWORD *)this + 6);
      int v20 = *v18;
      if (v19 < *v18)
      {
        *((_DWORD *)this + 6) = v19 + 1;
        Aligned = *(google::protobuf::Arena ***)&v18[2 * v19 + 2];
        goto LABEL_102;
      }
      if (v20 == *((_DWORD *)this + 7)) {
        goto LABEL_94;
      }
LABEL_97:
      int *v18 = v20 + 1;
      int v40 = *(google::protobuf::Arena **)v51;
      if (!*(void *)v51) {
        operator new();
      }
      CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems((CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)Aligned);
      unsigned int v41 = google::protobuf::Arena::AllocateAligned(v40, 0, 24);
      void *v41 = (google::protobuf::Arena *)Aligned;
      v41[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
      int v42 = (unint64_t *)((char *)v40 + 32);
      do
        unint64_t v43 = __ldxr(v42);
      while (__stxr((unint64_t)v41, v42));
      v41[2] = (google::protobuf::Arena *)v43;
      uint64_t v44 = *((void *)this + 4);
      uint64_t v45 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v45 + 1;
      *(void *)(v44 + 8 * v45 + 8) = Aligned;
LABEL_102:
      uint64_t v46 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v46 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_109;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v46;
        *(void *)a2 = v46 + 1;
      }
      int v48 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v50 = *((_DWORD *)a2 + 13);
      BOOL v34 = __OFSUB__(v50--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v50;
      if (v50 < 0 == v34)
      {
        int v35 = v48;
        uint64_t result = CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergePartialFromCodedStream((CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)Aligned, a2, v49);
        if (!result) {
          return result;
        }
LABEL_108:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v35)) {
          goto LABEL_2;
        }
      }
LABEL_109:
      uint64_t result = 0;
      break;
    case 2u:
      if (v14 != 18) {
        goto LABEL_9;
      }
      uint64_t v22 = (CoreML::Specification::StringVector *)*((void *)this + 11);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
      {
        int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v24 < 0) {
          goto LABEL_109;
        }
      }
      else
      {
        int v24 = *v23;
        *(void *)a2 = v23 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
      int v33 = *((_DWORD *)a2 + 13);
      BOOL v34 = __OFSUB__(v33--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v33;
      if (v33 < 0 != v34) {
        goto LABEL_109;
      }
      int v35 = v31;
      uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v22, (char **)a2, v32);
      if (!result) {
        return result;
      }
      goto LABEL_108;
    case 3u:
      if (v14 != 26) {
        goto LABEL_9;
      }
      uint64_t v25 = (CoreML::Specification::Int64Vector *)*((void *)this + 12);
      if (!v25) {
        operator new();
      }
      int v26 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
      {
        int v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v27 < 0) {
          goto LABEL_109;
        }
      }
      else
      {
        int v27 = *v26;
        *(void *)a2 = v26 + 1;
      }
      int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
      int v38 = *((_DWORD *)a2 + 13);
      BOOL v34 = __OFSUB__(v38--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v38;
      if (v38 < 0 != v34) {
        goto LABEL_109;
      }
      int v35 = v36;
      uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v25, a2, v37);
      if (!result) {
        return result;
      }
      goto LABEL_108;
    case 0xAu:
      if (v14 != 82) {
        goto LABEL_9;
      }
      if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v9);
      if (!result) {
        return result;
      }
      int v29 = *v9;
      if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.itemInputFeatureName";
      goto LABEL_91;
    case 0xBu:
      if (v14 != 90) {
        goto LABEL_9;
      }
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v8);
      if (!result) {
        return result;
      }
      int v29 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.numRecommendationsInputFeatureName";
      goto LABEL_91;
    case 0xCu:
      if (v14 != 98) {
        goto LABEL_9;
      }
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7);
      if (!result) {
        return result;
      }
      int v29 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.itemRestrictionInputFeatureName";
      goto LABEL_91;
    case 0xDu:
      if (v14 != 106) {
        goto LABEL_9;
      }
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
      if (!result) {
        return result;
      }
      int v29 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.itemExclusionInputFeatureName";
      goto LABEL_91;
    case 0x14u:
      if (v14 != 162) {
        goto LABEL_9;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
      if (!result) {
        return result;
      }
      int v29 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.recommendedItemListOutputFeatureName";
      goto LABEL_91;
    case 0x15u:
      if (v14 != 170) {
        goto LABEL_9;
      }
      if (*v52 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v52, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v52);
      if (!result) {
        return result;
      }
      int v29 = *v52;
      if (SHIBYTE((*v52)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v52)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v52)->__r_.__value_.__r.__words[2]);
      }
      int v39 = "CoreML.Specification.ItemSimilarityRecommender.recommendedItemScoreOutputFeatureName";
LABEL_91:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v29, size, 0, (uint64_t)v39)) {
        goto LABEL_109;
      }
      goto LABEL_2;
    default:
      goto LABEL_9;
  }
  return result;
}

void sub_1DC0D640C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407C6D6C37);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1)) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_26:
          if (v8) {
            BOOL v19 = (v8 & 7) == 4;
          }
          else {
            BOOL v19 = 1;
          }
          if (v19) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_26;
        }
LABEL_8:
        unsigned int v10 = v8 >> 3;
        if (v8 >> 3 != 3) {
          break;
        }
        if (v8 != 25) {
          goto LABEL_26;
        }
        unint64_t v35 = 0;
        uint64_t v13 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v35);
          if (!result) {
            return result;
          }
          unint64_t v14 = v35;
        }
        else
        {
          unint64_t v14 = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((void *)this + 6) = v14;
      }
      if (v10 == 2) {
        break;
      }
      if (v10 != 1 || v8 != 8) {
        goto LABEL_26;
      }
      uint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 5) = *v12;
        *(void *)a2 = v12 + 1;
      }
    }
    if (v8 != 18) {
      goto LABEL_26;
    }
    int v15 = (int *)*((void *)this + 4);
    if (!v15)
    {
      int v16 = *((_DWORD *)this + 6);
      int v17 = *((_DWORD *)this + 7);
LABEL_36:
      if (v16 <= v17)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v17 - v16 + 1);
        int v15 = (int *)*((void *)this + 4);
      }
      int v17 = *v15;
      goto LABEL_39;
    }
    int v16 = *((_DWORD *)this + 6);
    int v17 = *v15;
    if (v16 < *v15)
    {
      *((_DWORD *)this + 6) = v16 + 1;
      Aligned = *(google::protobuf::Arena ***)&v15[2 * v16 + 2];
      goto LABEL_44;
    }
    if (v17 == *((_DWORD *)this + 7)) {
      goto LABEL_36;
    }
LABEL_39:
    int *v15 = v17 + 1;
    uint64_t v21 = *(google::protobuf::Arena **)v5;
    if (!*(void *)v5) {
      operator new();
    }
    CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem((CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)Aligned);
    uint64_t v22 = google::protobuf::Arena::AllocateAligned(v21, 0, 24);
    *uint64_t v22 = (google::protobuf::Arena *)Aligned;
    v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
    uint64_t v23 = (unint64_t *)((char *)v21 + 32);
    do
      unint64_t v24 = __ldxr(v23);
    while (__stxr((unint64_t)v22, v23));
    v22[2] = (google::protobuf::Arena *)v24;
    uint64_t v25 = *((void *)this + 4);
    uint64_t v26 = *((int *)this + 6);
    *((_DWORD *)this + 6) = v26 + 1;
    *(void *)(v25 + 8 * v26 + 8) = Aligned;
LABEL_44:
    int v27 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v27 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        return 0;
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v27;
      *(void *)a2 = v27 + 1;
    }
    int v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    int v31 = *((_DWORD *)a2 + 13);
    BOOL v32 = __OFSUB__(v31--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v31;
    if (v31 < 0 != v32) {
      break;
    }
    int v33 = v29;
    BOOL result = CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergePartialFromCodedStream((CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)Aligned, (char **)a2, v30);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v33));
  return 0;
}

void sub_1DC0D679C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::ItemSimilarityRecommender_SimilarItems *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  *(void *)this = &unk_1F3624C38;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)&CoreML::Specification::_ItemSimilarityRecommender_SimilarItems_default_instance_) {
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_1DC0D685C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

unint64_t *CoreML::Specification::ItemSimilarityRecommender::MergeFrom(unint64_t *this, const CoreML::Specification::ItemSimilarityRecommender *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v43 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    int v42 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      unsigned int v10 = (unint64_t **)this;
      unint64_t v11 = (const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(v43 + 8);
      do
      {
        uint64_t v13 = *v11++;
        uint64_t v12 = v13;
        unint64_t v14 = *v10++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      uint64_t v18 = (google::protobuf::Arena ***)((char *)v42 + v17);
      BOOL v19 = (const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(v17 + v43 + 8);
      do
      {
        char v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems((CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)Aligned);
        uint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *uint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(v20, (unint64_t *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    uint64_t v26 = (int *)v3[4];
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  uint64_t v27 = *((void *)a2 + 5);
  if (*(char *)(v27 + 23) < 0)
  {
    if (!*(void *)(v27 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v27 + 23))
  {
    goto LABEL_28;
  }
  this = v3 + 5;
  unint64_t v28 = (uint64_t *)v3[5];
  if (v28 != (uint64_t *)v27)
  {
    if (v28 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v27);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[5], (const std::string *)v27);
  }
LABEL_28:
  uint64_t v29 = *((void *)a2 + 6);
  if (*(char *)(v29 + 23) < 0)
  {
    if (!*(void *)(v29 + 8)) {
      goto LABEL_36;
    }
  }
  else if (!*(unsigned char *)(v29 + 23))
  {
    goto LABEL_36;
  }
  this = v3 + 6;
  unsigned int v30 = (uint64_t *)v3[6];
  if (v30 != (uint64_t *)v29)
  {
    if (v30 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v29);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[6], (const std::string *)v29);
  }
LABEL_36:
  uint64_t v31 = *((void *)a2 + 7);
  if (*(char *)(v31 + 23) < 0)
  {
    if (!*(void *)(v31 + 8)) {
      goto LABEL_44;
    }
  }
  else if (!*(unsigned char *)(v31 + 23))
  {
    goto LABEL_44;
  }
  this = v3 + 7;
  BOOL v32 = (uint64_t *)v3[7];
  if (v32 != (uint64_t *)v31)
  {
    if (v32 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v31);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[7], (const std::string *)v31);
  }
LABEL_44:
  uint64_t v33 = *((void *)a2 + 8);
  if (*(char *)(v33 + 23) < 0)
  {
    if (!*(void *)(v33 + 8)) {
      goto LABEL_52;
    }
  }
  else if (!*(unsigned char *)(v33 + 23))
  {
    goto LABEL_52;
  }
  this = v3 + 8;
  BOOL v34 = (uint64_t *)v3[8];
  if (v34 != (uint64_t *)v33)
  {
    if (v34 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v33);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[8], (const std::string *)v33);
  }
LABEL_52:
  uint64_t v35 = *((void *)a2 + 9);
  if (*(char *)(v35 + 23) < 0)
  {
    if (!*(void *)(v35 + 8)) {
      goto LABEL_60;
    }
  }
  else if (!*(unsigned char *)(v35 + 23))
  {
    goto LABEL_60;
  }
  this = v3 + 9;
  int v36 = (uint64_t *)v3[9];
  if (v36 != (uint64_t *)v35)
  {
    if (v36 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v35);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[9], (const std::string *)v35);
  }
LABEL_60:
  uint64_t v37 = *((void *)a2 + 10);
  if (*(char *)(v37 + 23) < 0)
  {
    if (!*(void *)(v37 + 8)) {
      goto LABEL_68;
    }
  }
  else if (!*(unsigned char *)(v37 + 23))
  {
    goto LABEL_68;
  }
  this = v3 + 10;
  int v38 = (uint64_t *)v3[10];
  if (v38 != (uint64_t *)v37)
  {
    if (v38 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v37);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[10], (const std::string *)v37);
  }
LABEL_68:
  if (a2 != (const CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    if (*((void *)a2 + 11))
    {
      int v39 = (std::string *)v3[11];
      if (!v39) {
        operator new();
      }
      this = (unint64_t *)CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v39, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings **)a2 + 11));
    }
    if (*((void *)a2 + 12))
    {
      int v40 = (unint64_t *)v3[12];
      if (!v40) {
        operator new();
      }
      unsigned int v41 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 12);
      return CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v40, v41);
    }
  }
  return this;
}

void sub_1DC0D6D0C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *a1, unint64_t *a2)
{
  return CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergeFrom(a2, a1);
}

unint64_t *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergeFrom(unint64_t *this, const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v30 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v29 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      unsigned int v10 = (std::string **)this;
      unint64_t v11 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v30 + 8);
      do
      {
        uint64_t v13 = *v11++;
        uint64_t v12 = v13;
        unint64_t v14 = *v10++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      uint64_t v18 = (google::protobuf::Arena ***)((char *)v29 + v17);
      BOOL v19 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v17 + v30 + 8);
      do
      {
        char v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem((CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)Aligned);
        uint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *uint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v20, (std::string *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    uint64_t v26 = (int *)v3[4];
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  unint64_t v27 = *((void *)a2 + 5);
  if (v27) {
    v3[5] = v27;
  }
  double v28 = *((double *)a2 + 6);
  if (v28 != 0.0) {
    *((double *)v3 + 6) = v28;
  }
  return this;
}

void sub_1DC0D6F30(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *a1, std::string *this)
{
  return CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergeFrom(this, a1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::IsInitialized(CoreML::Specification::ItemSimilarityRecommender *this)
{
  return 1;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::Clear(CoreML::Specification::ItemSimilarityRecommender *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = *((void *)this + 4) + 8;
    do
    {
      uint64_t v5 = *(void *)(v4 + 8 * v3);
      uint64_t v6 = *(unsigned int *)(v5 + 24);
      if ((int)v6 >= 1)
      {
        uint64_t v7 = (uint64_t *)(*(void *)(v5 + 32) + 8);
        do
        {
          uint64_t v8 = *v7++;
          *(void *)(v8 + 16) = 0;
          *(void *)(v8 + 24) = 0;
          --v6;
        }
        while (v6);
        *(_DWORD *)(v5 + 24) = 0;
      }
      ++v3;
      *(void *)(v5 + 4CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = 0;
      *(void *)(v5 + 48) = 0;
    }
    while (v3 != v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v9 = *((void *)this + 5);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v10 = *((void *)this + 6);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)uint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v10 = 0;
      *(unsigned char *)(v10 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v11 = *((void *)this + 7);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v12 = *((void *)this + 8);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v12 = 0;
      *(unsigned char *)(v12 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v13 = *((void *)this + 9);
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)uint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v13 = 0;
      *(unsigned char *)(v13 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v14 = *((void *)this + 10);
  if ((uint64_t *)v14 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v14 + 23) < 0)
    {
      **(unsigned char **)uint64_t v14 = 0;
      *(void *)(v14 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v14 = 0;
      *(unsigned char *)(v14 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v15 = *((void *)this + 11);
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  *((void *)this + 11) = 0;
  uint64_t result = *((void *)this + 12);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 12) = 0;
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender::New(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D71A8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40BDA5CB28);
  _Unwind_Resume(a1);
}

CoreML::Specification::ItemSimilarityRecommender *CoreML::Specification::ItemSimilarityRecommender::ItemSimilarityRecommender(CoreML::Specification::ItemSimilarityRecommender *this)
{
  *(void *)this = &unk_1F3622470;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_) {
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  return this;
}

void sub_1DC0D7258(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender::New(CoreML::Specification::ItemSimilarityRecommender *this)
{
}

void *CoreML::Specification::ItemSimilarityRecommender::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender");
}

void CoreML::Specification::ItemSimilarityRecommender::~ItemSimilarityRecommender(CoreML::Specification::ItemSimilarityRecommender *this)
{
  CoreML::Specification::ItemSimilarityRecommender::~ItemSimilarityRecommender(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(void *)this = &unk_1F3622470;
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 6);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 7);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1E0198C00](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 8);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x1E0198C00](v7, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1E0198C00](v8, 0x1012C40EC159624);
  }
  uint64_t v9 = *((void *)this + 10);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x1E0198C00](v9, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    uint64_t v10 = *((void *)this + 11);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 12);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 40);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  }
  int v7 = *(_DWORD *)(v5 + 24);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2);
  }
  double v9 = *(double *)(v5 + 48);
  if (v9 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, v9, a3);
  }
  return this;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::IsInitialized(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  return 1;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(void *)(v3 + 16) = 0;
      *(void *)(v3 + 24) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  *(void *)(this + 4CoreML::Specification::ItemSimilarityRecommender::New(this, 0) = 0;
  *(void *)(this + 48) = 0;
  return this;
}

void CoreML::Specification::ItemSimilarityRecommender_SimilarItems::New(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D76AC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407C6D6C37);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender_SimilarItems::New(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
}

void *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender.SimilarItems");
}

void CoreML::Specification::ItemSimilarityRecommender_SimilarItems::~ItemSimilarityRecommender_SimilarItems(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  CoreML::Specification::ItemSimilarityRecommender_SimilarItems::~ItemSimilarityRecommender_SimilarItems(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3624C38;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
}

void *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender.ConnectedItem");
}

void CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::~ItemSimilarityRecommender_ConnectedItem(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  *(void *)this = &unk_1F3624D68;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3624D68;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::GetCachedSize(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::SerializeWithCachedSizes(CoreML::Specification::FeatureVectorizer_InputColumn *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  unint64_t v8 = *((void *)this + 3);
  if (v8)
  {
    return google::protobuf::internal::WireFormatLite::WriteUInt64(2, v8, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::ByteSizeLong(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  if (v5) {
    v4 += ((9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

BOOL CoreML::Specification::FeatureVectorizer_InputColumn::MergePartialFromCodedStream(CoreML::Specification::FeatureVectorizer_InputColumn *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v6 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_23;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_23;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_23;
        }
        uint64_t v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v14;
          *a2 = v14 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      uint64_t v12 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v12 = *(unsigned int **)v12;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn"))return 0; {
    }
      }
LABEL_23:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::IsInitialized(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  return 1;
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::FeatureVectorizer_InputColumn::New(CoreML::Specification::FeatureVectorizer_InputColumn *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D7BF8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

CoreML::Specification::FeatureVectorizer_InputColumn *CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  *(void *)this = &unk_1F3623938;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FeatureVectorizer_InputColumn *)&CoreML::Specification::_FeatureVectorizer_InputColumn_default_instance_) {
    CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0D7C88(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer_InputColumn>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer_InputColumn>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(CoreML::Specification::protobuf_FeatureVectorizer_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_FeatureVectorizer_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_FeatureVectorizer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_FeatureVectorizer_2eproto::TableStruct *this)
{
  google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::_FeatureVectorizer_InputColumn_default_instance_ = (uint64_t)&unk_1F3623938;
  unk_1EC005550 = 0;
  qword_1EC005558 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC005560 = 0;
  dword_1EC005568 = 0;
  byte_1EC005570 = 1;
  CoreML::Specification::_FeatureVectorizer_default_instance_ = (uint64_t)&unk_1F361E158;
  double result = 0.0;
  unk_1EC002DF8 = 0u;
  unk_1EC002E08 = 0u;
  dword_1EC002E18 = 0;
  byte_1EC002E20 = 1;
  return result;
}

uint64_t CoreML::Specification::FeatureVectorizer::GetCachedSize(CoreML::Specification::FeatureVectorizer *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::FeatureVectorizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::FeatureVectorizer::ByteSizeLong(CoreML::Specification::FeatureVectorizer *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::FeatureVectorizer_InputColumn::ByteSizeLong(*(CoreML::Specification::FeatureVectorizer_InputColumn **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(this, 0) = v4;
  return v4;
}

BOOL CoreML::Specification::FeatureVectorizer::MergePartialFromCodedStream(CoreML::Specification::FeatureVectorizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::FeatureVectorizer *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      unint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          uint64_t v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      int *v12 = v14 + 1;
      char v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn((CoreML::Specification::FeatureVectorizer_InputColumn *)Aligned);
      uint64_t v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      google::protobuf::Arena *v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
      uint64_t v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      uint64_t v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        BOOL result = CoreML::Specification::FeatureVectorizer_InputColumn::MergePartialFromCodedStream((CoreML::Specification::FeatureVectorizer_InputColumn *)Aligned, (char **)a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0D814C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

unint64_t *CoreML::Specification::FeatureVectorizer::MergeFrom(unint64_t *this, const CoreML::Specification::FeatureVectorizer *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    unint64_t v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (CoreML::Specification::MILSpec::Value_BlobFileValue **)(v28 + 8);
      uint64_t v12 = (std::string **)this;
      do
      {
        int v14 = *v11++;
        int v13 = v14;
        uint64_t v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      char v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      uint64_t v20 = (CoreML::Specification::MILSpec::Value_BlobFileValue **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn((CoreML::Specification::FeatureVectorizer_InputColumn *)Aligned);
        uint64_t v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *uint64_t v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC0D8344(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(CoreML::Specification::MILSpec::Value_BlobFileValue *a1, std::string *this)
{
  return CoreML::Specification::MILSpec::Value_BlobFileValue::MergeFrom(this, a1);
}

uint64_t CoreML::Specification::FeatureVectorizer::IsInitialized(CoreML::Specification::FeatureVectorizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::FeatureVectorizer::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(this + 32) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      uint64_t v4 = *(void *)(*(void *)v2 + 16);
      if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        }
      }
      *(void *)(v3 + 24) = 0;
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

void CoreML::Specification::FeatureVectorizer::New(CoreML::Specification::FeatureVectorizer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D8438(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::FeatureVectorizer *CoreML::Specification::FeatureVectorizer::FeatureVectorizer(CoreML::Specification::FeatureVectorizer *this)
{
  *(void *)this = &unk_1F361E158;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::FeatureVectorizer *)&CoreML::Specification::_FeatureVectorizer_default_instance_) {
    CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(this, 0) = 0;
  return this;
}

void sub_1DC0D84D0(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::FeatureVectorizer::New(CoreML::Specification::FeatureVectorizer *this)
{
}

void *CoreML::Specification::FeatureVectorizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FeatureVectorizer");
}

void CoreML::Specification::FeatureVectorizer::~FeatureVectorizer(CoreML::Specification::FeatureVectorizer *this)
{
  CoreML::Specification::FeatureVectorizer::~FeatureVectorizer(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361E158;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::FeatureVectorizer_InputColumn::New(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
}

void *CoreML::Specification::FeatureVectorizer_InputColumn::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FeatureVectorizer.InputColumn");
}

void CoreML::Specification::FeatureVectorizer_InputColumn::~FeatureVectorizer_InputColumn(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  *(void *)this = &unk_1F3623938;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3623938;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::GetCachedSize(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 16);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  uint64_t v7 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v7 + 23) < 0)
  {
    uint64_t v8 = *((void *)v7 + 1);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t v7 = *(unsigned int **)v7;
    goto LABEL_8;
  }
  LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
  if (*((unsigned char *)v7 + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.language");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 2), a2);
  }
LABEL_9:
  int v9 = (unsigned int *)*((void *)this + 3);
  if (*((char *)v9 + 23) < 0)
  {
    uint64_t v10 = *((void *)v9 + 1);
    if (!v10) {
      goto LABEL_15;
    }
    int v9 = *(unsigned int **)v9;
    goto LABEL_14;
  }
  LODWORD(v1CoreML::Specification::FeatureVectorizer_InputColumn::New(this, 0) = *((unsigned __int8 *)v9 + 23);
  if (*((unsigned char *)v9 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((void *)this + 3), a2);
  }
LABEL_15:
  uint64_t v11 = (unsigned int *)*((void *)this + 4);
  if (*((char *)v11 + 23) < 0)
  {
    uint64_t v12 = *((void *)v11 + 1);
    if (!v12) {
      goto LABEL_21;
    }
    uint64_t v11 = *(unsigned int **)v11;
    goto LABEL_20;
  }
  LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
  if (*((unsigned char *)v11 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, *((void *)this + 4), a2);
  }
LABEL_21:
  int v13 = (unsigned int *)*((void *)this + 5);
  if (*((char *)v13 + 23) < 0)
  {
    uint64_t v14 = *((void *)v13 + 1);
    if (!v14) {
      goto LABEL_27;
    }
    int v13 = *(unsigned int **)v13;
    goto LABEL_26;
  }
  LODWORD(v14) = *((unsigned __int8 *)v13 + 23);
  if (*((unsigned char *)v13 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, v14, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x16u, *((void *)this + 5), a2);
  }
LABEL_27:
  uint64_t result = *((void *)this + 6);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v16 = *(void *)(result + 8);
    if (!v16) {
      goto LABEL_33;
    }
    uint64_t result = *(void *)result;
    goto LABEL_32;
  }
  LODWORD(v16) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v16, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x17u, *((void *)this + 6), a2);
  }
LABEL_33:
  uint64_t v17 = *((void *)this + 7);
  if ((*(char *)(v17 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v17 + 23)) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (*(void *)(v17 + 8)) {
LABEL_35:
  }
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v17, a2);
LABEL_36:
  if (*((_DWORD *)this + 21) == 200)
  {
    uint64_t v18 = *((void *)this + 9);
    return google::protobuf::internal::WireFormatLite::WriteMessage(200, v18, a2);
  }
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::ByteSizeLong(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  uint64_t v9 = *((void *)this + 4);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_18;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v5 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_18:
  uint64_t v12 = *((void *)this + 5);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v5 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  uint64_t v15 = *((void *)this + 6);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v5 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_28:
  uint64_t v18 = *((void *)this + 7);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_33;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_33;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v5 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_33:
  int v21 = *((_DWORD *)this + 16);
  if (v21) {
    v5 += ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if (*((_DWORD *)this + 21) == 200)
  {
    uint64_t v22 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 9));
    v5 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 2CoreML::Specification::FeatureVectorizer_InputColumn::New(this, 0) = v5;
  return v5;
}

BOOL CoreML::Specification::CoreMLModels::WordTagger::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = this;
  uint64_t v5 = (std::string **)((char *)this + 56);
  uint64_t v6 = (std::string **)((char *)this + 48);
  uint64_t v7 = (std::string **)((char *)this + 40);
  uint64_t v8 = (std::string **)((char *)this + 32);
  uint64_t v9 = (std::string **)((char *)this + 24);
  uint64_t v10 = (std::string **)((char *)this + 16);
  uint64_t v11 = &google::protobuf::internal::fixed_address_empty_string;
  while (1)
  {
LABEL_2:
    uint64_t v12 = *(unsigned __int8 **)a2;
    unint64_t v13 = *((void *)a2 + 1);
    if (*(void *)a2 >= v13)
    {
      LODWORD(v15) = 0;
    }
    else
    {
      uint64_t v14 = v12 + 1;
      uint64_t v15 = *v12;
      if ((char)*v12 >= 1)
      {
        *(void *)a2 = v14;
        unint64_t v16 = v15 | 0x100000000;
        if ((v16 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      if ((unint64_t)v14 < v13)
      {
        int v17 = *v14;
        if ((v15 & ~v17) >= 0x80)
        {
          *(void *)a2 = v12 + 2;
          unint64_t v16 = (v15 + (v17 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v15);
    unint64_t v16 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v16 & 0x100000000) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    unsigned int v20 = v16 >> 3;
    if (v16 >> 3 > 0x13) {
      break;
    }
    if (v20 == 1)
    {
      if (v16 != 8) {
        goto LABEL_9;
      }
      unint64_t v25 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v26 = 0;
        goto LABEL_87;
      }
      int v26 = *v25;
      if (*v25 < 0)
      {
LABEL_87:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
        *((_DWORD *)v4 + 16) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)v4 + 16) = v26;
        *(void *)a2 = v25 + 1;
      }
    }
    else
    {
      if (v20 != 10 || v16 != 82) {
        goto LABEL_9;
      }
      if (*v10 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v10, (uint64_t)v11);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v10);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v10;
      if (SHIBYTE((*v10)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v10)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v10)->__r_.__value_.__r.__words[2]);
      }
      int v42 = "CoreML.Specification.CoreMLModels.WordTagger.language";
LABEL_84:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v22, size, 0, (uint64_t)v42)) {
        return 0;
      }
    }
  }
  switch(v20)
  {
    case 0x14u:
      if (v16 != 162) {
        goto LABEL_9;
      }
      if (*v9 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v9, (uint64_t)v11);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v9);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v9;
      if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
      }
      int v42 = "CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName";
      goto LABEL_84;
    case 0x15u:
      if (v16 != 170) {
        goto LABEL_9;
      }
      if (*v8 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v8, (uint64_t)v11);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v8);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      int v42 = "CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName";
      goto LABEL_84;
    case 0x16u:
      if (v16 != 178) {
        goto LABEL_9;
      }
      if (*v7 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)v11);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      int v42 = "CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName";
      goto LABEL_84;
    case 0x17u:
      if (v16 != 186) {
        goto LABEL_9;
      }
      if (*v6 == (std::string *)v11) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)v11);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
      if (!result) {
        return result;
      }
      uint64_t v22 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      int v42 = "CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName";
      goto LABEL_84;
    default:
      if (v20 != 100)
      {
        if (v20 != 200 || v16 != 66) {
          goto LABEL_9;
        }
        if (*((_DWORD *)v4 + 21) != 200)
        {
          *((_DWORD *)v4 + 21) = 200;
          operator new();
        }
        int v24 = (CoreML::Specification::StringVector *)*((void *)v4 + 9);
        BOOL v27 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v27 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v27;
          *(void *)a2 = v27 + 1;
        }
        uint64_t v29 = v11;
        uint64_t v30 = v10;
        uint64_t v31 = v9;
        BOOL v32 = v8;
        uint64_t v33 = v7;
        BOOL v34 = v6;
        uint64_t v35 = v5;
        int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v38 = *((_DWORD *)a2 + 13);
        BOOL v39 = __OFSUB__(v38--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v38;
        if (v38 < 0 != v39) {
          return 0;
        }
        int v40 = v36;
        BOOL result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v24, (char **)a2, v37);
        if (!result) {
          return result;
        }
        BOOL v41 = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v40);
        uint64_t v5 = v35;
        uint64_t v6 = v34;
        uint64_t v7 = v33;
        uint64_t v8 = v32;
        uint64_t v9 = v31;
        uint64_t v10 = v30;
        uint64_t v11 = v29;
        uint64_t v4 = this;
        if (!v41) {
          return 0;
        }
        goto LABEL_2;
      }
      if (v16 == 34)
      {
        if (*v5 == (std::string *)v11) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)v11);
        }
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5)) {
          return 0;
        }
        goto LABEL_2;
      }
LABEL_9:
      if (v16) {
        BOOL v18 = (v16 & 7) == 4;
      }
      else {
        BOOL v18 = 1;
      }
      if (!v18)
      {
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v16, a3) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      return 1;
  }
}

void sub_1DC0D9048(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CoreMLModels::WordTagger::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::WordTagger *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  data = (uint64_t *)v3[1].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v7);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  uint64_t v9 = *((void *)a2 + 4);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_27;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_27;
  }
  this = (std::string *)((char *)v3 + 32);
  std::string::size_type size = (uint64_t *)v3[1].__r_.__value_.__l.__size_;
  if (size != (uint64_t *)v9)
  {
    if (size == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v9);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__size_, (const std::string *)v9);
  }
LABEL_27:
  uint64_t v11 = *((void *)a2 + 5);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_35;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_35;
  }
  this = (std::string *)((char *)v3 + 40);
  uint64_t v12 = (uint64_t *)v3[1].__r_.__value_.__r.__words[2];
  if (v12 != (uint64_t *)v11)
  {
    if (v12 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v11);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__r.__words[2], (const std::string *)v11);
  }
LABEL_35:
  uint64_t v13 = *((void *)a2 + 6);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      goto LABEL_43;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    goto LABEL_43;
  }
  this = v3 + 2;
  uint64_t v14 = (uint64_t *)v3[2].__r_.__value_.__l.__data_;
  if (v14 != (uint64_t *)v13)
  {
    if (v14 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v13);
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__l.__data_, (const std::string *)v13);
  }
LABEL_43:
  uint64_t v15 = *((void *)a2 + 7);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_51;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_51;
  }
  this = (std::string *)((char *)v3 + 56);
  unint64_t v16 = (uint64_t *)v3[2].__r_.__value_.__l.__size_;
  if (v16 != (uint64_t *)v15)
  {
    if (v16 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v15);
    }
    this = std::string::operator=((std::string *)v3[2].__r_.__value_.__l.__size_, (const std::string *)v15);
  }
LABEL_51:
  int v17 = *((_DWORD *)a2 + 16);
  if (v17) {
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = v17;
  }
  if (*((_DWORD *)a2 + 21) == 200)
  {
    if (HIDWORD(v3[3].__r_.__value_.__r.__words[1]) != 200)
    {
      HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = 200;
      operator new();
    }
    BOOL v18 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 9);
    uint64_t v19 = (std::string *)v3[3].__r_.__value_.__l.__data_;
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v19, v18);
  }
  return this;
}

void sub_1DC0D933C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::IsInitialized(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::Clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v3 = *(void *)(this + 24);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v4 = *(void *)(this + 32);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v5 = *(void *)(this + 40);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v6 = *(void *)(this + 48);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v7 = *(void *)(this + 56);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  *(_DWORD *)(this + 64) = 0;
  if (*(_DWORD *)(this + 84) == 200)
  {
    this = *(void *)(this + 72);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 84) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::WordTagger::New(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D952C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403AEF19A0);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::WordTagger *CoreML::Specification::CoreMLModels::WordTagger::WordTagger(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  *(void *)this = &unk_1F361AAB8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::WordTagger *)&CoreML::Specification::CoreMLModels::_WordTagger_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 1CoreML::Specification::FeatureVectorizer_InputColumn::New(this, 0) = 0;
  return this;
}

void sub_1DC0D95C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordTagger>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordTagger>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordTagger>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  BOOL result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::CoreMLModels::_WordTagger_default_instance_ = (uint64_t)&unk_1F361AAB8;
  *(void *)algn_1EC0014E8 = 0;
  qword_1EC0014F0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC0014F8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC001500 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC001508 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC001510 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC001518 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EC001520 = 0;
  qword_1EC001530 = 0;
  byte_1EC001538 = 1;
  return result;
}

void CoreML::Specification::CoreMLModels::WordTagger::New(CoreML::Specification::CoreMLModels::WordTagger *this)
{
}

void *CoreML::Specification::CoreMLModels::WordTagger::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.WordTagger");
}

void CoreML::Specification::CoreMLModels::WordTagger::~WordTagger(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  CoreML::Specification::CoreMLModels::WordTagger::~WordTagger(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(void *)this = &unk_1F361AAB8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  char v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 4);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1E0198C00](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 5);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x1E0198C00](v7, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 6);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1E0198C00](v8, 0x1012C40EC159624);
  }
  uint64_t v9 = *((void *)this + 7);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    MEMORY[0x1E0198C00](v9, 0x1012C40EC159624);
  }
  uint64_t v10 = *((_DWORD *)this + 21);
  if (v10)
  {
    if (v10 == 200)
    {
      uint64_t v11 = *((void *)this + 9);
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
    }
    *((_DWORD *)this + 21) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::GetCachedSize(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 16);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  }
  double v7 = *(double *)(v5 + 24);
  if (v7 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  }
  return this;
}

unint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v3 += 9;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

BOOL CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        uint64_t v11 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v12 = v16;
        }
        else
        {
          unint64_t v12 = *v11;
          *a2 = (char *)(v11 + 1);
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v12;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v14 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v10;
        *a2 = v10 + 1;
      }
    }
LABEL_20:
    if (v7) {
      BOOL v13 = (v7 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::IsInitialized(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0D9BE0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  *(void *)this = &unk_1F3624F30;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)&CoreML::Specification::_TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0D9C68(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
    char v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(CoreML::Specification::protobuf_TreeEnsemble_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_TreeEnsemble_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_TreeEnsemble_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_TreeEnsemble_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_ = (uint64_t)&unk_1F3624F30;
  unk_1EC005D10 = 0;
  qword_1EC005D18 = 0;
  unk_1EC005D20 = 0;
  dword_1EC005D28 = 0;
  byte_1EC005D30 = 1;
  CoreML::Specification::_TreeEnsembleParameters_TreeNode_default_instance_ = (uint64_t)&unk_1F36240F0;
  double result = 0.0;
  unk_1EC0057F8 = 0u;
  unk_1EC005808 = 0u;
  unk_1EC005818 = 0u;
  unk_1EC005828 = 0u;
  unk_1EC005838 = 0u;
  unk_1EC005848 = 0u;
  dword_1EC005858 = 0;
  byte_1EC005860 = 1;
  CoreML::Specification::_TreeEnsembleParameters_default_instance_ = (uint64_t)&unk_1F3621598;
  unk_1EC0045D0 = 0u;
  unk_1EC0045E0 = 0u;
  unk_1EC0045F0 = 0u;
  qword_1EC004608 = 0;
  dword_1EC004610 = 0;
  byte_1EC004618 = 1;
  qword_1EC0045A8 = 0;
  dword_1EC004598 = 0;
  CoreML::Specification::_TreeEnsembleClassifier_default_instance_ = (uint64_t)&unk_1F3621500;
  *(void *)algn_1EC004588 = 0;
  byte_1EC0045B0 = 1;
  CoreML::Specification::_TreeEnsembleRegressor_default_instance_ = (uint64_t)&unk_1F3620B80;
  *(void *)algn_1EC004178 = 0;
  byte_1EC004190 = 1;
  qword_1EC004590 = (uint64_t)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
  qword_1EC004180 = (uint64_t)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
  unk_1EC004188 = 0;
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::GetCachedSize(CoreML::Specification::TreeEnsembleRegressor *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t *CoreML::Specification::TreeEnsembleRegressor::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = this;
  if (this != &CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v6, a2);
    }
  }
  signed int v7 = *((_DWORD *)v5 + 6);
  if (v7)
  {
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteEnum(2, v7, a2, a4);
  }
  return this;
}

CoreML::Specification::TreeEnsembleParameters *CoreML::Specification::TreeEnsembleRegressor::ByteSizeLong(CoreML::Specification::TreeEnsembleRegressor *this)
{
  if (this == (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    double result = 0;
  }
  else
  {
    double result = (CoreML::Specification::TreeEnsembleParameters *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(result);
      double result = (CoreML::Specification::TreeEnsembleParameters *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    double result = (CoreML::Specification::TreeEnsembleParameters *)((char *)result + v5);
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::TreeEnsembleParameters_TreeNode::ByteSizeLong(*(CoreML::Specification::TreeEnsembleParameters_TreeNode **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 10);
  uint64_t v7 = 8 * v6;
  if (v6)
  {
    uint64_t v8 = 11;
    uint64_t v9 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v7 >= 0) {
      uint64_t v8 = v9;
    }
    v4 += v8;
  }
  *((_DWORD *)this + 14) = v7;
  uint64_t v10 = v4 + v7;
  uint64_t v11 = *((void *)this + 8);
  unint64_t v12 = v10 + ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6);
  if (v11) {
    uint64_t result = v12 + 1;
  }
  else {
    uint64_t result = v10;
  }
  *((_DWORD *)this + 18) = result;
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  uint64_t v2 = 2 * v1;
  if (v1)
  {
    int v3 = 0;
    uint64_t v4 = *((void *)this + 4);
    do
    {
      uint64_t v5 = *(void *)(v4 + 8 * v3 + 8);
      uint64_t v6 = *(void *)(v5 + 16);
      unint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6;
      if (v6) {
        unint64_t v8 = v7 + 1;
      }
      else {
        unint64_t v8 = 0;
      }
      if (*(double *)(v5 + 24) != 0.0) {
        v8 += 9;
      }
      *(_DWORD *)(v5 + 32) = v8;
      v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v1 != v3);
  }
  uint64_t v9 = *((void *)this + 5);
  unint64_t v10 = v2 + ((9 * (__clz(v9 | 1) ^ 0x3F) + 73) >> 6);
  if (v9) {
    uint64_t v2 = v10 + 1;
  }
  uint64_t v11 = *((void *)this + 6);
  unint64_t v12 = v2 + ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6);
  if (v11) {
    uint64_t v2 = v12 + 1;
  }
  int v13 = *((_DWORD *)this + 14);
  uint64_t v14 = 11;
  uint64_t v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0) {
    uint64_t v14 = v15;
  }
  uint64_t v16 = v14 + v2;
  if (v13) {
    uint64_t v2 = v16;
  }
  if (*((unsigned char *)this + 60)) {
    v2 += 2;
  }
  uint64_t v17 = *((void *)this + 8);
  unint64_t v18 = v2 + ((9 * (__clz(v17 | 1) ^ 0x3F) + 73) >> 6);
  if (v17) {
    uint64_t v2 = v18 + 1;
  }
  if (*((double *)this + 9) != 0.0) {
    v2 += 9;
  }
  uint64_t v19 = *((void *)this + 10);
  uint64_t v20 = *((void *)this + 11);
  unint64_t v21 = v2 + ((9 * (__clz(v19 | 1) ^ 0x3F) + 73) >> 6);
  if (v19) {
    uint64_t v2 = v21 + 1;
  }
  unint64_t v22 = v2 + ((9 * (__clz(v20 | 1) ^ 0x3F) + 73) >> 6);
  if (v20) {
    uint64_t v2 = v22 + 1;
  }
  if (*((double *)this + 12) != 0.0) {
    v2 += 10;
  }
  *((_DWORD *)this + 26) = v2;
  return v2;
}

BOOL CoreML::Specification::TreeEnsembleRegressor::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0) {
          goto LABEL_7;
        }
LABEL_22:
        if (v7) {
          BOOL v15 = (v7 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_22;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 16) {
        goto LABEL_22;
      }
      int v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v14 = 0;
      }
      else
      {
        int v14 = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *(void *)a2 = v13 + 1;
          goto LABEL_35;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
      int v14 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_35:
      *((_DWORD *)this + 6) = v14;
    }
    if (v7 >> 3 != 1 || v7 != 10) {
      goto LABEL_22;
    }
    unint64_t v10 = (CoreML::Specification::TreeEnsembleParameters *)*((void *)this + 2);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        return 0;
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v11;
      *(void *)a2 = v11 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(v10, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1DC0DA400(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleParameters *CoreML::Specification::TreeEnsembleParameters::TreeEnsembleParameters(CoreML::Specification::TreeEnsembleParameters *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F3621598;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = 0u;
  if (this != (CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((void *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  return this;
}

void sub_1DC0DA4A0(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void **)(v2 + 48);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = (CoreML::Specification::TreeEnsembleParameters *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            unint64_t v7 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1)) {
              break;
            }
            LODWORD(v8) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v9 & 0x100000000) != 0) {
              goto LABEL_8;
            }
LABEL_27:
            if (v9) {
              BOOL v20 = (v9 & 7) == 4;
            }
            else {
              BOOL v20 = 1;
            }
            if (v20) {
              return 1;
            }
            if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
          }
            }
          uint64_t v8 = *v7;
          if (*v7 < 1) {
            goto LABEL_7;
          }
          *(void *)a2 = v7 + 1;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v11 = v9 >> 3;
          if (v9 >> 3 == 3) {
            break;
          }
          if (v11 == 2)
          {
            if (v9 != 16) {
              goto LABEL_27;
            }
            BOOL v19 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
            {
              *((void *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v21 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 8) = *v19;
              *(void *)a2 = v19 + 1;
            }
          }
          else
          {
            if (v11 != 1 || v9 != 10) {
              goto LABEL_27;
            }
            int v13 = (int *)*((void *)this + 4);
            if (!v13)
            {
              int v14 = *((_DWORD *)this + 6);
              int v15 = *((_DWORD *)this + 7);
              goto LABEL_39;
            }
            int v14 = *((_DWORD *)this + 6);
            int v15 = *v13;
            if (v14 >= *v13)
            {
              if (v15 == *((_DWORD *)this + 7))
              {
LABEL_39:
                if (v14 <= v15)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v6, v15 - v14 + 1);
                  int v13 = (int *)*((void *)this + 4);
                }
                int v15 = *v13;
              }
              *int v13 = v15 + 1;
              unint64_t v22 = *(google::protobuf::Arena **)v6;
              if (!*(void *)v6) {
                operator new();
              }
              CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode((CoreML::Specification::TreeEnsembleParameters_TreeNode *)Aligned);
              uint64_t v23 = google::protobuf::Arena::AllocateAligned(v22, 0, 24);
              *uint64_t v23 = (google::protobuf::Arena *)Aligned;
              v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
              int v24 = (unint64_t *)((char *)v22 + 32);
              do
                unint64_t v25 = __ldxr(v24);
              while (__stxr((unint64_t)v23, v24));
              v23[2] = (google::protobuf::Arena *)v25;
              uint64_t v26 = *((void *)this + 4);
              uint64_t v27 = *((int *)this + 6);
              *((_DWORD *)this + 6) = v27 + 1;
              *(void *)(v26 + 8 * v27 + 8) = Aligned;
              goto LABEL_47;
            }
            *((_DWORD *)this + 6) = v14 + 1;
            Aligned = *(google::protobuf::Arena ***)&v13[2 * v14 + 2];
LABEL_47:
            uint64_t v28 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v28 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v28;
              *(void *)a2 = v28 + 1;
            }
            int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v32 = *((_DWORD *)a2 + 13);
            BOOL v33 = __OFSUB__(v32--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v32;
            if (v32 < 0 != v33) {
              return 0;
            }
            int v34 = v30;
            BOOL result = CoreML::Specification::TreeEnsembleParameters_TreeNode::MergePartialFromCodedStream((CoreML::Specification::TreeEnsembleParameters_TreeNode *)Aligned, a2, v31);
            if (!result) {
              return result;
            }
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v34)) {
              return 0;
            }
          }
        }
        if (v9 != 25) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(26, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v9 != 26) {
        goto LABEL_27;
      }
      unsigned int v17 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
      {
        unsigned int v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v18 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v18 = *v17;
        *(void *)a2 = v17 + 1;
      }
      if ((v18 & 7) != 0) {
        return 0;
      }
      int v36 = *((_DWORD *)a2 + 12);
      int v37 = v36 == 0x7FFFFFFF
          ? -1
          : v36 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v38 = *((_DWORD *)a2 + 10);
      int v39 = v38 == 0x7FFFFFFF
          ? -1
          : v38 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v40 = *v5;
      unsigned int v41 = v18 >> 3;
      int v42 = v39 >= v37 ? v37 : v39;
      int v43 = v37 == -1 ? v39 : v42;
      if (v43 >= (uint64_t)v18) {
        break;
      }
      if (v18 >= 8)
      {
        if (v41 <= 1) {
          int v44 = 1;
        }
        else {
          int v44 = v18 >> 3;
        }
        do
        {
          unint64_t v52 = 0;
          uint64_t v45 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v52);
            if (!result) {
              return result;
            }
            unint64_t v46 = v52;
            signed int v40 = *v5;
          }
          else
          {
            unint64_t v46 = *v45;
            *(void *)a2 = v45 + 1;
          }
          if (v40 == *((_DWORD *)this + 11))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v40 + 1);
            signed int v40 = *v5;
          }
          uint64_t v47 = *((void *)this + 6) + 8 * v40;
          *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = v40 + 1;
          *(void *)(v47 + 8) = v46;
          ++v40;
          --v44;
        }
        while (v44);
      }
    }
    signed int v48 = v40 + v41;
    if (v18 > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v40 + v41);
      uint64_t v49 = *((void *)this + 6);
      uint64_t v50 = 8 * v48 - 8 * *((int *)this + 10);
      if (v50 >= 1) {
        bzero((void *)(v49 + 8 + 8 * *((int *)this + 10)), 8 * (((unint64_t)v50 >> 3) - ((unint64_t)v50 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v49 = *((void *)this + 6);
    }
    *uint64_t v5 = v48;
    uint64_t v51 = v49 + 8;
    if (!v49) {
      uint64_t v51 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v51 + 8 * v40), v18));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v40;
    return result;
  }
  return 0;
}

void sub_1DC0DA9B4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::TreeEnsembleParameters_TreeNode::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters_TreeNode *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::TreeEnsembleParameters_TreeNode *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v6 = *(unsigned __int8 **)a2;
    unint64_t v7 = *((void *)a2 + 1);
    if (*(void *)a2 >= v7)
    {
      LODWORD(v9) = 0;
      goto LABEL_16;
    }
    uint64_t v8 = v6 + 1;
    uint64_t v9 = *v6;
    if ((char)*v6 >= 1)
    {
      *(void *)a2 = v8;
      unint64_t v10 = v9 | 0x100000000;
      if ((v10 & 0x100000000) != 0) {
        goto LABEL_17;
      }
      goto LABEL_9;
    }
    if ((unint64_t)v8 < v7)
    {
      int v11 = *v8;
      if ((v9 & ~v11) >= 0x80) {
        break;
      }
    }
LABEL_16:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
    unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v10 & 0x100000000) != 0) {
      goto LABEL_17;
    }
LABEL_9:
    if (v10) {
      BOOL v12 = (v10 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      goto LABEL_99;
    }
  }
  *(void *)a2 = v6 + 2;
  unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
LABEL_17:
  switch(v10 >> 3)
  {
    case 1u:
      if (v10 != 8) {
        goto LABEL_9;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 5) = *v14;
        goto LABEL_51;
      }
      *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v27 & 1) == 0) {
        goto LABEL_99;
      }
      goto LABEL_2;
    case 2u:
      if (v10 != 16) {
        goto LABEL_9;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 6) = *v14;
        goto LABEL_51;
      }
      *((void *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v28 & 1) == 0) {
        goto LABEL_99;
      }
      goto LABEL_2;
    case 3u:
      if (v10 != 24) {
        goto LABEL_9;
      }
      unsigned int v17 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v18 = 0;
      }
      else
      {
        int v18 = *v17;
        if ((*v17 & 0x80000000) == 0)
        {
          *(void *)a2 = v17 + 1;
          goto LABEL_92;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
      int v18 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        goto LABEL_99;
      }
LABEL_92:
      *((_DWORD *)this + 14) = v18;
      goto LABEL_2;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
      goto LABEL_9;
    case 0xAu:
      if (v10 != 80) {
        goto LABEL_9;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 8) = *v14;
        goto LABEL_51;
      }
      *((void *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v29 & 1) == 0) {
        goto LABEL_99;
      }
      goto LABEL_2;
    case 0xBu:
      if (v10 != 89) {
        goto LABEL_9;
      }
      unint64_t v48 = 0;
      BOOL v19 = *(unint64_t **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48);
        if (!result) {
          return result;
        }
        unint64_t v20 = v48;
      }
      else
      {
        unint64_t v20 = *v19;
        *(void *)a2 = v19 + 1;
      }
      *((void *)this + 9) = v20;
      goto LABEL_2;
    case 0xCu:
      if (v10 != 96) {
        goto LABEL_9;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 1CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = *v14;
        goto LABEL_51;
      }
      *((void *)this + 1CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v30 & 1) == 0) {
        goto LABEL_99;
      }
      goto LABEL_2;
    case 0xDu:
      if (v10 != 104) {
        goto LABEL_9;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        *((void *)this + 11) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v31 & 1) == 0) {
          goto LABEL_99;
        }
      }
      else
      {
        *((void *)this + 11) = *v14;
LABEL_51:
        *(void *)a2 = v14 + 1;
      }
      goto LABEL_2;
    case 0xEu:
      if (v10 != 112) {
        goto LABEL_9;
      }
      char v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v32 & 1) == 0) {
          goto LABEL_99;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v21;
        *(void *)a2 = v21 + 1;
      }
      *((unsigned char *)this + 6CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = Varint64Fallback != 0;
      goto LABEL_2;
    case 0x14u:
      if (v10 != 162) {
        goto LABEL_9;
      }
      uint64_t v23 = (int *)*((void *)this + 4);
      if (!v23)
      {
        int v24 = *((_DWORD *)this + 6);
        int v25 = *((_DWORD *)this + 7);
LABEL_74:
        if (v24 <= v25)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v25 - v24 + 1);
          uint64_t v23 = (int *)*((void *)this + 4);
        }
        int v25 = *v23;
        goto LABEL_77;
      }
      int v24 = *((_DWORD *)this + 6);
      int v25 = *v23;
      if (v24 < *v23)
      {
        *((_DWORD *)this + 6) = v24 + 1;
        Aligned = *(google::protobuf::Arena ***)&v23[2 * v24 + 2];
        goto LABEL_82;
      }
      if (v25 == *((_DWORD *)this + 7)) {
        goto LABEL_74;
      }
LABEL_77:
      *uint64_t v23 = v25 + 1;
      BOOL v33 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo((CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)Aligned);
      int v34 = google::protobuf::Arena::AllocateAligned(v33, 0, 24);
      uint64_t *v34 = (google::protobuf::Arena *)Aligned;
      v34[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
      uint64_t v35 = (unint64_t *)((char *)v33 + 32);
      do
        unint64_t v36 = __ldxr(v35);
      while (__stxr((unint64_t)v34, v35));
      v34[2] = (google::protobuf::Arena *)v36;
      uint64_t v37 = *((void *)this + 4);
      uint64_t v38 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v38 + 1;
      *(void *)(v37 + 8 * v38 + 8) = Aligned;
LABEL_82:
      int v39 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v39 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_99;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v39;
        *(void *)a2 = v39 + 1;
      }
      int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v43 = *((_DWORD *)a2 + 13);
      BOOL v44 = __OFSUB__(v43--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v43;
      if (v43 < 0 == v44)
      {
        int v45 = v41;
        BOOL result = CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::MergePartialFromCodedStream((CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)Aligned, (char **)a2, v42);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v45)) {
          goto LABEL_2;
        }
      }
LABEL_99:
      BOOL result = 0;
      break;
    default:
      if (v10 >> 3 != 30 || v10 != 241) {
        goto LABEL_9;
      }
      unint64_t v48 = 0;
      int v15 = *(unint64_t **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48);
        if (!result) {
          return result;
        }
        unint64_t v16 = v48;
      }
      else
      {
        unint64_t v16 = *v15;
        *(void *)a2 = v15 + 1;
      }
      *((void *)this + 12) = v16;
      goto LABEL_2;
  }
  return result;
}

void sub_1DC0DAF08(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::TreeEnsembleParameters_TreeNode *CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  *(void *)this = &unk_1F36240F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::TreeEnsembleParameters_TreeNode *)&CoreML::Specification::_TreeEnsembleParameters_TreeNode_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 26) = 0;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = 0u;
  return this;
}

void sub_1DC0DB028(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *CoreML::Specification::TreeEnsembleRegressor::MergeFrom(std::string *this, const CoreML::Specification::TreeEnsembleRegressor *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_
    && v5 != 0)
  {
    unint64_t v7 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
    if (!v7) {
      operator new();
    }
    if (v5) {
      uint64_t v8 = (const CoreML::Specification::TreeEnsembleParameters *)*((void *)a2 + 2);
    }
    else {
      uint64_t v8 = (const CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
    }
    this = (std::string *)CoreML::Specification::TreeEnsembleParameters::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 6);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
  }
  return this;
}

void sub_1DC0DB11C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::TreeEnsembleParameters::MergeFrom(unint64_t *this, const CoreML::Specification::TreeEnsembleParameters *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v30 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    char v29 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      unint64_t v10 = (unint64_t **)this;
      int v11 = (const CoreML::Specification::TreeEnsembleParameters_TreeNode **)(v30 + 8);
      do
      {
        int v13 = *v11++;
        BOOL v12 = v13;
        int v14 = *v10++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v29 + v17);
      BOOL v19 = (const CoreML::Specification::TreeEnsembleParameters_TreeNode **)(v17 + v30 + 8);
      do
      {
        unint64_t v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode((CoreML::Specification::TreeEnsembleParameters_TreeNode *)Aligned);
        unint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *unint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(v20, (unint64_t *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    uint64_t v26 = (int *)v3[4];
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  int v27 = *((_DWORD *)a2 + 10);
  if (v27)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 10, *((_DWORD *)v3 + 10) + v27);
    this = (unint64_t *)memcpy((void *)(v3[6] + 8 * *((int *)v3 + 10) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *((_DWORD *)v3 + 10) += *((_DWORD *)a2 + 10);
  }
  unint64_t v28 = *((void *)a2 + 8);
  if (v28) {
    v3[8] = v28;
  }
  return this;
}

void sub_1DC0DB348(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(const CoreML::Specification::TreeEnsembleParameters_TreeNode *a1, unint64_t *a2)
{
  return CoreML::Specification::TreeEnsembleParameters_TreeNode::MergeFrom(a2, a1);
}

unint64_t *CoreML::Specification::TreeEnsembleParameters_TreeNode::MergeFrom(unint64_t *this, const CoreML::Specification::TreeEnsembleParameters_TreeNode *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v36 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v35 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      unint64_t v10 = (std::string **)this;
      int v11 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v36 + 8);
      do
      {
        int v13 = *v11++;
        BOOL v12 = v13;
        int v14 = *v10++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v35 + v17);
      BOOL v19 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v17 + v36 + 8);
      do
      {
        unint64_t v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo((CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)Aligned);
        unint64_t v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *unint64_t v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
        uint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v20, (std::string *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    uint64_t v26 = (int *)v3[4];
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  unint64_t v27 = *((void *)a2 + 5);
  if (v27) {
    v3[5] = v27;
  }
  unint64_t v28 = *((void *)a2 + 6);
  if (v28) {
    v3[6] = v28;
  }
  int v29 = *((_DWORD *)a2 + 14);
  if (v29) {
    *((_DWORD *)v3 + 14) = v29;
  }
  if (*((unsigned char *)a2 + 60)) {
    *((unsigned char *)v3 + 6CoreML::Specification::CoreMLModels::WordTagger::New(this, 0) = 1;
  }
  unint64_t v30 = *((void *)a2 + 8);
  if (v30) {
    v3[8] = v30;
  }
  double v31 = *((double *)a2 + 9);
  if (v31 != 0.0) {
    *((double *)v3 + 9) = v31;
  }
  unint64_t v32 = *((void *)a2 + 10);
  if (v32) {
    v3[10] = v32;
  }
  unint64_t v33 = *((void *)a2 + 11);
  if (v33) {
    v3[11] = v33;
  }
  double v34 = *((double *)a2 + 12);
  if (v34 != 0.0) {
    *((double *)v3 + 12) = v34;
  }
  return this;
}

void sub_1DC0DB5A0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::IsInitialized(CoreML::Specification::TreeEnsembleRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::Clear(CoreML::Specification::TreeEnsembleRegressor *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return result;
}

void CoreML::Specification::TreeEnsembleRegressor::New(CoreML::Specification::TreeEnsembleRegressor *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0DB674(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleRegressor *CoreML::Specification::TreeEnsembleRegressor::TreeEnsembleRegressor(CoreML::Specification::TreeEnsembleRegressor *this)
{
  *(void *)this = &unk_1F3620B80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0DB6F8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleRegressor>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleRegressor>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::TreeEnsembleRegressor::New(CoreML::Specification::TreeEnsembleRegressor *this)
{
}

void *CoreML::Specification::TreeEnsembleRegressor::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleRegressor");
}

void CoreML::Specification::TreeEnsembleRegressor::~TreeEnsembleRegressor(CoreML::Specification::TreeEnsembleRegressor *this)
{
  CoreML::Specification::TreeEnsembleRegressor::~TreeEnsembleRegressor(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F3620B80;
  if (this != (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::GetCachedSize(CoreML::Specification::TreeEnsembleClassifier *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t *CoreML::Specification::TreeEnsembleClassifier::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = this;
  if (this != &CoreML::Specification::_TreeEnsembleClassifier_default_instance_)
  {
    uint64_t v6 = this[2];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v6, a2);
    }
  }
  signed int v7 = *((_DWORD *)v5 + 6);
  if (v7) {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteEnum(2, v7, a2, a4);
  }
  int v8 = *((_DWORD *)v5 + 11);
  if (v8 == 100)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(100, v5[4], a2);
    int v8 = *((_DWORD *)v5 + 11);
  }
  if (v8 == 101)
  {
    uint64_t v9 = v5[4];
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(101, v9, a2);
  }
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::ByteSizeLong(CoreML::Specification::TreeEnsembleClassifier *this)
{
  if (this == (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_
    || (uint64_t v2 = (CoreML::Specification::TreeEnsembleParameters *)*((void *)this + 2)) == 0)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v3 = CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(v2);
    uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  int v5 = *((_DWORD *)this + 6);
  if (v5)
  {
    if (v5 < 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v6;
  }
  int v7 = *((_DWORD *)this + 11);
  if (v7 == 101)
  {
    uint64_t v8 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 4));
    goto LABEL_14;
  }
  if (v7 == 100)
  {
    uint64_t v8 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 4));
LABEL_14:
    v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::TreeEnsembleRegressor::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        LODWORD(v8) = 0;
      }
      else
      {
        int v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_55;
          }
          goto LABEL_8;
        }
        if ((unint64_t)v7 < v6)
        {
          int v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(void *)a2 = v5 + 2;
            unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_8;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_55;
      }
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 > 0x63) {
        break;
      }
      if (v11 == 1)
      {
        if (v9 == 10)
        {
          int v16 = (CoreML::Specification::TreeEnsembleParameters *)*((void *)this + 2);
          if (!v16) {
            operator new();
          }
          uint64_t v17 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v17;
            *(void *)a2 = v17 + 1;
          }
          int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v26 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
          if (v26 < 0 != v27) {
            return 0;
          }
          int v28 = v24;
          uint64_t result = CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(v16, a2, v25);
          if (!result) {
            return result;
          }
          goto LABEL_51;
        }
LABEL_55:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (v37) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v11 != 2 || v9 != 16) {
          goto LABEL_55;
        }
        int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v14 = 0;
        }
        else
        {
          int v14 = *v13;
          if ((*v13 & 0x80000000) == 0)
          {
            *(void *)a2 = v13 + 1;
            goto LABEL_63;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
        int v14 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_63:
        *((_DWORD *)this + 6) = v14;
      }
    }
    if (v11 == 100) {
      break;
    }
    if (v11 != 101 || v9 != 42) {
      goto LABEL_55;
    }
    if (*((_DWORD *)this + 11) != 101)
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
      *((_DWORD *)this + 11) = 101;
      operator new();
    }
    int v15 = (CoreML::Specification::Int64Vector *)*((void *)this + 4);
    unint64_t v20 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
    {
      int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v21 < 0) {
        return 0;
      }
    }
    else
    {
      int v21 = *v20;
      *(void *)a2 = v20 + 1;
    }
    int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
    int v32 = *((_DWORD *)a2 + 13);
    BOOL v27 = __OFSUB__(v32--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v32;
    if (v32 < 0 != v27) {
      return 0;
    }
    int v28 = v30;
    uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v15, a2, v31);
    if (!result) {
      return result;
    }
LABEL_51:
    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
      return 0;
    }
  }
  if (v9 != 34) {
    goto LABEL_55;
  }
  if (*((_DWORD *)this + 11) != 100)
  {
    CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
    *((_DWORD *)this + 11) = 100;
    operator new();
  }
  BOOL v19 = (CoreML::Specification::StringVector *)*((void *)this + 4);
  unint64_t v22 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
  {
    int v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v23 < 0) {
      return 0;
    }
  }
  else
  {
    int v23 = *v22;
    *(void *)a2 = v22 + 1;
  }
  int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
  int v35 = *((_DWORD *)a2 + 13);
  BOOL v27 = __OFSUB__(v35--, 1);
  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v35;
  if (v35 < 0 == v27)
  {
    int v28 = v33;
    uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v19, (char **)a2, v34);
    if (!result) {
      return result;
    }
    goto LABEL_51;
  }
  return 0;
}

void sub_1DC0DBD8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 44);
  if (v2 == 101 || v2 == 100)
  {
    this = *(void *)(this + 32);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

std::string *CoreML::Specification::TreeEnsembleClassifier::MergeFrom(std::string *this, const CoreML::Specification::TreeEnsembleClassifier *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_
    && v5 != 0)
  {
    int v7 = *(unint64_t **)(v3 + 16);
    if (!v7) {
      operator new();
    }
    if (v5) {
      uint64_t v8 = (const CoreML::Specification::TreeEnsembleParameters *)*((void *)a2 + 2);
    }
    else {
      uint64_t v8 = (const CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
    }
    this = (std::string *)CoreML::Specification::TreeEnsembleParameters::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 6);
  if (v9) {
    *(_DWORD *)(v3 + 24) = v9;
  }
  int v10 = *((_DWORD *)a2 + 11);
  if (v10 == 101)
  {
    if (*(_DWORD *)(v3 + 44) != 101)
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 44) = 101;
      operator new();
    }
    BOOL v12 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 4);
    int v14 = *(unint64_t **)(v3 + 32);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v14, v12);
  }
  else if (v10 == 100)
  {
    if (*(_DWORD *)(v3 + 44) != 100)
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 44) = 100;
      operator new();
    }
    unsigned int v11 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 4);
    int v13 = *(std::string **)(v3 + 32);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v13, v11);
  }
  return this;
}

void sub_1DC0DC018(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::IsInitialized(CoreML::Specification::TreeEnsembleClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::Clear(CoreML::Specification::TreeEnsembleClassifier *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
}

void CoreML::Specification::TreeEnsembleClassifier::New(CoreML::Specification::TreeEnsembleClassifier *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0DC128(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403B3CA634);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleClassifier *CoreML::Specification::TreeEnsembleClassifier::TreeEnsembleClassifier(CoreML::Specification::TreeEnsembleClassifier *this)
{
  *(void *)this = &unk_1F3621500;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_) {
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_1DC0DC1B4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleClassifier>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleClassifier>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::TreeEnsembleClassifier::New(CoreML::Specification::TreeEnsembleClassifier *this)
{
}

void *CoreML::Specification::TreeEnsembleClassifier::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleClassifier");
}

void CoreML::Specification::TreeEnsembleClassifier::~TreeEnsembleClassifier(CoreML::Specification::TreeEnsembleClassifier *this)
{
  CoreML::Specification::TreeEnsembleClassifier::~TreeEnsembleClassifier(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F3621500;
  if (this != (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  if (*((_DWORD *)this + 11)) {
    CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::TreeEnsembleParameters::GetCachedSize(CoreML::Specification::TreeEnsembleParameters *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t CoreML::Specification::TreeEnsembleParameters::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2);
  }
  unint64_t v8 = *(void *)(v5 + 64);
  if (v8) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(2, v8, a2, a4);
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 26;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v9 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 26;
      int v9 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v9;
    }
    unsigned int v10 = *(_DWORD *)(v5 + 56);
    if (v9 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v10);
    }
    else
    {
      uint64_t v11 = *((void *)a2 + 1);
      if (v10 < 0x80)
      {
        unsigned int v13 = *(_DWORD *)(v5 + 56);
        BOOL v12 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        BOOL v12 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v12++ = v10 | 0x80;
          unsigned int v13 = v10 >> 7;
          unsigned int v14 = v10 >> 14;
          v10 >>= 7;
        }
        while (v14);
      }
      unsigned char *v12 = v13;
      int v15 = v12 - v11 + 1;
      *((void *)a2 + 1) += v15;
      *((_DWORD *)a2 + 4) -= v15;
    }
    uint64_t v16 = *(void *)(v5 + 48);
    if (v16) {
      uint64_t v17 = (char *)(v16 + 8);
    }
    else {
      uint64_t v17 = 0;
    }
    int v18 = 8 * *(_DWORD *)(v5 + 40);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v17, v18);
  }
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::IsInitialized(CoreML::Specification::TreeEnsembleParameters *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = *(void *)(this + 32) + 8;
    do
    {
      uint64_t v4 = *(void *)(v3 + 8 * v2);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      if ((int)v5 >= 1)
      {
        int v6 = (uint64_t *)(*(void *)(v4 + 32) + 8);
        do
        {
          uint64_t v7 = *v6++;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
          --v5;
        }
        while (v5);
        *(_DWORD *)(v4 + 24) = 0;
      }
      ++v2;
      *(_OWORD *)(v4 + 88) = 0uLL;
      *(_OWORD *)(v4 + 72) = 0uLL;
      *(_OWORD *)(v4 + 56) = 0uLL;
      *(_OWORD *)(v4 + 4CoreML::Specification::TreeEnsembleClassifier::New(this, 0) = 0uLL;
    }
    while (v2 != v1);
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 4CoreML::Specification::TreeEnsembleClassifier::New(this, 0) = 0;
  *(void *)(this + 64) = 0;
  return this;
}

void CoreML::Specification::TreeEnsembleParameters::New(CoreML::Specification::TreeEnsembleParameters *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0DC59C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::TreeEnsembleParameters::New(CoreML::Specification::TreeEnsembleParameters *this)
{
}

void *CoreML::Specification::TreeEnsembleParameters::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters");
}

void CoreML::Specification::TreeEnsembleParameters::~TreeEnsembleParameters(CoreML::Specification::TreeEnsembleParameters *this)
{
  CoreML::Specification::TreeEnsembleParameters::~TreeEnsembleParameters(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F3621598;
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::GetCachedSize(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unint64_t v6 = *(void *)(this + 40);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 48);
  if (v7) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(2, v7, a2, a4);
  }
  signed int v8 = *(_DWORD *)(v5 + 56);
  if (v8) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(3, v8, a2, a4);
  }
  unint64_t v9 = *(void *)(v5 + 64);
  if (v9) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(10, v9, a2, a4);
  }
  double v10 = *(double *)(v5 + 72);
  if (v10 != 0.0) {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0xB, a2, v10, a3);
  }
  unint64_t v11 = *(void *)(v5 + 80);
  if (v11) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(12, v11, a2, a4);
  }
  unint64_t v12 = *(void *)(v5 + 88);
  if (v12) {
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(13, v12, a2, a4);
  }
  if (*(unsigned char *)(v5 + 60)) {
    this = google::protobuf::internal::WireFormatLite::WriteBool(14, 1u, a2, a4);
  }
  int v13 = *(_DWORD *)(v5 + 24);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(20, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2);
  }
  double v15 = *(double *)(v5 + 96);
  if (v15 != 0.0)
  {
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1E, a2, v15, a3);
  }
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::IsInitialized(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  return 1;
}

double CoreML::Specification::TreeEnsembleParameters_TreeNode::Clear(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(void *)(v3 + 16) = 0;
      *(void *)(v3 + 24) = 0;
      --v1;
    }
    while (v1);
    *((_DWORD *)this + 6) = 0;
  }
  double result = 0.0;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::TreeEnsembleParameters::New(this, 0) = 0u;
  return result;
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode::New(CoreML::Specification::TreeEnsembleParameters_TreeNode *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0DC8E4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters_TreeNode>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode::New(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
}

void *CoreML::Specification::TreeEnsembleParameters_TreeNode::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters.TreeNode");
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode::~TreeEnsembleParameters_TreeNode(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  CoreML::Specification::TreeEnsembleParameters_TreeNode::~TreeEnsembleParameters_TreeNode(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F36240F0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
}

void *CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo");
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::~TreeEnsembleParameters_TreeNode_EvaluationInfo(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  *(void *)this = &unk_1F3624F30;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3624F30;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3617430;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

void std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3617430;
  std::__shared_weak_count::~__shared_weak_count(this);
}

CoreML::FeatureType *CoreML::FeatureType::FeatureType(CoreML::FeatureType *this, const CoreML::Specification::FeatureType *a2)
{
  uint64_t v4 = operator new(0x40uLL);
  unint64_t v5 = v4;
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = &unk_1F3617430;
  uint64_t v6 = (uint64_t)(v4 + 3);
  v4[3] = &unk_1F361A690;
  v4[4] = 0;
  *((_DWORD *)v4 + 14) = 0;
  uint64_t v7 = *((void *)a2 + 1);
  if (v7) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4 + 4, v7 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((unsigned char *)v5 + 4CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(this, 0) = *((unsigned char *)a2 + 16);
  *((_DWORD *)v5 + 15) = 0;
  switch(*((_DWORD *)a2 + 9))
  {
    case 1:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 1;
      operator new();
    case 2:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 2;
      operator new();
    case 3:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 3;
      operator new();
    case 4:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 4;
      operator new();
    case 5:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 5;
      operator new();
    case 6:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 6;
      operator new();
    case 7:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 7;
      operator new();
    case 8:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 8;
      operator new();
    default:
      *(void *)this = v6;
      *((void *)this + 1) = v5;
      return this;
  }
}

void sub_1DC0DCF5C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v3, 0x10A1C406A65A86DLL);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

void *std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = result;
    if (a4 >> 61) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    double result = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(a4);
    uint64_t v7 = result;
    void *v4 = result;
    v4[1] = result;
    v4[2] = &result[v8];
    size_t v9 = a3 - (void)a2;
    if (v9) {
      double result = memmove(result, a2, v9);
    }
    v4[1] = (char *)v7 + v9;
  }
  return result;
}

void sub_1DC0DD09C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::FeatureType::toString@<X0>(CoreML::FeatureType *this@<X0>, std::string *a2@<X8>)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v49);
  uint64_t v4 = *(int *)(*(void *)this + 36);
  std::string::basic_string[abi:ne180100]<0>(&__p, off_1E6C2BDF0[v4]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  inited = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  switch((int)v4)
  {
    case 4:
      if (*(_DWORD *)(*(void *)this + 36) == 4)
      {
        uint64_t v8 = *(const ImageFeatureType **)(*(void *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        uint64_t v8 = (const ImageFeatureType *)&CoreML::Specification::_ImageFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      CoreML::colorSpaceToString(&__p, v8->colorspace_);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v13 = &__p;
      }
      else {
        int v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v14 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v13, v14);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      CoreML::defaultSizeOf((CoreML *)&__p, v8);
      double v15 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" ", 1);
        CoreML::dimensionsToString((uint64_t)&v45, &__p, 0);
        uint64_t v16 = (v47 & 0x80u) == 0 ? &v45 : (void **)v45;
        uint64_t v17 = (v47 & 0x80u) == 0 ? v47 : v46;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v16, v17);
        if ((char)v47 < 0) {
          operator delete(v45);
        }
      }
      goto LABEL_101;
    case 5:
      if (*(_DWORD *)(*(void *)this + 36) == 5)
      {
        size_t v9 = *(int **)(*(void *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        size_t v9 = (int *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      int v18 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      CoreML::dataTypeToString(&__p, v9[9]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        BOOL v19 = &__p;
      }
      else {
        BOOL v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v20 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)v19, v20);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      CoreML::defaultShapeOf((unint64_t)&__p, (const CoreML::Specification::ArrayFeatureType *)v9);
      double v15 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" ", 1);
        CoreML::dimensionsToString((uint64_t)&v45, &__p, 0);
        int v21 = (v47 & 0x80u) == 0 ? &v45 : (void **)v45;
        uint64_t v22 = (v47 & 0x80u) == 0 ? v47 : v46;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v21, v22);
        if ((char)v47 < 0) {
          operator delete(v45);
        }
      }
      goto LABEL_101;
    case 6:
      if (*(_DWORD *)(*(void *)this + 36) == 6)
      {
        double v10 = *(uint64_t **)(*(void *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        double v10 = &CoreML::Specification::_DictionaryFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      std::string::basic_string[abi:ne180100]<0>(&__p, off_1E6C2BE38[*((int *)v10 + 7)]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v23 = &__p;
      }
      else {
        int v23 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v24 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v24 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v23, v24);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" → ", 5);
      std::string::basic_string[abi:ne180100]<0>(&__p, "Double");
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v25 = &__p;
      }
      else {
        unsigned int v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v26 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v25, v26);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      goto LABEL_123;
    case 7:
      if (*(_DWORD *)(*(void *)this + 36) == 7)
      {
        unint64_t v11 = *(uint64_t **)(*(void *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        unint64_t v11 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      int v27 = *((_DWORD *)v11 + 9);
      if (v27)
      {
        if (v27 == 1) {
          int v28 = "Int64";
        }
        else {
          int v28 = "String";
        }
      }
      else
      {
        int v28 = "Invalid";
      }
      std::string::basic_string[abi:ne180100]<0>(&__p, v28);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v35 = &__p;
      }
      else {
        int v35 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v36 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v36 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v35, v36);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      BOOL v37 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" ", 1);
      uint64_t v38 = (uint64_t *)v11[2];
      if (!v38) {
        uint64_t v38 = &CoreML::Specification::_SizeRange_default_instance_;
      }
      CoreML::rangeToString((CoreML *)&__p, v38[2], v38[3], 0);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v39 = &__p;
      }
      else {
        int v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v40 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v37, (uint64_t)v39, v40);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
LABEL_123:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)")", 1);
      break;
    case 8:
      if (*(_DWORD *)(*(void *)this + 36) == 8)
      {
        unint64_t v12 = *(uint64_t **)(*(void *)this + 24);
      }
      else
      {
        inited = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        unint64_t v12 = &CoreML::Specification::_StateFeatureType_default_instance_;
      }
      if (*((_DWORD *)v12 + 7) == 1)
      {
        int v29 = (int *)v12[2];
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        int v29 = (int *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      int v30 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      CoreML::dataTypeToString(&__p, v29[9]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v31 = &__p;
      }
      else {
        unsigned int v31 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v32 = __p.__r_.__value_.__l.__size_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v30, (uint64_t)v31, v32);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      CoreML::defaultShapeOf((unint64_t)&__p, (const CoreML::Specification::ArrayFeatureType *)v29);
      double v15 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" ", 1);
        CoreML::dimensionsToString((uint64_t)&v45, &__p, 0);
        int v33 = (v47 & 0x80u) == 0 ? &v45 : (void **)v45;
        uint64_t v34 = (v47 & 0x80u) == 0 ? v47 : v46;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v33, v34);
        if ((char)v47 < 0) {
          operator delete(v45);
        }
      }
LABEL_101:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)")", 1);
      if (v15) {
        operator delete(v15);
      }
      break;
    default:
      break;
  }
  std::stringbuf::str();
  if (*(unsigned char *)(*(void *)this + 16)) {
    int v41 = "?";
  }
  else {
    int v41 = (const std::string::value_type *)&unk_1DC167C33;
  }
  unsigned int v42 = std::string::append(&__p, v41);
  *a2 = *v42;
  v42->__r_.__value_.__l.__size_ = 0;
  v42->__r_.__value_.__r.__words[2] = 0;
  v42->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  v49[0] = *MEMORY[0x1E4FBA408];
  uint64_t v43 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v49 + *(void *)(v49[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v50[0] = v43;
  v50[1] = MEMORY[0x1E4FBA470] + 16;
  if (v51 < 0) {
    operator delete((void *)v50[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1E0198B70](&v52);
}

void sub_1DC0DD844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v22) {
    operator delete(v22);
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a22);
  _Unwind_Resume(a1);
}

void *CoreML::dataTypeToString(void *a1, int a2)
{
  if (a2 <= 65567)
  {
    if (a2 != 0x80000000 && a2)
    {
      uint64_t v2 = "Float16";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
LABEL_12:
    uint64_t v2 = "Invalid";
    return std::string::basic_string[abi:ne180100]<0>(a1, v2);
  }
  if (a2 > 131103)
  {
    if (a2 == 131104)
    {
      uint64_t v2 = "Int32";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
    goto LABEL_12;
  }
  if (a2 == 65568) {
    uint64_t v2 = "Float32";
  }
  else {
    uint64_t v2 = "Double";
  }
  return std::string::basic_string[abi:ne180100]<0>(a1, v2);
}

void CoreML::defaultShapeOf(unint64_t this, const CoreML::Specification::ArrayFeatureType *a2)
{
  uint64_t v3 = (void *)this;
  *(void *)this = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  if (*((int *)a2 + 4) < 1)
  {
    int v16 = *((_DWORD *)a2 + 15);
    if (v16 == 21)
    {
      int v30 = 0;
      unsigned int v31 = 0;
      std::string::size_type v32 = 0;
      for (uint64_t i = 0; ; ++i)
      {
        if (v16 == 21)
        {
          uint64_t v34 = (uint64_t *)*((void *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          uint64_t v34 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
        }
        if (i >= *(int *)(*(void *)(v34[4] + 8) + 16)) {
          break;
        }
        if (*((_DWORD *)a2 + 15) == 21)
        {
          int v35 = (uint64_t *)*((void *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          int v35 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
        }
        uint64_t v36 = *(void *)(*(void *)(*(void *)(v35[4] + 8) + 24) + 8 * i + 8);
        if (v32 >= v31)
        {
          uint64_t v38 = (v32 - v30) >> 3;
          unint64_t v39 = v38 + 1;
          if ((unint64_t)(v38 + 1) >> 61) {
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          }
          if ((v31 - v30) >> 2 > v39) {
            unint64_t v39 = (v31 - v30) >> 2;
          }
          if ((unint64_t)(v31 - v30) >= 0x7FFFFFFFFFFFFFF8) {
            this = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            this = v39;
          }
          if (this) {
            this = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(this);
          }
          else {
            uint64_t v40 = 0;
          }
          int v41 = (char *)(this + 8 * v38);
          *(void *)int v41 = v36;
          BOOL v37 = v41 + 8;
          while (v32 != v30)
          {
            uint64_t v42 = *((void *)v32 - 1);
            v32 -= 8;
            *((void *)v41 - 1) = v42;
            v41 -= 8;
          }
          unsigned int v31 = (char *)(this + 8 * v40);
          *uint64_t v3 = v41;
          v3[1] = v37;
          void v3[2] = v31;
          if (v30) {
            operator delete(v30);
          }
          int v30 = v41;
        }
        else
        {
          *(void *)std::string::size_type v32 = v36;
          BOOL v37 = v32 + 8;
        }
        v3[1] = v37;
        int v16 = *((_DWORD *)a2 + 15);
        std::string::size_type v32 = v37;
      }
    }
    else if (v16 == 31)
    {
      uint64_t v17 = 0;
      int v18 = 0;
      BOOL v19 = 0;
      for (uint64_t j = 0; ; ++j)
      {
        if (v16 == 31)
        {
          int v21 = (uint64_t *)*((void *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          int v21 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
        }
        if (j >= *((int *)v21 + 6)) {
          break;
        }
        if (*((_DWORD *)a2 + 15) == 31)
        {
          uint64_t v22 = (uint64_t *)*((void *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          uint64_t v22 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
        }
        uint64_t v23 = *(void *)(*(void *)(v22[4] + 8 * j + 8) + 16);
        if (v19 >= v18)
        {
          uint64_t v25 = (v19 - v17) >> 3;
          unint64_t v26 = v25 + 1;
          if ((unint64_t)(v25 + 1) >> 61) {
            std::vector<std::string>::__throw_length_error[abi:ne180100]();
          }
          if ((v18 - v17) >> 2 > v26) {
            unint64_t v26 = (v18 - v17) >> 2;
          }
          if ((unint64_t)(v18 - v17) >= 0x7FFFFFFFFFFFFFF8) {
            this = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            this = v26;
          }
          if (this) {
            this = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(this);
          }
          else {
            uint64_t v27 = 0;
          }
          int v28 = (char *)(this + 8 * v25);
          *(void *)int v28 = v23;
          std::string::size_type v24 = v28 + 8;
          while (v19 != v17)
          {
            uint64_t v29 = *((void *)v19 - 1);
            v19 -= 8;
            *((void *)v28 - 1) = v29;
            v28 -= 8;
          }
          int v18 = (char *)(this + 8 * v27);
          *uint64_t v3 = v28;
          v3[1] = v24;
          void v3[2] = v18;
          if (v17) {
            operator delete(v17);
          }
          uint64_t v17 = v28;
        }
        else
        {
          *(void *)BOOL v19 = v23;
          std::string::size_type v24 = v19 + 8;
        }
        v3[1] = v24;
        int v16 = *((_DWORD *)a2 + 15);
        BOOL v19 = v24;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(*((void *)a2 + 3) + 8 * v7 + 8);
      if ((unint64_t)v6 >= v5)
      {
        uint64_t v10 = (v6 - v4) >> 3;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 61) {
          std::vector<std::string>::__throw_length_error[abi:ne180100]();
        }
        if ((uint64_t)(v5 - (void)v4) >> 2 > v11) {
          unint64_t v11 = (uint64_t)(v5 - (void)v4) >> 2;
        }
        if (v5 - (unint64_t)v4 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v12 = v11;
        }
        if (v12) {
          unint64_t v12 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v12);
        }
        else {
          uint64_t v13 = 0;
        }
        std::string::size_type v14 = (char *)(v12 + 8 * v10);
        *(void *)std::string::size_type v14 = v8;
        size_t v9 = v14 + 8;
        while (v6 != v4)
        {
          uint64_t v15 = *((void *)v6 - 1);
          v6 -= 8;
          *((void *)v14 - 1) = v15;
          v14 -= 8;
        }
        unint64_t v5 = v12 + 8 * v13;
        *uint64_t v3 = v14;
        v3[1] = v9;
        void v3[2] = v5;
        if (v4) {
          operator delete(v4);
        }
        uint64_t v4 = v14;
      }
      else
      {
        *(void *)uint64_t v6 = v8;
        size_t v9 = v6 + 8;
      }
      v3[1] = v9;
      ++v7;
      uint64_t v6 = v9;
    }
    while (v7 < *((int *)a2 + 4));
  }
}

void sub_1DC0DDD28(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::dimensionsToString(uint64_t a1, void *a2, int a3)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v14);
  if (a3) {
    unint64_t v5 = ", ";
  }
  else {
    unint64_t v5 = " × ";
  }
  std::string::basic_string[abi:ne180100]<0>(__p, v5);
  if (a3) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)"[", 1);
  }
  if (a2[1] != *a2)
  {
    unint64_t v6 = 0;
    do
    {
      std::ostream::operator<<();
      unint64_t v7 = (uint64_t)(a2[1] - *a2) >> 3;
      if (v6 < v7 - 1)
      {
        if ((v13 & 0x80u) == 0) {
          uint64_t v8 = __p;
        }
        else {
          uint64_t v8 = (void **)__p[0];
        }
        if ((v13 & 0x80u) == 0) {
          uint64_t v9 = v13;
        }
        else {
          uint64_t v9 = (uint64_t)__p[1];
        }
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)v8, v9);
        unint64_t v7 = (uint64_t)(a2[1] - *a2) >> 3;
      }
      ++v6;
    }
    while (v6 < v7);
  }
  if (a3) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)"]", 1);
  }
  std::stringbuf::str();
  if ((char)v13 < 0) {
    operator delete(__p[0]);
  }
  v14[0] = *MEMORY[0x1E4FBA408];
  uint64_t v10 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v14 + *(void *)(v14[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v15[0] = v10;
  v15[1] = MEMORY[0x1E4FBA470] + 16;
  if (v16 < 0) {
    operator delete((void *)v15[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1E0198B70](&v17);
}

void sub_1DC0DDFB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

void *CoreML::colorSpaceToString(void *a1, int a2)
{
  if (a2 <= 19)
  {
    if (a2 != 0x80000000 && a2)
    {
      uint64_t v2 = "Grayscale";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
LABEL_12:
    uint64_t v2 = "Invalid";
    return std::string::basic_string[abi:ne180100]<0>(a1, v2);
  }
  if (a2 > 39)
  {
    if (a2 == 40)
    {
      uint64_t v2 = "Grayscale16Half";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
    goto LABEL_12;
  }
  if (a2 == 20) {
    uint64_t v2 = "RGB";
  }
  else {
    uint64_t v2 = "BGR";
  }
  return std::string::basic_string[abi:ne180100]<0>(a1, v2);
}

void CoreML::defaultSizeOf(CoreML *this, const ImageFeatureType *a2)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  int64_t width = a2->width_;
  if (width < 1 || (int64_t height = a2->height_, height < 1))
  {
    unsigned int v8 = a2->_oneof_case_[0];
    if (v8 == 31)
    {
      v11.enumeratedsizes_ = (ImageFeatureType_EnumeratedImageSizes *)a2->SizeFlexibility_;
      unint64_t v12 = (uint64_t *)*((void *)v11.enumeratedsizes_ + 2);
      if (!v12) {
        unint64_t v12 = &CoreML::Specification::_SizeRange_default_instance_;
      }
      uint64_t v13 = v12[2];
      unint64_t v5 = operator new(8uLL);
      *unint64_t v5 = v13;
      *(void *)this = v5;
      *((void *)this + 1) = v5 + 1;
      *((void *)this + 2) = v5 + 1;
      std::string::size_type v14 = (uint64_t *)*((void *)v11.enumeratedsizes_ + 3);
      if (!v14) {
        std::string::size_type v14 = &CoreML::Specification::_SizeRange_default_instance_;
      }
      int64_t height = v14[2];
      unint64_t v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(2uLL);
    }
    else
    {
      if (v8 != 21) {
        return;
      }
      uint64_t v9 = *(void *)(*((void *)a2->SizeFlexibility_.enumeratedsizes_ + 4) + 8);
      uint64_t v10 = *(void *)(v9 + 16);
      unint64_t v5 = operator new(8uLL);
      *unint64_t v5 = v10;
      *(void *)this = v5;
      *((void *)this + 1) = v5 + 1;
      *((void *)this + 2) = v5 + 1;
      int64_t height = *(void *)(v9 + 24);
      unint64_t v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(2uLL);
    }
  }
  else
  {
    unint64_t v5 = operator new(8uLL);
    *unint64_t v5 = width;
    *(void *)this = v5;
    *((void *)this + 1) = v5 + 1;
    *((void *)this + 2) = v5 + 1;
    unint64_t v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(2uLL);
  }
  v6[1] = height;
  uint64_t v15 = v6 + 2;
  *unint64_t v6 = *v5;
  *(void *)this = v6;
  *((void *)this + 1) = v6 + 2;
  *((void *)this + 2) = &v6[v7];
  operator delete(v5);
  *((void *)this + 1) = v15;
}

void sub_1DC0DE188(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t CoreML::rangeToString(CoreML *this, uint64_t a2, uint64_t a3, int a4)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v14);
  if (a4)
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)"[", 1);
    uint64_t v7 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)", ", 2);
    unsigned int v8 = (void *)std::ostream::operator<<();
    uint64_t v9 = "]";
    uint64_t v10 = 1;
LABEL_3:
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)v9, v10);
    goto LABEL_8;
  }
  if (a2 != a3)
  {
    if (a3 < 0)
    {
      unsigned int v8 = (void *)std::ostream::operator<<();
      uint64_t v9 = "...";
      uint64_t v10 = 3;
      goto LABEL_3;
    }
    SizeFlexibilityUnion v11 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"...", 3);
  }
  std::ostream::operator<<();
LABEL_8:
  std::stringbuf::str();
  v14[0] = *MEMORY[0x1E4FBA408];
  uint64_t v12 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v14 + *(void *)(v14[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v15[0] = v12;
  v15[1] = MEMORY[0x1E4FBA470] + 16;
  if (v16 < 0) {
    operator delete((void *)v15[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1E0198B70](&v17);
}

void sub_1DC0DE3B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void CoreML::FeatureType::toDictionary(CoreML::FeatureType *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t **)a2;
  uint64_t v4 = *(int *)(*(void *)this + 36);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = a2 + 8;
  std::string::basic_string[abi:ne180100]<0>(&v141, off_1E6C2BDF0[v4]);
  std::string::basic_string[abi:ne180100]<0>(__p, "type");
  unint64_t v5 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
  unint64_t v6 = (void **)(v5 + 7);
  if (*((char *)v5 + 79) < 0) {
    operator delete(*v6);
  }
  *(std::string *)unint64_t v6 = v141;
  *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  v141.__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(v140) < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v141.__r_.__value_.__l.__data_);
    }
  }
  if (*(unsigned char *)(*(void *)this + 16)) {
    uint64_t v7 = "1";
  }
  else {
    uint64_t v7 = "0";
  }
  std::string::basic_string[abi:ne180100]<0>(&v141, "isOptional");
  unsigned int v8 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, &v141, (uint64_t)&v141);
  uint64_t v9 = (unint64_t *)MEMORY[0x1E01988D0](v8 + 7, v7);
  if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v141.__r_.__value_.__l.__data_);
  }
  switch((int)v4)
  {
    case 4:
      if (*(_DWORD *)(*(void *)this + 36) == 4)
      {
        uint64_t v10 = *(const ImageFeatureType **)(*(void *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        uint64_t v10 = (const ImageFeatureType *)&CoreML::Specification::_ImageFeatureType_default_instance_;
      }
      CoreML::defaultSizeOf((CoreML *)__p, v10);
      BOOL v19 = __p[0];
      std::to_string(&v141, *(void *)__p[0]);
      std::string::basic_string[abi:ne180100]<0>(v137, "width");
      std::string::size_type v20 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      int v21 = (void **)(v20 + 7);
      if (*((char *)v20 + 79) < 0) {
        operator delete(*v21);
      }
      *(std::string *)int v21 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v141.__r_.__value_.__l.__data_);
        }
      }
      std::to_string(&v141, v19[1]);
      std::string::basic_string[abi:ne180100]<0>(v137, "height");
      uint64_t v22 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      uint64_t v23 = (void **)(v22 + 7);
      if (*((char *)v22 + 79) < 0) {
        operator delete(*v23);
      }
      *(std::string *)uint64_t v23 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v141.__r_.__value_.__l.__data_);
        }
      }
      CoreML::colorSpaceToString(&v141, v10->colorspace_);
      std::string::basic_string[abi:ne180100]<0>(v137, "colorspace");
      std::string::size_type v24 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      uint64_t v25 = (void **)(v24 + 7);
      if (*((char *)v24 + 79) < 0) {
        operator delete(*v25);
      }
      *(std::string *)uint64_t v25 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v141.__r_.__value_.__l.__data_);
        }
      }
      int colorspace = v10->colorspace_;
      if (colorspace == 40 || colorspace == 10) {
        int v28 = "0";
      }
      else {
        int v28 = "1";
      }
      std::string::basic_string[abi:ne180100]<0>(&v141, "isColor");
      uint64_t v29 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, &v141, (uint64_t)&v141);
      MEMORY[0x1E01988D0](v29 + 7, v28);
      if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v141.__r_.__value_.__l.__data_);
      }
      if (v10->_oneof_case_[0]) {
        int v30 = "1";
      }
      else {
        int v30 = "0";
      }
      std::string::basic_string[abi:ne180100]<0>(&v141, "hasSizeFlexibility");
      unsigned int v31 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, &v141, (uint64_t)&v141);
      inited = (unint64_t *)MEMORY[0x1E01988D0](v31 + 7, v30);
      if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v141.__r_.__value_.__l.__data_);
      }
      unsigned int v33 = v10->_oneof_case_[0];
      if (v33 == 21)
      {
        uint64_t v90 = 0;
        v137[0] = 0;
        v137[1] = 0;
        v138 = 0;
        while (1)
        {
          if (v33 == 21)
          {
            enumeratedsizes = (uint64_t *)v10->SizeFlexibility_.enumeratedsizes_;
          }
          else
          {
            inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
            enumeratedsizes = &CoreML::Specification::_ImageFeatureType_EnumeratedImageSizes_default_instance_;
          }
          if (v90 >= *((int *)enumeratedsizes + 6)) {
            break;
          }
          memset(&v141, 0, sizeof(v141));
          if (v10->_oneof_case_[0] == 21)
          {
            v92 = (uint64_t *)((char *)v10->SizeFlexibility_.enumeratedsizes_ + 32);
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
            v92 = &qword_1EC005BB0;
          }
          uint64_t v93 = *(void *)(*(void *)(*v92 + 8 * v90 + 8) + 16);
          v94 = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(1uLL);
          v95 = v94;
          uint64_t v97 = v96;
          std::string::size_type v98 = (std::string::size_type)v94 + 8 * v96;
          *(void *)v94 = v93;
          v99 = (char *)v94 + 8;
          v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v94;
          v141.__r_.__value_.__r.__words[2] = v98;
          if (v10->_oneof_case_[0] == 21)
          {
            v100 = (uint64_t *)v10->SizeFlexibility_.enumeratedsizes_;
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v94);
            v100 = &CoreML::Specification::_ImageFeatureType_EnumeratedImageSizes_default_instance_;
          }
          uint64_t v101 = *(void *)(*(void *)(v100[4] + 8 * v90 + 8) + 24);
          if (v97 < 2)
          {
            uint64_t v103 = (v99 - (char *)v95) >> 3;
            unint64_t v104 = v103 + 1;
            if ((unint64_t)(v103 + 1) >> 61) {
              std::vector<std::string>::__throw_length_error[abi:ne180100]();
            }
            if ((uint64_t)(v98 - (void)v95) >> 2 > v104) {
              unint64_t v104 = (uint64_t)(v98 - (void)v95) >> 2;
            }
            if (v98 - (unint64_t)v95 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v105 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v105 = v104;
            }
            if (v105) {
              unint64_t v105 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v105);
            }
            else {
              uint64_t v106 = 0;
            }
            uint64_t v107 = 0;
            v108 = (void *)(v105 + 8 * v103);
            void *v108 = v101;
            std::string::size_type v102 = (std::string::size_type)(v108 + 1);
            do
            {
              v108[v107 - 1] = *(void *)((char *)v95 + v107 * 8);
              --v107;
            }
            while (v107 != -1);
            v141.__r_.__value_.__r.__words[0] = (std::string::size_type)(v108 - 1);
            v141.__r_.__value_.__l.__size_ = (std::string::size_type)(v108 + 1);
            v141.__r_.__value_.__r.__words[2] = v105 + 8 * v106;
            operator delete(v95);
          }
          else
          {
            *((void *)v95 + 1) = v101;
            std::string::size_type v102 = (std::string::size_type)v95 + 16;
          }
          v141.__r_.__value_.__l.__size_ = v102;
          v109 = v137[1];
          if (v137[1] >= v138)
          {
            v110 = (void *)std::vector<std::vector<long long>>::__push_back_slow_path<std::vector<long long> const&>((uint64_t *)v137, (uint64_t)&v141);
          }
          else
          {
            *(void *)v137[1] = 0;
            v109[1] = 0;
            v109[2] = 0;
            std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v109, v141.__r_.__value_.__l.__data_, v102, (uint64_t)(v102 - v141.__r_.__value_.__r.__words[0]) >> 3);
            v110 = v109 + 3;
          }
          v137[1] = v110;
          inited = (unint64_t *)v141.__r_.__value_.__r.__words[0];
          if (v141.__r_.__value_.__r.__words[0]) {
            operator delete(v141.__r_.__value_.__l.__data_);
          }
          ++v90;
          unsigned int v33 = v10->_oneof_case_[0];
        }
        CoreML::enumeratedShapesToString((uint64_t)&v141, (uint64_t *)v137, 1);
        std::string::basic_string[abi:ne180100]<0>(v135, "enumeratedSizes");
        v115 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, v135, (uint64_t)v135);
        v116 = (void **)(v115 + 7);
        if (*((char *)v115 + 79) < 0) {
          operator delete(*v116);
        }
        *(std::string *)v116 = v141;
        *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        v141.__r_.__value_.__s.__data_[0] = 0;
        if (v136 < 0)
        {
          operator delete(v135[0]);
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v141.__r_.__value_.__l.__data_);
          }
        }
        CoreML::enumeratedShapesToString((uint64_t)&v141, (uint64_t *)v137, 0);
        std::string::basic_string[abi:ne180100]<0>(v135, "sizeFlexibility");
        v117 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, v135, (uint64_t)v135);
        v118 = (void **)(v117 + 7);
        if (*((char *)v117 + 79) < 0) {
          operator delete(*v118);
        }
        *(std::string *)v118 = v141;
        *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        v141.__r_.__value_.__s.__data_[0] = 0;
        if (v136 < 0)
        {
          operator delete(v135[0]);
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v141.__r_.__value_.__l.__data_);
          }
        }
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v137;
        std::vector<std::vector<long long>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v141);
      }
      else if (v33 == 31)
      {
        memset(&v141, 0, sizeof(v141));
        uint64_t v34 = (uint64_t *)*((void *)v10->SizeFlexibility_.enumeratedsizes_ + 2);
        if (!v34) {
          uint64_t v34 = &CoreML::Specification::_SizeRange_default_instance_;
        }
        uint64_t v35 = v34[2];
        uint64_t v36 = v34[3];
        BOOL v37 = operator new(0x10uLL);
        uint64_t v38 = v37;
        void *v37 = v35;
        v37[1] = v36;
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v37;
        v141.__r_.__value_.__l.__size_ = (std::string::size_type)(v37 + 2);
        v141.__r_.__value_.__r.__words[2] = (std::string::size_type)(v37 + 2);
        if (v10->_oneof_case_[0] == 31)
        {
          unint64_t v39 = (uint64_t *)v10->SizeFlexibility_.enumeratedsizes_;
          uint64_t v40 = (uint64_t *)v39[3];
          if (!v40) {
            uint64_t v40 = &CoreML::Specification::_SizeRange_default_instance_;
          }
          uint64_t v41 = v40[2];
        }
        else
        {
          v123 = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v37);
          v124 = (uint64_t *)qword_1EC0057A8;
          if (!qword_1EC0057A8) {
            v124 = &CoreML::Specification::_SizeRange_default_instance_;
          }
          uint64_t v41 = v124[2];
          if (v10->_oneof_case_[0] == 31)
          {
            unint64_t v39 = (uint64_t *)v10->SizeFlexibility_.enumeratedsizes_;
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v123);
            unint64_t v39 = &CoreML::Specification::_ImageFeatureType_ImageSizeRange_default_instance_;
          }
        }
        v125 = (uint64_t *)v39[3];
        if (!v125) {
          v125 = &CoreML::Specification::_SizeRange_default_instance_;
        }
        uint64_t v126 = v125[3];
        v127 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRParameter>>>(2uLL);
        v127[2] = v41;
        v127[3] = v126;
        *(_OWORD *)v127 = *v38;
        v129 = (void *)v141.__r_.__value_.__r.__words[0];
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v127;
        v141.__r_.__value_.__r.__words[2] = (std::string::size_type)&v127[2 * v128];
        if (v129) {
          operator delete(v129);
        }
        v141.__r_.__value_.__l.__size_ = (std::string::size_type)(v127 + 4);
        CoreML::dimensionRangesToString((uint64_t)v137, (uint64_t *)&v141, 1);
        std::string::basic_string[abi:ne180100]<0>(v135, "sizeRange");
        v130 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v135, (uint64_t)v135);
        v131 = v130 + 7;
        if (*((char *)v130 + 79) < 0) {
          operator delete(*v131);
        }
        *(_OWORD *)v131 = *(_OWORD *)v137;
        v131[2] = v138;
        HIBYTE(v138) = 0;
        LOBYTE(v137[0]) = 0;
        if (v136 < 0)
        {
          operator delete(v135[0]);
          if (SHIBYTE(v138) < 0) {
            operator delete(v137[0]);
          }
        }
        CoreML::dimensionRangesToString((uint64_t)v137, (uint64_t *)&v141, 0);
        std::string::basic_string[abi:ne180100]<0>(v135, "sizeFlexibility");
        v132 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v135, (uint64_t)v135);
        v133 = v132 + 7;
        if (*((char *)v132 + 79) < 0) {
          operator delete(*v133);
        }
        *(_OWORD *)v133 = *(_OWORD *)v137;
        v133[2] = v138;
        HIBYTE(v138) = 0;
        LOBYTE(v137[0]) = 0;
        if (v136 < 0)
        {
          operator delete(v135[0]);
          if (SHIBYTE(v138) < 0) {
            operator delete(v137[0]);
          }
        }
        if (v127)
        {
          v141.__r_.__value_.__l.__size_ = (std::string::size_type)v127;
          uint64_t v68 = v127;
          goto LABEL_266;
        }
      }
      goto LABEL_267;
    case 5:
      if (*(_DWORD *)(*(void *)this + 36) == 5)
      {
        std::string::size_type v14 = *(uint64_t **)(*(void *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        std::string::size_type v14 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      CoreML::dataTypeToString(&v141, *((_DWORD *)v14 + 9));
      std::string::basic_string[abi:ne180100]<0>(__p, "dataType");
      uint64_t v42 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
      uint64_t v43 = (void **)(v42 + 7);
      if (*((char *)v42 + 79) < 0) {
        operator delete(*v43);
      }
      *(std::string *)uint64_t v43 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v140) < 0)
      {
        operator delete(__p[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v141.__r_.__value_.__l.__data_);
        }
      }
      CoreML::defaultShapeOf((unint64_t)__p, (const CoreML::Specification::ArrayFeatureType *)v14);
      CoreML::dimensionsToString((uint64_t)&v141, __p, 1);
      std::string::basic_string[abi:ne180100]<0>(v137, "shape");
      BOOL v44 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      int v45 = (void **)(v44 + 7);
      if (*((char *)v44 + 79) < 0) {
        operator delete(*v45);
      }
      *(std::string *)int v45 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v141.__r_.__value_.__l.__data_);
        }
      }
      if (__p[0]) {
        operator delete(__p[0]);
      }
      if (*((_DWORD *)v14 + 15)) {
        uint64_t v46 = "1";
      }
      else {
        uint64_t v46 = "0";
      }
      std::string::basic_string[abi:ne180100]<0>(&v141, "hasShapeFlexibility");
      unsigned __int8 v47 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, &v141, (uint64_t)&v141);
      unint64_t v48 = MEMORY[0x1E01988D0](v47 + 7, v46);
      if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v141.__r_.__value_.__l.__data_);
      }
      int v49 = *((_DWORD *)v14 + 15);
      if (v49 == 21)
      {
        uint64_t v74 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v140 = 0;
        while (1)
        {
          if (v49 == 21)
          {
            uint64_t v75 = (uint64_t *)v14[5];
          }
          else
          {
            unint64_t v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
            uint64_t v75 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
          }
          if (v74 >= *((int *)v75 + 6)) {
            break;
          }
          unint64_t v76 = 0;
          uint64_t v77 = 0;
          std::string::size_type v78 = 0;
          uint64_t v79 = 0;
          memset(&v141, 0, sizeof(v141));
          while (1)
          {
            if (*((_DWORD *)v14 + 15) == 21)
            {
              uint64_t v80 = (uint64_t *)v14[5];
            }
            else
            {
              unint64_t v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
              uint64_t v80 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
            }
            if (v79 >= *(int *)(*(void *)(v80[4] + 8 * v74 + 8) + 16)) {
              break;
            }
            if (*((_DWORD *)v14 + 15) == 21)
            {
              v81 = (uint64_t *)v14[5];
            }
            else
            {
              unint64_t v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
              v81 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
            }
            uint64_t v82 = *(void *)(*(void *)(*(void *)(v81[4] + 8 * v74 + 8) + 24) + 8 * v79 + 8);
            if ((unint64_t)v76 >= v78)
            {
              uint64_t v84 = (v76 - v77) >> 3;
              unint64_t v85 = v84 + 1;
              if ((unint64_t)(v84 + 1) >> 61)
              {
                v141.__r_.__value_.__r.__words[2] = v78;
                v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
                std::vector<std::string>::__throw_length_error[abi:ne180100]();
              }
              if ((uint64_t)(v78 - (void)v77) >> 2 > v85) {
                unint64_t v85 = (uint64_t)(v78 - (void)v77) >> 2;
              }
              if (v78 - (unint64_t)v77 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v48 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v48 = v85;
              }
              if (v48) {
                unint64_t v48 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v48);
              }
              else {
                uint64_t v86 = 0;
              }
              v87 = (void *)(v48 + 8 * v84);
              void *v87 = v82;
              std::string::size_type v83 = (std::string::size_type)(v87 + 1);
              while (v76 != v77)
              {
                uint64_t v88 = *((void *)v76 - 1);
                v76 -= 8;
                *--v87 = v88;
              }
              std::string::size_type v78 = v48 + 8 * v86;
              v141.__r_.__value_.__l.__size_ = v83;
              if (v77) {
                operator delete(v77);
              }
              uint64_t v77 = v87;
            }
            else
            {
              *(void *)unint64_t v76 = v82;
              std::string::size_type v83 = (std::string::size_type)(v76 + 8);
            }
            v141.__r_.__value_.__l.__size_ = v83;
            ++v79;
            unint64_t v76 = (char *)v83;
          }
          v141.__r_.__value_.__r.__words[2] = v78;
          v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
          v89 = __p[1];
          if (__p[1] >= v140)
          {
            unint64_t v48 = std::vector<std::vector<long long>>::__push_back_slow_path<std::vector<long long> const&>((uint64_t *)__p, (uint64_t)&v141);
          }
          else
          {
            *(void *)__p[1] = 0;
            v89[1] = 0;
            v89[2] = 0;
            std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v89, v77, (uint64_t)v76, (v76 - v77) >> 3);
            unint64_t v48 = (unint64_t)(v89 + 3);
            uint64_t v77 = (unsigned char *)v141.__r_.__value_.__r.__words[0];
          }
          __p[1] = (void *)v48;
          if (v77)
          {
            v141.__r_.__value_.__l.__size_ = (std::string::size_type)v77;
            operator delete(v77);
          }
          ++v74;
          int v49 = *((_DWORD *)v14 + 15);
        }
        CoreML::enumeratedShapesToString((uint64_t)&v141, (uint64_t *)__p, 1);
        std::string::basic_string[abi:ne180100]<0>(v137, "enumeratedShapes");
        v119 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, v137, (uint64_t)v137);
        v120 = (void **)(v119 + 7);
        if (*((char *)v119 + 79) < 0) {
          operator delete(*v120);
        }
        *(std::string *)v120 = v141;
        *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        v141.__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(v138) < 0)
        {
          operator delete(v137[0]);
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v141.__r_.__value_.__l.__data_);
          }
        }
        CoreML::enumeratedShapesToString((uint64_t)&v141, (uint64_t *)__p, 0);
        std::string::basic_string[abi:ne180100]<0>(v137, "shapeFlexibility");
        v121 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, v137, (uint64_t)v137);
        v122 = (void **)(v121 + 7);
        if (*((char *)v121 + 79) < 0) {
          operator delete(*v122);
        }
        *(std::string *)v122 = v141;
        *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        v141.__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(v138) < 0)
        {
          operator delete(v137[0]);
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v141.__r_.__value_.__l.__data_);
          }
        }
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
        std::vector<std::vector<long long>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v141);
      }
      else if (v49 == 31)
      {
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        memset(&v141, 0, sizeof(v141));
        while (1)
        {
          if (v49 == 31)
          {
            uint64_t v52 = (uint64_t *)v14[5];
          }
          else
          {
            unint64_t v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
            uint64_t v52 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
          }
          if (v51 >= *((int *)v52 + 6)) {
            break;
          }
          if (*((_DWORD *)v14 + 15) == 31)
          {
            int64_t v53 = (uint64_t *)v14[5];
            uint64_t v54 = *(void *)(*(void *)(v53[4] + 8 * v51 + 8) + 16);
          }
          else
          {
            unint64_t v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
            uint64_t v54 = *(void *)(*(void *)(qword_1EC005238 + 8 * v51 + 8) + 16);
            if (*((_DWORD *)v14 + 15) == 31)
            {
              int64_t v53 = (uint64_t *)v14[5];
            }
            else
            {
              unint64_t v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
              int64_t v53 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
            }
          }
          uint64_t v55 = *(void *)(*(void *)(v53[4] + 8 * v51 + 8) + 24);
          if ((unint64_t)v50 >= v141.__r_.__value_.__r.__words[2])
          {
            std::string::size_type v57 = v141.__r_.__value_.__r.__words[0];
            uint64_t v58 = (uint64_t)((uint64_t)v50 - v141.__r_.__value_.__r.__words[0]) >> 4;
            unint64_t v59 = v58 + 1;
            if ((unint64_t)(v58 + 1) >> 60) {
              std::vector<std::string>::__throw_length_error[abi:ne180100]();
            }
            int64_t v60 = v141.__r_.__value_.__r.__words[2] - v141.__r_.__value_.__r.__words[0];
            if ((uint64_t)(v141.__r_.__value_.__r.__words[2] - v141.__r_.__value_.__r.__words[0]) >> 3 > v59) {
              unint64_t v59 = v60 >> 3;
            }
            if ((unint64_t)v60 >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v48 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v48 = v59;
            }
            if (v48) {
              unint64_t v48 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRParameter>>>(v48);
            }
            else {
              uint64_t v61 = 0;
            }
            BOOL v62 = (void *)(v48 + 16 * v58);
            void *v62 = v54;
            v62[1] = v55;
            std::string::size_type v63 = (std::string::size_type)v62;
            if (v50 == (void *)v57)
            {
              uint64_t v3 = (uint64_t **)a2;
            }
            else
            {
              uint64_t v3 = (uint64_t **)a2;
              do
              {
                *(_OWORD *)(v63 - 16) = *((_OWORD *)v50 - 1);
                v63 -= 16;
                v50 -= 2;
              }
              while (v50 != (void *)v57);
              uint64_t v50 = (void *)v141.__r_.__value_.__r.__words[0];
            }
            std::string::size_type v56 = (std::string::size_type)(v62 + 2);
            v141.__r_.__value_.__r.__words[0] = v63;
            v141.__r_.__value_.__l.__size_ = (std::string::size_type)(v62 + 2);
            v141.__r_.__value_.__r.__words[2] = v48 + 16 * v61;
            if (v50) {
              operator delete(v50);
            }
          }
          else
          {
            *uint64_t v50 = v54;
            v50[1] = v55;
            std::string::size_type v56 = (std::string::size_type)(v50 + 2);
            uint64_t v3 = (uint64_t **)a2;
          }
          v141.__r_.__value_.__l.__size_ = v56;
          ++v51;
          int v49 = *((_DWORD *)v14 + 15);
          uint64_t v50 = (void *)v56;
        }
        CoreML::dimensionRangesToString((uint64_t)__p, (uint64_t *)&v141, 1);
        std::string::basic_string[abi:ne180100]<0>(v137, "shapeRange");
        v111 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
        v112 = v111 + 7;
        if (*((char *)v111 + 79) < 0) {
          operator delete(*v112);
        }
        *(_OWORD *)v112 = *(_OWORD *)__p;
        v112[2] = v140;
        HIBYTE(v14CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(this, 0) = 0;
        LOBYTE(__p[0]) = 0;
        if (SHIBYTE(v138) < 0)
        {
          operator delete(v137[0]);
          if (SHIBYTE(v140) < 0) {
            operator delete(__p[0]);
          }
        }
        CoreML::dimensionRangesToString((uint64_t)__p, (uint64_t *)&v141, 0);
        std::string::basic_string[abi:ne180100]<0>(v137, "shapeFlexibility");
        v113 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
        v114 = v113 + 7;
        if (*((char *)v113 + 79) < 0) {
          operator delete(*v114);
        }
        *(_OWORD *)v114 = *(_OWORD *)__p;
        v114[2] = v140;
        HIBYTE(v14CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(this, 0) = 0;
        LOBYTE(__p[0]) = 0;
        if (SHIBYTE(v138) < 0)
        {
          operator delete(v137[0]);
          if (SHIBYTE(v140) < 0) {
            operator delete(__p[0]);
          }
        }
        uint64_t v73 = (void *)v141.__r_.__value_.__r.__words[0];
        if (v141.__r_.__value_.__r.__words[0]) {
LABEL_268:
        }
          operator delete(v73);
      }
      return;
    case 6:
      if (*(_DWORD *)(*(void *)this + 36) == 6)
      {
        uint64_t v12 = *(uint64_t **)(*(void *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        uint64_t v12 = &CoreML::Specification::_DictionaryFeatureType_default_instance_;
      }
      std::string::basic_string[abi:ne180100]<0>(&v141, off_1E6C2BE38[*((int *)v12 + 7)]);
      std::string::basic_string[abi:ne180100]<0>(__p, "keyType");
      char v16 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
      goto LABEL_138;
    case 7:
      if (*(_DWORD *)(*(void *)this + 36) == 7)
      {
        uint64_t v13 = *(uint64_t **)(*(void *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        uint64_t v13 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
      }
      int v17 = *((_DWORD *)v13 + 9);
      if (v17)
      {
        if (v17 == 1) {
          int v18 = "Int64";
        }
        else {
          int v18 = "String";
        }
      }
      else
      {
        int v18 = "Invalid";
      }
      std::string::basic_string[abi:ne180100]<0>(&v141, v18);
      std::string::basic_string[abi:ne180100]<0>(__p, "valueType");
      uint64_t v69 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
      uint64_t v70 = (void **)(v69 + 7);
      if (*((char *)v69 + 79) < 0) {
        operator delete(*v70);
      }
      *(std::string *)uint64_t v70 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v140) < 0)
      {
        operator delete(__p[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v141.__r_.__value_.__l.__data_);
        }
      }
      unint64_t v71 = (uint64_t *)v13[2];
      if (!v71) {
        unint64_t v71 = &CoreML::Specification::_SizeRange_default_instance_;
      }
      CoreML::rangeToString((CoreML *)&v141, v71[2], v71[3], 1);
      std::string::basic_string[abi:ne180100]<0>(__p, "sizeRange");
      char v16 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
LABEL_138:
      uint64_t v72 = (void **)(v16 + 7);
      if (*((char *)v16 + 79) < 0) {
        operator delete(*v72);
      }
      *(std::string *)uint64_t v72 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if ((SHIBYTE(v140) & 0x80000000) == 0) {
        return;
      }
      operator delete(__p[0]);
      if ((SHIBYTE(v141.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
      uint64_t v73 = (void *)v141.__r_.__value_.__r.__words[0];
      goto LABEL_268;
    case 8:
      if (*(_DWORD *)(*(void *)this + 36) == 8)
      {
        SizeFlexibilityUnion v11 = *(uint64_t **)(*(void *)this + 24);
      }
      else
      {
        uint64_t v9 = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        SizeFlexibilityUnion v11 = &CoreML::Specification::_StateFeatureType_default_instance_;
      }
      if (*((_DWORD *)v11 + 7) == 1)
      {
        uint64_t v15 = (int *)v11[2];
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        uint64_t v15 = (int *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      CoreML::dataTypeToString(&v141, v15[9]);
      std::string::basic_string[abi:ne180100]<0>(__p, "dataType");
      uint64_t v64 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
      uint64_t v65 = (void **)(v64 + 7);
      if (*((char *)v64 + 79) < 0) {
        operator delete(*v65);
      }
      *(std::string *)uint64_t v65 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v140) < 0)
      {
        operator delete(__p[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v141.__r_.__value_.__l.__data_);
        }
      }
      CoreML::defaultShapeOf((unint64_t)__p, (const CoreML::Specification::ArrayFeatureType *)v15);
      CoreML::dimensionsToString((uint64_t)&v141, __p, 1);
      std::string::basic_string[abi:ne180100]<0>(v137, "shape");
      v66 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      uint64_t v67 = (void **)(v66 + 7);
      if (*((char *)v66 + 79) < 0) {
        operator delete(*v67);
      }
      *(std::string *)uint64_t v67 = v141;
      *((unsigned char *)&v141.__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v68 = (void *)v141.__r_.__value_.__r.__words[0];
LABEL_266:
          operator delete(v68);
        }
      }
LABEL_267:
      uint64_t v73 = __p[0];
      if (__p[0]) {
        goto LABEL_268;
      }
      return;
    default:
      return;
  }
}

void sub_1DC0DF63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  operator delete(v34);
  if (__p) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a10, *(void **)(a10 + 8));
  _Unwind_Resume(a1);
}

uint64_t **std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t **a1, void *a2, uint64_t a3)
{
  unint64_t v6 = a1 + 1;
  unint64_t v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v6 = (uint64_t **)v5;
        unsigned int v8 = v5 + 4;
        if (!std::less<std::string>::operator()[abi:ne180100](a2, v5 + 4)) {
          break;
        }
        unint64_t v5 = *v6;
        uint64_t v9 = v6;
        if (!*v6) {
          goto LABEL_9;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v8, a2)) {
        break;
      }
      uint64_t v9 = v6 + 1;
      unint64_t v5 = v6[1];
      if (!v5) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v9 = a1 + 1;
LABEL_9:
    uint64_t v10 = (uint64_t *)v6;
    unint64_t v6 = (uint64_t **)operator new(0x50uLL);
    *((_OWORD *)v6 + 2) = *(_OWORD *)a3;
    SizeFlexibilityUnion v11 = *(uint64_t **)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    v6[6] = v11;
    v6[7] = 0;
    v6[8] = 0;
    v6[9] = 0;
    *unint64_t v6 = 0;
    v6[1] = 0;
    v6[2] = v10;
    *uint64_t v9 = (uint64_t *)v6;
    uint64_t v12 = (uint64_t *)**a1;
    uint64_t v13 = (uint64_t *)v6;
    if (v12)
    {
      *a1 = v12;
      uint64_t v13 = *v9;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v13);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v6;
}

uint64_t std::vector<std::vector<long long>>::__push_back_slow_path<std::vector<long long> const&>(uint64_t *a1, uint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v3 = v2 + 1;
  if (v2 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v3) {
    unint64_t v3 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v3;
  }
  std::string::size_type v20 = a1 + 2;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  unsigned int v8 = &v7[24 * v2];
  int v17 = v7;
  v18.i64[0] = (uint64_t)v8;
  v18.i64[1] = (uint64_t)v8;
  BOOL v19 = &v7[24 * v6];
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = 0;
  *(void *)unsigned int v8 = 0;
  std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v8, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3);
  uint64_t v9 = v18.i64[0];
  uint64_t v10 = v18.i64[1] + 24;
  v18.i64[1] += 24;
  uint64_t v12 = (void *)*a1;
  SizeFlexibilityUnion v11 = (void *)a1[1];
  if (v11 == (void *)*a1)
  {
    int64x2_t v14 = vdupq_n_s64((unint64_t)v11);
  }
  else
  {
    do
    {
      *(void *)(v9 - 24) = 0;
      *(void *)(v9 - 16) = 0;
      v9 -= 24;
      *(void *)(v9 + 16) = 0;
      long long v13 = *(_OWORD *)(v11 - 3);
      v11 -= 3;
      *(_OWORD *)uint64_t v9 = v13;
      *(void *)(v9 + 16) = v11[2];
      *SizeFlexibilityUnion v11 = 0;
      v11[1] = 0;
      v11[2] = 0;
    }
    while (v11 != v12);
    int64x2_t v14 = *(int64x2_t *)a1;
    uint64_t v10 = v18.i64[1];
  }
  *a1 = v9;
  a1[1] = v10;
  int64x2_t v18 = v14;
  uint64_t v15 = (char *)a1[2];
  a1[2] = (uint64_t)v19;
  BOOL v19 = v15;
  int v17 = (char *)v14.i64[0];
  std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)&v17);
  return v10;
}

void sub_1DC0DFBB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<long long>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      unint64_t v6 = (char *)v1[1];
      do
      {
        unsigned int v8 = (void *)*((void *)v6 - 3);
        v6 -= 24;
        uint64_t v7 = v8;
        if (v8)
        {
          *((void *)v4 - 2) = v7;
          operator delete(v7);
        }
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t CoreML::enumeratedShapesToString(uint64_t a1, uint64_t *a2, int a3)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v20);
  if (a3) {
    unint64_t v5 = ", ";
  }
  else {
    unint64_t v5 = " | ";
  }
  std::string::basic_string[abi:ne180100]<0>(v18, v5);
  if (a3) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"[", 1);
  }
  uint64_t v6 = *a2;
  if (a2[1] != *a2)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    do
    {
      CoreML::dimensionsToString((uint64_t)__p, (void *)(v6 + v7), a3);
      if ((v17 & 0x80u) == 0) {
        uint64_t v9 = __p;
      }
      else {
        uint64_t v9 = (void **)__p[0];
      }
      if ((v17 & 0x80u) == 0) {
        uint64_t v10 = v17;
      }
      else {
        uint64_t v10 = (uint64_t)__p[1];
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)v9, v10);
      if ((char)v17 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v6 = *a2;
      unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
      if (v8 < v11 - 1)
      {
        if ((v19 & 0x80u) == 0) {
          uint64_t v12 = v18;
        }
        else {
          uint64_t v12 = (void **)v18[0];
        }
        if ((v19 & 0x80u) == 0) {
          uint64_t v13 = v19;
        }
        else {
          uint64_t v13 = (uint64_t)v18[1];
        }
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)v12, v13);
        uint64_t v6 = *a2;
        unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
      }
      ++v8;
      v7 += 24;
    }
    while (v8 < v11);
  }
  if (a3) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"]", 1);
  }
  std::stringbuf::str();
  if ((char)v19 < 0) {
    operator delete(v18[0]);
  }
  v20[0] = *MEMORY[0x1E4FBA408];
  uint64_t v14 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v20 + *(void *)(v20[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v21[0] = v14;
  v21[1] = MEMORY[0x1E4FBA470] + 16;
  if (v22 < 0) {
    operator delete((void *)v21[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1E0198B70](&v23);
}

void sub_1DC0DFEFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
}

uint64_t CoreML::dimensionRangesToString(uint64_t a1, uint64_t *a2, int a3)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v20);
  if (a3) {
    unint64_t v5 = ", ";
  }
  else {
    unint64_t v5 = " × ";
  }
  std::string::basic_string[abi:ne180100]<0>(v18, v5);
  if (a3) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"[", 1);
  }
  uint64_t v6 = *a2;
  if (a2[1] != *a2)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    do
    {
      CoreML::rangeToString((CoreML *)__p, *(void *)(v6 + v7), *(void *)(v6 + v7 + 8), a3);
      if ((v17 & 0x80u) == 0) {
        uint64_t v9 = __p;
      }
      else {
        uint64_t v9 = (void **)__p[0];
      }
      if ((v17 & 0x80u) == 0) {
        uint64_t v10 = v17;
      }
      else {
        uint64_t v10 = (uint64_t)__p[1];
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)v9, v10);
      if ((char)v17 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v6 = *a2;
      unint64_t v11 = (a2[1] - *a2) >> 4;
      if (v8 < v11 - 1)
      {
        if ((v19 & 0x80u) == 0) {
          uint64_t v12 = v18;
        }
        else {
          uint64_t v12 = (void **)v18[0];
        }
        if ((v19 & 0x80u) == 0) {
          uint64_t v13 = v19;
        }
        else {
          uint64_t v13 = (uint64_t)v18[1];
        }
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)v12, v13);
        uint64_t v6 = *a2;
        unint64_t v11 = (a2[1] - *a2) >> 4;
      }
      ++v8;
      v7 += 16;
    }
    while (v8 < v11);
  }
  if (a3) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"]", 1);
  }
  std::stringbuf::str();
  if ((char)v19 < 0) {
    operator delete(v18[0]);
  }
  v20[0] = *MEMORY[0x1E4FBA408];
  uint64_t v14 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v20 + *(void *)(v20[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v21[0] = v14;
  v21[1] = MEMORY[0x1E4FBA470] + 16;
  if (v22 < 0) {
    operator delete((void *)v21[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1E0198B70](&v23);
}

void sub_1DC0E01E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
}

uint64_t std::__split_buffer<std::vector<long long>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != v3)
  {
    uint64_t v4 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v4)
    {
      *(void *)(v2 - 16) = v4;
      operator delete(v4);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t CoreML::Specification::DictVectorizer::GetCachedSize(CoreML::Specification::DictVectorizer *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::DictVectorizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(this + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 2)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
  }
  return this;
}

uint64_t CoreML::Specification::DictVectorizer::ByteSizeLong(CoreML::Specification::DictVectorizer *this)
{
  int v2 = *((_DWORD *)this + 7);
  if (v2 == 2)
  {
    uint64_t v3 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 2));
  }
  else
  {
    if (v2 != 1)
    {
      uint64_t result = 0;
      goto LABEL_7;
    }
    uint64_t v3 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 2));
  }
  uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_7:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::DictVectorizer::MergePartialFromCodedStream(CoreML::Specification::DictVectorizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_18;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_18;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_18;
      }
      if (*((_DWORD *)this + 7) != 2)
      {
        CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 2;
        operator new();
      }
      unint64_t v11 = (CoreML::Specification::Int64Vector *)*((void *)this + 2);
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v25 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v25--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v25;
      if (v25 < 0 != v20) {
        return 0;
      }
      int v21 = v23;
      uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v11, a2, v24);
      if (!result) {
        return result;
      }
LABEL_39:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21)) {
        return 0;
      }
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      if (*((_DWORD *)this + 7) != 1)
      {
        CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 1;
        operator new();
      }
      uint64_t v10 = (CoreML::Specification::StringVector *)*((void *)this + 2);
      uint64_t v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
      {
        int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v14 < 0) {
          return 0;
        }
      }
      else
      {
        int v14 = *v13;
        *(void *)a2 = v13 + 1;
      }
      int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
      int v19 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v19;
      if (v19 < 0 != v20) {
        return 0;
      }
      int v21 = v17;
      uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v10, (char **)a2, v18);
      if (!result) {
        return result;
      }
      goto LABEL_39;
    }
LABEL_18:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0E05C4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::DictVectorizer::MergeFrom(std::string *this, const CoreML::Specification::DictVectorizer *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 == 2)
  {
    if (*(_DWORD *)(v3 + 28) != 2)
    {
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 2;
      operator new();
    }
    unint64_t v7 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 2);
    uint64_t v9 = *(unint64_t **)(v3 + 16);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v9, v7);
  }
  else if (v5 == 1)
  {
    if (*(_DWORD *)(v3 + 28) != 1)
    {
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 1;
      operator new();
    }
    uint64_t v6 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 2);
    unint64_t v8 = *(std::string **)(v3 + 16);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v8, v6);
  }
  return this;
}

void sub_1DC0E076C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DictVectorizer::IsInitialized(CoreML::Specification::DictVectorizer *this)
{
  return 1;
}

void CoreML::Specification::DictVectorizer::New(CoreML::Specification::DictVectorizer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0E0804(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::DictVectorizer *CoreML::Specification::DictVectorizer::DictVectorizer(CoreML::Specification::DictVectorizer *this)
{
  *(void *)this = &unk_1F361BDB8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DictVectorizer *)&CoreML::Specification::_DictVectorizer_default_instance_) {
    CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(this);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0E0888(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DictVectorizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DictVectorizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DictVectorizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(CoreML::Specification::protobuf_DictVectorizer_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_DictVectorizer_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_DictVectorizer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_DictVectorizer_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  uint64_t result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_DictVectorizer_default_instance_ = (uint64_t)&unk_1F361BDB8;
  *(void *)algn_1EC0021D0 = 0;
  qword_1EC0021E0 = 0;
  byte_1EC0021E8 = 1;
  return result;
}

void CoreML::Specification::DictVectorizer::New(CoreML::Specification::DictVectorizer *this)
{
}

void *CoreML::Specification::DictVectorizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DictVectorizer");
}

void CoreML::Specification::DictVectorizer::~DictVectorizer(CoreML::Specification::DictVectorizer *this)
{
  CoreML::Specification::DictVectorizer::~DictVectorizer(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361BDB8;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::NeuralNetwork::GetCachedSize(CoreML::Specification::NeuralNetwork *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::NeuralNetwork::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2);
  }
  int v8 = *(_DWORD *)(v5 + 48);
  if (v8)
  {
    for (int j = 0; j != v8; ++j)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(*(void *)(v5 + 56) + 8 * j + 8), a2);
  }
  signed int v10 = *(_DWORD *)(v5 + 72);
  if (v10) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(5, v10, a2, a4);
  }
  signed int v11 = *(_DWORD *)(v5 + 76);
  if (v11) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(6, v11, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    uint64_t v12 = *(void *)(v5 + 64);
    if (v12)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage(10, v12, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetwork::ByteSizeLong(CoreML::Specification::NeuralNetwork *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(*(CoreML::Specification::NeuralNetworkLayer **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(*(CoreML::Specification::NeuralNetworkPreprocessing **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    signed int v10 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = 11;
  int v13 = *((_DWORD *)this + 18);
  int v14 = *((_DWORD *)this + 19);
  uint64_t v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0) {
    uint64_t v12 = v15;
  }
  uint64_t v16 = v12 + v7;
  if (!v13) {
    uint64_t v16 = v7;
  }
  uint64_t v17 = 11;
  uint64_t v18 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v14 >= 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v17 + v16;
  if (v14) {
    uint64_t result = v19;
  }
  else {
    uint64_t result = v16;
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = result;
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(CoreML::Specification::NeuralNetworkLayer *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 6);
  }
  else
  {
    int v3 = (uint64_t *)(*((void *)this + 4) + 8);
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *((unsigned int *)this + 12);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    signed int v10 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *((unsigned int *)this + 18);
  uint64_t v15 = v9 + v14;
  if (v14)
  {
    int v16 = 0;
    do
    {
      uint64_t v17 = CoreML::Specification::Tensor::ByteSizeLong(*(CoreML::Specification::Tensor **)(*((void *)this + 10)
                                                                                          + 8 * v16
                                                                                          + 8));
      v15 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      ++v16;
    }
    while (v14 != v16);
  }
  uint64_t v18 = *((unsigned int *)this + 24);
  uint64_t v19 = v15 + v18;
  if (v18)
  {
    int v20 = 0;
    do
    {
      uint64_t v21 = CoreML::Specification::Tensor::ByteSizeLong(*(CoreML::Specification::Tensor **)(*((void *)this + 13)
                                                                                          + 8 * v20
                                                                                          + 8));
      v19 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      ++v20;
    }
    while (v18 != v20);
  }
  uint64_t v22 = *((void *)this + 14);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  if (*(char *)(v22 + 23) < 0)
  {
    if (!*(void *)(v22 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v22 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v19 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  if (*((unsigned char *)this + 120)) {
    v19 += 2;
  }
  int v25 = *((_DWORD *)this + 35);
  if (v25 <= 879)
  {
    if (v25 > 604)
    {
      if (v25 <= 759)
      {
        if (v25 > 684)
        {
          if (v25 > 729)
          {
            if (v25 <= 739)
            {
              if (v25 != 730 && v25 != 735) {
                goto LABEL_370;
              }
            }
            else if (v25 != 740 && v25 != 750 && v25 != 755)
            {
              goto LABEL_370;
            }
          }
          else if (v25 <= 709)
          {
            if (v25 != 685 && v25 != 700) {
              goto LABEL_370;
            }
          }
          else if (v25 != 710 && v25 != 715 && v25 != 720)
          {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 <= 639)
        {
          if (v25 <= 619)
          {
            if (v25 == 605)
            {
              uint64_t v26 = CoreML::Specification::BranchLayerParams::ByteSizeLong(*((CoreML::Specification::BranchLayerParams **)this
                                                                           + 16));
              goto LABEL_368;
            }
            if (v25 == 615)
            {
              uint64_t v26 = CoreML::Specification::LoopLayerParams::ByteSizeLong(*((CoreML::Specification::LoopLayerParams **)this
                                                                         + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          if (v25 == 620 || v25 == 625) {
            goto LABEL_331;
          }
          if (v25 != 635) {
            goto LABEL_370;
          }
          uint64_t v27 = *((void *)this + 16);
          uint64_t v28 = 5;
          if (*(float *)(v27 + 16) == 0.0) {
            uint64_t v28 = 0;
          }
          if (*(float *)(v27 + 20) != 0.0) {
            v28 += 5;
          }
          if (*(float *)(v27 + 24) != 0.0) {
            v28 += 5;
          }
          *(_DWORD *)(v27 + 28) = v28;
          goto LABEL_281;
        }
        if (v25 > 664)
        {
          if (v25 != 665 && v25 != 670 && v25 != 680) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 640 && v25 != 660) {
          goto LABEL_370;
        }
LABEL_275:
        uint64_t v35 = *((void *)this + 16);
        uint64_t v28 = 5;
        if (*(float *)(v35 + 16) == 0.0) {
          uint64_t v28 = 0;
        }
        uint64_t v38 = v28 + 5;
        BOOL v39 = *(float *)(v35 + 20) == 0.0;
LABEL_278:
        if (!v39) {
          uint64_t v28 = v38;
        }
        goto LABEL_280;
      }
      if (v25 > 824)
      {
        if (v25 <= 849)
        {
          switch(v25)
          {
            case 825:
            case 827:
            case 830:
            case 832:
              goto LABEL_86;
            case 826:
            case 828:
            case 829:
            case 831:
              goto LABEL_370;
            default:
              if (v25 == 840 || v25 == 845) {
                goto LABEL_331;
              }
              break;
          }
          goto LABEL_370;
        }
        if (v25 <= 864)
        {
          if (v25 != 850 && v25 != 855) {
            goto LABEL_370;
          }
        }
        else if (v25 != 865 && v25 != 870 && v25 != 875)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 789)
      {
        if (v25 > 774)
        {
          if (v25 != 775 && v25 != 780) {
            goto LABEL_370;
          }
        }
        else if (v25 != 760 && v25 != 770)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 > 814)
      {
        if (v25 != 815 && v25 != 820) {
          goto LABEL_370;
        }
        goto LABEL_86;
      }
      if (v25 == 790) {
        goto LABEL_331;
      }
      if (v25 != 795) {
        goto LABEL_370;
      }
      goto LABEL_211;
    }
    if (v25 <= 249)
    {
      if (v25 <= 189)
      {
        if (v25 <= 159)
        {
          if (v25 <= 129)
          {
            if (v25 == 100)
            {
              uint64_t v26 = CoreML::Specification::ConvolutionLayerParams::ByteSizeLong(*((CoreML::Specification::ConvolutionLayerParams **)this
                                                                                + 16));
              goto LABEL_368;
            }
            if (v25 == 120)
            {
              uint64_t v26 = CoreML::Specification::PoolingLayerParams::ByteSizeLong(*((CoreML::Specification::PoolingLayerParams **)this
                                                                            + 16));
              goto LABEL_368;
            }
          }
          else
          {
            switch(v25)
            {
              case 130:
                uint64_t v26 = CoreML::Specification::ActivationParams::ByteSizeLong(*((CoreML::Specification::ActivationParams **)this
                                                                            + 16));
                goto LABEL_368;
              case 140:
                uint64_t v26 = CoreML::Specification::InnerProductLayerParams::ByteSizeLong(*((CoreML::Specification::InnerProductLayerParams **)this
                                                                                   + 16));
                goto LABEL_368;
              case 150:
                uint64_t v26 = CoreML::Specification::EmbeddingLayerParams::ByteSizeLong(*((CoreML::Specification::EmbeddingLayerParams **)this
                                                                                + 16));
LABEL_368:
                uint64_t v42 = v19 + v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
                goto LABEL_369;
            }
          }
          goto LABEL_370;
        }
        if (v25 > 169)
        {
          if (v25 != 170)
          {
            if (v25 != 175)
            {
              if (v25 == 180)
              {
                uint64_t v26 = CoreML::Specification::LRNLayerParams::ByteSizeLong(*((CoreML::Specification::LRNLayerParams **)this
                                                                          + 16));
                goto LABEL_368;
              }
              goto LABEL_370;
            }
            goto LABEL_331;
          }
          goto LABEL_86;
        }
        if (v25 == 160)
        {
          uint64_t v26 = CoreML::Specification::BatchnormLayerParams::ByteSizeLong(*((CoreML::Specification::BatchnormLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        }
        if (v25 != 165) {
          goto LABEL_370;
        }
        uint64_t v35 = *((void *)this + 16);
        uint64_t v28 = 2 * *(unsigned __int8 *)(v35 + 16);
        if (*(unsigned char *)(v35 + 17)) {
          v28 += 2;
        }
        uint64_t v38 = v28 + 5;
        BOOL v39 = *(float *)(v35 + 20) == 0.0;
        goto LABEL_278;
      }
      if (v25 <= 219)
      {
        if (v25 <= 209)
        {
          if (v25 == 190)
          {
            uint64_t v26 = CoreML::Specification::CropLayerParams::ByteSizeLong(*((CoreML::Specification::CropLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          if (v25 == 200)
          {
            uint64_t v26 = (uint64_t)CoreML::Specification::PaddingLayerParams::ByteSizeLong(*((CoreML::Specification::PaddingLayerParams **)this
                                                                                   + 16));
            goto LABEL_368;
          }
        }
        else
        {
          switch(v25)
          {
            case 210:
              uint64_t v26 = CoreML::Specification::UpsampleLayerParams::ByteSizeLong(*((CoreML::Specification::UpsampleLayerParams **)this
                                                                             + 16));
              goto LABEL_368;
            case 211:
              uint64_t v26 = CoreML::Specification::ResizeBilinearLayerParams::ByteSizeLong(*((CoreML::Specification::ResizeBilinearLayerParams **)this
                                                                                   + 16));
              goto LABEL_368;
            case 212:
              uint64_t v26 = CoreML::Specification::CropResizeLayerParams::ByteSizeLong(*((CoreML::Specification::CropResizeLayerParams **)this
                                                                               + 16));
              goto LABEL_368;
          }
        }
        goto LABEL_370;
      }
      if (v25 <= 230)
      {
        if (v25 == 220)
        {
          uint64_t v26 = CoreML::Specification::UnaryFunctionLayerParams::ByteSizeLong(*((CoreML::Specification::UnaryFunctionLayerParams **)this
                                                                              + 16));
          goto LABEL_368;
        }
        if (v25 != 230) {
          goto LABEL_370;
        }
      }
      else if (v25 != 231)
      {
        if (v25 != 240)
        {
          if (v25 == 245)
          {
            uint64_t v26 = CoreML::Specification::ScaleLayerParams::ByteSizeLong(*((CoreML::Specification::ScaleLayerParams **)this
                                                                        + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      goto LABEL_86;
    }
    if (v25 <= 329)
    {
      if (v25 <= 289)
      {
        if (v25 <= 260)
        {
          if (v25 == 250)
          {
            uint64_t v26 = CoreML::Specification::BiasLayerParams::ByteSizeLong(*((CoreML::Specification::BiasLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          if (v25 != 260) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 261)
        {
          if (v25 != 270)
          {
            if (v25 == 280)
            {
              uint64_t v26 = CoreML::Specification::ReduceLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLayerParams **)this
                                                                           + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          uint64_t v40 = *((void *)this + 16);
          uint64_t v41 = *(unsigned __int8 *)(v40 + 16);
          *(_DWORD *)(v40 + 2CoreML::Specification::DictVectorizer::New(this, 0) = 2 * v41;
          uint64_t v31 = v19 + 2 * v41;
LABEL_282:
          uint64_t v19 = v31 + 3;
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 300)
      {
        if (v25 == 290)
        {
          uint64_t v26 = CoreML::Specification::LoadConstantLayerParams::ByteSizeLong(*((CoreML::Specification::LoadConstantLayerParams **)this
                                                                             + 16));
          goto LABEL_368;
        }
        if (v25 == 300)
        {
          uint64_t v26 = CoreML::Specification::ReshapeLayerParams::ByteSizeLong(*((CoreML::Specification::ReshapeLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 != 301)
      {
        if (v25 == 310)
        {
          uint64_t v26 = CoreML::Specification::PermuteLayerParams::ByteSizeLong(*((CoreML::Specification::PermuteLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        if (v25 != 320) {
          goto LABEL_370;
        }
        uint64_t v30 = *((void *)this + 16);
        uint64_t v28 = 3;
        if (!*(unsigned char *)(v30 + 16)) {
          uint64_t v28 = 0;
        }
        goto LABEL_216;
      }
LABEL_211:
      uint64_t v30 = *((void *)this + 16);
      int v32 = *(_DWORD *)(v30 + 16);
      uint64_t v33 = 11;
      uint64_t v34 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v32 >= 0) {
        uint64_t v33 = v34;
      }
      if (v32) {
        uint64_t v28 = v33;
      }
      else {
        uint64_t v28 = 0;
      }
      goto LABEL_216;
    }
    if (v25 > 409)
    {
      if (v25 <= 429)
      {
        if (v25 == 410)
        {
          uint64_t v26 = CoreML::Specification::GRULayerParams::ByteSizeLong(*((CoreML::Specification::GRULayerParams **)this + 16));
          goto LABEL_368;
        }
        if (v25 == 420)
        {
          uint64_t v26 = CoreML::Specification::UniDirectionalLSTMLayerParams::ByteSizeLong(*((CoreML::Specification::UniDirectionalLSTMLayerParams **)this
                                                                                   + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 == 430)
      {
        uint64_t v26 = CoreML::Specification::BiDirectionalLSTMLayerParams::ByteSizeLong(*((CoreML::Specification::BiDirectionalLSTMLayerParams **)this
                                                                                + 16));
        goto LABEL_368;
      }
      if (v25 == 500)
      {
        uint64_t v26 = CoreML::Specification::CustomLayerParams::ByteSizeLong(*((CoreML::Specification::CustomLayerParams **)this
                                                                     + 16));
        goto LABEL_368;
      }
      if (v25 != 600) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 > 344)
    {
      switch(v25)
      {
        case 345:
          uint64_t v26 = CoreML::Specification::ReorganizeDataLayerParams::ByteSizeLong(*((CoreML::Specification::ReorganizeDataLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        case 350:
          uint64_t v26 = CoreML::Specification::SliceLayerParams::ByteSizeLong(*((CoreML::Specification::SliceLayerParams **)this
                                                                      + 16));
          goto LABEL_368;
        case 400:
          uint64_t v26 = CoreML::Specification::SimpleRecurrentLayerParams::ByteSizeLong(*((CoreML::Specification::SimpleRecurrentLayerParams **)this
                                                                                + 16));
          goto LABEL_368;
      }
      goto LABEL_370;
    }
    if (v25 != 330 && v25 != 340) {
      goto LABEL_370;
    }
LABEL_253:
    uint64_t v35 = *((void *)this + 16);
    uint64_t v36 = *(void *)(v35 + 16);
    unint64_t v37 = (9 * (__clz(v36 | 1) ^ 0x3F) + 73) >> 6;
    if (v36) {
      uint64_t v28 = v37 + 1;
    }
    else {
      uint64_t v28 = 0;
    }
LABEL_280:
    *(_DWORD *)(v35 + 24) = v28;
    goto LABEL_281;
  }
  if (v25 <= 1139)
  {
    if (v25 > 994)
    {
      if (v25 > 1079)
      {
        if (v25 <= 1109)
        {
          if (v25 <= 1089)
          {
            if (v25 != 1080)
            {
              if (v25 == 1085)
              {
                uint64_t v26 = CoreML::Specification::FillStaticLayerParams::ByteSizeLong(*((CoreML::Specification::FillStaticLayerParams **)this
                                                                                 + 16));
                goto LABEL_368;
              }
              goto LABEL_370;
            }
            goto LABEL_86;
          }
          if (v25 == 1090)
          {
LABEL_86:
            uint64_t v30 = *((void *)this + 16);
            uint64_t v28 = 5;
            if (*(float *)(v30 + 16) == 0.0) {
              uint64_t v28 = 0;
            }
LABEL_216:
            *(_DWORD *)(v30 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v28;
LABEL_281:
            uint64_t v31 = v19 + v28;
            goto LABEL_282;
          }
          if (v25 != 1100)
          {
            if (v25 == 1105)
            {
              uint64_t v26 = CoreML::Specification::BroadcastToStaticLayerParams::ByteSizeLong(*((CoreML::Specification::BroadcastToStaticLayerParams **)this
                                                                                      + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
LABEL_331:
          *(_DWORD *)(*((void *)this + 16) + 16) = 0;
          v19 += 3;
          goto LABEL_370;
        }
        if (v25 <= 1124)
        {
          if (v25 != 1110)
          {
            if (v25 == 1120)
            {
              uint64_t v26 = CoreML::Specification::SqueezeLayerParams::ByteSizeLong(*((CoreML::Specification::SqueezeLayerParams **)this
                                                                            + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 == 1125)
        {
          uint64_t v26 = CoreML::Specification::ExpandDimsLayerParams::ByteSizeLong(*((CoreML::Specification::ExpandDimsLayerParams **)this
                                                                           + 16));
          goto LABEL_368;
        }
        if (v25 != 1130)
        {
          if (v25 != 1135) {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        goto LABEL_253;
      }
      if (v25 > 1024)
      {
        if (v25 > 1044)
        {
          if (v25 == 1045)
          {
            uint64_t v26 = CoreML::Specification::BatchedMatMulLayerParams::ByteSizeLong(*((CoreML::Specification::BatchedMatMulLayerParams **)this
                                                                                + 16));
            goto LABEL_368;
          }
          if (v25 != 1065)
          {
            if (v25 == 1070)
            {
              uint64_t v26 = CoreML::Specification::LoadConstantNDLayerParams::ByteSizeLong(*((CoreML::Specification::LoadConstantNDLayerParams **)this
                                                                                   + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 1025)
        {
          if (v25 == 1040)
          {
            uint64_t v26 = CoreML::Specification::EmbeddingNDLayerParams::ByteSizeLong(*((CoreML::Specification::EmbeddingNDLayerParams **)this
                                                                              + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
      }
      else
      {
        if (v25 <= 1004)
        {
          if (v25 == 995)
          {
            uint64_t v26 = CoreML::Specification::SliceStaticLayerParams::ByteSizeLong(*((CoreML::Specification::SliceStaticLayerParams **)this
                                                                              + 16));
            goto LABEL_368;
          }
          if (v25 == 1000)
          {
            uint64_t v26 = CoreML::Specification::SliceDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::SliceDynamicLayerParams **)this
                                                                               + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        if (v25 == 1005)
        {
          uint64_t v26 = CoreML::Specification::SlidingWindowsLayerParams::ByteSizeLong(*((CoreML::Specification::SlidingWindowsLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        }
        if (v25 == 1015)
        {
          uint64_t v26 = CoreML::Specification::TopKLayerParams::ByteSizeLong(*((CoreML::Specification::TopKLayerParams **)this
                                                                     + 16));
          goto LABEL_368;
        }
        if (v25 != 1020) {
          goto LABEL_370;
        }
      }
      goto LABEL_82;
    }
    if (v25 <= 939)
    {
      if (v25 <= 904)
      {
        if (v25 <= 889)
        {
          if (v25 != 880 && v25 != 885) {
            goto LABEL_370;
          }
        }
        else if (v25 != 890 && v25 != 895 && v25 != 900)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 924)
      {
        if (v25 != 905)
        {
          if (v25 == 920)
          {
            uint64_t v26 = CoreML::Specification::TileLayerParams::ByteSizeLong(*((CoreML::Specification::TileLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 != 925 && v25 != 930)
      {
        if (v25 == 935)
        {
          uint64_t v26 = CoreML::Specification::ScatterLayerParams::ByteSizeLong(*((CoreML::Specification::ScatterLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      goto LABEL_253;
    }
    if (v25 <= 959)
    {
      switch(v25)
      {
        case 945:
          goto LABEL_211;
        case 946:
        case 947:
        case 948:
        case 949:
        case 951:
        case 953:
          goto LABEL_370;
        case 950:
        case 952:
          goto LABEL_253;
        case 954:
          uint64_t v26 = CoreML::Specification::ScatterAlongAxisLayerParams::ByteSizeLong(*((CoreML::Specification::ScatterAlongAxisLayerParams **)this
                                                                                 + 16));
          goto LABEL_368;
        default:
          if (v25 == 940) {
            goto LABEL_331;
          }
          break;
      }
      goto LABEL_370;
    }
    if (v25 > 974)
    {
      if (v25 == 975)
      {
        uint64_t v26 = CoreML::Specification::SplitNDLayerParams::ByteSizeLong(*((CoreML::Specification::SplitNDLayerParams **)this
                                                                      + 16));
        goto LABEL_368;
      }
      if (v25 != 980)
      {
        if (v25 == 985)
        {
          uint64_t v26 = CoreML::Specification::TransposeLayerParams::ByteSizeLong(*((CoreML::Specification::TransposeLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
LABEL_82:
      unint64_t v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ConcatNDLayerParams>(*((void *)this + 16));
      goto LABEL_365;
    }
    if (v25 != 960)
    {
      if (v25 == 965)
      {
        uint64_t v26 = CoreML::Specification::ReverseSeqLayerParams::ByteSizeLong(*((CoreML::Specification::ReverseSeqLayerParams **)this
                                                                         + 16));
        goto LABEL_368;
      }
      goto LABEL_370;
    }
    unint64_t v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ReverseLayerParams>(*((unsigned int **)this + 16));
LABEL_365:
    uint64_t v42 = v19 + v29;
LABEL_369:
    uint64_t v19 = v42 + 2;
    goto LABEL_370;
  }
  if (v25 <= 1274)
  {
    if (v25 <= 1199)
    {
      if (v25 > 1169)
      {
        if (v25 <= 1179)
        {
          if (v25 == 1170)
          {
            uint64_t v26 = CoreML::Specification::RandomNormalLikeLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalLikeLayerParams **)this
                                                                                   + 16));
            goto LABEL_368;
          }
          if (v25 == 1175)
          {
            uint64_t v26 = CoreML::Specification::RandomNormalStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalStaticLayerParams **)this
                                                                                     + 16));
            goto LABEL_368;
          }
        }
        else
        {
          switch(v25)
          {
            case 1180:
              uint64_t v26 = CoreML::Specification::RandomNormalDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalDynamicLayerParams **)this
                                                                                        + 16));
              goto LABEL_368;
            case 1190:
              uint64_t v26 = CoreML::Specification::RandomUniformLikeLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformLikeLayerParams **)this
                                                                                      + 16));
              goto LABEL_368;
            case 1195:
              uint64_t v26 = CoreML::Specification::RandomUniformStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformStaticLayerParams **)this
                                                                                        + 16));
              goto LABEL_368;
          }
        }
        goto LABEL_370;
      }
      if (v25 > 1149)
      {
        if (v25 == 1150)
        {
          uint64_t v26 = CoreML::Specification::RankPreservingReshapeLayerParams::ByteSizeLong(*((CoreML::Specification::RankPreservingReshapeLayerParams **)this
                                                                                      + 16));
          goto LABEL_368;
        }
        if (v25 == 1155)
        {
          uint64_t v26 = CoreML::Specification::ConstantPaddingLayerParams::ByteSizeLong(*((CoreML::Specification::ConstantPaddingLayerParams **)this
                                                                                + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 == 1140)
      {
        uint64_t v26 = CoreML::Specification::ReshapeStaticLayerParams::ByteSizeLong(*((CoreML::Specification::ReshapeStaticLayerParams **)this
                                                                            + 16));
        goto LABEL_368;
      }
      if (v25 != 1145) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 > 1249)
    {
      if (v25 <= 1259)
      {
        if (v25 == 1250)
        {
          uint64_t v26 = CoreML::Specification::ReduceL1LayerParams::ByteSizeLong(*((CoreML::Specification::ReduceL1LayerParams **)this
                                                                         + 16));
          goto LABEL_368;
        }
        if (v25 == 1255)
        {
          uint64_t v26 = CoreML::Specification::ReduceL2LayerParams::ByteSizeLong(*((CoreML::Specification::ReduceL2LayerParams **)this
                                                                         + 16));
          goto LABEL_368;
        }
      }
      else
      {
        switch(v25)
        {
          case 1260:
            uint64_t v26 = CoreML::Specification::ReduceMaxLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMaxLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
          case 1265:
            uint64_t v26 = CoreML::Specification::ReduceMinLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMinLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
          case 1270:
            uint64_t v26 = CoreML::Specification::ReduceSumLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceSumLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
        }
      }
      goto LABEL_370;
    }
    if (v25 <= 1214)
    {
      if (v25 == 1200)
      {
        uint64_t v26 = CoreML::Specification::RandomUniformDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformDynamicLayerParams **)this
                                                                                   + 16));
        goto LABEL_368;
      }
      if (v25 != 1210) {
        goto LABEL_370;
      }
    }
    else
    {
      if (v25 == 1215)
      {
        uint64_t v26 = CoreML::Specification::RandomBernoulliStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomBernoulliStaticLayerParams **)this
                                                                                    + 16));
        goto LABEL_368;
      }
      if (v25 != 1220)
      {
        if (v25 == 1230)
        {
          uint64_t v26 = CoreML::Specification::CategoricalDistributionLayerParams::ByteSizeLong(*((CoreML::Specification::CategoricalDistributionLayerParams **)this
                                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
    }
    unint64_t v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::RandomBernoulliLikeLayerParams>(*((void *)this + 16));
    goto LABEL_365;
  }
  if (v25 > 1349)
  {
    if (v25 <= 1454)
    {
      switch(v25)
      {
        case 1350:
          uint64_t v26 = CoreML::Specification::LayerNormalizationLayerParams::ByteSizeLong(*((CoreML::Specification::LayerNormalizationLayerParams **)this
                                                                                   + 16));
          goto LABEL_368;
        case 1400:
          uint64_t v26 = CoreML::Specification::NonMaximumSuppressionLayerParams::ByteSizeLong(*((CoreML::Specification::NonMaximumSuppressionLayerParams **)this
                                                                                      + 16));
          goto LABEL_368;
        case 1450:
          uint64_t v26 = CoreML::Specification::OneHotLayerParams::ByteSizeLong(*((CoreML::Specification::OneHotLayerParams **)this
                                                                       + 16));
          goto LABEL_368;
      }
    }
    else
    {
      switch(v25)
      {
        case 1455:
          uint64_t v31 = v19
              + CoreML::Specification::CumSumLayerParams::ByteSizeLong(*((CoreML::Specification::CumSumLayerParams **)this
                                                                       + 16));
          goto LABEL_282;
        case 1460:
          goto LABEL_275;
        case 1461:
          goto LABEL_82;
        case 1465:
          uint64_t v26 = CoreML::Specification::Pooling3DLayerParams::ByteSizeLong(*((CoreML::Specification::Pooling3DLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        case 1466:
          goto LABEL_211;
        case 1470:
          uint64_t v26 = CoreML::Specification::SliceBySizeLayerParams::ByteSizeLong(*((CoreML::Specification::SliceBySizeLayerParams **)this
                                                                            + 16));
          goto LABEL_368;
        case 1471:
          uint64_t v26 = CoreML::Specification::Convolution3DLayerParams::ByteSizeLong(*((CoreML::Specification::Convolution3DLayerParams **)this
                                                                              + 16));
          goto LABEL_368;
        default:
          goto LABEL_370;
      }
    }
    goto LABEL_370;
  }
  if (v25 > 1312)
  {
    if (v25 <= 1319)
    {
      if (v25 != 1313)
      {
        if (v25 == 1315)
        {
          uint64_t v26 = CoreML::Specification::MatrixBandPartLayerParams::ByteSizeLong(*((CoreML::Specification::MatrixBandPartLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 != 1320 && v25 != 1325)
    {
      if (v25 != 1330) {
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    goto LABEL_253;
  }
  if (v25 <= 1284)
  {
    if (v25 == 1275)
    {
      uint64_t v26 = CoreML::Specification::ReduceProdLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceProdLayerParams **)this
                                                                       + 16));
      goto LABEL_368;
    }
    if (v25 == 1280)
    {
      uint64_t v26 = CoreML::Specification::ReduceMeanLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMeanLayerParams **)this
                                                                       + 16));
      goto LABEL_368;
    }
  }
  else
  {
    switch(v25)
    {
      case 1285:
        uint64_t v26 = CoreML::Specification::ReduceLogSumLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLogSumLayerParams **)this
                                                                           + 16));
        goto LABEL_368;
      case 1290:
        uint64_t v26 = CoreML::Specification::ReduceSumSquareLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceSumSquareLayerParams **)this
                                                                              + 16));
        goto LABEL_368;
      case 1295:
        uint64_t v26 = CoreML::Specification::ReduceLogSumExpLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLogSumExpLayerParams **)this
                                                                              + 16));
        goto LABEL_368;
    }
  }
LABEL_370:
  *((_DWORD *)this + 34) = v19;
  return v19;
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 11)
  {
    signed int v10 = (unsigned int *)*((void *)this + 3);
    uint64_t v11 = v10[4];
    uint64_t v12 = 4 * v11;
    if (v11)
    {
      if ((v12 & 0x80000000) != 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v14 = v13 + v12;
    v10[8] = v12;
    v10[9] = v14;
    uint64_t v8 = (9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v9 = v4 + v14;
LABEL_27:
    uint64_t v4 = v9 + v8 + 1;
    goto LABEL_28;
  }
  if (v5 == 10)
  {
    uint64_t v6 = *((void *)this + 3);
    uint64_t v7 = 6;
    if (*(float *)(v6 + 16) == 0.0) {
      uint64_t v7 = 0;
    }
    if (*(float *)(v6 + 20) != 0.0) {
      v7 += 5;
    }
    if (*(float *)(v6 + 24) != 0.0) {
      v7 += 6;
    }
    if (*(float *)(v6 + 28) != 0.0) {
      v7 += 6;
    }
    if (*(float *)(v6 + 32) != 0.0) {
      v7 += 6;
    }
    *(_DWORD *)(v6 + 36) = v7;
    uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v9 = v4 + v7;
    goto LABEL_27;
  }
LABEL_28:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(CoreML::Specification::NetworkUpdateParameters *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::LossLayer::ByteSizeLong(*(CoreML::Specification::LossLayer **)(*((void *)this + 4)
                                                                                               + 8 * v3
                                                                                               + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::Optimizer *)*((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::Optimizer::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v8 = (CoreML::Specification::Int64Parameter *)*((void *)this + 6);
    if (v8)
    {
      unint64_t v9 = CoreML::Specification::Int64Parameter::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v10 = *((void *)this + 7);
    if (v10)
    {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 16);
      *(_DWORD *)(v10 + 2CoreML::Specification::DictVectorizer::New(this, 0) = 2 * v11;
      v4 += 2 * v11 + 2;
    }
    uint64_t v12 = (CoreML::Specification::Int64Parameter *)*((void *)this + 8);
    if (v12)
    {
      unint64_t v13 = CoreML::Specification::Int64Parameter::ByteSizeLong(v12);
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  *((_DWORD *)this + 18) = v4;
  return v4;
}

uint64_t CoreML::Specification::LossLayer::ByteSizeLong(CoreML::Specification::LossLayer *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  int v6 = *((_DWORD *)this + 9);
  if (v6 == 11)
  {
    uint64_t v7 = CoreML::Specification::MeanSquaredErrorLossLayer::ByteSizeLong(*((CoreML::Specification::MeanSquaredErrorLossLayer **)this
                                                                        + 3));
    goto LABEL_12;
  }
  if (v6 == 10)
  {
    uint64_t v7 = CoreML::Specification::CategoricalCrossEntropyLossLayer::ByteSizeLong(*((CoreML::Specification::CategoricalCrossEntropyLossLayer **)this
                                                                               + 3));
LABEL_12:
    v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v5;
  return v5;
}

uint64_t CoreML::Specification::Optimizer::ByteSizeLong(CoreML::Specification::Optimizer *this)
{
  int v2 = *((_DWORD *)this + 7);
  if (v2 == 11)
  {
    uint64_t v3 = CoreML::Specification::AdamOptimizer::ByteSizeLong(*((CoreML::Specification::AdamOptimizer **)this + 2));
  }
  else
  {
    if (v2 != 10)
    {
      uint64_t result = 0;
      goto LABEL_7;
    }
    uint64_t v3 = CoreML::Specification::SGDOptimizer::ByteSizeLong(*((CoreML::Specification::SGDOptimizer **)this + 2));
  }
  uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_7:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::SGDOptimizer::ByteSizeLong(CoreML::Specification::SGDOptimizer *this)
{
  if (this == (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    int v2 = (CoreML::Specification::DoubleParameter *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::DoubleParameter::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::Int64Parameter *)*((void *)this + 3);
    if (v5)
    {
      unint64_t v6 = CoreML::Specification::Int64Parameter::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v7 = (CoreML::Specification::DoubleParameter *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::DoubleParameter::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::AdamOptimizer::ByteSizeLong(CoreML::Specification::AdamOptimizer *this)
{
  if (this == (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    int v2 = (CoreML::Specification::DoubleParameter *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::DoubleParameter::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::Int64Parameter *)*((void *)this + 3);
    if (v5)
    {
      unint64_t v6 = CoreML::Specification::Int64Parameter::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v7 = (CoreML::Specification::DoubleParameter *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::DoubleParameter::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    unint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::DoubleParameter::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v11 = (CoreML::Specification::DoubleParameter *)*((void *)this + 6);
    if (v11)
    {
      uint64_t v12 = CoreML::Specification::DoubleParameter::ByteSizeLong(v11);
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 14) = v4;
  return v4;
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::ByteSizeLong(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::ByteSizeLong(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Tensor::ByteSizeLong(CoreML::Specification::Tensor *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  int v7 = *((_DWORD *)this + 9);
  if (v7) {
    v6 += ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::ByteSizeLong(CoreML::Specification::ConvolutionLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 10;
  }
  else {
    uint64_t v6 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
  }
  uint64_t v7 = v6 + 2;
LABEL_11:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v7 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 10;
      }
      else {
        uint64_t v13 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v8 += v13 + 2;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  uint64_t v15 = *((unsigned int *)this + 16);
  if ((int)v15 < 1)
  {
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = (uint64_t *)(*((void *)this + 9) + 8);
    do
    {
      uint64_t v18 = *v17++;
      v16 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
      --v15;
    }
    while (v15);
    if (v16)
    {
      if ((v16 & 0x80000000) != 0) {
        uint64_t v19 = 12;
      }
      else {
        uint64_t v19 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v14 += v19;
    }
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = v16;
  uint64_t v20 = v14 + v16;
  uint64_t v21 = *((unsigned int *)this + 22);
  if ((int)v21 < 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v23 = (uint64_t *)(*((void *)this + 12) + 8);
    do
    {
      uint64_t v24 = *v23++;
      v22 += (9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6;
      --v21;
    }
    while (v21);
    if (v22)
    {
      if ((v22 & 0x80000000) != 0) {
        uint64_t v25 = 12;
      }
      else {
        uint64_t v25 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v20 += v25;
    }
  }
  *((_DWORD *)this + 26) = v22;
  uint64_t v26 = v20 + v22;
  if (this != (CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    uint64_t v27 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
    if (v27)
    {
      uint64_t v28 = CoreML::Specification::WeightParams::ByteSizeLong(v27);
      v26 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v29 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
    if (v29)
    {
      uint64_t v30 = CoreML::Specification::WeightParams::ByteSizeLong(v29);
      v26 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v31 = *((void *)this + 16);
  if (v31) {
    v26 += ((9 * (__clz(v31 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v32 = *((void *)this + 17);
  if (v32) {
    v26 += ((9 * (__clz(v32 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v33 = *((void *)this + 18);
  if (v33) {
    v26 += ((9 * (__clz(v33 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 152)) {
    uint64_t v34 = v26 + 3;
  }
  else {
    uint64_t v34 = v26;
  }
  if (*((unsigned char *)this + 153)) {
    uint64_t v35 = v34 + 3;
  }
  else {
    uint64_t v35 = v34;
  }
  int v36 = *((_DWORD *)this + 43);
  if (v36 == 51)
  {
    uint64_t v38 = *((void *)this + 20);
    int v39 = *(_DWORD *)(v38 + 16);
    if (v39)
    {
      if (v39 < 0) {
        uint64_t v40 = 11;
      }
      else {
        uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v40 = 0;
    }
    *(_DWORD *)(v38 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v40;
    v35 += v40 + 3;
  }
  else if (v36 == 50)
  {
    unint64_t v37 = CoreML::Specification::ValidPadding::ByteSizeLong(*((CoreML::Specification::ValidPadding **)this + 20));
    v35 += (uint64_t)v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 42) = v35;
  return v35;
}

uint64_t CoreML::Specification::PoolingLayerParams::ByteSizeLong(CoreML::Specification::PoolingLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_9:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0) {
    uint64_t v6 = v7;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v6 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 12;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v8 += v13;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  int v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v14 += v16;
  }
  if (*((unsigned char *)this + 64)) {
    v14 += 3;
  }
  if (*((unsigned char *)this + 65)) {
    uint64_t v17 = v14 + 3;
  }
  else {
    uint64_t v17 = v14;
  }
  int v18 = *((_DWORD *)this + 21);
  switch(v18)
  {
    case 32:
      uint64_t v19 = (CoreML::Specification::BorderAmounts *)CoreML::Specification::PoolingLayerParams_ValidCompletePadding::ByteSizeLong(*((CoreML::Specification::PoolingLayerParams_ValidCompletePadding **)this + 9));
      goto LABEL_34;
    case 31:
      uint64_t v20 = *((void *)this + 9);
      int v21 = *(_DWORD *)(v20 + 16);
      if (v21)
      {
        if (v21 < 0) {
          uint64_t v22 = 11;
        }
        else {
          uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v22 = 0;
      }
      *(_DWORD *)(v20 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v22;
      v17 += v22 + 3;
      break;
    case 30:
      uint64_t v19 = CoreML::Specification::ValidPadding::ByteSizeLong(*((CoreML::Specification::ValidPadding **)this + 9));
LABEL_34:
      v17 += (uint64_t)v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
      break;
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = v17;
  return v17;
}

uint64_t CoreML::Specification::ActivationParams::ByteSizeLong(CoreML::Specification::ActivationParams *this)
{
  uint64_t result = 0;
  int v3 = *((_DWORD *)this + 7);
  if (v3 <= 30)
  {
    if (v3 <= 19)
    {
      switch(v3)
      {
        case 5:
          uint64_t v10 = *((void *)this + 2);
          uint64_t v11 = 5;
          if (*(float *)(v10 + 16) == 0.0) {
            uint64_t v11 = 0;
          }
          if (*(float *)(v10 + 20) != 0.0) {
            v11 += 5;
          }
          *(_DWORD *)(v10 + 24) = v11;
          uint64_t result = v11 + 2;
          break;
        case 10:
          *(_DWORD *)(*((void *)this + 2) + 16) = 0;
          uint64_t result = 2;
          break;
        case 15:
          uint64_t v4 = *((void *)this + 2);
          uint64_t v5 = 5;
          if (*(float *)(v4 + 16) == 0.0) {
            uint64_t v5 = 0;
          }
          *(_DWORD *)(v4 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v5;
          uint64_t result = v5 | 2;
          break;
      }
      goto LABEL_42;
    }
    if (v3 == 20)
    {
LABEL_30:
      uint64_t v9 = *((void *)this + 2);
      uint64_t v7 = 5;
      if (*(float *)(v9 + 16) == 0.0) {
        uint64_t v7 = 0;
      }
      *(_DWORD *)(v9 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v7;
LABEL_33:
      uint64_t result = v7 + 3;
      goto LABEL_42;
    }
    if (v3 == 25)
    {
      uint64_t v8 = CoreML::Specification::ActivationPReLU::ByteSizeLong(*((CoreML::Specification::ActivationPReLU **)this + 2));
      goto LABEL_41;
    }
    if (v3 != 30) {
      goto LABEL_42;
    }
    goto LABEL_29;
  }
  if (v3 <= 49)
  {
    if (v3 != 31)
    {
      if (v3 == 40) {
        goto LABEL_29;
      }
      if (v3 != 41) {
        goto LABEL_42;
      }
    }
    uint64_t v6 = *((void *)this + 2);
    uint64_t v7 = 5;
    if (*(float *)(v6 + 16) == 0.0) {
      uint64_t v7 = 0;
    }
    if (*(float *)(v6 + 20) != 0.0) {
      v7 += 5;
    }
    *(_DWORD *)(v6 + 24) = v7;
    goto LABEL_33;
  }
  if (v3 <= 69)
  {
    if (v3 != 50)
    {
      if (v3 != 60) {
        goto LABEL_42;
      }
      goto LABEL_29;
    }
    goto LABEL_30;
  }
  if (v3 == 70)
  {
LABEL_29:
    *(_DWORD *)(*((void *)this + 2) + 16) = 0;
    uint64_t result = 3;
    goto LABEL_42;
  }
  if (v3 == 71)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)CoreML::Specification::ActivationParametricSoftplus::ByteSizeLong(*((CoreML::Specification::ActivationParametricSoftplus **)this + 2));
LABEL_41:
    uint64_t result = (uint64_t)v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_42:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::InnerProductLayerParams::ByteSizeLong(CoreML::Specification::InnerProductLayerParams *this)
{
  if (this == (CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t v9 = v4 + 2;
  }
  else {
    uint64_t v9 = v4;
  }
  if (*((unsigned char *)this + 49)) {
    uint64_t result = v9 + 3;
  }
  else {
    uint64_t result = v9;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::EmbeddingLayerParams::ByteSizeLong(CoreML::Specification::EmbeddingLayerParams *this)
{
  if (this == (CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::BatchnormLayerParams::ByteSizeLong(CoreML::Specification::BatchnormLayerParams *this)
{
  if (this == (CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v7 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v11 = *((void *)this + 6);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 56)) {
    uint64_t v12 = v4 + 2;
  }
  else {
    uint64_t v12 = v4;
  }
  if (*((unsigned char *)this + 57)) {
    v12 += 2;
  }
  if (*((float *)this + 15) == 0.0) {
    uint64_t result = v12;
  }
  else {
    uint64_t result = v12 + 5;
  }
  *((_DWORD *)this + 16) = result;
  return result;
}

uint64_t CoreML::Specification::LRNLayerParams::ByteSizeLong(CoreML::Specification::LRNLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = v1 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    uint64_t v1 = v3 + 1;
  }
  if (*((float *)this + 8) != 0.0) {
    v1 += 5;
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

uint64_t CoreML::Specification::CropLayerParams::ByteSizeLong(CoreML::Specification::CropLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::BorderAmounts *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::BorderAmounts::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

CoreML::Specification::BorderAmounts *CoreML::Specification::PaddingLayerParams::ByteSizeLong(CoreML::Specification::PaddingLayerParams *this)
{
  if (this == (CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::BorderAmounts::ByteSizeLong(result);
      uint64_t result = (CoreML::Specification::BorderAmounts *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  int v4 = *((_DWORD *)this + 9);
  if (v4 == 3 || v4 == 2)
  {
    *(_DWORD *)(*((void *)this + 3) + 16) = 0;
    uint64_t result = (CoreML::Specification::BorderAmounts *)((char *)result + 2);
  }
  else if (v4 == 1)
  {
    uint64_t v5 = *((void *)this + 3);
    uint64_t v6 = 5;
    if (*(float *)(v5 + 16) == 0.0) {
      uint64_t v6 = 0;
    }
    *(_DWORD *)(v5 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v6;
    uint64_t result = (CoreML::Specification::BorderAmounts *)((char *)result + v6 + 2);
  }
  *((_DWORD *)this + 8) = result;
  return result;
}

uint64_t CoreML::Specification::UpsampleLayerParams::ByteSizeLong(CoreML::Specification::UpsampleLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((unsigned int *)this + 10);
  uint64_t v8 = 4 * v7;
  if (v7)
  {
    if ((v8 & 0x80000000) != 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v9;
  }
  *((_DWORD *)this + 14) = v8;
  uint64_t v10 = v6 + v8;
  int v11 = *((_DWORD *)this + 15);
  if (v11)
  {
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 += v12;
  }
  int v13 = *((_DWORD *)this + 16);
  if (v13)
  {
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 += v14;
  }
  *((_DWORD *)this + 17) = v10;
  return v10;
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::ByteSizeLong(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_)
  {
    uint64_t v7 = *((void *)this + 5);
    if (v7)
    {
      int v8 = *(_DWORD *)(v7 + 16);
      if (v8)
      {
        if (v8 < 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      *(_DWORD *)(v7 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v9;
      v6 += v9 + 2;
    }
  }
  *((_DWORD *)this + 12) = v6;
  return v6;
}

uint64_t CoreML::Specification::CropResizeLayerParams::ByteSizeLong(CoreML::Specification::CropResizeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (this != (CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    uint64_t v7 = *((void *)this + 5);
    if (v7)
    {
      int v8 = *(_DWORD *)(v7 + 16);
      if (v8)
      {
        if (v8 < 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      *(_DWORD *)(v7 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v9;
      v6 += v9 + 2;
    }
    uint64_t v10 = *((void *)this + 6);
    if (v10)
    {
      int v11 = *(_DWORD *)(v10 + 16);
      if (v11)
      {
        if (v11 < 0) {
          uint64_t v12 = 11;
        }
        else {
          uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v12 = 0;
      }
      *(_DWORD *)(v10 + 2CoreML::Specification::DictVectorizer::New(this, 0) = v12;
      v6 += v12 + 2;
    }
  }
  if (*((unsigned char *)this + 56)) {
    v6 += 2;
  }
  if (*((float *)this + 15) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 16) = v6;
  return v6;
}

uint64_t CoreML::Specification::UnaryFunctionLayerParams::ByteSizeLong(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v1 >= 0) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 11;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 8) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 9) = v3;
  return v3;
}

uint64_t CoreML::Specification::ScaleLayerParams::ByteSizeLong(CoreML::Specification::ScaleLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_9:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0) {
    uint64_t v6 = v7;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v6 + v3;
  uint64_t v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    int v11 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v8 += v13;
    }
  }
  *((_DWORD *)this + 14) = v10;
  uint64_t v14 = v8 + v10;
  if (this != (CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    int v15 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
    if (v15)
    {
      uint64_t v16 = CoreML::Specification::WeightParams::ByteSizeLong(v15);
      v14 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v17 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
    if (v17)
    {
      uint64_t v18 = CoreML::Specification::WeightParams::ByteSizeLong(v17);
      v14 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((unsigned char *)this + 80)) {
    uint64_t result = v14 + 2;
  }
  else {
    uint64_t result = v14;
  }
  *((_DWORD *)this + 21) = result;
  return result;
}

uint64_t CoreML::Specification::BiasLayerParams::ByteSizeLong(CoreML::Specification::BiasLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::ReduceLayerParams::ByteSizeLong(CoreML::Specification::ReduceLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  uint64_t v2 = 11;
  uint64_t v3 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v1 >= 0) {
    uint64_t v2 = v3;
  }
  if (v1) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v4 += 5;
  }
  int v5 = *((_DWORD *)this + 6);
  uint64_t v6 = 11;
  uint64_t v7 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v5 >= 0) {
    uint64_t v6 = v7;
  }
  uint64_t v8 = v6 + v4;
  if (v5) {
    uint64_t v4 = v8;
  }
  *((_DWORD *)this + 7) = v4;
  return v4;
}

uint64_t CoreML::Specification::LoadConstantLayerParams::ByteSizeLong(CoreML::Specification::LoadConstantLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::ReshapeLayerParams::ByteSizeLong(CoreML::Specification::ReshapeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  int v7 = *((_DWORD *)this + 9);
  if (v7)
  {
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v8;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::PermuteLayerParams::ByteSizeLong(CoreML::Specification::PermuteLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

unint64_t CoreML::Specification::ReorganizeDataLayerParams::ByteSizeLong(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

unint64_t CoreML::Specification::SliceLayerParams::ByteSizeLong(CoreML::Specification::SliceLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  uint64_t v6 = *((void *)this + 4);
  unint64_t v7 = v4 + ((9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6);
  if (v6) {
    unint64_t v4 = v7 + 1;
  }
  int v8 = *((_DWORD *)this + 10);
  if (v8)
  {
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v9;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::ByteSizeLong(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  if (this == (CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::ActivationParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::ActivationParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    unint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    unint64_t v7 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
    if (v7)
    {
      uint64_t v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v11 = *((void *)this + 6);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v12 = *((void *)this + 7);
  if (v12) {
    v4 += ((9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 64)) {
    uint64_t v13 = v4 + 2;
  }
  else {
    uint64_t v13 = v4;
  }
  if (*((unsigned char *)this + 65)) {
    v13 += 3;
  }
  if (*((unsigned char *)this + 66)) {
    uint64_t result = v13 + 3;
  }
  else {
    uint64_t result = v13;
  }
  *((_DWORD *)this + 17) = result;
  return result;
}

uint64_t CoreML::Specification::GRULayerParams::ByteSizeLong(CoreML::Specification::GRULayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (this != (CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::WeightParams::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v10 = (CoreML::Specification::WeightParams *)*((void *)this + 7);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::WeightParams::ByteSizeLong(v10);
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
    if (v12)
    {
      uint64_t v13 = CoreML::Specification::WeightParams::ByteSizeLong(v12);
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v14 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
    if (v14)
    {
      uint64_t v15 = CoreML::Specification::WeightParams::ByteSizeLong(v14);
      v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v16 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
    if (v16)
    {
      uint64_t v17 = CoreML::Specification::WeightParams::ByteSizeLong(v16);
      v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v18 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
    if (v18)
    {
      uint64_t v19 = CoreML::Specification::WeightParams::ByteSizeLong(v18);
      v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v20 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
    if (v20)
    {
      uint64_t v21 = CoreML::Specification::WeightParams::ByteSizeLong(v20);
      v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v22 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
    if (v22)
    {
      uint64_t v23 = CoreML::Specification::WeightParams::ByteSizeLong(v22);
      v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    v4 += ((9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v25 = *((void *)this + 15);
  if (v25) {
    v4 += ((9 * (__clz(v25 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 128)) {
    uint64_t v26 = v4 + 2;
  }
  else {
    uint64_t v26 = v4;
  }
  if (*((unsigned char *)this + 129)) {
    v26 += 3;
  }
  if (*((unsigned char *)this + 130)) {
    uint64_t result = v26 + 3;
  }
  else {
    uint64_t result = v26;
  }
  *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::ByteSizeLong(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (this != (CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::LSTMParams *)*((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::LSTMParams::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v8 = (CoreML::Specification::LSTMWeightParams *)*((void *)this + 6);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::LSTMWeightParams::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v10 = *((void *)this + 7);
  if (v10) {
    v4 += ((9 * (__clz(v10 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *((void *)this + 8);
  if (v11) {
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 72)) {
    uint64_t result = v4 + 3;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 19) = result;
  return result;
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::ByteSizeLong(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  uint64_t v10 = *((unsigned int *)this + 18);
  uint64_t v11 = v7 + 2 * v10;
  if (v10)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = CoreML::Specification::LSTMWeightParams::ByteSizeLong(*(CoreML::Specification::LSTMWeightParams **)(*((void *)this + 10) + 8 * v12 + 8));
      v11 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      ++v12;
    }
    while (v10 != v12);
  }
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_)
  {
    uint64_t v14 = (CoreML::Specification::LSTMParams *)*((void *)this + 11);
    if (v14)
    {
      uint64_t v15 = CoreML::Specification::LSTMParams::ByteSizeLong(v14);
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v16 = *((void *)this + 12);
  uint64_t v17 = *((void *)this + 13);
  BOOL v18 = v16 == 0;
  unint64_t v19 = v11 + ((9 * (__clz(v16 | 1) ^ 0x3F) + 73) >> 6);
  if (v18) {
    uint64_t v20 = v11;
  }
  else {
    uint64_t v20 = v19 + 1;
  }
  unint64_t v21 = v20 + ((9 * (__clz(v17 | 1) ^ 0x3F) + 73) >> 6);
  if (v17) {
    uint64_t result = v21 + 1;
  }
  else {
    uint64_t result = v20;
  }
  *((_DWORD *)this + 28) = result;
  return result;
}

uint64_t CoreML::Specification::CustomLayerParams::ByteSizeLong(CoreML::Specification::CustomLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  uint64_t v3 = 2 * v2;
  if (v2)
  {
    int v4 = 0;
    do
    {
      uint64_t v5 = CoreML::Specification::WeightParams::ByteSizeLong(*(CoreML::Specification::WeightParams **)(*((void *)this + 4) + 8 * v4 + 8));
      v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v4;
    }
    while (v2 != v4);
  }
  uint64_t v6 = (uint64_t *)*((void *)this + 8);
  uint64_t v7 = *v6;
  google::protobuf::Map<std::string,std::string>::begin(v19, v6);
  int v8 = 0;
  uint64_t v9 = 2 * v7 + v3;
  while (v19[0])
  {
    uint64_t v10 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v19[0] + 3), (google::protobuf::Arena *)(*((void *)v19[0] + 3) + 24), *((google::protobuf::Arena **)this + 5));
    if (v8 != v10)
    {
      if (v8) {
        (*((void (**)(google::protobuf::Arena **))*v8 + 1))(v8);
      }
      int v8 = v10;
    }
    uint64_t v11 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v8);
    v9 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v19);
  }
  if (v8) {
    (*((void (**)(google::protobuf::Arena **))*v8 + 1))(v8);
  }
  uint64_t v12 = *((void *)this + 9);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_18;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_18;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_18:
  uint64_t v15 = *((void *)this + 10);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  *((_DWORD *)this + 22) = v9;
  return v9;
}

void sub_1DC0E43C0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::BranchLayerParams::ByteSizeLong(CoreML::Specification::BranchLayerParams *this)
{
  if (this == (CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LoopLayerParams::ByteSizeLong(CoreML::Specification::LoopLayerParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v6);
      v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    int v8 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 4);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v8);
      v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *((void *)this + 5);
  if (v10) {
    v5 += ((9 * (__clz(v10 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

uint64_t CoreML::Specification::TileLayerParams::ByteSizeLong(CoreML::Specification::TileLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

unint64_t CoreML::Specification::ScatterLayerParams::ByteSizeLong(CoreML::Specification::ScatterLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

unint64_t CoreML::Specification::ScatterAlongAxisLayerParams::ByteSizeLong(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ReverseLayerParams>(unsigned int *a1)
{
  uint64_t v1 = a1[4];
  if (v1)
  {
    if ((v1 & 0x80000000) != 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 + v1;
  a1[8] = v1;
  a1[9] = v3;
  return v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
}

unint64_t CoreML::Specification::ReverseSeqLayerParams::ByteSizeLong(CoreML::Specification::ReverseSeqLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::SplitNDLayerParams::ByteSizeLong(CoreML::Specification::SplitNDLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  if (v7) {
    v6 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 6);
  if (v8) {
    v6 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 14) = v6;
  return v6;
}

unint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ConcatNDLayerParams>(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*(unsigned char *)(a1 + 24)) {
    v3 += 2;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3 + 1;
}

uint64_t CoreML::Specification::TransposeLayerParams::ByteSizeLong(CoreML::Specification::TransposeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::SliceStaticLayerParams::ByteSizeLong(CoreML::Specification::SliceStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_9:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_9;
  }
  uint64_t v5 = 11;
  uint64_t v6 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v2 >= 0) {
    uint64_t v5 = v6;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v7 = v5 + v2;
  uint64_t v8 = *((unsigned int *)this + 10);
  if (v8)
  {
    if ((v8 & 0x80000000) != 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v9;
  }
  *((_DWORD *)this + 14) = v8;
  uint64_t v10 = v7 + v8;
  uint64_t v11 = *((unsigned int *)this + 16);
  if ((int)v11 < 1)
  {
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = (uint64_t *)(*((void *)this + 9) + 8);
    do
    {
      uint64_t v14 = *v13++;
      v12 += (9 * (__clz(v14 | 1) ^ 0x3F) + 73) >> 6;
      --v11;
    }
    while (v11);
    if (v12)
    {
      if ((v12 & 0x80000000) != 0) {
        uint64_t v15 = 11;
      }
      else {
        uint64_t v15 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v10 += v15;
    }
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = v12;
  uint64_t v16 = v10 + v12;
  uint64_t v17 = *((unsigned int *)this + 22);
  if (v17)
  {
    uint64_t v18 = 11;
    uint64_t v19 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v17 >= 0) {
      uint64_t v18 = v19;
    }
    v16 += v18;
  }
  *((_DWORD *)this + 26) = v17;
  uint64_t v20 = v16 + v17;
  uint64_t v21 = *((unsigned int *)this + 28);
  if ((int)v21 < 1)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v23 = (uint64_t *)(*((void *)this + 15) + 8);
    do
    {
      uint64_t v24 = *v23++;
      v22 += (9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6;
      --v21;
    }
    while (v21);
    if (v22)
    {
      if ((v22 & 0x80000000) != 0) {
        uint64_t v25 = 11;
      }
      else {
        uint64_t v25 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v20 += v25;
    }
  }
  *((_DWORD *)this + 32) = v22;
  uint64_t v26 = v20 + v22;
  uint64_t v27 = *((unsigned int *)this + 34);
  if (v27)
  {
    if ((v27 & 0x80000000) != 0) {
      uint64_t v28 = 11;
    }
    else {
      uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v26 += v28;
  }
  uint64_t v29 = v26 + v27;
  *((_DWORD *)this + 38) = v27;
  *((_DWORD *)this + 39) = v29;
  return v29;
}

uint64_t CoreML::Specification::SliceDynamicLayerParams::ByteSizeLong(CoreML::Specification::SliceDynamicLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if (v1)
  {
    uint64_t v2 = 11;
    uint64_t v3 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v1 >= 0) {
      uint64_t v2 = v3;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 8) = v1;
  uint64_t v4 = v2 + v1;
  uint64_t v5 = *((unsigned int *)this + 10);
  if ((int)v5 < 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(*((void *)this + 6) + 8);
    do
    {
      uint64_t v8 = *v7++;
      v6 += (9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6;
      --v5;
    }
    while (v5);
    if (v6)
    {
      if ((v6 & 0x80000000) != 0) {
        uint64_t v9 = 11;
      }
      else {
        uint64_t v9 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v9;
    }
  }
  *((_DWORD *)this + 14) = v6;
  uint64_t v10 = v4 + v6;
  uint64_t v11 = *((unsigned int *)this + 16);
  if (v11)
  {
    uint64_t v12 = 11;
    uint64_t v13 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v11 >= 0) {
      uint64_t v12 = v13;
    }
    v10 += v12;
  }
  *((_DWORD *)this + 2CoreML::Specification::DictVectorizer::New(this, 0) = v11;
  uint64_t v14 = v10 + v11;
  uint64_t v15 = *((unsigned int *)this + 22);
  if ((int)v15 < 1)
  {
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = (uint64_t *)(*((void *)this + 12) + 8);
    do
    {
      uint64_t v18 = *v17++;
      v16 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
      --v15;
    }
    while (v15);
    if (v16)
    {
      if ((v16 & 0x80000000) != 0) {
        uint64_t v19 = 11;
      }
      else {
        uint64_t v19 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v14 += v19;
    }
  }
  *((_DWORD *)this + 26) = v16;
  uint64_t v20 = v14 + v16;
  uint64_t v21 = *((unsigned int *)this + 28);
  if (v21)
  {
    if ((v21 & 0x80000000) != 0) {
      uint64_t v22 = 11;
    }
    else {
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v20 += v22;
  }
  uint64_t v23 = v20 + v21;
  *((_DWORD *)this + 32) = v21;
  *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v23;
  return v23;
}

unint64_t CoreML::Specification::SlidingWindowsLayerParams::ByteSizeLong(CoreML::Specification::SlidingWindowsLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  uint64_t v6 = *((void *)this + 4);
  unint64_t v7 = v4 + ((9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6);
  if (v6) {
    unint64_t v4 = v7 + 1;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v4;
  return v4;
}

unint64_t CoreML::Specification::TopKLayerParams::ByteSizeLong(CoreML::Specification::TopKLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  if (*((unsigned char *)this + 32)) {
    v4 += 2;
  }
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::EmbeddingNDLayerParams::ByteSizeLong(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  if (this == (CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      uint64_t v4 = 0;
    }
    unint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::BatchedMatMulLayerParams::ByteSizeLong(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  if (this == (CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    unint64_t v5 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v7 = *((void *)this + 4);
  if (v7) {
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (*((unsigned char *)this + 48)) {
    uint64_t v9 = v4 + 2;
  }
  else {
    uint64_t v9 = v4;
  }
  if (*((unsigned char *)this + 49)) {
    v9 += 2;
  }
  if (*((unsigned char *)this + 50)) {
    v9 += 2;
  }
  if (*((unsigned char *)this + 51)) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = result;
  return result;
}

uint64_t CoreML::Specification::LoadConstantNDLayerParams::ByteSizeLong(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::FillStaticLayerParams::ByteSizeLong(CoreML::Specification::FillStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((float *)this + 9) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::ByteSizeLong(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::SqueezeLayerParams::ByteSizeLong(CoreML::Specification::SqueezeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ExpandDimsLayerParams::ByteSizeLong(CoreML::Specification::ExpandDimsLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReshapeStaticLayerParams::ByteSizeLong(CoreML::Specification::ReshapeStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::ByteSizeLong(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::ConstantPaddingLayerParams::ByteSizeLong(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((float *)this + 9) != 0.0) {
    v6 += 5;
  }
  if (*((unsigned char *)this + 40)) {
    v6 += 2;
  }
  *((_DWORD *)this + 11) = v6;
  return v6;
}

unint64_t CoreML::Specification::RandomNormalLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomNormalStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  BOOL v8 = v7 == 0;
  uint64_t v9 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (!v8) {
    uint64_t v6 = v9 + 1;
  }
  float v10 = *((float *)this + 12);
  float v11 = *((float *)this + 13);
  *((_DWORD *)this + 8) = v2;
  uint64_t v12 = v6 + 5;
  if (v10 == 0.0) {
    uint64_t v12 = v6;
  }
  if (v11 != 0.0) {
    v12 += 5;
  }
  *((_DWORD *)this + 14) = v12;
  return v12;
}

unint64_t CoreML::Specification::RandomNormalDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

unint64_t CoreML::Specification::RandomUniformLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomUniformStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  BOOL v8 = v7 == 0;
  uint64_t v9 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (!v8) {
    uint64_t v6 = v9 + 1;
  }
  float v10 = *((float *)this + 12);
  float v11 = *((float *)this + 13);
  *((_DWORD *)this + 8) = v2;
  uint64_t v12 = v6 + 5;
  if (v10 == 0.0) {
    uint64_t v12 = v6;
  }
  if (v11 != 0.0) {
    v12 += 5;
  }
  *((_DWORD *)this + 14) = v12;
  return v12;
}

unint64_t CoreML::Specification::RandomUniformDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((float *)this + 6) != 0.0) {
    v3 += 5;
  }
  if (*((float *)this + 7) != 0.0) {
    v3 += 5;
  }
  *((_DWORD *)this + 8) = v3;
  return v3;
}

unint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::RandomBernoulliLikeLayerParams>(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*(float *)(a1 + 24) != 0.0) {
    v3 += 5;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
}

uint64_t CoreML::Specification::RandomBernoulliStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  uint64_t v7 = *((void *)this + 5);
  uint64_t v8 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (v7) {
    uint64_t v6 = v8 + 1;
  }
  if (*((float *)this + 12) != 0.0) {
    v6 += 5;
  }
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v6;
  return v6;
}

unint64_t CoreML::Specification::CategoricalDistributionLayerParams::ByteSizeLong(CoreML::Specification::CategoricalDistributionLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  if (*((unsigned char *)this + 32)) {
    v4 += 2;
  }
  if (*((float *)this + 9) != 0.0) {
    v4 += 5;
  }
  if (*((float *)this + 10) != 0.0) {
    v4 += 5;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::ReduceL1LayerParams::ByteSizeLong(CoreML::Specification::ReduceL1LayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceL2LayerParams::ByteSizeLong(CoreML::Specification::ReduceL2LayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMaxLayerParams::ByteSizeLong(CoreML::Specification::ReduceMaxLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMinLayerParams::ByteSizeLong(CoreML::Specification::ReduceMinLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceSumLayerParams::ByteSizeLong(CoreML::Specification::ReduceSumLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceProdLayerParams::ByteSizeLong(CoreML::Specification::ReduceProdLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMeanLayerParams::ByteSizeLong(CoreML::Specification::ReduceMeanLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceLogSumLayerParams::ByteSizeLong(CoreML::Specification::ReduceLogSumLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceSumSquareLayerParams::ByteSizeLong(CoreML::Specification::ReduceSumSquareLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceLogSumExpLayerParams::ByteSizeLong(CoreML::Specification::ReduceLogSumExpLayerParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  unint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  uint64_t v6 = v5 + v2;
  if (*((unsigned char *)this + 36)) {
    v6 += 2;
  }
  if (*((unsigned char *)this + 37)) {
    v6 += 2;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v6;
  return v6;
}

unint64_t CoreML::Specification::MatrixBandPartLayerParams::ByteSizeLong(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LayerNormalizationLayerParams::ByteSizeLong(CoreML::Specification::LayerNormalizationLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v6 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  unint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  uint64_t v7 = v6 + v3;
  if (this != (CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_)
  {
    uint64_t v8 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v8)
    {
      uint64_t v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    float v10 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::WeightParams::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((float *)this + 14) == 0.0) {
    uint64_t result = v7;
  }
  else {
    uint64_t result = v7 + 5;
  }
  *((_DWORD *)this + 15) = result;
  return result;
}

uint64_t CoreML::Specification::NonMaximumSuppressionLayerParams::ByteSizeLong(CoreML::Specification::NonMaximumSuppressionLayerParams *this)
{
  uint64_t v1 = 5;
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((float *)this + 5) != 0.0) {
    v1 += 5;
  }
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = v1 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    uint64_t v1 = v3 + 1;
  }
  if (*((unsigned char *)this + 32)) {
    v1 += 2;
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

unint64_t CoreML::Specification::OneHotLayerParams::ByteSizeLong(CoreML::Specification::OneHotLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  if (*((float *)this + 8) != 0.0) {
    v4 += 5;
  }
  if (*((float *)this + 9) != 0.0) {
    v4 += 5;
  }
  *((_DWORD *)this + 1CoreML::Specification::DictVectorizer::New(this, 0) = v4;
  return v4;
}

unint64_t CoreML::Specification::CumSumLayerParams::ByteSizeLong(CoreML::Specification::CumSumLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  if (*((unsigned char *)this + 24)) {
    v3 += 2;
  }
  if (*((unsigned char *)this + 25)) {
    v3 += 2;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::Pooling3DLayerParams::ByteSizeLong(CoreML::Specification::Pooling3DLayerParams *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 10;
    }
    else {
      uint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t v3 = v2 + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 5);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 10;
    }
    else {
      uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v5 + 1;
  }
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v7 + 1;
  }
  int v8 = *((_DWORD *)this + 7);
  if (v8)
  {
    if (v8 < 0) {
      uint64_t v9 = 10;
    }
    else {
      uint64_t v9 = (9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v9 + 1;
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    if (v10 < 0) {
      uint64_t v11 = 10;
    }
    else {
      uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v11 + 1;
  }
  int v12 = *((_DWORD *)this + 9);
  if (v12)
  {
    if (v12 < 0) {
      uint64_t v13 = 10;
    }
    else {
      uint64_t v13 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
    }
    v3 += v13 + 1;
  }
  int v14 = *((_DWORD *)this + 10);
  if (v14)
  {
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v15;
  }
  int v16 = *((_DWORD *)this + 11);
  if (v16)
  {
    if (v16 < 0) {
      uint64_t v17 = 11;
    }
    else {
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v17;
  }
  int v18 = *((_DWORD *)this + 12);
  if (v18)
  {
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v19;
  }
  int v20 = *((_DWORD *)this + 13);
  if (v20)
  {
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v21;
  }
  int v22 = *((_DWORD *)this + 14);
  if (v22)
  {
    if (v22 < 0) {
      uint64_t v23 = 11;
    }
    else {
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v23;
  }
  int v24 = *((_DWORD *)this + 15);
  if (v24)
  {
    if (v24 < 0) {
      uint64_t v25 = 11;
    }
    else {
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v25;
  }
  int v26 = *((_DWORD *)this + 16);
  if (v26)
  {
    if (v26 < 0) {
      uint64_t v27 = 11;
    }
    else {
      uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v27;
  }
  if (*((unsigned char *)this + 68)) {
    v3 += 2;
  }
  int v28 = *((_DWORD *)this + 18);
  if (v28)
  {
    if (v28 < 0) {
      uint64_t v29 = 11;
    }
    else {
      uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v29;
  }
  *((_DWORD *)this + 19) = v3;
  return v3;
}

unint64_t CoreML::Specification::SliceBySizeLayerParams::ByteSizeLong(CoreML::Specification::SliceBySizeLayerParams *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = 0;
  }
  unint64_t v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2) {
    unint64_t v4 = v5 + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Convolution3DLayerParams::ByteSizeLong(CoreML::Specification::Convolution3DLayerParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    uint64_t v3 = 0;
LABEL_8:
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  uint64_t v3 = 0;
  unint64_t v4 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3) {
    goto LABEL_8;
  }
  if ((v3 & 0x80000000) != 0) {
    uint64_t v6 = 10;
  }
  else {
    uint64_t v6 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
  }
  uint64_t v7 = v6 + 2;
LABEL_11:
  *((_DWORD *)this + 8) = v3;
  uint64_t v8 = v7 + v3;
  if (this != (CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_)
  {
    uint64_t v9 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v11 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
    if (v11)
    {
      uint64_t v12 = CoreML::Specification::WeightParams::ByteSizeLong(v11);
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  int v13 = *((_DWORD *)this + 14);
  if (v13)
  {
    if (v13 < 0) {
      uint64_t v14 = 10;
    }
    else {
      uint64_t v14 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v14 + 1;
  }
  int v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0) {
      uint64_t v16 = 10;
    }
    else {
      uint64_t v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v16 + 1;
  }
  int v17 = *((_DWORD *)this + 16);
  if (v17)
  {
    if (v17 < 0) {
      uint64_t v18 = 10;
    }
    else {
      uint64_t v18 = (9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v18 + 1;
  }
  int v19 = *((_DWORD *)this + 17);
  if (v19)
  {
    if (v19 < 0) {
      uint64_t v20 = 10;
    }
    else {
      uint64_t v20 = (9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v20 + 2;
  }
  int v21 = *((_DWORD *)this + 18);
  if (v21)
  {
    if (v21 < 0) {
      uint64_t v22 = 10;
    }
    else {
      uint64_t v22 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v22 + 2;
  }
  int v23 = *((_DWORD *)this + 19);
  if (v23)
  {
    if (v23 < 0) {
      uint64_t v24 = 10;
    }
    else {
      uint64_t v24 = (9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v24 + 2;
  }
  int v25 = *((_DWORD *)this + 20);
  if (v25)
  {
    if (v25 < 0) {
      uint64_t v26 = 10;
    }
    else {
      uint64_t v26 = (9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v26 + 2;
  }
  int v27 = *((_DWORD *)this + 21);
  if (v27)
  {
    if (v27 < 0) {
      uint64_t v28 = 10;
    }
    else {
      uint64_t v28 = (9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v28 + 2;
  }
  int v29 = *((_DWORD *)this + 22);
  if (v29)
  {
    if (v29 < 0) {
      uint64_t v30 = 10;
    }
    else {
      uint64_t v30 = (9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v30 + 2;
  }
  int v31 = *((_DWORD *)this + 23);
  if (v31)
  {
    if (v31 < 0) {
      uint64_t v32 = 10;
    }
    else {
      uint64_t v32 = (9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v32 + 2;
  }
  int v33 = *((_DWORD *)this + 24);
  if (v33)
  {
    if (v33 < 0) {
      uint64_t v34 = 10;
    }
    else {
      uint64_t v34 = (9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6;
    }
    v8 += v34 + 2;
  }
  int v35 = *((_DWORD *)this + 25);
  if (v35)
  {
    if (v35 < 0) {
      uint64_t v36 = 12;
    }
    else {
      uint64_t v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v8 += v36;
  }
  if (*((unsigned char *)this + 104)) {
    uint64_t v37 = v8 + 3;
  }
  else {
    uint64_t v37 = v8;
  }
  if (*((unsigned char *)this + 105)) {
    uint64_t result = v37 + 3;
  }
  else {
    uint64_t result = v37;
  }
  int v39 = *((_DWORD *)this + 27);
  if (v39)
  {
    if (v39 < 0) {
      uint64_t v40 = 12;
    }
    else {
      uint64_t v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v40;
  }
  int v41 = *((_DWORD *)this + 28);
  if (v41)
  {
    if (v41 < 0) {
      uint64_t v42 = 12;
    }
    else {
      uint64_t v42 = ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v42;
  }
  int v43 = *((_DWORD *)this + 29);
  if (v43)
  {
    if (v43 < 0) {
      uint64_t v44 = 12;
    }
    else {
      uint64_t v44 = ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v44;
  }
  int v45 = *((_DWORD *)this + 30);
  if (v45)
  {
    if (v45 < 0) {
      uint64_t v46 = 12;
    }
    else {
      uint64_t v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v46;
  }
  int v47 = *((_DWORD *)this + 31);
  if (v47)
  {
    if (v47 < 0) {
      uint64_t v48 = 12;
    }
    else {
      uint64_t v48 = ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v48;
  }
  int v49 = *((_DWORD *)this + 32);
  if (v49)
  {
    if (v49 < 0) {
      uint64_t v50 = 12;
    }
    else {
      uint64_t v50 = ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v50;
  }
  int v51 = *((_DWORD *)this + 33);
  if (v51)
  {
    if (v51 < 0) {
      uint64_t v52 = 12;
    }
    else {
      uint64_t v52 = ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    result += v52;
  }
  *((_DWORD *)this + 34) = result;
  return result;
}

uint64_t CoreML::Specification::WeightParams::ByteSizeLong(CoreML::Specification::WeightParams *this)
{
  uint64_t v2 = *((unsigned int *)this + 4);
  uint64_t v3 = 4 * v2;
  if (v2)
  {
    if ((v3 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 8) = v3;
  uint64_t v5 = *((void *)this + 5);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  uint64_t v7 = v4 + v3;
  if (v6)
  {
    if (*(char *)(v5 + 23) >= 0) {
      uint64_t v8 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      uint64_t v8 = *(void *)(v5 + 8);
    }
    v7 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *((void *)this + 6);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(void *)(v9 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v9 + 23))
  {
    goto LABEL_19;
  }
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_19:
  uint64_t v12 = *((void *)this + 7);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_24:
  if (this != (CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_)
  {
    int v15 = (CoreML::Specification::QuantizationParams *)*((void *)this + 8);
    if (v15)
    {
      uint64_t v16 = CoreML::Specification::QuantizationParams::ByteSizeLong(v15);
      v7 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  if (*((unsigned char *)this + 72)) {
    uint64_t result = v7 + 3;
  }
  else {
    uint64_t result = v7;
  }
  *((_DWORD *)this + 19) = result;
  return result;
}

uint64_t CoreML::Specification::QuantizationParams::ByteSizeLong(CoreML::Specification::QuantizationParams *this)
{
  uint64_t v2 = *((void *)this + 2);
  unint64_t v3 = (9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6;
  if (v2) {
    uint64_t v4 = v3 + 1;
  }
  else {
    uint64_t v4 = 0;
  }
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 102)
  {
    uint64_t v9 = (unsigned int *)*((void *)this + 3);
    uint64_t v10 = v9[4];
    uint64_t v11 = 4 * v10;
    if (v10)
    {
      if ((v11 & 0x80000000) != 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v12 = 0;
    }
    uint64_t v13 = v12 + v11;
    v9[8] = v11;
    v9[9] = v13;
    uint64_t v7 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v8 = v4 + v13;
    goto LABEL_13;
  }
  if (v5 == 101)
  {
    uint64_t v6 = CoreML::Specification::LinearQuantizationParams::ByteSizeLong(*((CoreML::Specification::LinearQuantizationParams **)this
                                                                       + 3));
    uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v8 = v4 + v6;
LABEL_13:
    uint64_t v4 = v8 + v7 + 2;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LinearQuantizationParams::ByteSizeLong(CoreML::Specification::LinearQuantizationParams *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 8) = v2;
  uint64_t v4 = v3 + v2;
  uint64_t v5 = *((unsigned int *)this + 10);
  uint64_t v6 = 4 * v5;
  if (v5)
  {
    if ((v6 & 0x80000000) != 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v7;
  }
  uint64_t v8 = v4 + v6;
  *((_DWORD *)this + 14) = v6;
  *((_DWORD *)this + 15) = v8;
  return v8;
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3626C68;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::DictVectorizer::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::CustomLayerParams_CustomLayerParamValue::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::ByteSizeLong(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  int v1 = *((_DWORD *)this + 7);
  if (v1 <= 29)
  {
    if (v1 == 10)
    {
      uint64_t v3 = 9;
      goto LABEL_19;
    }
    if (v1 != 20)
    {
      uint64_t v3 = 0;
      goto LABEL_19;
    }
    uint64_t v4 = *((void *)this + 2);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    unint64_t v7 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    goto LABEL_15;
  }
  if (v1 == 30)
  {
    int v8 = *((_DWORD *)this + 4);
    if (v8 < 0) {
      uint64_t v3 = 12;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    goto LABEL_19;
  }
  if (v1 == 40)
  {
    unint64_t v7 = (9 * (__clz(*((void *)this + 2) | 1) ^ 0x3F) + 73) >> 6;
LABEL_15:
    uint64_t v3 = v7 + 2;
    goto LABEL_19;
  }
  BOOL v2 = v1 == 50;
  uint64_t v3 = 3;
  if (!v2) {
    uint64_t v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 6) = v3;
  return v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  unint64_t v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  char *v7 = 18;
  uint64_t v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *uint64_t v9 = v11;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 24) + ((9 * (__clz(*(_DWORD *)(v4 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2);
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::DictVectorizer::New(this, 0) = v9;
        unsigned int v10 = *(char **)this;
        if (*(void *)this < *((void *)this + 1) && *v10 == 18)
        {
          *(void *)this = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::DictVectorizer::New(this, 0) = v9 | 2;
      Aligned = *(google::protobuf::Arena ***)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned);
        uint64_t v13 = google::protobuf::Arena::AllocateAligned(v12, 0, 24);
        *uint64_t v13 = (google::protobuf::Arena *)Aligned;
        v13[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
        uint64_t v14 = (unint64_t *)((char *)v12 + 32);
        do
          unint64_t v15 = __ldxr(v14);
        while (__stxr((unint64_t)v13, v14));
        v13[2] = (google::protobuf::Arena *)v15;
        *(void *)(a1 + 24) = Aligned;
      }
      uint64_t v16 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1) || *v16 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v16;
        *(void *)this = v16 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
      int v20 = *((_DWORD *)this + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      BOOL result = CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned, this, v19);
      if (!result) {
        return result;
      }
      BOOL result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v22);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        BOOL result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_1DC0E7560(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CustomLayerParams_CustomLayerParamValue *CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  *(void *)this = &unk_1F3624CD0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)&CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0E75E4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(unsigned __int8 **)a2;
      unint64_t v7 = *((void *)a2 + 1);
      if (*(void *)a2 >= v7)
      {
        LODWORD(v9) = 0;
      }
      else
      {
        uint64_t v8 = v6 + 1;
        uint64_t v9 = *v6;
        if ((char)*v6 >= 1)
        {
          *(void *)a2 = v8;
          unint64_t v10 = v9 | 0x100000000;
          if ((v10 & 0x100000000) == 0) {
            goto LABEL_9;
          }
          goto LABEL_17;
        }
        if ((unint64_t)v8 < v7)
        {
          int v11 = *v8;
          if ((v9 & ~v11) >= 0x80)
          {
            *(void *)a2 = v6 + 2;
            unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
            goto LABEL_17;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
      unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v10 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      unsigned int v14 = v10 >> 3;
      if (v10 >> 3 <= 0x1D) {
        break;
      }
      if (v14 == 30)
      {
        if (v10 != 240) {
          goto LABEL_9;
        }
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        int v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v18 = 0;
        }
        else
        {
          int v18 = *v17;
          if ((*v17 & 0x80000000) == 0)
          {
            *(void *)a2 = v17 + 1;
LABEL_63:
            *(_DWORD *)uint64_t v5 = v18;
            goto LABEL_64;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
        int v18 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
        goto LABEL_63;
      }
      if (v14 == 40)
      {
        if (v10 != 64) {
          goto LABEL_9;
        }
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        unsigned int v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v29 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v19;
          *(void *)a2 = v19 + 1;
        }
        *uint64_t v5 = (std::string *)Varint64Fallback;
LABEL_64:
        *((_DWORD *)this + 7) = v14;
      }
      else
      {
        if (v14 == 50 && v10 == 144)
        {
          CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
          unint64_t v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          *(unsigned char *)uint64_t v5 = v16 != 0;
          goto LABEL_64;
        }
LABEL_9:
        if (v10) {
          BOOL v12 = (v10 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)return 0; {
      }
        }
    }
    if (v14 == 10)
    {
      if (v10 == 81)
      {
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        unint64_t v31 = 0;
        BOOL v21 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v31);
          if (!result) {
            return result;
          }
          unint64_t v22 = v31;
        }
        else
        {
          unint64_t v22 = *v21;
          *(void *)a2 = v21 + 1;
        }
        *uint64_t v5 = (std::string *)v22;
        goto LABEL_64;
      }
      goto LABEL_9;
    }
    if (v14 != 20 || v10 != 162) {
      goto LABEL_9;
    }
    if (*((_DWORD *)this + 7) != 20)
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
      *((_DWORD *)this + 7) = 20;
      *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_44:
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
    }
    if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
    if (!result) {
      return result;
    }
    int v24 = *((_DWORD *)this + 7);
    int v25 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      int v25 = *v5;
    }
    if (SHIBYTE(v25->__r_.__value_.__r.__words[2]) < 0) {
      int v25 = (std::string *)v25->__r_.__value_.__r.__words[0];
    }
    uint64_t v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      uint64_t v26 = *v5;
    }
    if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = v26->__r_.__value_.__l.__size_;
    }
    else {
      LODWORD(size) = HIBYTE(v26->__r_.__value_.__r.__words[2]);
    }
  }
  while (google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v25, size, 0, (uint64_t)"CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue"));
  return 0;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)(this + 28) == 20)
  {
    uint64_t v2 = *(void *)(this + 16);
    if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

unint64_t *CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(CoreML::Specification::protobuf_NeuralNetwork_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

void CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  uint64_t v2 = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults((CoreML::Specification::protobuf_Parameters_2eproto *)v2);
  CoreML::Specification::_NeuralNetwork_default_instance_ = (uint64_t)&unk_1F361B990;
  unk_1EC002080 = 0u;
  unk_1EC002090 = 0u;
  unk_1EC0020A0 = 0u;
  unk_1EC0020B0 = 0u;
  *(_OWORD *)((char *)&qword_1EC0020B8 + 4) = 0u;
  byte_1EC0020D0 = 1;
  CoreML::Specification::_NeuralNetworkImageScaler_default_instance_ = (uint64_t)&unk_1F36220E0;
  unk_1EC004BC8 = 0u;
  unk_1EC004BD8 = 0u;
  byte_1EC004BE8 = 1;
  CoreML::Specification::_NeuralNetworkMeanImage_default_instance_ = (uint64_t)&unk_1F36210D8;
  *(void *)algn_1EC004388 = 0;
  qword_1EC004390 = 0;
  unk_1EC004398 = 0;
  dword_1EC0043A4 = 0;
  byte_1EC0043A8 = 1;
  CoreML::Specification::_NeuralNetworkPreprocessing_default_instance_ = (uint64_t)&unk_1F3622D58;
  unk_1EC0050A0 = 0;
  qword_1EC0050A8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_1EC0050B8 = 0;
  byte_1EC0050C0 = 1;
  CoreML::Specification::_ActivationReLU_default_instance_ = (uint64_t)&unk_1F361BB58;
  qword_1EC002150 = 0;
  dword_1EC002158 = 0;
  byte_1EC002160 = 1;
  CoreML::Specification::_ActivationLeakyReLU_default_instance_ = (uint64_t)&unk_1F361F1F8;
  qword_1EC0038C8 = 0;
  qword_1EC0038D0 = 0;
  byte_1EC0038D8 = 1;
  CoreML::Specification::_ActivationTanh_default_instance_ = (uint64_t)&unk_1F361BBF0;
  qword_1EC002170 = 0;
  dword_1EC002178 = 0;
  byte_1EC002180 = 1;
  dword_1EC003B18 = 0;
  CoreML::Specification::_ActivationScaledTanh_default_instance_ = (uint64_t)&unk_1F361F9B0;
  *(void *)algn_1EC003B08 = 0;
  qword_1EC003B10 = 0;
  byte_1EC003B20 = 1;
  CoreML::Specification::_ActivationSigmoid_default_instance_ = (uint64_t)&unk_1F361DC98;
  qword_1EC002C88 = 0;
  dword_1EC002C90 = 0;
  byte_1EC002C98 = 1;
  qword_1EC002758 = 0;
  unk_1EC002760 = 0;
  CoreML::Specification::_ActivationLinear_default_instance_ = (uint64_t)&unk_1F361D0B8;
  dword_1EC002768 = 0;
  byte_1EC002770 = 1;
  qword_1EC003E10 = 0;
  unk_1EC003E18 = 0;
  CoreML::Specification::_ActivationSigmoidHard_default_instance_ = (uint64_t)&unk_1F3620298;
  dword_1EC003E20 = 0;
  byte_1EC003E28 = 1;
  qword_1EC0023C8 = 0;
  qword_1EC0023D0 = 0;
  CoreML::Specification::_ActivationPReLU_default_instance_ = (uint64_t)&unk_1F361C3A8;
  dword_1EC0023D8 = 0;
  byte_1EC0023E0 = 1;
  CoreML::Specification::_ActivationELU_default_instance_ = (uint64_t)&unk_1F361B698;
  qword_1EC001F50 = 0;
  qword_1EC001F58 = 0;
  byte_1EC001F60 = 1;
  qword_1EC004C78 = 0;
  *(void *)&dword_1EC004C80 = 0;
  CoreML::Specification::_ActivationThresholdedReLU_default_instance_ = (uint64_t)&unk_1F3622340;
  byte_1EC004C88 = 1;
  CoreML::Specification::_ActivationSoftsign_default_instance_ = (uint64_t)&unk_1F361E6B0;
  qword_1EC002F80 = 0;
  dword_1EC002F88 = 0;
  byte_1EC002F90 = 1;
  CoreML::Specification::_ActivationSoftplus_default_instance_ = (uint64_t)&unk_1F361E618;
  qword_1EC002F60 = 0;
  dword_1EC002F68 = 0;
  byte_1EC002F70 = 1;
  CoreML::Specification::_ActivationParametricSoftplus_default_instance_ = (uint64_t)&unk_1F3623640;
  unk_1EC005420 = 0;
  dword_1EC005438 = 0;
  qword_1EC005428 = 0;
  unk_1EC005430 = 0;
  byte_1EC005440 = 1;
  CoreML::Specification::_ActivationParams_default_instance_ = (uint64_t)&unk_1F361D150;
  unk_1EC002780 = 0;
  qword_1EC002790 = 0;
  byte_1EC002798 = 1;
  CoreML::Specification::_Tensor_default_instance_ = (uint64_t)&unk_1F3625190;
  *(void *)algn_1EC0018E8 = 0;
  qword_1EC0018F0 = 0;
  unk_1EC0018F8 = 0;
  unk_1EC001904 = 0;
  byte_1EC001910 = 1;
  CoreML::Specification::_NeuralNetworkLayer_default_instance_ = (uint64_t)&unk_1F361EAD8;
  unk_1EC003108 = 0u;
  unk_1EC0030F8 = 0u;
  unk_1EC0030E8 = 0u;
  unk_1EC0030D8 = 0u;
  unk_1EC0030C8 = 0u;
  unk_1EC0030B8 = 0u;
  qword_1EC003118 = 0;
  unk_1EC003120 = &google::protobuf::internal::fixed_address_empty_string;
  byte_1EC003128 = 0;
  qword_1EC003138 = 0;
  byte_1EC003140 = 1;
  CoreML::Specification::_BranchLayerParams_default_instance_ = (uint64_t)&unk_1F361DE60;
  *(void *)algn_1EC002CF8 = 0;
  dword_1EC002D10 = 0;
  qword_1EC002D00 = 0;
  unk_1EC002D08 = 0;
  byte_1EC002D18 = 1;
  CoreML::Specification::_LoopLayerParams_default_instance_ = (uint64_t)&unk_1F361CB60;
  unk_1EC0025E0 = 0;
  qword_1EC0025E8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_1EC0025F0 = 0;
  dword_1EC002608 = 0;
  qword_1EC0025F8 = 0;
  unk_1EC002600 = 0;
  byte_1EC002610 = 1;
  CoreML::Specification::_LoopBreakLayerParams_default_instance_ = (uint64_t)&unk_1F361FCA8;
  qword_1EC003C00 = 0;
  dword_1EC003C08 = 0;
  byte_1EC003C10 = 1;
  CoreML::Specification::_LoopContinueLayerParams_default_instance_ = (uint64_t)&unk_1F3621928;
  qword_1EC004778 = 0;
  dword_1EC004780 = 0;
  byte_1EC004788 = 1;
  CoreML::Specification::_CopyLayerParams_default_instance_ = (uint64_t)&unk_1F361C738;
  qword_1EC0024B8 = 0;
  dword_1EC0024C0 = 0;
  byte_1EC0024C8 = 1;
  qword_1EC004348 = 0;
  unk_1EC004350 = 0;
  CoreML::Specification::_GreaterThanLayerParams_default_instance_ = (uint64_t)&unk_1F3620FA8;
  byte_1EC004358 = 1;
  qword_1EC0046D8 = 0;
  unk_1EC0046E0 = 0;
  CoreML::Specification::_GreaterEqualLayerParams_default_instance_ = (uint64_t)&unk_1F3621760;
  byte_1EC0046E8 = 1;
  qword_1EC0039A8 = 0;
  unk_1EC0039B0 = 0;
  CoreML::Specification::_LessThanLayerParams_default_instance_ = (uint64_t)&unk_1F361F588;
  byte_1EC0039B8 = 1;
  qword_1EC003BC0 = 0;
  unk_1EC003BC8 = 0;
  CoreML::Specification::_LessEqualLayerParams_default_instance_ = (uint64_t)&unk_1F361FB78;
  byte_1EC003BD0 = 1;
  qword_1EC0028C0 = 0;
  unk_1EC0028C8 = 0;
  CoreML::Specification::_EqualLayerParams_default_instance_ = (uint64_t)&unk_1F361D3B0;
  byte_1EC0028D0 = 1;
  qword_1EC0039E8 = 0;
  unk_1EC0039F0 = 0;
  CoreML::Specification::_NotEqualLayerParams_default_instance_ = (uint64_t)&unk_1F361F6B8;
  byte_1EC0039F8 = 1;
  CoreML::Specification::_LogicalAndLayerParams_default_instance_ = (uint64_t)&unk_1F36206C0;
  qword_1EC003F78 = 0;
  dword_1EC003F80 = 0;
  byte_1EC003F88 = 1;
  CoreML::Specification::_LogicalOrLayerParams_default_instance_ = (uint64_t)&unk_1F361FC10;
  qword_1EC003BE0 = 0;
  dword_1EC003BE8 = 0;
  byte_1EC003BF0 = 1;
  CoreML::Specification::_LogicalXorLayerParams_default_instance_ = (uint64_t)&unk_1F36207F0;
  qword_1EC003FB8 = 0;
  dword_1EC003FC0 = 0;
  byte_1EC003FC8 = 1;
  CoreML::Specification::_LogicalNotLayerParams_default_instance_ = (uint64_t)&unk_1F3620758;
  qword_1EC003F98 = 0;
  dword_1EC003FA0 = 0;
  byte_1EC003FA8 = 1;
  CoreML::Specification::_BorderAmounts_EdgeSizes_default_instance_ = (uint64_t)&unk_1F36216C8;
  *(void *)algn_1EC0046A8 = 0;
  dword_1EC0046C0 = 0;
  qword_1EC0046B0 = 0;
  unk_1EC0046B8 = 0;
  byte_1EC0046C8 = 1;
  CoreML::Specification::_BorderAmounts_default_instance_ = (uint64_t)&unk_1F361B860;
  dword_1EC001FF8 = 0;
  unk_1EC001FE8 = 0u;
  unk_1EC001FD8 = 0u;
  byte_1EC002000 = 1;
  qword_1EC001ED0 = 0;
  qword_1EC001ED8 = 0;
  CoreML::Specification::_ValidPadding_default_instance_ = (uint64_t)&unk_1F361B568;
  dword_1EC001EE0 = 0;
  byte_1EC001EE8 = 1;
  qword_1EC001D18 = 0;
  *(void *)&dword_1EC001D20 = 0;
  CoreML::Specification::_SamePadding_default_instance_ = (uint64_t)&unk_1F361A988;
  byte_1EC001D28 = 1;
  qword_1EC001E40 = 0;
  unk_1EC001E48 = 0;
  CoreML::Specification::_SamplingMode_default_instance_ = (uint64_t)&unk_1F361B3A0;
  byte_1EC001E50 = 1;
  qword_1EC002FE8 = 0;
  unk_1EC002FF0 = 0;
  CoreML::Specification::_BoxCoordinatesMode_default_instance_ = (uint64_t)&unk_1F361E878;
  byte_1EC002FF8 = 1;
  CoreML::Specification::_WeightParams_default_instance_ = (uint64_t)&unk_1F361B600;
  *(void *)algn_1EC001EF8 = 0;
  qword_1EC001F00 = 0;
  unk_1EC001F08 = 0;
  qword_1EC001F18 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC001F20 = &google::protobuf::internal::fixed_address_empty_string;
  byte_1EC001F38 = 0;
  qword_1EC001F28 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_1EC001F30 = 0;
  dword_1EC001F3C = 0;
  byte_1EC001F40 = 1;
  qword_1EC003770 = 0;
  qword_1EC003758 = 0;
  unk_1EC003760 = 0;
  CoreML::Specification::_QuantizationParams_default_instance_ = (uint64_t)&unk_1F361EDD0;
  byte_1EC003778 = 1;
  qword_1EC004BA0 = 0;
  unk_1EC004BA8 = 0;
  CoreML::Specification::_LinearQuantizationParams_default_instance_ = (uint64_t)&unk_1F3622048;
  unk_1EC004B80 = 0;
  qword_1EC004B88 = 0;
  unk_1EC004B90 = 0;
  dword_1EC004BB4 = 0;
  byte_1EC004BB8 = 1;
  CoreML::Specification::_LookUpTableQuantizationParams_default_instance_ = (uint64_t)&unk_1F3623A68;
  *(void *)algn_1EC0055C8 = 0;
  qword_1EC0055D0 = 0;
  unk_1EC0055D8 = 0;
  dword_1EC0055E4 = 0;
  byte_1EC0055E8 = 1;
  qword_1EC004218 = 0;
  unk_1EC004220 = 0;
  qword_1EC004230 = 0;
  unk_1EC004238 = 0;
  qword_1EC004248 = 0;
  unk_1EC004250 = 0;
  CoreML::Specification::_ConvolutionLayerParams_default_instance_ = (uint64_t)&unk_1F3620D48;
  *(void *)algn_1EC0041F8 = 0;
  qword_1EC004200 = 0;
  unk_1EC004208 = 0;
  unk_1EC00427A = 0u;
  xmmword_1EC004260 = 0u;
  unk_1EC004270 = 0u;
  qword_1EC004298 = 0;
  byte_1EC0042A0 = 1;
  CoreML::Specification::_Convolution3DLayerParams_default_instance_ = (uint64_t)&unk_1F3621E80;
  *(void *)algn_1EC004A98 = 0;
  qword_1EC004AA0 = 0;
  unk_1EC004AA8 = 0;
  dword_1EC004B18 = 0;
  unk_1EC004B08 = 0u;
  unk_1EC004AF8 = 0u;
  unk_1EC004AE8 = 0u;
  unk_1EC004AD8 = 0u;
  unk_1EC004AC8 = 0u;
  *(_OWORD *)&qword_1EC004AB8 = 0u;
  byte_1EC004B20 = 1;
  CoreML::Specification::_InnerProductLayerParams_default_instance_ = (uint64_t)&unk_1F36217F8;
  dword_1EC004724 = 0;
  unk_1EC004712 = 0u;
  unk_1EC004708 = 0u;
  *(_OWORD *)algn_1EC0046F8 = 0u;
  byte_1EC004728 = 1;
  CoreML::Specification::_EmbeddingLayerParams_default_instance_ = (uint64_t)&unk_1F361FAE0;
  dword_1EC003BAC = 0;
  unk_1EC003B99 = 0u;
  unk_1EC003B90 = 0u;
  unk_1EC003B80 = 0u;
  byte_1EC003BB0 = 1;
  CoreML::Specification::_EmbeddingNDLayerParams_default_instance_ = (uint64_t)&unk_1F3620DE0;
  dword_1EC0042EC = 0;
  unk_1EC0042D9 = 0u;
  unk_1EC0042D0 = 0u;
  unk_1EC0042C0 = 0u;
  byte_1EC0042F0 = 1;
  CoreML::Specification::_BatchnormLayerParams_default_instance_ = (uint64_t)&unk_1F361FA48;
  unk_1EC003B5C = 0u;
  unk_1EC003B50 = 0u;
  unk_1EC003B40 = 0u;
  unk_1EC003B30 = 0u;
  byte_1EC003B70 = 1;
  CoreML::Specification::_PoolingLayerParams_ValidCompletePadding_default_instance_ = (uint64_t)&unk_1F3624E00;
  *(void *)algn_1EC005CB8 = 0;
  qword_1EC005CC0 = 0;
  unk_1EC005CC8 = 0;
  dword_1EC005CD4 = 0;
  byte_1EC005CD8 = 1;
  qword_1EC003700 = 0;
  unk_1EC003708 = 0;
  CoreML::Specification::_PoolingLayerParams_default_instance_ = (uint64_t)&unk_1F361ED38;
  unk_1EC0036E0 = 0;
  qword_1EC0036E8 = 0;
  unk_1EC0036F0 = 0;
  word_1EC003718 = 0;
  dword_1EC003714 = 0;
  qword_1EC003728 = 0;
  byte_1EC003730 = 1;
  CoreML::Specification::_Pooling3DLayerParams_default_instance_ = (uint64_t)&unk_1F361FD40;
  qword_1EC003C60 = 0;
  unk_1EC003C50 = 0u;
  unk_1EC003C40 = 0u;
  unk_1EC003C30 = 0u;
  unk_1EC003C20 = 0u;
  byte_1EC003C68 = 1;
  qword_1EC005028 = 0;
  unk_1EC005030 = 0;
  CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_ = (uint64_t)&unk_1F3622B90;
  byte_1EC005038 = 1;
  qword_1EC005B20 = 0;
  *(void *)&dword_1EC005B28 = 0;
  CoreML::Specification::_PaddingLayerParams_PaddingConstant_default_instance_ = (uint64_t)&unk_1F3624940;
  byte_1EC005B30 = 1;
  CoreML::Specification::_PaddingLayerParams_PaddingReflection_default_instance_ = (uint64_t)&unk_1F36249D8;
  qword_1EC005B40 = 0;
  dword_1EC005B48 = 0;
  byte_1EC005B50 = 1;
  CoreML::Specification::_PaddingLayerParams_PaddingReplication_default_instance_ = (uint64_t)&unk_1F3624BA0;
  qword_1EC005BD0 = 0;
  dword_1EC005BD8 = 0;
  byte_1EC005BE0 = 1;
  qword_1EC003658 = 0;
  qword_1EC003640 = 0;
  qword_1EC003648 = 0;
  CoreML::Specification::_PaddingLayerParams_default_instance_ = (uint64_t)&unk_1F361EB70;
  byte_1EC003660 = 1;
  CoreML::Specification::_ConcatLayerParams_default_instance_ = (uint64_t)&unk_1F361DEF8;
  *(void *)algn_1EC002D28 = 0;
  byte_1EC002D30 = 0;
  dword_1EC002D34 = 0;
  byte_1EC002D38 = 1;
  CoreML::Specification::_LRNLayerParams_default_instance_ = (uint64_t)&unk_1F361C018;
  unk_1EC002308 = 0u;
  unk_1EC0022F8 = 0u;
  byte_1EC002318 = 1;
  CoreML::Specification::_SoftmaxLayerParams_default_instance_ = (uint64_t)&unk_1F361F030;
  qword_1EC003828 = 0;
  dword_1EC003830 = 0;
  byte_1EC003838 = 1;
  qword_1EC002BD8 = 0;
  unk_1EC002BE0 = 0;
  CoreML::Specification::_SplitLayerParams_default_instance_ = (uint64_t)&unk_1F361DA38;
  dword_1EC002BE8 = 0;
  byte_1EC002BF0 = 1;
  qword_1EC002190 = 0;
  unk_1EC002198 = 0;
  CoreML::Specification::_AddLayerParams_default_instance_ = (uint64_t)&unk_1F361BC88;
  byte_1EC0021A0 = 1;
  qword_1EC0039C8 = 0;
  unk_1EC0039D0 = 0;
  CoreML::Specification::_MultiplyLayerParams_default_instance_ = (uint64_t)&unk_1F361F620;
  byte_1EC0039D8 = 1;
  CoreML::Specification::_UnaryFunctionLayerParams_default_instance_ = (uint64_t)&unk_1F36222A8;
  unk_1EC004C58 = 0u;
  unk_1EC004C48 = 0u;
  byte_1EC004C68 = 1;
  qword_1EC003AD8 = 0;
  unk_1EC003AE0 = 0;
  CoreML::Specification::_UpsampleLayerParams_default_instance_ = (uint64_t)&unk_1F361F918;
  *(void *)algn_1EC003AB8 = 0;
  qword_1EC003AC0 = 0;
  unk_1EC003AC8 = 0;
  unk_1EC003AEC = 0;
  dword_1EC003AF4 = 0;
  byte_1EC003AF8 = 1;
  CoreML::Specification::_ResizeBilinearLayerParams_default_instance_ = (uint64_t)&unk_1F3622800;
  unk_1EC004ED0 = 0;
  qword_1EC004ED8 = 0;
  unk_1EC004EE0 = 0;
  qword_1EC004EF0 = 0;
  dword_1EC004EF8 = 0;
  byte_1EC004F00 = 1;
  CoreML::Specification::_CropResizeLayerParams_default_instance_ = (uint64_t)&unk_1F36203C8;
  *(void *)algn_1EC003E68 = 0;
  qword_1EC003E70 = 0;
  unk_1EC003E78 = 0;
  qword_1EC003E88 = 0;
  unk_1EC003E90 = 0;
  dword_1EC003EA0 = 0;
  qword_1EC003E98 = 0;
  byte_1EC003EA8 = 1;
  CoreML::Specification::_BiasLayerParams_default_instance_ = (uint64_t)&unk_1F361C570;
  unk_1EC002430 = 0;
  qword_1EC002438 = 0;
  unk_1EC002440 = 0;
  qword_1EC002450 = 0;
  dword_1EC002458 = 0;
  byte_1EC002460 = 1;
  qword_1EC002B60 = 0;
  unk_1EC002B68 = 0;
  CoreML::Specification::_ScaleLayerParams_default_instance_ = (uint64_t)&unk_1F361D908;
  unk_1EC002B40 = 0;
  qword_1EC002B48 = 0;
  unk_1EC002B50 = 0;
  qword_1EC002B78 = 0;
  unk_1EC002B80 = 0;
  byte_1EC002B88 = 0;
  dword_1EC002B8C = 0;
  byte_1EC002B90 = 1;
  qword_1EC004740 = 0;
  unk_1EC004748 = 0;
  CoreML::Specification::_LoadConstantLayerParams_default_instance_ = (uint64_t)&unk_1F3621890;
  *(void *)algn_1EC004738 = 0;
  qword_1EC004758 = 0;
  dword_1EC004760 = 0;
  byte_1EC004768 = 1;
  qword_1EC004368 = 0;
  unk_1EC004370 = 0;
  CoreML::Specification::_L2NormalizeLayerParams_default_instance_ = (uint64_t)&unk_1F3621040;
  byte_1EC004378 = 1;
  qword_1EC003098 = 0;
  unk_1EC0030A0 = 0;
  CoreML::Specification::_FlattenLayerParams_default_instance_ = (uint64_t)&unk_1F361EA40;
  byte_1EC0030A8 = 1;
  qword_1EC0037A0 = 0;
  unk_1EC0037A8 = 0;
  CoreML::Specification::_ReshapeLayerParams_default_instance_ = (uint64_t)&unk_1F361EE68;
  *(void *)algn_1EC003798 = 0;
  unk_1EC0037B4 = 0;
  byte_1EC0037C0 = 1;
  qword_1EC003690 = 0;
  unk_1EC003698 = 0;
  CoreML::Specification::_PermuteLayerParams_default_instance_ = (uint64_t)&unk_1F361EC08;
  *(void *)algn_1EC003688 = 0;
  dword_1EC0036A4 = 0;
  byte_1EC0036A8 = 1;
  qword_1EC004E90 = 0;
  unk_1EC004E98 = 0;
  CoreML::Specification::_ReorganizeDataLayerParams_default_instance_ = (uint64_t)&unk_1F36226D0;
  *(void *)algn_1EC004E88 = 0;
  byte_1EC004EA0 = 1;
  CoreML::Specification::_SliceLayerParams_default_instance_ = (uint64_t)&unk_1F361D9A0;
  qword_1EC002BC0 = 0;
  *(_OWORD *)&algn_1EC002BA0[16] = 0u;
  *(_OWORD *)algn_1EC002BA0 = 0u;
  byte_1EC002BC8 = 1;
  qword_1EC002EC0 = 0;
  unk_1EC002EC8 = 0;
  CoreML::Specification::_ReduceLayerParams_default_instance_ = (uint64_t)&unk_1F361E3B8;
  *(void *)algn_1EC002EB8 = 0;
  byte_1EC002ED0 = 1;
  qword_1EC002500 = 0;
  unk_1EC002508 = 0;
  CoreML::Specification::_CropLayerParams_default_instance_ = (uint64_t)&unk_1F361C868;
  *(void *)algn_1EC0024F8 = 0;
  qword_1EC002518 = 0;
  dword_1EC002520 = 0;
  byte_1EC002528 = 1;
  CoreML::Specification::_AverageLayerParams_default_instance_ = (uint64_t)&unk_1F361E7E0;
  qword_1EC002FC8 = 0;
  dword_1EC002FD0 = 0;
  byte_1EC002FD8 = 1;
  CoreML::Specification::_MaxLayerParams_default_instance_ = (uint64_t)&unk_1F361C0B0;
  qword_1EC002328 = 0;
  dword_1EC002330 = 0;
  byte_1EC002338 = 1;
  CoreML::Specification::_MinLayerParams_default_instance_ = (uint64_t)&unk_1F361C148;
  qword_1EC002348 = 0;
  dword_1EC002350 = 0;
  byte_1EC002358 = 1;
  CoreML::Specification::_DotProductLayerParams_default_instance_ = (uint64_t)&unk_1F36204F8;
  unk_1EC003EF0 = 0;
  byte_1EC003EF8 = 0;
  dword_1EC003EFC = 0;
  byte_1EC003F00 = 1;
  dword_1EC005900 = 0;
  qword_1EC0058F0 = 0;
  unk_1EC0058F8 = 0;
  CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_ = (uint64_t)&unk_1F3624350;
  byte_1EC005908 = 1;
  dword_1EC004F20 = 0;
  qword_1EC004F10 = 0;
  unk_1EC004F18 = 0;
  CoreML::Specification::_SequenceRepeatLayerParams_default_instance_ = (uint64_t)&unk_1F3622898;
  byte_1EC004F28 = 1;
  CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_ = (uint64_t)&unk_1F3622F20;
  dword_1EC00518C = 0;
  unk_1EC00517B = 0u;
  unk_1EC005170 = 0u;
  unk_1EC005160 = 0u;
  unk_1EC005150 = 0u;
  byte_1EC005190 = 1;
  CoreML::Specification::_GRULayerParams_default_instance_ = (uint64_t)&unk_1F361BEE8;
  dword_1EC0022A4 = 0;
  unk_1EC002293 = 0u;
  *(_OWORD *)&qword_1EC002288 = 0u;
  *(_OWORD *)&qword_1EC002278 = 0u;
  *(_OWORD *)&qword_1EC002268 = 0u;
  *(_OWORD *)&qword_1EC002258 = 0u;
  *(_OWORD *)&qword_1EC002248 = 0u;
  unk_1EC002238 = 0u;
  unk_1EC002228 = 0u;
  byte_1EC0022A8 = 1;
  dword_1EC001B2C = 0;
  qword_1EC001B18 = 0;
  unk_1EC001B20 = 0;
  CoreML::Specification::_LSTMParams_default_instance_ = (uint64_t)&unk_1F361A268;
  byte_1EC001B28 = 0;
  byte_1EC001B30 = 1;
  CoreML::Specification::_LSTMWeightParams_default_instance_ = (uint64_t)&unk_1F361D740;
  dword_1EC002A50 = 0;
  unk_1EC002A40 = 0u;
  unk_1EC002A30 = 0u;
  unk_1EC002A20 = 0u;
  unk_1EC002A10 = 0u;
  unk_1EC002A00 = 0u;
  unk_1EC0029F0 = 0u;
  unk_1EC0029E0 = 0u;
  unk_1EC0029D0 = 0u;
  byte_1EC002A58 = 1;
  CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_ = (uint64_t)&unk_1F3623C30;
  dword_1EC0056A4 = 0;
  byte_1EC0056A0 = 0;
  unk_1EC005690 = 0u;
  *(_OWORD *)&qword_1EC005680 = 0u;
  *(_OWORD *)&algn_1EC005660[16] = 0u;
  *(_OWORD *)algn_1EC005660 = 0u;
  byte_1EC0056A8 = 1;
  CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_ = (uint64_t)&unk_1F36236D8;
  *(_OWORD *)&algn_1EC0054A8[4] = 0u;
  *(_OWORD *)&qword_1EC0054A0 = 0u;
  unk_1EC005490 = 0u;
  unk_1EC005480 = 0u;
  unk_1EC005470 = 0u;
  unk_1EC005460 = 0u;
  unk_1EC005450 = 0u;
  byte_1EC0054C0 = 1;
  CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_ = (uint64_t)&unk_1F3624CD0;
  unk_1EC005C38 = 0;
  qword_1EC005C48 = 0;
  byte_1EC005C50 = 1;
  qword_1EC005A30 = 0;
  unk_1EC005A38 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC005A40 = 0;
  unk_1EC005A48 = 0;
  dword_1EC005A50 = 0;
  CoreML::Specification::_CustomLayerParams_ParametersEntry_default_instance_ = (uint64_t)&unk_1F3627A30;
  byte_1EC005A58 = 1;
  CoreML::Specification::CustomLayerParams::CustomLayerParams((CoreML::Specification::CustomLayerParams *)&CoreML::Specification::_CustomLayerParams_default_instance_);
}

void CoreML::Specification::CustomLayerParams::CustomLayerParams(CoreML::Specification::CustomLayerParams *this)
{
  *(void *)this = &unk_1F361E028;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::DictVectorizer::New(this, 0) = 0u;
  *((_DWORD *)this + 14) = 0;
  operator new();
}

void sub_1DC0EA3E0(_Unwind_Exception *a1)
{
  char v4 = v3;
  google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::~Map(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)(v2 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AdamOptimizer::GetCachedSize(CoreML::Specification::AdamOptimizer *this)
{
  return *((unsigned int *)this + 14);
}

uint64_t *CoreML::Specification::AdamOptimizer::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    unsigned int v3 = this;
    uint64_t v4 = this[2];
    if (v4) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
    }
    uint64_t v5 = v3[3];
    if (v5) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
    }
    uint64_t v6 = v3[4];
    if (v6) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v6, a2);
    }
    uint64_t v7 = v3[5];
    if (v7) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(4, v7, a2);
    }
    uint64_t v8 = v3[6];
    if (v8)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(5, v8, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::AdamOptimizer::MergePartialFromCodedStream(CoreML::Specification::AdamOptimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_29;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_29;
          }
          uint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 2);
          if (!v9) {
            operator new();
          }
          goto LABEL_26;
        case 2u:
          if (v7 != 18) {
            goto LABEL_29;
          }
          unint64_t v10 = (CoreML::Specification::Int64Parameter *)*((void *)this + 3);
          if (!v10) {
            operator new();
          }
          int v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v19 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
          if (v24 < 0 != v19) {
            return 0;
          }
          int v20 = v22;
          uint64_t result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v10, a2, v23);
          if (!result) {
            return result;
          }
LABEL_38:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20)) {
            return 0;
          }
          break;
        case 3u:
          if (v7 != 26) {
            goto LABEL_29;
          }
          uint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 4);
          if (!v9) {
            operator new();
          }
          goto LABEL_26;
        case 4u:
          if (v7 != 34) {
            goto LABEL_29;
          }
          uint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 5);
          if (!v9) {
            operator new();
          }
          goto LABEL_26;
        case 5u:
          if (v7 != 42) {
            goto LABEL_29;
          }
          uint64_t v9 = (CoreML::Specification::DoubleParameter *)*((void *)this + 6);
          if (!v9) {
            operator new();
          }
LABEL_26:
          uint64_t v13 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
          {
            int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v14 < 0) {
              return 0;
            }
          }
          else
          {
            int v14 = *v13;
            *(void *)a2 = v13 + 1;
          }
          int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
          int v18 = *((_DWORD *)a2 + 13);
          BOOL v19 = __OFSUB__(v18--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
          if (v18 < 0 != v19) {
            return 0;
          }
          int v20 = v16;
          uint64_t result = CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(v9, a2, v17);
          if (result) {
            goto LABEL_38;
          }
          return result;
        default:
          goto LABEL_29;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_29:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0EA7C8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::AdamOptimizer::MergeFrom(std::string *this, const CoreML::Specification::AdamOptimizer *a2)
{
  unsigned int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      uint64_t v5 = (std::string *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::DoubleParameter::MergeFrom(v5, *((const CoreML::Specification::DoubleParameter **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::Int64Parameter::MergeFrom(data, *((const CoreML::Specification::Int64Parameter **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      std::string::size_type size = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = CoreML::Specification::DoubleParameter::MergeFrom(size, *((const CoreML::Specification::DoubleParameter **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      uint64_t v8 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v8) {
        operator new();
      }
      this = CoreML::Specification::DoubleParameter::MergeFrom(v8, *((const CoreML::Specification::DoubleParameter **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      if (!v3[2].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v9 = (const CoreML::Specification::DoubleParameter *)*((void *)a2 + 6);
      unint64_t v10 = (std::string *)v3[2].__r_.__value_.__l.__data_;
      return CoreML::Specification::DoubleParameter::MergeFrom(v10, v9);
    }
  }
  return this;
}

void sub_1DC0EA9F8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AdamOptimizer::IsInitialized(CoreML::Specification::AdamOptimizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::AdamOptimizer::Clear(CoreML::Specification::AdamOptimizer *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

void CoreML::Specification::AdamOptimizer::New(CoreML::Specification::AdamOptimizer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0EAB98(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

CoreML::Specification::AdamOptimizer *CoreML::Specification::AdamOptimizer::AdamOptimizer(CoreML::Specification::AdamOptimizer *this)
{
  *(void *)this = &unk_1F361B730;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 44) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1DC0EAC24(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::AdamOptimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::AdamOptimizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::AdamOptimizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::AdamOptimizer::New(CoreML::Specification::AdamOptimizer *this)
{
}

void *CoreML::Specification::AdamOptimizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AdamOptimizer");
}

void CoreML::Specification::AdamOptimizer::~AdamOptimizer(CoreML::Specification::AdamOptimizer *this)
{
  CoreML::Specification::AdamOptimizer::~AdamOptimizer(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(void *)this = &unk_1F361B730;
  if (this != (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    unint64_t v5 = *((void *)this + 5);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 6);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SGDOptimizer::GetCachedSize(CoreML::Specification::SGDOptimizer *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t *CoreML::Specification::SGDOptimizer::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    uint64_t v3 = this;
    uint64_t v4 = this[2];
    if (v4) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
    }
    uint64_t v5 = v3[3];
    if (v5) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
    }
    uint64_t v6 = v3[4];
    if (v6)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v6, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::SGDOptimizer::MergePartialFromCodedStream(CoreML::Specification::SGDOptimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_28;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 == 3)
      {
        if (v7 != 26) {
          goto LABEL_28;
        }
        int v11 = (CoreML::Specification::DoubleParameter *)*((void *)this + 4);
        if (!v11) {
          operator new();
        }
        goto LABEL_19;
      }
      if (v9 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_28;
      }
      int v14 = (CoreML::Specification::Int64Parameter *)*((void *)this + 3);
      if (!v14) {
        operator new();
      }
      unint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v21 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
      if (v26 < 0 != v21) {
        return 0;
      }
      int v22 = v24;
      uint64_t result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v14, a2, v25);
      if (!result) {
        return result;
      }
LABEL_41:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22)) {
        return 0;
      }
    }
    if (v9 == 1 && v7 == 10)
    {
      int v11 = (CoreML::Specification::DoubleParameter *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
LABEL_19:
      BOOL v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int v13 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v13 < 0) {
          return 0;
        }
      }
      else
      {
        int v13 = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v13);
      int v20 = *((_DWORD *)a2 + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      uint64_t result = CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(v11, a2, v19);
      if (!result) {
        return result;
      }
      goto LABEL_41;
    }
LABEL_28:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0EB11C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SGDOptimizer::MergeFrom(std::string *this, const CoreML::Specification::SGDOptimizer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      uint64_t v5 = (std::string *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::DoubleParameter::MergeFrom(v5, *((const CoreML::Specification::DoubleParameter **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::Int64Parameter::MergeFrom(data, *((const CoreML::Specification::Int64Parameter **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      if (!v3[1].__r_.__value_.__l.__size_) {
        operator new();
      }
      unint64_t v7 = (const CoreML::Specification::DoubleParameter *)*((void *)a2 + 4);
      std::string::size_type size = (std::string *)v3[1].__r_.__value_.__l.__size_;
      return CoreML::Specification::DoubleParameter::MergeFrom(size, v7);
    }
  }
  return this;
}

void sub_1DC0EB2A0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SGDOptimizer::IsInitialized(CoreML::Specification::SGDOptimizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::SGDOptimizer::Clear(CoreML::Specification::SGDOptimizer *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

void CoreML::Specification::SGDOptimizer::New(CoreML::Specification::SGDOptimizer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0EB3D8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C400A278675);
  _Unwind_Resume(a1);
}

CoreML::Specification::SGDOptimizer *CoreML::Specification::SGDOptimizer::SGDOptimizer(CoreML::Specification::SGDOptimizer *this)
{
  *(void *)this = &unk_1F361B308;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 1CoreML::Specification::AdamOptimizer::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0EB464(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SGDOptimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SGDOptimizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SGDOptimizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SGDOptimizer::New(CoreML::Specification::SGDOptimizer *this)
{
}

void *CoreML::Specification::SGDOptimizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SGDOptimizer");
}

void CoreML::Specification::SGDOptimizer::~SGDOptimizer(CoreML::Specification::SGDOptimizer *this)
{
  CoreML::Specification::SGDOptimizer::~SGDOptimizer(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(void *)this = &unk_1F361B308;
  if (this != (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Optimizer::GetCachedSize(CoreML::Specification::Optimizer *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::Optimizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 10)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(10, *(void *)(this + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 11)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(11, v5, a2);
  }
  return this;
}

uint64_t CoreML::Specification::Optimizer::MergePartialFromCodedStream(CoreML::Specification::Optimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_15;
      }
LABEL_7:
      if (v7 >> 3 == 11)
      {
        if (v7 != 90) {
          goto LABEL_15;
        }
        if (*((_DWORD *)this + 7) != 11)
        {
          CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
          *((_DWORD *)this + 7) = 11;
          operator new();
        }
        unint64_t v10 = (CoreML::Specification::AdamOptimizer *)*((void *)this + 2);
        int v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v14;
          *(void *)a2 = v14 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v19 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
        if (v24 < 0 != v19) {
          return 0;
        }
        int v20 = v22;
        uint64_t result = CoreML::Specification::AdamOptimizer::MergePartialFromCodedStream(v10, a2, v23);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v7 >> 3 != 10 || v7 != 82) {
          goto LABEL_15;
        }
        if (*((_DWORD *)this + 7) != 10)
        {
          CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
          *((_DWORD *)this + 7) = 10;
          operator new();
        }
        unsigned int v9 = (CoreML::Specification::SGDOptimizer *)*((void *)this + 2);
        BOOL v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
        {
          int v13 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v13 < 0) {
            return 0;
          }
        }
        else
        {
          int v13 = *v12;
          *(void *)a2 = v12 + 1;
        }
        int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v13);
        int v18 = *((_DWORD *)a2 + 13);
        BOOL v19 = __OFSUB__(v18--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
        if (v18 < 0 != v19) {
          return 0;
        }
        int v20 = v16;
        uint64_t result = CoreML::Specification::SGDOptimizer::MergePartialFromCodedStream(v9, a2, v17);
        if (!result) {
          return result;
        }
      }
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20)) {
        return 0;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_15:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0EB8F0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Optimizer::clear_OptimizerType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 11 || v2 == 10)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

std::string *CoreML::Specification::Optimizer::MergeFrom(std::string *this, const CoreML::Specification::Optimizer *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 == 11)
  {
    if (*(_DWORD *)(v3 + 28) != 11)
    {
      CoreML::Specification::Optimizer::clear_OptimizerType(v3);
      *(_DWORD *)(v3 + 28) = 11;
      operator new();
    }
    unint64_t v7 = (const CoreML::Specification::AdamOptimizer *)*((void *)a2 + 2);
    unsigned int v9 = *(std::string **)(v3 + 16);
    return CoreML::Specification::AdamOptimizer::MergeFrom(v9, v7);
  }
  else if (v5 == 10)
  {
    if (*(_DWORD *)(v3 + 28) != 10)
    {
      CoreML::Specification::Optimizer::clear_OptimizerType(v3);
      *(_DWORD *)(v3 + 28) = 10;
      operator new();
    }
    uint64_t v6 = (const CoreML::Specification::SGDOptimizer *)*((void *)a2 + 2);
    uint64_t v8 = *(std::string **)(v3 + 16);
    return CoreML::Specification::SGDOptimizer::MergeFrom(v8, v6);
  }
  return this;
}

void sub_1DC0EBAFC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Optimizer::IsInitialized(CoreML::Specification::Optimizer *this)
{
  return 1;
}

void CoreML::Specification::Optimizer::New(CoreML::Specification::Optimizer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0EBB94(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::Optimizer *CoreML::Specification::Optimizer::Optimizer(CoreML::Specification::Optimizer *this)
{
  *(void *)this = &unk_1F3626788;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Optimizer *)&CoreML::Specification::_Optimizer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0EBC18(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Optimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Optimizer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Optimizer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Optimizer::New(CoreML::Specification::Optimizer *this)
{
}

void *CoreML::Specification::Optimizer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Optimizer");
}

void CoreML::Specification::Optimizer::~Optimizer(CoreML::Specification::Optimizer *this)
{
  CoreML::Specification::Optimizer::~Optimizer(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3626788;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::GetCachedSize(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::SerializeWithCachedSizes(CoreML::Specification::MeanSquaredErrorLossLayer *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.MeanSquaredErrorLossLayer.input");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  uint64_t result = *((void *)this + 3);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v7) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.MeanSquaredErrorLossLayer.target");
  uint64_t v8 = *((void *)this + 3);
  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, v8, a2);
}

BOOL CoreML::Specification::MeanSquaredErrorLossLayer::MergePartialFromCodedStream(CoreML::Specification::MeanSquaredErrorLossLayer *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 24);
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_25;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_25;
      }
LABEL_8:
      if (v8 >> 3 != 2) {
        break;
      }
      if (v8 != 18) {
        goto LABEL_25;
      }
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v4);
      if (!result) {
        return result;
      }
      BOOL v12 = *v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v15 = "CoreML.Specification.MeanSquaredErrorLossLayer.target";
LABEL_35:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v12, size, 0, (uint64_t)v15)) {
        return 0;
      }
    }
    if (v8 >> 3 == 1 && v8 == 10)
    {
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      BOOL v12 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v15 = "CoreML.Specification.MeanSquaredErrorLossLayer.input";
      goto LABEL_35;
    }
LABEL_25:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::IsInitialized(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  return 1;
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v2 = *(void *)(this + 24);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  return this;
}

void CoreML::Specification::MeanSquaredErrorLossLayer::New(CoreML::Specification::MeanSquaredErrorLossLayer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0EC088(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

CoreML::Specification::MeanSquaredErrorLossLayer *CoreML::Specification::MeanSquaredErrorLossLayer::MeanSquaredErrorLossLayer(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  *(void *)this = &unk_1F3622638;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MeanSquaredErrorLossLayer *)&CoreML::Specification::_MeanSquaredErrorLossLayer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0EC118(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MeanSquaredErrorLossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MeanSquaredErrorLossLayer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MeanSquaredErrorLossLayer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MeanSquaredErrorLossLayer::New(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
}

void *CoreML::Specification::MeanSquaredErrorLossLayer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MeanSquaredErrorLossLayer");
}

void CoreML::Specification::MeanSquaredErrorLossLayer::~MeanSquaredErrorLossLayer(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  *(void *)this = &unk_1F3622638;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1F3622638;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::GetCachedSize(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::SerializeWithCachedSizes(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.CategoricalCrossEntropyLossLayer.input");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  uint64_t result = *((void *)this + 3);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      return result;
    }
    uint64_t result = *(void *)result;
  }
  else
  {
    LODWORD(v7) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      return result;
    }
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.CategoricalCrossEntropyLossLayer.target");
  uint64_t v8 = *((void *)this + 3);
  return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, v8, a2);
}

BOOL CoreML::Specification::CategoricalCrossEntropyLossLayer::MergePartialFromCodedStream(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 24);
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_25;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_25;
      }
LABEL_8:
      if (v8 >> 3 != 2) {
        break;
      }
      if (v8 != 18) {
        goto LABEL_25;
      }
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v4);
      if (!result) {
        return result;
      }
      BOOL v12 = *v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v15 = "CoreML.Specification.CategoricalCrossEntropyLossLayer.target";
LABEL_35:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v12, size, 0, (uint64_t)v15)) {
        return 0;
      }
    }
    if (v8 >> 3 == 1 && v8 == 10)
    {
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      BOOL v12 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v12 = (std::string *)v12->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      unint64_t v15 = "CoreML.Specification.CategoricalCrossEntropyLossLayer.input";
      goto LABEL_35;
    }
LABEL_25:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::IsInitialized(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  return 1;
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  uint64_t v2 = *(void *)(this + 24);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  return this;
}

void CoreML::Specification::CategoricalCrossEntropyLossLayer::New(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0EC5B0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

CoreML::Specification::CategoricalCrossEntropyLossLayer *CoreML::Specification::CategoricalCrossEntropyLossLayer::CategoricalCrossEntropyLossLayer(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  *(void *)this = &unk_1F3624220;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CategoricalCrossEntropyLossLayer *)&CoreML::Specification::_CategoricalCrossEntropyLossLayer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0EC640(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CategoricalCrossEntropyLossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalCrossEntropyLossLayer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalCrossEntropyLossLayer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CategoricalCrossEntropyLossLayer::New(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
}

void *CoreML::Specification::CategoricalCrossEntropyLossLayer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CategoricalCrossEntropyLossLayer");
}

void CoreML::Specification::CategoricalCrossEntropyLossLayer::~CategoricalCrossEntropyLossLayer(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  *(void *)this = &unk_1F3624220;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1F3624220;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

uint64_t CoreML::Specification::LossLayer::GetCachedSize(CoreML::Specification::LossLayer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::LossLayer::SerializeWithCachedSizes(CoreML::Specification::LossLayer *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  LODWORD(v5) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v5, 1, (uint64_t)"CoreML.Specification.LossLayer.name");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  int v6 = *((_DWORD *)this + 9);
  if (v6 == 10)
  {
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage(10, *((void *)this + 3), a2);
    int v6 = *((_DWORD *)this + 9);
  }
  if (v6 == 11)
  {
    uint64_t v7 = *((void *)this + 3);
    return google::protobuf::internal::WireFormatLite::WriteMessage(11, v7, a2);
  }
  return result;
}

BOOL CoreML::Specification::LossLayer::MergePartialFromCodedStream(CoreML::Specification::LossLayer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_26;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_26;
        }
LABEL_8:
        unsigned int v10 = v8 >> 3;
        if (v8 >> 3 == 11)
        {
          if (v8 != 90) {
            goto LABEL_26;
          }
          if (*((_DWORD *)this + 9) != 11)
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            operator new();
          }
          unint64_t v15 = (CoreML::Specification::MeanSquaredErrorLossLayer *)*((void *)this + 3);
          int v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          BOOL result = CoreML::Specification::MeanSquaredErrorLossLayer::MergePartialFromCodedStream(v15, (char **)a2, v23);
          if (!result) {
            return result;
          }
          goto LABEL_47;
        }
        if (v10 != 10) {
          break;
        }
        if (v8 != 82) {
          goto LABEL_26;
        }
        if (*((_DWORD *)this + 9) != 10)
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          operator new();
        }
        int v16 = (CoreML::Specification::CategoricalCrossEntropyLossLayer *)*((void *)this + 3);
        int v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v21 < 0) {
            return 0;
          }
        }
        else
        {
          int v21 = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
        int v29 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
        if (v29 < 0 != v25) {
          return 0;
        }
        int v26 = v27;
        BOOL result = CoreML::Specification::CategoricalCrossEntropyLossLayer::MergePartialFromCodedStream(v16, (char **)a2, v28);
        if (!result) {
          return result;
        }
LABEL_47:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
          return 0;
        }
      }
      if (v10 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
      if (!result) {
        return result;
      }
      int v13 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v13 = *(unsigned int **)v13;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, size, 0, (uint64_t)"CoreML.Specification.LossLayer.name"))return 0; {
    }
      }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0ECB40(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::LossLayer::MergeFrom(std::string *this, const CoreML::Specification::LossLayer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  int v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  int v7 = *((_DWORD *)a2 + 9);
  if (v7 == 11)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[1]) != 11)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)v3);
      HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = 11;
      operator new();
    }
    unint64_t v8 = (const CoreML::Specification::SerializedModel *)*((void *)a2 + 3);
    data = (std::string *)v3[1].__r_.__value_.__l.__data_;
    return CoreML::Specification::SerializedModel::MergeFrom(data, v8);
  }
  if (v7 == 10)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[1]) != 10)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)v3);
      HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = 10;
      operator new();
    }
    unint64_t v8 = (const CoreML::Specification::SerializedModel *)*((void *)a2 + 3);
    data = (std::string *)v3[1].__r_.__value_.__l.__data_;
    return CoreML::Specification::SerializedModel::MergeFrom(data, v8);
  }
  return this;
}

void sub_1DC0ECD28(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LossLayer::IsInitialized(CoreML::Specification::LossLayer *this)
{
  return 1;
}

uint64_t CoreML::Specification::LossLayer::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
    }
  }
  return CoreML::Specification::Int64Parameter::clear_AllowedValues(this);
}

void CoreML::Specification::LossLayer::New(CoreML::Specification::LossLayer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0ECDE4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::LossLayer *CoreML::Specification::LossLayer::LossLayer(CoreML::Specification::LossLayer *this)
{
  *(void *)this = &unk_1F36266F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LossLayer *)&CoreML::Specification::_LossLayer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0ECE74(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::LossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::LossLayer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::LossLayer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::LossLayer::New(CoreML::Specification::LossLayer *this)
{
}

void *CoreML::Specification::LossLayer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LossLayer");
}

void CoreML::Specification::LossLayer::~LossLayer(CoreML::Specification::LossLayer *this)
{
  CoreML::Specification::LossLayer::~LossLayer(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F36266F0;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::NetworkUpdateParameters::GetCachedSize(CoreML::Specification::NetworkUpdateParameters *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t CoreML::Specification::NetworkUpdateParameters::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = (uint64_t *)this;
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    for (int i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(v3[4] + 8 * i + 8), a2);
  }
  if (v3 != &CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    uint64_t v6 = v3[5];
    if (v6) {
      this = google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
    }
    uint64_t v7 = v3[6];
    if (v7) {
      this = google::protobuf::internal::WireFormatLite::WriteMessage(3, v7, a2);
    }
    uint64_t v8 = v3[7];
    if (v8) {
      this = google::protobuf::internal::WireFormatLite::WriteMessage(10, v8, a2);
    }
    uint64_t v9 = v3[8];
    if (v9)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage(20, v9, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(CoreML::Specification::NetworkUpdateParameters *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (CoreML::Specification::NetworkUpdateParameters *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v6 = *(unsigned __int8 **)a2;
    unint64_t v7 = *((void *)a2 + 1);
    if (*(void *)a2 >= v7)
    {
      LODWORD(v9) = 0;
      goto LABEL_67;
    }
    uint64_t v8 = v6 + 1;
    uint64_t v9 = *v6;
    if ((char)*v6 >= 1)
    {
      *(void *)a2 = v8;
      unint64_t v10 = v9 | 0x100000000;
      if ((v10 & 0x100000000) != 0) {
        goto LABEL_9;
      }
      goto LABEL_68;
    }
    if ((unint64_t)v8 < v7)
    {
      int v11 = *v8;
      if ((v9 & ~v11) >= 0x80) {
        break;
      }
    }
LABEL_67:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
    unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v10 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_68:
    if (v10) {
      BOOL v49 = (v10 & 7) == 4;
    }
    else {
      BOOL v49 = 1;
    }
    if (v49) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      goto LABEL_73;
    }
  }
  *(void *)a2 = v6 + 2;
  unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
LABEL_9:
  switch(v10 >> 3)
  {
    case 1u:
      if (v10 != 10) {
        goto LABEL_68;
      }
      BOOL v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_50:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          BOOL v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_53;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_58;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_50;
      }
LABEL_53:
      int *v12 = v14 + 1;
      uint64_t v37 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::LossLayer::LossLayer((CoreML::Specification::LossLayer *)Aligned);
      uint64_t v38 = google::protobuf::Arena::AllocateAligned(v37, 0, 24);
      _OWORD *v38 = (google::protobuf::Arena *)Aligned;
      v38[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>;
      int v39 = (unint64_t *)((char *)v37 + 32);
      do
        unint64_t v40 = __ldxr(v39);
      while (__stxr((unint64_t)v38, v39));
      v38[2] = (google::protobuf::Arena *)v40;
      uint64_t v41 = *((void *)this + 4);
      uint64_t v42 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v42 + 1;
      *(void *)(v41 + 8 * v42 + 8) = Aligned;
LABEL_58:
      int v43 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v43 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v43;
        *(void *)a2 = v43 + 1;
      }
      int v45 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v47 = *((_DWORD *)a2 + 13);
      BOOL v28 = __OFSUB__(v47--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v47;
      if (v47 < 0 == v28)
      {
        int v29 = v45;
        uint64_t result = CoreML::Specification::LossLayer::MergePartialFromCodedStream((CoreML::Specification::LossLayer *)Aligned, a2, v46);
        if (!result) {
          return result;
        }
LABEL_64:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29)) {
          goto LABEL_2;
        }
      }
LABEL_73:
      uint64_t result = 0;
      break;
    case 2u:
      if (v10 != 18) {
        goto LABEL_68;
      }
      unsigned int v17 = (CoreML::Specification::Optimizer *)*((void *)this + 5);
      if (!v17) {
        operator new();
      }
      int v18 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
      {
        int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v19 < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int v19 = *v18;
        *(void *)a2 = v18 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
      int v33 = *((_DWORD *)a2 + 13);
      BOOL v28 = __OFSUB__(v33--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v33;
      if (v33 < 0 != v28) {
        goto LABEL_73;
      }
      int v29 = v31;
      uint64_t result = CoreML::Specification::Optimizer::MergePartialFromCodedStream(v17, a2, v32);
      if (!result) {
        return result;
      }
      goto LABEL_64;
    case 3u:
      if (v10 != 26) {
        goto LABEL_68;
      }
      int v16 = (CoreML::Specification::Int64Parameter *)*((void *)this + 6);
      if (!v16) {
        operator new();
      }
      goto LABEL_27;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
      goto LABEL_68;
    case 0xAu:
      if (v10 != 82) {
        goto LABEL_68;
      }
      int v22 = (CoreML::Specification::BoolParameter *)*((void *)this + 7);
      if (!v22) {
        operator new();
      }
      unsigned int v23 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
      {
        int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v24 < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int v24 = *v23;
        *(void *)a2 = v23 + 1;
      }
      int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
      int v36 = *((_DWORD *)a2 + 13);
      BOOL v28 = __OFSUB__(v36--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v36;
      if (v36 < 0 != v28) {
        goto LABEL_73;
      }
      int v29 = v34;
      uint64_t result = CoreML::Specification::BoolParameter::MergePartialFromCodedStream(v22, (char **)a2, v35);
      if (!result) {
        return result;
      }
      goto LABEL_64;
    default:
      if (v10 >> 3 != 20 || v10 != 162) {
        goto LABEL_68;
      }
      int v16 = (CoreML::Specification::Int64Parameter *)*((void *)this + 8);
      if (!v16) {
        operator new();
      }
LABEL_27:
      int v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v21 < 0) {
          goto LABEL_73;
        }
      }
      else
      {
        int v21 = *v20;
        *(void *)a2 = v20 + 1;
      }
      int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
      int v27 = *((_DWORD *)a2 + 13);
      BOOL v28 = __OFSUB__(v27--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v27;
      if (v27 < 0 != v28) {
        goto LABEL_73;
      }
      int v29 = v25;
      uint64_t result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v16, a2, v26);
      if (!result) {
        return result;
      }
      goto LABEL_64;
  }
  return result;
}

void sub_1DC0ED59C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *CoreML::Specification::NetworkUpdateParameters::MergeFrom(std::string *this, const CoreML::Specification::NetworkUpdateParameters *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v35 = *((void *)a2 + 4);
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    int v34 = this;
    uint64_t v6 = *(int *)v3[1].__r_.__value_.__l.__size_;
    uint64_t data_low = SLODWORD(v3[1].__r_.__value_.__l.__data_);
    int v8 = v6 - data_low;
    if ((int)v6 - (int)data_low >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      unint64_t v10 = (std::string **)this;
      int v11 = (CoreML::Specification::LossLayer **)(v35 + 8);
      do
      {
        int v13 = *v11++;
        BOOL v12 = v13;
        int v14 = *v10++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      unint64_t v15 = (google::protobuf::Arena *)v3->__r_.__value_.__r.__words[2];
      int v16 = data_low + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * data_low;
      int v18 = (google::protobuf::Arena ***)((char *)v34 + v17);
      int v19 = (CoreML::Specification::LossLayer **)(v17 + v35 + 8);
      do
      {
        int v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::LossLayer::LossLayer((CoreML::Specification::LossLayer *)Aligned);
        int v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *int v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>;
        unsigned int v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(v20, (std::string *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v25;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v25) {
      *std::string::size_type size = v25;
    }
  }
  if (a2 != (const CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      int v27 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v27) {
        operator new();
      }
      this = CoreML::Specification::Optimizer::MergeFrom(v27, *((const CoreML::Specification::Optimizer **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::Int64Parameter::MergeFrom(data, *((const CoreML::Specification::Int64Parameter **)a2 + 6));
    }
    if (*((void *)a2 + 7))
    {
      std::string::size_type v29 = v3[2].__r_.__value_.__l.__size_;
      if (!v29) {
        operator new();
      }
      uint64_t v30 = *((void *)a2 + 7);
      uint64_t v31 = *(void *)(v30 + 8);
      if (v31) {
        this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v29 + 8), v31 & 0xFFFFFFFFFFFFFFFELL);
      }
      if (*(unsigned char *)(v30 + 16)) {
        *(unsigned char *)(v29 + 16) = 1;
      }
    }
    if (*((void *)a2 + 8))
    {
      unsigned int v32 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      if (!v32) {
        operator new();
      }
      int v33 = (const CoreML::Specification::Int64Parameter *)*((void *)a2 + 8);
      return CoreML::Specification::Int64Parameter::MergeFrom(v32, v33);
    }
  }
  return this;
}

void sub_1DC0ED994(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(CoreML::Specification::LossLayer *a1, std::string *this)
{
  return CoreML::Specification::LossLayer::MergeFrom(this, a1);
}

uint64_t CoreML::Specification::NetworkUpdateParameters::IsInitialized(CoreML::Specification::NetworkUpdateParameters *this)
{
  return 1;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::Clear(CoreML::Specification::NetworkUpdateParameters *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::LossLayer::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

void CoreML::Specification::NetworkUpdateParameters::New(CoreML::Specification::NetworkUpdateParameters *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0EDB7C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

CoreML::Specification::NetworkUpdateParameters *CoreML::Specification::NetworkUpdateParameters::NetworkUpdateParameters(CoreML::Specification::NetworkUpdateParameters *this)
{
  *(void *)this = &unk_1F36219C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::LossLayer::New(this, 0) = 0u;
  return this;
}

void sub_1DC0EDC20(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NetworkUpdateParameters>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NetworkUpdateParameters>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NetworkUpdateParameters>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::NetworkUpdateParameters::New(CoreML::Specification::NetworkUpdateParameters *this)
{
}

void *CoreML::Specification::NetworkUpdateParameters::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NetworkUpdateParameters");
}

void CoreML::Specification::NetworkUpdateParameters::~NetworkUpdateParameters(CoreML::Specification::NetworkUpdateParameters *this)
{
  CoreML::Specification::NetworkUpdateParameters::~NetworkUpdateParameters(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(void *)this = &unk_1F36219C0;
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    unint64_t v5 = *((void *)this + 8);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::GetCachedSize(CoreML::Specification::NeuralNetworkRegressor *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2);
  }
  int v8 = *(_DWORD *)(v5 + 48);
  if (v8)
  {
    for (int j = 0; j != v8; ++j)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(*(void *)(v5 + 56) + 8 * j + 8), a2);
  }
  signed int v10 = *(_DWORD *)(v5 + 72);
  if (v10) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(5, v10, a2, a4);
  }
  signed int v11 = *(_DWORD *)(v5 + 76);
  if (v11) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(6, v11, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_NeuralNetworkRegressor_default_instance_)
  {
    uint64_t v12 = *(void *)(v5 + 64);
    if (v12)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage(10, v12, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::ByteSizeLong(CoreML::Specification::NeuralNetworkRegressor *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(*(CoreML::Specification::NeuralNetworkLayer **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(*(CoreML::Specification::NeuralNetworkPreprocessing **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  if (this != (CoreML::Specification::NeuralNetworkRegressor *)&CoreML::Specification::_NeuralNetworkRegressor_default_instance_)
  {
    signed int v10 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
    if (v10)
    {
      uint64_t v11 = CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = 11;
  int v13 = *((_DWORD *)this + 18);
  int v14 = *((_DWORD *)this + 19);
  uint64_t v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0) {
    uint64_t v12 = v15;
  }
  uint64_t v16 = v12 + v7;
  if (!v13) {
    uint64_t v16 = v7;
  }
  uint64_t v17 = 11;
  uint64_t v18 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v14 >= 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v17 + v16;
  if (v14) {
    uint64_t result = v19;
  }
  else {
    uint64_t result = v16;
  }
  *((_DWORD *)this + 2CoreML::Specification::NetworkUpdateParameters::New(this, 0) = result;
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::NeuralNetworkRegressor *)((char *)this + 40);
  uint64_t v6 = (CoreML::Specification::NeuralNetworkRegressor *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_7:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_8;
          }
          uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(v6);
          int v13 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v13;
            *(void *)a2 = v13 + 1;
          }
          int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v27 = *((_DWORD *)a2 + 13);
          BOOL v28 = __OFSUB__(v27--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v27;
          if (v27 < 0 != v28) {
            return 0;
          }
          int v29 = v25;
          uint64_t result = CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream((CoreML::Specification::NeuralNetworkLayer *)v12, a2, v26);
          if (!result) {
            return result;
          }
          goto LABEL_48;
        case 2u:
          if (v9 != 18) {
            goto LABEL_8;
          }
          uint64_t v15 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v5);
          uint64_t v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v17 < 0) {
              return 0;
            }
          }
          else
          {
            int v17 = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
          int v33 = *((_DWORD *)a2 + 13);
          BOOL v28 = __OFSUB__(v33--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v33;
          if (v33 < 0 != v28) {
            return 0;
          }
          int v29 = v31;
          uint64_t result = CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream((CoreML::Specification::NeuralNetworkPreprocessing *)v15, a2, v32);
          if (!result) {
            return result;
          }
          goto LABEL_48;
        case 5u:
          if (v9 != 40) {
            goto LABEL_8;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v19 = 0;
          }
          else
          {
            int v19 = *v18;
            if ((*v18 & 0x80000000) == 0)
            {
              *(void *)a2 = v18 + 1;
              goto LABEL_52;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          int v19 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_52:
          *((_DWORD *)this + 18) = v19;
          continue;
        case 6u:
          if (v9 != 48) {
            goto LABEL_8;
          }
          int v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v21 = 0;
          }
          else
          {
            int v21 = *v20;
            if ((*v20 & 0x80000000) == 0)
            {
              *(void *)a2 = v20 + 1;
              goto LABEL_55;
            }
          }
          uint64_t v38 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v21);
          int v21 = v38;
          if (v38 < 0) {
            return 0;
          }
LABEL_55:
          *((_DWORD *)this + 19) = v21;
          break;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_8;
          }
          int v22 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
          if (!v22) {
            operator new();
          }
          unsigned int v23 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
          {
            int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v24 < 0) {
              return 0;
            }
          }
          else
          {
            int v24 = *v23;
            *(void *)a2 = v23 + 1;
          }
          int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
          int v36 = *((_DWORD *)a2 + 13);
          BOOL v28 = __OFSUB__(v36--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v36;
          if (v36 < 0 != v28) {
            return 0;
          }
          int v29 = v34;
          uint64_t result = CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(v22, a2, v35);
          if (!result) {
            return result;
          }
LABEL_48:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_14;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0EE3CC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  int v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      int v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *int v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer((CoreML::Specification::NeuralNetworkLayer *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  char *v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkLayer>;
  uint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1DC0EE544(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40665201BALL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkLayer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (_DWORD *)((char *)this + 140);
  uint64_t v6 = (CoreML::Specification::CategoricalDistributionLayerParams **)((char *)this + 128);
  uint64_t v7 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 88);
  uint64_t v8 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 64);
  v1111 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 40);
  unint64_t v9 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 16);
  uint64_t v10 = (std::string **)((char *)this + 112);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            while (1)
            {
              while (1)
              {
LABEL_2:
                uint64_t v11 = *(unsigned __int8 **)a2;
                unint64_t v12 = *((void *)a2 + 1);
                if (*(void *)a2 >= v12)
                {
                  LODWORD(v14) = 0;
                }
                else
                {
                  int v13 = v11 + 1;
                  uint64_t v14 = *v11;
                  if ((char)*v11 >= 1)
                  {
                    *(void *)a2 = v13;
                    unint64_t v15 = v14 | 0x100000000;
                    if ((v15 & 0x100000000) == 0) {
                      goto LABEL_9;
                    }
                    goto LABEL_17;
                  }
                  if ((unint64_t)v13 < v12)
                  {
                    int v16 = *v13;
                    if ((v14 & ~v16) >= 0x80)
                    {
                      *(void *)a2 = v11 + 2;
                      unint64_t v15 = (v14 + (v16 << 7) - 128) | 0x100000000;
                      goto LABEL_17;
                    }
                  }
                }
                unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v14);
                unint64_t v15 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
                if ((v15 & 0x100000000) == 0) {
                  goto LABEL_9;
                }
LABEL_17:
                unsigned int v19 = v15 >> 3;
                if (v15 >> 3 <= 0x360) {
                  break;
                }
                if (v15 >> 3 > 0x469)
                {
                  if (v15 >> 3 <= 0x4F5)
                  {
                    if (v15 >> 3 > 0x4AA)
                    {
                      if (v15 >> 3 > 0x4CD)
                      {
                        if (v15 >> 3 <= 0x4E6)
                        {
                          if (v19 == 1230)
                          {
                            if (v15 != 114) {
                              goto LABEL_9;
                            }
                            if (*v5 != 1230)
                            {
                              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                              *((_DWORD *)this + 35) = 1230;
                              operator new();
                            }
                            v230 = *v6;
                            v448 = *(char **)a2;
                            if (*(void *)a2 >= *((void *)a2 + 1) || *v448 < 0)
                            {
                              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                              if (VarintSizeAsIntFallback < 0) {
                                return 0;
                              }
                            }
                            else
                            {
                              int VarintSizeAsIntFallback = *v448;
                              *(void *)a2 = v448 + 1;
                            }
                            int v1051 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                            int v1053 = *((_DWORD *)a2 + 13);
                            BOOL v244 = __OFSUB__(v1053--, 1);
                            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1053;
                            if (v1053 < 0 != v244) {
                              return 0;
                            }
                            int v1054 = v1051;
                            uint64_t result = CoreML::Specification::CategoricalDistributionLayerParams::MergePartialFromCodedStream(v230, (char **)a2, v1052);
                            if (!result) {
                              return result;
                            }
                            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1054)) {
                              return 0;
                            }
                          }
                          else
                          {
                            if (v19 != 1250 || v15 != 18) {
                              goto LABEL_9;
                            }
                            if (*v5 != 1250)
                            {
                              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                              *((_DWORD *)this + 35) = 1250;
                              operator new();
                            }
                            v95 = *v6;
                            v340 = *(char **)a2;
                            if (*(void *)a2 >= *((void *)a2 + 1) || *v340 < 0)
                            {
                              int v341 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                              if (v341 < 0) {
                                return 0;
                              }
                            }
                            else
                            {
                              int v341 = *v340;
                              *(void *)a2 = v340 + 1;
                            }
                            int v840 = google::protobuf::io::CodedInputStream::PushLimit(a2, v341);
                            int v842 = *((_DWORD *)a2 + 13);
                            BOOL v244 = __OFSUB__(v842--, 1);
                            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v842;
                            if (v842 < 0 != v244) {
                              return 0;
                            }
                            int v843 = v840;
                            uint64_t result = CoreML::Specification::ReduceL1LayerParams::MergePartialFromCodedStream(v95, a2, v841);
                            if (!result) {
                              return result;
                            }
                            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v843)) {
                              return 0;
                            }
                          }
                        }
                        else if (v19 == 1255)
                        {
                          if (v15 != 58) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1255)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1255;
                            operator new();
                          }
                          v188 = *v6;
                          v400 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v400 < 0)
                          {
                            int v401 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v401 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v401 = *v400;
                            *(void *)a2 = v400 + 1;
                          }
                          int v957 = google::protobuf::io::CodedInputStream::PushLimit(a2, v401);
                          int v959 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v959--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v959;
                          if (v959 < 0 != v244) {
                            return 0;
                          }
                          int v960 = v957;
                          uint64_t result = CoreML::Specification::ReduceL2LayerParams::MergePartialFromCodedStream(v188, a2, v958);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v960)) {
                            return 0;
                          }
                        }
                        else if (v19 == 1260)
                        {
                          if (v15 != 98) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1260)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1260;
                            operator new();
                          }
                          v189 = *v6;
                          v402 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v402 < 0)
                          {
                            int v403 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v403 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v403 = *v402;
                            *(void *)a2 = v402 + 1;
                          }
                          int v961 = google::protobuf::io::CodedInputStream::PushLimit(a2, v403);
                          int v963 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v963--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v963;
                          if (v963 < 0 != v244) {
                            return 0;
                          }
                          int v964 = v961;
                          uint64_t result = CoreML::Specification::ReduceMaxLayerParams::MergePartialFromCodedStream(v189, a2, v962);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v964)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1265 || v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1265)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1265;
                            operator new();
                          }
                          std::string::size_type v56 = *v6;
                          v302 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v302 < 0)
                          {
                            int v303 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v303 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v303 = *v302;
                            *(void *)a2 = v302 + 1;
                          }
                          int v766 = google::protobuf::io::CodedInputStream::PushLimit(a2, v303);
                          int v768 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v768--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v768;
                          if (v768 < 0 != v244) {
                            return 0;
                          }
                          int v769 = v766;
                          uint64_t result = CoreML::Specification::ReduceMinLayerParams::MergePartialFromCodedStream(v56, a2, v767);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v769)) {
                            return 0;
                          }
                        }
                      }
                      else if (v15 >> 3 <= 0x4B9)
                      {
                        if (v19 == 1195)
                        {
                          if (v15 != 90) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1195)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1195;
                            operator new();
                          }
                          v214 = *v6;
                          v428 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v428 < 0)
                          {
                            int v429 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v429 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v429 = *v428;
                            *(void *)a2 = v428 + 1;
                          }
                          int v1012 = google::protobuf::io::CodedInputStream::PushLimit(a2, v429);
                          int v1014 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1014--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1014;
                          if (v1014 < 0 != v244) {
                            return 0;
                          }
                          int v1015 = v1012;
                          uint64_t result = CoreML::Specification::RandomUniformStaticLayerParams::MergePartialFromCodedStream(v214, a2, v1013);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1015)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1200 || v15 != 130) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1200)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1200;
                            operator new();
                          }
                          std::string::size_type v78 = *v6;
                          v322 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v322 < 0)
                          {
                            int v323 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v323 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v323 = *v322;
                            *(void *)a2 = v322 + 1;
                          }
                          int v805 = google::protobuf::io::CodedInputStream::PushLimit(a2, v323);
                          int v807 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v807--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v807;
                          if (v807 < 0 != v244) {
                            return 0;
                          }
                          int v808 = v805;
                          uint64_t result = CoreML::Specification::RandomUniformDynamicLayerParams::MergePartialFromCodedStream(v78, (char **)a2, v806);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v808)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1210)
                      {
                        if (v15 != 210) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1210)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1210;
                          operator new();
                        }
                        v152 = *v6;
                        v368 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v368 < 0)
                        {
                          int v369 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v369 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v369 = *v368;
                          *(void *)a2 = v368 + 1;
                        }
                        int v895 = google::protobuf::io::CodedInputStream::PushLimit(a2, v369);
                        int v897 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v897--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v897;
                        if (v897 < 0 != v244) {
                          return 0;
                        }
                        int v898 = v895;
                        uint64_t result = CoreML::Specification::RandomBernoulliLikeLayerParams::MergePartialFromCodedStream(v152, (char **)a2, v896);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v898)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1215)
                      {
                        if (v15 != 250) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1215)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1215;
                          operator new();
                        }
                        v153 = *v6;
                        v370 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v370 < 0)
                        {
                          int v371 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v371 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v371 = *v370;
                          *(void *)a2 = v370 + 1;
                        }
                        int v899 = google::protobuf::io::CodedInputStream::PushLimit(a2, v371);
                        int v901 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v901--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v901;
                        if (v901 < 0 != v244) {
                          return 0;
                        }
                        int v902 = v899;
                        uint64_t result = CoreML::Specification::RandomBernoulliStaticLayerParams::MergePartialFromCodedStream(v153, a2, v900);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v902)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1220 || v15 != 34) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1220)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1220;
                          operator new();
                        }
                        uint64_t v41 = *v6;
                        v280 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v280 < 0)
                        {
                          int v281 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v281 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v281 = *v280;
                          *(void *)a2 = v280 + 1;
                        }
                        int v723 = google::protobuf::io::CodedInputStream::PushLimit(a2, v281);
                        int v725 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v725--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v725;
                        if (v725 < 0 != v244) {
                          return 0;
                        }
                        int v726 = v723;
                        uint64_t result = CoreML::Specification::RandomBernoulliDynamicLayerParams::MergePartialFromCodedStream(v41, (char **)a2, v724);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v726)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 > 0x482)
                    {
                      if (v15 >> 3 <= 0x496)
                      {
                        if (v19 == 1155)
                        {
                          if (v15 != 26) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1155)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1155;
                            operator new();
                          }
                          v223 = *v6;
                          v438 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v438 < 0)
                          {
                            int v439 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v439 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v439 = *v438;
                            *(void *)a2 = v438 + 1;
                          }
                          int v1031 = google::protobuf::io::CodedInputStream::PushLimit(a2, v439);
                          int v1033 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1033--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1033;
                          if (v1033 < 0 != v244) {
                            return 0;
                          }
                          int v1034 = v1031;
                          uint64_t result = CoreML::Specification::ConstantPaddingLayerParams::MergePartialFromCodedStream(v223, a2, v1032);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1034)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1170 || v15 != 146) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1170)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1170;
                            operator new();
                          }
                          uint64_t v88 = *v6;
                          v330 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v330 < 0)
                          {
                            int v331 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v331 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v331 = *v330;
                            *(void *)a2 = v330 + 1;
                          }
                          int v820 = google::protobuf::io::CodedInputStream::PushLimit(a2, v331);
                          int v822 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v822--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v822;
                          if (v822 < 0 != v244) {
                            return 0;
                          }
                          int v823 = v820;
                          uint64_t result = CoreML::Specification::RandomNormalLikeLayerParams::MergePartialFromCodedStream(v88, (char **)a2, v821);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v823)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1175)
                      {
                        if (v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1175)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1175;
                          operator new();
                        }
                        v173 = *v6;
                        v382 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v382 < 0)
                        {
                          int v383 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v383 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v383 = *v382;
                          *(void *)a2 = v382 + 1;
                        }
                        int v921 = google::protobuf::io::CodedInputStream::PushLimit(a2, v383);
                        int v923 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v923--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v923;
                        if (v923 < 0 != v244) {
                          return 0;
                        }
                        int v924 = v921;
                        uint64_t result = CoreML::Specification::RandomNormalStaticLayerParams::MergePartialFromCodedStream(v173, a2, v922);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v924)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1180)
                      {
                        if (v15 != 226) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1180)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1180;
                          operator new();
                        }
                        v174 = *v6;
                        v384 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v384 < 0)
                        {
                          int v385 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v385 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v385 = *v384;
                          *(void *)a2 = v384 + 1;
                        }
                        int v925 = google::protobuf::io::CodedInputStream::PushLimit(a2, v385);
                        int v927 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v927--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v927;
                        if (v927 < 0 != v244) {
                          return 0;
                        }
                        int v928 = v925;
                        uint64_t result = CoreML::Specification::RandomNormalDynamicLayerParams::MergePartialFromCodedStream(v174, (char **)a2, v926);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v928)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1190 || v15 != 50) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1190)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1190;
                          operator new();
                        }
                        uint64_t v50 = *v6;
                        v290 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v290 < 0)
                        {
                          int v291 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v291 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v291 = *v290;
                          *(void *)a2 = v290 + 1;
                        }
                        int v742 = google::protobuf::io::CodedInputStream::PushLimit(a2, v291);
                        int v744 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v744--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v744;
                        if (v744 < 0 != v244) {
                          return 0;
                        }
                        int v745 = v742;
                        uint64_t result = CoreML::Specification::RandomUniformLikeLayerParams::MergePartialFromCodedStream(v50, (char **)a2, v743);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v745)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x473)
                    {
                      if (v19 == 1130)
                      {
                        if (v15 != 82) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1130)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1130;
                          operator new();
                        }
                        v207 = *v6;
                        v418 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v418 < 0)
                        {
                          int v419 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v419 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v419 = *v418;
                          *(void *)a2 = v418 + 1;
                        }
                        int v993 = google::protobuf::io::CodedInputStream::PushLimit(a2, v419);
                        int v995 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v995--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v995;
                        if (v995 < 0 != v244) {
                          return 0;
                        }
                        int v996 = v993;
                        uint64_t result = CoreML::Specification::FlattenTo2DLayerParams::MergePartialFromCodedStream(v207, (char **)a2, v994);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v996)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1135 || v15 != 122) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1135)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1135;
                          operator new();
                        }
                        uint64_t v70 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v70 < 0)
                        {
                          int v71 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v71 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v71 = *v70;
                          *(void *)a2 = v70 + 1;
                        }
                        v556 = (CoreML::Specification::ReshapeLikeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v71);
                        int v558 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v558--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v558;
                        if (v558 < 0 != v244) {
                          return 0;
                        }
                        int v559 = (int)v556;
                        uint64_t result = CoreML::Specification::ReshapeLikeLayerParams::MergePartialFromCodedStream(v556, (char **)a2, v557);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v559)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1140)
                    {
                      if (v15 != 162) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1140)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1140;
                        operator new();
                      }
                      v138 = *v6;
                      v348 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v348 < 0)
                      {
                        int v349 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v349 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v349 = *v348;
                        *(void *)a2 = v348 + 1;
                      }
                      int v856 = google::protobuf::io::CodedInputStream::PushLimit(a2, v349);
                      int v858 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v858--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v858;
                      if (v858 < 0 != v244) {
                        return 0;
                      }
                      int v859 = v856;
                      uint64_t result = CoreML::Specification::ReshapeStaticLayerParams::MergePartialFromCodedStream(v138, a2, v857);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v859)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1145)
                    {
                      if (v15 != 202) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1145)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1145;
                        operator new();
                      }
                      v139 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v139 < 0)
                      {
                        int v140 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v140 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v140 = *v139;
                        *(void *)a2 = v139 + 1;
                      }
                      v608 = (CoreML::Specification::ReshapeDynamicLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v140);
                      int v610 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v610--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v610;
                      if (v610 < 0 != v244) {
                        return 0;
                      }
                      int v611 = (int)v608;
                      uint64_t result = CoreML::Specification::ReshapeDynamicLayerParams::MergePartialFromCodedStream(v608, (char **)a2, v609);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v611)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1150 || v15 != 242) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1150)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1150;
                        operator new();
                      }
                      unsigned int v32 = *v6;
                      v270 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v270 < 0)
                      {
                        int v271 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v271 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v271 = *v270;
                        *(void *)a2 = v270 + 1;
                      }
                      int v703 = google::protobuf::io::CodedInputStream::PushLimit(a2, v271);
                      int v705 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v705--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v705;
                      if (v705 < 0 != v244) {
                        return 0;
                      }
                      int v706 = v703;
                      uint64_t result = CoreML::Specification::RankPreservingReshapeLayerParams::MergePartialFromCodedStream(v32, a2, v704);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v706)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 <= 0x531)
                  {
                    if (v15 >> 3 > 0x50E)
                    {
                      if (v15 >> 3 <= 0x522)
                      {
                        if (v19 == 1295)
                        {
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1295)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1295;
                            operator new();
                          }
                          v226 = *v6;
                          v444 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v444 < 0)
                          {
                            int v445 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v445 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v445 = *v444;
                            *(void *)a2 = v444 + 1;
                          }
                          int v1043 = google::protobuf::io::CodedInputStream::PushLimit(a2, v445);
                          int v1045 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1045--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1045;
                          if (v1045 < 0 != v244) {
                            return 0;
                          }
                          int v1046 = v1043;
                          uint64_t result = CoreML::Specification::ReduceLogSumExpLayerParams::MergePartialFromCodedStream(v226, a2, v1044);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1046)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1313 || v15 != 10) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1313)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1313;
                            operator new();
                          }
                          v91 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v91 < 0)
                          {
                            int v92 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v92 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v92 = *v91;
                            *(void *)a2 = v91 + 1;
                          }
                          v572 = (CoreML::Specification::WhereNonZeroLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v92);
                          int v574 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v574--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v574;
                          if (v574 < 0 != v244) {
                            return 0;
                          }
                          int v575 = (int)v572;
                          uint64_t result = CoreML::Specification::WhereNonZeroLayerParams::MergePartialFromCodedStream(v572, (char **)a2, v573);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v575)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1315)
                      {
                        if (v15 != 26) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1315)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1315;
                          operator new();
                        }
                        v181 = *v6;
                        v390 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v390 < 0)
                        {
                          int v391 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v391 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v391 = *v390;
                          *(void *)a2 = v390 + 1;
                        }
                        int v937 = google::protobuf::io::CodedInputStream::PushLimit(a2, v391);
                        int v939 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v939--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v939;
                        if (v939 < 0 != v244) {
                          return 0;
                        }
                        int v940 = v937;
                        uint64_t result = CoreML::Specification::MatrixBandPartLayerParams::MergePartialFromCodedStream(v181, (char **)a2, v938);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v940)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1320)
                      {
                        if (v15 != 66) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1320)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1320;
                          operator new();
                        }
                        v182 = *v6;
                        v392 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v392 < 0)
                        {
                          int v393 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v393 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v393 = *v392;
                          *(void *)a2 = v392 + 1;
                        }
                        int v941 = google::protobuf::io::CodedInputStream::PushLimit(a2, v393);
                        int v943 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v943--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v943;
                        if (v943 < 0 != v244) {
                          return 0;
                        }
                        int v944 = v941;
                        uint64_t result = CoreML::Specification::LowerTriangularLayerParams::MergePartialFromCodedStream(v182, (char **)a2, v942);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v944)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1325 || v15 != 106) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1325)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1325;
                          operator new();
                        }
                        int64_t v53 = *v6;
                        v296 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v296 < 0)
                        {
                          int v297 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v297 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v297 = *v296;
                          *(void *)a2 = v296 + 1;
                        }
                        int v754 = google::protobuf::io::CodedInputStream::PushLimit(a2, v297);
                        int v756 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v756--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v756;
                        if (v756 < 0 != v244) {
                          return 0;
                        }
                        int v757 = v754;
                        uint64_t result = CoreML::Specification::UpperTriangularLayerParams::MergePartialFromCodedStream(v53, (char **)a2, v755);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v757)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x4FF)
                    {
                      if (v19 == 1270)
                      {
                        if (v15 != 178) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1270)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1270;
                          operator new();
                        }
                        v210 = *v6;
                        v424 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v424 < 0)
                        {
                          int v425 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v425 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v425 = *v424;
                          *(void *)a2 = v424 + 1;
                        }
                        int v1004 = google::protobuf::io::CodedInputStream::PushLimit(a2, v425);
                        int v1006 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v1006--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1006;
                        if (v1006 < 0 != v244) {
                          return 0;
                        }
                        int v1007 = v1004;
                        uint64_t result = CoreML::Specification::ReduceSumLayerParams::MergePartialFromCodedStream(v210, a2, v1005);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1007)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1275 || v15 != 218) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1275)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1275;
                          operator new();
                        }
                        uint64_t v74 = *v6;
                        v316 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v316 < 0)
                        {
                          int v317 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v317 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v317 = *v316;
                          *(void *)a2 = v316 + 1;
                        }
                        int v793 = google::protobuf::io::CodedInputStream::PushLimit(a2, v317);
                        int v795 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v795--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v795;
                        if (v795 < 0 != v244) {
                          return 0;
                        }
                        int v796 = v793;
                        uint64_t result = CoreML::Specification::ReduceProdLayerParams::MergePartialFromCodedStream(v74, a2, v794);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v796)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1280)
                    {
                      if (v15 != 2) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1280)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1280;
                        operator new();
                      }
                      v146 = *v6;
                      v356 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v356 < 0)
                      {
                        int v357 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v357 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v357 = *v356;
                        *(void *)a2 = v356 + 1;
                      }
                      int v871 = google::protobuf::io::CodedInputStream::PushLimit(a2, v357);
                      int v873 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v873--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v873;
                      if (v873 < 0 != v244) {
                        return 0;
                      }
                      int v874 = v871;
                      uint64_t result = CoreML::Specification::ReduceMeanLayerParams::MergePartialFromCodedStream(v146, a2, v872);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v874)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1285)
                    {
                      if (v15 != 42) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1285)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1285;
                        operator new();
                      }
                      v147 = *v6;
                      v358 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v358 < 0)
                      {
                        int v359 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v359 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v359 = *v358;
                        *(void *)a2 = v358 + 1;
                      }
                      int v875 = google::protobuf::io::CodedInputStream::PushLimit(a2, v359);
                      int v877 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v877--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v877;
                      if (v877 < 0 != v244) {
                        return 0;
                      }
                      int v878 = v875;
                      uint64_t result = CoreML::Specification::ReduceLogSumLayerParams::MergePartialFromCodedStream(v147, a2, v876);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v878)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1290 || v15 != 82) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1290)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1290;
                        operator new();
                      }
                      uint64_t v37 = *v6;
                      v274 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v274 < 0)
                      {
                        int v275 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v275 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v275 = *v274;
                        *(void *)a2 = v274 + 1;
                      }
                      int v711 = google::protobuf::io::CodedInputStream::PushLimit(a2, v275);
                      int v713 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v713--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v713;
                      if (v713 < 0 != v244) {
                        return 0;
                      }
                      int v714 = v711;
                      uint64_t result = CoreML::Specification::ReduceSumSquareLayerParams::MergePartialFromCodedStream(v37, a2, v712);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v714)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    if (v15 >> 3 > 0x5A9)
                    {
                      switch(v19)
                      {
                        case 0x5AFu:
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1455)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1455;
                            operator new();
                          }
                          int v27 = *v6;
                          v466 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v466 < 0)
                          {
                            int v467 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v467 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v467 = *v466;
                            *(void *)a2 = v466 + 1;
                          }
                          int v1063 = google::protobuf::io::CodedInputStream::PushLimit(a2, v467);
                          int v1065 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1065--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1065;
                          if (v1065 < 0 != v244) {
                            return 0;
                          }
                          int v1066 = v1063;
                          uint64_t result = CoreML::Specification::CumSumLayerParams::MergePartialFromCodedStream(v27, (char **)a2, v1064);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1066)) {
                            return 0;
                          }
                          continue;
                        case 0x5B0u:
                        case 0x5B1u:
                        case 0x5B2u:
                        case 0x5B3u:
                        case 0x5B6u:
                        case 0x5B7u:
                        case 0x5B8u:
                        case 0x5BBu:
                        case 0x5BCu:
                        case 0x5BDu:
                          goto LABEL_9;
                        case 0x5B4u:
                          if (v15 != 162) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1460)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1460;
                            operator new();
                          }
                          v235 = *v6;
                          v468 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v468 < 0)
                          {
                            int v469 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v469 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v469 = *v468;
                            *(void *)a2 = v468 + 1;
                          }
                          int v1067 = google::protobuf::io::CodedInputStream::PushLimit(a2, v469);
                          int v1069 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1069--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1069;
                          if (v1069 < 0 != v244) {
                            return 0;
                          }
                          int v1070 = v1067;
                          uint64_t result = CoreML::Specification::ClampedReLULayerParams::MergePartialFromCodedStream(v235, (char **)a2, v1068);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1070)) {
                            continue;
                          }
                          return 0;
                        case 0x5B5u:
                          if (v15 != 170) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1461)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1461;
                            operator new();
                          }
                          v236 = *v6;
                          v470 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v470 < 0)
                          {
                            int v471 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v471 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v471 = *v470;
                            *(void *)a2 = v470 + 1;
                          }
                          int v1071 = google::protobuf::io::CodedInputStream::PushLimit(a2, v471);
                          int v1073 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1073--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1073;
                          if (v1073 < 0 != v244) {
                            return 0;
                          }
                          int v1074 = v1071;
                          uint64_t result = CoreML::Specification::ArgSortLayerParams::MergePartialFromCodedStream(v236, (char **)a2, v1072);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1074)) {
                            continue;
                          }
                          return 0;
                        case 0x5B9u:
                          if (v15 != 202) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1465)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1465;
                            operator new();
                          }
                          v237 = *v6;
                          v472 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v472 < 0)
                          {
                            int v473 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v473 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v473 = *v472;
                            *(void *)a2 = v472 + 1;
                          }
                          int v1075 = google::protobuf::io::CodedInputStream::PushLimit(a2, v473);
                          int v1077 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1077--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1077;
                          if (v1077 < 0 != v244) {
                            return 0;
                          }
                          int v1078 = v1075;
                          uint64_t result = CoreML::Specification::Pooling3DLayerParams::MergePartialFromCodedStream(v237, (char **)a2, v1076);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1078)) {
                            continue;
                          }
                          return 0;
                        case 0x5BAu:
                          if (v15 != 210) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1466)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1466;
                            operator new();
                          }
                          v238 = *v6;
                          v474 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v474 < 0)
                          {
                            int v475 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v475 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v475 = *v474;
                            *(void *)a2 = v474 + 1;
                          }
                          int v1079 = google::protobuf::io::CodedInputStream::PushLimit(a2, v475);
                          int v1081 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1081--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1081;
                          if (v1081 < 0 != v244) {
                            return 0;
                          }
                          int v1082 = v1079;
                          uint64_t result = CoreML::Specification::GlobalPooling3DLayerParams::MergePartialFromCodedStream(v238, (char **)a2, v1080);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1082)) {
                            continue;
                          }
                          return 0;
                        case 0x5BEu:
                          if (v15 != 242) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1470)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1470;
                            operator new();
                          }
                          v239 = *v6;
                          v476 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v476 < 0)
                          {
                            int v477 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v477 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v477 = *v476;
                            *(void *)a2 = v476 + 1;
                          }
                          int v1083 = google::protobuf::io::CodedInputStream::PushLimit(a2, v477);
                          int v1085 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1085--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1085;
                          if (v1085 < 0 != v244) {
                            return 0;
                          }
                          int v1086 = v1083;
                          uint64_t result = CoreML::Specification::SliceBySizeLayerParams::MergePartialFromCodedStream(v239, (char **)a2, v1084);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1086)) {
                            continue;
                          }
                          return 0;
                        case 0x5BFu:
                          if (v15 != 250) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1471)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1471;
                            operator new();
                          }
                          v240 = *v6;
                          v478 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v478 < 0)
                          {
                            int v479 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v479 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v479 = *v478;
                            *(void *)a2 = v478 + 1;
                          }
                          int v1087 = google::protobuf::io::CodedInputStream::PushLimit(a2, v479);
                          int v1089 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1089--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1089;
                          if (v1089 < 0 != v244) {
                            return 0;
                          }
                          int v1090 = v1087;
                          uint64_t result = CoreML::Specification::Convolution3DLayerParams::MergePartialFromCodedStream(v240, a2, v1088);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1090)) {
                            continue;
                          }
                          return 0;
                        default:
                          if (v19 != 1450 || v15 != 82) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1450)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1450;
                            operator new();
                          }
                          v234 = *v6;
                          v480 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v480 < 0)
                          {
                            int v481 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v481 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v481 = *v480;
                            *(void *)a2 = v480 + 1;
                          }
                          int v1091 = google::protobuf::io::CodedInputStream::PushLimit(a2, v481);
                          int v1093 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1093--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1093;
                          if (v1093 < 0 != v244) {
                            return 0;
                          }
                          int v1094 = v1091;
                          uint64_t result = CoreML::Specification::OneHotLayerParams::MergePartialFromCodedStream(v234, (char **)a2, v1092);
                          if (!result) {
                            return result;
                          }
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1094)) {
                            continue;
                          }
                          return 0;
                      }
                    }
                    if (v19 == 1330)
                    {
                      if (v15 != 146) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1330)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1330;
                        operator new();
                      }
                      std::string::size_type v98 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v98 < 0)
                      {
                        int v99 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v99 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v99 = *v98;
                        *(void *)a2 = v98 + 1;
                      }
                      v450 = (CoreML::Specification::WhereBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v99);
                      int v452 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v452--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v452;
                      if (v452 < 0 != v244) {
                        return 0;
                      }
                      int v453 = (int)v450;
                      uint64_t result = CoreML::Specification::WhereBroadcastableLayerParams::MergePartialFromCodedStream(v450, (char **)a2, v451);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v453)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1350)
                    {
                      if (v15 != 50) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1350)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1350;
                        operator new();
                      }
                      v100 = *v6;
                      v248 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v248 < 0)
                      {
                        int v249 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v249 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v249 = *v248;
                        *(void *)a2 = v248 + 1;
                      }
                      int v458 = google::protobuf::io::CodedInputStream::PushLimit(a2, v249);
                      int v460 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v460--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v460;
                      if (v460 < 0 != v244) {
                        return 0;
                      }
                      int v461 = v458;
                      uint64_t result = CoreML::Specification::LayerNormalizationLayerParams::MergePartialFromCodedStream(v100, a2, v459);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v461)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1400 || v15 != 194) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1400)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1400;
                        operator new();
                      }
                      std::string::size_type v57 = *v6;
                      v246 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v246 < 0)
                      {
                        int v247 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v247 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v247 = *v246;
                        *(void *)a2 = v246 + 1;
                      }
                      int v454 = google::protobuf::io::CodedInputStream::PushLimit(a2, v247);
                      int v456 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v456--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v456;
                      if (v456 < 0 != v244) {
                        return 0;
                      }
                      int v457 = v454;
                      uint64_t result = CoreML::Specification::NonMaximumSuppressionLayerParams::MergePartialFromCodedStream(v57, (char **)a2, v455);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v457)) {
                        return 0;
                      }
                    }
                  }
                }
                else if (v15 >> 3 > 0x3D3)
                {
                  if (v15 >> 3 > 0x428)
                  {
                    if (v15 >> 3 > 0x44B)
                    {
                      if (v15 >> 3 <= 0x455)
                      {
                        if (v19 == 1100)
                        {
                          if (v15 != 98) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1100)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1100;
                            operator new();
                          }
                          v228 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v228 < 0)
                          {
                            int v229 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v229 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v229 = *v228;
                            *(void *)a2 = v228 + 1;
                          }
                          v687 = (CoreML::Specification::BroadcastToLikeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v229);
                          int v689 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v689--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v689;
                          if (v689 < 0 != v244) {
                            return 0;
                          }
                          int v690 = (int)v687;
                          uint64_t result = CoreML::Specification::BroadcastToLikeLayerParams::MergePartialFromCodedStream(v687, (char **)a2, v688);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v690)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 1105 || v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 1105)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1105;
                            operator new();
                          }
                          v94 = *v6;
                          v338 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v338 < 0)
                          {
                            int v339 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v339 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v339 = *v338;
                            *(void *)a2 = v338 + 1;
                          }
                          int v836 = google::protobuf::io::CodedInputStream::PushLimit(a2, v339);
                          int v838 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v838--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v838;
                          if (v838 < 0 != v244) {
                            return 0;
                          }
                          int v839 = v836;
                          uint64_t result = CoreML::Specification::BroadcastToStaticLayerParams::MergePartialFromCodedStream(v94, a2, v837);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v839)) {
                            return 0;
                          }
                        }
                      }
                      else if (v19 == 1110)
                      {
                        if (v15 != 178) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1110)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1110;
                          operator new();
                        }
                        v185 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v185 < 0)
                        {
                          int v186 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v186 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v186 = *v185;
                          *(void *)a2 = v185 + 1;
                        }
                        v651 = (CoreML::Specification::BroadcastToDynamicLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v186);
                        int v653 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v653--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v653;
                        if (v653 < 0 != v244) {
                          return 0;
                        }
                        int v654 = (int)v651;
                        uint64_t result = CoreML::Specification::BroadcastToDynamicLayerParams::MergePartialFromCodedStream(v651, (char **)a2, v652);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v654)) {
                          return 0;
                        }
                      }
                      else if (v19 == 1120)
                      {
                        if (v15 != 2) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1120)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1120;
                          operator new();
                        }
                        v187 = *v6;
                        v398 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v398 < 0)
                        {
                          int v399 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v399 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v399 = *v398;
                          *(void *)a2 = v398 + 1;
                        }
                        int v953 = google::protobuf::io::CodedInputStream::PushLimit(a2, v399);
                        int v955 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v955--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v955;
                        if (v955 < 0 != v244) {
                          return 0;
                        }
                        int v956 = v953;
                        uint64_t result = CoreML::Specification::SqueezeLayerParams::MergePartialFromCodedStream(v187, a2, v954);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v956)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1125 || v15 != 42) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1125)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1125;
                          operator new();
                        }
                        uint64_t v55 = *v6;
                        v300 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v300 < 0)
                        {
                          int v301 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v301 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v301 = *v300;
                          *(void *)a2 = v300 + 1;
                        }
                        int v762 = google::protobuf::io::CodedInputStream::PushLimit(a2, v301);
                        int v764 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v764--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v764;
                        if (v764 < 0 != v244) {
                          return 0;
                        }
                        int v765 = v762;
                        uint64_t result = CoreML::Specification::ExpandDimsLayerParams::MergePartialFromCodedStream(v55, a2, v763);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v765)) {
                          return 0;
                        }
                      }
                    }
                    else if (v15 >> 3 <= 0x437)
                    {
                      if (v19 == 1065)
                      {
                        if (v15 != 74) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1065)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1065;
                          operator new();
                        }
                        v212 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v212 < 0)
                        {
                          int v213 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v213 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v213 = *v212;
                          *(void *)a2 = v212 + 1;
                        }
                        v675 = (CoreML::Specification::GetShapeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v213);
                        int v677 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v677--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v677;
                        if (v677 < 0 != v244) {
                          return 0;
                        }
                        int v678 = (int)v675;
                        uint64_t result = CoreML::Specification::GetShapeLayerParams::MergePartialFromCodedStream(v675, (char **)a2, v676);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v678)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1070 || v15 != 114) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1070)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1070;
                          operator new();
                        }
                        unint64_t v76 = *v6;
                        v320 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v320 < 0)
                        {
                          int v321 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v321 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v321 = *v320;
                          *(void *)a2 = v320 + 1;
                        }
                        int v801 = google::protobuf::io::CodedInputStream::PushLimit(a2, v321);
                        int v803 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v803--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v803;
                        if (v803 < 0 != v244) {
                          return 0;
                        }
                        int v804 = v801;
                        uint64_t result = CoreML::Specification::LoadConstantNDLayerParams::MergePartialFromCodedStream(v76, a2, v802);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v804)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1080)
                    {
                      if (v15 != 194) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1080)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1080;
                        operator new();
                      }
                      v150 = *v6;
                      v364 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v364 < 0)
                      {
                        int v365 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v365 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v365 = *v364;
                        *(void *)a2 = v364 + 1;
                      }
                      int v887 = google::protobuf::io::CodedInputStream::PushLimit(a2, v365);
                      int v889 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v889--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v889;
                      if (v889 < 0 != v244) {
                        return 0;
                      }
                      int v890 = v887;
                      uint64_t result = CoreML::Specification::FillLikeLayerParams::MergePartialFromCodedStream(v150, (char **)a2, v888);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v890)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1085)
                    {
                      if (v15 != 234) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1085)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1085;
                        operator new();
                      }
                      v151 = *v6;
                      v366 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v366 < 0)
                      {
                        int v367 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v367 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v367 = *v366;
                        *(void *)a2 = v366 + 1;
                      }
                      int v891 = google::protobuf::io::CodedInputStream::PushLimit(a2, v367);
                      int v893 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v893--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v893;
                      if (v893 < 0 != v244) {
                        return 0;
                      }
                      int v894 = v891;
                      uint64_t result = CoreML::Specification::FillStaticLayerParams::MergePartialFromCodedStream(v151, a2, v892);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v894)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1090 || v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1090)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1090;
                        operator new();
                      }
                      int v39 = *v6;
                      v278 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v278 < 0)
                      {
                        int v279 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v279 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v279 = *v278;
                        *(void *)a2 = v278 + 1;
                      }
                      int v719 = google::protobuf::io::CodedInputStream::PushLimit(a2, v279);
                      int v721 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v721--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v721;
                      if (v721 < 0 != v244) {
                        return 0;
                      }
                      int v722 = v719;
                      uint64_t result = CoreML::Specification::FillDynamicLayerParams::MergePartialFromCodedStream(v39, (char **)a2, v720);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v722)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 > 0x3F6)
                  {
                    if (v15 >> 3 <= 0x400)
                    {
                      if (v19 == 1015)
                      {
                        if (v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1015)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1015;
                          operator new();
                        }
                        v220 = *v6;
                        v436 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v436 < 0)
                        {
                          int v437 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v437 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v437 = *v436;
                          *(void *)a2 = v436 + 1;
                        }
                        int v1027 = google::protobuf::io::CodedInputStream::PushLimit(a2, v437);
                        int v1029 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v1029--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1029;
                        if (v1029 < 0 != v244) {
                          return 0;
                        }
                        int v1030 = v1027;
                        uint64_t result = CoreML::Specification::TopKLayerParams::MergePartialFromCodedStream(v220, (char **)a2, v1028);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1030)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 1020 || v15 != 226) {
                          goto LABEL_9;
                        }
                        if (*v5 != 1020)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1020;
                          operator new();
                        }
                        unint64_t v85 = *v6;
                        v328 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v328 < 0)
                        {
                          int v329 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v329 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v329 = *v328;
                          *(void *)a2 = v328 + 1;
                        }
                        int v816 = google::protobuf::io::CodedInputStream::PushLimit(a2, v329);
                        int v818 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v818--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v818;
                        if (v818 < 0 != v244) {
                          return 0;
                        }
                        int v819 = v816;
                        uint64_t result = CoreML::Specification::ArgMinLayerParams::MergePartialFromCodedStream(v85, (char **)a2, v817);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v819)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 1025)
                    {
                      if (v15 != 10) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1025)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1025;
                        operator new();
                      }
                      v167 = *v6;
                      v378 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v378 < 0)
                      {
                        int v379 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v379 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v379 = *v378;
                        *(void *)a2 = v378 + 1;
                      }
                      int v913 = google::protobuf::io::CodedInputStream::PushLimit(a2, v379);
                      int v915 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v915--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v915;
                      if (v915 < 0 != v244) {
                        return 0;
                      }
                      int v916 = v913;
                      uint64_t result = CoreML::Specification::ArgMaxLayerParams::MergePartialFromCodedStream(v167, (char **)a2, v914);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v916)) {
                        return 0;
                      }
                    }
                    else if (v19 == 1040)
                    {
                      if (v15 != 130) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1040)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1040;
                        operator new();
                      }
                      v168 = *v6;
                      v380 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v380 < 0)
                      {
                        int v381 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v381 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v381 = *v380;
                        *(void *)a2 = v380 + 1;
                      }
                      int v917 = google::protobuf::io::CodedInputStream::PushLimit(a2, v381);
                      int v919 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v919--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v919;
                      if (v919 < 0 != v244) {
                        return 0;
                      }
                      int v920 = v917;
                      uint64_t result = CoreML::Specification::EmbeddingNDLayerParams::MergePartialFromCodedStream(v168, a2, v918);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v920)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 1045 || v15 != 170) {
                        goto LABEL_9;
                      }
                      if (*v5 != 1045)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1045;
                        operator new();
                      }
                      uint64_t v48 = *v6;
                      v286 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v286 < 0)
                      {
                        int v287 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v287 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v287 = *v286;
                        *(void *)a2 = v286 + 1;
                      }
                      int v734 = google::protobuf::io::CodedInputStream::PushLimit(a2, v287);
                      int v736 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v736--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v736;
                      if (v736 < 0 != v244) {
                        return 0;
                      }
                      int v737 = v734;
                      uint64_t result = CoreML::Specification::BatchedMatMulLayerParams::MergePartialFromCodedStream(v48, a2, v735);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v737)) {
                        return 0;
                      }
                    }
                  }
                  else if (v15 >> 3 <= 0x3E2)
                  {
                    if (v19 == 980)
                    {
                      if (v15 != 162) {
                        goto LABEL_9;
                      }
                      if (*v5 != 980)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 980;
                        operator new();
                      }
                      v204 = *v6;
                      v416 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v416 < 0)
                      {
                        int v417 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v417 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v417 = *v416;
                        *(void *)a2 = v416 + 1;
                      }
                      int v989 = google::protobuf::io::CodedInputStream::PushLimit(a2, v417);
                      int v991 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v991--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v991;
                      if (v991 < 0 != v244) {
                        return 0;
                      }
                      int v992 = v989;
                      uint64_t result = CoreML::Specification::ConcatNDLayerParams::MergePartialFromCodedStream(v204, (char **)a2, v990);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v992)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 985 || v15 != 202) {
                        goto LABEL_9;
                      }
                      if (*v5 != 985)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 985;
                        operator new();
                      }
                      uint64_t v67 = *v6;
                      v310 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v310 < 0)
                      {
                        int v311 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v311 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v311 = *v310;
                        *(void *)a2 = v310 + 1;
                      }
                      int v782 = google::protobuf::io::CodedInputStream::PushLimit(a2, v311);
                      int v784 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v784--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v784;
                      if (v784 < 0 != v244) {
                        return 0;
                      }
                      int v785 = v782;
                      uint64_t result = CoreML::Specification::TransposeLayerParams::MergePartialFromCodedStream(v67, a2, v783);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v785)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 995)
                  {
                    if (v15 != 26) {
                      goto LABEL_9;
                    }
                    if (*v5 != 995)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 995;
                      operator new();
                    }
                    v132 = *v6;
                    v344 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v344 < 0)
                    {
                      int v345 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v345 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v345 = *v344;
                      *(void *)a2 = v344 + 1;
                    }
                    int v848 = google::protobuf::io::CodedInputStream::PushLimit(a2, v345);
                    int v850 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v850--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v850;
                    if (v850 < 0 != v244) {
                      return 0;
                    }
                    int v851 = v848;
                    uint64_t result = CoreML::Specification::SliceStaticLayerParams::MergePartialFromCodedStream(v132, a2, v849);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v851)) {
                      return 0;
                    }
                  }
                  else if (v19 == 1000)
                  {
                    if (v15 != 66) {
                      goto LABEL_9;
                    }
                    if (*v5 != 1000)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 1000;
                      operator new();
                    }
                    v133 = *v6;
                    v346 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v346 < 0)
                    {
                      int v347 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v347 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v347 = *v346;
                      *(void *)a2 = v346 + 1;
                    }
                    int v852 = google::protobuf::io::CodedInputStream::PushLimit(a2, v347);
                    int v854 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v854--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v854;
                    if (v854 < 0 != v244) {
                      return 0;
                    }
                    int v855 = v852;
                    uint64_t result = CoreML::Specification::SliceDynamicLayerParams::MergePartialFromCodedStream(v133, a2, v853);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v855)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 1005 || v15 != 106) {
                      goto LABEL_9;
                    }
                    if (*v5 != 1005)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 1005;
                      operator new();
                    }
                    int v29 = *v6;
                    v268 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v268 < 0)
                    {
                      int v269 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v269 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v269 = *v268;
                      *(void *)a2 = v268 + 1;
                    }
                    int v699 = google::protobuf::io::CodedInputStream::PushLimit(a2, v269);
                    int v701 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v701--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v701;
                    if (v701 < 0 != v244) {
                      return 0;
                    }
                    int v702 = v699;
                    uint64_t result = CoreML::Specification::SlidingWindowsLayerParams::MergePartialFromCodedStream(v29, (char **)a2, v700);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v702)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 > 0x3A1)
                {
                  if (v15 >> 3 <= 0x3B0)
                  {
                    if (v19 == 930)
                    {
                      if (v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 930)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 930;
                        operator new();
                      }
                      v192 = *v6;
                      v404 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v404 < 0)
                      {
                        int v405 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v405 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v405 = *v404;
                        *(void *)a2 = v404 + 1;
                      }
                      int v965 = google::protobuf::io::CodedInputStream::PushLimit(a2, v405);
                      int v967 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v967--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v967;
                      if (v967 < 0 != v244) {
                        return 0;
                      }
                      int v968 = v965;
                      uint64_t result = CoreML::Specification::GatherLayerParams::MergePartialFromCodedStream(v192, (char **)a2, v966);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v968)) {
                        return 0;
                      }
                    }
                    else if (v19 == 935)
                    {
                      if (v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 935)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 935;
                        operator new();
                      }
                      v193 = *v6;
                      v406 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v406 < 0)
                      {
                        int v407 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v407 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v407 = *v406;
                        *(void *)a2 = v406 + 1;
                      }
                      int v969 = google::protobuf::io::CodedInputStream::PushLimit(a2, v407);
                      int v971 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v971--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v971;
                      if (v971 < 0 != v244) {
                        return 0;
                      }
                      int v972 = v969;
                      uint64_t result = CoreML::Specification::ScatterLayerParams::MergePartialFromCodedStream(v193, (char **)a2, v970);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v972)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 940 || v15 != 98) {
                        goto LABEL_9;
                      }
                      if (*v5 != 940)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 940;
                        operator new();
                      }
                      int64_t v60 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v60 < 0)
                      {
                        int v61 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v61 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v61 = *v60;
                        *(void *)a2 = v60 + 1;
                      }
                      v544 = (CoreML::Specification::GatherNDLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v61);
                      int v546 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v546--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v546;
                      if (v546 < 0 != v244) {
                        return 0;
                      }
                      int v547 = (int)v544;
                      uint64_t result = CoreML::Specification::GatherNDLayerParams::MergePartialFromCodedStream(v544, (char **)a2, v545);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v547)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    if (v15 >> 3 <= 0x3BF)
                    {
                      switch(v19)
                      {
                        case 0x3B1u:
                          if (v15 != 138) {
                            goto LABEL_9;
                          }
                          if (*v5 != 945)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 945;
                            operator new();
                          }
                          int v34 = *v6;
                          v258 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v258 < 0)
                          {
                            int v259 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v259 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v259 = *v258;
                            *(void *)a2 = v258 + 1;
                          }
                          int v499 = google::protobuf::io::CodedInputStream::PushLimit(a2, v259);
                          int v501 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v501--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v501;
                          if (v501 < 0 != v244) {
                            return 0;
                          }
                          int v502 = v499;
                          uint64_t result = CoreML::Specification::ScatterNDLayerParams::MergePartialFromCodedStream(v34, (char **)a2, v500);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v502)) {
                            return 0;
                          }
                          continue;
                        case 0x3B6u:
                          if (v15 != 178) {
                            goto LABEL_9;
                          }
                          if (*v5 != 950)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 950;
                            operator new();
                          }
                          v118 = *v6;
                          v260 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v260 < 0)
                          {
                            int v261 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v261 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v261 = *v260;
                            *(void *)a2 = v260 + 1;
                          }
                          int v503 = google::protobuf::io::CodedInputStream::PushLimit(a2, v261);
                          int v505 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v505--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v505;
                          if (v505 < 0 != v244) {
                            return 0;
                          }
                          int v506 = v503;
                          uint64_t result = CoreML::Specification::SoftmaxNDLayerParams::MergePartialFromCodedStream(v118, (char **)a2, v504);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v506)) {
                            return 0;
                          }
                          continue;
                        case 0x3B8u:
                          if (v15 != 194) {
                            goto LABEL_9;
                          }
                          if (*v5 != 952)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 952;
                            operator new();
                          }
                          v119 = *v6;
                          v262 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v262 < 0)
                          {
                            int v263 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v263 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v263 = *v262;
                            *(void *)a2 = v262 + 1;
                          }
                          int v507 = google::protobuf::io::CodedInputStream::PushLimit(a2, v263);
                          int v509 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v509--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v509;
                          if (v509 < 0 != v244) {
                            return 0;
                          }
                          int v510 = v507;
                          uint64_t result = CoreML::Specification::GatherAlongAxisLayerParams::MergePartialFromCodedStream(v119, (char **)a2, v508);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v510)) {
                            return 0;
                          }
                          continue;
                        case 0x3BAu:
                          if (v15 != 210) {
                            goto LABEL_9;
                          }
                          if (*v5 != 954)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 954;
                            operator new();
                          }
                          v120 = *v6;
                          v264 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v264 < 0)
                          {
                            int v265 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v265 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v265 = *v264;
                            *(void *)a2 = v264 + 1;
                          }
                          int v511 = google::protobuf::io::CodedInputStream::PushLimit(a2, v265);
                          int v513 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v513--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v513;
                          if (v513 < 0 != v244) {
                            return 0;
                          }
                          int v514 = v511;
                          uint64_t result = CoreML::Specification::ScatterAlongAxisLayerParams::MergePartialFromCodedStream(v120, (char **)a2, v512);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v514)) {
                            return 0;
                          }
                          continue;
                        default:
                          goto LABEL_9;
                      }
                    }
                    if (v19 == 960)
                    {
                      if (v15 != 2) {
                        goto LABEL_9;
                      }
                      if (*v5 != 960)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 960;
                        operator new();
                      }
                      v201 = *v6;
                      v410 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v410 < 0)
                      {
                        int v411 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v411 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v411 = *v410;
                        *(void *)a2 = v410 + 1;
                      }
                      int v977 = google::protobuf::io::CodedInputStream::PushLimit(a2, v411);
                      int v979 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v979--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v979;
                      if (v979 < 0 != v244) {
                        return 0;
                      }
                      int v980 = v977;
                      uint64_t result = CoreML::Specification::ReverseLayerParams::MergePartialFromCodedStream(v201, a2, v978);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v980)) {
                        return 0;
                      }
                    }
                    else if (v19 == 965)
                    {
                      if (v15 != 42) {
                        goto LABEL_9;
                      }
                      if (*v5 != 965)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 965;
                        operator new();
                      }
                      v202 = *v6;
                      v412 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v412 < 0)
                      {
                        int v413 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v413 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v413 = *v412;
                        *(void *)a2 = v412 + 1;
                      }
                      int v981 = google::protobuf::io::CodedInputStream::PushLimit(a2, v413);
                      int v983 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v983--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v983;
                      if (v983 < 0 != v244) {
                        return 0;
                      }
                      int v984 = v981;
                      uint64_t result = CoreML::Specification::ReverseSeqLayerParams::MergePartialFromCodedStream(v202, (char **)a2, v982);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v984)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 975 || v15 != 122) {
                        goto LABEL_9;
                      }
                      if (*v5 != 975)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 975;
                        operator new();
                      }
                      uint64_t v65 = *v6;
                      v306 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v306 < 0)
                      {
                        int v307 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v307 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v307 = *v306;
                        *(void *)a2 = v306 + 1;
                      }
                      int v774 = google::protobuf::io::CodedInputStream::PushLimit(a2, v307);
                      int v776 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v776--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v776;
                      if (v776 < 0 != v244) {
                        return 0;
                      }
                      int v777 = v774;
                      uint64_t result = CoreML::Specification::SplitNDLayerParams::MergePartialFromCodedStream(v65, a2, v775);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v777)) {
                        return 0;
                      }
                    }
                  }
                }
                else if (v15 >> 3 <= 0x379)
                {
                  if (v15 >> 3 <= 0x36A)
                  {
                    if (v19 == 865)
                    {
                      if (v15 != 10) {
                        goto LABEL_9;
                      }
                      if (*v5 != 865)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 865;
                        operator new();
                      }
                      v216 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v216 < 0)
                      {
                        int v217 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v217 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v217 = *v216;
                        *(void *)a2 = v216 + 1;
                      }
                      v679 = (CoreML::Specification::ModBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v217);
                      int v681 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v681--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v681;
                      if (v681 < 0 != v244) {
                        return 0;
                      }
                      int v682 = (int)v679;
                      uint64_t result = CoreML::Specification::ModBroadcastableLayerParams::MergePartialFromCodedStream(v679, (char **)a2, v680);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v682)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 870 || v15 != 50) {
                        goto LABEL_9;
                      }
                      if (*v5 != 870)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 870;
                        operator new();
                      }
                      uint64_t v80 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v80 < 0)
                      {
                        int v81 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v81 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v81 = *v80;
                        *(void *)a2 = v80 + 1;
                      }
                      v560 = (CoreML::Specification::MinBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v81);
                      int v562 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v562--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v562;
                      if (v562 < 0 != v244) {
                        return 0;
                      }
                      int v563 = (int)v560;
                      uint64_t result = CoreML::Specification::MinBroadcastableLayerParams::MergePartialFromCodedStream(v560, (char **)a2, v561);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v563)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 875)
                  {
                    if (v15 != 90) {
                      goto LABEL_9;
                    }
                    if (*v5 != 875)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 875;
                      operator new();
                    }
                    v156 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v156 < 0)
                    {
                      int v157 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v157 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v157 = *v156;
                      *(void *)a2 = v156 + 1;
                    }
                    v615 = (CoreML::Specification::MaxBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v157);
                    int v617 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v617--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v617;
                    if (v617 < 0 != v244) {
                      return 0;
                    }
                    int v618 = (int)v615;
                    uint64_t result = CoreML::Specification::MaxBroadcastableLayerParams::MergePartialFromCodedStream(v615, (char **)a2, v616);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v618)) {
                      return 0;
                    }
                  }
                  else if (v19 == 880)
                  {
                    if (v15 != 130) {
                      goto LABEL_9;
                    }
                    if (*v5 != 880)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 880;
                      operator new();
                    }
                    v158 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v158 < 0)
                    {
                      int v159 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v159 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v159 = *v158;
                      *(void *)a2 = v158 + 1;
                    }
                    v619 = (CoreML::Specification::AddBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v159);
                    int v621 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v621--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v621;
                    if (v621 < 0 != v244) {
                      return 0;
                    }
                    int v622 = (int)v619;
                    uint64_t result = CoreML::Specification::AddBroadcastableLayerParams::MergePartialFromCodedStream(v619, (char **)a2, v620);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v622)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 885 || v15 != 170) {
                      goto LABEL_9;
                    }
                    if (*v5 != 885)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 885;
                      operator new();
                    }
                    int v43 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v43 < 0)
                    {
                      int v44 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v44 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v44 = *v43;
                      *(void *)a2 = v43 + 1;
                    }
                    v532 = (CoreML::Specification::PowBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
                    int v534 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v534--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v534;
                    if (v534 < 0 != v244) {
                      return 0;
                    }
                    int v535 = (int)v532;
                    uint64_t result = CoreML::Specification::PowBroadcastableLayerParams::MergePartialFromCodedStream(v532, (char **)a2, v533);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v535)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 > 0x388)
                {
                  if (v19 == 905)
                  {
                    if (v15 != 74) {
                      goto LABEL_9;
                    }
                    if (*v5 != 905)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 905;
                      operator new();
                    }
                    v194 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v194 < 0)
                    {
                      int v195 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v195 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v195 = *v194;
                      *(void *)a2 = v194 + 1;
                    }
                    v659 = (CoreML::Specification::SubtractBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v195);
                    int v661 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v661--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v661;
                    if (v661 < 0 != v244) {
                      return 0;
                    }
                    int v662 = (int)v659;
                    uint64_t result = CoreML::Specification::SubtractBroadcastableLayerParams::MergePartialFromCodedStream(v659, (char **)a2, v660);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v662)) {
                      return 0;
                    }
                  }
                  else if (v19 == 920)
                  {
                    if (v15 != 194) {
                      goto LABEL_9;
                    }
                    if (*v5 != 920)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 920;
                      operator new();
                    }
                    v196 = *v6;
                    v408 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v408 < 0)
                    {
                      int v409 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v409 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v409 = *v408;
                      *(void *)a2 = v408 + 1;
                    }
                    int v973 = google::protobuf::io::CodedInputStream::PushLimit(a2, v409);
                    int v975 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v975--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v975;
                    if (v975 < 0 != v244) {
                      return 0;
                    }
                    int v976 = v973;
                    uint64_t result = CoreML::Specification::TileLayerParams::MergePartialFromCodedStream(v196, a2, v974);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v976)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 925 || v15 != 234) {
                      goto LABEL_9;
                    }
                    if (*v5 != 925)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 925;
                      operator new();
                    }
                    BOOL v62 = *v6;
                    v304 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v304 < 0)
                    {
                      int v305 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v305 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v305 = *v304;
                      *(void *)a2 = v304 + 1;
                    }
                    int v770 = google::protobuf::io::CodedInputStream::PushLimit(a2, v305);
                    int v772 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v772--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v772;
                    if (v772 < 0 != v244) {
                      return 0;
                    }
                    int v773 = v770;
                    uint64_t result = CoreML::Specification::StackLayerParams::MergePartialFromCodedStream(v62, (char **)a2, v771);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v773)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 890)
                {
                  if (v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 890)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 890;
                    operator new();
                  }
                  v121 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v121 < 0)
                  {
                    int v122 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v122 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v122 = *v121;
                    *(void *)a2 = v121 + 1;
                  }
                  v580 = (CoreML::Specification::DivideBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v122);
                  int v582 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v582--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v582;
                  if (v582 < 0 != v244) {
                    return 0;
                  }
                  int v583 = (int)v580;
                  uint64_t result = CoreML::Specification::DivideBroadcastableLayerParams::MergePartialFromCodedStream(v580, (char **)a2, v581);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v583)) {
                    return 0;
                  }
                }
                else if (v19 == 895)
                {
                  if (v15 != 250) {
                    goto LABEL_9;
                  }
                  if (*v5 != 895)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 895;
                    operator new();
                  }
                  v123 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v123 < 0)
                  {
                    int v124 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v124 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v124 = *v123;
                    *(void *)a2 = v123 + 1;
                  }
                  v584 = (CoreML::Specification::FloorDivBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v124);
                  int v586 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v586--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v586;
                  if (v586 < 0 != v244) {
                    return 0;
                  }
                  int v587 = (int)v584;
                  uint64_t result = CoreML::Specification::FloorDivBroadcastableLayerParams::MergePartialFromCodedStream(v584, (char **)a2, v585);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v587)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 900 || v15 != 34) {
                    goto LABEL_9;
                  }
                  if (*v5 != 900)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 900;
                    operator new();
                  }
                  unsigned int v23 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
                  {
                    int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v24 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v24 = *v23;
                    *(void *)a2 = v23 + 1;
                  }
                  v516 = (CoreML::Specification::MultiplyBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
                  int v518 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v518--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v518;
                  if (v518 < 0 != v244) {
                    return 0;
                  }
                  int v519 = (int)v516;
                  uint64_t result = CoreML::Specification::MultiplyBroadcastableLayerParams::MergePartialFromCodedStream(v516, (char **)a2, v517);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v519)) {
                    return 0;
                  }
                }
              }
              if (v15 >> 3 <= 0x199) {
                break;
              }
              if (v15 >> 3 > 0x2DE)
              {
                if (v15 >> 3 > 0x32E)
                {
                  if (v15 >> 3 > 0x347)
                  {
                    if (v15 >> 3 > 0x351)
                    {
                      if (v19 == 850)
                      {
                        if (v15 != 146) {
                          goto LABEL_9;
                        }
                        if (*v5 != 850)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 850;
                          operator new();
                        }
                        v231 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v231 < 0)
                        {
                          int v232 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v232 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v232 = *v231;
                          *(void *)a2 = v231 + 1;
                        }
                        v691 = (CoreML::Specification::LogicalNotLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v232);
                        int v693 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v693--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v693;
                        if (v693 < 0 != v244) {
                          return 0;
                        }
                        int v694 = (int)v691;
                        uint64_t result = CoreML::Specification::LogicalNotLayerParams::MergePartialFromCodedStream(v691, (char **)a2, v692);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v694)) {
                          return 0;
                        }
                      }
                      else
                      {
                        if (v19 != 855 || v15 != 186) {
                          goto LABEL_9;
                        }
                        if (*v5 != 855)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 855;
                          operator new();
                        }
                        uint64_t v96 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v96 < 0)
                        {
                          int v97 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v97 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v97 = *v96;
                          *(void *)a2 = v96 + 1;
                        }
                        v576 = (CoreML::Specification::LogicalAndLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v97);
                        int v578 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v578--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v578;
                        if (v578 < 0 != v244) {
                          return 0;
                        }
                        int v579 = (int)v576;
                        uint64_t result = CoreML::Specification::LogicalAndLayerParams::MergePartialFromCodedStream(v576, (char **)a2, v577);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v579)) {
                          return 0;
                        }
                      }
                    }
                    else if (v19 == 840)
                    {
                      if (v15 != 66) {
                        goto LABEL_9;
                      }
                      if (*v5 != 840)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 840;
                        operator new();
                      }
                      v190 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v190 < 0)
                      {
                        int v191 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v191 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v191 = *v190;
                        *(void *)a2 = v190 + 1;
                      }
                      v655 = (CoreML::Specification::LogicalOrLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v191);
                      int v657 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v657--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v657;
                      if (v657 < 0 != v244) {
                        return 0;
                      }
                      int v658 = (int)v655;
                      uint64_t result = CoreML::Specification::LogicalOrLayerParams::MergePartialFromCodedStream(v655, (char **)a2, v656);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v658)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 845 || v15 != 106) {
                        goto LABEL_9;
                      }
                      if (*v5 != 845)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 845;
                        operator new();
                      }
                      uint64_t v58 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v58 < 0)
                      {
                        int v59 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v59 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v59 = *v58;
                        *(void *)a2 = v58 + 1;
                      }
                      v540 = (CoreML::Specification::LogicalXorLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v59);
                      int v542 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v542--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v542;
                      if (v542 < 0 != v244) {
                        return 0;
                      }
                      int v543 = (int)v540;
                      uint64_t result = CoreML::Specification::LogicalXorLayerParams::MergePartialFromCodedStream(v540, (char **)a2, v541);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v543)) {
                        return 0;
                      }
                    }
                  }
                  else
                  {
                    switch(v19)
                    {
                      case 0x339u:
                        if (v15 != 202) {
                          goto LABEL_9;
                        }
                        if (*v5 != 825)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 825;
                          operator new();
                        }
                        unint64_t v40 = *v6;
                        v250 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v250 < 0)
                        {
                          int v251 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v251 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v251 = *v250;
                          *(void *)a2 = v250 + 1;
                        }
                        int v482 = google::protobuf::io::CodedInputStream::PushLimit(a2, v251);
                        int v484 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v484--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v484;
                        if (v484 < 0 != v244) {
                          return 0;
                        }
                        int v485 = v482;
                        uint64_t result = CoreML::Specification::LessThanLayerParams::MergePartialFromCodedStream(v40, (char **)a2, v483);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v485)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x33Au:
                      case 0x33Cu:
                      case 0x33Du:
                      case 0x33Fu:
                        goto LABEL_9;
                      case 0x33Bu:
                        if (v15 != 218) {
                          goto LABEL_9;
                        }
                        if (*v5 != 827)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 827;
                          operator new();
                        }
                        uint64_t v101 = *v6;
                        v252 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v252 < 0)
                        {
                          int v253 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v253 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v253 = *v252;
                          *(void *)a2 = v252 + 1;
                        }
                        int v486 = google::protobuf::io::CodedInputStream::PushLimit(a2, v253);
                        int v488 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v488--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v488;
                        if (v488 < 0 != v244) {
                          return 0;
                        }
                        int v489 = v486;
                        uint64_t result = CoreML::Specification::LessEqualLayerParams::MergePartialFromCodedStream(v101, (char **)a2, v487);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v489)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x33Eu:
                        if (v15 != 242) {
                          goto LABEL_9;
                        }
                        if (*v5 != 830)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 830;
                          operator new();
                        }
                        std::string::size_type v102 = *v6;
                        v254 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v254 < 0)
                        {
                          int v255 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v255 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v255 = *v254;
                          *(void *)a2 = v254 + 1;
                        }
                        int v490 = google::protobuf::io::CodedInputStream::PushLimit(a2, v255);
                        int v492 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v492--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v492;
                        if (v492 < 0 != v244) {
                          return 0;
                        }
                        int v493 = v490;
                        uint64_t result = CoreML::Specification::GreaterThanLayerParams::MergePartialFromCodedStream(v102, (char **)a2, v491);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v493)) {
                          return 0;
                        }
                        goto LABEL_2;
                      case 0x340u:
                        if (v15 != 2) {
                          goto LABEL_9;
                        }
                        if (*v5 != 832)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 832;
                          operator new();
                        }
                        uint64_t v103 = *v6;
                        v256 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v256 < 0)
                        {
                          int v257 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v257 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v257 = *v256;
                          *(void *)a2 = v256 + 1;
                        }
                        int v494 = google::protobuf::io::CodedInputStream::PushLimit(a2, v257);
                        int v496 = *((_DWORD *)a2 + 13);
                        BOOL v244 = __OFSUB__(v496--, 1);
                        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v496;
                        if (v496 < 0 != v244) {
                          return 0;
                        }
                        int v497 = v494;
                        uint64_t result = CoreML::Specification::GreaterEqualLayerParams::MergePartialFromCodedStream(v103, (char **)a2, v495);
                        if (!result) {
                          return result;
                        }
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v497)) {
                          return 0;
                        }
                        goto LABEL_2;
                      default:
                        if (v19 == 815)
                        {
                          if (v15 != 122) {
                            goto LABEL_9;
                          }
                          if (*v5 != 815)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 815;
                            operator new();
                          }
                          v233 = *v6;
                          v464 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v464 < 0)
                          {
                            int v465 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v465 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v465 = *v464;
                            *(void *)a2 = v464 + 1;
                          }
                          int v1059 = google::protobuf::io::CodedInputStream::PushLimit(a2, v465);
                          int v1061 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1061--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1061;
                          if (v1061 < 0 != v244) {
                            return 0;
                          }
                          int v1062 = v1059;
                          uint64_t result = CoreML::Specification::EqualLayerParams::MergePartialFromCodedStream(v233, (char **)a2, v1060);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1062)) {
                            return 0;
                          }
                        }
                        else
                        {
                          if (v19 != 820 || v15 != 162) {
                            goto LABEL_9;
                          }
                          if (*v5 != 820)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 820;
                            operator new();
                          }
                          uint64_t v77 = *v6;
                          v462 = *(char **)a2;
                          if (*(void *)a2 >= *((void *)a2 + 1) || *v462 < 0)
                          {
                            int v463 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v463 < 0) {
                              return 0;
                            }
                          }
                          else
                          {
                            int v463 = *v462;
                            *(void *)a2 = v462 + 1;
                          }
                          int v1055 = google::protobuf::io::CodedInputStream::PushLimit(a2, v463);
                          int v1057 = *((_DWORD *)a2 + 13);
                          BOOL v244 = __OFSUB__(v1057--, 1);
                          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1057;
                          if (v1057 < 0 != v244) {
                            return 0;
                          }
                          int v1058 = v1055;
                          uint64_t result = CoreML::Specification::NotEqualLayerParams::MergePartialFromCodedStream(v77, (char **)a2, v1056);
                          if (!result) {
                            return result;
                          }
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1058)) {
                            return 0;
                          }
                        }
                        break;
                    }
                  }
                }
                else if (v15 >> 3 > 0x301)
                {
                  if (v15 >> 3 <= 0x30B)
                  {
                    if (v19 == 770)
                    {
                      if (v15 != 18) {
                        goto LABEL_9;
                      }
                      if (*v5 != 770)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 770;
                        operator new();
                      }
                      v221 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v221 < 0)
                      {
                        int v222 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v222 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v222 = *v221;
                        *(void *)a2 = v221 + 1;
                      }
                      v683 = (CoreML::Specification::AsinhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v222);
                      int v685 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v685--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v685;
                      if (v685 < 0 != v244) {
                        return 0;
                      }
                      int v686 = (int)v683;
                      uint64_t result = CoreML::Specification::AsinhLayerParams::MergePartialFromCodedStream(v683, (char **)a2, v684);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v686)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 775 || v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 775)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 775;
                        operator new();
                      }
                      uint64_t v86 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v86 < 0)
                      {
                        int v87 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v87 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v87 = *v86;
                        *(void *)a2 = v86 + 1;
                      }
                      v568 = (CoreML::Specification::AcoshLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v87);
                      int v570 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v570--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v570;
                      if (v570 < 0 != v244) {
                        return 0;
                      }
                      int v571 = (int)v568;
                      uint64_t result = CoreML::Specification::AcoshLayerParams::MergePartialFromCodedStream(v568, (char **)a2, v569);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v571)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 780)
                  {
                    if (v15 != 98) {
                      goto LABEL_9;
                    }
                    if (*v5 != 780)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 780;
                      operator new();
                    }
                    v169 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v169 < 0)
                    {
                      int v170 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v170 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v170 = *v169;
                      *(void *)a2 = v169 + 1;
                    }
                    v635 = (CoreML::Specification::AtanhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v170);
                    int v637 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v637--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v637;
                    if (v637 < 0 != v244) {
                      return 0;
                    }
                    int v638 = (int)v635;
                    uint64_t result = CoreML::Specification::AtanhLayerParams::MergePartialFromCodedStream(v635, (char **)a2, v636);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v638)) {
                      return 0;
                    }
                  }
                  else if (v19 == 790)
                  {
                    if (v15 != 178) {
                      goto LABEL_9;
                    }
                    if (*v5 != 790)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 790;
                      operator new();
                    }
                    v171 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v171 < 0)
                    {
                      int v172 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v172 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v172 = *v171;
                      *(void *)a2 = v171 + 1;
                    }
                    v639 = (CoreML::Specification::ErfLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v172);
                    int v641 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v641--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v641;
                    if (v641 < 0 != v244) {
                      return 0;
                    }
                    int v642 = (int)v639;
                    uint64_t result = CoreML::Specification::ErfLayerParams::MergePartialFromCodedStream(v639, (char **)a2, v640);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v642)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 795 || v15 != 218) {
                      goto LABEL_9;
                    }
                    if (*v5 != 795)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 795;
                      operator new();
                    }
                    BOOL v49 = *v6;
                    v288 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v288 < 0)
                    {
                      int v289 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v289 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v289 = *v288;
                      *(void *)a2 = v288 + 1;
                    }
                    int v738 = google::protobuf::io::CodedInputStream::PushLimit(a2, v289);
                    int v740 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v740--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v740;
                    if (v740 < 0 != v244) {
                      return 0;
                    }
                    int v741 = v738;
                    uint64_t result = CoreML::Specification::GeluLayerParams::MergePartialFromCodedStream(v49, (char **)a2, v739);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v741)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 <= 0x2ED)
                {
                  if (v19 == 735)
                  {
                    if (v15 != 250) {
                      goto LABEL_9;
                    }
                    if (*v5 != 735)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 735;
                      operator new();
                    }
                    v205 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v205 < 0)
                    {
                      int v206 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v206 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v206 = *v205;
                      *(void *)a2 = v205 + 1;
                    }
                    v671 = (CoreML::Specification::AcosLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v206);
                    int v673 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v673--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v673;
                    if (v673 < 0 != v244) {
                      return 0;
                    }
                    int v674 = (int)v671;
                    uint64_t result = CoreML::Specification::AcosLayerParams::MergePartialFromCodedStream(v671, (char **)a2, v672);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v674)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 740 || v15 != 34) {
                      goto LABEL_9;
                    }
                    if (*v5 != 740)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 740;
                      operator new();
                    }
                    uint64_t v68 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v68 < 0)
                    {
                      int v69 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v69 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v69 = *v68;
                      *(void *)a2 = v68 + 1;
                    }
                    v552 = (CoreML::Specification::AtanLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v69);
                    int v554 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v554--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v554;
                    if (v554 < 0 != v244) {
                      return 0;
                    }
                    int v555 = (int)v552;
                    uint64_t result = CoreML::Specification::AtanLayerParams::MergePartialFromCodedStream(v552, (char **)a2, v553);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v555)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 750)
                {
                  if (v15 != 114) {
                    goto LABEL_9;
                  }
                  if (*v5 != 750)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 750;
                    operator new();
                  }
                  v134 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v134 < 0)
                  {
                    int v135 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v135 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v135 = *v134;
                    *(void *)a2 = v134 + 1;
                  }
                  v600 = (CoreML::Specification::SinhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v135);
                  int v602 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v602--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v602;
                  if (v602 < 0 != v244) {
                    return 0;
                  }
                  int v603 = (int)v600;
                  uint64_t result = CoreML::Specification::SinhLayerParams::MergePartialFromCodedStream(v600, (char **)a2, v601);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v603)) {
                    return 0;
                  }
                }
                else if (v19 == 755)
                {
                  if (v15 != 154) {
                    goto LABEL_9;
                  }
                  if (*v5 != 755)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 755;
                    operator new();
                  }
                  char v136 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v136 < 0)
                  {
                    int v137 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v137 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v137 = *v136;
                    *(void *)a2 = v136 + 1;
                  }
                  v604 = (CoreML::Specification::CoshLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v137);
                  int v606 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v606--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v606;
                  if (v606 < 0 != v244) {
                    return 0;
                  }
                  int v607 = (int)v604;
                  uint64_t result = CoreML::Specification::CoshLayerParams::MergePartialFromCodedStream(v604, (char **)a2, v605);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v607)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 760 || v15 != 194) {
                    goto LABEL_9;
                  }
                  if (*v5 != 760)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 760;
                    operator new();
                  }
                  uint64_t v30 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
                  {
                    int v31 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v31 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v31 = *v30;
                    *(void *)a2 = v30 + 1;
                  }
                  v524 = (CoreML::Specification::TanhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v31);
                  int v526 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v526--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v526;
                  if (v526 < 0 != v244) {
                    return 0;
                  }
                  int v527 = (int)v524;
                  uint64_t result = CoreML::Specification::TanhLayerParams::MergePartialFromCodedStream(v524, (char **)a2, v525);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v527)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x27F)
              {
                if (v15 >> 3 > 0x25C)
                {
                  if (v15 >> 3 <= 0x26B)
                  {
                    if (v19 == 605)
                    {
                      if (v15 != 234) {
                        goto LABEL_9;
                      }
                      if (*v5 != 605)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 605;
                        operator new();
                      }
                      v225 = *v6;
                      v442 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v442 < 0)
                      {
                        int v443 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v443 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v443 = *v442;
                        *(void *)a2 = v442 + 1;
                      }
                      int v1039 = google::protobuf::io::CodedInputStream::PushLimit(a2, v443);
                      int v1041 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v1041--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1041;
                      if (v1041 < 0 != v244) {
                        return 0;
                      }
                      int v1042 = v1039;
                      uint64_t result = CoreML::Specification::BranchLayerParams::MergePartialFromCodedStream(v225, a2, v1040);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1042)) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (v19 != 615 || v15 != 58) {
                        goto LABEL_9;
                      }
                      if (*v5 != 615)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 615;
                        operator new();
                      }
                      uint64_t v90 = *v6;
                      v334 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v334 < 0)
                      {
                        int v335 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v335 < 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        int v335 = *v334;
                        *(void *)a2 = v334 + 1;
                      }
                      int v828 = google::protobuf::io::CodedInputStream::PushLimit(a2, v335);
                      int v830 = *((_DWORD *)a2 + 13);
                      BOOL v244 = __OFSUB__(v830--, 1);
                      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v830;
                      if (v830 < 0 != v244) {
                        return 0;
                      }
                      int v831 = v828;
                      uint64_t result = CoreML::Specification::LoopLayerParams::MergePartialFromCodedStream(v90, a2, v829);
                      if (!result) {
                        return result;
                      }
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v831)) {
                        return 0;
                      }
                    }
                  }
                  else if (v19 == 620)
                  {
                    if (v15 != 98) {
                      goto LABEL_9;
                    }
                    if (*v5 != 620)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 620;
                      operator new();
                    }
                    v177 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v177 < 0)
                    {
                      int v178 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v178 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v178 = *v177;
                      *(void *)a2 = v177 + 1;
                    }
                    v643 = (CoreML::Specification::LoopBreakLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v178);
                    int v645 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v645--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v645;
                    if (v645 < 0 != v244) {
                      return 0;
                    }
                    int v646 = (int)v643;
                    uint64_t result = CoreML::Specification::LoopBreakLayerParams::MergePartialFromCodedStream(v643, (char **)a2, v644);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v646)) {
                      return 0;
                    }
                  }
                  else if (v19 == 625)
                  {
                    if (v15 != 138) {
                      goto LABEL_9;
                    }
                    if (*v5 != 625)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 625;
                      operator new();
                    }
                    v179 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v179 < 0)
                    {
                      int v180 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v180 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v180 = *v179;
                      *(void *)a2 = v179 + 1;
                    }
                    v647 = (CoreML::Specification::LoopContinueLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v180);
                    int v649 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v649--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v649;
                    if (v649 < 0 != v244) {
                      return 0;
                    }
                    int v650 = (int)v647;
                    uint64_t result = CoreML::Specification::LoopContinueLayerParams::MergePartialFromCodedStream(v647, (char **)a2, v648);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v650)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 635 || v15 != 218) {
                      goto LABEL_9;
                    }
                    if (*v5 != 635)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 635;
                      operator new();
                    }
                    uint64_t v52 = *v6;
                    v294 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v294 < 0)
                    {
                      int v295 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v295 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v295 = *v294;
                      *(void *)a2 = v294 + 1;
                    }
                    int v750 = google::protobuf::io::CodedInputStream::PushLimit(a2, v295);
                    int v752 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v752--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v752;
                    if (v752 < 0 != v244) {
                      return 0;
                    }
                    int v753 = v750;
                    uint64_t result = CoreML::Specification::RangeStaticLayerParams::MergePartialFromCodedStream(v52, (char **)a2, v751);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v753)) {
                      return 0;
                    }
                  }
                }
                else if (v15 >> 3 <= 0x1AD)
                {
                  if (v19 == 410)
                  {
                    if (v15 != 210) {
                      goto LABEL_9;
                    }
                    if (*v5 != 410)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 410;
                      operator new();
                    }
                    v209 = *v6;
                    v422 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v422 < 0)
                    {
                      int v423 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v423 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v423 = *v422;
                      *(void *)a2 = v422 + 1;
                    }
                    int v1000 = google::protobuf::io::CodedInputStream::PushLimit(a2, v423);
                    int v1002 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v1002--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1002;
                    if (v1002 < 0 != v244) {
                      return 0;
                    }
                    int v1003 = v1000;
                    uint64_t result = CoreML::Specification::GRULayerParams::MergePartialFromCodedStream(v209, a2, v1001);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1003)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 420 || v15 != 34) {
                      goto LABEL_9;
                    }
                    if (*v5 != 420)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 420;
                      operator new();
                    }
                    uint64_t v73 = *v6;
                    v314 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v314 < 0)
                    {
                      int v315 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v315 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v315 = *v314;
                      *(void *)a2 = v314 + 1;
                    }
                    int v789 = google::protobuf::io::CodedInputStream::PushLimit(a2, v315);
                    int v791 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v791--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v791;
                    if (v791 < 0 != v244) {
                      return 0;
                    }
                    int v792 = v789;
                    uint64_t result = CoreML::Specification::UniDirectionalLSTMLayerParams::MergePartialFromCodedStream(v73, a2, v790);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v792)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 430)
                {
                  if (v15 != 114) {
                    goto LABEL_9;
                  }
                  if (*v5 != 430)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 430;
                    operator new();
                  }
                  v144 = *v6;
                  v352 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v352 < 0)
                  {
                    int v353 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v353 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v353 = *v352;
                    *(void *)a2 = v352 + 1;
                  }
                  int v863 = google::protobuf::io::CodedInputStream::PushLimit(a2, v353);
                  int v865 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v865--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v865;
                  if (v865 < 0 != v244) {
                    return 0;
                  }
                  int v866 = v863;
                  uint64_t result = CoreML::Specification::BiDirectionalLSTMLayerParams::MergePartialFromCodedStream(v144, a2, v864);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v866)) {
                    return 0;
                  }
                }
                else if (v19 == 500)
                {
                  if (v15 != 162) {
                    goto LABEL_9;
                  }
                  if (*v5 != 500)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 500;
                    operator new();
                  }
                  v145 = *v6;
                  v354 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v354 < 0)
                  {
                    int v355 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v355 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v355 = *v354;
                    *(void *)a2 = v354 + 1;
                  }
                  int v867 = google::protobuf::io::CodedInputStream::PushLimit(a2, v355);
                  int v869 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v869--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v869;
                  if (v869 < 0 != v244) {
                    return 0;
                  }
                  int v870 = v867;
                  uint64_t result = CoreML::Specification::CustomLayerParams::MergePartialFromCodedStream(v145, a2, v868);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v870)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 600 || v15 != 194) {
                    goto LABEL_9;
                  }
                  if (*v5 != 600)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 600;
                    operator new();
                  }
                  unsigned int v35 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
                  {
                    int v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v36 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v36 = *v35;
                    *(void *)a2 = v35 + 1;
                  }
                  v528 = (CoreML::Specification::CopyLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
                  int v530 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v530--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v530;
                  if (v530 < 0 != v244) {
                    return 0;
                  }
                  int v531 = (int)v528;
                  uint64_t result = CoreML::Specification::CopyLayerParams::MergePartialFromCodedStream(v528, (char **)a2, v529);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v531)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x2AC)
              {
                if (v15 >> 3 <= 0x298)
                {
                  if (v19 == 640)
                  {
                    if (v15 != 2) {
                      goto LABEL_9;
                    }
                    if (*v5 != 640)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 640;
                      operator new();
                    }
                    v218 = *v6;
                    v432 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v432 < 0)
                    {
                      int v433 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v433 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v433 = *v432;
                      *(void *)a2 = v432 + 1;
                    }
                    int v1019 = google::protobuf::io::CodedInputStream::PushLimit(a2, v433);
                    int v1021 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v1021--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1021;
                    if (v1021 < 0 != v244) {
                      return 0;
                    }
                    int v1022 = v1019;
                    uint64_t result = CoreML::Specification::RangeDynamicLayerParams::MergePartialFromCodedStream(v218, (char **)a2, v1020);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1022)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 660 || v15 != 162) {
                      goto LABEL_9;
                    }
                    if (*v5 != 660)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 660;
                      operator new();
                    }
                    uint64_t v82 = *v6;
                    v326 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v326 < 0)
                    {
                      int v327 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v327 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v327 = *v326;
                      *(void *)a2 = v326 + 1;
                    }
                    int v812 = google::protobuf::io::CodedInputStream::PushLimit(a2, v327);
                    int v814 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v814--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v814;
                    if (v814 < 0 != v244) {
                      return 0;
                    }
                    int v815 = v812;
                    uint64_t result = CoreML::Specification::ClipLayerParams::MergePartialFromCodedStream(v82, (char **)a2, v813);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v815)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 665)
                {
                  if (v15 != 202) {
                    goto LABEL_9;
                  }
                  if (*v5 != 665)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 665;
                    operator new();
                  }
                  v160 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v160 < 0)
                  {
                    int v161 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v161 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v161 = *v160;
                    *(void *)a2 = v160 + 1;
                  }
                  v623 = (CoreML::Specification::CeilLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v161);
                  int v625 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v625--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v625;
                  if (v625 < 0 != v244) {
                    return 0;
                  }
                  int v626 = (int)v623;
                  uint64_t result = CoreML::Specification::CeilLayerParams::MergePartialFromCodedStream(v623, (char **)a2, v624);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v626)) {
                    return 0;
                  }
                }
                else if (v19 == 670)
                {
                  if (v15 != 242) {
                    goto LABEL_9;
                  }
                  if (*v5 != 670)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 670;
                    operator new();
                  }
                  v162 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v162 < 0)
                  {
                    int v163 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v163 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v163 = *v162;
                    *(void *)a2 = v162 + 1;
                  }
                  v627 = (CoreML::Specification::FloorLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v163);
                  int v629 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v629--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v629;
                  if (v629 < 0 != v244) {
                    return 0;
                  }
                  int v630 = (int)v627;
                  uint64_t result = CoreML::Specification::FloorLayerParams::MergePartialFromCodedStream(v627, (char **)a2, v628);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v630)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 680 || v15 != 66) {
                    goto LABEL_9;
                  }
                  if (*v5 != 680)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 680;
                    operator new();
                  }
                  int v45 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
                  {
                    int v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v46 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v46 = *v45;
                    *(void *)a2 = v45 + 1;
                  }
                  v536 = (CoreML::Specification::SignLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
                  int v538 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v538--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v538;
                  if (v538 < 0 != v244) {
                    return 0;
                  }
                  int v539 = (int)v536;
                  uint64_t result = CoreML::Specification::SignLayerParams::MergePartialFromCodedStream(v536, (char **)a2, v537);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v539)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 > 0x2CA)
              {
                if (v19 == 715)
                {
                  if (v15 != 90) {
                    goto LABEL_9;
                  }
                  if (*v5 != 715)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 715;
                    operator new();
                  }
                  v197 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v197 < 0)
                  {
                    int v198 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v198 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v198 = *v197;
                    *(void *)a2 = v197 + 1;
                  }
                  v663 = (CoreML::Specification::CosLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v198);
                  int v665 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v665--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v665;
                  if (v665 < 0 != v244) {
                    return 0;
                  }
                  int v666 = (int)v663;
                  uint64_t result = CoreML::Specification::CosLayerParams::MergePartialFromCodedStream(v663, (char **)a2, v664);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v666)) {
                    return 0;
                  }
                }
                else if (v19 == 720)
                {
                  if (v15 != 130) {
                    goto LABEL_9;
                  }
                  if (*v5 != 720)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 720;
                    operator new();
                  }
                  v199 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v199 < 0)
                  {
                    int v200 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v200 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v200 = *v199;
                    *(void *)a2 = v199 + 1;
                  }
                  v667 = (CoreML::Specification::TanLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v200);
                  int v669 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v669--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v669;
                  if (v669 < 0 != v244) {
                    return 0;
                  }
                  int v670 = (int)v667;
                  uint64_t result = CoreML::Specification::TanLayerParams::MergePartialFromCodedStream(v667, (char **)a2, v668);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v670)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 730 || v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 730)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 730;
                    operator new();
                  }
                  std::string::size_type v63 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v63 < 0)
                  {
                    int v64 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v64 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v64 = *v63;
                    *(void *)a2 = v63 + 1;
                  }
                  v548 = (CoreML::Specification::AsinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v64);
                  int v550 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v550--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v550;
                  if (v550 < 0 != v244) {
                    return 0;
                  }
                  int v551 = (int)v548;
                  uint64_t result = CoreML::Specification::AsinLayerParams::MergePartialFromCodedStream(v548, (char **)a2, v549);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v551)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 685)
              {
                if (v15 != 106) {
                  goto LABEL_9;
                }
                if (*v5 != 685)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 685;
                  operator new();
                }
                v125 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v125 < 0)
                {
                  int v126 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v126 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v126 = *v125;
                  *(void *)a2 = v125 + 1;
                }
                v588 = (CoreML::Specification::RoundLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v126);
                int v590 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v590--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v590;
                if (v590 < 0 != v244) {
                  return 0;
                }
                int v591 = (int)v588;
                uint64_t result = CoreML::Specification::RoundLayerParams::MergePartialFromCodedStream(v588, (char **)a2, v589);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v591)) {
                  return 0;
                }
              }
              else if (v19 == 700)
              {
                if (v15 != 226) {
                  goto LABEL_9;
                }
                if (*v5 != 700)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 700;
                  operator new();
                }
                v127 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v127 < 0)
                {
                  int v128 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v128 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v128 = *v127;
                  *(void *)a2 = v127 + 1;
                }
                v592 = (CoreML::Specification::Exp2LayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v128);
                int v594 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v594--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v594;
                if (v594 < 0 != v244) {
                  return 0;
                }
                int v595 = (int)v592;
                uint64_t result = CoreML::Specification::Exp2LayerParams::MergePartialFromCodedStream(v592, (char **)a2, v593);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v595)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 710 || v15 != 50) {
                  goto LABEL_9;
                }
                if (*v5 != 710)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 710;
                  operator new();
                }
                int v25 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
                {
                  int v26 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v26 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v26 = *v25;
                  *(void *)a2 = v25 + 1;
                }
                v520 = (CoreML::Specification::SinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v26);
                int v522 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v522--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v522;
                if (v522 < 0 != v244) {
                  return 0;
                }
                int v523 = (int)v520;
                uint64_t result = CoreML::Specification::SinLayerParams::MergePartialFromCodedStream(v520, (char **)a2, v521);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v523)) {
                  return 0;
                }
              }
            }
            if (v15 >> 3 <= 0xDB) {
              break;
            }
            if (v15 >> 3 > 0x121)
            {
              if (v15 >> 3 > 0x149)
              {
                if (v15 >> 3 <= 0x158)
                {
                  if (v19 == 330)
                  {
                    if (v15 != 82) {
                      goto LABEL_9;
                    }
                    if (*v5 != 330)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 330;
                      operator new();
                    }
                    v227 = *v6;
                    v446 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v446 < 0)
                    {
                      int v447 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v447 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v447 = *v446;
                      *(void *)a2 = v446 + 1;
                    }
                    int v1047 = google::protobuf::io::CodedInputStream::PushLimit(a2, v447);
                    int v1049 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v1049--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1049;
                    if (v1049 < 0 != v244) {
                      return 0;
                    }
                    int v1050 = v1047;
                    uint64_t result = CoreML::Specification::SplitLayerParams::MergePartialFromCodedStream(v227, (char **)a2, v1048);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1050)) {
                      return 0;
                    }
                  }
                  else
                  {
                    if (v19 != 340 || v15 != 162) {
                      goto LABEL_9;
                    }
                    if (*v5 != 340)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 340;
                      operator new();
                    }
                    uint64_t v93 = *v6;
                    v336 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v336 < 0)
                    {
                      int v337 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v337 < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int v337 = *v336;
                      *(void *)a2 = v336 + 1;
                    }
                    int v832 = google::protobuf::io::CodedInputStream::PushLimit(a2, v337);
                    int v834 = *((_DWORD *)a2 + 13);
                    BOOL v244 = __OFSUB__(v834--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v834;
                    if (v834 < 0 != v244) {
                      return 0;
                    }
                    int v835 = v832;
                    uint64_t result = CoreML::Specification::SequenceRepeatLayerParams::MergePartialFromCodedStream(v93, (char **)a2, v833);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v835)) {
                      return 0;
                    }
                  }
                }
                else if (v19 == 345)
                {
                  if (v15 != 202) {
                    goto LABEL_9;
                  }
                  if (*v5 != 345)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 345;
                    operator new();
                  }
                  v183 = *v6;
                  v394 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v394 < 0)
                  {
                    int v395 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v395 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v395 = *v394;
                    *(void *)a2 = v394 + 1;
                  }
                  int v945 = google::protobuf::io::CodedInputStream::PushLimit(a2, v395);
                  int v947 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v947--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v947;
                  if (v947 < 0 != v244) {
                    return 0;
                  }
                  int v948 = v945;
                  uint64_t result = CoreML::Specification::ReorganizeDataLayerParams::MergePartialFromCodedStream(v183, (char **)a2, v946);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v948)) {
                    return 0;
                  }
                }
                else if (v19 == 350)
                {
                  if (v15 != 242) {
                    goto LABEL_9;
                  }
                  if (*v5 != 350)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 350;
                    operator new();
                  }
                  v184 = *v6;
                  v396 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v396 < 0)
                  {
                    int v397 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v397 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v397 = *v396;
                    *(void *)a2 = v396 + 1;
                  }
                  int v949 = google::protobuf::io::CodedInputStream::PushLimit(a2, v397);
                  int v951 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v951--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v951;
                  if (v951 < 0 != v244) {
                    return 0;
                  }
                  int v952 = v949;
                  uint64_t result = CoreML::Specification::SliceLayerParams::MergePartialFromCodedStream(v184, (char **)a2, v950);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v952)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 400 || v15 != 130) {
                    goto LABEL_9;
                  }
                  if (*v5 != 400)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 400;
                    operator new();
                  }
                  uint64_t v54 = *v6;
                  v298 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v298 < 0)
                  {
                    int v299 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v299 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v299 = *v298;
                    *(void *)a2 = v298 + 1;
                  }
                  int v758 = google::protobuf::io::CodedInputStream::PushLimit(a2, v299);
                  int v760 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v760--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v760;
                  if (v760 < 0 != v244) {
                    return 0;
                  }
                  int v761 = v758;
                  uint64_t result = CoreML::Specification::SimpleRecurrentLayerParams::MergePartialFromCodedStream(v54, a2, v759);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v761)) {
                    return 0;
                  }
                }
              }
              else if (v15 >> 3 <= 0x12C)
              {
                if (v19 == 290)
                {
                  if (v15 != 18) {
                    goto LABEL_9;
                  }
                  if (*v5 != 290)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 290;
                    operator new();
                  }
                  v211 = *v6;
                  v426 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v426 < 0)
                  {
                    int v427 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v427 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v427 = *v426;
                    *(void *)a2 = v426 + 1;
                  }
                  int v1008 = google::protobuf::io::CodedInputStream::PushLimit(a2, v427);
                  int v1010 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v1010--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1010;
                  if (v1010 < 0 != v244) {
                    return 0;
                  }
                  int v1011 = v1008;
                  uint64_t result = CoreML::Specification::LoadConstantLayerParams::MergePartialFromCodedStream(v211, a2, v1009);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1011)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 300 || v15 != 98) {
                    goto LABEL_9;
                  }
                  if (*v5 != 300)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 300;
                    operator new();
                  }
                  uint64_t v75 = *v6;
                  v318 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v318 < 0)
                  {
                    int v319 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v319 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v319 = *v318;
                    *(void *)a2 = v318 + 1;
                  }
                  int v797 = google::protobuf::io::CodedInputStream::PushLimit(a2, v319);
                  int v799 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v799--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v799;
                  if (v799 < 0 != v244) {
                    return 0;
                  }
                  int v800 = v797;
                  uint64_t result = CoreML::Specification::ReshapeLayerParams::MergePartialFromCodedStream(v75, a2, v798);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v800)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 301)
              {
                if (v15 != 106) {
                  goto LABEL_9;
                }
                if (*v5 != 301)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 301;
                  operator new();
                }
                v148 = *v6;
                v360 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v360 < 0)
                {
                  int v361 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v361 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v361 = *v360;
                  *(void *)a2 = v360 + 1;
                }
                int v879 = google::protobuf::io::CodedInputStream::PushLimit(a2, v361);
                int v881 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v881--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v881;
                if (v881 < 0 != v244) {
                  return 0;
                }
                int v882 = v879;
                uint64_t result = CoreML::Specification::FlattenLayerParams::MergePartialFromCodedStream(v148, (char **)a2, v880);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v882)) {
                  return 0;
                }
              }
              else if (v19 == 310)
              {
                if (v15 != 178) {
                  goto LABEL_9;
                }
                if (*v5 != 310)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 310;
                  operator new();
                }
                v149 = *v6;
                v362 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v362 < 0)
                {
                  int v363 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v363 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v363 = *v362;
                  *(void *)a2 = v362 + 1;
                }
                int v883 = google::protobuf::io::CodedInputStream::PushLimit(a2, v363);
                int v885 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v885--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v885;
                if (v885 < 0 != v244) {
                  return 0;
                }
                int v886 = v883;
                uint64_t result = CoreML::Specification::PermuteLayerParams::MergePartialFromCodedStream(v149, a2, v884);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v886)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 320 || v15 != 2) {
                  goto LABEL_9;
                }
                if (*v5 != 320)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 320;
                  operator new();
                }
                uint64_t v38 = *v6;
                v276 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v276 < 0)
                {
                  int v277 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v277 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v277 = *v276;
                  *(void *)a2 = v276 + 1;
                }
                int v715 = google::protobuf::io::CodedInputStream::PushLimit(a2, v277);
                int v717 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v717--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v717;
                if (v717 < 0 != v244) {
                  return 0;
                }
                int v718 = v715;
                uint64_t result = CoreML::Specification::ConcatLayerParams::MergePartialFromCodedStream(v38, a2, v716);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v718)) {
                  return 0;
                }
              }
            }
            else if (v15 >> 3 > 0xF9)
            {
              if (v15 >> 3 <= 0x104)
              {
                if (v19 == 250)
                {
                  if (v15 != 210) {
                    goto LABEL_9;
                  }
                  if (*v5 != 250)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 250;
                    operator new();
                  }
                  v219 = *v6;
                  v434 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v434 < 0)
                  {
                    int v435 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v435 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v435 = *v434;
                    *(void *)a2 = v434 + 1;
                  }
                  int v1023 = google::protobuf::io::CodedInputStream::PushLimit(a2, v435);
                  int v1025 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v1025--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1025;
                  if (v1025 < 0 != v244) {
                    return 0;
                  }
                  int v1026 = v1023;
                  uint64_t result = CoreML::Specification::BiasLayerParams::MergePartialFromCodedStream(v219, a2, v1024);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1026)) {
                    return 0;
                  }
                }
                else
                {
                  if (v19 != 260 || v15 != 34) {
                    goto LABEL_9;
                  }
                  if (*v5 != 260)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 260;
                    operator new();
                  }
                  std::string::size_type v83 = *(char **)a2;
                  if (*(void *)a2 >= *((void *)a2 + 1) || *v83 < 0)
                  {
                    int v84 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v84 < 0) {
                      return 0;
                    }
                  }
                  else
                  {
                    int v84 = *v83;
                    *(void *)a2 = v83 + 1;
                  }
                  v564 = (CoreML::Specification::MaxLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v84);
                  int v566 = *((_DWORD *)a2 + 13);
                  BOOL v244 = __OFSUB__(v566--, 1);
                  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v566;
                  if (v566 < 0 != v244) {
                    return 0;
                  }
                  int v567 = (int)v564;
                  uint64_t result = CoreML::Specification::MaxLayerParams::MergePartialFromCodedStream(v564, (char **)a2, v565);
                  if (!result) {
                    return result;
                  }
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v567)) {
                    return 0;
                  }
                }
              }
              else if (v19 == 261)
              {
                if (v15 != 42) {
                  goto LABEL_9;
                }
                if (*v5 != 261)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 261;
                  operator new();
                }
                v164 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v164 < 0)
                {
                  int v165 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v165 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v165 = *v164;
                  *(void *)a2 = v164 + 1;
                }
                v631 = (CoreML::Specification::MinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v165);
                int v633 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v633--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v633;
                if (v633 < 0 != v244) {
                  return 0;
                }
                int v634 = (int)v631;
                uint64_t result = CoreML::Specification::MinLayerParams::MergePartialFromCodedStream(v631, (char **)a2, v632);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v634)) {
                  return 0;
                }
              }
              else if (v19 == 270)
              {
                if (v15 != 114) {
                  goto LABEL_9;
                }
                if (*v5 != 270)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 270;
                  operator new();
                }
                v166 = *v6;
                v376 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v376 < 0)
                {
                  int v377 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v377 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v377 = *v376;
                  *(void *)a2 = v376 + 1;
                }
                int v909 = google::protobuf::io::CodedInputStream::PushLimit(a2, v377);
                int v911 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v911--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v911;
                if (v911 < 0 != v244) {
                  return 0;
                }
                int v912 = v909;
                uint64_t result = CoreML::Specification::DotProductLayerParams::MergePartialFromCodedStream(v166, (char **)a2, v910);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v912)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 280 || v15 != 194) {
                  goto LABEL_9;
                }
                if (*v5 != 280)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 280;
                  operator new();
                }
                int v47 = *v6;
                v284 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v284 < 0)
                {
                  int v285 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v285 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v285 = *v284;
                  *(void *)a2 = v284 + 1;
                }
                int v730 = google::protobuf::io::CodedInputStream::PushLimit(a2, v285);
                int v732 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v732--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v732;
                if (v732 < 0 != v244) {
                  return 0;
                }
                int v733 = v730;
                uint64_t result = CoreML::Specification::ReduceLayerParams::MergePartialFromCodedStream(v47, (char **)a2, v731);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v733)) {
                  return 0;
                }
              }
            }
            else if (v15 >> 3 <= 0xE6)
            {
              if (v19 == 220)
              {
                if (v15 != 226) {
                  goto LABEL_9;
                }
                if (*v5 != 220)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 220;
                  operator new();
                }
                v203 = *v6;
                v414 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v414 < 0)
                {
                  int v415 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v415 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v415 = *v414;
                  *(void *)a2 = v414 + 1;
                }
                int v985 = google::protobuf::io::CodedInputStream::PushLimit(a2, v415);
                int v987 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v987--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v987;
                if (v987 < 0 != v244) {
                  return 0;
                }
                int v988 = v985;
                uint64_t result = CoreML::Specification::UnaryFunctionLayerParams::MergePartialFromCodedStream(v203, (char **)a2, v986);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v988)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 230 || v15 != 50) {
                  goto LABEL_9;
                }
                if (*v5 != 230)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 230;
                  operator new();
                }
                v66 = *v6;
                v308 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v308 < 0)
                {
                  int v309 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v309 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v309 = *v308;
                  *(void *)a2 = v308 + 1;
                }
                int v778 = google::protobuf::io::CodedInputStream::PushLimit(a2, v309);
                int v780 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v780--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v780;
                if (v780 < 0 != v244) {
                  return 0;
                }
                int v781 = v778;
                uint64_t result = CoreML::Specification::AddLayerParams::MergePartialFromCodedStream(v66, (char **)a2, v779);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v781)) {
                  return 0;
                }
              }
            }
            else if (v19 == 231)
            {
              if (v15 != 58) {
                goto LABEL_9;
              }
              if (*v5 != 231)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 231;
                operator new();
              }
              v129 = *v6;
              v342 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v342 < 0)
              {
                int v343 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v343 < 0) {
                  return 0;
                }
              }
              else
              {
                int v343 = *v342;
                *(void *)a2 = v342 + 1;
              }
              int v844 = google::protobuf::io::CodedInputStream::PushLimit(a2, v343);
              int v846 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v846--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v846;
              if (v846 < 0 != v244) {
                return 0;
              }
              int v847 = v844;
              uint64_t result = CoreML::Specification::MultiplyLayerParams::MergePartialFromCodedStream(v129, (char **)a2, v845);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v847)) {
                return 0;
              }
            }
            else if (v19 == 240)
            {
              if (v15 != 130) {
                goto LABEL_9;
              }
              if (*v5 != 240)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 240;
                operator new();
              }
              v130 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v130 < 0)
              {
                int v131 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v131 < 0) {
                  return 0;
                }
              }
              else
              {
                int v131 = *v130;
                *(void *)a2 = v130 + 1;
              }
              v596 = (CoreML::Specification::AverageLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v131);
              int v598 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v598--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v598;
              if (v598 < 0 != v244) {
                return 0;
              }
              int v599 = (int)v596;
              uint64_t result = CoreML::Specification::AverageLayerParams::MergePartialFromCodedStream(v596, (char **)a2, v597);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v599)) {
                return 0;
              }
            }
            else
            {
              if (v19 != 245 || v15 != 170) {
                goto LABEL_9;
              }
              if (*v5 != 245)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 245;
                operator new();
              }
              BOOL v28 = *v6;
              v266 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v266 < 0)
              {
                int v267 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v267 < 0) {
                  return 0;
                }
              }
              else
              {
                int v267 = *v266;
                *(void *)a2 = v266 + 1;
              }
              int v695 = google::protobuf::io::CodedInputStream::PushLimit(a2, v267);
              int v697 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v697--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v697;
              if (v697 < 0 != v244) {
                return 0;
              }
              int v698 = v695;
              uint64_t result = CoreML::Specification::ScaleLayerParams::MergePartialFromCodedStream(v28, a2, v696);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v698)) {
                return 0;
              }
            }
          }
          if (v15 >> 3 <= 0x9F) {
            break;
          }
          if (v15 >> 3 > 0xBD)
          {
            if (v15 >> 3 <= 0xD1)
            {
              if (v19 == 190)
              {
                if (v15 != 242) {
                  goto LABEL_9;
                }
                if (*v5 != 190)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 190;
                  operator new();
                }
                v224 = *v6;
                v440 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v440 < 0)
                {
                  int v441 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v441 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v441 = *v440;
                  *(void *)a2 = v440 + 1;
                }
                int v1035 = google::protobuf::io::CodedInputStream::PushLimit(a2, v441);
                int v1037 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v1037--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1037;
                if (v1037 < 0 != v244) {
                  return 0;
                }
                int v1038 = v1035;
                uint64_t result = CoreML::Specification::CropLayerParams::MergePartialFromCodedStream(v224, a2, v1036);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1038)) {
                  return 0;
                }
              }
              else
              {
                if (v19 != 200 || v15 != 66) {
                  goto LABEL_9;
                }
                if (*v5 != 200)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 200;
                  operator new();
                }
                v89 = *v6;
                v332 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v332 < 0)
                {
                  int v333 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v333 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v333 = *v332;
                  *(void *)a2 = v332 + 1;
                }
                int v824 = google::protobuf::io::CodedInputStream::PushLimit(a2, v333);
                int v826 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v826--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v826;
                if (v826 < 0 != v244) {
                  return 0;
                }
                int v827 = v824;
                uint64_t result = CoreML::Specification::PaddingLayerParams::MergePartialFromCodedStream(v89, a2, v825);
                if (!result) {
                  return result;
                }
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v827)) {
                  return 0;
                }
              }
            }
            else if (v19 == 210)
            {
              if (v15 != 146) {
                goto LABEL_9;
              }
              if (*v5 != 210)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 210;
                operator new();
              }
              v175 = *v6;
              v386 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v386 < 0)
              {
                int v387 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v387 < 0) {
                  return 0;
                }
              }
              else
              {
                int v387 = *v386;
                *(void *)a2 = v386 + 1;
              }
              int v929 = google::protobuf::io::CodedInputStream::PushLimit(a2, v387);
              int v931 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v931--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v931;
              if (v931 < 0 != v244) {
                return 0;
              }
              int v932 = v929;
              uint64_t result = CoreML::Specification::UpsampleLayerParams::MergePartialFromCodedStream(v175, a2, v930);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v932)) {
                return 0;
              }
            }
            else if (v19 == 211)
            {
              if (v15 != 154) {
                goto LABEL_9;
              }
              if (*v5 != 211)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 211;
                operator new();
              }
              v176 = *v6;
              v388 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v388 < 0)
              {
                int v389 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v389 < 0) {
                  return 0;
                }
              }
              else
              {
                int v389 = *v388;
                *(void *)a2 = v388 + 1;
              }
              int v933 = google::protobuf::io::CodedInputStream::PushLimit(a2, v389);
              int v935 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v935--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v935;
              if (v935 < 0 != v244) {
                return 0;
              }
              int v936 = v933;
              uint64_t result = CoreML::Specification::ResizeBilinearLayerParams::MergePartialFromCodedStream(v176, a2, v934);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v936)) {
                return 0;
              }
            }
            else
            {
              if (v19 != 212 || v15 != 162) {
                goto LABEL_9;
              }
              if (*v5 != 212)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 212;
                operator new();
              }
              int v51 = *v6;
              v292 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v292 < 0)
              {
                int v293 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v293 < 0) {
                  return 0;
                }
              }
              else
              {
                int v293 = *v292;
                *(void *)a2 = v292 + 1;
              }
              int v746 = google::protobuf::io::CodedInputStream::PushLimit(a2, v293);
              int v748 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v748--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v748;
              if (v748 < 0 != v244) {
                return 0;
              }
              int v749 = v746;
              uint64_t result = CoreML::Specification::CropResizeLayerParams::MergePartialFromCodedStream(v51, a2, v747);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v749)) {
                return 0;
              }
            }
          }
          else
          {
            if (v15 >> 3 <= 0xA9)
            {
              if (v19 == 160)
              {
                if (v15 != 2) {
                  goto LABEL_9;
                }
                if (*v5 != 160)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 160;
                  operator new();
                }
                v208 = *v6;
                v420 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v420 < 0)
                {
                  int v421 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v421 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v421 = *v420;
                  *(void *)a2 = v420 + 1;
                }
                int v997 = google::protobuf::io::CodedInputStream::PushLimit(a2, v421);
                int v999 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v999--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v999;
                if (v999 < 0 != v244) {
                  return 0;
                }
                int v245 = v997;
                uint64_t result = CoreML::Specification::BatchnormLayerParams::MergePartialFromCodedStream(v208, a2, v998);
                if (!result) {
                  return result;
                }
              }
              else
              {
                if (v19 != 165 || v15 != 42) {
                  goto LABEL_9;
                }
                if (*v5 != 165)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 165;
                  operator new();
                }
                uint64_t v72 = *v6;
                v312 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v312 < 0)
                {
                  int v313 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v313 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v313 = *v312;
                  *(void *)a2 = v312 + 1;
                }
                int v786 = google::protobuf::io::CodedInputStream::PushLimit(a2, v313);
                int v788 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v788--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v788;
                if (v788 < 0 != v244) {
                  return 0;
                }
                int v245 = v786;
                uint64_t result = CoreML::Specification::MeanVarianceNormalizeLayerParams::MergePartialFromCodedStream(v72, (char **)a2, v787);
                if (!result) {
                  return result;
                }
              }
              goto LABEL_2002;
            }
            if (v19 == 170)
            {
              if (v15 != 82) {
                goto LABEL_9;
              }
              if (*v5 != 170)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 170;
                operator new();
              }
              std::string v141 = *v6;
              v350 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v350 < 0)
              {
                int v351 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v351 < 0) {
                  return 0;
                }
              }
              else
              {
                int v351 = *v350;
                *(void *)a2 = v350 + 1;
              }
              int v860 = google::protobuf::io::CodedInputStream::PushLimit(a2, v351);
              int v862 = *((_DWORD *)a2 + 13);
              BOOL v244 = __OFSUB__(v862--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v862;
              if (v862 < 0 != v244) {
                return 0;
              }
              int v245 = v860;
              uint64_t result = CoreML::Specification::L2NormalizeLayerParams::MergePartialFromCodedStream(v141, (char **)a2, v861);
              if (!result) {
                return result;
              }
              goto LABEL_2002;
            }
            if (v19 == 175)
            {
              if (v15 == 122)
              {
                if (*v5 != 175)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 175;
                  operator new();
                }
                v142 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v142 < 0)
                {
                  int v143 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v143 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v143 = *v142;
                  *(void *)a2 = v142 + 1;
                }
                v612 = (CoreML::Specification::SoftmaxLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v143);
                int v614 = *((_DWORD *)a2 + 13);
                BOOL v244 = __OFSUB__(v614--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v614;
                if (v614 < 0 != v244) {
                  return 0;
                }
                int v245 = (int)v612;
                uint64_t result = CoreML::Specification::SoftmaxLayerParams::MergePartialFromCodedStream(v612, (char **)a2, v613);
                if (!result) {
                  return result;
                }
                goto LABEL_2002;
              }
              goto LABEL_9;
            }
            if (v19 != 180 || v15 != 162) {
              goto LABEL_9;
            }
            if (*v5 != 180)
            {
              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
              *((_DWORD *)this + 35) = 180;
              operator new();
            }
            int v33 = *v6;
            v272 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v272 < 0)
            {
              int v273 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v273 < 0) {
                return 0;
              }
            }
            else
            {
              int v273 = *v272;
              *(void *)a2 = v272 + 1;
            }
            int v707 = google::protobuf::io::CodedInputStream::PushLimit(a2, v273);
            int v709 = *((_DWORD *)a2 + 13);
            BOOL v244 = __OFSUB__(v709--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v709;
            if (v709 < 0 != v244) {
              return 0;
            }
            int v710 = v707;
            uint64_t result = CoreML::Specification::LRNLayerParams::MergePartialFromCodedStream(v33, (char **)a2, v708);
            if (!result) {
              return result;
            }
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v710)) {
              return 0;
            }
          }
        }
        if (v15 >> 3 > 0x63) {
          break;
        }
        switch(v19)
        {
          case 1u:
            if (v15 != 10) {
              goto LABEL_9;
            }
            if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v10, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            }
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v10);
            if (!result) {
              return result;
            }
            int v21 = *v10;
            if (SHIBYTE((*v10)->__r_.__value_.__r.__words[2]) < 0)
            {
              int v21 = (std::string *)v21->__r_.__value_.__r.__words[0];
              std::string::size_type size = (*v10)->__r_.__value_.__l.__size_;
            }
            else
            {
              LODWORD(size) = HIBYTE((*v10)->__r_.__value_.__r.__words[2]);
            }
            v515 = "CoreML.Specification.NeuralNetworkLayer.name";
            goto LABEL_2127;
          case 2u:
            if (v15 != 18) {
              goto LABEL_9;
            }
            unint64_t v104 = (int *)*((void *)this + 4);
            if (!v104)
            {
              int v106 = *((_DWORD *)this + 7);
LABEL_2100:
              int v1095 = *((_DWORD *)this + 6);
              if (v1095 <= v106)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v9, v106 - v1095 + 1);
                unint64_t v104 = (int *)*((void *)this + 4);
              }
              int v106 = *v104;
              goto LABEL_2103;
            }
            uint64_t v105 = *((int *)this + 6);
            int v106 = *v104;
            if ((int)v105 < *v104)
            {
              *((_DWORD *)this + 6) = v105 + 1;
              Aligned = *(std::string **)&v104[2 * v105 + 2];
              goto LABEL_2116;
            }
            if (v106 == *((_DWORD *)this + 7)) {
              goto LABEL_2100;
            }
LABEL_2103:
            *unint64_t v104 = v106 + 1;
            v1096 = *(google::protobuf::Arena **)v9;
            if (!*(void *)v9) {
              operator new();
            }
            Aligned->__r_.__value_.__l.__size_ = 0;
            Aligned->__r_.__value_.__r.__words[2] = 0;
            Aligned->__r_.__value_.__r.__words[0] = 0;
            v1097 = google::protobuf::Arena::AllocateAligned(v1096, 0, 24);
            *v1097 = (google::protobuf::Arena *)Aligned;
            v1097[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
            v1098 = (unint64_t *)((char *)v1096 + 32);
            do
              unint64_t v1099 = __ldxr(v1098);
            while (__stxr((unint64_t)v1097, v1098));
            v1097[2] = (google::protobuf::Arena *)v1099;
            uint64_t v1105 = *((void *)this + 4);
            uint64_t v1106 = *((int *)this + 6);
            *((_DWORD *)this + 6) = v1106 + 1;
            *(void *)(v1105 + 8 * v1106 + 8) = Aligned;
LABEL_2116:
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, Aligned);
            if (!result) {
              return result;
            }
            uint64_t v1107 = *((void *)this + 4);
            int v21 = *(std::string **)(v1107 + 8 * *((int *)this + 6));
            if (SHIBYTE(v21->__r_.__value_.__r.__words[2]) < 0)
            {
              int v21 = (std::string *)v21->__r_.__value_.__r.__words[0];
              std::string::size_type size = *(void *)(*(void *)(v1107 + 8 * *((int *)this + 6)) + 8);
            }
            else
            {
              LODWORD(size) = HIBYTE(v21->__r_.__value_.__r.__words[2]);
            }
            v515 = "CoreML.Specification.NeuralNetworkLayer.input";
            goto LABEL_2127;
          case 3u:
            if (v15 != 26) {
              goto LABEL_9;
            }
            v108 = (int *)*((void *)this + 7);
            if (!v108)
            {
              int v110 = *((_DWORD *)this + 13);
LABEL_2108:
              int v1100 = *((_DWORD *)this + 12);
              if (v1100 <= v110)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v1111, v110 - v1100 + 1);
                v108 = (int *)*((void *)this + 7);
              }
              int v110 = *v108;
              goto LABEL_2111;
            }
            uint64_t v109 = *((int *)this + 12);
            int v110 = *v108;
            if ((int)v109 < *v108)
            {
              *((_DWORD *)this + 12) = v109 + 1;
              v111 = *(std::string **)&v108[2 * v109 + 2];
              goto LABEL_2122;
            }
            if (v110 == *((_DWORD *)this + 13)) {
              goto LABEL_2108;
            }
LABEL_2111:
            int *v108 = v110 + 1;
            v1101 = *(google::protobuf::Arena **)v1111;
            if (!*(void *)v1111) {
              operator new();
            }
            v111->__r_.__value_.__l.__size_ = 0;
            v111->__r_.__value_.__r.__words[2] = 0;
            v111->__r_.__value_.__r.__words[0] = 0;
            v1102 = google::protobuf::Arena::AllocateAligned(v1101, 0, 24);
            *v1102 = (google::protobuf::Arena *)v111;
            v1102[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
            v1103 = (unint64_t *)((char *)v1101 + 32);
            do
              unint64_t v1104 = __ldxr(v1103);
            while (__stxr((unint64_t)v1102, v1103));
            v1102[2] = (google::protobuf::Arena *)v1104;
            uint64_t v1108 = *((void *)this + 7);
            uint64_t v1109 = *((int *)this + 12);
            *((_DWORD *)this + 12) = v1109 + 1;
            *(void *)(v1108 + 8 * v1109 + 8) = v111;
LABEL_2122:
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v111);
            if (!result) {
              return result;
            }
            uint64_t v1110 = *((void *)this + 7);
            int v21 = *(std::string **)(v1110 + 8 * *((int *)this + 12));
            if (SHIBYTE(v21->__r_.__value_.__r.__words[2]) < 0)
            {
              int v21 = (std::string *)v21->__r_.__value_.__r.__words[0];
              std::string::size_type size = *(void *)(*(void *)(v1110 + 8 * *((int *)this + 12)) + 8);
            }
            else
            {
              LODWORD(size) = HIBYTE(v21->__r_.__value_.__r.__words[2]);
            }
            v515 = "CoreML.Specification.NeuralNetworkLayer.output";
LABEL_2127:
            if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v21, size, 0, (uint64_t)v515))return 0; {
            break;
            }
          case 4u:
            if (v15 != 34) {
              goto LABEL_9;
            }
            v112 = v8;
            goto LABEL_482;
          case 5u:
            if (v15 != 42) {
              goto LABEL_9;
            }
            v112 = v7;
LABEL_482:
            v113 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(v112);
            v114 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v114 < 0)
            {
              int v115 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v115 < 0) {
                return 0;
              }
            }
            else
            {
              int v115 = *v114;
              *(void *)a2 = v114 + 1;
            }
            int v241 = google::protobuf::io::CodedInputStream::PushLimit(a2, v115);
            int v243 = *((_DWORD *)a2 + 13);
            BOOL v244 = __OFSUB__(v243--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v243;
            if (v243 < 0 != v244) {
              return 0;
            }
            int v245 = v241;
            uint64_t result = CoreML::Specification::Tensor::MergePartialFromCodedStream((CoreML::Specification::Tensor *)v113, a2, v242);
            if (!result) {
              return result;
            }
            goto LABEL_2002;
          case 0xAu:
            if (v15 != 80) {
              goto LABEL_9;
            }
            v116 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v116 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v498 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v116;
              *(void *)a2 = v116 + 1;
            }
            *((unsigned char *)this + 12CoreML::Specification::NetworkUpdateParameters::New(this, 0) = Varint64Fallback != 0;
            goto LABEL_2;
          default:
            goto LABEL_9;
        }
      }
      if (v15 >> 3 > 0x81) {
        break;
      }
      if (v19 == 100)
      {
        if (v15 != 34) {
          goto LABEL_9;
        }
        if (*v5 != 100)
        {
          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
          *((_DWORD *)this + 35) = 100;
          operator new();
        }
        v215 = *v6;
        v430 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v430 < 0)
        {
          int v431 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v431 < 0) {
            return 0;
          }
        }
        else
        {
          int v431 = *v430;
          *(void *)a2 = v430 + 1;
        }
        int v1016 = google::protobuf::io::CodedInputStream::PushLimit(a2, v431);
        int v1018 = *((_DWORD *)a2 + 13);
        BOOL v244 = __OFSUB__(v1018--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v1018;
        if (v1018 < 0 != v244) {
          return 0;
        }
        int v245 = v1016;
        uint64_t result = CoreML::Specification::ConvolutionLayerParams::MergePartialFromCodedStream(v215, a2, v1017);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v19 != 120 || v15 != 194) {
          goto LABEL_9;
        }
        if (*v5 != 120)
        {
          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
          *((_DWORD *)this + 35) = 120;
          operator new();
        }
        uint64_t v79 = *v6;
        v324 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v324 < 0)
        {
          int v325 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v325 < 0) {
            return 0;
          }
        }
        else
        {
          int v325 = *v324;
          *(void *)a2 = v324 + 1;
        }
        int v809 = google::protobuf::io::CodedInputStream::PushLimit(a2, v325);
        int v811 = *((_DWORD *)a2 + 13);
        BOOL v244 = __OFSUB__(v811--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v811;
        if (v811 < 0 != v244) {
          return 0;
        }
        int v245 = v809;
        uint64_t result = CoreML::Specification::PoolingLayerParams::MergePartialFromCodedStream(v79, a2, v810);
        if (!result) {
          return result;
        }
      }
LABEL_2002:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v245)) {
        return 0;
      }
    }
    if (v19 == 130)
    {
      if (v15 != 18) {
        goto LABEL_9;
      }
      if (*v5 != 130)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 130;
        operator new();
      }
      v154 = *v6;
      v372 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v372 < 0)
      {
        int v373 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v373 < 0) {
          return 0;
        }
      }
      else
      {
        int v373 = *v372;
        *(void *)a2 = v372 + 1;
      }
      int v903 = google::protobuf::io::CodedInputStream::PushLimit(a2, v373);
      int v905 = *((_DWORD *)a2 + 13);
      BOOL v244 = __OFSUB__(v905--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v905;
      if (v905 < 0 != v244) {
        return 0;
      }
      int v245 = v903;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v154, a2, v904);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
    if (v19 == 140)
    {
      if (v15 != 98) {
        goto LABEL_9;
      }
      if (*v5 != 140)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 140;
        operator new();
      }
      v155 = *v6;
      v374 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v374 < 0)
      {
        int v375 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v375 < 0) {
          return 0;
        }
      }
      else
      {
        int v375 = *v374;
        *(void *)a2 = v374 + 1;
      }
      int v906 = google::protobuf::io::CodedInputStream::PushLimit(a2, v375);
      int v908 = *((_DWORD *)a2 + 13);
      BOOL v244 = __OFSUB__(v908--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v908;
      if (v908 < 0 != v244) {
        return 0;
      }
      int v245 = v906;
      uint64_t result = CoreML::Specification::InnerProductLayerParams::MergePartialFromCodedStream(v155, a2, v907);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
    if (v19 == 150 && v15 == 178)
    {
      if (*v5 != 150)
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 150;
        operator new();
      }
      uint64_t v42 = *v6;
      v282 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v282 < 0)
      {
        int v283 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v283 < 0) {
          return 0;
        }
      }
      else
      {
        int v283 = *v282;
        *(void *)a2 = v282 + 1;
      }
      int v727 = google::protobuf::io::CodedInputStream::PushLimit(a2, v283);
      int v729 = *((_DWORD *)a2 + 13);
      BOOL v244 = __OFSUB__(v729--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v729;
      if (v729 < 0 != v244) {
        return 0;
      }
      int v245 = v727;
      uint64_t result = CoreML::Specification::EmbeddingLayerParams::MergePartialFromCodedStream(v42, a2, v728);
      if (!result) {
        return result;
      }
      goto LABEL_2002;
    }
LABEL_9:
    if (!v15 || (v15 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v15, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0F6A44(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40594C3D85);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  int v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      int v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *int v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing((CoreML::Specification::NeuralNetworkPreprocessing *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  google::protobuf::internal::RepeatedPtrFieldBase *v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkPreprocessing>;
  uint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1DC0F7184(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkPreprocessing *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_26;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_26;
        }
LABEL_8:
        unsigned int v10 = v8 >> 3;
        if (v8 >> 3 == 11)
        {
          if (v8 != 90) {
            goto LABEL_26;
          }
          if (*((_DWORD *)this + 9) != 11)
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            operator new();
          }
          unint64_t v15 = (CoreML::Specification::NeuralNetworkMeanImage *)*((void *)this + 3);
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          BOOL result = CoreML::Specification::NeuralNetworkMeanImage::MergePartialFromCodedStream(v15, (char **)a2, v23);
          if (!result) {
            return result;
          }
          goto LABEL_47;
        }
        if (v10 != 10) {
          break;
        }
        if (v8 != 82) {
          goto LABEL_26;
        }
        if (*((_DWORD *)this + 9) != 10)
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          operator new();
        }
        int v16 = (CoreML::Specification::NeuralNetworkImageScaler *)*((void *)this + 3);
        int v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v21 < 0) {
            return 0;
          }
        }
        else
        {
          int v21 = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
        int v29 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
        if (v29 < 0 != v25) {
          return 0;
        }
        int v26 = v27;
        BOOL result = CoreML::Specification::NeuralNetworkImageScaler::MergePartialFromCodedStream(v16, a2, v28);
        if (!result) {
          return result;
        }
LABEL_47:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
          return 0;
        }
      }
      if (v10 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
      if (!result) {
        return result;
      }
      int v13 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v13 = *(unsigned int **)v13;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, size, 0, (uint64_t)"CoreML.Specification.NeuralNetworkPreprocessing.featureName"))return 0; {
    }
      }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0F7474(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

CoreML::Specification::NeuralNetworkImageScaler *CoreML::Specification::NeuralNetworkImageScaler::NeuralNetworkImageScaler(CoreML::Specification::NeuralNetworkImageScaler *this)
{
  *(void *)this = &unk_1F36220E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NeuralNetworkImageScaler *)&CoreML::Specification::_NeuralNetworkImageScaler_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0F7518(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NeuralNetworkImageScaler::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkImageScaler *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            LODWORD(v8) = 0;
          }
          else
          {
            uint64_t v7 = v5 + 1;
            uint64_t v8 = *v5;
            if ((char)*v5 >= 1)
            {
              *(void *)a2 = v7;
              unint64_t v9 = v8 | 0x100000000;
              if ((v9 & 0x100000000) == 0) {
                goto LABEL_8;
              }
              goto LABEL_19;
            }
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_19;
              }
            }
          }
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
LABEL_19:
          unsigned int v14 = v9 >> 3;
          if (v9 >> 3 <= 0x14) {
            break;
          }
          if (v14 == 21)
          {
            if (v9 != 173) {
              goto LABEL_8;
            }
            unsigned int v25 = 0;
            unsigned int v19 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
            {
              BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result) {
                return result;
              }
              unsigned int v20 = v25;
            }
            else
            {
              unsigned int v20 = *v19;
              *(void *)a2 = v19 + 1;
            }
            *((_DWORD *)this + 7) = v20;
          }
          else if (v14 == 22)
          {
            if (v9 != 181) {
              goto LABEL_8;
            }
            unsigned int v25 = 0;
            int v21 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
            {
              BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result) {
                return result;
              }
              unsigned int v22 = v25;
            }
            else
            {
              unsigned int v22 = *v21;
              *(void *)a2 = v21 + 1;
            }
            *((_DWORD *)this + 8) = v22;
          }
          else
          {
            if (v14 != 30 || v9 != 245) {
              goto LABEL_8;
            }
            unsigned int v25 = 0;
            unint64_t v15 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
            {
              BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result) {
                return result;
              }
              unsigned int v16 = v25;
            }
            else
            {
              unsigned int v16 = *v15;
              *(void *)a2 = v15 + 1;
            }
            *((_DWORD *)this + 4) = v16;
          }
        }
        if (v14 == 10) {
          break;
        }
        if (v14 != 20 || v9 != 165) {
          goto LABEL_8;
        }
        unsigned int v25 = 0;
        int v17 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v18 = v25;
        }
        else
        {
          unsigned int v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        *((_DWORD *)this + 6) = v18;
      }
      if (v9 != 85) {
        break;
      }
      unsigned int v25 = 0;
      unsigned int v23 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
        if (!result) {
          return result;
        }
        unsigned int v24 = v25;
      }
      else
      {
        unsigned int v24 = *v23;
        *(void *)a2 = v23 + 1;
      }
      *((_DWORD *)this + 5) = v24;
    }
LABEL_8:
    if (v9) {
      BOOL v11 = (v9 & 7) == 4;
    }
    else {
      BOOL v11 = 1;
    }
    BOOL result = v11;
    if (v11) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::NeuralNetworkMeanImage *CoreML::Specification::NeuralNetworkMeanImage::NeuralNetworkMeanImage(CoreML::Specification::NeuralNetworkMeanImage *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36210D8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::NeuralNetworkMeanImage *)&CoreML::Specification::_NeuralNetworkMeanImage_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0F782C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NeuralNetworkMeanImage::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkMeanImage *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 2;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v30 = 0;
          unsigned int v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result) {
              return result;
            }
            unsigned int v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unsigned int v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *uint64_t v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v17;
    return result;
  }
  return 0;
}

CoreML::Specification::NeuralNetworkPreprocessing *CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  *(void *)this = &unk_1F3622D58;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NeuralNetworkPreprocessing *)&CoreML::Specification::_NeuralNetworkPreprocessing_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0F7BBC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkPreprocessing>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  uint64_t v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      uint64_t v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *uint64_t v2 = v4 + 1;
  unint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::Tensor::Tensor((CoreML::Specification::Tensor *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  unsigned __int8 *v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Tensor>;
  unint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1DC0F7D20(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Tensor::MergePartialFromCodedStream(CoreML::Specification::Tensor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_13;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_13;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(18, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_13;
          }
          BOOL v12 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v12;
            *(void *)a2 = v12 + 1;
          }
          int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v17 = *((_DWORD *)a2 + 10);
            uint64_t v18 = *((int *)a2 + 11);
            unint64_t v19 = *((void *)a2 + 1);
            int v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF) {
              break;
            }
            int v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *(void *)a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v16;
          uint64_t v27 = v19 + v18;
          *((void *)a2 + 1) = v19 + v18;
          int v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16) {
            int v28 = v16;
          }
          BOOL v29 = __OFSUB__(v20, v28);
          int v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0)) {
            int v30 = 0;
          }
          else {
            *((void *)a2 + 1) = v27 - v30;
          }
          *((_DWORD *)a2 + 11) = v30;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
      if (v8 >> 3 != 1 || v8 != 8) {
        break;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v15 = 0;
        goto LABEL_48;
      }
      int v15 = *v14;
      if (*v14 < 0)
      {
LABEL_48:
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v15);
        *((_DWORD *)this + 9) = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
      }
      else
      {
        *((_DWORD *)this + 9) = v15;
        *(void *)a2 = v14 + 1;
      }
    }
LABEL_13:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

uint64_t CoreML::Specification::NeuralNetworkLayer::clear_layer(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 140);
  if (v2 > 879)
  {
    if (v2 > 1139)
    {
      if (v2 <= 1274)
      {
        if (v2 <= 1199)
        {
          if (v2 <= 1169)
          {
            if (v2 > 1149)
            {
              if (v2 != 1150 && v2 != 1155) {
                goto LABEL_78;
              }
            }
            else if (v2 != 1140 && v2 != 1145)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 1179)
          {
            if (v2 != 1170 && v2 != 1175) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1180 && v2 != 1190 && v2 != 1195)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 1249)
        {
          if (v2 <= 1259)
          {
            if (v2 != 1250 && v2 != 1255) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1260 && v2 != 1265 && v2 != 1270)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1214)
        {
          if (v2 != 1200 && v2 != 1210) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1215 && v2 != 1220 && v2 != 1230)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 1349)
      {
        if (v2 > 1312)
        {
          if (v2 <= 1319)
          {
            if (v2 != 1313 && v2 != 1315) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1320 && v2 != 1325 && v2 != 1330)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1284)
        {
          if (v2 != 1275 && v2 != 1280) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1285 && v2 != 1290 && v2 != 1295)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 1454)
      {
        if (v2 != 1350 && v2 != 1400 && v2 != 1450) {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      switch(v2)
      {
        case 1455:
        case 1460:
        case 1461:
        case 1465:
        case 1466:
        case 1470:
        case 1471:
          goto LABEL_76;
        default:
          break;
      }
    }
    else
    {
      if (v2 > 994)
      {
        if (v2 > 1079)
        {
          if (v2 > 1109)
          {
            if (v2 <= 1124)
            {
              if (v2 != 1110 && v2 != 1120) {
                goto LABEL_78;
              }
            }
            else if (v2 != 1125 && v2 != 1130 && v2 != 1135)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 1089)
          {
            if (v2 != 1080 && v2 != 1085) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1090 && v2 != 1100 && v2 != 1105)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 1024)
        {
          if (v2 <= 1044)
          {
            if (v2 != 1025 && v2 != 1040) {
              goto LABEL_78;
            }
          }
          else if (v2 != 1045 && v2 != 1065 && v2 != 1070)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1004)
        {
          if (v2 != 995 && v2 != 1000) {
            goto LABEL_78;
          }
        }
        else if (v2 != 1005 && v2 != 1015 && v2 != 1020)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 939)
      {
        if (v2 > 904)
        {
          if (v2 <= 924)
          {
            if (v2 != 905 && v2 != 920) {
              goto LABEL_78;
            }
          }
          else if (v2 != 925 && v2 != 930 && v2 != 935)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 889)
        {
          if (v2 != 880 && v2 != 885) {
            goto LABEL_78;
          }
        }
        else if (v2 != 890 && v2 != 895 && v2 != 900)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 > 959)
      {
        if (v2 <= 974)
        {
          if (v2 != 960 && v2 != 965) {
            goto LABEL_78;
          }
        }
        else if (v2 != 975 && v2 != 980 && v2 != 985)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      switch(v2)
      {
        case 945:
        case 950:
        case 952:
        case 954:
          goto LABEL_76;
        case 946:
        case 947:
        case 948:
        case 949:
        case 951:
        case 953:
          break;
        default:
          if (v2 == 940) {
            goto LABEL_76;
          }
          break;
      }
    }
  }
  else
  {
    if (v2 <= 604)
    {
      if (v2 > 249)
      {
        if (v2 > 329)
        {
          if (v2 > 409)
          {
            if (v2 <= 429)
            {
              if (v2 != 410 && v2 != 420) {
                goto LABEL_78;
              }
            }
            else if (v2 != 430 && v2 != 500 && v2 != 600)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 344)
          {
            if (v2 != 330 && v2 != 340) {
              goto LABEL_78;
            }
          }
          else if (v2 != 345 && v2 != 350 && v2 != 400)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 289)
        {
          if (v2 <= 300)
          {
            if (v2 != 290 && v2 != 300) {
              goto LABEL_78;
            }
          }
          else if (v2 != 301 && v2 != 310 && v2 != 320)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 260)
        {
          if (v2 != 250 && v2 != 260) {
            goto LABEL_78;
          }
        }
        else if (v2 != 261 && v2 != 270 && v2 != 280)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 189)
      {
        if (v2 > 219)
        {
          if (v2 <= 230)
          {
            if (v2 != 220 && v2 != 230) {
              goto LABEL_78;
            }
          }
          else if (v2 != 231 && v2 != 240 && v2 != 245)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 209)
        {
          if (v2 != 190 && v2 != 200) {
            goto LABEL_78;
          }
        }
        else if (v2 != 210 && v2 != 211 && v2 != 212)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 159)
      {
        if (v2 <= 169)
        {
          if (v2 != 160 && v2 != 165) {
            goto LABEL_78;
          }
        }
        else if (v2 != 170 && v2 != 175 && v2 != 180)
        {
          goto LABEL_78;
        }
      }
      else if (v2 <= 129)
      {
        if (v2 != 100 && v2 != 120) {
          goto LABEL_78;
        }
      }
      else if (v2 != 130 && v2 != 140 && v2 != 150)
      {
        goto LABEL_78;
      }
LABEL_76:
      this = *(void *)(this + 128);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      goto LABEL_78;
    }
    if (v2 <= 759)
    {
      if (v2 > 684)
      {
        if (v2 > 729)
        {
          if (v2 <= 739)
          {
            if (v2 != 730 && v2 != 735) {
              goto LABEL_78;
            }
          }
          else if (v2 != 740 && v2 != 750 && v2 != 755)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 709)
        {
          if (v2 != 685 && v2 != 700) {
            goto LABEL_78;
          }
        }
        else if (v2 != 710 && v2 != 715 && v2 != 720)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 639)
      {
        if (v2 <= 664)
        {
          if (v2 != 640 && v2 != 660) {
            goto LABEL_78;
          }
        }
        else if (v2 != 665 && v2 != 670 && v2 != 680)
        {
          goto LABEL_78;
        }
      }
      else if (v2 <= 619)
      {
        if (v2 != 605 && v2 != 615) {
          goto LABEL_78;
        }
      }
      else if (v2 != 620 && v2 != 625 && v2 != 635)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (v2 <= 824)
    {
      if (v2 > 789)
      {
        if (v2 > 814)
        {
          if (v2 != 815 && v2 != 820) {
            goto LABEL_78;
          }
        }
        else if (v2 != 790 && v2 != 795)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 774)
      {
        if (v2 != 775 && v2 != 780) {
          goto LABEL_78;
        }
      }
      else if (v2 != 760 && v2 != 770)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (v2 > 849)
    {
      if (v2 <= 864)
      {
        if (v2 != 850 && v2 != 855) {
          goto LABEL_78;
        }
      }
      else if (v2 != 865 && v2 != 870 && v2 != 875)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    switch(v2)
    {
      case 825:
      case 827:
      case 830:
      case 832:
        goto LABEL_76;
      case 826:
      case 828:
      case 829:
      case 831:
        break;
      default:
        if (v2 == 840 || v2 == 845) {
          goto LABEL_76;
        }
        break;
    }
  }
LABEL_78:
  *(_DWORD *)(v1 + 14CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

CoreML::Specification::ConvolutionLayerParams *CoreML::Specification::ConvolutionLayerParams::ConvolutionLayerParams(CoreML::Specification::ConvolutionLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3620D48;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 138) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((void *)this + 21) = 0;
  return this;
}

void sub_1DC0F88BC(_Unwind_Exception *a1)
{
  int v4 = (void *)v2[12];
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)v2[9];
  if (v5 && !*v5) {
    operator delete(v5);
  }
  unint64_t v6 = (void *)v2[6];
  if (v6 && !*v6) {
    operator delete(v6);
  }
  uint64_t v7 = (void *)v2[3];
  if (v7)
  {
    if (!*v7) {
      operator delete(v7);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConvolutionLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConvolutionLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 88);
  unint64_t v6 = (unsigned int *)((char *)this + 64);
  uint64_t v7 = (unsigned int *)((char *)this + 40);
  unint64_t v8 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v9 = *(unsigned __int8 **)a2;
          unint64_t v10 = *((void *)a2 + 1);
          if (*(void *)a2 >= v10)
          {
            LODWORD(v12) = 0;
LABEL_16:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
            unint64_t v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v13 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          uint64_t v11 = v9 + 1;
          uint64_t v12 = *v9;
          if ((char)*v9 < 1)
          {
            if ((unint64_t)v11 < v10)
            {
              int v14 = *v11;
              if ((v12 & ~v14) >= 0x80)
              {
                *(void *)a2 = v9 + 2;
                unint64_t v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
                goto LABEL_17;
              }
            }
            goto LABEL_16;
          }
          *(void *)a2 = v11;
          unint64_t v13 = v12 | 0x100000000;
          if ((v13 & 0x100000000) == 0) {
            goto LABEL_9;
          }
LABEL_17:
          unsigned int v17 = v13 >> 3;
          if (v13 >> 3 > 0x31) {
            break;
          }
          if (v13 >> 3 > 0x13)
          {
            if (v17 == 20)
            {
              if (v13 != 160)
              {
                if (v13 != 162) {
                  goto LABEL_9;
                }
                int v30 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
                {
                  int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (VarintSizeAsIntFallback < 0) {
                    return 0;
                  }
                }
                else
                {
                  int VarintSizeAsIntFallback = *v30;
                  *(void *)a2 = v30 + 1;
                }
                int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                while (1)
                {
                  int v78 = *((_DWORD *)a2 + 10);
                  uint64_t v62 = *((int *)a2 + 11);
                  unint64_t v63 = *((void *)a2 + 1);
                  int v64 = *((_DWORD *)a2 + 6);
                  if (v78 == 0x7FFFFFFF) {
                    break;
                  }
                  uint64_t v79 = *(char **)a2;
                  if ((int)(v78 - v64 + v62 + v63 - *(void *)a2) < 1) {
                    break;
                  }
                  if ((unint64_t)v79 >= v63 || *v79 < 0)
                  {
                    unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                    if ((v82 & 1) == 0) {
                      return 0;
                    }
                    unint64_t v80 = Varint64Fallback;
                  }
                  else
                  {
                    unint64_t v80 = *v79;
                    *(void *)a2 = v79 + 1;
                  }
                  signed int v83 = *((_DWORD *)this + 4);
                  if (v83 == *((_DWORD *)this + 5))
                  {
                    google::protobuf::RepeatedField<double>::Reserve(v8, v83 + 1);
                    signed int v83 = *v8;
                  }
                  uint64_t v84 = *((void *)this + 3);
                  *((_DWORD *)this + 4) = v83 + 1;
                  *(void *)(v84 + 8 * v83 + 8) = v80;
                }
                goto LABEL_175;
              }
              unsigned int v42 = 162;
              int v43 = a2;
              uint64_t v44 = (uint64_t)v8;
              goto LABEL_98;
            }
            if (v17 == 30)
            {
              if (v13 != 240)
              {
                if (v13 != 242) {
                  goto LABEL_9;
                }
                unsigned int v32 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v32 < 0)
                {
                  int v33 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v33 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v33 = *v32;
                  *(void *)a2 = v32 + 1;
                }
                int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
                while (1)
                {
                  int v85 = *((_DWORD *)a2 + 10);
                  uint64_t v62 = *((int *)a2 + 11);
                  unint64_t v63 = *((void *)a2 + 1);
                  int v64 = *((_DWORD *)a2 + 6);
                  if (v85 == 0x7FFFFFFF) {
                    break;
                  }
                  uint64_t v86 = *(char **)a2;
                  if ((int)(v85 - v64 + v62 + v63 - *(void *)a2) < 1) {
                    break;
                  }
                  if ((unint64_t)v86 >= v63 || *v86 < 0)
                  {
                    unint64_t v88 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                    if ((v89 & 1) == 0) {
                      return 0;
                    }
                    unint64_t v87 = v88;
                  }
                  else
                  {
                    unint64_t v87 = *v86;
                    *(void *)a2 = v86 + 1;
                  }
                  signed int v90 = *((_DWORD *)this + 10);
                  if (v90 == *((_DWORD *)this + 11))
                  {
                    google::protobuf::RepeatedField<double>::Reserve(v7, v90 + 1);
                    signed int v90 = *v7;
                  }
                  uint64_t v91 = *((void *)this + 6);
                  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v90 + 1;
                  *(void *)(v91 + 8 * v90 + 8) = v87;
                }
                goto LABEL_175;
              }
              unsigned int v42 = 242;
              int v43 = a2;
              uint64_t v44 = (uint64_t)v7;
              goto LABEL_98;
            }
            if (v17 != 40) {
              goto LABEL_9;
            }
            if (v13 == 64)
            {
              unsigned int v42 = 322;
              int v43 = a2;
              uint64_t v44 = (uint64_t)v6;
              goto LABEL_98;
            }
            if (v13 != 66) {
              goto LABEL_9;
            }
            unint64_t v22 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
            {
              int v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v23 < 0) {
                return 0;
              }
            }
            else
            {
              int v23 = *v22;
              *(void *)a2 = v22 + 1;
            }
            int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
            while (1)
            {
              int v61 = *((_DWORD *)a2 + 10);
              uint64_t v62 = *((int *)a2 + 11);
              unint64_t v63 = *((void *)a2 + 1);
              int v64 = *((_DWORD *)a2 + 6);
              if (v61 == 0x7FFFFFFF) {
                break;
              }
              uint64_t v65 = *(char **)a2;
              if ((int)(v61 - v64 + v62 + v63 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v65 >= v63 || *v65 < 0)
              {
                unint64_t v67 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v68 & 1) == 0) {
                  return 0;
                }
                unint64_t v66 = v67;
              }
              else
              {
                unint64_t v66 = *v65;
                *(void *)a2 = v65 + 1;
              }
              signed int v69 = *((_DWORD *)this + 16);
              if (v69 == *((_DWORD *)this + 17))
              {
                google::protobuf::RepeatedField<double>::Reserve(v6, v69 + 1);
                signed int v69 = *v6;
              }
              uint64_t v70 = *((void *)this + 9);
              *((_DWORD *)this + 16) = v69 + 1;
              *(void *)(v70 + 8 * v69 + 8) = v66;
            }
LABEL_175:
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v60;
            uint64_t v92 = v63 + v62;
            *((void *)a2 + 1) = v63 + v62;
            int v93 = *((_DWORD *)a2 + 12);
            if (v93 >= v60) {
              int v93 = v60;
            }
            BOOL v39 = __OFSUB__(v64, v93);
            int v94 = v64 - v93;
            if ((v94 < 0) ^ v39 | (v94 == 0)) {
              int v94 = 0;
            }
            else {
              *((void *)a2 + 1) = v92 - v94;
            }
            *((_DWORD *)a2 + 11) = v94;
            *((unsigned char *)a2 + 36) = 0;
          }
          else if (v17 == 1)
          {
            if (v13 != 8) {
              goto LABEL_9;
            }
            unint64_t v19 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v19 & 0x80000000) == 0)
            {
              *((void *)this + 16) = *v19;
              goto LABEL_67;
            }
            *((void *)this + 16) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v52 & 1) == 0) {
              return 0;
            }
          }
          else if (v17 == 2)
          {
            if (v13 != 16) {
              goto LABEL_9;
            }
            unint64_t v19 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
            {
              *((void *)this + 17) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v53 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 17) = *v19;
LABEL_67:
              *(void *)a2 = v19 + 1;
            }
          }
          else
          {
            if (v17 != 10 || v13 != 80) {
              goto LABEL_9;
            }
            unint64_t v19 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v19 & 0x80000000) == 0)
            {
              *((void *)this + 18) = *v19;
              goto LABEL_67;
            }
            *((void *)this + 18) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v49 & 1) == 0) {
              return 0;
            }
          }
        }
        if (v13 >> 3 <= 0x45) {
          break;
        }
        if (v13 >> 3 > 0x5A)
        {
          if (v17 == 91)
          {
            if (v13 == 218)
            {
              uint64_t v18 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
              if (!v18) {
                operator new();
              }
              goto LABEL_87;
            }
LABEL_9:
            if (v13) {
              BOOL v15 = (v13 & 7) == 4;
            }
            else {
              BOOL v15 = 1;
            }
            if (v15) {
              return 1;
            }
            if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v17 != 100) {
              goto LABEL_9;
            }
            if (v13 != 32)
            {
              if (v13 != 34) {
                goto LABEL_9;
              }
              char v24 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
              {
                int v25 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v25 < 0) {
                  return 0;
                }
              }
              else
              {
                int v25 = *v24;
                *(void *)a2 = v24 + 1;
              }
              int v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v25);
              while (1)
              {
                int v71 = *((_DWORD *)a2 + 10);
                uint64_t v62 = *((int *)a2 + 11);
                unint64_t v63 = *((void *)a2 + 1);
                int v64 = *((_DWORD *)a2 + 6);
                if (v71 == 0x7FFFFFFF) {
                  break;
                }
                uint64_t v72 = *(char **)a2;
                if ((int)(v71 - v64 + v62 + v63 - *(void *)a2) < 1) {
                  break;
                }
                if ((unint64_t)v72 >= v63 || *v72 < 0)
                {
                  unint64_t v74 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                  if ((v75 & 1) == 0) {
                    return 0;
                  }
                  unint64_t v73 = v74;
                }
                else
                {
                  unint64_t v73 = *v72;
                  *(void *)a2 = v72 + 1;
                }
                signed int v76 = *((_DWORD *)this + 22);
                if (v76 == *((_DWORD *)this + 23))
                {
                  google::protobuf::RepeatedField<double>::Reserve(v5, v76 + 1);
                  signed int v76 = *v5;
                }
                uint64_t v77 = *((void *)this + 12);
                *((_DWORD *)this + 22) = v76 + 1;
                *(void *)(v77 + 8 * v76 + 8) = v73;
              }
              goto LABEL_175;
            }
            unsigned int v42 = 802;
            int v43 = a2;
            uint64_t v44 = (uint64_t)v5;
LABEL_98:
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v42, v43, v44) & 1) == 0)return 0; {
          }
            }
        }
        else
        {
          if (v17 != 70)
          {
            if (v17 == 90 && v13 == 210)
            {
              uint64_t v18 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
              if (!v18) {
                operator new();
              }
LABEL_87:
              int v34 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v34 < 0)
              {
                int v35 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v35 < 0) {
                  return 0;
                }
              }
              else
              {
                int v35 = *v34;
                *(void *)a2 = v34 + 1;
              }
              int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v35);
              int v38 = *((_DWORD *)a2 + 13);
              BOOL v39 = __OFSUB__(v38--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v38;
              if (v38 < 0 != v39) {
                return 0;
              }
              int v40 = v36;
              uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v18, a2, v37);
              if (!result) {
                return result;
              }
              goto LABEL_125;
            }
            goto LABEL_9;
          }
          if (v13 != 48) {
            goto LABEL_9;
          }
          uint64_t v26 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
          {
            unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v51 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v27 = *v26;
            *(void *)a2 = v26 + 1;
          }
          *((unsigned char *)this + 15google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v27 != 0;
        }
      }
      if (v17 != 50) {
        break;
      }
      if (v13 != 146) {
        goto LABEL_9;
      }
      if (*((_DWORD *)this + 43) != 50)
      {
        CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
        *((_DWORD *)this + 4google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 50;
        operator new();
      }
      int v28 = (CoreML::Specification::ValidPadding *)*((void *)this + 20);
      int v45 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
      {
        int v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v46 < 0) {
          return 0;
        }
      }
      else
      {
        int v46 = *v45;
        *(void *)a2 = v45 + 1;
      }
      int v54 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
      int v56 = *((_DWORD *)a2 + 13);
      BOOL v39 = __OFSUB__(v56--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v56;
      if (v56 < 0 != v39) {
        return 0;
      }
      int v40 = v54;
      uint64_t result = CoreML::Specification::ValidPadding::MergePartialFromCodedStream(v28, a2, v55);
      if (!result) {
        return result;
      }
LABEL_125:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v40)) {
        return 0;
      }
    }
    if (v17 == 51) {
      break;
    }
    if (v17 != 60 || v13 != 224) {
      goto LABEL_9;
    }
    int v20 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
    {
      unint64_t v21 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v50 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      unint64_t v21 = *v20;
      *(void *)a2 = v20 + 1;
    }
    *((unsigned char *)this + 152) = v21 != 0;
  }
  if (v13 != 154) {
    goto LABEL_9;
  }
  if (*((_DWORD *)this + 43) != 51)
  {
    CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
    *((_DWORD *)this + 4google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 51;
    operator new();
  }
  BOOL v29 = (CoreML::Specification::SamePadding *)*((void *)this + 20);
  int v47 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v47 < 0)
  {
    int v48 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v48 < 0) {
      return 0;
    }
  }
  else
  {
    int v48 = *v47;
    *(void *)a2 = v47 + 1;
  }
  int v57 = google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
  int v59 = *((_DWORD *)a2 + 13);
  BOOL v39 = __OFSUB__(v59--, 1);
  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v59;
  if (v59 < 0 == v39)
  {
    int v40 = v57;
    uint64_t result = CoreML::Specification::SamePadding::MergePartialFromCodedStream(v29, (char **)a2, v58);
    if (!result) {
      return result;
    }
    goto LABEL_125;
  }
  return 0;
}

void sub_1DC0F92A4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::PoolingLayerParams *CoreML::Specification::PoolingLayerParams::PoolingLayerParams(CoreML::Specification::PoolingLayerParams *this)
{
  *(void *)this = &unk_1F361ED38;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::PoolingLayerParams *)&CoreML::Specification::_PoolingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 32) = 0;
  *((_DWORD *)this + 15) = 0;
  *((void *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC0F9374(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PoolingLayerParams::MergePartialFromCodedStream(CoreML::Specification::PoolingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  unint64_t v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)a2;
      unint64_t v8 = *((void *)a2 + 1);
      if (*(void *)a2 >= v8)
      {
        LODWORD(v1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
LABEL_16:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
        unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v11 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      unint64_t v9 = v7 + 1;
      uint64_t v10 = *v7;
      if ((char)*v7 < 1)
      {
        if ((unint64_t)v9 < v8)
        {
          int v12 = *v9;
          if ((v10 & ~v12) >= 0x80)
          {
            *(void *)a2 = v7 + 2;
            unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
            goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
      *(void *)a2 = v9;
      unint64_t v11 = v10 | 0x100000000;
      if ((v11 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      unsigned int v15 = v11 >> 3;
      if (v11 >> 3 > 0x1E) {
        break;
      }
      if (v11 >> 3 > 0x13)
      {
        if (v15 == 20)
        {
          if (v11 == 160)
          {
            unsigned int v30 = 162;
            int v31 = a2;
            uint64_t v32 = (uint64_t)v5;
            goto LABEL_64;
          }
          if (v11 != 162) {
            goto LABEL_9;
          }
          uint64_t v26 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v26;
            *(void *)a2 = v26 + 1;
          }
          int v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v64 = *((_DWORD *)a2 + 10);
            uint64_t v55 = *((int *)a2 + 11);
            unint64_t v56 = *((void *)a2 + 1);
            int v57 = *((_DWORD *)a2 + 6);
            if (v64 == 0x7FFFFFFF) {
              break;
            }
            uint64_t v65 = *(char **)a2;
            if ((int)(v64 - v57 + v55 + v56 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v65 >= v56 || *v65 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v68 & 1) == 0) {
                return 0;
              }
              unint64_t v66 = Varint64Fallback;
            }
            else
            {
              unint64_t v66 = *v65;
              *(void *)a2 = v65 + 1;
            }
            signed int v69 = *((_DWORD *)this + 10);
            if (v69 == *((_DWORD *)this + 11))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v69 + 1);
              signed int v69 = *v5;
            }
            uint64_t v70 = *((void *)this + 6);
            *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v69 + 1;
            *(void *)(v70 + 8 * v69 + 8) = v66;
          }
LABEL_119:
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v53;
          uint64_t v71 = v56 + v55;
          *((void *)a2 + 1) = v56 + v55;
          int v72 = *((_DWORD *)a2 + 12);
          if (v72 >= v53) {
            int v72 = v53;
          }
          BOOL v44 = __OFSUB__(v57, v72);
          int v73 = v57 - v72;
          if ((v73 < 0) ^ v44 | (v73 == 0)) {
            int v73 = 0;
          }
          else {
            *((void *)a2 + 1) = v71 - v73;
          }
          *((_DWORD *)a2 + 11) = v73;
          *((unsigned char *)a2 + 36) = 0;
        }
        else
        {
          if (v15 != 30 || v11 != 242) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 21) != 30)
          {
            CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
            *((_DWORD *)this + 21) = 30;
            operator new();
          }
          int v20 = (CoreML::Specification::ValidPadding *)*((void *)this + 9);
          int v35 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
          {
            int v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v36 < 0) {
              return 0;
            }
          }
          else
          {
            int v36 = *v35;
            *(void *)a2 = v35 + 1;
          }
          int v47 = google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
          int v49 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v49--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v49;
          if (v49 < 0 != v44) {
            return 0;
          }
          int v45 = v47;
          uint64_t result = CoreML::Specification::ValidPadding::MergePartialFromCodedStream(v20, a2, v48);
          if (!result) {
            return result;
          }
LABEL_93:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v45)) {
            return 0;
          }
        }
      }
      else if (v15 == 1)
      {
        if (v11 != 8) {
          goto LABEL_9;
        }
        int v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v24 = 0;
        }
        else
        {
          int v24 = *v23;
          if ((*v23 & 0x80000000) == 0)
          {
            *(void *)a2 = v23 + 1;
            goto LABEL_127;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
        int v24 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_127:
        *((_DWORD *)this + 15) = v24;
      }
      else
      {
        if (v15 != 10) {
          goto LABEL_9;
        }
        if (v11 == 80)
        {
          unsigned int v30 = 82;
          int v31 = a2;
          uint64_t v32 = (uint64_t)v6;
LABEL_64:
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v30, v31, v32) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v11 == 82)
          {
            int v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v17 < 0) {
                return 0;
              }
            }
            else
            {
              int v17 = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
            while (1)
            {
              int v54 = *((_DWORD *)a2 + 10);
              uint64_t v55 = *((int *)a2 + 11);
              unint64_t v56 = *((void *)a2 + 1);
              int v57 = *((_DWORD *)a2 + 6);
              if (v54 == 0x7FFFFFFF) {
                break;
              }
              unsigned int v58 = *(char **)a2;
              if ((int)(v54 - v57 + v55 + v56 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v58 >= v56 || *v58 < 0)
              {
                unint64_t v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v61 & 1) == 0) {
                  return 0;
                }
                unint64_t v59 = v60;
              }
              else
              {
                unint64_t v59 = *v58;
                *(void *)a2 = v58 + 1;
              }
              signed int v62 = *((_DWORD *)this + 4);
              if (v62 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v6, v62 + 1);
                signed int v62 = *v6;
              }
              uint64_t v63 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v62 + 1;
              *(void *)(v63 + 8 * v62 + 8) = v59;
            }
            goto LABEL_119;
          }
LABEL_9:
          if (v11) {
            BOOL v13 = (v11 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)return 0; {
        }
          }
      }
    }
    if (v11 >> 3 <= 0x31) {
      break;
    }
    if (v15 == 50)
    {
      if (v11 != 144) {
        goto LABEL_9;
      }
      int v28 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v28 < 0)
      {
        unint64_t v29 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v40 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v29 = *v28;
        *(void *)a2 = v28 + 1;
      }
      *((unsigned char *)this + 64) = v29 != 0;
    }
    else
    {
      if (v15 != 60 || v11 != 224) {
        goto LABEL_9;
      }
      unint64_t v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        unint64_t v22 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v39 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      *((unsigned char *)this + 65) = v22 != 0;
    }
  }
  if (v15 != 31)
  {
    if (v15 != 32 || v11 != 2) {
      goto LABEL_9;
    }
    if (*((_DWORD *)this + 21) != 32)
    {
      CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
      *((_DWORD *)this + 21) = 32;
      operator new();
    }
    unint64_t v19 = (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)*((void *)this + 9);
    int v33 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v33 < 0)
    {
      int v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v34 < 0) {
        return 0;
      }
    }
    else
    {
      int v34 = *v33;
      *(void *)a2 = v33 + 1;
    }
    int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
    int v43 = *((_DWORD *)a2 + 13);
    BOOL v44 = __OFSUB__(v43--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v43;
    if (v43 < 0 != v44) {
      return 0;
    }
    int v45 = v41;
    uint64_t result = CoreML::Specification::PoolingLayerParams_ValidCompletePadding::MergePartialFromCodedStream(v19, a2, v42);
    if (!result) {
      return result;
    }
    goto LABEL_93;
  }
  if (v11 != 250) {
    goto LABEL_9;
  }
  if (*((_DWORD *)this + 21) != 31)
  {
    CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
    *((_DWORD *)this + 21) = 31;
    operator new();
  }
  int v25 = (CoreML::Specification::SamePadding *)*((void *)this + 9);
  unsigned int v37 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v37 < 0)
  {
    int v38 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v38 < 0) {
      return 0;
    }
  }
  else
  {
    int v38 = *v37;
    *(void *)a2 = v37 + 1;
  }
  int v50 = google::protobuf::io::CodedInputStream::PushLimit(a2, v38);
  int v52 = *((_DWORD *)a2 + 13);
  BOOL v44 = __OFSUB__(v52--, 1);
  *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v52;
  if (v52 < 0 == v44)
  {
    int v45 = v50;
    uint64_t result = CoreML::Specification::SamePadding::MergePartialFromCodedStream(v25, (char **)a2, v51);
    if (!result) {
      return result;
    }
    goto LABEL_93;
  }
  return 0;
}

void sub_1DC0F9A64(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ActivationParams *CoreML::Specification::ActivationParams::ActivationParams(CoreML::Specification::ActivationParams *this)
{
  *(void *)this = &unk_1F361D150;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationParams *)&CoreML::Specification::_ActivationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0F9B18(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationParams::MergePartialFromCodedStream(CoreML::Specification::ActivationParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        LODWORD(v8) = 0;
      }
      else
      {
        uint64_t v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
          goto LABEL_16;
        }
        if ((unint64_t)v7 < v6)
        {
          int v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(void *)a2 = v5 + 2;
            unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_16;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unsigned int v13 = v9 >> 3;
      if (v9 >> 3 <= 0x1E) {
        break;
      }
      if (v9 >> 3 <= 0x31)
      {
        if (v13 != 31)
        {
          if (v13 == 40)
          {
            if (v9 == 66)
            {
              if (*((_DWORD *)this + 7) != 40)
              {
                CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
                *((_DWORD *)this + 7) = 40;
                operator new();
              }
              uint64_t v26 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
              {
                int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                int VarintSizeAsIntFallback = *v26;
                *(void *)a2 = v26 + 1;
              }
              unint64_t v60 = (CoreML::Specification::ActivationSigmoid *)google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              int v62 = *((_DWORD *)a2 + 13);
              BOOL v51 = __OFSUB__(v62--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v62;
              if (v62 < 0 != v51) {
                return 0;
              }
              int v52 = (int)v60;
              uint64_t result = CoreML::Specification::ActivationSigmoid::MergePartialFromCodedStream(v60, (char **)a2, v61);
              if (!result) {
                return result;
              }
              goto LABEL_138;
            }
            goto LABEL_8;
          }
          if (v13 != 41 || v9 != 74) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 7) != 41)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 41;
            operator new();
          }
          int v17 = (CoreML::Specification::ActivationSigmoidHard *)*((void *)this + 2);
          int v34 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v34 < 0)
          {
            int v35 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v35 < 0) {
              return 0;
            }
          }
          else
          {
            int v35 = *v34;
            *(void *)a2 = v34 + 1;
          }
          int v72 = google::protobuf::io::CodedInputStream::PushLimit(a2, v35);
          int v74 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v74--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v74;
          if (v74 < 0 != v51) {
            return 0;
          }
          int v71 = v72;
          uint64_t result = CoreML::Specification::ActivationSigmoidHard::MergePartialFromCodedStream(v17, (char **)a2, v73);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        if (v9 == 250)
        {
          if (*((_DWORD *)this + 7) != 31)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 31;
            operator new();
          }
          int v25 = (CoreML::Specification::ActivationScaledTanh *)*((void *)this + 2);
          unsigned int v42 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v42 < 0)
          {
            int v43 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v43 < 0) {
              return 0;
            }
          }
          else
          {
            int v43 = *v42;
            *(void *)a2 = v42 + 1;
          }
          int v84 = google::protobuf::io::CodedInputStream::PushLimit(a2, v43);
          int v86 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v86--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v86;
          if (v86 < 0 != v51) {
            return 0;
          }
          int v71 = v84;
          uint64_t result = CoreML::Specification::ActivationScaledTanh::MergePartialFromCodedStream(v25, (char **)a2, v85);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        goto LABEL_8;
      }
      if (v9 >> 3 > 0x45)
      {
        if (v13 == 70)
        {
          if (v9 == 50)
          {
            if (*((_DWORD *)this + 7) != 70)
            {
              CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
              *((_DWORD *)this + 7) = 70;
              operator new();
            }
            unsigned int v30 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
            {
              int v31 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v31 < 0) {
                return 0;
              }
            }
            else
            {
              int v31 = *v30;
              *(void *)a2 = v30 + 1;
            }
            uint64_t v63 = (CoreML::Specification::ActivationSoftplus *)google::protobuf::io::CodedInputStream::PushLimit(a2, v31);
            int v65 = *((_DWORD *)a2 + 13);
            BOOL v51 = __OFSUB__(v65--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v65;
            if (v65 < 0 != v51) {
              return 0;
            }
            int v52 = (int)v63;
            uint64_t result = CoreML::Specification::ActivationSoftplus::MergePartialFromCodedStream(v63, (char **)a2, v64);
            if (!result) {
              return result;
            }
            goto LABEL_138;
          }
          goto LABEL_8;
        }
        if (v13 != 71 || v9 != 58) {
          goto LABEL_8;
        }
        if (*((_DWORD *)this + 7) != 71)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 71;
          operator new();
        }
        int v20 = (CoreML::Specification::ActivationParametricSoftplus *)*((void *)this + 2);
        int v36 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v36 < 0)
        {
          int v37 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v37 < 0) {
            return 0;
          }
        }
        else
        {
          int v37 = *v36;
          *(void *)a2 = v36 + 1;
        }
        int v75 = google::protobuf::io::CodedInputStream::PushLimit(a2, v37);
        int v77 = *((_DWORD *)a2 + 13);
        BOOL v51 = __OFSUB__(v77--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v77;
        if (v77 < 0 != v51) {
          return 0;
        }
        int v71 = v75;
        uint64_t result = CoreML::Specification::ActivationParametricSoftplus::MergePartialFromCodedStream(v20, a2, v76);
        if (!result) {
          return result;
        }
        goto LABEL_170;
      }
      if (v13 == 50)
      {
        if (v9 == 146)
        {
          if (*((_DWORD *)this + 7) != 50)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 50;
            operator new();
          }
          unint64_t v21 = (CoreML::Specification::ActivationELU *)*((void *)this + 2);
          int v38 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v38 < 0)
          {
            int v39 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v39 < 0) {
              return 0;
            }
          }
          else
          {
            int v39 = *v38;
            *(void *)a2 = v38 + 1;
          }
          int v78 = google::protobuf::io::CodedInputStream::PushLimit(a2, v39);
          int v80 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v80--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v80;
          if (v80 < 0 != v51) {
            return 0;
          }
          int v71 = v78;
          uint64_t result = CoreML::Specification::ActivationELU::MergePartialFromCodedStream(v21, (char **)a2, v79);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
        goto LABEL_8;
      }
      if (v13 != 60 || v9 != 226) {
        goto LABEL_8;
      }
      if (*((_DWORD *)this + 7) != 60)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 60;
        operator new();
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        int v15 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v15 < 0) {
          return 0;
        }
      }
      else
      {
        int v15 = *v14;
        *(void *)a2 = v14 + 1;
      }
      unsigned int v48 = (CoreML::Specification::ActivationSoftsign *)google::protobuf::io::CodedInputStream::PushLimit(a2, v15);
      int v50 = *((_DWORD *)a2 + 13);
      BOOL v51 = __OFSUB__(v50--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v50;
      if (v50 < 0 != v51) {
        return 0;
      }
      int v52 = (int)v48;
      uint64_t result = CoreML::Specification::ActivationSoftsign::MergePartialFromCodedStream(v48, (char **)a2, v49);
      if (!result) {
        return result;
      }
LABEL_138:
      unint64_t v66 = a2;
      int v67 = v52;
LABEL_171:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v66, v67)) {
        return 0;
      }
    }
    if (v9 >> 3 > 0x13)
    {
      if (v13 == 20)
      {
        if (v9 == 162)
        {
          if (*((_DWORD *)this + 7) != 20)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 20;
            operator new();
          }
          int v28 = (CoreML::Specification::ActivationThresholdedReLU *)*((void *)this + 2);
          BOOL v44 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v44 < 0)
          {
            int v45 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v45 < 0) {
              return 0;
            }
          }
          else
          {
            int v45 = *v44;
            *(void *)a2 = v44 + 1;
          }
          int v87 = google::protobuf::io::CodedInputStream::PushLimit(a2, v45);
          int v89 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v89--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v89;
          if (v89 < 0 != v51) {
            return 0;
          }
          int v71 = v87;
          uint64_t result = CoreML::Specification::ActivationThresholdedReLU::MergePartialFromCodedStream(v28, (char **)a2, v88);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
      }
      else if (v13 == 25)
      {
        if (v9 == 202)
        {
          if (*((_DWORD *)this + 7) != 25)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 25;
            operator new();
          }
          unint64_t v29 = (CoreML::Specification::ActivationPReLU *)*((void *)this + 2);
          int v46 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v46 < 0)
          {
            int v47 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v47 < 0) {
              return 0;
            }
          }
          else
          {
            int v47 = *v46;
            *(void *)a2 = v46 + 1;
          }
          int v90 = google::protobuf::io::CodedInputStream::PushLimit(a2, v47);
          int v92 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v92--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v92;
          if (v92 < 0 != v51) {
            return 0;
          }
          int v71 = v90;
          uint64_t result = CoreML::Specification::ActivationPReLU::MergePartialFromCodedStream(v29, a2, v91);
          if (!result) {
            return result;
          }
          goto LABEL_170;
        }
      }
      else if (v13 == 30 && v9 == 242)
      {
        if (*((_DWORD *)this + 7) != 30)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 30;
          operator new();
        }
        uint64_t v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0) {
            return 0;
          }
        }
        else
        {
          int v19 = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v54 = (CoreML::Specification::ActivationTanh *)google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
        int v56 = *((_DWORD *)a2 + 13);
        BOOL v51 = __OFSUB__(v56--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v56;
        if (v56 < 0 != v51) {
          return 0;
        }
        int v52 = (int)v54;
        uint64_t result = CoreML::Specification::ActivationTanh::MergePartialFromCodedStream(v54, (char **)a2, v55);
        if (!result) {
          return result;
        }
        goto LABEL_138;
      }
      goto LABEL_8;
    }
    if (v13 != 5)
    {
      if (v13 == 10)
      {
        if (v9 == 82)
        {
          if (*((_DWORD *)this + 7) != 10)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 10;
            operator new();
          }
          int v23 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
          {
            int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v24 < 0) {
              return 0;
            }
          }
          else
          {
            int v24 = *v23;
            *(void *)a2 = v23 + 1;
          }
          int v57 = (CoreML::Specification::ActivationReLU *)google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
          int v59 = *((_DWORD *)a2 + 13);
          BOOL v51 = __OFSUB__(v59--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v59;
          if (v59 < 0 != v51) {
            return 0;
          }
          int v52 = (int)v57;
          uint64_t result = CoreML::Specification::ActivationReLU::MergePartialFromCodedStream(v57, (char **)a2, v58);
          if (!result) {
            return result;
          }
          goto LABEL_138;
        }
        goto LABEL_8;
      }
      if (v13 != 15 || v9 != 122) {
        goto LABEL_8;
      }
      if (*((_DWORD *)this + 7) != 15)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 15;
        operator new();
      }
      int v16 = (CoreML::Specification::ActivationLeakyReLU *)*((void *)this + 2);
      uint64_t v32 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v32 < 0)
      {
        int v33 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v33 < 0) {
          return 0;
        }
      }
      else
      {
        int v33 = *v32;
        *(void *)a2 = v32 + 1;
      }
      int v68 = google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
      int v70 = *((_DWORD *)a2 + 13);
      BOOL v51 = __OFSUB__(v70--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v70;
      if (v70 < 0 != v51) {
        return 0;
      }
      int v71 = v68;
      uint64_t result = CoreML::Specification::ActivationLeakyReLU::MergePartialFromCodedStream(v16, (char **)a2, v69);
      if (!result) {
        return result;
      }
LABEL_170:
      unint64_t v66 = a2;
      int v67 = v71;
      goto LABEL_171;
    }
    if (v9 == 42)
    {
      if (*((_DWORD *)this + 7) != 5)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 5;
        operator new();
      }
      unint64_t v22 = (CoreML::Specification::ActivationLinear *)*((void *)this + 2);
      char v40 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v40 < 0)
      {
        int v41 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v41 < 0) {
          return 0;
        }
      }
      else
      {
        int v41 = *v40;
        *(void *)a2 = v40 + 1;
      }
      int v81 = google::protobuf::io::CodedInputStream::PushLimit(a2, v41);
      int v83 = *((_DWORD *)a2 + 13);
      BOOL v51 = __OFSUB__(v83--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v83;
      if (v83 < 0 != v51) {
        return 0;
      }
      int v71 = v81;
      uint64_t result = CoreML::Specification::ActivationLinear::MergePartialFromCodedStream(v22, (char **)a2, v82);
      if (!result) {
        return result;
      }
      goto LABEL_170;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0FA5E0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

CoreML::Specification::InnerProductLayerParams *CoreML::Specification::InnerProductLayerParams::InnerProductLayerParams(CoreML::Specification::InnerProductLayerParams *this)
{
  *(void *)this = &unk_1F36217F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 24) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0FA6E8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::InnerProductLayerParams::MergePartialFromCodedStream(CoreML::Specification::InnerProductLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(unsigned __int8 **)a2;
        unint64_t v6 = *((void *)a2 + 1);
        if (*(void *)a2 >= v6)
        {
          LODWORD(v8) = 0;
        }
        else
        {
          uint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 >= 1)
          {
            *(void *)a2 = v7;
            unint64_t v9 = v8 | 0x100000000;
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_8;
            }
            goto LABEL_16;
          }
          if ((unint64_t)v7 < v6)
          {
            int v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(void *)a2 = v5 + 2;
              unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_16;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
        unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_8;
        }
LABEL_16:
        unsigned int v13 = v9 >> 3;
        if (v9 >> 3 > 0x13) {
          break;
        }
        if (v13 == 1)
        {
          if (v9 != 8) {
            goto LABEL_8;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v18 & 0x80000000) == 0)
          {
            *((void *)this + 4) = *v18;
            goto LABEL_39;
          }
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v30 & 1) == 0) {
            return 0;
          }
        }
        else if (v13 == 2)
        {
          if (v9 != 16) {
            goto LABEL_8;
          }
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v18;
LABEL_39:
            *(void *)a2 = v18 + 1;
          }
        }
        else
        {
          if (v13 != 10 || v9 != 80) {
            goto LABEL_8;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 48) = Varint64Fallback != 0;
        }
      }
      if (v13 == 20) {
        break;
      }
      if (v13 == 21)
      {
        if (v9 != 170) {
          goto LABEL_8;
        }
        int v19 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
        if (!v19) {
          operator new();
        }
LABEL_46:
        int v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
        if (v24 < 0 != v25) {
          return 0;
        }
        int v26 = v22;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v19, a2, v23);
        if (!result) {
          return result;
        }
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
          return 0;
        }
      }
      else
      {
        if (v13 != 22 || v9 != 176) {
          goto LABEL_8;
        }
        int v16 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
        {
          unint64_t v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v29 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v17 = *v16;
          *(void *)a2 = v16 + 1;
        }
        *((unsigned char *)this + 49) = v17 != 0;
      }
    }
    if (v9 == 162)
    {
      int v19 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
      if (!v19) {
        operator new();
      }
      goto LABEL_46;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0FAA24(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::EmbeddingLayerParams *CoreML::Specification::EmbeddingLayerParams::EmbeddingLayerParams(CoreML::Specification::EmbeddingLayerParams *this)
{
  *(void *)this = &unk_1F361FAE0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 48) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0FAAB8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EmbeddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::EmbeddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            LODWORD(v8) = 0;
LABEL_51:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_52;
            }
            goto LABEL_8;
          }
          uint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 < 1)
          {
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_8;
              }
            }
            goto LABEL_51;
          }
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_52;
          }
LABEL_8:
          unsigned int v11 = v9 >> 3;
          if (v9 >> 3 <= 9) {
            break;
          }
          if (v11 == 10)
          {
            if (v9 != 80) {
              goto LABEL_52;
            }
            int v15 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v26 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v15;
              *(void *)a2 = v15 + 1;
            }
            *((unsigned char *)this + 48) = Varint64Fallback != 0;
          }
          else
          {
            if (v11 == 20)
            {
              if (v9 != 162) {
                goto LABEL_52;
              }
              int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
              if (!v12) {
                operator new();
              }
            }
            else
            {
              if (v11 != 21 || v9 != 170) {
                goto LABEL_52;
              }
              int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
              if (!v12) {
                operator new();
              }
            }
            unint64_t v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v17;
              *(void *)a2 = v17 + 1;
            }
            int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v21 = *((_DWORD *)a2 + 13);
            BOOL v22 = __OFSUB__(v21--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v21;
            if (v21 < 0 != v22) {
              return 0;
            }
            int v23 = v19;
            BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v20);
            if (!result) {
              return result;
            }
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v23)) {
              return 0;
            }
          }
        }
        if (v11 != 1) {
          break;
        }
        if (v9 != 8) {
          goto LABEL_52;
        }
        int v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 4) = *v14;
LABEL_38:
          *(void *)a2 = v14 + 1;
        }
      }
      if (v11 != 2 || v9 != 16) {
        break;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 5) = *v14;
        goto LABEL_38;
      }
      *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v25 & 1) == 0) {
        return 0;
      }
    }
LABEL_52:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0FAD9C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BatchnormLayerParams *CoreML::Specification::BatchnormLayerParams::BatchnormLayerParams(CoreML::Specification::BatchnormLayerParams *this)
{
  *(void *)this = &unk_1F361FA48;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 16) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  return this;
}

void sub_1DC0FAE30(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BatchnormLayerParams::MergePartialFromCodedStream(CoreML::Specification::BatchnormLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        LODWORD(v8) = 0;
        goto LABEL_15;
      }
      uint64_t v7 = v5 + 1;
      uint64_t v8 = *v5;
      if ((char)*v5 >= 1) {
        break;
      }
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_16;
        }
      }
LABEL_15:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_8;
          }
          unsigned int v13 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
          {
            *((void *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 6) = *v13;
            *(void *)a2 = v13 + 1;
          }
          continue;
        case 5u:
          if (v9 != 40) {
            goto LABEL_8;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 56) = Varint64Fallback != 0;
          continue;
        case 6u:
          if (v9 != 48) {
            goto LABEL_8;
          }
          int v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            unint64_t v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v17 = *v16;
            *(void *)a2 = v16 + 1;
          }
          *((unsigned char *)this + 57) = v17 != 0;
          break;
        case 0xAu:
          if (v9 != 85) {
            goto LABEL_8;
          }
          unsigned int v32 = 0;
          uint64_t v18 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
            if (!result) {
              return result;
            }
            unsigned int v19 = v32;
          }
          else
          {
            unsigned int v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          *((_DWORD *)this + 15) = v19;
          continue;
        case 0xFu:
          if (v9 != 122) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x10u:
          if (v9 != 130) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
          if (!v20) {
            operator new();
          }
          goto LABEL_45;
        case 0x12u:
          if (v9 != 146) {
            goto LABEL_8;
          }
          unsigned int v20 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
          if (!v20) {
            operator new();
          }
LABEL_45:
          int v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v21;
            *(void *)a2 = v21 + 1;
          }
          int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v25 = *((_DWORD *)a2 + 13);
          BOOL v26 = __OFSUB__(v25--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v25;
          if (v25 < 0 != v26) {
            return 0;
          }
          int v27 = v23;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v20, a2, v24);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_8;
      }
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_16;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0FB1F0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MeanVarianceNormalizeLayerParams *CoreML::Specification::MeanVarianceNormalizeLayerParams::MeanVarianceNormalizeLayerParams(CoreML::Specification::MeanVarianceNormalizeLayerParams *this)
{
  *(void *)this = &unk_1F3624350;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MeanVarianceNormalizeLayerParams *)&CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC0FB2CC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::MeanVarianceNormalizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::MeanVarianceNormalizeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v21 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v14 = v21;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 5) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_25;
        }
        int v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v15;
          *a2 = v15 + 1;
        }
        *((unsigned char *)this + 17) = Varint64Fallback != 0;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = v12 != 0;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::L2NormalizeLayerParams *CoreML::Specification::L2NormalizeLayerParams::L2NormalizeLayerParams(CoreML::Specification::L2NormalizeLayerParams *this)
{
  *(void *)this = &unk_1F3621040;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::L2NormalizeLayerParams *)&CoreML::Specification::_L2NormalizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC0FB4E8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::L2NormalizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::L2NormalizeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SoftmaxLayerParams *CoreML::Specification::SoftmaxLayerParams::SoftmaxLayerParams(CoreML::Specification::SoftmaxLayerParams *this)
{
  *(void *)this = &unk_1F361F030;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SoftmaxLayerParams *)&CoreML::Specification::_SoftmaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC0FB658(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SoftmaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::SoftmaxLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LRNLayerParams *CoreML::Specification::LRNLayerParams::LRNLayerParams(CoreML::Specification::LRNLayerParams *this)
{
  *(void *)this = &unk_1F361C018;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LRNLayerParams *)&CoreML::Specification::_LRNLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0FB74C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LRNLayerParams::MergePartialFromCodedStream(CoreML::Specification::LRNLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 13) {
            goto LABEL_24;
          }
          unsigned int v21 = 0;
          unsigned int v9 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v10 = v21;
          }
          else
          {
            unsigned int v10 = *v9;
            *a2 = (char *)(v9 + 1);
          }
          *((_DWORD *)this + 4) = v10;
          continue;
        case 2u:
          if (v7 != 21) {
            goto LABEL_24;
          }
          unsigned int v20 = 0;
          unsigned int v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v12 = v20;
          }
          else
          {
            unsigned int v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 24) {
            goto LABEL_24;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v13;
            *a2 = v13 + 1;
          }
          break;
        case 4u:
          if (v7 != 37) {
            goto LABEL_24;
          }
          unsigned int v19 = 0;
          unsigned int v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v19);
            if (!result) {
              return result;
            }
            unsigned int v15 = v19;
          }
          else
          {
            unsigned int v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 8) = v15;
          continue;
        default:
          goto LABEL_24;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::CropLayerParams *CoreML::Specification::CropLayerParams::CropLayerParams(CoreML::Specification::CropLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361C868;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1DC0FB9E8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CropLayerParams::MergePartialFromCodedStream(CoreML::Specification::CropLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_13:
        if (v8) {
          BOOL v11 = (v8 & 7) == 4;
        }
        else {
          BOOL v11 = 1;
        }
        if (v11) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_13;
      }
LABEL_8:
      if (v8 >> 3 != 5) {
        break;
      }
      if (v8 == 40)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x2Au, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 42) {
          goto LABEL_13;
        }
        unsigned int v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v12;
          *(void *)a2 = v12 + 1;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v24 = *((_DWORD *)a2 + 10);
          uint64_t v25 = *((int *)a2 + 11);
          unint64_t v26 = *((void *)a2 + 1);
          int v27 = *((_DWORD *)a2 + 6);
          if (v24 == 0x7FFFFFFF) {
            break;
          }
          char v28 = *(char **)a2;
          if ((int)(v24 - v27 + v25 + v26 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v28 >= v26 || *v28 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
            unint64_t v29 = Varint64Fallback;
          }
          else
          {
            unint64_t v29 = *v28;
            *(void *)a2 = v28 + 1;
          }
          signed int v32 = *((_DWORD *)this + 4);
          if (v32 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v32 + 1);
            signed int v32 = *v5;
          }
          uint64_t v33 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v32 + 1;
          *(void *)(v33 + 8 * v32 + 8) = v29;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v23;
        uint64_t v34 = v26 + v25;
        *((void *)a2 + 1) = v26 + v25;
        int v35 = *((_DWORD *)a2 + 12);
        if (v35 >= v23) {
          int v35 = v23;
        }
        BOOL v20 = __OFSUB__(v27, v35);
        int v36 = v27 - v35;
        if ((v36 < 0) ^ v20 | (v36 == 0)) {
          int v36 = 0;
        }
        else {
          *((void *)a2 + 1) = v34 - v36;
        }
        *((_DWORD *)a2 + 11) = v36;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    unsigned int v14 = (CoreML::Specification::BorderAmounts *)*((void *)this + 5);
    if (!v14) {
      operator new();
    }
    unsigned int v15 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
    {
      int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v16 < 0) {
        return 0;
      }
    }
    else
    {
      int v16 = *v15;
      *(void *)a2 = v15 + 1;
    }
    int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
    int v19 = *((_DWORD *)a2 + 13);
    BOOL v20 = __OFSUB__(v19--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v19;
    if (v19 < 0 != v20) {
      break;
    }
    int v21 = v17;
    uint64_t result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v14, a2, v18);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21));
  return 0;
}

void sub_1DC0FBCC8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::PaddingLayerParams *CoreML::Specification::PaddingLayerParams::PaddingLayerParams(CoreML::Specification::PaddingLayerParams *this)
{
  *(void *)this = &unk_1F361EB70;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0FBD50(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PaddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_29:
      if (v7) {
        BOOL v17 = (v7 & 7) == 4;
      }
      else {
        BOOL v17 = 1;
      }
      if (v17) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
        goto LABEL_56;
      }
    }
    LODWORD(v6) = 0;
LABEL_6:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_29;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 1)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 1;
          operator new();
        }
        unsigned int v9 = (CoreML::Specification::PaddingLayerParams_PaddingConstant *)*((void *)this + 3);
        unsigned int v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v37 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v37--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v37;
        if (v37 < 0 != v23) {
          goto LABEL_56;
        }
        int v34 = v35;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingConstant::MergePartialFromCodedStream(v9, (char **)a2, v36);
        if (!result) {
          return result;
        }
LABEL_54:
        unint64_t v29 = a2;
        int v30 = v34;
LABEL_55:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v29, v30)) {
          continue;
        }
LABEL_56:
        uint64_t result = 0;
        break;
      case 2u:
        if (v7 != 18) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 2)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 2;
          operator new();
        }
        unsigned int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int v11 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v11 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v11 = *v10;
          *(void *)a2 = v10 + 1;
        }
        BOOL v20 = (CoreML::Specification::PaddingLayerParams_PaddingReflection *)google::protobuf::io::CodedInputStream::PushLimit(a2, v11);
        int v22 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v22--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v22;
        if (v22 < 0 != v23) {
          goto LABEL_56;
        }
        int v24 = (int)v20;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingReflection::MergePartialFromCodedStream(v20, (char **)a2, v21);
        if (!result) {
          return result;
        }
        goto LABEL_46;
      case 3u:
        if (v7 != 26) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 9) != 3)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 3;
          operator new();
        }
        unsigned int v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
        {
          int v13 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v13 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v13 = *v12;
          *(void *)a2 = v12 + 1;
        }
        unint64_t v26 = (CoreML::Specification::PaddingLayerParams_PaddingReplication *)google::protobuf::io::CodedInputStream::PushLimit(a2, v13);
        int v28 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v28--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v28;
        if (v28 < 0 != v23) {
          goto LABEL_56;
        }
        int v24 = (int)v26;
        uint64_t result = CoreML::Specification::PaddingLayerParams_PaddingReplication::MergePartialFromCodedStream(v26, (char **)a2, v27);
        if (!result) {
          return result;
        }
LABEL_46:
        unint64_t v29 = a2;
        int v30 = v24;
        goto LABEL_55;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_29;
        }
        unsigned int v14 = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
        if (!v14) {
          operator new();
        }
        unsigned int v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v16 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
        int v33 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v33--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v33;
        if (v33 < 0 != v23) {
          goto LABEL_56;
        }
        int v34 = v31;
        uint64_t result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v14, a2, v32);
        if (!result) {
          return result;
        }
        goto LABEL_54;
      default:
        goto LABEL_29;
    }
    return result;
  }
}

void sub_1DC0FC110(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::UpsampleLayerParams *CoreML::Specification::UpsampleLayerParams::UpsampleLayerParams(CoreML::Specification::UpsampleLayerParams *this)
{
  *(void *)this = &unk_1F361F918;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::UpsampleLayerParams *)&CoreML::Specification::_UpsampleLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 6CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((_DWORD *)this + 17) = 0;
  return this;
}

void sub_1DC0FC204(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::UpsampleLayerParams::MergePartialFromCodedStream(CoreML::Specification::UpsampleLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    unint64_t v7 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v8) = 0;
      break;
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      break;
    }
    *(void *)a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_27:
    if (v9) {
      BOOL v19 = (v9 & 7) == 4;
    }
    else {
      BOOL v19 = 1;
    }
    if (v19) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
  unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v9 & 0x100000000) == 0) {
    goto LABEL_27;
  }
LABEL_8:
  switch(v9 >> 3)
  {
    case 1u:
      if (v9 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v6) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v9 != 10) {
          goto LABEL_27;
        }
        int v11 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v11;
          *(void *)a2 = v11 + 1;
        }
        int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v21 = *((_DWORD *)a2 + 10);
          uint64_t v22 = *((int *)a2 + 11);
          unint64_t v23 = *((void *)a2 + 1);
          int v24 = *((_DWORD *)a2 + 6);
          if (v21 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v25 = *(char **)a2;
          if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v25 >= v23 || *v25 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
            unint64_t v26 = Varint64Fallback;
          }
          else
          {
            unint64_t v26 = *v25;
            *(void *)a2 = v25 + 1;
          }
          signed int v29 = *((_DWORD *)this + 4);
          if (v29 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v6, v29 + 1);
            signed int v29 = *v6;
          }
          uint64_t v30 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v29 + 1;
          *(void *)(v30 + 8 * v29 + 8) = v26;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
        uint64_t v31 = v23 + v22;
        *((void *)a2 + 1) = v23 + v22;
        int v32 = *((_DWORD *)a2 + 12);
        if (v32 >= v20) {
          int v32 = v20;
        }
        BOOL v33 = __OFSUB__(v24, v32);
        int v34 = v24 - v32;
        if ((v34 < 0) ^ v33 | (v34 == 0)) {
          int v34 = 0;
        }
        else {
          *((void *)a2 + 1) = v31 - v34;
        }
        *((_DWORD *)a2 + 11) = v34;
        *((unsigned char *)a2 + 36) = 0;
      }
      goto LABEL_2;
    case 5u:
      if (v9 != 40) {
        goto LABEL_27;
      }
      int v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v14 = 0;
      }
      else
      {
        int v14 = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *(void *)a2 = v13 + 1;
          goto LABEL_95;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
      int v14 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_95:
      *((_DWORD *)this + 15) = v14;
      goto LABEL_2;
    case 6u:
      if (v9 != 48) {
        goto LABEL_27;
      }
      unsigned int v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v16 = 0;
      }
      else
      {
        int v16 = *v15;
        if ((*v15 & 0x80000000) == 0)
        {
          *(void *)a2 = v15 + 1;
          goto LABEL_92;
        }
      }
      uint64_t v52 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
      int v16 = v52;
      if (v52 < 0) {
        return 0;
      }
LABEL_92:
      *((_DWORD *)this + 16) = v16;
      goto LABEL_2;
    case 7u:
      if (v9 == 61)
      {
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(58, (unsigned int **)a2, (uint64_t)v5))return 0; {
        goto LABEL_2;
        }
      }
      if (v9 != 58) {
        goto LABEL_27;
      }
      BOOL v17 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
      {
        unsigned int v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v18 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v18 = *v17;
        *(void *)a2 = v17 + 1;
      }
      if ((v18 & 3) != 0) {
        return 0;
      }
      int v35 = *((_DWORD *)a2 + 12);
      if (v35 == 0x7FFFFFFF) {
        int v36 = -1;
      }
      else {
        int v36 = v35 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      }
      int v37 = *((_DWORD *)a2 + 10);
      if (v37 == 0x7FFFFFFF) {
        int v38 = -1;
      }
      else {
        int v38 = v37 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      }
      signed int v39 = *v5;
      unsigned int v40 = v18 >> 2;
      if (v38 >= v36) {
        int v41 = v36;
      }
      else {
        int v41 = v38;
      }
      if (v36 == -1) {
        int v42 = v38;
      }
      else {
        int v42 = v41;
      }
      if (v42 < (uint64_t)v18)
      {
        if (v18 >= 4)
        {
          if (v40 <= 1) {
            int v43 = 1;
          }
          else {
            int v43 = v18 >> 2;
          }
          do
          {
            unsigned int v54 = 0;
            BOOL v44 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
            {
              BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v54);
              if (!result) {
                return result;
              }
              unsigned int v45 = v54;
              signed int v39 = *v5;
            }
            else
            {
              unsigned int v45 = *v44;
              *(void *)a2 = v44 + 1;
            }
            if (v39 == *((_DWORD *)this + 11))
            {
              google::protobuf::RepeatedField<int>::Reserve(v5, v39 + 1);
              signed int v39 = *v5;
            }
            uint64_t v46 = *((void *)this + 6) + 4 * v39;
            *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v39 + 1;
            *(_DWORD *)(v46 + 8) = v45;
            ++v39;
            --v43;
          }
          while (v43);
        }
        goto LABEL_2;
      }
      signed int v48 = v39 + v40;
      if (v18 > 3)
      {
        google::protobuf::RepeatedField<int>::Reserve(v5, v39 + v40);
        uint64_t v49 = *((void *)this + 6);
        uint64_t v50 = 4 * v48 - 4 * *((int *)this + 10);
        if (v50 >= 1) {
          bzero((void *)(v49 + 8 + 4 * *((int *)this + 10)), 4 * (((unint64_t)v50 >> 2) - ((unint64_t)v50 > 3)) + 4);
        }
      }
      else
      {
        uint64_t v49 = *((void *)this + 6);
      }
      *uint64_t v5 = v48;
      uint64_t v51 = v49 + 8;
      if (!v49) {
        uint64_t v51 = 0;
      }
      if (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v51 + 4 * v39), v18)) {
        goto LABEL_2;
      }
      if ((int)*v5 < 1) {
        return 0;
      }
      BOOL result = 0;
      *uint64_t v5 = v39;
      return result;
    default:
      goto LABEL_27;
  }
}

CoreML::Specification::ResizeBilinearLayerParams *CoreML::Specification::ResizeBilinearLayerParams::ResizeBilinearLayerParams(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3622800;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1DC0FC7D4(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::MergePartialFromCodedStream(CoreML::Specification::ResizeBilinearLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        unsigned int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v23 = *((_DWORD *)a2 + 10);
          uint64_t v24 = *((int *)a2 + 11);
          unint64_t v25 = *((void *)a2 + 1);
          int v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          unsigned int v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
            unint64_t v28 = Varint64Fallback;
          }
          else
          {
            unint64_t v28 = *v27;
            *(void *)a2 = v27 + 1;
          }
          signed int v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v32 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(void *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22;
        uint64_t v33 = v25 + v24;
        *((void *)a2 + 1) = v25 + v24;
        int v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22) {
          int v34 = v22;
        }
        BOOL v19 = __OFSUB__(v26, v34);
        int v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0)) {
          int v35 = 0;
        }
        else {
          *((void *)a2 + 1) = v33 - v35;
        }
        *((_DWORD *)a2 + 11) = v35;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    unsigned int v12 = (CoreML::Specification::SamplingMode *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    int v13 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
    {
      int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *(void *)a2 = v13 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    uint64_t result = CoreML::Specification::SamplingMode::MergePartialFromCodedStream(v12, (char **)a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1DC0FCAB8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CropResizeLayerParams *CoreML::Specification::CropResizeLayerParams::CropResizeLayerParams(CoreML::Specification::CropResizeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36203C8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 16) = 0;
  *((void *)this + 7) = 0;
  return this;
}

void sub_1DC0FCB50(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CropResizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::CropResizeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 8)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 10) {
              goto LABEL_34;
            }
            unsigned int v10 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v10;
              *(void *)a2 = v10 + 1;
            }
            int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v34 = *((_DWORD *)a2 + 10);
              uint64_t v35 = *((int *)a2 + 11);
              unint64_t v36 = *((void *)a2 + 1);
              int v37 = *((_DWORD *)a2 + 6);
              if (v34 == 0x7FFFFFFF) {
                break;
              }
              int v38 = *(char **)a2;
              if ((int)(v34 - v37 + v35 + v36 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v38 >= v36 || *v38 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v41 & 1) == 0) {
                  return 0;
                }
                unint64_t v39 = Varint64Fallback;
              }
              else
              {
                unint64_t v39 = *v38;
                *(void *)a2 = v38 + 1;
              }
              signed int v42 = *((_DWORD *)this + 4);
              if (v42 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v42 + 1);
                signed int v42 = *v5;
              }
              uint64_t v43 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v42 + 1;
              *(void *)(v43 + 8 * v42 + 8) = v39;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v33;
            uint64_t v44 = v36 + v35;
            *((void *)a2 + 1) = v36 + v35;
            int v45 = *((_DWORD *)a2 + 12);
            if (v45 >= v33) {
              int v45 = v33;
            }
            BOOL v27 = __OFSUB__(v37, v45);
            int v46 = v37 - v45;
            if ((v46 < 0) ^ v27 | (v46 == 0)) {
              int v46 = 0;
            }
            else {
              *((void *)a2 + 1) = v44 - v46;
            }
            *((_DWORD *)a2 + 11) = v46;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        case 2u:
          if (v8 != 16) {
            goto LABEL_34;
          }
          unsigned int v12 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
          {
            unint64_t v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v23 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((unsigned char *)this + 56) = v13 != 0;
          continue;
        case 3u:
          if (v8 != 26) {
            goto LABEL_34;
          }
          int v14 = (CoreML::Specification::SamplingMode *)*((void *)this + 5);
          if (!v14) {
            operator new();
          }
          BOOL v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0) {
              return 0;
            }
          }
          else
          {
            int v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          int v26 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
          if (v26 < 0 != v27) {
            return 0;
          }
          int v28 = v24;
          uint64_t result = CoreML::Specification::SamplingMode::MergePartialFromCodedStream(v14, (char **)a2, v25);
          if (!result) {
            return result;
          }
          goto LABEL_51;
        case 4u:
          if (v8 != 34) {
            goto LABEL_34;
          }
          unsigned int v17 = (CoreML::Specification::BoxCoordinatesMode *)*((void *)this + 6);
          if (!v17) {
            operator new();
          }
          int v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v19 < 0) {
              return 0;
            }
          }
          else
          {
            int v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
          int v32 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v32--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v32;
          if (v32 < 0 != v27) {
            return 0;
          }
          int v28 = v30;
          uint64_t result = CoreML::Specification::BoxCoordinatesMode::MergePartialFromCodedStream(v17, (char **)a2, v31);
          if (!result) {
            return result;
          }
LABEL_51:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
            return 0;
          }
          continue;
        case 5u:
          if (v8 != 45) {
            goto LABEL_34;
          }
          unsigned int v47 = 0;
          int v20 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v47);
            if (!result) {
              return result;
            }
            unsigned int v21 = v47;
          }
          else
          {
            unsigned int v21 = *v20;
            *(void *)a2 = v20 + 1;
          }
          *((_DWORD *)this + 15) = v21;
          continue;
        default:
          goto LABEL_34;
      }
    }
LABEL_34:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0FCF8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::UnaryFunctionLayerParams *CoreML::Specification::UnaryFunctionLayerParams::UnaryFunctionLayerParams(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  *(void *)this = &unk_1F36222A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::UnaryFunctionLayerParams *)&CoreML::Specification::_UnaryFunctionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0FD02C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::UnaryFunctionLayerParams::MergePartialFromCodedStream(CoreML::Specification::UnaryFunctionLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_28;
          }
          unint64_t v9 = *a2;
          if (*a2 >= a2[1])
          {
            int v10 = 0;
          }
          else
          {
            int v10 = *v9;
            if ((*v9 & 0x80000000) == 0)
            {
              *a2 = v9 + 1;
              goto LABEL_36;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v10);
          int v10 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_36:
          *((_DWORD *)this + 4) = v10;
          break;
        case 2u:
          if (v7 != 21) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          int v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v12 = v22;
          }
          else
          {
            unsigned int v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 29) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          unint64_t v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v14 = v22;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 6) = v14;
          continue;
        case 4u:
          if (v7 != 37) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          BOOL v15 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v16 = v22;
          }
          else
          {
            unsigned int v16 = *v15;
            *a2 = (char *)(v15 + 1);
          }
          *((_DWORD *)this + 7) = v16;
          continue;
        case 5u:
          if (v7 != 45) {
            goto LABEL_28;
          }
          unsigned int v22 = 0;
          unsigned int v17 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result) {
              return result;
            }
            unsigned int v18 = v22;
          }
          else
          {
            unsigned int v18 = *v17;
            *a2 = (char *)(v17 + 1);
          }
          *((_DWORD *)this + 8) = v18;
          continue;
        default:
          goto LABEL_28;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_28:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::AddLayerParams *CoreML::Specification::AddLayerParams::AddLayerParams(CoreML::Specification::AddLayerParams *this)
{
  *(void *)this = &unk_1F361BC88;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AddLayerParams *)&CoreML::Specification::_AddLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC0FD30C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::AddLayerParams::MergePartialFromCodedStream(CoreML::Specification::AddLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unsigned int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::MultiplyLayerParams *CoreML::Specification::MultiplyLayerParams::MultiplyLayerParams(CoreML::Specification::MultiplyLayerParams *this)
{
  *(void *)this = &unk_1F361F620;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MultiplyLayerParams *)&CoreML::Specification::_MultiplyLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC0FD47C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::MultiplyLayerParams::MergePartialFromCodedStream(CoreML::Specification::MultiplyLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unsigned int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::AverageLayerParams *CoreML::Specification::AverageLayerParams::AverageLayerParams(CoreML::Specification::AverageLayerParams *this)
{
  *(void *)this = &unk_1F361E7E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AverageLayerParams *)&CoreML::Specification::_AverageLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC0FD5EC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AverageLayerParams::MergePartialFromCodedStream(CoreML::Specification::AverageLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ScaleLayerParams *CoreML::Specification::ScaleLayerParams::ScaleLayerParams(CoreML::Specification::ScaleLayerParams *this)
{
  *(void *)this = &unk_1F361D908;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((unsigned char *)this + 8CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((_DWORD *)this + 21) = 0;
  return this;
}

void sub_1DC0FD6F4(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ScaleLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScaleLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  BOOL v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v8) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
        unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v9 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v8 = *v7;
      if (*v7 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v7 + 1;
      unint64_t v9 = v8 | 0x100000000;
      if ((v9 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 == 8)
          {
            unsigned int v27 = 10;
            int v28 = a2;
            uint64_t v29 = (uint64_t)v6;
            goto LABEL_45;
          }
          if (v9 != 10) {
            goto LABEL_32;
          }
          int v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v32 = *((_DWORD *)a2 + 10);
            uint64_t v33 = *((int *)a2 + 11);
            unint64_t v34 = *((void *)a2 + 1);
            int v35 = *((_DWORD *)a2 + 6);
            if (v32 == 0x7FFFFFFF) {
              break;
            }
            unint64_t v36 = *(char **)a2;
            if ((int)(v32 - v35 + v33 + v34 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v36 >= v34 || *v36 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v39 & 1) == 0) {
                return 0;
              }
              unint64_t v37 = Varint64Fallback;
            }
            else
            {
              unint64_t v37 = *v36;
              *(void *)a2 = v36 + 1;
            }
            signed int v40 = *((_DWORD *)this + 4);
            if (v40 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v6, v40 + 1);
              signed int v40 = *v6;
            }
            uint64_t v41 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v40 + 1;
            *(void *)(v41 + 8 * v40 + 8) = v37;
          }
          goto LABEL_73;
        case 2u:
          if (v9 != 18) {
            goto LABEL_32;
          }
          unsigned int v13 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
          if (!v13) {
            operator new();
          }
          goto LABEL_29;
        case 3u:
          if (v9 != 24) {
            goto LABEL_32;
          }
          unsigned int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t v15 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v15 = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 8CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v15 != 0;
          continue;
        case 4u:
          if (v9 == 32)
          {
            unsigned int v27 = 34;
            int v28 = a2;
            uint64_t v29 = (uint64_t)v5;
LABEL_45:
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v27, v28, v29) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v9 != 34) {
              goto LABEL_32;
            }
            unsigned int v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v17 < 0) {
                return 0;
              }
            }
            else
            {
              int v17 = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
            while (1)
            {
              int v42 = *((_DWORD *)a2 + 10);
              uint64_t v33 = *((int *)a2 + 11);
              unint64_t v34 = *((void *)a2 + 1);
              int v35 = *((_DWORD *)a2 + 6);
              if (v42 == 0x7FFFFFFF) {
                break;
              }
              uint64_t v43 = *(char **)a2;
              if ((int)(v42 - v35 + v33 + v34 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v43 >= v34 || *v43 < 0)
              {
                unint64_t v45 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v46 & 1) == 0) {
                  return 0;
                }
                unint64_t v44 = v45;
              }
              else
              {
                unint64_t v44 = *v43;
                *(void *)a2 = v43 + 1;
              }
              signed int v47 = *((_DWORD *)this + 10);
              if (v47 == *((_DWORD *)this + 11))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v47 + 1);
                signed int v47 = *v5;
              }
              uint64_t v48 = *((void *)this + 6);
              *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v47 + 1;
              *(void *)(v48 + 8 * v47 + 8) = v44;
            }
LABEL_73:
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v31;
            uint64_t v49 = v34 + v33;
            *((void *)a2 + 1) = v34 + v33;
            int v50 = *((_DWORD *)a2 + 12);
            if (v50 >= v31) {
              int v50 = v31;
            }
            BOOL v24 = __OFSUB__(v35, v50);
            int v51 = v35 - v50;
            if ((v51 < 0) ^ v24 | (v51 == 0)) {
              int v51 = 0;
            }
            else {
              *((void *)a2 + 1) = v49 - v51;
            }
            *((_DWORD *)a2 + 11) = v51;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        case 5u:
          if (v9 != 42) {
            goto LABEL_32;
          }
          unsigned int v13 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
          if (!v13) {
            operator new();
          }
LABEL_29:
          unsigned int v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v19 < 0) {
              return 0;
            }
          }
          else
          {
            int v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
          int v23 = *((_DWORD *)a2 + 13);
          BOOL v24 = __OFSUB__(v23--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v23;
          if (v23 < 0 != v24) {
            return 0;
          }
          int v25 = v21;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v13, a2, v22);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_32;
      }
    }
LABEL_32:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0FDB98(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BiasLayerParams *CoreML::Specification::BiasLayerParams::BiasLayerParams(CoreML::Specification::BiasLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361C570;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1DC0FDC44(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BiasLayerParams::MergePartialFromCodedStream(CoreML::Specification::BiasLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        BOOL v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v23 = *((_DWORD *)a2 + 10);
          uint64_t v24 = *((int *)a2 + 11);
          unint64_t v25 = *((void *)a2 + 1);
          int v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          unsigned int v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
            unint64_t v28 = Varint64Fallback;
          }
          else
          {
            unint64_t v28 = *v27;
            *(void *)a2 = v27 + 1;
          }
          signed int v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v32 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(void *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22;
        uint64_t v33 = v25 + v24;
        *((void *)a2 + 1) = v25 + v24;
        int v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22) {
          int v34 = v22;
        }
        BOOL v19 = __OFSUB__(v26, v34);
        int v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0)) {
          int v35 = 0;
        }
        else {
          *((void *)a2 + 1) = v33 - v35;
        }
        *((_DWORD *)a2 + 11) = v35;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    unsigned int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    unsigned int v13 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
    {
      int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *(void *)a2 = v13 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1DC0FDF28(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MaxLayerParams *CoreML::Specification::MaxLayerParams::MaxLayerParams(CoreML::Specification::MaxLayerParams *this)
{
  *(void *)this = &unk_1F361C0B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MaxLayerParams *)&CoreML::Specification::_MaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC0FDFAC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::MaxLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MinLayerParams *CoreML::Specification::MinLayerParams::MinLayerParams(CoreML::Specification::MinLayerParams *this)
{
  *(void *)this = &unk_1F361C148;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MinLayerParams *)&CoreML::Specification::_MinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC0FE09C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MinLayerParams::MergePartialFromCodedStream(CoreML::Specification::MinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::DotProductLayerParams *CoreML::Specification::DotProductLayerParams::DotProductLayerParams(CoreML::Specification::DotProductLayerParams *this)
{
  *(void *)this = &unk_1F36204F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DotProductLayerParams *)&CoreML::Specification::_DotProductLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1DC0FE190(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DotProductLayerParams::MergePartialFromCodedStream(CoreML::Specification::DotProductLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLayerParams *CoreML::Specification::ReduceLayerParams::ReduceLayerParams(CoreML::Specification::ReduceLayerParams *this)
{
  *(void *)this = &unk_1F361E3B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReduceLayerParams *)&CoreML::Specification::_ReduceLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0FE2FC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ReduceLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_25;
          }
          char v13 = *a2;
          if (*a2 >= a2[1])
          {
            int v14 = 0;
          }
          else
          {
            int v14 = *v13;
            if ((*v13 & 0x80000000) == 0)
            {
              *a2 = v13 + 1;
              goto LABEL_36;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v14);
          int v14 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_36:
          *((_DWORD *)this + 6) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        BOOL v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 5) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_33;
        }
      }
      uint64_t v18 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = v18;
      if (v18 < 0) {
        return 0;
      }
LABEL_33:
      *((_DWORD *)this + 4) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LoadConstantLayerParams *CoreML::Specification::LoadConstantLayerParams::LoadConstantLayerParams(CoreML::Specification::LoadConstantLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3621890;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1DC0FE528(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LoadConstantLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoadConstantLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v23 = *((_DWORD *)a2 + 10);
          uint64_t v24 = *((int *)a2 + 11);
          unint64_t v25 = *((void *)a2 + 1);
          int v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          unsigned int v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
            unint64_t v28 = Varint64Fallback;
          }
          else
          {
            unint64_t v28 = *v27;
            *(void *)a2 = v27 + 1;
          }
          signed int v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v32 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(void *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22;
        uint64_t v33 = v25 + v24;
        *((void *)a2 + 1) = v25 + v24;
        int v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22) {
          int v34 = v22;
        }
        BOOL v19 = __OFSUB__(v26, v34);
        int v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0)) {
          int v35 = 0;
        }
        else {
          *((void *)a2 + 1) = v33 - v35;
        }
        *((_DWORD *)a2 + 11) = v35;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    int v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    char v13 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
    {
      int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *(void *)a2 = v13 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1DC0FE80C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ReshapeLayerParams *CoreML::Specification::ReshapeLayerParams::ReshapeLayerParams(CoreML::Specification::ReshapeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361EE68;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReshapeLayerParams *)&CoreML::Specification::_ReshapeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC0FE89C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16) {
          break;
        }
        int v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *(void *)a2 = v12 + 1;
            goto LABEL_47;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_47:
        *((_DWORD *)this + 9) = v13;
      }
      else
      {
        if (v8 >> 3 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          int v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v16 = *((_DWORD *)a2 + 10);
            uint64_t v17 = *((int *)a2 + 11);
            unint64_t v18 = *((void *)a2 + 1);
            int v19 = *((_DWORD *)a2 + 6);
            if (v16 == 0x7FFFFFFF) {
              break;
            }
            int v20 = *(char **)a2;
            if ((int)(v16 - v19 + v17 + v18 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v20 >= v18 || *v20 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v23 & 1) == 0) {
                return 0;
              }
              unint64_t v21 = Varint64Fallback;
            }
            else
            {
              unint64_t v21 = *v20;
              *(void *)a2 = v20 + 1;
            }
            signed int v24 = *((_DWORD *)this + 4);
            if (v24 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v24 + 1);
              signed int v24 = *v5;
            }
            uint64_t v25 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v24 + 1;
            *(void *)(v25 + 8 * v24 + 8) = v21;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v15;
          uint64_t v26 = v18 + v17;
          *((void *)a2 + 1) = v18 + v17;
          int v27 = *((_DWORD *)a2 + 12);
          if (v27 >= v15) {
            int v27 = v15;
          }
          BOOL v28 = __OFSUB__(v19, v27);
          int v29 = v19 - v27;
          if ((v29 < 0) ^ v28 | (v29 == 0)) {
            int v29 = 0;
          }
          else {
            *((void *)a2 + 1) = v26 - v29;
          }
          *((_DWORD *)a2 + 11) = v29;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v14 = (v8 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FlattenLayerParams *CoreML::Specification::FlattenLayerParams::FlattenLayerParams(CoreML::Specification::FlattenLayerParams *this)
{
  *(void *)this = &unk_1F361EA40;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FlattenLayerParams *)&CoreML::Specification::_FlattenLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC0FEB80(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FlattenLayerParams::MergePartialFromCodedStream(CoreML::Specification::FlattenLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PermuteLayerParams *CoreML::Specification::PermuteLayerParams::PermuteLayerParams(CoreML::Specification::PermuteLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361EC08;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::PermuteLayerParams *)&CoreML::Specification::_PermuteLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0FECF8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PermuteLayerParams::MergePartialFromCodedStream(CoreML::Specification::PermuteLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          unint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConcatLayerParams *CoreML::Specification::ConcatLayerParams::ConcatLayerParams(CoreML::Specification::ConcatLayerParams *this)
{
  *(void *)this = &unk_1F361DEF8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ConcatLayerParams *)&CoreML::Specification::_ConcatLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1DC0FEF8C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConcatLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConcatLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 < v6) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_16:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_17;
      }
LABEL_8:
      if (v9 != 32 || (v9 & 0xFFFFFFF8) != 0x320) {
        goto LABEL_17;
      }
      int v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    uint64_t v7 = v5 + 1;
    uint64_t v8 = *v5;
    if ((char)*v5 < 1)
    {
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_8;
        }
      }
      goto LABEL_16;
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_17:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

CoreML::Specification::SplitLayerParams *CoreML::Specification::SplitLayerParams::SplitLayerParams(CoreML::Specification::SplitLayerParams *this)
{
  *(void *)this = &unk_1F361DA38;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SplitLayerParams *)&CoreML::Specification::_SplitLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC0FF138(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SplitLayerParams::MergePartialFromCodedStream(CoreML::Specification::SplitLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::SequenceRepeatLayerParams *CoreML::Specification::SequenceRepeatLayerParams::SequenceRepeatLayerParams(CoreML::Specification::SequenceRepeatLayerParams *this)
{
  *(void *)this = &unk_1F3622898;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SequenceRepeatLayerParams *)&CoreML::Specification::_SequenceRepeatLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC0FF2A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SequenceRepeatLayerParams::MergePartialFromCodedStream(CoreML::Specification::SequenceRepeatLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::ReorganizeDataLayerParams *CoreML::Specification::ReorganizeDataLayerParams::ReorganizeDataLayerParams(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  *(void *)this = &unk_1F36226D0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReorganizeDataLayerParams *)&CoreML::Specification::_ReorganizeDataLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0FF404(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReorganizeDataLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReorganizeDataLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        char v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v14 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 2) = *v12;
          *a2 = v12 + 1;
        }
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      int v10 = *a2;
      if (*a2 >= a2[1])
      {
        int v11 = 0;
      }
      else
      {
        int v11 = *v10;
        if ((*v10 & 0x80000000) == 0)
        {
          *a2 = v10 + 1;
          goto LABEL_30;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v11);
      int v11 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_30:
      *((_DWORD *)this + 6) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v13 = (v7 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SliceLayerParams *CoreML::Specification::SliceLayerParams::SliceLayerParams(CoreML::Specification::SliceLayerParams *this)
{
  *(void *)this = &unk_1F361D9A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SliceLayerParams *)&CoreML::Specification::_SliceLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1DC0FF5C4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
LABEL_1:
    uint64_t v5 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(v6) = 0;
      break;
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      break;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (v7) {
      BOOL v16 = (v7 & 7) == 4;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
  unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v7 & 0x100000000) == 0) {
    goto LABEL_24;
  }
LABEL_7:
  switch(v7 >> 3)
  {
    case 1u:
      if (v7 != 8) {
        goto LABEL_24;
      }
      unint64_t v9 = *a2;
      if (*a2 >= a2[1] || *v9 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v17 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v9;
        *a2 = v9 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
      goto LABEL_1;
    case 2u:
      if (v7 != 16) {
        goto LABEL_24;
      }
      int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v12;
      goto LABEL_1;
    case 3u:
      if (v7 != 24) {
        goto LABEL_24;
      }
      BOOL v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v19 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 4) = *v13;
        *a2 = v13 + 1;
      }
      goto LABEL_1;
    case 4u:
      if (v7 != 32) {
        goto LABEL_24;
      }
      char v14 = *a2;
      if (*a2 >= a2[1])
      {
        int v15 = 0;
      }
      else
      {
        int v15 = *v14;
        if ((*v14 & 0x80000000) == 0)
        {
          *a2 = v14 + 1;
          goto LABEL_38;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v15);
      int v15 = Varint32Fallback;
      if ((Varint32Fallback & 0x8000000000000000) == 0)
      {
LABEL_38:
        *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v15;
        goto LABEL_1;
      }
      return 0;
    default:
      goto LABEL_24;
  }
}

CoreML::Specification::SimpleRecurrentLayerParams *CoreML::Specification::SimpleRecurrentLayerParams::SimpleRecurrentLayerParams(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  *(void *)this = &unk_1F3622F20;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_DWORD *)((char *)this + 6google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 17) = 0;
  return this;
}

void sub_1DC0FF848(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::MergePartialFromCodedStream(CoreML::Specification::SimpleRecurrentLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            LODWORD(v8) = 0;
          }
          else
          {
            unint64_t v7 = v5 + 1;
            uint64_t v8 = *v5;
            if ((char)*v5 >= 1)
            {
              *(void *)a2 = v7;
              unint64_t v9 = v8 | 0x100000000;
              if ((v9 & 0x100000000) == 0) {
                goto LABEL_8;
              }
              goto LABEL_16;
            }
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_16;
              }
            }
          }
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
LABEL_16:
          unsigned int v13 = v9 >> 3;
          if (v9 >> 3 > 0x13) {
            break;
          }
          if (v9 >> 3 > 9)
          {
            if (v13 == 10)
            {
              if (v9 != 82) {
                goto LABEL_8;
              }
              int v25 = (CoreML::Specification::ActivationParams *)*((void *)this + 2);
              if (!v25) {
                operator new();
              }
              BOOL v26 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
              {
                int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                int VarintSizeAsIntFallback = *v26;
                *(void *)a2 = v26 + 1;
              }
              int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              int v41 = *((_DWORD *)a2 + 13);
              BOOL v31 = __OFSUB__(v41--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v41;
              if (v41 < 0 != v31) {
                return 0;
              }
              int v32 = v39;
              uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v25, a2, v40);
              if (!result) {
                return result;
              }
LABEL_87:
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v32)) {
                return 0;
              }
            }
            else
            {
              if (v13 != 15 || v9 != 120) {
                goto LABEL_8;
              }
              char v19 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v36 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                unint64_t Varint64Fallback = *v19;
                *(void *)a2 = v19 + 1;
              }
              *((unsigned char *)this + 64) = Varint64Fallback != 0;
            }
          }
          else if (v13 == 1)
          {
            if (v9 != 8) {
              goto LABEL_8;
            }
            char v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              *((void *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v37 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 6) = *v17;
LABEL_59:
              *(void *)a2 = v17 + 1;
            }
          }
          else
          {
            if (v13 != 2 || v9 != 16) {
              goto LABEL_8;
            }
            char v17 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v17 & 0x80000000) == 0)
            {
              *((void *)this + 7) = *v17;
              goto LABEL_59;
            }
            *((void *)this + 7) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v35 & 1) == 0) {
              return 0;
            }
          }
        }
        if (v9 >> 3 > 0x1E) {
          break;
        }
        if (v13 != 20)
        {
          if (v13 != 30 || v9 != 242) {
            goto LABEL_8;
          }
          char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v18) {
            operator new();
          }
          goto LABEL_52;
        }
        if (v9 != 160) {
          goto LABEL_8;
        }
        uint64_t v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
        {
          unint64_t v24 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v38 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        *((unsigned char *)this + 65) = v24 != 0;
      }
      if (v13 == 31) {
        break;
      }
      if (v13 == 32)
      {
        if (v9 == 2)
        {
          char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
          if (!v18) {
            operator new();
          }
LABEL_52:
          char v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v22 < 0) {
              return 0;
            }
          }
          else
          {
            int v22 = *v21;
            *(void *)a2 = v21 + 1;
          }
          int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
          int v30 = *((_DWORD *)a2 + 13);
          BOOL v31 = __OFSUB__(v30--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v30;
          if (v30 < 0 != v31) {
            return 0;
          }
          int v32 = v28;
          uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v18, a2, v29);
          if (!result) {
            return result;
          }
          goto LABEL_87;
        }
        goto LABEL_8;
      }
      if (v13 != 100 || v9 != 32) {
        goto LABEL_8;
      }
      char v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        unint64_t v15 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v34 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v15 = *v14;
        *(void *)a2 = v14 + 1;
      }
      *((unsigned char *)this + 66) = v15 != 0;
    }
    if (v9 == 250)
    {
      char v18 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
      if (!v18) {
        operator new();
      }
      goto LABEL_52;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0FFCCC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::GRULayerParams *CoreML::Specification::GRULayerParams::GRULayerParams(CoreML::Specification::GRULayerParams *this)
{
  *(void *)this = &unk_1F361BEE8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 115) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC0FFD9C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GRULayerParams::MergePartialFromCodedStream(CoreML::Specification::GRULayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::GRULayerParams *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v6 = *(unsigned __int8 **)a2;
        unint64_t v7 = *((void *)a2 + 1);
        if (*(void *)a2 >= v7)
        {
          LODWORD(v9) = 0;
        }
        else
        {
          uint64_t v8 = v6 + 1;
          uint64_t v9 = *v6;
          if ((char)*v6 >= 1)
          {
            *(void *)a2 = v8;
            unint64_t v10 = v9 | 0x100000000;
            if ((v10 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          if ((unint64_t)v8 < v7)
          {
            int v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(void *)a2 = v6 + 2;
              unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
        unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_9;
        }
LABEL_17:
        unsigned int v14 = v10 >> 3;
        if (v10 >> 3 > 0x1F) {
          break;
        }
        if (v10 >> 3 <= 0xE)
        {
          if (v14 == 1)
          {
            if (v10 != 8) {
              goto LABEL_9;
            }
            int v25 = *(char **)a2;
            if (*(void *)a2 < *((void *)a2 + 1) && (*v25 & 0x80000000) == 0)
            {
              *((void *)this + 14) = *v25;
              goto LABEL_79;
            }
            *((void *)this + 14) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v40 & 1) == 0) {
              return 0;
            }
          }
          else if (v14 == 2)
          {
            if (v10 != 16) {
              goto LABEL_9;
            }
            int v25 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
            {
              *((void *)this + 15) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v41 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              *((void *)this + 15) = *v25;
LABEL_79:
              *(void *)a2 = v25 + 1;
            }
          }
          else
          {
            if (v14 != 10 || v10 != 82) {
              goto LABEL_9;
            }
            char v18 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v5);
            char v19 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v19;
              *(void *)a2 = v19 + 1;
            }
            int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v37 = *((_DWORD *)a2 + 13);
            BOOL v31 = __OFSUB__(v37--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v37;
            if (v37 < 0 != v31) {
              return 0;
            }
            int v32 = v35;
            uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream((CoreML::Specification::ActivationParams *)v18, a2, v36);
            if (!result) {
              return result;
            }
LABEL_95:
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v32)) {
              return 0;
            }
          }
        }
        else
        {
          if (v10 >> 3 > 0x1D)
          {
            if (v14 == 30)
            {
              if (v10 == 242)
              {
                unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
                if (!v15) {
                  operator new();
                }
                goto LABEL_89;
              }
            }
            else if (v14 == 31 && v10 == 250)
            {
              unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
              if (!v15) {
                operator new();
              }
              goto LABEL_89;
            }
            goto LABEL_9;
          }
          if (v14 == 15)
          {
            if (v10 != 120) {
              goto LABEL_9;
            }
            uint64_t v23 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v39 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v23;
              *(void *)a2 = v23 + 1;
            }
            *((unsigned char *)this + 128) = Varint64Fallback != 0;
          }
          else
          {
            if (v14 != 20 || v10 != 160) {
              goto LABEL_9;
            }
            BOOL v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              unint64_t v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v34 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t v17 = *v16;
              *(void *)a2 = v16 + 1;
            }
            *((unsigned char *)this + 129) = v17 != 0;
          }
        }
      }
      if (v10 >> 3 <= 0x45) {
        break;
      }
      if (v10 >> 3 <= 0x47)
      {
        if (v14 == 70)
        {
          if (v10 == 50)
          {
            unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
            if (!v15) {
              operator new();
            }
            goto LABEL_89;
          }
        }
        else if (v10 == 58)
        {
          unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
        goto LABEL_9;
      }
      if (v14 == 72)
      {
        if (v10 == 66)
        {
          unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
        goto LABEL_9;
      }
      if (v14 != 100 || v10 != 32) {
        goto LABEL_9;
      }
      char v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        unint64_t v22 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v38 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      *((unsigned char *)this + 13CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22 != 0;
    }
    if (v10 >> 3 > 0x32)
    {
      if (v14 == 51)
      {
        if (v10 == 154)
        {
          unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 9);
          if (!v15) {
            operator new();
          }
          goto LABEL_89;
        }
      }
      else if (v14 == 52 && v10 == 162)
      {
        unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
        if (!v15) {
          operator new();
        }
        goto LABEL_89;
      }
    }
    else if (v14 == 32)
    {
      if (v10 == 2)
      {
        unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 7);
        if (!v15) {
          operator new();
        }
        goto LABEL_89;
      }
    }
    else if (v14 == 50 && v10 == 146)
    {
      unint64_t v15 = (CoreML::Specification::WeightParams *)*((void *)this + 8);
      if (!v15) {
        operator new();
      }
LABEL_89:
      BOOL v26 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
      {
        int v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v27 < 0) {
          return 0;
        }
      }
      else
      {
        int v27 = *v26;
        *(void *)a2 = v26 + 1;
      }
      int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
      int v30 = *((_DWORD *)a2 + 13);
      BOOL v31 = __OFSUB__(v30--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v30;
      if (v30 < 0 != v31) {
        return 0;
      }
      int v32 = v28;
      uint64_t result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v15, a2, v29);
      if (!result) {
        return result;
      }
      goto LABEL_95;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC1003C4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::UniDirectionalLSTMLayerParams *CoreML::Specification::UniDirectionalLSTMLayerParams::UniDirectionalLSTMLayerParams(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  *(void *)this = &unk_1F3623C30;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 72) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *((_DWORD *)this + 19) = 0;
  return this;
}

void sub_1DC10048C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::MergePartialFromCodedStream(CoreML::Specification::UniDirectionalLSTMLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::UniDirectionalLSTMLayerParams *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v6 = *(unsigned __int8 **)a2;
          unint64_t v7 = *((void *)a2 + 1);
          if (*(void *)a2 >= v7)
          {
            LODWORD(v9) = 0;
          }
          else
          {
            uint64_t v8 = v6 + 1;
            uint64_t v9 = *v6;
            if ((char)*v6 >= 1)
            {
              *(void *)a2 = v8;
              unint64_t v10 = v9 | 0x100000000;
              if ((v10 & 0x100000000) == 0) {
                goto LABEL_9;
              }
              goto LABEL_17;
            }
            if ((unint64_t)v8 < v7)
            {
              int v11 = *v8;
              if ((v9 & ~v11) >= 0x80)
              {
                *(void *)a2 = v6 + 2;
                unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
                goto LABEL_17;
              }
            }
          }
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
          unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v10 & 0x100000000) == 0) {
            goto LABEL_9;
          }
LABEL_17:
          unsigned int v14 = v10 >> 3;
          if (v10 >> 3 <= 0xE) {
            break;
          }
          if (v14 == 15)
          {
            if (v10 != 122) {
              goto LABEL_9;
            }
            char v21 = (CoreML::Specification::LSTMParams *)*((void *)this + 5);
            if (!v21) {
              operator new();
            }
            unint64_t v22 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v22;
              *(void *)a2 = v22 + 1;
            }
            int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v38 = *((_DWORD *)a2 + 13);
            BOOL v30 = __OFSUB__(v38--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v38;
            if (v38 < 0 != v30) {
              return 0;
            }
            int v31 = v36;
            uint64_t result = CoreML::Specification::LSTMParams::MergePartialFromCodedStream(v21, a2, v37);
            if (!result) {
              return result;
            }
            goto LABEL_70;
          }
          if (v14 == 20)
          {
            if (v10 != 162) {
              goto LABEL_9;
            }
            unint64_t v24 = (CoreML::Specification::LSTMWeightParams *)*((void *)this + 6);
            if (!v24) {
              operator new();
            }
            int v25 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
            {
              int v26 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v26 < 0) {
                return 0;
              }
            }
            else
            {
              int v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            int v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, v26);
            int v41 = *((_DWORD *)a2 + 13);
            BOOL v30 = __OFSUB__(v41--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v41;
            if (v41 < 0 != v30) {
              return 0;
            }
            int v31 = v39;
            uint64_t result = CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(v24, a2, v40);
            if (!result) {
              return result;
            }
LABEL_70:
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v31)) {
              return 0;
            }
          }
          else
          {
            if (v14 != 100 || v10 != 32) {
              goto LABEL_9;
            }
            char v18 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v33 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v18;
              *(void *)a2 = v18 + 1;
            }
            *((unsigned char *)this + 72) = Varint64Fallback != 0;
          }
        }
        if (v14 != 1) {
          break;
        }
        if (v10 != 8) {
          goto LABEL_9;
        }
        int v20 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && (*v20 & 0x80000000) == 0)
        {
          *((void *)this + 7) = *v20;
          goto LABEL_40;
        }
        *((void *)this + 7) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v34 & 1) == 0) {
          return 0;
        }
      }
      if (v14 != 2) {
        break;
      }
      if (v10 != 16) {
        goto LABEL_9;
      }
      int v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        *((void *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v35 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 8) = *v20;
LABEL_40:
        *(void *)a2 = v20 + 1;
      }
    }
    if (v14 == 10 && v10 == 82)
    {
      unint64_t v15 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v5);
      BOOL v16 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
      {
        int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v17 < 0) {
          return 0;
        }
      }
      else
      {
        int v17 = *v16;
        *(void *)a2 = v16 + 1;
      }
      int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
      int v29 = *((_DWORD *)a2 + 13);
      BOOL v30 = __OFSUB__(v29--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
      if (v29 < 0 != v30) {
        return 0;
      }
      int v31 = v27;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream((CoreML::Specification::ActivationParams *)v15, a2, v28);
      if (!result) {
        return result;
      }
      goto LABEL_70;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC100868(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BiDirectionalLSTMLayerParams *CoreML::Specification::BiDirectionalLSTMLayerParams::BiDirectionalLSTMLayerParams(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  *(void *)this = &unk_1F36236D8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 28) = 0;
  *((void *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC100940(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::MergePartialFromCodedStream(CoreML::Specification::BiDirectionalLSTMLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (google::protobuf::Arena **)((char *)this + 64);
  unint64_t v6 = (CoreML::Specification::BiDirectionalLSTMLayerParams *)((char *)this + 40);
  unint64_t v7 = (CoreML::Specification::BiDirectionalLSTMLayerParams *)((char *)this + 16);
  uint64_t v8 = (unint64_t *)((char *)this + 104);
  uint64_t v9 = (unint64_t *)((char *)this + 96);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v10 = *(unsigned __int8 **)a2;
        unint64_t v11 = *((void *)a2 + 1);
        if (*(void *)a2 >= v11)
        {
          LODWORD(v1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
        }
        else
        {
          unint64_t v12 = v10 + 1;
          uint64_t v13 = *v10;
          if ((char)*v10 >= 1)
          {
            *(void *)a2 = v12;
            unint64_t v14 = v13 | 0x100000000;
            if ((v14 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          if ((unint64_t)v12 < v11)
          {
            int v15 = *v12;
            if ((v13 & ~v15) >= 0x80)
            {
              *(void *)a2 = v10 + 2;
              unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
        unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v14 & 0x100000000) == 0) {
          goto LABEL_9;
        }
LABEL_17:
        unsigned int v18 = v14 >> 3;
        if (v14 >> 3 > 0xA) {
          break;
        }
        if (v18 == 1)
        {
          if (v14 != 8) {
            goto LABEL_9;
          }
          unint64_t v24 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v24 & 0x80000000) == 0)
          {
            unint64_t v25 = *v24;
            int v26 = v9;
            goto LABEL_38;
          }
          *uint64_t v9 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v39 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          if (v18 != 2)
          {
            if (v18 == 10 && v14 == 82)
            {
              char v19 = v7;
              goto LABEL_41;
            }
            goto LABEL_9;
          }
          if (v14 != 16) {
            goto LABEL_9;
          }
          unint64_t v24 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
          {
            *uint64_t v8 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v40 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v25 = *v24;
            int v26 = v8;
LABEL_38:
            *int v26 = v25;
            *(void *)a2 = v24 + 1;
          }
        }
      }
      if (v18 == 11) {
        break;
      }
      if (v18 != 15)
      {
        if (v18 != 20 || v14 != 162) {
          goto LABEL_9;
        }
        int v20 = (int *)*((void *)this + 10);
        if (v20)
        {
          int v21 = *((_DWORD *)this + 18);
          int v22 = *v20;
          if (v21 < *v20)
          {
            *((_DWORD *)this + 18) = v21 + 1;
            Aligned = *(google::protobuf::Arena ***)&v20[2 * v21 + 2];
LABEL_72:
            int v50 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v50 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v50;
              *(void *)a2 = v50 + 1;
            }
            int v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v54 = *((_DWORD *)a2 + 13);
            BOOL v36 = __OFSUB__(v54--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v54;
            if (v54 < 0 != v36) {
              return 0;
            }
            int v37 = v52;
            uint64_t result = CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream((CoreML::Specification::LSTMWeightParams *)Aligned, a2, v53);
            if (!result) {
              return result;
            }
            goto LABEL_78;
          }
          if (v22 != *((_DWORD *)this + 19))
          {
LABEL_67:
            int *v20 = v22 + 1;
            unint64_t v44 = *v5;
            if (!*v5) {
              operator new();
            }
            CoreML::Specification::LSTMWeightParams::LSTMWeightParams((CoreML::Specification::LSTMWeightParams *)Aligned);
            unint64_t v45 = google::protobuf::Arena::AllocateAligned(v44, 0, 24);
            *unint64_t v45 = (google::protobuf::Arena *)Aligned;
            v45[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LSTMWeightParams>;
            char v46 = (unint64_t *)((char *)v44 + 32);
            do
              unint64_t v47 = __ldxr(v46);
            while (__stxr((unint64_t)v45, v46));
            v45[2] = (google::protobuf::Arena *)v47;
            uint64_t v48 = *((void *)this + 10);
            uint64_t v49 = *((int *)this + 18);
            *((_DWORD *)this + 18) = v49 + 1;
            *(void *)(v48 + 8 * v49 + 8) = Aligned;
            goto LABEL_72;
          }
        }
        else
        {
          int v21 = *((_DWORD *)this + 18);
          int v22 = *((_DWORD *)this + 19);
        }
        if (v21 <= v22)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v5, v22 - v21 + 1);
          int v20 = (int *)*((void *)this + 10);
        }
        int v22 = *v20;
        goto LABEL_67;
      }
      if (v14 != 122) {
        goto LABEL_9;
      }
      BOOL v30 = (CoreML::Specification::LSTMParams *)*((void *)this + 11);
      if (!v30) {
        operator new();
      }
      int v31 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
      {
        int v32 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v32 < 0) {
          return 0;
        }
      }
      else
      {
        int v32 = *v31;
        *(void *)a2 = v31 + 1;
      }
      int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
      int v43 = *((_DWORD *)a2 + 13);
      BOOL v36 = __OFSUB__(v43--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v43;
      if (v43 < 0 != v36) {
        return 0;
      }
      int v37 = v41;
      uint64_t result = CoreML::Specification::LSTMParams::MergePartialFromCodedStream(v30, a2, v42);
      if (!result) {
        return result;
      }
LABEL_78:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v37)) {
        return 0;
      }
    }
    if (v14 == 90)
    {
      char v19 = v6;
LABEL_41:
      int v27 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v19);
      unsigned int v28 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v28 < 0)
      {
        int v29 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v29 < 0) {
          return 0;
        }
      }
      else
      {
        int v29 = *v28;
        *(void *)a2 = v28 + 1;
      }
      int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29);
      int v35 = *((_DWORD *)a2 + 13);
      BOOL v36 = __OFSUB__(v35--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v35;
      if (v35 < 0 != v36) {
        return 0;
      }
      int v37 = v33;
      uint64_t result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream((CoreML::Specification::ActivationParams *)v27, a2, v34);
      if (!result) {
        return result;
      }
      goto LABEL_78;
    }
LABEL_9:
    if (!v14 || (v14 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC100DF8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CustomLayerParams::MergePartialFromCodedStream(CoreML::Specification::CustomLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 80);
  unint64_t v6 = (void *)((char *)this + 48);
  unsigned int v61 = (CoreML::Specification::CustomLayerParams *)((char *)this + 16);
  int v62 = (google::protobuf::Arena **)((char *)this + 40);
  unint64_t v7 = (std::string **)((char *)this + 72);
  while (1)
  {
    while (1)
    {
      uint64_t v8 = *(unsigned __int8 **)a2;
      unint64_t v9 = *((void *)a2 + 1);
      if (*(void *)a2 >= v9)
      {
        LODWORD(v11) = 0;
LABEL_110:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
        unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v12 & 0x100000000) == 0) {
          goto LABEL_111;
        }
        goto LABEL_9;
      }
      unint64_t v10 = v8 + 1;
      uint64_t v11 = *v8;
      if ((char)*v8 >= 1) {
        break;
      }
      if ((unint64_t)v10 >= v9) {
        goto LABEL_110;
      }
      int v13 = *v10;
      if ((v11 & ~v13) < 0x80) {
        goto LABEL_110;
      }
      *(void *)a2 = v8 + 2;
      unint64_t v12 = (v11 + (v13 << 7) - 128) | 0x100000000;
LABEL_9:
      unsigned int v14 = v12 >> 3;
      if (v12 >> 3 > 0x1D)
      {
        if (v14 != 30)
        {
          if (v14 != 40 || v12 != 66) {
            goto LABEL_111;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5)) {
            return 0;
          }
          char v19 = *v5;
          if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
          {
            char v19 = (std::string *)v19->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
          }
          int v38 = "CoreML.Specification.CustomLayerParams.description";
          goto LABEL_64;
        }
        if (v12 != 242) {
          goto LABEL_111;
        }
        uint64_t v63 = v62;
        unsigned int v64 = v6;
        memset(&__p, 0, sizeof(__p));
        int v67 = 0;
        int v21 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_108;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v21;
          *(void *)a2 = v21 + 1;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
        if (v24 < 0 != v25) {
          goto LABEL_108;
        }
        int v26 = v23;
        int v27 = *(unsigned char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v27 == 10)
        {
          *(void *)a2 = v27 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p)) {
            goto LABEL_108;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 18)
          {
            uint64_t v28 = *(void *)v64[2];
            unint64_t v66 = google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[]((uint64_t)v64, (uint64_t)&__p);
            if (v28 != *(void *)v64[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              int v29 = (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)v66;
              BOOL v30 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v30 < 0)
              {
                int v31 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if ((v31 & 0x80000000) == 0) {
                  goto LABEL_84;
                }
              }
              else
              {
                int v31 = *v30;
                *(void *)a2 = v30 + 1;
LABEL_84:
                int v51 = google::protobuf::io::CodedInputStream::PushLimit(a2, v31);
                int v53 = *((_DWORD *)a2 + 13);
                BOOL v25 = __OFSUB__(v53--, 1);
                *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v53;
                if (v53 < 0 == v25)
                {
                  int v54 = v51;
                  if (CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream(v29, a2, v52)&& google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v54))
                  {
                    if (*(void *)a2 == *((void *)a2 + 1)
                      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      *((unsigned char *)a2 + 36) = 1;
                      goto LABEL_90;
                    }
                    int BeyondKeyValuePair = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::ReadBeyondKeyValuePair((uint64_t)&v63, (uint64_t)a2);
LABEL_89:
                    if (BeyondKeyValuePair)
                    {
LABEL_90:
                      if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26))
                      {
                        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          p_p = (unsigned int *)&__p;
                        }
                        else {
                          p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                        }
                        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          int v56 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                        }
                        else {
                          int v56 = __p.__r_.__value_.__r.__words[1];
                        }
                        BOOL v57 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v56, 0, (uint64_t)"CoreML.Specification.CustomLayerParams.ParametersEntry.key");
                        BOOL v36 = v57;
                        if (v57) {
                          int v37 = 0;
                        }
                        else {
                          int v37 = 6;
                        }
LABEL_100:
                        if (v67) {
                          (*((void (**)(google::protobuf::Arena **))*v67 + 1))(v67);
                        }
                        goto LABEL_102;
                      }
                    }
LABEL_108:
                    BOOL v36 = 0;
                    int v37 = 6;
                    goto LABEL_100;
                  }
                }
              }
              google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(v64, (unsigned __int8 *)&__p);
              goto LABEL_108;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        int v32 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*v63);
        if (v67 != v32)
        {
          if (v67) {
            (*((void (**)(void))*v67 + 1))();
          }
          int v67 = v32;
        }
        int v33 = (std::string *)v32[2];
        *((_DWORD *)v32 + 10) |= 1u;
        if (v33 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=(v33, &__p);
        int BeyondKeyValuePair = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v67
                              + 11))(v67, a2);
        if (BeyondKeyValuePair) {
          v35.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::UseKeyAndValueFromEntry((uint64_t)&v63);
        }
        if (!(*((uint64_t (**)(google::protobuf::Arena **, __n128))*v67 + 5))(v67, v35)) {
          goto LABEL_89;
        }
        int v67 = 0;
        if (BeyondKeyValuePair) {
          goto LABEL_90;
        }
        BOOL v36 = 0;
        int v37 = 6;
LABEL_102:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (!v36 && v37) {
          return 0;
        }
      }
      else if (v14 == 10)
      {
        if (v12 != 82) {
          goto LABEL_111;
        }
        if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7)) {
          return 0;
        }
        char v19 = *v7;
        if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
        {
          char v19 = (std::string *)v19->__r_.__value_.__r.__words[0];
          std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
        }
        int v38 = "CoreML.Specification.CustomLayerParams.className";
LABEL_64:
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v19, size, 0, (uint64_t)v38)) {
          return 0;
        }
      }
      else
      {
        if (v14 != 20 || v12 != 162) {
          goto LABEL_111;
        }
        int v15 = (int *)*((void *)this + 4);
        if (!v15)
        {
          int v16 = *((_DWORD *)this + 6);
          int v17 = *((_DWORD *)this + 7);
          goto LABEL_67;
        }
        int v16 = *((_DWORD *)this + 6);
        int v17 = *v15;
        if (v16 >= *v15)
        {
          if (v17 == *((_DWORD *)this + 7))
          {
LABEL_67:
            if (v16 <= v17)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v61, v17 - v16 + 1);
              int v15 = (int *)*((void *)this + 4);
            }
            int v17 = *v15;
          }
          int *v15 = v17 + 1;
          char v39 = *(google::protobuf::Arena **)v61;
          if (!*(void *)v61) {
            operator new();
          }
          CoreML::Specification::WeightParams::WeightParams((CoreML::Specification::WeightParams *)Aligned);
          char v40 = google::protobuf::Arena::AllocateAligned(v39, 0, 24);
          char *v40 = (google::protobuf::Arena *)Aligned;
          v40[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::WeightParams>;
          int v41 = (unint64_t *)((char *)v39 + 32);
          do
            unint64_t v42 = __ldxr(v41);
          while (__stxr((unint64_t)v40, v41));
          v40[2] = (google::protobuf::Arena *)v42;
          uint64_t v43 = *((void *)this + 4);
          uint64_t v44 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v44 + 1;
          *(void *)(v43 + 8 * v44 + 8) = Aligned;
          goto LABEL_75;
        }
        *((_DWORD *)this + 6) = v16 + 1;
        Aligned = *(google::protobuf::Arena ***)&v15[2 * v16 + 2];
LABEL_75:
        unint64_t v45 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
        {
          int v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v46 < 0) {
            return 0;
          }
        }
        else
        {
          int v46 = *v45;
          *(void *)a2 = v45 + 1;
        }
        int v47 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        int v49 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v49--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v49;
        if (v49 < 0 != v25) {
          return 0;
        }
        int v50 = v47;
        if (!CoreML::Specification::WeightParams::MergePartialFromCodedStream((CoreML::Specification::WeightParams *)Aligned, a2, v48)|| !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v50))
        {
          return 0;
        }
      }
    }
    *(void *)a2 = v10;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_111:
    if (!v12 || (v12 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
  }
    }
}

void sub_1DC101554(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CopyLayerParams *CoreML::Specification::CopyLayerParams::CopyLayerParams(CoreML::Specification::CopyLayerParams *this)
{
  *(void *)this = &unk_1F361C738;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CopyLayerParams *)&CoreML::Specification::_CopyLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1015E8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CopyLayerParams::MergePartialFromCodedStream(CoreML::Specification::CopyLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::BranchLayerParams *CoreML::Specification::BranchLayerParams::BranchLayerParams(CoreML::Specification::BranchLayerParams *this)
{
  *(void *)this = &unk_1F361DE60;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC1016DC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BranchLayerParams::MergePartialFromCodedStream(CoreML::Specification::BranchLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      unint64_t v10 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      uint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v16 = *((_DWORD *)a2 + 13);
      BOOL v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v16;
      if (v16 < 0 == v17)
      {
        int v18 = v14;
        uint64_t result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v10, a2, v15);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18)) {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      unint64_t v10 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC101890(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

CoreML::Specification::LoopLayerParams *CoreML::Specification::LoopLayerParams::LoopLayerParams(CoreML::Specification::LoopLayerParams *this)
{
  *(void *)this = &unk_1F361CB60;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1DC101928(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v7) = 0;
LABEL_7:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
      unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_28;
          }
          unint64_t v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v23 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v10;
            *(void *)a2 = v10 + 1;
          }
          break;
        case 2u:
          if (v8 != 18) {
            goto LABEL_28;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
          if (!result) {
            return result;
          }
          unint64_t v12 = (unsigned int *)*v5;
          if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
          {
            unint64_t v12 = *(unsigned int **)v12;
            std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
          }
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.LoopLayerParams.conditionVar"))return 0; {
          continue;
          }
        case 3u:
          if (v8 != 26) {
            goto LABEL_28;
          }
          int v14 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 3);
          if (!v14) {
            operator new();
          }
          goto LABEL_25;
        case 4u:
          if (v8 != 34) {
            goto LABEL_28;
          }
          int v14 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 4);
          if (!v14) {
            operator new();
          }
LABEL_25:
          unsigned int v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v15;
            *(void *)a2 = v15 + 1;
          }
          int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v20 = *((_DWORD *)a2 + 13);
          BOOL v21 = __OFSUB__(v20--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v20;
          if (v20 < 0 != v21) {
            return 0;
          }
          int v22 = v18;
          uint64_t result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v14, a2, v19);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_28;
      }
    }
    uint64_t v7 = *v6;
    if (*v6 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v6 + 1;
    unint64_t v8 = v7 | 0x100000000;
    if ((v8 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_28:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC101BC8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

CoreML::Specification::LoopBreakLayerParams *CoreML::Specification::LoopBreakLayerParams::LoopBreakLayerParams(CoreML::Specification::LoopBreakLayerParams *this)
{
  *(void *)this = &unk_1F361FCA8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopBreakLayerParams *)&CoreML::Specification::_LoopBreakLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC101C60(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopBreakLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopBreakLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LoopContinueLayerParams *CoreML::Specification::LoopContinueLayerParams::LoopContinueLayerParams(CoreML::Specification::LoopContinueLayerParams *this)
{
  *(void *)this = &unk_1F3621928;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopContinueLayerParams *)&CoreML::Specification::_LoopContinueLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC101D50(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopContinueLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopContinueLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RangeStaticLayerParams *CoreML::Specification::RangeStaticLayerParams::RangeStaticLayerParams(CoreML::Specification::RangeStaticLayerParams *this)
{
  *(void *)this = &unk_1F3621208;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RangeStaticLayerParams *)&CoreML::Specification::_RangeStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC101E40(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RangeStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RangeStaticLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v19 = 0;
          int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v19);
            if (!result) {
              return result;
            }
            unsigned int v14 = v19;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 6) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v20 = 0;
        unsigned int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
          if (!result) {
            return result;
          }
          unsigned int v16 = v20;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 5) = v16;
      }
      if (v9 != 1 || v7 != 13) {
        break;
      }
      unsigned int v21 = 0;
      uint64_t v11 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
        if (!result) {
          return result;
        }
        unsigned int v12 = v21;
      }
      else
      {
        unsigned int v12 = *v11;
        *a2 = (char *)(v11 + 1);
      }
      *((_DWORD *)this + 4) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    BOOL result = v17;
    if (v17) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RangeDynamicLayerParams *CoreML::Specification::RangeDynamicLayerParams::RangeDynamicLayerParams(CoreML::Specification::RangeDynamicLayerParams *this)
{
  *(void *)this = &unk_1F3621AF0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RangeDynamicLayerParams *)&CoreML::Specification::_RangeDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC10205C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RangeDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RangeDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 3) {
          break;
        }
        if (v7 != 29) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unsigned int v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 2 || v7 != 21) {
        break;
      }
      unsigned int v17 = 0;
      unint64_t v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ClipLayerParams *CoreML::Specification::ClipLayerParams::ClipLayerParams(CoreML::Specification::ClipLayerParams *this)
{
  *(void *)this = &unk_1F361C6A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ClipLayerParams *)&CoreML::Specification::_ClipLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC102224(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ClipLayerParams::MergePartialFromCodedStream(CoreML::Specification::ClipLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unsigned int v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        break;
      }
      unsigned int v17 = 0;
      unint64_t v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::CeilLayerParams *CoreML::Specification::CeilLayerParams::CeilLayerParams(CoreML::Specification::CeilLayerParams *this)
{
  *(void *)this = &unk_1F361C608;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CeilLayerParams *)&CoreML::Specification::_CeilLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1023E8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CeilLayerParams::MergePartialFromCodedStream(CoreML::Specification::CeilLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::FloorLayerParams *CoreML::Specification::FloorLayerParams::FloorLayerParams(CoreML::Specification::FloorLayerParams *this)
{
  *(void *)this = &unk_1F361D448;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FloorLayerParams *)&CoreML::Specification::_FloorLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1024D8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FloorLayerParams::MergePartialFromCodedStream(CoreML::Specification::FloorLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SignLayerParams *CoreML::Specification::SignLayerParams::SignLayerParams(CoreML::Specification::SignLayerParams *this)
{
  *(void *)this = &unk_1F361CC90;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SignLayerParams *)&CoreML::Specification::_SignLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1025C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SignLayerParams::MergePartialFromCodedStream(CoreML::Specification::SignLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RoundLayerParams *CoreML::Specification::RoundLayerParams::RoundLayerParams(CoreML::Specification::RoundLayerParams *this)
{
  *(void *)this = &unk_1F361D870;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RoundLayerParams *)&CoreML::Specification::_RoundLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1026B8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::RoundLayerParams::MergePartialFromCodedStream(CoreML::Specification::RoundLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::Exp2LayerParams *CoreML::Specification::Exp2LayerParams::Exp2LayerParams(CoreML::Specification::Exp2LayerParams *this)
{
  *(void *)this = &unk_1F361C998;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Exp2LayerParams *)&CoreML::Specification::_Exp2LayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1027A8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Exp2LayerParams::MergePartialFromCodedStream(CoreML::Specification::Exp2LayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SinLayerParams *CoreML::Specification::SinLayerParams::SinLayerParams(CoreML::Specification::SinLayerParams *this)
{
  *(void *)this = &unk_1F361C1E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SinLayerParams *)&CoreML::Specification::_SinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC102898(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SinLayerParams::MergePartialFromCodedStream(CoreML::Specification::SinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::CosLayerParams *CoreML::Specification::CosLayerParams::CosLayerParams(CoreML::Specification::CosLayerParams *this)
{
  *(void *)this = &unk_1F361BD20;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CosLayerParams *)&CoreML::Specification::_CosLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC102988(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CosLayerParams::MergePartialFromCodedStream(CoreML::Specification::CosLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TanLayerParams *CoreML::Specification::TanLayerParams::TanLayerParams(CoreML::Specification::TanLayerParams *this)
{
  *(void *)this = &unk_1F361C278;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TanLayerParams *)&CoreML::Specification::_TanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC102A78(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TanLayerParams::MergePartialFromCodedStream(CoreML::Specification::TanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AsinLayerParams *CoreML::Specification::AsinLayerParams::AsinLayerParams(CoreML::Specification::AsinLayerParams *this)
{
  *(void *)this = &unk_1F361C440;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AsinLayerParams *)&CoreML::Specification::_AsinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC102B68(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AsinLayerParams::MergePartialFromCodedStream(CoreML::Specification::AsinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AcosLayerParams *CoreML::Specification::AcosLayerParams::AcosLayerParams(CoreML::Specification::AcosLayerParams *this)
{
  *(void *)this = &unk_1F361C310;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AcosLayerParams *)&CoreML::Specification::_AcosLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC102C58(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AcosLayerParams::MergePartialFromCodedStream(CoreML::Specification::AcosLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AtanLayerParams *CoreML::Specification::AtanLayerParams::AtanLayerParams(CoreML::Specification::AtanLayerParams *this)
{
  *(void *)this = &unk_1F361C4D8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AtanLayerParams *)&CoreML::Specification::_AtanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC102D48(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AtanLayerParams::MergePartialFromCodedStream(CoreML::Specification::AtanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SinhLayerParams *CoreML::Specification::SinhLayerParams::SinhLayerParams(CoreML::Specification::SinhLayerParams *this)
{
  *(void *)this = &unk_1F361CD28;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SinhLayerParams *)&CoreML::Specification::_SinhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC102E38(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SinhLayerParams::MergePartialFromCodedStream(CoreML::Specification::SinhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::CoshLayerParams *CoreML::Specification::CoshLayerParams::CoshLayerParams(CoreML::Specification::CoshLayerParams *this)
{
  *(void *)this = &unk_1F361C7D0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoshLayerParams *)&CoreML::Specification::_CoshLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC102F28(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoshLayerParams::MergePartialFromCodedStream(CoreML::Specification::CoshLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TanhLayerParams *CoreML::Specification::TanhLayerParams::TanhLayerParams(CoreML::Specification::TanhLayerParams *this)
{
  *(void *)this = &unk_1F361CE58;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TanhLayerParams *)&CoreML::Specification::_TanhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC103018(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TanhLayerParams::MergePartialFromCodedStream(CoreML::Specification::TanhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AsinhLayerParams *CoreML::Specification::AsinhLayerParams::AsinhLayerParams(CoreML::Specification::AsinhLayerParams *this)
{
  *(void *)this = &unk_1F361D280;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AsinhLayerParams *)&CoreML::Specification::_AsinhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC103108(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AsinhLayerParams::MergePartialFromCodedStream(CoreML::Specification::AsinhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AcoshLayerParams *CoreML::Specification::AcoshLayerParams::AcoshLayerParams(CoreML::Specification::AcoshLayerParams *this)
{
  *(void *)this = &unk_1F361D020;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AcoshLayerParams *)&CoreML::Specification::_AcoshLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1031F8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AcoshLayerParams::MergePartialFromCodedStream(CoreML::Specification::AcoshLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AtanhLayerParams *CoreML::Specification::AtanhLayerParams::AtanhLayerParams(CoreML::Specification::AtanhLayerParams *this)
{
  *(void *)this = &unk_1F361D318;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AtanhLayerParams *)&CoreML::Specification::_AtanhLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1032E8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AtanhLayerParams::MergePartialFromCodedStream(CoreML::Specification::AtanhLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ErfLayerParams *CoreML::Specification::ErfLayerParams::ErfLayerParams(CoreML::Specification::ErfLayerParams *this)
{
  *(void *)this = &unk_1F361BE50;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ErfLayerParams *)&CoreML::Specification::_ErfLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1033D8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ErfLayerParams::MergePartialFromCodedStream(CoreML::Specification::ErfLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::GeluLayerParams *CoreML::Specification::GeluLayerParams::GeluLayerParams(CoreML::Specification::GeluLayerParams *this)
{
  *(void *)this = &unk_1F361CA30;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GeluLayerParams *)&CoreML::Specification::_GeluLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC1034C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GeluLayerParams::MergePartialFromCodedStream(CoreML::Specification::GeluLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::EqualLayerParams *CoreML::Specification::EqualLayerParams::EqualLayerParams(CoreML::Specification::EqualLayerParams *this)
{
  *(void *)this = &unk_1F361D3B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EqualLayerParams *)&CoreML::Specification::_EqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC103634(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::EqualLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::NotEqualLayerParams *CoreML::Specification::NotEqualLayerParams::NotEqualLayerParams(CoreML::Specification::NotEqualLayerParams *this)
{
  *(void *)this = &unk_1F361F6B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NotEqualLayerParams *)&CoreML::Specification::_NotEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC1037A4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NotEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::NotEqualLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LessThanLayerParams *CoreML::Specification::LessThanLayerParams::LessThanLayerParams(CoreML::Specification::LessThanLayerParams *this)
{
  *(void *)this = &unk_1F361F588;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LessThanLayerParams *)&CoreML::Specification::_LessThanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC103914(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LessThanLayerParams::MergePartialFromCodedStream(CoreML::Specification::LessThanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LessEqualLayerParams *CoreML::Specification::LessEqualLayerParams::LessEqualLayerParams(CoreML::Specification::LessEqualLayerParams *this)
{
  *(void *)this = &unk_1F361FB78;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LessEqualLayerParams *)&CoreML::Specification::_LessEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC103A84(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LessEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::LessEqualLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GreaterThanLayerParams *CoreML::Specification::GreaterThanLayerParams::GreaterThanLayerParams(CoreML::Specification::GreaterThanLayerParams *this)
{
  *(void *)this = &unk_1F3620FA8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GreaterThanLayerParams *)&CoreML::Specification::_GreaterThanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC103BF4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::GreaterThanLayerParams::MergePartialFromCodedStream(CoreML::Specification::GreaterThanLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GreaterEqualLayerParams *CoreML::Specification::GreaterEqualLayerParams::GreaterEqualLayerParams(CoreML::Specification::GreaterEqualLayerParams *this)
{
  *(void *)this = &unk_1F3621760;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GreaterEqualLayerParams *)&CoreML::Specification::_GreaterEqualLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC103D64(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::GreaterEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::GreaterEqualLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LogicalOrLayerParams *CoreML::Specification::LogicalOrLayerParams::LogicalOrLayerParams(CoreML::Specification::LogicalOrLayerParams *this)
{
  *(void *)this = &unk_1F361FC10;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalOrLayerParams *)&CoreML::Specification::_LogicalOrLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC103ED4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalOrLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalOrLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalXorLayerParams *CoreML::Specification::LogicalXorLayerParams::LogicalXorLayerParams(CoreML::Specification::LogicalXorLayerParams *this)
{
  *(void *)this = &unk_1F36207F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalXorLayerParams *)&CoreML::Specification::_LogicalXorLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC103FC4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalXorLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalXorLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalNotLayerParams *CoreML::Specification::LogicalNotLayerParams::LogicalNotLayerParams(CoreML::Specification::LogicalNotLayerParams *this)
{
  *(void *)this = &unk_1F3620758;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalNotLayerParams *)&CoreML::Specification::_LogicalNotLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1040B4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalNotLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalNotLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalAndLayerParams *CoreML::Specification::LogicalAndLayerParams::LogicalAndLayerParams(CoreML::Specification::LogicalAndLayerParams *this)
{
  *(void *)this = &unk_1F36206C0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalAndLayerParams *)&CoreML::Specification::_LogicalAndLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1041A4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalAndLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalAndLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ModBroadcastableLayerParams *CoreML::Specification::ModBroadcastableLayerParams::ModBroadcastableLayerParams(CoreML::Specification::ModBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F36233E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ModBroadcastableLayerParams *)&CoreML::Specification::_ModBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104294(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ModBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::ModBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MinBroadcastableLayerParams *CoreML::Specification::MinBroadcastableLayerParams::MinBroadcastableLayerParams(CoreML::Specification::MinBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F3623348;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MinBroadcastableLayerParams *)&CoreML::Specification::_MinBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104384(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MinBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MinBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MaxBroadcastableLayerParams *CoreML::Specification::MaxBroadcastableLayerParams::MaxBroadcastableLayerParams(CoreML::Specification::MaxBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F36232B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MaxBroadcastableLayerParams *)&CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104474(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MaxBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MaxBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AddBroadcastableLayerParams *CoreML::Specification::AddBroadcastableLayerParams::AddBroadcastableLayerParams(CoreML::Specification::AddBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F3623050;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::AddBroadcastableLayerParams *)&CoreML::Specification::_AddBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104564(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AddBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::AddBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::PowBroadcastableLayerParams *CoreML::Specification::PowBroadcastableLayerParams::PowBroadcastableLayerParams(CoreML::Specification::PowBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F3623478;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PowBroadcastableLayerParams *)&CoreML::Specification::_PowBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104654(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PowBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::PowBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::DivideBroadcastableLayerParams *CoreML::Specification::DivideBroadcastableLayerParams::DivideBroadcastableLayerParams(CoreML::Specification::DivideBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F3623D60;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::DivideBroadcastableLayerParams *)&CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104744(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DivideBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::DivideBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::FloorDivBroadcastableLayerParams *CoreML::Specification::FloorDivBroadcastableLayerParams::FloorDivBroadcastableLayerParams(CoreML::Specification::FloorDivBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F36242B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FloorDivBroadcastableLayerParams *)&CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104834(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FloorDivBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::FloorDivBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MultiplyBroadcastableLayerParams *CoreML::Specification::MultiplyBroadcastableLayerParams::MultiplyBroadcastableLayerParams(CoreML::Specification::MultiplyBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F36243E8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MultiplyBroadcastableLayerParams *)&CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104924(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MultiplyBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MultiplyBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SubtractBroadcastableLayerParams *CoreML::Specification::SubtractBroadcastableLayerParams::SubtractBroadcastableLayerParams(CoreML::Specification::SubtractBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F3624648;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SubtractBroadcastableLayerParams *)&CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC104A14(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SubtractBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::SubtractBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TileLayerParams *CoreML::Specification::TileLayerParams::TileLayerParams(CoreML::Specification::TileLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361CEF0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::TileLayerParams *)&CoreML::Specification::_TileLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC104B10(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TileLayerParams::MergePartialFromCodedStream(CoreML::Specification::TileLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::StackLayerParams *CoreML::Specification::StackLayerParams::StackLayerParams(CoreML::Specification::StackLayerParams *this)
{
  *(void *)this = &unk_1F361DAD0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::StackLayerParams *)&CoreML::Specification::_StackLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC104DA4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::StackLayerParams::MergePartialFromCodedStream(CoreML::Specification::StackLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherLayerParams *CoreML::Specification::GatherLayerParams::GatherLayerParams(CoreML::Specification::GatherLayerParams *this)
{
  *(void *)this = &unk_1F361E1F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherLayerParams *)&CoreML::Specification::_GatherLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC104F0C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ScatterLayerParams *CoreML::Specification::ScatterLayerParams::ScatterLayerParams(CoreML::Specification::ScatterLayerParams *this)
{
  *(void *)this = &unk_1F361EF98;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterLayerParams *)&CoreML::Specification::_ScatterLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC105070(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_30;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_30:
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherNDLayerParams *CoreML::Specification::GatherNDLayerParams::GatherNDLayerParams(CoreML::Specification::GatherNDLayerParams *this)
{
  *(void *)this = &unk_1F361F458;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherNDLayerParams *)&CoreML::Specification::_GatherNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC105228(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ScatterNDLayerParams *CoreML::Specification::ScatterNDLayerParams::ScatterNDLayerParams(CoreML::Specification::ScatterNDLayerParams *this)
{
  *(void *)this = &unk_1F3620038;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterNDLayerParams *)&CoreML::Specification::_ScatterNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC105318(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SoftmaxNDLayerParams *CoreML::Specification::SoftmaxNDLayerParams::SoftmaxNDLayerParams(CoreML::Specification::SoftmaxNDLayerParams *this)
{
  *(void *)this = &unk_1F36200D0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SoftmaxNDLayerParams *)&CoreML::Specification::_SoftmaxNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC105488(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SoftmaxNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::SoftmaxNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherAlongAxisLayerParams *CoreML::Specification::GatherAlongAxisLayerParams::GatherAlongAxisLayerParams(CoreML::Specification::GatherAlongAxisLayerParams *this)
{
  *(void *)this = &unk_1F3622AF8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherAlongAxisLayerParams *)&CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC1055F0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherAlongAxisLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherAlongAxisLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ScatterAlongAxisLayerParams *CoreML::Specification::ScatterAlongAxisLayerParams::ScatterAlongAxisLayerParams(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  *(void *)this = &unk_1F36235A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterAlongAxisLayerParams *)&CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC105754(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterAlongAxisLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterAlongAxisLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        int v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_30;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_30:
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReverseLayerParams *CoreML::Specification::ReverseLayerParams::ReverseLayerParams(CoreML::Specification::ReverseLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361EF00;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReverseLayerParams *)&CoreML::Specification::_ReverseLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC105918(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReverseLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReverseLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v20 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v18;
            *(void *)a2 = v18 + 1;
          }
          BOOL v21 = Varint64Fallback != 0;
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(unsigned char *)(v23 + v22 + 8) = v21;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReverseSeqLayerParams *CoreML::Specification::ReverseSeqLayerParams::ReverseSeqLayerParams(CoreML::Specification::ReverseSeqLayerParams *this)
{
  *(void *)this = &unk_1F3620AE8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReverseSeqLayerParams *)&CoreML::Specification::_ReverseSeqLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC105BB0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReverseSeqLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReverseSeqLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SplitNDLayerParams *CoreML::Specification::SplitNDLayerParams::SplitNDLayerParams(CoreML::Specification::SplitNDLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361F0C8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::SplitNDLayerParams *)&CoreML::Specification::_SplitNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_1DC105D70(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SplitNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::SplitNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0) {
              goto LABEL_27;
            }
            goto LABEL_8;
          }
          uint64_t v7 = *v6;
          if (*v6 < 1) {
            goto LABEL_7;
          }
          *(void *)a2 = v6 + 1;
          unint64_t v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v10 = v8 >> 3;
          if (v8 >> 3 != 3) {
            break;
          }
          if (v8 == 24)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x1Au, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 26) {
              goto LABEL_27;
            }
            BOOL v14 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v14;
              *(void *)a2 = v14 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v21 = *((_DWORD *)a2 + 10);
              uint64_t v22 = *((int *)a2 + 11);
              unint64_t v23 = *((void *)a2 + 1);
              int v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF) {
                break;
              }
              int v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
                unint64_t v26 = Varint64Fallback;
              }
              else
              {
                unint64_t v26 = *v25;
                *(void *)a2 = v25 + 1;
              }
              signed int v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                signed int v29 = *v5;
              }
              uint64_t v30 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(void *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
            uint64_t v31 = v23 + v22;
            *((void *)a2 + 1) = v23 + v22;
            int v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20) {
              int v32 = v20;
            }
            BOOL v33 = __OFSUB__(v24, v32);
            int v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0)) {
              int v34 = 0;
            }
            else {
              *((void *)a2 + 1) = v31 - v34;
            }
            *((_DWORD *)a2 + 11) = v34;
            *((unsigned char *)a2 + 36) = 0;
          }
        }
        if (v10 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_27;
        }
        char v16 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
        {
          *((void *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 6) = *v16;
          *(void *)a2 = v16 + 1;
        }
      }
      if (v10 != 1 || v8 != 8) {
        break;
      }
      BOOL v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        unint64_t v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v13 = *v12;
        *(void *)a2 = v12 + 1;
      }
      *((void *)this + 5) = v13;
    }
LABEL_27:
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConcatNDLayerParams *CoreML::Specification::ConcatNDLayerParams::ConcatNDLayerParams(CoreML::Specification::ConcatNDLayerParams *this)
{
  *(void *)this = &unk_1F361F290;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ConcatNDLayerParams *)&CoreML::Specification::_ConcatNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1DC1060A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConcatNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConcatNDLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        BOOL v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::TransposeLayerParams *CoreML::Specification::TransposeLayerParams::TransposeLayerParams(CoreML::Specification::TransposeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3620200;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::TransposeLayerParams *)&CoreML::Specification::_TransposeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC106264(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TransposeLayerParams::MergePartialFromCodedStream(CoreML::Specification::TransposeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        unsigned int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          char v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SliceStaticLayerParams *CoreML::Specification::SliceStaticLayerParams::SliceStaticLayerParams(CoreML::Specification::SliceStaticLayerParams *this)
{
  *(void *)this = &unk_1F36213D0;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::SliceStaticLayerParams *)&CoreML::Specification::_SliceStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 39) = 0;
  return this;
}

void sub_1DC106514(_Unwind_Exception *a1)
{
  int v4 = (void *)v2[18];
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)v2[15];
  if (v5 && !*v5) {
    operator delete(v5);
  }
  uint64_t v6 = (void *)v2[12];
  if (v6 && !*v6) {
    operator delete(v6);
  }
  uint64_t v7 = (void *)v2[9];
  if (v7 && !*v7) {
    operator delete(v7);
  }
  unint64_t v8 = (void *)v2[6];
  if (v8 && !*v8) {
    operator delete(v8);
  }
  unsigned int v9 = (void *)v2[3];
  if (v9)
  {
    if (!*v9) {
      operator delete(v9);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int v88 = (unsigned int *)((char *)this + 112);
  int v89 = (unsigned int *)((char *)this + 136);
  uint64_t v5 = (unsigned int *)((char *)this + 88);
  uint64_t v6 = (unsigned int *)((char *)this + 64);
  uint64_t v7 = (unsigned int *)((char *)this + 40);
  unint64_t v8 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    unsigned int v9 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
      break;
    }
    uint64_t v10 = *v9;
    if (*v9 < 1) {
      break;
    }
    *(void *)a2 = v9 + 1;
    unint64_t v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_39:
    if (v11) {
      BOOL v25 = (v11 & 7) == 4;
    }
    else {
      BOOL v25 = 1;
    }
    if (v25) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
  unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v11 & 0x100000000) == 0) {
    goto LABEL_39;
  }
LABEL_8:
  switch(v11 >> 3)
  {
    case 1u:
      if (v11 == 8)
      {
        int v26 = 10;
        int v27 = a2;
        uint64_t v28 = (uint64_t)v8;
        goto LABEL_50;
      }
      if (v11 != 10) {
        goto LABEL_39;
      }
      int v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v13;
        *(void *)a2 = v13 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      while (1)
      {
        int v33 = *((_DWORD *)a2 + 10);
        if (v33 == 0x7FFFFFFF) {
          break;
        }
        int v34 = *(char **)a2;
        unint64_t v35 = *((void *)a2 + 1);
        if ((int)(v33 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v35 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v34 >= v35 || *v34 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v38 & 1) == 0) {
            return 0;
          }
          unint64_t v36 = Varint64Fallback;
        }
        else
        {
          unint64_t v36 = *v34;
          *(void *)a2 = v34 + 1;
        }
        signed int v39 = *((_DWORD *)this + 4);
        if (v39 == *((_DWORD *)this + 5))
        {
          google::protobuf::RepeatedField<double>::Reserve(v8, v39 + 1);
          signed int v39 = *v8;
        }
        uint64_t v40 = *((void *)this + 3);
        *((_DWORD *)this + 4) = v39 + 1;
        *(void *)(v40 + 8 * v39 + 8) = v36;
      }
      goto LABEL_124;
    case 2u:
      if (v11 == 16)
      {
        int v29 = 18;
        uint64_t v30 = a2;
        uint64_t v31 = (uint64_t)v7;
        goto LABEL_53;
      }
      if (v11 != 18) {
        goto LABEL_39;
      }
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v16 < 0) {
          return 0;
        }
      }
      else
      {
        int v16 = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
      while (1)
      {
        int v41 = *((_DWORD *)a2 + 10);
        if (v41 == 0x7FFFFFFF) {
          break;
        }
        unint64_t v42 = *(char **)a2;
        unint64_t v43 = *((void *)a2 + 1);
        if ((int)(v41 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v43 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v42 >= v43 || *v42 < 0)
        {
          unint64_t v44 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v45 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v44 = *v42;
          *(void *)a2 = v42 + 1;
        }
        BOOL v46 = v44 != 0;
        signed int v47 = *((_DWORD *)this + 10);
        if (v47 == *((_DWORD *)this + 11))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v7, v47 + 1);
          signed int v47 = *v7;
        }
        uint64_t v48 = *((void *)this + 6);
        *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v47 + 1;
        *(unsigned char *)(v48 + v47 + 8) = v46;
      }
      goto LABEL_124;
    case 3u:
      if (v11 == 24)
      {
        int v26 = 26;
        int v27 = a2;
        uint64_t v28 = (uint64_t)v6;
        goto LABEL_50;
      }
      if (v11 != 26) {
        goto LABEL_39;
      }
      int v17 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
      {
        int v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v18 < 0) {
          return 0;
        }
      }
      else
      {
        int v18 = *v17;
        *(void *)a2 = v17 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v18);
      while (1)
      {
        int v49 = *((_DWORD *)a2 + 10);
        if (v49 == 0x7FFFFFFF) {
          break;
        }
        int v50 = *(char **)a2;
        unint64_t v51 = *((void *)a2 + 1);
        if ((int)(v49 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v51 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v50 >= v51 || *v50 < 0)
        {
          unint64_t v53 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v54 & 1) == 0) {
            return 0;
          }
          unint64_t v52 = v53;
        }
        else
        {
          unint64_t v52 = *v50;
          *(void *)a2 = v50 + 1;
        }
        signed int v55 = *((_DWORD *)this + 16);
        if (v55 == *((_DWORD *)this + 17))
        {
          google::protobuf::RepeatedField<double>::Reserve(v6, v55 + 1);
          signed int v55 = *v6;
        }
        uint64_t v56 = *((void *)this + 9);
        *((_DWORD *)this + 16) = v55 + 1;
        *(void *)(v56 + 8 * v55 + 8) = v52;
      }
      goto LABEL_124;
    case 4u:
      if (v11 == 32)
      {
        int v29 = 34;
        uint64_t v30 = a2;
        uint64_t v31 = (uint64_t)v5;
        goto LABEL_53;
      }
      if (v11 != 34) {
        goto LABEL_39;
      }
      unint64_t v19 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
      {
        int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v20 < 0) {
          return 0;
        }
      }
      else
      {
        int v20 = *v19;
        *(void *)a2 = v19 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
      while (1)
      {
        int v57 = *((_DWORD *)a2 + 10);
        if (v57 == 0x7FFFFFFF) {
          break;
        }
        unsigned int v58 = *(char **)a2;
        unint64_t v59 = *((void *)a2 + 1);
        if ((int)(v57 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v59 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v58 >= v59 || *v58 < 0)
        {
          unint64_t v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v61 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v60 = *v58;
          *(void *)a2 = v58 + 1;
        }
        BOOL v62 = v60 != 0;
        signed int v63 = *((_DWORD *)this + 22);
        if (v63 == *((_DWORD *)this + 23))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v5, v63 + 1);
          signed int v63 = *v5;
        }
        uint64_t v64 = *((void *)this + 12);
        *((_DWORD *)this + 22) = v63 + 1;
        *(unsigned char *)(v64 + v63 + 8) = v62;
      }
      goto LABEL_124;
    case 5u:
      if (v11 == 40)
      {
        int v26 = 42;
        int v27 = a2;
        uint64_t v28 = (uint64_t)v88;
LABEL_50:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(v26, v27, v28) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      if (v11 != 42) {
        goto LABEL_39;
      }
      char v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v22 < 0) {
          return 0;
        }
      }
      else
      {
        int v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
      while (1)
      {
        int v65 = *((_DWORD *)a2 + 10);
        if (v65 == 0x7FFFFFFF) {
          break;
        }
        unint64_t v66 = *(char **)a2;
        unint64_t v67 = *((void *)a2 + 1);
        if ((int)(v65 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v67 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v66 >= v67 || *v66 < 0)
        {
          unint64_t v69 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v70 & 1) == 0) {
            return 0;
          }
          unint64_t v68 = v69;
        }
        else
        {
          unint64_t v68 = *v66;
          *(void *)a2 = v66 + 1;
        }
        signed int v71 = *((_DWORD *)this + 28);
        if (v71 == *((_DWORD *)this + 29))
        {
          google::protobuf::RepeatedField<double>::Reserve(v88, v71 + 1);
          signed int v71 = *v88;
        }
        uint64_t v72 = *((void *)this + 15);
        *((_DWORD *)this + 28) = v71 + 1;
        *(void *)(v72 + 8 * v71 + 8) = v68;
      }
      goto LABEL_124;
    case 6u:
      if (v11 == 48)
      {
        int v29 = 50;
        uint64_t v30 = a2;
        uint64_t v31 = (uint64_t)v89;
LABEL_53:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(v29, v30, v31) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      if (v11 != 50) {
        goto LABEL_39;
      }
      uint64_t v23 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v23 & 0x80000000) == 0)
      {
        int v24 = *v23;
        *(void *)a2 = v23 + 1;
        goto LABEL_114;
      }
      int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if ((v24 & 0x80000000) == 0)
      {
LABEL_114:
        int v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
        while (1)
        {
          int v73 = *((_DWORD *)a2 + 10);
          if (v73 == 0x7FFFFFFF) {
            break;
          }
          int v74 = *(char **)a2;
          unint64_t v75 = *((void *)a2 + 1);
          if ((int)(v73 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v75 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v74 >= v75 || *v74 < 0)
          {
            unint64_t v76 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v77 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v76 = *v74;
            *(void *)a2 = v74 + 1;
          }
          BOOL v78 = v76 != 0;
          signed int v79 = *((_DWORD *)this + 34);
          if (v79 == *((_DWORD *)this + 35))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v89, v79 + 1);
            signed int v79 = *v89;
          }
          uint64_t v80 = *((void *)this + 18);
          *((_DWORD *)this + 34) = v79 + 1;
          *(unsigned char *)(v80 + v79 + 8) = v78;
        }
LABEL_124:
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v32;
        int v81 = *((_DWORD *)a2 + 12);
        uint64_t v82 = *((void *)a2 + 1) + *((int *)a2 + 11);
        *((void *)a2 + 1) = v82;
        if (v81 >= v32) {
          int v83 = v32;
        }
        else {
          int v83 = v81;
        }
        int v84 = *((_DWORD *)a2 + 6);
        BOOL v85 = __OFSUB__(v84, v83);
        int v86 = v84 - v83;
        if ((v86 < 0) ^ v85 | (v86 == 0)) {
          int v86 = 0;
        }
        else {
          *((void *)a2 + 1) = v82 - v86;
        }
        *((_DWORD *)a2 + 11) = v86;
        *((unsigned char *)a2 + 36) = 0;
        goto LABEL_2;
      }
      return 0;
    default:
      goto LABEL_39;
  }
}

CoreML::Specification::SliceDynamicLayerParams *CoreML::Specification::SliceDynamicLayerParams::SliceDynamicLayerParams(CoreML::Specification::SliceDynamicLayerParams *this)
{
  *(void *)this = &unk_1F3621C20;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::SliceDynamicLayerParams *)&CoreML::Specification::_SliceDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC106D8C(_Unwind_Exception *a1)
{
  int v4 = (void *)v2[15];
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)v2[12];
  if (v5 && !*v5) {
    operator delete(v5);
  }
  uint64_t v6 = (void *)v2[9];
  if (v6 && !*v6) {
    operator delete(v6);
  }
  uint64_t v7 = (void *)v2[6];
  if (v7 && !*v7) {
    operator delete(v7);
  }
  unint64_t v8 = (void *)v2[3];
  if (v8)
  {
    if (!*v8) {
      operator delete(v8);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceDynamicLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 112);
  uint64_t v6 = (unsigned int *)((char *)this + 88);
  uint64_t v7 = (unsigned int *)((char *)this + 64);
  unint64_t v8 = (unsigned int *)((char *)this + 40);
  unsigned int v9 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v10 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v11) = 0;
      break;
    }
    uint64_t v11 = *v10;
    if (*v10 < 1) {
      break;
    }
    *(void *)a2 = v10 + 1;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_34:
    if (v12) {
      BOOL v24 = (v12 & 7) == 4;
    }
    else {
      BOOL v24 = 1;
    }
    if (v24) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3) & 1) == 0) {
      return 0;
    }
  }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
  unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v12 & 0x100000000) == 0) {
    goto LABEL_34;
  }
LABEL_8:
  switch(v12 >> 3)
  {
    case 2u:
      if (v12 == 16)
      {
        int v25 = 18;
        int v26 = a2;
        uint64_t v27 = (uint64_t)v9;
        goto LABEL_47;
      }
      if (v12 != 18) {
        goto LABEL_34;
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v14;
        *(void *)a2 = v14 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      while (1)
      {
        int v32 = *((_DWORD *)a2 + 10);
        if (v32 == 0x7FFFFFFF) {
          break;
        }
        int v33 = *(char **)a2;
        unint64_t v34 = *((void *)a2 + 1);
        if ((int)(v32 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v34 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v33 >= v34 || *v33 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v36 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v33;
          *(void *)a2 = v33 + 1;
        }
        BOOL v37 = Varint64Fallback != 0;
        signed int v38 = *((_DWORD *)this + 4);
        if (v38 == *((_DWORD *)this + 5))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v9, v38 + 1);
          signed int v38 = *v9;
        }
        uint64_t v39 = *((void *)this + 3);
        *((_DWORD *)this + 4) = v38 + 1;
        *(unsigned char *)(v39 + v38 + 8) = v37;
      }
      goto LABEL_106;
    case 3u:
      if (v12 == 24)
      {
        int v28 = 26;
        int v29 = a2;
        uint64_t v30 = (uint64_t)v8;
        goto LABEL_44;
      }
      if (v12 != 26) {
        goto LABEL_34;
      }
      int v16 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
      {
        int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v17 < 0) {
          return 0;
        }
      }
      else
      {
        int v17 = *v16;
        *(void *)a2 = v16 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
      while (1)
      {
        int v40 = *((_DWORD *)a2 + 10);
        if (v40 == 0x7FFFFFFF) {
          break;
        }
        int v41 = *(char **)a2;
        unint64_t v42 = *((void *)a2 + 1);
        if ((int)(v40 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v42 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v41 >= v42 || *v41 < 0)
        {
          unint64_t v44 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v45 & 1) == 0) {
            return 0;
          }
          unint64_t v43 = v44;
        }
        else
        {
          unint64_t v43 = *v41;
          *(void *)a2 = v41 + 1;
        }
        signed int v46 = *((_DWORD *)this + 10);
        if (v46 == *((_DWORD *)this + 11))
        {
          google::protobuf::RepeatedField<double>::Reserve(v8, v46 + 1);
          signed int v46 = *v8;
        }
        uint64_t v47 = *((void *)this + 6);
        *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v46 + 1;
        *(void *)(v47 + 8 * v46 + 8) = v43;
      }
      goto LABEL_106;
    case 4u:
      if (v12 == 32)
      {
        int v25 = 34;
        int v26 = a2;
        uint64_t v27 = (uint64_t)v7;
        goto LABEL_47;
      }
      if (v12 != 34) {
        goto LABEL_34;
      }
      int v18 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
      {
        int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v19 < 0) {
          return 0;
        }
      }
      else
      {
        int v19 = *v18;
        *(void *)a2 = v18 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
      while (1)
      {
        int v48 = *((_DWORD *)a2 + 10);
        if (v48 == 0x7FFFFFFF) {
          break;
        }
        int v49 = *(char **)a2;
        unint64_t v50 = *((void *)a2 + 1);
        if ((int)(v48 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v50 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v49 >= v50 || *v49 < 0)
        {
          unint64_t v51 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v52 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v51 = *v49;
          *(void *)a2 = v49 + 1;
        }
        BOOL v53 = v51 != 0;
        signed int v54 = *((_DWORD *)this + 16);
        if (v54 == *((_DWORD *)this + 17))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v7, v54 + 1);
          signed int v54 = *v7;
        }
        uint64_t v55 = *((void *)this + 9);
        *((_DWORD *)this + 16) = v54 + 1;
        *(unsigned char *)(v55 + v54 + 8) = v53;
      }
      goto LABEL_106;
    case 5u:
      if (v12 == 40)
      {
        int v28 = 42;
        int v29 = a2;
        uint64_t v30 = (uint64_t)v6;
LABEL_44:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(v28, v29, v30) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      if (v12 != 42) {
        goto LABEL_34;
      }
      int v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v21 < 0) {
          return 0;
        }
      }
      else
      {
        int v21 = *v20;
        *(void *)a2 = v20 + 1;
      }
      int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
      while (1)
      {
        int v56 = *((_DWORD *)a2 + 10);
        if (v56 == 0x7FFFFFFF) {
          break;
        }
        int v57 = *(char **)a2;
        unint64_t v58 = *((void *)a2 + 1);
        if ((int)(v56 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v58 - *(void *)a2) < 1) {
          break;
        }
        if ((unint64_t)v57 >= v58 || *v57 < 0)
        {
          unint64_t v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v61 & 1) == 0) {
            return 0;
          }
          unint64_t v59 = v60;
        }
        else
        {
          unint64_t v59 = *v57;
          *(void *)a2 = v57 + 1;
        }
        signed int v62 = *((_DWORD *)this + 22);
        if (v62 == *((_DWORD *)this + 23))
        {
          google::protobuf::RepeatedField<double>::Reserve(v6, v62 + 1);
          signed int v62 = *v6;
        }
        uint64_t v63 = *((void *)this + 12);
        *((_DWORD *)this + 22) = v62 + 1;
        *(void *)(v63 + 8 * v62 + 8) = v59;
      }
      goto LABEL_106;
    case 6u:
      if (v12 == 48)
      {
        int v25 = 50;
        int v26 = a2;
        uint64_t v27 = (uint64_t)v5;
LABEL_47:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(v25, v26, v27) & 1) == 0)return 0; {
        goto LABEL_2;
        }
      }
      if (v12 != 50) {
        goto LABEL_34;
      }
      int v22 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v22 & 0x80000000) == 0)
      {
        int v23 = *v22;
        *(void *)a2 = v22 + 1;
        goto LABEL_96;
      }
      int v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if ((v23 & 0x80000000) == 0)
      {
LABEL_96:
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
        while (1)
        {
          int v64 = *((_DWORD *)a2 + 10);
          if (v64 == 0x7FFFFFFF) {
            break;
          }
          int v65 = *(char **)a2;
          unint64_t v66 = *((void *)a2 + 1);
          if ((int)(v64 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v66 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v65 >= v66 || *v65 < 0)
          {
            unint64_t v67 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v68 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v67 = *v65;
            *(void *)a2 = v65 + 1;
          }
          BOOL v69 = v67 != 0;
          signed int v70 = *((_DWORD *)this + 28);
          if (v70 == *((_DWORD *)this + 29))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v5, v70 + 1);
            signed int v70 = *v5;
          }
          uint64_t v71 = *((void *)this + 15);
          *((_DWORD *)this + 28) = v70 + 1;
          *(unsigned char *)(v71 + v70 + 8) = v69;
        }
LABEL_106:
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v31;
        int v72 = *((_DWORD *)a2 + 12);
        uint64_t v73 = *((void *)a2 + 1) + *((int *)a2 + 11);
        *((void *)a2 + 1) = v73;
        if (v72 >= v31) {
          int v74 = v31;
        }
        else {
          int v74 = v72;
        }
        int v75 = *((_DWORD *)a2 + 6);
        BOOL v76 = __OFSUB__(v75, v74);
        int v77 = v75 - v74;
        if ((v77 < 0) ^ v76 | (v77 == 0)) {
          int v77 = 0;
        }
        else {
          *((void *)a2 + 1) = v73 - v77;
        }
        *((_DWORD *)a2 + 11) = v77;
        *((unsigned char *)a2 + 36) = 0;
        goto LABEL_2;
      }
      return 0;
    default:
      goto LABEL_34;
  }
}

CoreML::Specification::SlidingWindowsLayerParams *CoreML::Specification::SlidingWindowsLayerParams::SlidingWindowsLayerParams(CoreML::Specification::SlidingWindowsLayerParams *this)
{
  *(void *)this = &unk_1F3622930;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SlidingWindowsLayerParams *)&CoreML::Specification::_SlidingWindowsLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC1074C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SlidingWindowsLayerParams::MergePartialFromCodedStream(CoreML::Specification::SlidingWindowsLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_26;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_26;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_26;
          }
          int v13 = *a2;
          if (*a2 < a2[1] && (*v13 & 0x80000000) == 0)
          {
            *((void *)this + 4) = *v13;
            goto LABEL_25;
          }
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_26;
        }
        int v13 = *a2;
        if (*a2 >= a2[1] || *v13 < 0)
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v17 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v13;
LABEL_25:
          *a2 = v13 + 1;
        }
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_26:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::TopKLayerParams *CoreML::Specification::TopKLayerParams::TopKLayerParams(CoreML::Specification::TopKLayerParams *this)
{
  *(void *)this = &unk_1F361CF88;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::TopKLayerParams *)&CoreML::Specification::_TopKLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC1076C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TopKLayerParams::MergePartialFromCodedStream(CoreML::Specification::TopKLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_25;
          }
          int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v13;
            *a2 = v13 + 1;
          }
          *((unsigned char *)this + 32) = Varint64Fallback != 0;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_25;
        }
        char v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v15;
          *a2 = v15 + 1;
        }
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v17 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = v12;
    }
LABEL_25:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::ArgMinLayerParams *CoreML::Specification::ArgMinLayerParams::ArgMinLayerParams(CoreML::Specification::ArgMinLayerParams *this)
{
  *(void *)this = &unk_1F361DDC8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgMinLayerParams *)&CoreML::Specification::_ArgMinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1DC1078D4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgMinLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgMinLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ArgMaxLayerParams *CoreML::Specification::ArgMaxLayerParams::ArgMaxLayerParams(CoreML::Specification::ArgMaxLayerParams *this)
{
  *(void *)this = &unk_1F361DD30;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgMaxLayerParams *)&CoreML::Specification::_ArgMaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1DC107A94(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgMaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgMaxLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::EmbeddingNDLayerParams *CoreML::Specification::EmbeddingNDLayerParams::EmbeddingNDLayerParams(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  *(void *)this = &unk_1F3620DE0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 48) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC107C58(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EmbeddingNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::EmbeddingNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *(unsigned __int8 **)a2;
          unint64_t v6 = *((void *)a2 + 1);
          if (*(void *)a2 >= v6)
          {
            LODWORD(v8) = 0;
LABEL_51:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_52;
            }
            goto LABEL_8;
          }
          unint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 < 1)
          {
            if ((unint64_t)v7 < v6)
            {
              int v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(void *)a2 = v5 + 2;
                unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_8;
              }
            }
            goto LABEL_51;
          }
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_52;
          }
LABEL_8:
          unsigned int v11 = v9 >> 3;
          if (v9 >> 3 <= 2) {
            break;
          }
          if (v11 == 3)
          {
            if (v9 != 24) {
              goto LABEL_52;
            }
            char v15 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v26 & 1) == 0) {
                return 0;
              }
            }
            else
            {
              unint64_t Varint64Fallback = *v15;
              *(void *)a2 = v15 + 1;
            }
            *((unsigned char *)this + 48) = Varint64Fallback != 0;
          }
          else
          {
            if (v11 == 20)
            {
              if (v9 != 162) {
                goto LABEL_52;
              }
              unint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
              if (!v12) {
                operator new();
              }
            }
            else
            {
              if (v11 != 21 || v9 != 170) {
                goto LABEL_52;
              }
              unint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
              if (!v12) {
                operator new();
              }
            }
            char v17 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v17;
              *(void *)a2 = v17 + 1;
            }
            int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v21 = *((_DWORD *)a2 + 13);
            BOOL v22 = __OFSUB__(v21--, 1);
            *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v21;
            if (v21 < 0 != v22) {
              return 0;
            }
            int v23 = v19;
            BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v20);
            if (!result) {
              return result;
            }
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v23)) {
              return 0;
            }
          }
        }
        if (v11 != 1) {
          break;
        }
        if (v9 != 8) {
          goto LABEL_52;
        }
        BOOL v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 4) = *v14;
LABEL_38:
          *(void *)a2 = v14 + 1;
        }
      }
      if (v11 != 2 || v9 != 16) {
        break;
      }
      BOOL v14 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((void *)this + 5) = *v14;
        goto LABEL_38;
      }
      *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v25 & 1) == 0) {
        return 0;
      }
    }
LABEL_52:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC107F3C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BatchedMatMulLayerParams *CoreML::Specification::BatchedMatMulLayerParams::BatchedMatMulLayerParams(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  *(void *)this = &unk_1F3621DE8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1DC107FCC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BatchedMatMulLayerParams::MergePartialFromCodedStream(CoreML::Specification::BatchedMatMulLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_7;
      }
LABEL_13:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_7;
          }
          int v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          *((unsigned char *)this + 48) = Varint64Fallback != 0;
          continue;
        case 2u:
          if (v7 != 16) {
            goto LABEL_7;
          }
          unint64_t v12 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
          {
            unint64_t v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((unsigned char *)this + 49) = v13 != 0;
          continue;
        case 5u:
          if (v7 != 40) {
            goto LABEL_7;
          }
          BOOL v14 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && (*v14 & 0x80000000) == 0)
          {
            *((void *)this + 4) = *v14;
            goto LABEL_30;
          }
          *((void *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v30 & 1) == 0) {
            return 0;
          }
          continue;
        case 6u:
          if (v7 != 48) {
            goto LABEL_7;
          }
          BOOL v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            *((void *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 5) = *v14;
LABEL_30:
            *(void *)a2 = v14 + 1;
          }
          continue;
        case 7u:
          if (v7 != 56) {
            goto LABEL_7;
          }
          char v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v32 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          *((unsigned char *)this + 5CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v16 != 0;
          continue;
        case 8u:
          if (v7 != 66) {
            goto LABEL_7;
          }
          char v17 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
          if (!v17) {
            operator new();
          }
          goto LABEL_41;
        case 9u:
          if (v7 != 74) {
            goto LABEL_7;
          }
          char v17 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
          if (!v17) {
            operator new();
          }
LABEL_41:
          char v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v17, a2, v23);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
            return 0;
          }
          continue;
        case 0xAu:
          if (v7 != 80) {
            goto LABEL_7;
          }
          unsigned int v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
          {
            unint64_t v21 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v33 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v21 = *v20;
            *(void *)a2 = v20 + 1;
          }
          *((unsigned char *)this + 51) = v21 != 0;
          break;
        default:
          goto LABEL_7;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_13;
    }
LABEL_7:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC10835C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::GetShapeLayerParams *CoreML::Specification::GetShapeLayerParams::GetShapeLayerParams(CoreML::Specification::GetShapeLayerParams *this)
{
  *(void *)this = &unk_1F361F4F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GetShapeLayerParams *)&CoreML::Specification::_GetShapeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC10840C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GetShapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::GetShapeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LoadConstantNDLayerParams *CoreML::Specification::LoadConstantNDLayerParams::LoadConstantNDLayerParams(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3622508;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1DC10850C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LoadConstantNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoadConstantNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        BOOL v6 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1)) {
          break;
        }
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_8;
        }
LABEL_21:
        if (v8) {
          BOOL v15 = (v8 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
      }
        }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_8:
      if (v8 >> 3 == 2) {
        break;
      }
      if (v8 >> 3 != 1) {
        goto LABEL_21;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          goto LABEL_21;
        }
        int v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v23 = *((_DWORD *)a2 + 10);
          uint64_t v24 = *((int *)a2 + 11);
          unint64_t v25 = *((void *)a2 + 1);
          int v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF) {
            break;
          }
          char v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0) {
              return 0;
            }
            unint64_t v28 = Varint64Fallback;
          }
          else
          {
            unint64_t v28 = *v27;
            *(void *)a2 = v27 + 1;
          }
          signed int v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            signed int v31 = *v5;
          }
          uint64_t v32 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(void *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v22;
        uint64_t v33 = v25 + v24;
        *((void *)a2 + 1) = v25 + v24;
        int v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22) {
          int v34 = v22;
        }
        BOOL v19 = __OFSUB__(v26, v34);
        int v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0)) {
          int v35 = 0;
        }
        else {
          *((void *)a2 + 1) = v33 - v35;
        }
        *((_DWORD *)a2 + 11) = v35;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8 != 18) {
      goto LABEL_21;
    }
    unint64_t v12 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
    if (!v12) {
      operator new();
    }
    unint64_t v13 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
    {
      int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0) {
        return 0;
      }
    }
    else
    {
      int v14 = *v13;
      *(void *)a2 = v13 + 1;
    }
    int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    int v18 = *((_DWORD *)a2 + 13);
    BOOL v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v18;
    if (v18 < 0 != v19) {
      break;
    }
    int v20 = v16;
    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result) {
      return result;
    }
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1DC1087F0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::FillLikeLayerParams *CoreML::Specification::FillLikeLayerParams::FillLikeLayerParams(CoreML::Specification::FillLikeLayerParams *this)
{
  *(void *)this = &unk_1F361F3C0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FillLikeLayerParams *)&CoreML::Specification::_FillLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC108874(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FillStaticLayerParams *CoreML::Specification::FillStaticLayerParams::FillStaticLayerParams(CoreML::Specification::FillStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3620628;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::FillStaticLayerParams *)&CoreML::Specification::_FillStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 36) = 0;
  return this;
}

void sub_1DC1089F0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_13;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_13;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x12u, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_13;
          }
          unint64_t v12 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v12;
            *(void *)a2 = v12 + 1;
          }
          int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v17 = *((_DWORD *)a2 + 10);
            uint64_t v18 = *((int *)a2 + 11);
            unint64_t v19 = *((void *)a2 + 1);
            int v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF) {
              break;
            }
            unint64_t v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = Varint64Fallback;
            }
            else
            {
              unint64_t v22 = *v21;
              *(void *)a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v16;
          uint64_t v27 = v19 + v18;
          *((void *)a2 + 1) = v19 + v18;
          int v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16) {
            int v28 = v16;
          }
          BOOL v29 = __OFSUB__(v20, v28);
          int v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0)) {
            int v30 = 0;
          }
          else {
            *((void *)a2 + 1) = v27 - v30;
          }
          *((_DWORD *)a2 + 11) = v30;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
      if (v8 >> 3 != 1 || v8 != 13) {
        break;
      }
      unsigned int v32 = 0;
      unsigned int v14 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
        if (!result) {
          return result;
        }
        unsigned int v15 = v32;
      }
      else
      {
        unsigned int v15 = *v14;
        *(void *)a2 = v14 + 1;
      }
      *((_DWORD *)this + 9) = v15;
    }
LABEL_13:
    if (v8) {
      BOOL v11 = (v8 & 7) == 4;
    }
    else {
      BOOL v11 = 1;
    }
    if (v11) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FillDynamicLayerParams *CoreML::Specification::FillDynamicLayerParams::FillDynamicLayerParams(CoreML::Specification::FillDynamicLayerParams *this)
{
  *(void *)this = &unk_1F3620E78;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FillDynamicLayerParams *)&CoreML::Specification::_FillDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC108CD8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::BroadcastToLikeLayerParams *CoreML::Specification::BroadcastToLikeLayerParams::BroadcastToLikeLayerParams(CoreML::Specification::BroadcastToLikeLayerParams *this)
{
  *(void *)this = &unk_1F36229C8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BroadcastToLikeLayerParams *)&CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC108E48(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::BroadcastToStaticLayerParams *CoreML::Specification::BroadcastToStaticLayerParams::BroadcastToStaticLayerParams(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3623770;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::BroadcastToStaticLayerParams *)&CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC108F44(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::BroadcastToDynamicLayerParams *CoreML::Specification::BroadcastToDynamicLayerParams::BroadcastToDynamicLayerParams(CoreML::Specification::BroadcastToDynamicLayerParams *this)
{
  *(void *)this = &unk_1F36238A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BroadcastToDynamicLayerParams *)&CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1091D4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SqueezeLayerParams *CoreML::Specification::SqueezeLayerParams::SqueezeLayerParams(CoreML::Specification::SqueezeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361F160;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::SqueezeLayerParams *)&CoreML::Specification::_SqueezeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 36) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC1092D4(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SqueezeLayerParams::MergePartialFromCodedStream(CoreML::Specification::SqueezeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16) {
          break;
        }
        BOOL v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v15 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *(void *)a2 = v12 + 1;
        }
        *((unsigned char *)this + 36) = Varint64Fallback != 0;
      }
      else
      {
        if (v8 >> 3 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          int v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v17 = *((_DWORD *)a2 + 10);
            uint64_t v18 = *((int *)a2 + 11);
            unint64_t v19 = *((void *)a2 + 1);
            int v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF) {
              break;
            }
            char v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              unint64_t v23 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0) {
                return 0;
              }
              unint64_t v22 = v23;
            }
            else
            {
              unint64_t v22 = *v21;
              *(void *)a2 = v21 + 1;
            }
            signed int v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              signed int v25 = *v5;
            }
            uint64_t v26 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(void *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v16;
          uint64_t v27 = v19 + v18;
          *((void *)a2 + 1) = v19 + v18;
          int v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16) {
            int v28 = v16;
          }
          BOOL v29 = __OFSUB__(v20, v28);
          int v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0)) {
            int v30 = 0;
          }
          else {
            *((void *)a2 + 1) = v27 - v30;
          }
          *((_DWORD *)a2 + 11) = v30;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v14 = (v8 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ExpandDimsLayerParams *CoreML::Specification::ExpandDimsLayerParams::ExpandDimsLayerParams(CoreML::Specification::ExpandDimsLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3620590;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ExpandDimsLayerParams *)&CoreML::Specification::_ExpandDimsLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC1095C4(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ExpandDimsLayerParams::MergePartialFromCodedStream(CoreML::Specification::ExpandDimsLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FlattenTo2DLayerParams *CoreML::Specification::FlattenTo2DLayerParams::FlattenTo2DLayerParams(CoreML::Specification::FlattenTo2DLayerParams *this)
{
  *(void *)this = &unk_1F3620F10;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FlattenTo2DLayerParams *)&CoreML::Specification::_FlattenTo2DLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC109858(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FlattenTo2DLayerParams::MergePartialFromCodedStream(CoreML::Specification::FlattenTo2DLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReshapeLikeLayerParams *CoreML::Specification::ReshapeLikeLayerParams::ReshapeLikeLayerParams(CoreML::Specification::ReshapeLikeLayerParams *this)
{
  *(void *)this = &unk_1F36212A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReshapeLikeLayerParams *)&CoreML::Specification::_ReshapeLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1099BC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ReshapeStaticLayerParams *CoreML::Specification::ReshapeStaticLayerParams::ReshapeStaticLayerParams(CoreML::Specification::ReshapeStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3622178;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReshapeStaticLayerParams *)&CoreML::Specification::_ReshapeStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC109AB8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReshapeDynamicLayerParams *CoreML::Specification::ReshapeDynamicLayerParams::ReshapeDynamicLayerParams(CoreML::Specification::ReshapeDynamicLayerParams *this)
{
  *(void *)this = &unk_1F3622768;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ReshapeDynamicLayerParams *)&CoreML::Specification::_ReshapeDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC109D48(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RankPreservingReshapeLayerParams *CoreML::Specification::RankPreservingReshapeLayerParams::RankPreservingReshapeLayerParams(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36245B0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RankPreservingReshapeLayerParams *)&CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC109E44(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RankPreservingReshapeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          uint64_t v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConstantPaddingLayerParams *CoreML::Specification::ConstantPaddingLayerParams::ConstantPaddingLayerParams(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3622A60;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ConstantPaddingLayerParams *)&CoreML::Specification::_ConstantPaddingLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 11) = 0;
  return this;
}

void sub_1DC10A0E8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ConstantPaddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConstantPaddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          BOOL v6 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0) {
              goto LABEL_27;
            }
            goto LABEL_8;
          }
          uint64_t v7 = *v6;
          if (*v6 < 1) {
            goto LABEL_7;
          }
          *(void *)a2 = v6 + 1;
          unint64_t v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v10 = v8 >> 3;
          if (v8 >> 3 != 3) {
            break;
          }
          if (v8 != 24) {
            goto LABEL_27;
          }
          int v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((unsigned char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = Varint64Fallback != 0;
        }
        if (v10 != 2) {
          break;
        }
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x12u, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 18) {
            goto LABEL_27;
          }
          unint64_t v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
      if (v10 != 1 || v8 != 13) {
        break;
      }
      unsigned int v36 = 0;
      BOOL v12 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
        if (!result) {
          return result;
        }
        unsigned int v13 = v36;
      }
      else
      {
        unsigned int v13 = *v12;
        *(void *)a2 = v12 + 1;
      }
      *((_DWORD *)this + 9) = v13;
    }
LABEL_27:
    if (v8) {
      BOOL v18 = (v8 & 7) == 4;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomNormalLikeLayerParams *CoreML::Specification::RandomNormalLikeLayerParams::RandomNormalLikeLayerParams(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  *(void *)this = &unk_1F3623510;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomNormalLikeLayerParams *)&CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC10A428(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        uint64_t v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomNormalStaticLayerParams *CoreML::Specification::RandomNormalStaticLayerParams::RandomNormalStaticLayerParams(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3623B98;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomNormalStaticLayerParams *)&CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_1DC10A64C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_26;
          }
          unsigned int v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          *((void *)this + 5) = Varint64Fallback;
          continue;
        case 2u:
          if (v8 != 21) {
            goto LABEL_26;
          }
          unsigned int v37 = 0;
          BOOL v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v37);
            if (!result) {
              return result;
            }
            unsigned int v13 = v37;
          }
          else
          {
            unsigned int v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 12) = v13;
          continue;
        case 3u:
          if (v8 != 29) {
            goto LABEL_26;
          }
          unsigned int v36 = 0;
          unsigned int v14 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
            if (!result) {
              return result;
            }
            unsigned int v15 = v36;
          }
          else
          {
            unsigned int v15 = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v15;
          continue;
        case 4u:
          if (v8 == 32)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x22u, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 34) {
              goto LABEL_26;
            }
            unsigned int v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v21 = *((_DWORD *)a2 + 10);
              uint64_t v22 = *((int *)a2 + 11);
              unint64_t v23 = *((void *)a2 + 1);
              int v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF) {
                break;
              }
              int v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
                unint64_t v26 = v27;
              }
              else
              {
                unint64_t v26 = *v25;
                *(void *)a2 = v25 + 1;
              }
              signed int v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                signed int v29 = *v5;
              }
              uint64_t v30 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(void *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
            uint64_t v31 = v23 + v22;
            *((void *)a2 + 1) = v23 + v22;
            int v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20) {
              int v32 = v20;
            }
            BOOL v33 = __OFSUB__(v24, v32);
            int v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0)) {
              int v34 = 0;
            }
            else {
              *((void *)a2 + 1) = v31 - v34;
            }
            *((_DWORD *)a2 + 11) = v34;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        default:
          goto LABEL_26;
      }
    }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

CoreML::Specification::RandomNormalDynamicLayerParams *CoreML::Specification::RandomNormalDynamicLayerParams::RandomNormalDynamicLayerParams(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  *(void *)this = &unk_1F3623E90;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomNormalDynamicLayerParams *)&CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC10A9F8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        unsigned int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomUniformLikeLayerParams *CoreML::Specification::RandomUniformLikeLayerParams::RandomUniformLikeLayerParams(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  *(void *)this = &unk_1F3623808;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomUniformLikeLayerParams *)&CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC10AC10(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        unsigned int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomUniformStaticLayerParams *CoreML::Specification::RandomUniformStaticLayerParams::RandomUniformStaticLayerParams(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3623F28;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomUniformStaticLayerParams *)&CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_1DC10AE34(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_26;
          }
          unsigned int v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          *((void *)this + 5) = Varint64Fallback;
          continue;
        case 2u:
          if (v8 != 21) {
            goto LABEL_26;
          }
          unsigned int v37 = 0;
          BOOL v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v37);
            if (!result) {
              return result;
            }
            unsigned int v13 = v37;
          }
          else
          {
            unsigned int v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 12) = v13;
          continue;
        case 3u:
          if (v8 != 29) {
            goto LABEL_26;
          }
          unsigned int v36 = 0;
          unsigned int v14 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
            if (!result) {
              return result;
            }
            unsigned int v15 = v36;
          }
          else
          {
            unsigned int v15 = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v15;
          continue;
        case 4u:
          if (v8 == 32)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x22u, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 34) {
              goto LABEL_26;
            }
            unsigned int v16 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v16;
              *(void *)a2 = v16 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v21 = *((_DWORD *)a2 + 10);
              uint64_t v22 = *((int *)a2 + 11);
              unint64_t v23 = *((void *)a2 + 1);
              int v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF) {
                break;
              }
              int v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
                unint64_t v26 = v27;
              }
              else
              {
                unint64_t v26 = *v25;
                *(void *)a2 = v25 + 1;
              }
              signed int v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                signed int v29 = *v5;
              }
              uint64_t v30 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(void *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
            uint64_t v31 = v23 + v22;
            *((void *)a2 + 1) = v23 + v22;
            int v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20) {
              int v32 = v20;
            }
            BOOL v33 = __OFSUB__(v24, v32);
            int v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0)) {
              int v34 = 0;
            }
            else {
              *((void *)a2 + 1) = v31 - v34;
            }
            *((_DWORD *)a2 + 11) = v34;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        default:
          goto LABEL_26;
      }
    }
LABEL_26:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

CoreML::Specification::RandomUniformDynamicLayerParams *CoreML::Specification::RandomUniformDynamicLayerParams::RandomUniformDynamicLayerParams(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  *(void *)this = &unk_1F3624058;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomUniformDynamicLayerParams *)&CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC10B1E0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 29) {
            goto LABEL_25;
          }
          unsigned int v20 = 0;
          unsigned int v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v14 = v20;
          }
          else
          {
            unsigned int v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_25;
        }
        unsigned int v21 = 0;
        unsigned int v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result) {
            return result;
          }
          unsigned int v16 = v21;
        }
        else
        {
          unsigned int v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliLikeLayerParams *CoreML::Specification::RandomBernoulliLikeLayerParams::RandomBernoulliLikeLayerParams(CoreML::Specification::RandomBernoulliLikeLayerParams *this)
{
  *(void *)this = &unk_1F3623DF8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomBernoulliLikeLayerParams *)&CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC10B3F4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliLikeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v17 = 0;
        BOOL v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliStaticLayerParams *CoreML::Specification::RandomBernoulliStaticLayerParams::RandomBernoulliStaticLayerParams(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3624518;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomBernoulliStaticLayerParams *)&CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_1DC10B5C0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0) {
              goto LABEL_27;
            }
            goto LABEL_8;
          }
          uint64_t v7 = *v6;
          if (*v6 < 1) {
            goto LABEL_7;
          }
          *(void *)a2 = v6 + 1;
          unint64_t v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_27;
          }
LABEL_8:
          unsigned int v10 = v8 >> 3;
          if (v8 >> 3 != 3) {
            break;
          }
          if (v8 == 24)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x1Au, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 26) {
              goto LABEL_27;
            }
            BOOL v14 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v14;
              *(void *)a2 = v14 + 1;
            }
            int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v21 = *((_DWORD *)a2 + 10);
              uint64_t v22 = *((int *)a2 + 11);
              unint64_t v23 = *((void *)a2 + 1);
              int v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF) {
                break;
              }
              int v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
                unint64_t v26 = Varint64Fallback;
              }
              else
              {
                unint64_t v26 = *v25;
                *(void *)a2 = v25 + 1;
              }
              signed int v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                signed int v29 = *v5;
              }
              uint64_t v30 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(void *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
            uint64_t v31 = v23 + v22;
            *((void *)a2 + 1) = v23 + v22;
            int v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20) {
              int v32 = v20;
            }
            BOOL v33 = __OFSUB__(v24, v32);
            int v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0)) {
              int v34 = 0;
            }
            else {
              *((void *)a2 + 1) = v31 - v34;
            }
            *((_DWORD *)a2 + 11) = v34;
            *((unsigned char *)a2 + 36) = 0;
          }
        }
        if (v10 != 2) {
          break;
        }
        if (v8 != 21) {
          goto LABEL_27;
        }
        unsigned int v36 = 0;
        unsigned int v16 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
          if (!result) {
            return result;
          }
          unsigned int v17 = v36;
        }
        else
        {
          unsigned int v17 = *v16;
          *(void *)a2 = v16 + 1;
        }
        *((_DWORD *)this + 12) = v17;
      }
      if (v10 != 1 || v8 != 8) {
        break;
      }
      BOOL v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        unint64_t v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v19 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v13 = *v12;
        *(void *)a2 = v12 + 1;
      }
      *((void *)this + 5) = v13;
    }
LABEL_27:
    if (v8) {
      BOOL v18 = (v8 & 7) == 4;
    }
    else {
      BOOL v18 = 1;
    }
    if (v18) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliDynamicLayerParams *CoreML::Specification::RandomBernoulliDynamicLayerParams::RandomBernoulliDynamicLayerParams(CoreML::Specification::RandomBernoulliDynamicLayerParams *this)
{
  *(void *)this = &unk_1F3624810;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomBernoulliDynamicLayerParams *)&CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  return this;
}

void sub_1DC10B8F4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliDynamicLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v17 = 0;
        BOOL v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::CategoricalDistributionLayerParams *CoreML::Specification::CategoricalDistributionLayerParams::CategoricalDistributionLayerParams(CoreML::Specification::CategoricalDistributionLayerParams *this)
{
  *(void *)this = &unk_1F36248A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CategoricalDistributionLayerParams *)&CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1DC10BAB8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::CategoricalDistributionLayerParams::MergePartialFromCodedStream(CoreML::Specification::CategoricalDistributionLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_28;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_28;
          }
          unsigned int v9 = *a2;
          if (*a2 >= a2[1] || *v9 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v20 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v9;
            *a2 = v9 + 1;
          }
          *((void *)this + 2) = Varint64Fallback;
          continue;
        case 2u:
          if (v7 != 16) {
            goto LABEL_28;
          }
          BOOL v11 = *a2;
          if (*a2 >= a2[1] || *v11 < 0)
          {
            unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v12 = *v11;
            *a2 = v11 + 1;
          }
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v12;
          continue;
        case 3u:
          if (v7 != 24) {
            goto LABEL_28;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unint64_t v14 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v22 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v14 = *v13;
            *a2 = v13 + 1;
          }
          *((unsigned char *)this + 32) = v14 != 0;
          break;
        case 4u:
          if (v7 != 37) {
            goto LABEL_28;
          }
          unsigned int v25 = 0;
          char v15 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
            if (!result) {
              return result;
            }
            unsigned int v16 = v25;
          }
          else
          {
            unsigned int v16 = *v15;
            *a2 = (char *)(v15 + 1);
          }
          *((_DWORD *)this + 9) = v16;
          continue;
        case 5u:
          if (v7 != 45) {
            goto LABEL_28;
          }
          unsigned int v24 = 0;
          unsigned int v17 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v24);
            if (!result) {
              return result;
            }
            unsigned int v18 = v24;
          }
          else
          {
            unsigned int v18 = *v17;
            *a2 = (char *)(v17 + 1);
          }
          *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v18;
          continue;
        default:
          goto LABEL_28;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_28:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::ReduceL1LayerParams *CoreML::Specification::ReduceL1LayerParams::ReduceL1LayerParams(CoreML::Specification::ReduceL1LayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361F750;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceL1LayerParams *)&CoreML::Specification::_ReduceL1LayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10BD98(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceL1LayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceL1LayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceL2LayerParams *CoreML::Specification::ReduceL2LayerParams::ReduceL2LayerParams(CoreML::Specification::ReduceL2LayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361F7E8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceL2LayerParams *)&CoreML::Specification::_ReduceL2LayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10C0E0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceL2LayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceL2LayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMaxLayerParams *CoreML::Specification::ReduceMaxLayerParams::ReduceMaxLayerParams(CoreML::Specification::ReduceMaxLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361FE70;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMaxLayerParams *)&CoreML::Specification::_ReduceMaxLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10C428(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMaxLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMinLayerParams *CoreML::Specification::ReduceMinLayerParams::ReduceMinLayerParams(CoreML::Specification::ReduceMinLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361FF08;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMinLayerParams *)&CoreML::Specification::_ReduceMinLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10C770(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMinLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMinLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceSumLayerParams *CoreML::Specification::ReduceSumLayerParams::ReduceSumLayerParams(CoreML::Specification::ReduceSumLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361FFA0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceSumLayerParams *)&CoreML::Specification::_ReduceSumLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10CAB8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceSumLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceProdLayerParams *CoreML::Specification::ReduceProdLayerParams::ReduceProdLayerParams(CoreML::Specification::ReduceProdLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3620A50;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceProdLayerParams *)&CoreML::Specification::_ReduceProdLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10CE00(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceProdLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceProdLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMeanLayerParams *CoreML::Specification::ReduceMeanLayerParams::ReduceMeanLayerParams(CoreML::Specification::ReduceMeanLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36209B8;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMeanLayerParams *)&CoreML::Specification::_ReduceMeanLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10D148(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMeanLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMeanLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLogSumLayerParams *CoreML::Specification::ReduceLogSumLayerParams::ReduceLogSumLayerParams(CoreML::Specification::ReduceLogSumLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3621B88;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceLogSumLayerParams *)&CoreML::Specification::_ReduceLogSumLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10D490(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceLogSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLogSumLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceSumSquareLayerParams *CoreML::Specification::ReduceSumSquareLayerParams::ReduceSumSquareLayerParams(CoreML::Specification::ReduceSumSquareLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3622E88;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceSumSquareLayerParams *)&CoreML::Specification::_ReduceSumSquareLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10D7D8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceSumSquareLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceSumSquareLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLogSumExpLayerParams *CoreML::Specification::ReduceLogSumExpLayerParams::ReduceLogSumExpLayerParams(CoreML::Specification::ReduceLogSumExpLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3622DF0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceLogSumExpLayerParams *)&CoreML::Specification::_ReduceLogSumExpLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC10DB20(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceLogSumExpLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLogSumExpLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24) {
          break;
        }
        unsigned int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((unsigned char *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16) {
          break;
        }
        char v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1) {
          break;
        }
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
        }
          }
        else
        {
          if (v8 != 10) {
            break;
          }
          BOOL v11 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v11;
            *(void *)a2 = v11 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            int v21 = *((_DWORD *)a2 + 10);
            uint64_t v22 = *((int *)a2 + 11);
            unint64_t v23 = *((void *)a2 + 1);
            int v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF) {
              break;
            }
            unsigned int v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(void *)a2) < 1) {
              break;
            }
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              unint64_t v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0) {
                return 0;
              }
              unint64_t v26 = v27;
            }
            else
            {
              unint64_t v26 = *v25;
              *(void *)a2 = v25 + 1;
            }
            signed int v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              signed int v29 = *v5;
            }
            uint64_t v30 = *((void *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(void *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v20;
          uint64_t v31 = v23 + v22;
          *((void *)a2 + 1) = v23 + v22;
          int v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20) {
            int v32 = v20;
          }
          BOOL v33 = __OFSUB__(v24, v32);
          int v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0)) {
            int v34 = 0;
          }
          else {
            *((void *)a2 + 1) = v31 - v34;
          }
          *((_DWORD *)a2 + 11) = v34;
          *((unsigned char *)a2 + 36) = 0;
        }
      }
    }
    if (v8) {
      BOOL v17 = (v8 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::WhereNonZeroLayerParams *CoreML::Specification::WhereNonZeroLayerParams::WhereNonZeroLayerParams(CoreML::Specification::WhereNonZeroLayerParams *this)
{
  *(void *)this = &unk_1F3621D50;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::WhereNonZeroLayerParams *)&CoreML::Specification::_WhereNonZeroLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC10DE58(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::WhereNonZeroLayerParams::MergePartialFromCodedStream(CoreML::Specification::WhereNonZeroLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MatrixBandPartLayerParams *CoreML::Specification::MatrixBandPartLayerParams::MatrixBandPartLayerParams(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  *(void *)this = &unk_1F36225A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MatrixBandPartLayerParams *)&CoreML::Specification::_MatrixBandPartLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC10DF4C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MatrixBandPartLayerParams::MergePartialFromCodedStream(CoreML::Specification::MatrixBandPartLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LowerTriangularLayerParams *CoreML::Specification::LowerTriangularLayerParams::LowerTriangularLayerParams(CoreML::Specification::LowerTriangularLayerParams *this)
{
  *(void *)this = &unk_1F3622CC0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LowerTriangularLayerParams *)&CoreML::Specification::_LowerTriangularLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC10E100(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LowerTriangularLayerParams::MergePartialFromCodedStream(CoreML::Specification::LowerTriangularLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::UpperTriangularLayerParams *CoreML::Specification::UpperTriangularLayerParams::UpperTriangularLayerParams(CoreML::Specification::UpperTriangularLayerParams *this)
{
  *(void *)this = &unk_1F3622FB8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::UpperTriangularLayerParams *)&CoreML::Specification::_UpperTriangularLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC10E268(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::UpperTriangularLayerParams::MergePartialFromCodedStream(CoreML::Specification::UpperTriangularLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = Varint64Fallback;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::WhereBroadcastableLayerParams *CoreML::Specification::WhereBroadcastableLayerParams::WhereBroadcastableLayerParams(CoreML::Specification::WhereBroadcastableLayerParams *this)
{
  *(void *)this = &unk_1F3623CC8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::WhereBroadcastableLayerParams *)&CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC10E3CC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::WhereBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::WhereBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LayerNormalizationLayerParams *CoreML::Specification::LayerNormalizationLayerParams::LayerNormalizationLayerParams(CoreML::Specification::LayerNormalizationLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36239D0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  return this;
}

void sub_1DC10E4CC(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LayerNormalizationLayerParams::MergePartialFromCodedStream(CoreML::Specification::LayerNormalizationLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 8)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v8 != 10) {
              goto LABEL_27;
            }
            BOOL v10 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v10;
              *(void *)a2 = v10 + 1;
            }
            int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              int v25 = *((_DWORD *)a2 + 10);
              uint64_t v26 = *((int *)a2 + 11);
              unint64_t v27 = *((void *)a2 + 1);
              int v28 = *((_DWORD *)a2 + 6);
              if (v25 == 0x7FFFFFFF) {
                break;
              }
              signed int v29 = *(char **)a2;
              if ((int)(v25 - v28 + v26 + v27 - *(void *)a2) < 1) {
                break;
              }
              if ((unint64_t)v29 >= v27 || *v29 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v32 & 1) == 0) {
                  return 0;
                }
                unint64_t v30 = Varint64Fallback;
              }
              else
              {
                unint64_t v30 = *v29;
                *(void *)a2 = v29 + 1;
              }
              signed int v33 = *((_DWORD *)this + 4);
              if (v33 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v33 + 1);
                signed int v33 = *v5;
              }
              uint64_t v34 = *((void *)this + 3);
              *((_DWORD *)this + 4) = v33 + 1;
              *(void *)(v34 + 8 * v33 + 8) = v30;
            }
            *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v24;
            uint64_t v35 = v27 + v26;
            *((void *)a2 + 1) = v27 + v26;
            int v36 = *((_DWORD *)a2 + 12);
            if (v36 >= v24) {
              int v36 = v24;
            }
            BOOL v21 = __OFSUB__(v28, v36);
            int v37 = v28 - v36;
            if ((v37 < 0) ^ v21 | (v37 == 0)) {
              int v37 = 0;
            }
            else {
              *((void *)a2 + 1) = v35 - v37;
            }
            *((_DWORD *)a2 + 11) = v37;
            *((unsigned char *)a2 + 36) = 0;
          }
          break;
        case 2u:
          if (v8 != 21) {
            goto LABEL_27;
          }
          unsigned int v38 = 0;
          unint64_t v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v38);
            if (!result) {
              return result;
            }
            unsigned int v13 = v38;
          }
          else
          {
            unsigned int v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 14) = v13;
          continue;
        case 3u:
          if (v8 != 26) {
            goto LABEL_27;
          }
          BOOL v14 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
          if (!v14) {
            operator new();
          }
          goto LABEL_24;
        case 4u:
          if (v8 != 34) {
            goto LABEL_27;
          }
          BOOL v14 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
          if (!v14) {
            operator new();
          }
LABEL_24:
          char v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0) {
              return 0;
            }
          }
          else
          {
            int v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          int v20 = *((_DWORD *)a2 + 13);
          BOOL v21 = __OFSUB__(v20--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v20;
          if (v20 < 0 != v21) {
            return 0;
          }
          int v22 = v18;
          BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v14, a2, v19);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_27;
      }
    }
LABEL_27:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC10E85C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::NonMaximumSuppressionLayerParams *CoreML::Specification::NonMaximumSuppressionLayerParams::NonMaximumSuppressionLayerParams(CoreML::Specification::NonMaximumSuppressionLayerParams *this)
{
  *(void *)this = &unk_1F3624480;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppressionLayerParams *)&CoreML::Specification::_NonMaximumSuppressionLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC10E8FC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NonMaximumSuppressionLayerParams::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppressionLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 13) {
            goto LABEL_24;
          }
          unsigned int v21 = 0;
          unsigned int v9 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v10 = v21;
          }
          else
          {
            unsigned int v10 = *v9;
            *a2 = (char *)(v9 + 1);
          }
          *((_DWORD *)this + 4) = v10;
          continue;
        case 2u:
          if (v7 != 21) {
            goto LABEL_24;
          }
          unsigned int v20 = 0;
          unint64_t v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v12 = v20;
          }
          else
          {
            unsigned int v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 24) {
            goto LABEL_24;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = *v13;
            *a2 = v13 + 1;
          }
          continue;
        case 4u:
          if (v7 != 32) {
            goto LABEL_24;
          }
          BOOL v14 = *a2;
          if (*a2 >= a2[1] || *v14 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v14;
            *a2 = v14 + 1;
          }
          *((unsigned char *)this + 32) = Varint64Fallback != 0;
          break;
        default:
          goto LABEL_24;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::OneHotLayerParams *CoreML::Specification::OneHotLayerParams::OneHotLayerParams(CoreML::Specification::OneHotLayerParams *this)
{
  *(void *)this = &unk_1F361E288;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::OneHotLayerParams *)&CoreML::Specification::_OneHotLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC10EB90(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::OneHotLayerParams::MergePartialFromCodedStream(CoreML::Specification::OneHotLayerParams *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_24;
          }
          unsigned int v9 = *a2;
          if (*a2 >= a2[1] || *v9 < 0)
          {
            *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            *((void *)this + 2) = *v9;
            *a2 = v9 + 1;
          }
          continue;
        case 2u:
          if (v7 != 16) {
            goto LABEL_24;
          }
          unsigned int v10 = *a2;
          if (*a2 >= a2[1] || *v10 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v10;
            *a2 = v10 + 1;
          }
          *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = Varint64Fallback;
          break;
        case 3u:
          if (v7 != 29) {
            goto LABEL_24;
          }
          unsigned int v21 = 0;
          unsigned int v12 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result) {
              return result;
            }
            unsigned int v13 = v21;
          }
          else
          {
            unsigned int v13 = *v12;
            *a2 = (char *)(v12 + 1);
          }
          *((_DWORD *)this + 8) = v13;
          continue;
        case 4u:
          if (v7 != 37) {
            goto LABEL_24;
          }
          unsigned int v20 = 0;
          BOOL v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result) {
              return result;
            }
            unsigned int v15 = v20;
          }
          else
          {
            unsigned int v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 9) = v15;
          continue;
        default:
          goto LABEL_24;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::CumSumLayerParams *CoreML::Specification::CumSumLayerParams::CumSumLayerParams(CoreML::Specification::CumSumLayerParams *this)
{
  *(void *)this = &unk_1F361DF90;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CumSumLayerParams *)&CoreML::Specification::_CumSumLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_WORD *)this + 12) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1DC10EE1C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CumSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::CumSumLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 24) {
            goto LABEL_25;
          }
          unsigned int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v19 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t Varint64Fallback = *v13;
            *a2 = v13 + 1;
          }
          *((unsigned char *)this + 25) = Varint64Fallback != 0;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_25;
        }
        unsigned int v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          unint64_t v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v20 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v16 = *v15;
          *a2 = v15 + 1;
        }
        *((unsigned char *)this + 24) = v16 != 0;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unint64_t v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v12 = *v11;
        *a2 = v11 + 1;
      }
      *((void *)this + 2) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ClampedReLULayerParams *CoreML::Specification::ClampedReLULayerParams::ClampedReLULayerParams(CoreML::Specification::ClampedReLULayerParams *this)
{
  *(void *)this = &unk_1F3620CB0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ClampedReLULayerParams *)&CoreML::Specification::_ClampedReLULayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC10F02C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ClampedReLULayerParams::MergePartialFromCodedStream(CoreML::Specification::ClampedReLULayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unint64_t v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        break;
      }
      unsigned int v17 = 0;
      unsigned int v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ArgSortLayerParams *CoreML::Specification::ArgSortLayerParams::ArgSortLayerParams(CoreML::Specification::ArgSortLayerParams *this)
{
  *(void *)this = &unk_1F361E748;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgSortLayerParams *)&CoreML::Specification::_ArgSortLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1DC10F1F8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgSortLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgSortLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 16) {
          goto LABEL_20;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((unsigned char *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::Pooling3DLayerParams *CoreML::Specification::Pooling3DLayerParams::Pooling3DLayerParams(CoreML::Specification::Pooling3DLayerParams *this)
{
  *(void *)this = &unk_1F361FD40;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Pooling3DLayerParams *)&CoreML::Specification::_Pooling3DLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_OWORD *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1DC10F3B8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Pooling3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::Pooling3DLayerParams *this, char **a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 < a2[1]) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_13;
      }
LABEL_7:
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
    }
      }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_7;
        }
        unsigned int v10 = *a2;
        if (*a2 >= a2[1])
        {
          int v11 = 0;
        }
        else
        {
          int v11 = *v10;
          if ((*v10 & 0x80000000) == 0)
          {
            *a2 = v10 + 1;
            goto LABEL_78;
          }
        }
        uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v11);
        int v11 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_78:
        *((_DWORD *)this + 4) = v11;
        continue;
      case 2u:
        if (v7 != 16) {
          goto LABEL_7;
        }
        unint64_t v12 = *a2;
        if (*a2 >= a2[1])
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_81;
          }
        }
        uint64_t v42 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v13);
        int v13 = v42;
        if (v42 < 0) {
          return 0;
        }
LABEL_81:
        *((_DWORD *)this + 5) = v13;
        continue;
      case 3u:
        if (v7 != 24) {
          goto LABEL_7;
        }
        BOOL v14 = *a2;
        if (*a2 >= a2[1])
        {
          int v15 = 0;
        }
        else
        {
          int v15 = *v14;
          if ((*v14 & 0x80000000) == 0)
          {
            *a2 = v14 + 1;
            goto LABEL_84;
          }
        }
        uint64_t v43 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v15);
        int v15 = v43;
        if (v43 < 0) {
          return 0;
        }
LABEL_84:
        *((_DWORD *)this + 6) = v15;
        continue;
      case 4u:
        if (v7 != 32) {
          goto LABEL_7;
        }
        char v16 = *a2;
        if (*a2 >= a2[1])
        {
          int v17 = 0;
        }
        else
        {
          int v17 = *v16;
          if ((*v16 & 0x80000000) == 0)
          {
            *a2 = v16 + 1;
            goto LABEL_87;
          }
        }
        uint64_t v44 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v17);
        int v17 = v44;
        if (v44 < 0) {
          return 0;
        }
LABEL_87:
        *((_DWORD *)this + 7) = v17;
        continue;
      case 5u:
        if (v7 != 40) {
          goto LABEL_7;
        }
        char v18 = *a2;
        if (*a2 >= a2[1])
        {
          int v19 = 0;
        }
        else
        {
          int v19 = *v18;
          if ((*v18 & 0x80000000) == 0)
          {
            *a2 = v18 + 1;
            goto LABEL_90;
          }
        }
        uint64_t v45 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v19);
        int v19 = v45;
        if (v45 < 0) {
          return 0;
        }
LABEL_90:
        *((_DWORD *)this + 8) = v19;
        continue;
      case 6u:
        if (v7 != 48) {
          goto LABEL_7;
        }
        char v20 = *a2;
        if (*a2 >= a2[1])
        {
          int v21 = 0;
        }
        else
        {
          int v21 = *v20;
          if ((*v20 & 0x80000000) == 0)
          {
            *a2 = v20 + 1;
            goto LABEL_93;
          }
        }
        uint64_t v46 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v21);
        int v21 = v46;
        if (v46 < 0) {
          return 0;
        }
LABEL_93:
        *((_DWORD *)this + 9) = v21;
        continue;
      case 7u:
        if (v7 != 56) {
          goto LABEL_7;
        }
        int v22 = *a2;
        if (*a2 >= a2[1])
        {
          int v23 = 0;
        }
        else
        {
          int v23 = *v22;
          if ((*v22 & 0x80000000) == 0)
          {
            *a2 = v22 + 1;
            goto LABEL_96;
          }
        }
        uint64_t v47 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v23);
        int v23 = v47;
        if (v47 < 0) {
          return 0;
        }
LABEL_96:
        *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v23;
        continue;
      case 8u:
        if (v7 != 64) {
          goto LABEL_7;
        }
        int v24 = *a2;
        if (*a2 >= a2[1])
        {
          int v25 = 0;
        }
        else
        {
          int v25 = *v24;
          if ((*v24 & 0x80000000) == 0)
          {
            *a2 = v24 + 1;
            goto LABEL_99;
          }
        }
        uint64_t v48 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v25);
        int v25 = v48;
        if (v48 < 0) {
          return 0;
        }
LABEL_99:
        *((_DWORD *)this + 11) = v25;
        continue;
      case 9u:
        if (v7 != 72) {
          goto LABEL_7;
        }
        uint64_t v26 = *a2;
        if (*a2 >= a2[1])
        {
          int v27 = 0;
        }
        else
        {
          int v27 = *v26;
          if ((*v26 & 0x80000000) == 0)
          {
            *a2 = v26 + 1;
            goto LABEL_102;
          }
        }
        uint64_t v49 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v27);
        int v27 = v49;
        if (v49 < 0) {
          return 0;
        }
LABEL_102:
        *((_DWORD *)this + 12) = v27;
        continue;
      case 0xAu:
        if (v7 != 80) {
          goto LABEL_7;
        }
        int v28 = *a2;
        if (*a2 >= a2[1])
        {
          int v29 = 0;
        }
        else
        {
          int v29 = *v28;
          if ((*v28 & 0x80000000) == 0)
          {
            *a2 = v28 + 1;
            goto LABEL_105;
          }
        }
        uint64_t v50 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v29);
        int v29 = v50;
        if (v50 < 0) {
          return 0;
        }
LABEL_105:
        *((_DWORD *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
        continue;
      case 0xBu:
        if (v7 != 88) {
          goto LABEL_7;
        }
        unint64_t v30 = *a2;
        if (*a2 >= a2[1])
        {
          int v31 = 0;
        }
        else
        {
          int v31 = *v30;
          if ((*v30 & 0x80000000) == 0)
          {
            *a2 = v30 + 1;
            goto LABEL_108;
          }
        }
        uint64_t v51 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v31);
        int v31 = v51;
        if (v51 < 0) {
          return 0;
        }
LABEL_108:
        *((_DWORD *)this + 14) = v31;
        continue;
      case 0xCu:
        if (v7 != 96) {
          goto LABEL_7;
        }
        char v32 = *a2;
        if (*a2 >= a2[1])
        {
          int v33 = 0;
        }
        else
        {
          int v33 = *v32;
          if ((*v32 & 0x80000000) == 0)
          {
            *a2 = v32 + 1;
            goto LABEL_111;
          }
        }
        uint64_t v52 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v33);
        int v33 = v52;
        if (v52 < 0) {
          return 0;
        }
LABEL_111:
        *((_DWORD *)this + 15) = v33;
        continue;
      case 0xDu:
        if (v7 != 104) {
          goto LABEL_7;
        }
        uint64_t v34 = *a2;
        if (*a2 >= a2[1])
        {
          int v35 = 0;
        }
        else
        {
          int v35 = *v34;
          if ((*v34 & 0x80000000) == 0)
          {
            *a2 = v34 + 1;
            goto LABEL_114;
          }
        }
        uint64_t v53 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v35);
        int v35 = v53;
        if (v53 < 0) {
          return 0;
        }
LABEL_114:
        *((_DWORD *)this + 16) = v35;
        continue;
      case 0xEu:
        if (v7 != 112) {
          goto LABEL_7;
        }
        int v36 = *a2;
        if (*a2 >= a2[1] || *v36 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v40 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v36;
          *a2 = v36 + 1;
        }
        *((unsigned char *)this + 68) = Varint64Fallback != 0;
        continue;
      case 0xFu:
        if (v7 != 120) {
          goto LABEL_7;
        }
        unsigned int v38 = *a2;
        if (*a2 >= a2[1])
        {
          int v39 = 0;
        }
        else
        {
          int v39 = *v38;
          if ((*v38 & 0x80000000) == 0)
          {
            *a2 = v38 + 1;
            goto LABEL_117;
          }
        }
        uint64_t v54 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v39);
        int v39 = v54;
        if ((v54 & 0x8000000000000000) == 0)
        {
LABEL_117:
          *((_DWORD *)this + 18) = v39;
          continue;
        }
        return 0;
      default:
        goto LABEL_7;
    }
  }
}

CoreML::Specification::GlobalPooling3DLayerParams *CoreML::Specification::GlobalPooling3DLayerParams::GlobalPooling3DLayerParams(CoreML::Specification::GlobalPooling3DLayerParams *this)
{
  *(void *)this = &unk_1F3622B90;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::GlobalPooling3DLayerParams *)&CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC10F9B0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GlobalPooling3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::GlobalPooling3DLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SliceBySizeLayerParams *CoreML::Specification::SliceBySizeLayerParams::SliceBySizeLayerParams(CoreML::Specification::SliceBySizeLayerParams *this)
{
  *(void *)this = &unk_1F3621338;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SliceBySizeLayerParams *)&CoreML::Specification::_SliceBySizeLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC10FB20(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceBySizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceBySizeLayerParams *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 3) {
          break;
        }
        if (v7 != 24) {
          goto LABEL_20;
        }
        int v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 2 || v7 != 16) {
        break;
      }
      BOOL v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unint64_t v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = v10 + 1;
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::Convolution3DLayerParams *CoreML::Specification::Convolution3DLayerParams::Convolution3DLayerParams(CoreML::Specification::Convolution3DLayerParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3621E80;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 34) = 0;
  *(_OWORD *)((char *)this + 12CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  return this;
}

void sub_1DC10FCF8(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::Convolution3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::Convolution3DLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            while (1)
            {
              while (1)
              {
LABEL_2:
                uint64_t v6 = *(unsigned __int8 **)a2;
                unint64_t v7 = *((void *)a2 + 1);
                if (*(void *)a2 >= v7)
                {
                  LODWORD(v9) = 0;
                }
                else
                {
                  unint64_t v8 = v6 + 1;
                  uint64_t v9 = *v6;
                  if ((char)*v6 >= 1)
                  {
                    *(void *)a2 = v8;
                    unint64_t v10 = v9 | 0x100000000;
                    if ((v10 & 0x100000000) == 0) {
                      goto LABEL_9;
                    }
                    goto LABEL_17;
                  }
                  if ((unint64_t)v8 < v7)
                  {
                    int v11 = *v8;
                    if ((v9 & ~v11) >= 0x80)
                    {
                      *(void *)a2 = v6 + 2;
                      unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
                      goto LABEL_17;
                    }
                  }
                }
                unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
                unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
                if ((v10 & 0x100000000) == 0) {
                  goto LABEL_9;
                }
LABEL_17:
                unsigned int v14 = v10 >> 3;
                if (v10 >> 3 <= 0x31) {
                  break;
                }
                if (v10 >> 3 <= 0x45)
                {
                  if (v14 == 50)
                  {
                    if (v10 != 144) {
                      goto LABEL_9;
                    }
                    uint64_t v54 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v54 < 0)
                    {
                      unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                      if ((v69 & 1) == 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      unint64_t Varint64Fallback = *v54;
                      *(void *)a2 = v54 + 1;
                    }
                    *((unsigned char *)this + 104) = Varint64Fallback != 0;
                  }
                  else
                  {
                    if (v14 == 60)
                    {
                      if (v10 != 226) {
                        goto LABEL_9;
                      }
                      int v21 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
                      if (!v21) {
                        operator new();
                      }
                    }
                    else
                    {
                      if (v14 != 61 || v10 != 234) {
                        goto LABEL_9;
                      }
                      int v21 = (CoreML::Specification::WeightParams *)*((void *)this + 6);
                      if (!v21) {
                        operator new();
                      }
                    }
                    int v56 = *(char **)a2;
                    if (*(void *)a2 >= *((void *)a2 + 1) || *v56 < 0)
                    {
                      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (VarintSizeAsIntFallback < 0) {
                        return 0;
                      }
                    }
                    else
                    {
                      int VarintSizeAsIntFallback = *v56;
                      *(void *)a2 = v56 + 1;
                    }
                    int v62 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                    int v64 = *((_DWORD *)a2 + 13);
                    BOOL v65 = __OFSUB__(v64--, 1);
                    *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v64;
                    if (v64 < 0 != v65) {
                      return 0;
                    }
                    int v66 = v62;
                    BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v21, a2, v63);
                    if (!result) {
                      return result;
                    }
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v66)) {
                      return 0;
                    }
                  }
                }
                else
                {
                  switch(v14)
                  {
                    case 'F':
                      if (v10 != 48) {
                        goto LABEL_9;
                      }
                      int v17 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v18 = 0;
                      }
                      else
                      {
                        int v18 = *v17;
                        if ((*v17 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v17 + 1;
                          goto LABEL_161;
                        }
                      }
                      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
                      int v18 = Varint32Fallback;
                      if (Varint32Fallback < 0) {
                        return 0;
                      }
LABEL_161:
                      *((_DWORD *)this + 27) = v18;
                      continue;
                    case 'P':
                      if (v10 != 128) {
                        goto LABEL_9;
                      }
                      int v24 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v25 = 0;
                      }
                      else
                      {
                        int v25 = *v24;
                        if ((*v24 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v24 + 1;
                          goto LABEL_164;
                        }
                      }
                      uint64_t v85 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25);
                      int v25 = v85;
                      if (v85 < 0) {
                        return 0;
                      }
LABEL_164:
                      *((_DWORD *)this + 28) = v25;
                      continue;
                    case 'Q':
                      if (v10 != 136) {
                        goto LABEL_9;
                      }
                      uint64_t v26 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v27 = 0;
                      }
                      else
                      {
                        int v27 = *v26;
                        if ((*v26 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v26 + 1;
                          goto LABEL_167;
                        }
                      }
                      uint64_t v86 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
                      int v27 = v86;
                      if (v86 < 0) {
                        return 0;
                      }
LABEL_167:
                      *((_DWORD *)this + 29) = v27;
                      continue;
                    case 'R':
                      if (v10 != 144) {
                        goto LABEL_9;
                      }
                      int v28 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v29 = 0;
                      }
                      else
                      {
                        int v29 = *v28;
                        if ((*v28 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v28 + 1;
                          goto LABEL_170;
                        }
                      }
                      uint64_t v87 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v29);
                      int v29 = v87;
                      if (v87 < 0) {
                        return 0;
                      }
LABEL_170:
                      *((_DWORD *)this + 3CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v29;
                      continue;
                    case 'S':
                      if (v10 != 152) {
                        goto LABEL_9;
                      }
                      unint64_t v30 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v31 = 0;
                      }
                      else
                      {
                        int v31 = *v30;
                        if ((*v30 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v30 + 1;
                          goto LABEL_173;
                        }
                      }
                      uint64_t v88 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31);
                      int v31 = v88;
                      if (v88 < 0) {
                        return 0;
                      }
LABEL_173:
                      *((_DWORD *)this + 31) = v31;
                      continue;
                    case 'T':
                      if (v10 != 160) {
                        goto LABEL_9;
                      }
                      char v32 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v33 = 0;
                      }
                      else
                      {
                        int v33 = *v32;
                        if ((*v32 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v32 + 1;
                          goto LABEL_176;
                        }
                      }
                      uint64_t v89 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v33);
                      int v33 = v89;
                      if (v89 < 0) {
                        return 0;
                      }
LABEL_176:
                      *((_DWORD *)this + 32) = v33;
                      continue;
                    case 'U':
                      if (v10 != 168) {
                        goto LABEL_9;
                      }
                      uint64_t v34 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1))
                      {
                        int v35 = 0;
                      }
                      else
                      {
                        int v35 = *v34;
                        if ((*v34 & 0x80000000) == 0)
                        {
                          *(void *)a2 = v34 + 1;
                          goto LABEL_179;
                        }
                      }
                      uint64_t v90 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                      int v35 = v90;
                      if (v90 < 0) {
                        return 0;
                      }
LABEL_179:
                      *((_DWORD *)this + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v35;
                      continue;
                    case 'V':
                      if (v10 != 176) {
                        goto LABEL_9;
                      }
                      int v36 = *(char **)a2;
                      if (*(void *)a2 >= *((void *)a2 + 1) || *v36 < 0)
                      {
                        unint64_t v37 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                        if ((v68 & 1) == 0) {
                          return 0;
                        }
                      }
                      else
                      {
                        unint64_t v37 = *v36;
                        *(void *)a2 = v36 + 1;
                      }
                      *((unsigned char *)this + 105) = v37 != 0;
                      continue;
                    case 'W':
                      if (v10 == 184)
                      {
                        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x2BAu, a2, (uint64_t)v5) & 1) == 0)return 0; {
                      }
                        }
                      else
                      {
                        if (v10 != 186) {
                          goto LABEL_9;
                        }
                        unsigned int v38 = *(char **)a2;
                        if (*(void *)a2 >= *((void *)a2 + 1) || *v38 < 0)
                        {
                          int v39 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v39 < 0) {
                            return 0;
                          }
                        }
                        else
                        {
                          int v39 = *v38;
                          *(void *)a2 = v38 + 1;
                        }
                        int v70 = google::protobuf::io::CodedInputStream::PushLimit(a2, v39);
                        while (1)
                        {
                          int v71 = *((_DWORD *)a2 + 10);
                          uint64_t v72 = *((int *)a2 + 11);
                          unint64_t v73 = *((void *)a2 + 1);
                          int v74 = *((_DWORD *)a2 + 6);
                          if (v71 == 0x7FFFFFFF) {
                            break;
                          }
                          int v75 = *(char **)a2;
                          if ((int)(v71 - v74 + v72 + v73 - *(void *)a2) < 1) {
                            break;
                          }
                          if ((unint64_t)v75 >= v73 || *v75 < 0)
                          {
                            unint64_t v77 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                            if ((v78 & 1) == 0) {
                              return 0;
                            }
                            unint64_t v76 = v77;
                          }
                          else
                          {
                            unint64_t v76 = *v75;
                            *(void *)a2 = v75 + 1;
                          }
                          signed int v79 = *((_DWORD *)this + 4);
                          if (v79 == *((_DWORD *)this + 5))
                          {
                            google::protobuf::RepeatedField<double>::Reserve(v5, v79 + 1);
                            signed int v79 = *v5;
                          }
                          uint64_t v80 = *((void *)this + 3);
                          *((_DWORD *)this + 4) = v79 + 1;
                          *(void *)(v80 + 8 * v79 + 8) = v76;
                        }
                        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v70;
                        uint64_t v81 = v73 + v72;
                        *((void *)a2 + 1) = v73 + v72;
                        int v82 = *((_DWORD *)a2 + 12);
                        if (v82 >= v70) {
                          int v82 = v70;
                        }
                        BOOL v65 = __OFSUB__(v74, v82);
                        int v83 = v74 - v82;
                        if ((v83 < 0) ^ v65 | (v83 == 0)) {
                          int v83 = 0;
                        }
                        else {
                          *((void *)a2 + 1) = v81 - v83;
                        }
                        *((_DWORD *)a2 + 11) = v83;
                        *((unsigned char *)a2 + 36) = 0;
                      }
                      break;
                    default:
                      goto LABEL_9;
                  }
                }
              }
              if (v10 >> 3 > 0x13) {
                break;
              }
              if (v14 == 1)
              {
                if (v10 != 8) {
                  goto LABEL_9;
                }
                uint64_t v50 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v51 = 0;
                }
                else
                {
                  int v51 = *v50;
                  if ((*v50 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v50 + 1;
                    goto LABEL_203;
                  }
                }
                uint64_t v98 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51);
                int v51 = v98;
                if (v98 < 0) {
                  return 0;
                }
LABEL_203:
                *((_DWORD *)this + 14) = v51;
              }
              else if (v14 == 2)
              {
                if (v10 != 16) {
                  goto LABEL_9;
                }
                uint64_t v52 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v53 = 0;
                }
                else
                {
                  int v53 = *v52;
                  if ((*v52 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v52 + 1;
                    goto LABEL_206;
                  }
                }
                uint64_t v99 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v53);
                int v53 = v99;
                if (v99 < 0) {
                  return 0;
                }
LABEL_206:
                *((_DWORD *)this + 15) = v53;
              }
              else
              {
                if (v14 != 10 || v10 != 80) {
                  goto LABEL_9;
                }
                int v19 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v20 = 0;
                }
                else
                {
                  int v20 = *v19;
                  if ((*v19 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v19 + 1;
                    goto LABEL_197;
                  }
                }
                uint64_t v96 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
                int v20 = v96;
                if (v96 < 0) {
                  return 0;
                }
LABEL_197:
                *((_DWORD *)this + 16) = v20;
              }
            }
            if (v10 >> 3 > 0x27) {
              break;
            }
            switch(v14)
            {
              case 0x14u:
                if (v10 != 160) {
                  goto LABEL_9;
                }
                char v15 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v16 = 0;
                }
                else
                {
                  int v16 = *v15;
                  if ((*v15 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v15 + 1;
                    goto LABEL_182;
                  }
                }
                uint64_t v91 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
                int v16 = v91;
                if (v91 < 0) {
                  return 0;
                }
LABEL_182:
                *((_DWORD *)this + 17) = v16;
                goto LABEL_2;
              case 0x15u:
                if (v10 != 168) {
                  goto LABEL_9;
                }
                char v40 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v41 = 0;
                }
                else
                {
                  int v41 = *v40;
                  if ((*v40 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v40 + 1;
                    goto LABEL_185;
                  }
                }
                uint64_t v92 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
                int v41 = v92;
                if (v92 < 0) {
                  return 0;
                }
LABEL_185:
                *((_DWORD *)this + 18) = v41;
                goto LABEL_2;
              case 0x16u:
                if (v10 != 176) {
                  goto LABEL_9;
                }
                uint64_t v42 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v43 = 0;
                }
                else
                {
                  int v43 = *v42;
                  if ((*v42 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v42 + 1;
                    goto LABEL_188;
                  }
                }
                uint64_t v93 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
                int v43 = v93;
                if (v93 < 0) {
                  return 0;
                }
LABEL_188:
                *((_DWORD *)this + 19) = v43;
                goto LABEL_2;
              case 0x1Fu:
                if (v10 != 248) {
                  goto LABEL_9;
                }
                uint64_t v44 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v45 = 0;
                }
                else
                {
                  int v45 = *v44;
                  if ((*v44 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v44 + 1;
                    goto LABEL_191;
                  }
                }
                uint64_t v94 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45);
                int v45 = v94;
                if (v94 < 0) {
                  return 0;
                }
LABEL_191:
                *((_DWORD *)this + 2CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v45;
                goto LABEL_2;
              case 0x20u:
                if ((_BYTE)v10) {
                  goto LABEL_9;
                }
                uint64_t v46 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v47 = 0;
                }
                else
                {
                  int v47 = *v46;
                  if ((*v46 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v46 + 1;
                    goto LABEL_215;
                  }
                }
                uint64_t v102 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v47);
                int v47 = v102;
                if (v102 < 0) {
                  return 0;
                }
LABEL_215:
                *((_DWORD *)this + 21) = v47;
                break;
              case 0x21u:
                if (v10 != 8) {
                  goto LABEL_9;
                }
                uint64_t v48 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1))
                {
                  int v49 = 0;
                }
                else
                {
                  int v49 = *v48;
                  if ((*v48 & 0x80000000) == 0)
                  {
                    *(void *)a2 = v48 + 1;
                    goto LABEL_194;
                  }
                }
                uint64_t v95 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
                int v49 = v95;
                if (v95 < 0) {
                  return 0;
                }
LABEL_194:
                *((_DWORD *)this + 22) = v49;
                goto LABEL_2;
              default:
                goto LABEL_9;
            }
          }
          if (v14 != 40) {
            break;
          }
          if (v10 != 64) {
            goto LABEL_9;
          }
          unint64_t v58 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v59 = 0;
          }
          else
          {
            int v59 = *v58;
            if ((*v58 & 0x80000000) == 0)
            {
              *(void *)a2 = v58 + 1;
              goto LABEL_209;
            }
          }
          uint64_t v100 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v59);
          int v59 = v100;
          if (v100 < 0) {
            return 0;
          }
LABEL_209:
          *((_DWORD *)this + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v59;
        }
        if (v14 == 41) {
          break;
        }
        if (v14 != 42 || v10 != 80) {
          goto LABEL_9;
        }
        int v22 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v23 = 0;
        }
        else
        {
          int v23 = *v22;
          if ((*v22 & 0x80000000) == 0)
          {
            *(void *)a2 = v22 + 1;
            goto LABEL_200;
          }
        }
        uint64_t v97 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23);
        int v23 = v97;
        if (v97 < 0) {
          return 0;
        }
LABEL_200:
        *((_DWORD *)this + 25) = v23;
      }
      if (v10 != 72) {
        break;
      }
      unint64_t v60 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v61 = 0;
      }
      else
      {
        int v61 = *v60;
        if ((*v60 & 0x80000000) == 0)
        {
          *(void *)a2 = v60 + 1;
          goto LABEL_212;
        }
      }
      uint64_t v101 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
      int v61 = v101;
      if (v101 < 0) {
        return 0;
      }
LABEL_212:
      *((_DWORD *)this + 24) = v61;
    }
LABEL_9:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC11073C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::WeightParams *CoreML::Specification::WeightParams::WeightParams(CoreML::Specification::WeightParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361B600;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = 0;
  *((unsigned char *)this + 72) = 0;
  *((_DWORD *)this + 19) = 0;
  return this;
}

void sub_1DC110864(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::WeightParams::MergePartialFromCodedStream(CoreML::Specification::WeightParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 56);
  uint64_t v6 = (std::string **)((char *)this + 48);
  unint64_t v7 = (std::string **)((char *)this + 40);
  unint64_t v8 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            uint64_t v9 = *(unsigned __int8 **)a2;
            unint64_t v10 = *((void *)a2 + 1);
            if (*(void *)a2 >= v10)
            {
              LODWORD(v12) = 0;
LABEL_16:
              unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
              unint64_t v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
              if ((v13 & 0x100000000) == 0) {
                goto LABEL_9;
              }
              goto LABEL_17;
            }
            int v11 = v9 + 1;
            uint64_t v12 = *v9;
            if ((char)*v9 < 1)
            {
              if ((unint64_t)v11 < v10)
              {
                int v14 = *v11;
                if ((v12 & ~v14) >= 0x80)
                {
                  *(void *)a2 = v9 + 2;
                  unint64_t v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
                  goto LABEL_17;
                }
              }
              goto LABEL_16;
            }
            *(void *)a2 = v11;
            unint64_t v13 = v12 | 0x100000000;
            if ((v13 & 0x100000000) == 0) {
              goto LABEL_9;
            }
LABEL_17:
            unsigned int v17 = v13 >> 3;
            if (v13 >> 3 <= 0x1E) {
              break;
            }
            if (v17 == 31)
            {
              if (v13 == 250)
              {
                int v18 = *v5;
                if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                  google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
                }
                goto LABEL_42;
              }
              goto LABEL_9;
            }
            if (v17 == 40)
            {
              if (v13 != 66) {
                goto LABEL_9;
              }
              int v23 = (CoreML::Specification::QuantizationParams *)*((void *)this + 8);
              if (!v23) {
                operator new();
              }
              int v24 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
              {
                int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                int VarintSizeAsIntFallback = *v24;
                *(void *)a2 = v24 + 1;
              }
              int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              int v29 = *((_DWORD *)a2 + 13);
              BOOL v30 = __OFSUB__(v29--, 1);
              *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
              if (v29 < 0 != v30) {
                return 0;
              }
              int v31 = v27;
              BOOL result = CoreML::Specification::QuantizationParams::MergePartialFromCodedStream(v23, a2, v28);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v31)) {
                return 0;
              }
            }
            else
            {
              if (v17 != 50 || v13 != 144) {
                goto LABEL_9;
              }
              int v19 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v26 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                unint64_t Varint64Fallback = *v19;
                *(void *)a2 = v19 + 1;
              }
              *((unsigned char *)this + 72) = Varint64Fallback != 0;
            }
          }
          if (v17 == 1) {
            break;
          }
          if (v17 == 2)
          {
            if (v13 == 18)
            {
              int v18 = *v7;
              if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_42;
            }
LABEL_9:
            if (v13) {
              BOOL v15 = (v13 & 7) == 4;
            }
            else {
              BOOL v15 = 1;
            }
            if (v15) {
              return 1;
            }
            if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)return 0; {
          }
            }
          else
          {
            if (v17 != 30 || v13 != 242) {
              goto LABEL_9;
            }
            int v18 = *v6;
            if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            }
LABEL_42:
            if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v18)) {
              return 0;
            }
          }
        }
        if (v13 != 13) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v8))return 0; {
      }
        }
      if (v13 != 10) {
        goto LABEL_9;
      }
      int v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        unsigned int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v22 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      if ((v22 & 3) != 0) {
        return 0;
      }
      int v33 = *((_DWORD *)a2 + 12);
      int v34 = v33 == 0x7FFFFFFF
          ? -1
          : v33 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v35 = *((_DWORD *)a2 + 10);
      int v36 = v35 == 0x7FFFFFFF
          ? -1
          : v35 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v37 = *v8;
      unsigned int v38 = v22 >> 2;
      int v39 = v36 >= v34 ? v34 : v36;
      int v40 = v34 == -1 ? v36 : v39;
      if (v40 >= (uint64_t)v22) {
        break;
      }
      if (v22 >= 4)
      {
        if (v38 <= 1) {
          int v41 = 1;
        }
        else {
          int v41 = v22 >> 2;
        }
        do
        {
          unsigned int v52 = 0;
          uint64_t v42 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v52);
            if (!result) {
              return result;
            }
            unsigned int v43 = v52;
            signed int v37 = *v8;
          }
          else
          {
            unsigned int v43 = *v42;
            *(void *)a2 = v42 + 1;
          }
          if (v37 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v8, v37 + 1);
            signed int v37 = *v8;
          }
          uint64_t v44 = *((void *)this + 3) + 4 * v37;
          *((_DWORD *)this + 4) = v37 + 1;
          *(_DWORD *)(v44 + 8) = v43;
          ++v37;
          --v41;
        }
        while (v41);
      }
    }
    int v45 = v7;
    uint64_t v46 = v6;
    int v47 = v5;
    signed int v48 = v37 + v38;
    if (v22 > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v8, v37 + v38);
      uint64_t v49 = *((void *)this + 3);
      uint64_t v50 = 4 * v48 - 4 * *((int *)this + 4);
      if (v50 >= 1) {
        bzero((void *)(v49 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v50 >> 2) - ((unint64_t)v50 > 3)) + 4);
      }
    }
    else
    {
      uint64_t v49 = *((void *)this + 3);
    }
    *unint64_t v8 = v48;
    uint64_t v51 = v49 + 8;
    if (!v49) {
      uint64_t v51 = 0;
    }
    uint64_t v5 = v47;
    uint64_t v6 = v46;
    unint64_t v7 = v45;
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v51 + 4 * v37), v22));
  if ((int)*v8 >= 1)
  {
    BOOL result = 0;
    *unint64_t v8 = v37;
    return result;
  }
  return 0;
}

void sub_1DC110DBC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(unsigned int a1, google::protobuf::io::CodedInputStream *this, uint64_t a3)
{
  uint64_t v6 = *(char **)this;
  if (*(void *)this >= *((void *)this + 1) || *v6 < 0)
  {
    unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
    if ((v9 & 1) == 0) {
      return 0;
    }
    unint64_t v7 = Varint64Fallback;
  }
  else
  {
    unint64_t v7 = *v6;
    *(void *)this = v6 + 1;
  }
  signed int v11 = *(_DWORD *)a3;
  int v12 = *(_DWORD *)(a3 + 4);
  if (*(_DWORD *)a3 == v12)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)a3, v11 + 1);
    signed int v11 = *(_DWORD *)a3;
    int v12 = *(_DWORD *)(a3 + 4);
  }
  uint64_t v13 = *(void *)(a3 + 8);
  signed int v14 = v11 + 1;
  *(_DWORD *)a3 = v11 + 1;
  *(void *)(v13 + 8 * v11 + 8) = v7;
  if (v12 - (v11 + 1) >= 1)
  {
    int v15 = v12 - v11;
    do
    {
      if (a1 > 0x7F)
      {
        int v19 = *(char **)this;
        unint64_t v16 = *((void *)this + 1);
        if ((int)(v16 - *(void *)this) < 2
          || (a1 & 0x7F | 0x80) != *v19
          || v19[1] != (a1 >> 7))
        {
          return 1;
        }
        int v18 = v19 + 2;
      }
      else
      {
        unsigned int v17 = *(char **)this;
        unint64_t v16 = *((void *)this + 1);
        if (*(void *)this >= v16 || *v17 != a1) {
          return 1;
        }
        int v18 = v17 + 1;
      }
      *(void *)this = v18;
      if ((unint64_t)v18 >= v16 || *v18 < 0)
      {
        unint64_t v20 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
        if ((v21 & 1) == 0) {
          return 0;
        }
        uint64_t v13 = *(void *)(a3 + 8);
        signed int v14 = *(_DWORD *)a3;
      }
      else
      {
        unint64_t v20 = *v18;
        *(void *)this = v18 + 1;
      }
      uint64_t v22 = v13 + 8 * v14++;
      *(_DWORD *)a3 = v14;
      *(void *)(v22 + 8) = v20;
      --v15;
    }
    while (v15 > 1);
  }
  return 1;
}

CoreML::Specification::QuantizationParams *CoreML::Specification::QuantizationParams::QuantizationParams(CoreML::Specification::QuantizationParams *this)
{
  *(void *)this = &unk_1F361EDD0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::QuantizationParams *)&CoreML::Specification::_QuantizationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC110FB0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::QuantizationParams::MergePartialFromCodedStream(CoreML::Specification::QuantizationParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(unsigned __int8 **)a2;
        unint64_t v6 = *((void *)a2 + 1);
        if (*(void *)a2 >= v6)
        {
          LODWORD(v8) = 0;
LABEL_44:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_45;
          }
          goto LABEL_8;
        }
        unint64_t v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 < 1)
        {
          if ((unint64_t)v7 < v6)
          {
            int v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(void *)a2 = v5 + 2;
              unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_8;
            }
          }
          goto LABEL_44;
        }
        *(void *)a2 = v7;
        unint64_t v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_45;
        }
LABEL_8:
        unsigned int v11 = v9 >> 3;
        if (v9 >> 3 == 102)
        {
          if (v9 != 50) {
            goto LABEL_45;
          }
          if (*((_DWORD *)this + 9) != 102)
          {
            CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
            *((_DWORD *)this + 9) = 102;
            operator new();
          }
          signed int v14 = (CoreML::Specification::LookUpTableQuantizationParams *)*((void *)this + 3);
          unint64_t v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v23 = *((_DWORD *)a2 + 13);
          BOOL v24 = __OFSUB__(v23--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v23;
          if (v23 < 0 != v24) {
            return 0;
          }
          int v25 = v21;
          BOOL result = CoreML::Specification::LookUpTableQuantizationParams::MergePartialFromCodedStream(v14, (char **)a2, v22);
          if (!result) {
            return result;
          }
          goto LABEL_41;
        }
        if (v11 != 101) {
          break;
        }
        if (v9 != 42) {
          goto LABEL_45;
        }
        if (*((_DWORD *)this + 9) != 101)
        {
          CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
          *((_DWORD *)this + 9) = 101;
          operator new();
        }
        int v15 = (CoreML::Specification::LinearQuantizationParams *)*((void *)this + 3);
        int v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0) {
            return 0;
          }
        }
        else
        {
          int v19 = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
        int v29 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v29;
        if (v29 < 0 != v24) {
          return 0;
        }
        int v25 = v27;
        BOOL result = CoreML::Specification::LinearQuantizationParams::MergePartialFromCodedStream(v15, (char **)a2, v28);
        if (!result) {
          return result;
        }
LABEL_41:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25)) {
          return 0;
        }
      }
      if (v11 != 1 || v9 != 8) {
        break;
      }
      uint64_t v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v13;
        *(void *)a2 = v13 + 1;
      }
    }
LABEL_45:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC111290(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403FC4B5CDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::QuantizationParams::clear_QuantizationType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 102 || v2 == 101)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

CoreML::Specification::LinearQuantizationParams *CoreML::Specification::LinearQuantizationParams::LinearQuantizationParams(CoreML::Specification::LinearQuantizationParams *this)
{
  *(void *)this = &unk_1F3622048;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LinearQuantizationParams *)&CoreML::Specification::_LinearQuantizationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 15) = 0;
  return this;
}

void sub_1DC11139C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LinearQuantizationParams::MergePartialFromCodedStream(CoreML::Specification::LinearQuantizationParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  unint64_t v6 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            unint64_t v7 = *a2;
            if (*a2 < a2[1]) {
              break;
            }
            LODWORD(v8) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v9 & 0x100000000) != 0) {
              goto LABEL_8;
            }
LABEL_20:
            if (v9) {
              BOOL v15 = (v9 & 7) == 4;
            }
            else {
              BOOL v15 = 1;
            }
            if (v15) {
              return 1;
            }
            if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
          }
            }
          uint64_t v8 = *v7;
          if (*v7 < 1) {
            goto LABEL_7;
          }
          *a2 = v7 + 1;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_20;
          }
LABEL_8:
          if (v9 >> 3 != 2) {
            break;
          }
          if (v9 == 21)
          {
            int v16 = 18;
            unsigned int v17 = (unsigned int **)a2;
            uint64_t v18 = (uint64_t)v5;
            goto LABEL_28;
          }
          if (v9 != 18) {
            goto LABEL_20;
          }
          uint64_t v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
            if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
              return 0;
            }
          }
          else
          {
            unsigned int VarintSizeAsIntFallback = *v13;
            *a2 = v13 + 1;
          }
          if ((VarintSizeAsIntFallback & 3) != 0) {
            return 0;
          }
          int v34 = *((_DWORD *)a2 + 12);
          if (v34 == 0x7FFFFFFF) {
            int v35 = -1;
          }
          else {
            int v35 = v34 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
          }
          int v36 = *((_DWORD *)a2 + 10);
          if (v36 == 0x7FFFFFFF) {
            int v37 = -1;
          }
          else {
            int v37 = v36 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
          }
          signed int v38 = *v5;
          unsigned int v39 = VarintSizeAsIntFallback >> 2;
          if (v37 >= v35) {
            int v40 = v35;
          }
          else {
            int v40 = v37;
          }
          if (v35 == -1) {
            int v41 = v37;
          }
          else {
            int v41 = v40;
          }
          if (v41 >= (uint64_t)VarintSizeAsIntFallback)
          {
            signed int v46 = v38 + v39;
            if (VarintSizeAsIntFallback > 3)
            {
              google::protobuf::RepeatedField<int>::Reserve(v5, v38 + v39);
              uint64_t v47 = *((void *)this + 6);
              uint64_t v50 = 4 * v46 - 4 * *((int *)this + 10);
              if (v50 >= 1) {
                bzero((void *)(v47 + 8 + 4 * *((int *)this + 10)), 4 * (((unint64_t)v50 >> 2) - ((unint64_t)v50 > 3)) + 4);
              }
            }
            else
            {
              uint64_t v47 = *((void *)this + 6);
            }
            *uint64_t v5 = v46;
            uint64_t v51 = v47 + 8;
            if (!v47) {
              uint64_t v51 = 0;
            }
            if (!google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v51 + 4 * v38), VarintSizeAsIntFallback))
            {
              if ((int)*v5 >= 1)
              {
                BOOL result = 0;
                *uint64_t v5 = v38;
                return result;
              }
              return 0;
            }
          }
          else if (VarintSizeAsIntFallback >= 4)
          {
            if (v39 <= 1) {
              int v42 = 1;
            }
            else {
              int v42 = VarintSizeAsIntFallback >> 2;
            }
            do
            {
              unsigned int v53 = 0;
              unsigned int v43 = (unsigned int *)*a2;
              if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
              {
                BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v53);
                if (!result) {
                  return result;
                }
                unsigned int v44 = v53;
                signed int v38 = *v5;
              }
              else
              {
                unsigned int v44 = *v43;
                *a2 = (char *)(v43 + 1);
              }
              if (v38 == *((_DWORD *)this + 11))
              {
                google::protobuf::RepeatedField<int>::Reserve(v5, v38 + 1);
                signed int v38 = *v5;
              }
              uint64_t v45 = *((void *)this + 6) + 4 * v38;
              *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v38 + 1;
              *(_DWORD *)(v45 + 8) = v44;
              ++v38;
              --v42;
            }
            while (v42);
          }
        }
        if (v9 >> 3 != 1) {
          goto LABEL_20;
        }
        if (v9 != 13) {
          break;
        }
        int v16 = 10;
        unsigned int v17 = (unsigned int **)a2;
        uint64_t v18 = (uint64_t)v6;
LABEL_28:
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(v16, v17, v18))return 0; {
      }
        }
      if (v9 != 10) {
        goto LABEL_20;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unsigned int v12 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v12 = *v11;
        *a2 = v11 + 1;
      }
      if ((v12 & 3) != 0) {
        return 0;
      }
      int v19 = *((_DWORD *)a2 + 12);
      int v20 = v19 == 0x7FFFFFFF
          ? -1
          : v19 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v21 = *((_DWORD *)a2 + 10);
      int v22 = v21 == 0x7FFFFFFF
          ? -1
          : v21 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v23 = *v6;
      unsigned int v24 = v12 >> 2;
      int v25 = v22 >= v20 ? v20 : v22;
      int v26 = v20 == -1 ? v22 : v25;
      if (v26 >= (uint64_t)v12) {
        break;
      }
      if (v12 >= 4)
      {
        if (v24 <= 1) {
          int v27 = 1;
        }
        else {
          int v27 = v12 >> 2;
        }
        do
        {
          unsigned int v52 = 0;
          unsigned int v28 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v52);
            if (!result) {
              return result;
            }
            unsigned int v29 = v52;
            signed int v23 = *v6;
          }
          else
          {
            unsigned int v29 = *v28;
            *a2 = (char *)(v28 + 1);
          }
          if (v23 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v6, v23 + 1);
            signed int v23 = *v6;
          }
          uint64_t v30 = *((void *)this + 3) + 4 * v23;
          *((_DWORD *)this + 4) = v23 + 1;
          *(_DWORD *)(v30 + 8) = v29;
          ++v23;
          --v27;
        }
        while (v27);
      }
    }
    signed int v32 = v23 + v24;
    if (v12 > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v6, v23 + v24);
      uint64_t v33 = *((void *)this + 3);
      uint64_t v48 = 4 * v32 - 4 * *((int *)this + 4);
      if (v48 >= 1) {
        bzero((void *)(v33 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v48 >> 2) - ((unint64_t)v48 > 3)) + 4);
      }
    }
    else
    {
      uint64_t v33 = *((void *)this + 3);
    }
    *unint64_t v6 = v32;
    uint64_t v49 = v33 + 8;
    if (!v33) {
      uint64_t v49 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v49 + 4 * v23), v12));
  if ((int)*v6 >= 1)
  {
    BOOL result = 0;
    *unint64_t v6 = v23;
    return result;
  }
  return 0;
}

CoreML::Specification::LookUpTableQuantizationParams *CoreML::Specification::LookUpTableQuantizationParams::LookUpTableQuantizationParams(CoreML::Specification::LookUpTableQuantizationParams *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3623A68;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::LookUpTableQuantizationParams *)&CoreML::Specification::_LookUpTableQuantizationParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC11196C(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LookUpTableQuantizationParams::MergePartialFromCodedStream(CoreML::Specification::LookUpTableQuantizationParams *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 2;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v30 = 0;
          int v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result) {
              return result;
            }
            unsigned int v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unsigned int v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    *uint64_t v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    *uint64_t v5 = v17;
    return result;
  }
  return 0;
}

CoreML::Specification::NeuralNetwork *CoreML::Specification::NeuralNetwork::NeuralNetwork(CoreML::Specification::NeuralNetwork *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *(void *)this = &unk_1F361B990;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 7) = 0;
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 2CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC111D14(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(CoreML::Specification::NeuralNetwork *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::NeuralNetwork *)((char *)this + 40);
  unint64_t v6 = (CoreML::Specification::NeuralNetwork *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_7:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_8;
          }
          BOOL v12 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(v6);
          int v13 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v13;
            *(void *)a2 = v13 + 1;
          }
          int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v26 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
          if (v26 < 0 != v27) {
            return 0;
          }
          int v28 = v25;
          uint64_t result = CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream((CoreML::Specification::NeuralNetworkLayer *)v12, a2);
          if (!result) {
            return result;
          }
          goto LABEL_48;
        case 2u:
          if (v9 != 18) {
            goto LABEL_8;
          }
          int v15 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(v5);
          int v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v17 < 0) {
              return 0;
            }
          }
          else
          {
            int v17 = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
          int v32 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v32--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v32;
          if (v32 < 0 != v27) {
            return 0;
          }
          int v28 = v30;
          uint64_t result = CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream((CoreML::Specification::NeuralNetworkPreprocessing *)v15, a2, v31);
          if (!result) {
            return result;
          }
          goto LABEL_48;
        case 5u:
          if (v9 != 40) {
            goto LABEL_8;
          }
          unsigned int v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v19 = 0;
          }
          else
          {
            int v19 = *v18;
            if ((*v18 & 0x80000000) == 0)
            {
              *(void *)a2 = v18 + 1;
              goto LABEL_52;
            }
          }
          uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          int v19 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_52:
          *((_DWORD *)this + 18) = v19;
          continue;
        case 6u:
          if (v9 != 48) {
            goto LABEL_8;
          }
          int v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1))
          {
            int v21 = 0;
          }
          else
          {
            int v21 = *v20;
            if ((*v20 & 0x80000000) == 0)
            {
              *(void *)a2 = v20 + 1;
              goto LABEL_55;
            }
          }
          uint64_t v37 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v21);
          int v21 = v37;
          if (v37 < 0) {
            return 0;
          }
LABEL_55:
          *((_DWORD *)this + 19) = v21;
          break;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_8;
          }
          int v22 = (CoreML::Specification::NetworkUpdateParameters *)*((void *)this + 8);
          if (!v22) {
            operator new();
          }
          unsigned int v23 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
          {
            int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v24 < 0) {
              return 0;
            }
          }
          else
          {
            int v24 = *v23;
            *(void *)a2 = v23 + 1;
          }
          int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
          int v35 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v35--, 1);
          *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v35;
          if (v35 < 0 != v27) {
            return 0;
          }
          int v28 = v33;
          uint64_t result = CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(v22, a2, v34);
          if (!result) {
            return result;
          }
LABEL_48:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_14;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC112068(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[](uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v24 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v26[0];
  if (v26[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v20 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v20, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v25[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v21 = 0;
    unint64_t v22 = ((5 * v8) >> 2) + 1;
    do
      ++v21;
    while (v22 << v21 < v9);
    uint64_t v20 = v7 >> v21 <= 8 ? 8 : v7 >> v21;
    if (v20 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v26[3];
LABEL_11:
  BOOL v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  int v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v24;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v25, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v25[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 56);
    int v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    v16[2] = 0;
    char *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    unsigned int v18 = *(google::protobuf::Arena **)a1;
    CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(v16 + 3));
    google::protobuf::Arena::OwnDestructor<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>((google::protobuf::Arena **)v18, (google::protobuf::Arena *)(v16 + 3));
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1DC112320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1E0198C00](v14, 0x10B2C4015637A22);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
  uint64_t v5 = *(google::protobuf::Arena ***)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*((void (**)(google::protobuf::Arena **))*v5 + 1))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  uint64_t v6 = *(void *)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (google::protobuf::Arena **)v4[3];
  if (!Aligned)
  {
    unint64_t v8 = v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned);
    unint64_t v9 = google::protobuf::Arena::AllocateAligned(v8, 0, 24);
    *unint64_t v9 = (google::protobuf::Arena *)Aligned;
    v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
    int v10 = (unint64_t *)((char *)v8 + 32);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr((unint64_t)v9, v10));
    v9[2] = (google::protobuf::Arena *)v11;
    v4[3] = (google::protobuf::Arena *)Aligned;
  }
  if ((google::protobuf::Arena **)v6 != Aligned)
  {
    BOOL v12 = Aligned[2];
    Aligned[2] = *(google::protobuf::Arena **)(v6 + 16);
    *(void *)(v6 + 16) = v12;
    int v13 = *((_DWORD *)Aligned + 7);
    *((_DWORD *)Aligned + 7) = *(_DWORD *)(v6 + 28);
    *(_DWORD *)(v6 + 28) = v13;
    int v14 = *((_DWORD *)Aligned + 6);
    *((_DWORD *)Aligned + 6) = *(_DWORD *)(v6 + 24);
    *(_DWORD *)(v6 + 24) = v14;
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v15 = *(void *)(a1 + 48);
  *(_DWORD *)(v15 + 40) |= 1u;
  uint64_t v16 = *(void *)(v15 + 16);
  if ((uint64_t *)v16 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v16 + 23) < 0) {
    operator delete(*(void **)v16);
  }
  long long v17 = *(_OWORD *)(a1 + 16);
  *(void *)(v16 + 16) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v16 = v17;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v18 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v18) {
    v19.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void, __n128))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48), v19)) {
    *(void *)(a1 + 48) = 0;
  }
  return v18;
}

void sub_1DC112608(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627A30;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  uint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  int v3 = google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v3;
  uint64_t v5 = *(void *)(a1 + 48);
  *(_DWORD *)(v5 + 40) |= 2u;
  Aligned = *(google::protobuf::Arena ***)(v5 + 24);
  if (!Aligned)
  {
    uint64_t v7 = *(google::protobuf::Arena **)(v5 + 32);
    if (!v7) {
      operator new();
    }
    CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned);
    unint64_t v8 = google::protobuf::Arena::AllocateAligned(v7, 0, 24);
    *unint64_t v8 = (google::protobuf::Arena *)Aligned;
    v8[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
    unint64_t v9 = (unint64_t *)((char *)v7 + 32);
    do
      unint64_t v10 = __ldxr(v9);
    while (__stxr((unint64_t)v8, v9));
    v8[2] = (google::protobuf::Arena *)v10;
    *(void *)(v5 + 24) = Aligned;
    int v3 = *(google::protobuf::Arena ***)(a1 + 40);
  }
  if (Aligned != v3)
  {
    double result = *((double *)v3 + 2);
    void v3[2] = Aligned[2];
    *((double *)Aligned + 2) = result;
    int v11 = *((_DWORD *)v3 + 7);
    *((_DWORD *)v3 + 7) = *((_DWORD *)Aligned + 7);
    *((_DWORD *)Aligned + 7) = v11;
    int v12 = *((_DWORD *)v3 + 6);
    *((_DWORD *)v3 + 6) = *((_DWORD *)Aligned + 6);
    *((_DWORD *)Aligned + 6) = v12;
  }
  return result;
}

void sub_1DC1127F4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

__n128 google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::~CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(v7 + 24));
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x1E0198C00](v7, 0x10B2C4015637A22);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 32);
  if (v8) {
    goto LABEL_7;
  }
  uint64_t v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    int v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        int v14 = v13;
        int v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        int v14 = *(void **)(v12 + 16);
        BOOL v15 = *v14 == v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    uint64_t v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  uint64_t v16 = (void *)a2[2];
  uint64_t v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  __n128 v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  unsigned int v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (void *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

void CoreML::Specification::CustomLayerParams_CustomLayerParamValue::~CustomLayerParams_CustomLayerParamValue(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  *(void *)this = &unk_1F3624CD0;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::CustomLayerParams_CustomLayerParamValue::~CustomLayerParams_CustomLayerParamValue(this);
  JUMPOUT(0x1E0198C00);
}

google::protobuf::Arena **google::protobuf::Arena::OwnDestructor<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    __n128 result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *__n128 result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
    long long v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::WeightParams>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  uint64_t v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      uint64_t v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  *uint64_t v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::ActivationParams::ActivationParams((CoreML::Specification::ActivationParams *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  google::protobuf::Arena *v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ActivationParams>;
  uint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1DC112C44(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::LSTMParams *CoreML::Specification::LSTMParams::LSTMParams(CoreML::Specification::LSTMParams *this)
{
  *(void *)this = &unk_1F361A268;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LSTMParams *)&CoreML::Specification::_LSTMParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 24) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1DC112CD0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LSTMParams::MergePartialFromCodedStream(CoreML::Specification::LSTMParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            unint64_t v5 = *(unsigned __int8 **)a2;
            unint64_t v6 = *((void *)a2 + 1);
            if (*(void *)a2 >= v6)
            {
              LODWORD(v8) = 0;
            }
            else
            {
              uint64_t v7 = v5 + 1;
              uint64_t v8 = *v5;
              if ((char)*v5 >= 1)
              {
                *(void *)a2 = v7;
                unint64_t v9 = v8 | 0x100000000;
                if ((v9 & 0x100000000) == 0) {
                  goto LABEL_8;
                }
                goto LABEL_16;
              }
              if ((unint64_t)v7 < v6)
              {
                int v10 = *v7;
                if ((v8 & ~v10) >= 0x80)
                {
                  *(void *)a2 = v5 + 2;
                  unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                  goto LABEL_16;
                }
              }
            }
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_8;
            }
LABEL_16:
            unsigned int v13 = v9 >> 3;
            if (v9 >> 3 > 0x27) {
              break;
            }
            if (v13 == 10)
            {
              if (v9 != 80) {
                goto LABEL_8;
              }
              unint64_t v18 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
              {
                unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v27 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                unint64_t Varint64Fallback = *v18;
                *(void *)a2 = v18 + 1;
              }
              *((unsigned char *)this + 2CoreML::Specification::NetworkUpdateParameters::New(this, 0) = Varint64Fallback != 0;
            }
            else if (v13 == 20)
            {
              if (v9 != 160) {
                goto LABEL_8;
              }
              uint64_t v20 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
              {
                unint64_t v21 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                unint64_t v21 = *v20;
                *(void *)a2 = v20 + 1;
              }
              *((unsigned char *)this + 21) = v21 != 0;
            }
            else
            {
              if (v13 != 30 || v9 != 240) {
                goto LABEL_8;
              }
              int v14 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
              {
                unint64_t v15 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v26 & 1) == 0) {
                  return 0;
                }
              }
              else
              {
                unint64_t v15 = *v14;
                *(void *)a2 = v14 + 1;
              }
              *((unsigned char *)this + 22) = v15 != 0;
            }
          }
          if (v13 != 40) {
            break;
          }
          if (v9 != 64) {
            goto LABEL_8;
          }
          uint64_t v22 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
          {
            unint64_t v23 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v23 = *v22;
            *(void *)a2 = v22 + 1;
          }
          *((unsigned char *)this + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v23 != 0;
        }
        if (v13 == 50) {
          break;
        }
        if (v13 != 60 || v9 != 229) {
          goto LABEL_8;
        }
        unsigned int v32 = 0;
        uint64_t v16 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
          if (!result) {
            return result;
          }
          unsigned int v17 = v32;
        }
        else
        {
          unsigned int v17 = *v16;
          *(void *)a2 = v16 + 1;
        }
        *((_DWORD *)this + 4) = v17;
      }
      if (v9 != 144) {
        break;
      }
      std::string::size_type v24 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
      {
        unint64_t v25 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v30 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        unint64_t v25 = *v24;
        *(void *)a2 = v24 + 1;
      }
      *((unsigned char *)this + 24) = v25 != 0;
    }
LABEL_8:
    if (v9) {
      BOOL v11 = (v9 & 7) == 4;
    }
    else {
      BOOL v11 = 1;
    }
    if (v11) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) != 0);
  return 0;
}

BOOL CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(CoreML::Specification::LSTMWeightParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        LODWORD(v8) = 0;
      }
      else
      {
        uint64_t v7 = v5 + 1;
        uint64_t v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(void *)a2 = v7;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_8;
          }
          goto LABEL_16;
        }
        if ((unint64_t)v7 < v6)
        {
          int v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(void *)a2 = v5 + 2;
            unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_16;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unsigned int v13 = v9 >> 3;
      if (v9 >> 3 <= 0x27)
      {
        switch(v13)
        {
          case 1u:
            if (v9 != 10) {
              goto LABEL_8;
            }
            int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
            if (!v14) {
              operator new();
            }
            return result;
          case 2u:
            if (v9 != 18) {
              goto LABEL_8;
            }
            int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
            if (!v14) {
              operator new();
            }
            return result;
          case 3u:
            if (v9 != 26) {
              goto LABEL_8;
            }
            int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 4);
            if (!v14) {
              operator new();
            }
            return result;
          case 4u:
            if (v9 != 34) {
              goto LABEL_8;
            }
            int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 5);
            if (!v14) {
              operator new();
            }
            return result;
          default:
            JUMPOUT(0);
        }
        goto LABEL_56;
      }
      if (v9 >> 3 <= 0x3B)
      {
        switch(v13)
        {
          case '(':
            if (v9 != 66) {
              goto LABEL_8;
            }
            int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 10);
            if (!v14) {
              operator new();
            }
            return result;
          case ')':
            if (v9 != 74) {
              goto LABEL_8;
            }
            int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 11);
            if (!v14) {
              operator new();
            }
            return result;
          case '*':
            if (v9 != 82) {
              goto LABEL_8;
            }
            int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 12);
            if (!v14) {
              operator new();
            }
            return result;
          case '+':
            if (v9 != 90) {
              goto LABEL_8;
            }
            int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 13);
            if (!v14) {
              operator new();
            }
            return result;
          default:
            goto LABEL_8;
        }
        goto LABEL_56;
      }
      if (v13 == 60)
      {
        if (v9 != 226) {
          goto LABEL_8;
        }
        int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 14);
        if (!v14) {
          operator new();
        }
        goto LABEL_56;
      }
      if (v13 != 61) {
        break;
      }
      if (v9 != 234) {
        goto LABEL_8;
      }
      int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 15);
      if (!v14) {
        operator new();
      }
LABEL_56:
      unint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v19 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v19;
      if (v19 < 0 == v20)
      {
        int v21 = v17;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v14, a2, v18);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21)) {
          continue;
        }
      }
      return 0;
    }
    if (v13 == 62 && v9 == 242)
    {
      int v14 = (CoreML::Specification::WeightParams *)*((void *)this + 16);
      if (!v14) {
        operator new();
      }
      goto LABEL_56;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC113558(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::LSTMWeightParams *CoreML::Specification::LSTMWeightParams::LSTMWeightParams(CoreML::Specification::LSTMWeightParams *this)
{
  *(void *)this = &unk_1F361D740;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LSTMWeightParams *)&CoreML::Specification::_LSTMWeightParams_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *(_OWORD *)((char *)this + 124) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  return this;
}

void sub_1DC113658(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::LSTMWeightParams>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::ActivationParams>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::SamplingMode *CoreML::Specification::SamplingMode::SamplingMode(CoreML::Specification::SamplingMode *this)
{
  *(void *)this = &unk_1F361B3A0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SamplingMode *)&CoreML::Specification::_SamplingMode_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC113714(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SamplingMode::MergePartialFromCodedStream(CoreML::Specification::SamplingMode *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::BoxCoordinatesMode *CoreML::Specification::BoxCoordinatesMode::BoxCoordinatesMode(CoreML::Specification::BoxCoordinatesMode *this)
{
  *(void *)this = &unk_1F361E878;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BoxCoordinatesMode *)&CoreML::Specification::_BoxCoordinatesMode_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC113880(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BoxCoordinatesMode::MergePartialFromCodedStream(CoreML::Specification::BoxCoordinatesMode *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::PaddingLayerParams::clear_PaddingType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 3 || v2 == 2 || v2 == 1)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

CoreML::Specification::PaddingLayerParams_PaddingConstant *CoreML::Specification::PaddingLayerParams_PaddingConstant::PaddingLayerParams_PaddingConstant(CoreML::Specification::PaddingLayerParams_PaddingConstant *this)
{
  *(void *)this = &unk_1F3624940;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingConstant *)&CoreML::Specification::_PaddingLayerParams_PaddingConstant_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC113A58(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::PaddingLayerParams_PaddingConstant::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingConstant *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      int v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PaddingLayerParams_PaddingReflection *CoreML::Specification::PaddingLayerParams_PaddingReflection::PaddingLayerParams_PaddingReflection(CoreML::Specification::PaddingLayerParams_PaddingReflection *this)
{
  *(void *)this = &unk_1F36249D8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingReflection *)&CoreML::Specification::_PaddingLayerParams_PaddingReflection_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC113BC8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReflection::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingReflection *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::PaddingLayerParams_PaddingReplication *CoreML::Specification::PaddingLayerParams_PaddingReplication::PaddingLayerParams_PaddingReplication(CoreML::Specification::PaddingLayerParams_PaddingReplication *this)
{
  *(void *)this = &unk_1F3624BA0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingReplication *)&CoreML::Specification::_PaddingLayerParams_PaddingReplication_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC113CB8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReplication::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingReplication *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::BorderAmounts *CoreML::Specification::BorderAmounts::BorderAmounts(CoreML::Specification::BorderAmounts *this)
{
  *(void *)this = &unk_1F361B860;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BorderAmounts *)&CoreML::Specification::_BorderAmounts_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC113DBC(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(CoreML::Specification::BorderAmounts *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (CoreML::Specification::BorderAmounts *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      BOOL v6 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v7) = 0;
LABEL_7:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
      unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) == 0) {
        goto LABEL_13;
      }
LABEL_8:
      if (v8 != 82 || (v8 & 0xFFFFFFF8) != 0x50) {
        goto LABEL_13;
      }
      BOOL v10 = (int *)*((void *)this + 4);
      if (!v10)
      {
        int v11 = *((_DWORD *)this + 6);
        int v12 = *((_DWORD *)this + 7);
LABEL_21:
        if (v11 <= v12)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v12 - v11 + 1);
          BOOL v10 = (int *)*((void *)this + 4);
        }
        int v12 = *v10;
        goto LABEL_24;
      }
      int v11 = *((_DWORD *)this + 6);
      int v12 = *v10;
      if (v11 < *v10)
      {
        *((_DWORD *)this + 6) = v11 + 1;
        Aligned = *(google::protobuf::Arena ***)&v10[2 * v11 + 2];
        goto LABEL_29;
      }
      if (v12 == *((_DWORD *)this + 7)) {
        goto LABEL_21;
      }
LABEL_24:
      *BOOL v10 = v12 + 1;
      unint64_t v15 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::BorderAmounts_EdgeSizes::BorderAmounts_EdgeSizes((CoreML::Specification::BorderAmounts_EdgeSizes *)Aligned);
      uint64_t v16 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
      unsigned int *v16 = (google::protobuf::Arena *)Aligned;
      v16[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BorderAmounts_EdgeSizes>;
      int v17 = (unint64_t *)((char *)v15 + 32);
      do
        unint64_t v18 = __ldxr(v17);
      while (__stxr((unint64_t)v16, v17));
      v16[2] = (google::protobuf::Arena *)v18;
      uint64_t v19 = *((void *)this + 4);
      uint64_t v20 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v20 + 1;
      *(void *)(v19 + 8 * v20 + 8) = Aligned;
LABEL_29:
      int v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v21;
        *(void *)a2 = v21 + 1;
      }
      int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v25 = *((_DWORD *)a2 + 13);
      BOOL v26 = __OFSUB__(v25--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v25;
      if (v25 < 0 == v26)
      {
        int v27 = v23;
        uint64_t result = CoreML::Specification::BorderAmounts_EdgeSizes::MergePartialFromCodedStream((CoreML::Specification::BorderAmounts_EdgeSizes *)Aligned, (char **)a2, v24);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27)) {
          continue;
        }
      }
      return 0;
    }
    uint64_t v7 = *v6;
    if (*v6 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v6 + 1;
    unint64_t v8 = v7 | 0x100000000;
    if ((v8 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_13:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC114020(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BorderAmounts_EdgeSizes::MergePartialFromCodedStream(CoreML::Specification::BorderAmounts_EdgeSizes *this, char **a2, unsigned int a3)
{
  int v4 = (unint64_t *)((char *)this + 24);
  unint64_t v5 = (unint64_t *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        BOOL v6 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_22;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_22;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_22;
        }
        int v11 = *a2;
        if (*a2 >= a2[1] || *v11 < 0)
        {
          unint64_t *v4 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          unint64_t v12 = *v11;
          unsigned int v13 = v4;
LABEL_21:
          *unsigned int v13 = v12;
          *a2 = v11 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 < a2[1] && (*v11 & 0x80000000) == 0)
      {
        unint64_t v12 = *v11;
        unsigned int v13 = v5;
        goto LABEL_21;
      }
      *unint64_t v5 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
      if ((v15 & 1) == 0) {
        return 0;
      }
    }
LABEL_22:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

CoreML::Specification::BorderAmounts_EdgeSizes *CoreML::Specification::BorderAmounts_EdgeSizes::BorderAmounts_EdgeSizes(CoreML::Specification::BorderAmounts_EdgeSizes *this)
{
  *(void *)this = &unk_1F36216C8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::BorderAmounts_EdgeSizes *)&CoreML::Specification::_BorderAmounts_EdgeSizes_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC1141F0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::BorderAmounts_EdgeSizes>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t CoreML::Specification::ActivationParams::clear_NonlinearityType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 <= 30)
  {
    if (v2 > 19)
    {
      if (v2 != 20 && v2 != 25 && v2 != 30) {
        goto LABEL_24;
      }
    }
    else if (v2 != 5 && v2 != 10 && v2 != 15)
    {
      goto LABEL_24;
    }
  }
  else if (v2 <= 49)
  {
    if (v2 != 31 && v2 != 40 && v2 != 41) {
      goto LABEL_24;
    }
  }
  else if (v2 > 69)
  {
    if (v2 != 70 && v2 != 71) {
      goto LABEL_24;
    }
  }
  else if (v2 != 50 && v2 != 60)
  {
    goto LABEL_24;
  }
  this = *(void *)(this + 16);
  if (this) {
    this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
  }
LABEL_24:
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::ActivationLinear *CoreML::Specification::ActivationLinear::ActivationLinear(CoreML::Specification::ActivationLinear *this)
{
  *(void *)this = &unk_1F361D0B8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationLinear *)&CoreML::Specification::_ActivationLinear_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC114378(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationLinear::MergePartialFromCodedStream(CoreML::Specification::ActivationLinear *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        unint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unint64_t v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        break;
      }
      unsigned int v17 = 0;
      BOOL v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationReLU *CoreML::Specification::ActivationReLU::ActivationReLU(CoreML::Specification::ActivationReLU *this)
{
  *(void *)this = &unk_1F361BB58;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationReLU *)&CoreML::Specification::_ActivationReLU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC11453C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationReLU *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationLeakyReLU *CoreML::Specification::ActivationLeakyReLU::ActivationLeakyReLU(CoreML::Specification::ActivationLeakyReLU *this)
{
  *(void *)this = &unk_1F361F1F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationLeakyReLU *)&CoreML::Specification::_ActivationLeakyReLU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC11462C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationLeakyReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationLeakyReLU *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationThresholdedReLU *CoreML::Specification::ActivationThresholdedReLU::ActivationThresholdedReLU(CoreML::Specification::ActivationThresholdedReLU *this)
{
  *(void *)this = &unk_1F3622340;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationThresholdedReLU *)&CoreML::Specification::_ActivationThresholdedReLU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC11479C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationThresholdedReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationThresholdedReLU *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationPReLU *CoreML::Specification::ActivationPReLU::ActivationPReLU(CoreML::Specification::ActivationPReLU *this)
{
  *(void *)this = &unk_1F361C3A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationPReLU *)&CoreML::Specification::_ActivationPReLU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC114910(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationPReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationPReLU *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
      unint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v16 = *((_DWORD *)a2 + 13);
      BOOL v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v16;
      if (v16 < 0 == v17)
      {
        int v18 = v14;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v11, a2, v15);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18)) {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC114A80(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ActivationTanh *CoreML::Specification::ActivationTanh::ActivationTanh(CoreML::Specification::ActivationTanh *this)
{
  *(void *)this = &unk_1F361BBF0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationTanh *)&CoreML::Specification::_ActivationTanh_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC114B04(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationTanh::MergePartialFromCodedStream(CoreML::Specification::ActivationTanh *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationScaledTanh *CoreML::Specification::ActivationScaledTanh::ActivationScaledTanh(CoreML::Specification::ActivationScaledTanh *this)
{
  *(void *)this = &unk_1F361F9B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationScaledTanh *)&CoreML::Specification::_ActivationScaledTanh_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC114BF8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationScaledTanh::MergePartialFromCodedStream(CoreML::Specification::ActivationScaledTanh *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        unint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unint64_t v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        break;
      }
      unsigned int v17 = 0;
      BOOL v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationSigmoid *CoreML::Specification::ActivationSigmoid::ActivationSigmoid(CoreML::Specification::ActivationSigmoid *this)
{
  *(void *)this = &unk_1F361DC98;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSigmoid *)&CoreML::Specification::_ActivationSigmoid_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC114DBC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationSigmoid::MergePartialFromCodedStream(CoreML::Specification::ActivationSigmoid *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationSigmoidHard *CoreML::Specification::ActivationSigmoidHard::ActivationSigmoidHard(CoreML::Specification::ActivationSigmoidHard *this)
{
  *(void *)this = &unk_1F3620298;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSigmoidHard *)&CoreML::Specification::_ActivationSigmoidHard_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC114EB0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationSigmoidHard::MergePartialFromCodedStream(CoreML::Specification::ActivationSigmoidHard *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        unint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 21) {
          goto LABEL_20;
        }
        unsigned int v16 = 0;
        unint64_t v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
        }
        else
        {
          unsigned int v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13) {
        break;
      }
      unsigned int v17 = 0;
      BOOL v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
      }
      else
      {
        unsigned int v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationELU *CoreML::Specification::ActivationELU::ActivationELU(CoreML::Specification::ActivationELU *this)
{
  *(void *)this = &unk_1F361B698;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationELU *)&CoreML::Specification::_ActivationELU_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC115074(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationELU::MergePartialFromCodedStream(CoreML::Specification::ActivationELU *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v14 = 0;
      unint64_t v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result) {
          return result;
        }
        unsigned int v13 = v14;
      }
      else
      {
        unsigned int v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationSoftsign *CoreML::Specification::ActivationSoftsign::ActivationSoftsign(CoreML::Specification::ActivationSoftsign *this)
{
  *(void *)this = &unk_1F361E6B0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSoftsign *)&CoreML::Specification::_ActivationSoftsign_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1151E4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationSoftsign::MergePartialFromCodedStream(CoreML::Specification::ActivationSoftsign *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationSoftplus *CoreML::Specification::ActivationSoftplus::ActivationSoftplus(CoreML::Specification::ActivationSoftplus *this)
{
  *(void *)this = &unk_1F361E618;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSoftplus *)&CoreML::Specification::_ActivationSoftplus_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC1152D4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationSoftplus::MergePartialFromCodedStream(CoreML::Specification::ActivationSoftplus *this, char **a2, unsigned int a3)
{
  do
  {
    int v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationParametricSoftplus *CoreML::Specification::ActivationParametricSoftplus::ActivationParametricSoftplus(CoreML::Specification::ActivationParametricSoftplus *this)
{
  *(void *)this = &unk_1F3623640;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationParametricSoftplus *)&CoreML::Specification::_ActivationParametricSoftplus_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC1153C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationParametricSoftplus::MergePartialFromCodedStream(CoreML::Specification::ActivationParametricSoftplus *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      BOOL v10 = (CoreML::Specification::WeightParams *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      unsigned int v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v16 = *((_DWORD *)a2 + 13);
      BOOL v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v16;
      if (v16 < 0 == v17)
      {
        int v18 = v14;
        BOOL result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v10, a2, v15);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18)) {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      BOOL v10 = (CoreML::Specification::WeightParams *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC11557C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 84);
  if (v2 == 32 || v2 == 31 || v2 == 30)
  {
    this = *(void *)(this + 72);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 84) = 0;
  return this;
}

CoreML::Specification::ValidPadding *CoreML::Specification::ValidPadding::ValidPadding(CoreML::Specification::ValidPadding *this)
{
  *(void *)this = &unk_1F361B568;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::ValidPadding *)&CoreML::Specification::_ValidPadding_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC115674(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ValidPadding::MergePartialFromCodedStream(CoreML::Specification::ValidPadding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = (CoreML::Specification::BorderAmounts *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
      unint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v16 = *((_DWORD *)a2 + 13);
      BOOL v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v16;
      if (v16 < 0 == v17)
      {
        int v18 = v14;
        uint64_t result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v11, a2, v15);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18)) {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC1157E4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::SamePadding *CoreML::Specification::SamePadding::SamePadding(CoreML::Specification::SamePadding *this)
{
  *(void *)this = &unk_1F361A988;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SamePadding *)&CoreML::Specification::_SamePadding_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC115868(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SamePadding::MergePartialFromCodedStream(CoreML::Specification::SamePadding *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      unint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PoolingLayerParams_ValidCompletePadding *CoreML::Specification::PoolingLayerParams_ValidCompletePadding::PoolingLayerParams_ValidCompletePadding(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3624E00;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)&CoreML::Specification::_PoolingLayerParams_ValidCompletePadding_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC1159E0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PoolingLayerParams_ValidCompletePadding::MergePartialFromCodedStream(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 0x50) {
        break;
      }
      if (v8 == 80)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x52u, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 82) {
          break;
        }
        BOOL v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            unint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 172);
  if (v2 == 51 || v2 == 50)
  {
    this = *(void *)(this + 160);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 172) = 0;
  return this;
}

CoreML::Specification::Tensor *CoreML::Specification::Tensor::Tensor(CoreML::Specification::Tensor *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3625190;
  *((void *)this + 2) = 0;
  *((void *)this + google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Tensor *)&CoreML::Specification::_Tensor_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 1CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  return this;
}

void sub_1DC115CE0(_Unwind_Exception *a1)
{
  int v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::Tensor>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::NeuralNetworkLayer *CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer(CoreML::Specification::NeuralNetworkLayer *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F361EAD8;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 0;
  if (this != (CoreML::Specification::NeuralNetworkLayer *)&CoreML::Specification::_NeuralNetworkLayer_default_instance_) {
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  }
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((unsigned char *)this + 12CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 0;
  *((void *)this + 17) = 0;
  return this;
}

void sub_1DC115DC8(_Unwind_Exception *a1)
{
  unint64_t v5 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)(v1 + 40));
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkLayer>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *CoreML::Specification::NeuralNetworkRegressor::MergeFrom(std::string *this, const CoreML::Specification::NeuralNetworkRegressor *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (const CoreML::Specification::NeuralNetworkLayer **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    unsigned int v11 = (const CoreML::Specification::NeuralNetworkPreprocessing **)(*((void *)a2 + 7) + 8);
    BOOL v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((std::string *)((char *)v3 + 40), (std::string **)v12, v11, v10, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v13 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v10;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
    int v14 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v14 < v13) {
      signed int *v14 = v13;
    }
  }
  if (a2 != (const CoreML::Specification::NeuralNetworkRegressor *)&CoreML::Specification::_NeuralNetworkRegressor_default_instance_
    && *((void *)a2 + 8))
  {
    uint64_t v15 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v15) {
      operator new();
    }
    this = CoreML::Specification::NetworkUpdateParameters::MergeFrom(v15, *((const CoreML::Specification::NetworkUpdateParameters **)a2 + 8));
  }
  int v16 = *((_DWORD *)a2 + 18);
  if (v16) {
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v16;
  }
  int v17 = *((_DWORD *)a2 + 19);
  if (v17) {
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = v17;
  }
  return this;
}

void sub_1DC115FBC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(std::string *result, std::string **a2, const CoreML::Specification::NeuralNetworkLayer **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    BOOL v12 = a2;
    do
    {
      int v14 = *v11++;
      signed int v13 = v14;
      uint64_t v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkLayer>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    int v18 = *v9;
    unint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    uint64_t v20 = &a3[a5];
    do
    {
      char v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer((CoreML::Specification::NeuralNetworkLayer *)Aligned);
      uint64_t v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *uint64_t v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkLayer>;
      uint64_t v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkLayer>::Merge(v21, (std::string *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1DC116104(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40665201BALL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(std::string *result, std::string **a2, const CoreML::Specification::NeuralNetworkPreprocessing **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    BOOL v12 = a2;
    do
    {
      int v14 = *v11++;
      signed int v13 = v14;
      uint64_t v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkPreprocessing>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    int v18 = *v9;
    unint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    uint64_t v20 = &a3[a5];
    do
    {
      char v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing((CoreML::Specification::NeuralNetworkPreprocessing *)Aligned);
      uint64_t v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *uint64_t v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkPreprocessing>;
      uint64_t v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkPreprocessing>::Merge(v21, (std::string *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1DC11624C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkPreprocessing>::Merge(const CoreML::Specification::NeuralNetworkPreprocessing *a1, std::string *a2)
{
  return CoreML::Specification::NeuralNetworkPreprocessing::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::NeuralNetworkPreprocessing::MergeFrom(std::string *this, const CoreML::Specification::NeuralNetworkPreprocessing *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  int v7 = *((_DWORD *)a2 + 9);
  if (v7 == 11)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[1]) != 11)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)v3);
      HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = 11;
      operator new();
    }
    unint64_t v9 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((void *)a2 + 3);
    data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(data, v9);
  }
  else if (v7 == 10)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[1]) != 10)
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)v3);
      HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = 10;
      operator new();
    }
    signed int v8 = (const CoreML::Specification::NeuralNetworkImageScaler *)*((void *)a2 + 3);
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__data_;
    return CoreML::Specification::NeuralNetworkImageScaler::MergeFrom(v10, v8);
  }
  return this;
}

void sub_1DC11643C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::NeuralNetworkImageScaler::MergeFrom(std::string *this, const CoreML::Specification::NeuralNetworkImageScaler *a2)
{
  int v3 = (float *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    v3[4] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    v3[5] = v6;
  }
  float v7 = *((float *)a2 + 6);
  if (v7 != 0.0) {
    v3[6] = v7;
  }
  float v8 = *((float *)a2 + 7);
  if (v8 != 0.0) {
    v3[7] = v8;
  }
  float v9 = *((float *)a2 + 8);
  if (v9 != 0.0) {
    v3[8] = v9;
  }
  return this;
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkLayer>::Merge(const CoreML::Specification::NeuralNetworkLayer *a1, std::string *a2)
{
  return CoreML::Specification::NeuralNetworkLayer::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::NeuralNetworkLayer::MergeFrom(std::string *this, const CoreML::Specification::NeuralNetworkLayer *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    float v6 = (const std::string **)(*((void *)a2 + 4) + 8);
    float v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    unsigned int v11 = (const std::string **)(*((void *)a2 + 7) + 8);
    BOOL v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)((char *)v3 + 40), (std::string **)v12, v11, v10, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v13 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v10;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
    int v14 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v14 < v13) {
      signed int *v14 = v13;
    }
  }
  unsigned int v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    BOOL v16 = (CoreML::Specification::ReshapeLayerParams **)(*((void *)a2 + 10) + 8);
    int v17 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[2].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 18));
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(&v3[2].__r_.__value_.__r.__words[2], (CoreML::Specification::ReshapeLayerParams **)v17, v16, v15, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    signed int v18 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v15;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v18;
    unint64_t v19 = (signed int *)v3[3].__r_.__value_.__l.__size_;
    if (*v19 < v18) {
      *unint64_t v19 = v18;
    }
  }
  unsigned int v20 = *((_DWORD *)a2 + 24);
  if (v20)
  {
    char v21 = (CoreML::Specification::ReshapeLayerParams **)(*((void *)a2 + 13) + 8);
    signed int v22 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[3].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 24));
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(&v3[3].__r_.__value_.__r.__words[2], (CoreML::Specification::ReshapeLayerParams **)v22, v21, v20, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    signed int v23 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v20;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v23;
    uint64_t v24 = (signed int *)v3[4].__r_.__value_.__l.__size_;
    if (*v24 < v23) {
      *uint64_t v24 = v23;
    }
  }
  uint64_t v25 = *((void *)a2 + 14);
  if (*(char *)(v25 + 23) < 0)
  {
    if (!*(void *)(v25 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v25 + 23))
  {
    goto LABEL_23;
  }
  this = (std::string *)((char *)v3 + 112);
  BOOL v26 = (uint64_t *)v3[4].__r_.__value_.__r.__words[2];
  if (v26 != (uint64_t *)v25)
  {
    if (v26 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v25);
    }
    this = std::string::operator=((std::string *)v3[4].__r_.__value_.__r.__words[2], (const std::string *)v25);
  }
LABEL_23:
  if (*((unsigned char *)a2 + 120)) {
    v3[5].__r_.__value_.__s.__data_[0] = 1;
  }
  char v28 = (_DWORD *)((char *)a2 + 140);
  int v27 = *((_DWORD *)a2 + 35);
  if (v27 > 879)
  {
    if (v27 <= 1139)
    {
      if (v27 <= 994)
      {
        if (v27 <= 939)
        {
          if (v27 <= 904)
          {
            if (v27 <= 889)
            {
              if (v27 == 880)
              {
                this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_addbroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
                unsigned int v32 = this;
                if (*v28 != 880)
                {
                  this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                  int v33 = &CoreML::Specification::_AddBroadcastableLayerParams_default_instance_;
                  goto LABEL_542;
                }
              }
              else
              {
                if (v27 != 885) {
                  return this;
                }
                this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_powbroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
                unsigned int v32 = this;
                if (*v28 != 885)
                {
                  this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                  int v33 = &CoreML::Specification::_PowBroadcastableLayerParams_default_instance_;
                  goto LABEL_542;
                }
              }
            }
            else
            {
              switch(v27)
              {
                case 890:
                  this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_dividebroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
                  unsigned int v32 = this;
                  if (*v28 != 890)
                  {
                    this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                    int v33 = &CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                case 895:
                  this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_floordivbroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
                  unsigned int v32 = this;
                  if (*v28 != 895)
                  {
                    this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                    int v33 = &CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                case 900:
                  this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_multiplybroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
                  unsigned int v32 = this;
                  if (*v28 != 900)
                  {
                    this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                    int v33 = &CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                default:
                  return this;
              }
            }
            goto LABEL_541;
          }
          if (v27 <= 924)
          {
            if (v27 == 905)
            {
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_subtractbroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 != 905)
              {
                this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                int v33 = &CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            }
            if (v27 != 920) {
              return this;
            }
            int v122 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_tile((CoreML::Specification::NeuralNetworkLayer *)v3);
            v123 = (unint64_t *)v122;
            if (*v28 == 920)
            {
              int v66 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v122);
              int v66 = &CoreML::Specification::_TileLayerParams_default_instance_;
            }
            int v321 = v123;
            return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v321, (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)v66);
          }
          switch(v27)
          {
            case 925:
              int v222 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_stack((CoreML::Specification::NeuralNetworkLayer *)v3);
              v223 = (std::string *)v222;
              if (*v28 == 925)
              {
                v113 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v222);
                v113 = &CoreML::Specification::_StackLayerParams_default_instance_;
              }
              v326 = v223;
              break;
            case 930:
              v224 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gather((CoreML::Specification::NeuralNetworkLayer *)v3);
              v225 = (std::string *)v224;
              if (*v28 == 930)
              {
                v113 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v224);
                v113 = &CoreML::Specification::_GatherLayerParams_default_instance_;
              }
              v326 = v225;
              break;
            case 935:
              unint64_t v73 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_scatter((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v74 = (std::string *)v73;
              if (*v28 == 935)
              {
                int v75 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v73);
                int v75 = &CoreML::Specification::_ScatterLayerParams_default_instance_;
              }
              int v323 = v74;
              return CoreML::Specification::ReorganizeDataLayerParams::MergeFrom(v323, (const CoreML::Specification::ReorganizeDataLayerParams *)v75);
            default:
              return this;
          }
          return CoreML::Specification::SplitLayerParams::MergeFrom(v326, (const CoreML::Specification::SplitLayerParams *)v113);
        }
        if (v27 <= 959)
        {
          switch(v27)
          {
            case 945:
              uint64_t v55 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_scatternd((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v56 = (std::string *)v55;
              if (*v28 == 945)
              {
                int v57 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v55);
                int v57 = &CoreML::Specification::_ScatterNDLayerParams_default_instance_;
              }
              v320 = v56;
              return CoreML::Specification::FlattenLayerParams::MergeFrom(v320, (const CoreML::Specification::FlattenLayerParams *)v57);
            case 946:
            case 947:
            case 948:
            case 949:
            case 951:
            case 953:
              return this;
            case 950:
              v188 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_softmaxnd((CoreML::Specification::NeuralNetworkLayer *)v3);
              v189 = (std::string *)v188;
              if (*v28 == 950)
              {
                v113 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v188);
                v113 = &CoreML::Specification::_SoftmaxNDLayerParams_default_instance_;
              }
              v326 = v189;
              return CoreML::Specification::SplitLayerParams::MergeFrom(v326, (const CoreML::Specification::SplitLayerParams *)v113);
            case 952:
              v190 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gatheralongaxis((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v191 = (std::string *)v190;
              if (*v28 == 952)
              {
                v113 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v190);
                v113 = &CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_;
              }
              v326 = v191;
              return CoreML::Specification::SplitLayerParams::MergeFrom(v326, (const CoreML::Specification::SplitLayerParams *)v113);
            case 954:
              v192 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_scatteralongaxis((CoreML::Specification::NeuralNetworkLayer *)v3);
              v193 = (std::string *)v192;
              if (*v28 == 954)
              {
                int v75 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v192);
                int v75 = &CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_;
              }
              int v323 = v193;
              return CoreML::Specification::ReorganizeDataLayerParams::MergeFrom(v323, (const CoreML::Specification::ReorganizeDataLayerParams *)v75);
            default:
              if (v27 != 940) {
                return this;
              }
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_gathernd((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 == 940) {
                goto LABEL_541;
              }
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_GatherNDLayerParams_default_instance_;
              break;
          }
          goto LABEL_542;
        }
        if (v27 > 974)
        {
          if (v27 == 975)
          {
            int v243 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_splitnd((CoreML::Specification::NeuralNetworkLayer *)v3);
            BOOL v244 = (unint64_t *)v243;
            if (*v28 == 975)
            {
              int v245 = (const CoreML::Specification::SplitNDLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v243);
              int v245 = (const CoreML::Specification::SplitNDLayerParams *)&CoreML::Specification::_SplitNDLayerParams_default_instance_;
            }
            return (std::string *)CoreML::Specification::SplitNDLayerParams::MergeFrom(v244, v245);
          }
          if (v27 != 980)
          {
            if (v27 != 985) {
              return this;
            }
            uint64_t v87 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_transpose((CoreML::Specification::NeuralNetworkLayer *)v3);
            uint64_t v88 = (unint64_t *)v87;
            if (*v28 == 985)
            {
              int v66 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v87);
              int v66 = &CoreML::Specification::_TransposeLayerParams_default_instance_;
            }
            int v321 = v88;
            return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v321, (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)v66);
          }
          v246 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_concatnd((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v247 = (std::string *)v246;
          if (*v28 == 980)
          {
            uint64_t v45 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v246);
            uint64_t v45 = &CoreML::Specification::_ConcatNDLayerParams_default_instance_;
          }
          v318 = v247;
          return CoreML::Specification::ConcatNDLayerParams::MergeFrom(v318, (const CoreML::Specification::ConcatNDLayerParams *)v45);
        }
        if (v27 == 960)
        {
          v306 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reverse((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v307 = (unint64_t *)v306;
          if (*v28 == 960)
          {
            v308 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedBools *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v306);
            v308 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedBools *)&CoreML::Specification::_ReverseLayerParams_default_instance_;
          }
          return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedBools::MergeFrom(v307, v308);
        }
        if (v27 != 965) {
          return this;
        }
        int v140 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reverseseq((CoreML::Specification::NeuralNetworkLayer *)v3);
        std::string v141 = (std::string *)v140;
        if (*v28 == 965)
        {
          v129 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v140);
          v129 = &CoreML::Specification::_ReverseSeqLayerParams_default_instance_;
        }
        v328 = v141;
        return CoreML::Specification::Int64Range::MergeFrom(v328, (const CoreML::Specification::Int64Range *)v129);
      }
      if (v27 <= 1079)
      {
        if (v27 > 1024)
        {
          if (v27 > 1044)
          {
            switch(v27)
            {
              case 1045:
                v234 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_batchedmatmul((CoreML::Specification::NeuralNetworkLayer *)v3);
                v235 = (std::string *)v234;
                if (*v28 == 1045)
                {
                  v236 = (const CoreML::Specification::BatchedMatMulLayerParams *)*((void *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v234);
                  v236 = (const CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_;
                }
                return CoreML::Specification::BatchedMatMulLayerParams::MergeFrom(v235, v236);
              case 1065:
                this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_getshape((CoreML::Specification::NeuralNetworkLayer *)v3);
                unsigned int v32 = this;
                if (*v28 != 1065)
                {
                  this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                  int v33 = &CoreML::Specification::_GetShapeLayerParams_default_instance_;
                  goto LABEL_542;
                }
                goto LABEL_541;
              case 1070:
                signed int v79 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_loadconstantnd((CoreML::Specification::NeuralNetworkLayer *)v3);
                uint64_t v80 = (unint64_t *)v79;
                if (*v28 == 1070)
                {
                  uint64_t v81 = (const CoreML::Specification::LoadConstantNDLayerParams *)*((void *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v79);
                  uint64_t v81 = (const CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_;
                }
                return (std::string *)CoreML::Specification::LoadConstantNDLayerParams::MergeFrom(v80, v81);
            }
            return this;
          }
          if (v27 != 1025)
          {
            if (v27 == 1040)
            {
              v133 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_embeddingnd((CoreML::Specification::NeuralNetworkLayer *)v3);
              v134 = (std::string *)v133;
              if (*v28 == 1040)
              {
                int v135 = (const CoreML::Specification::EmbeddingNDLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v133);
                int v135 = (const CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_;
              }
              return CoreML::Specification::EmbeddingNDLayerParams::MergeFrom(v134, v135);
            }
            return this;
          }
          int v299 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_argmax((CoreML::Specification::NeuralNetworkLayer *)v3);
          v300 = (std::string *)v299;
          if (*v28 == 1025)
          {
            uint64_t v45 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v299);
            uint64_t v45 = &CoreML::Specification::_ArgMaxLayerParams_default_instance_;
          }
          v318 = v300;
        }
        else
        {
          if (v27 <= 1004)
          {
            if (v27 == 995)
            {
              int v277 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slicestatic((CoreML::Specification::NeuralNetworkLayer *)v3);
              v278 = (unint64_t *)v277;
              if (*v28 == 995)
              {
                int v279 = (const CoreML::Specification::SliceStaticLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v277);
                int v279 = (const CoreML::Specification::SliceStaticLayerParams *)&CoreML::Specification::_SliceStaticLayerParams_default_instance_;
              }
              return (std::string *)CoreML::Specification::SliceStaticLayerParams::MergeFrom(v278, v279);
            }
            else if (v27 == 1000)
            {
              uint64_t v102 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slicedynamic((CoreML::Specification::NeuralNetworkLayer *)v3);
              uint64_t v103 = (unint64_t *)v102;
              if (*v28 == 1000)
              {
                unint64_t v104 = (const CoreML::Specification::SliceDynamicLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v102);
                unint64_t v104 = (const CoreML::Specification::SliceDynamicLayerParams *)&CoreML::Specification::_SliceDynamicLayerParams_default_instance_;
              }
              return (std::string *)CoreML::Specification::SliceDynamicLayerParams::MergeFrom(v103, v104);
            }
            return this;
          }
          if (v27 == 1005)
          {
            int v165 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slidingwindows((CoreML::Specification::NeuralNetworkLayer *)v3);
            v166 = (std::string *)v165;
            if (*v28 == 1005)
            {
              v167 = (const CoreML::Specification::SlidingWindowsLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v165);
              v167 = (const CoreML::Specification::SlidingWindowsLayerParams *)&CoreML::Specification::_SlidingWindowsLayerParams_default_instance_;
            }
            return CoreML::Specification::SlidingWindowsLayerParams::MergeFrom(v166, v167);
          }
          if (v27 == 1015)
          {
            v168 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_topk((CoreML::Specification::NeuralNetworkLayer *)v3);
            v169 = (std::string *)v168;
            if (*v28 == 1015)
            {
              int v170 = (const CoreML::Specification::TopKLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v168);
              int v170 = (const CoreML::Specification::TopKLayerParams *)&CoreML::Specification::_TopKLayerParams_default_instance_;
            }
            return CoreML::Specification::TopKLayerParams::MergeFrom(v169, v170);
          }
          if (v27 != 1020) {
            return this;
          }
          unsigned int v43 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_argmin((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v44 = (std::string *)v43;
          if (*v28 == 1020)
          {
            uint64_t v45 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v43);
            uint64_t v45 = &CoreML::Specification::_ArgMinLayerParams_default_instance_;
          }
          v318 = v44;
        }
        return CoreML::Specification::ConcatNDLayerParams::MergeFrom(v318, (const CoreML::Specification::ConcatNDLayerParams *)v45);
      }
      if (v27 > 1109)
      {
        if (v27 <= 1124)
        {
          if (v27 != 1110)
          {
            if (v27 == 1120)
            {
              v145 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_squeeze((CoreML::Specification::NeuralNetworkLayer *)v3);
              v146 = (unint64_t *)v145;
              if (*v28 == 1120)
              {
                v147 = (const CoreML::Specification::SqueezeLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v145);
                v147 = (const CoreML::Specification::SqueezeLayerParams *)&CoreML::Specification::_SqueezeLayerParams_default_instance_;
              }
              return (std::string *)CoreML::Specification::SqueezeLayerParams::MergeFrom(v146, v147);
            }
            return this;
          }
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttodynamic((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 1110)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_;
LABEL_542:
            uint64_t v312 = v33[1];
            if (v312)
            {
              return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&v32->__r_.__value_.__l.__size_, v312 & 0xFFFFFFFFFFFFFFFELL);
            }
            return this;
          }
          goto LABEL_541;
        }
        if (v27 == 1125)
        {
          v254 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_expanddims((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v255 = (unint64_t *)v254;
          if (*v28 == 1125)
          {
            int v66 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v254);
            int v66 = &CoreML::Specification::_ExpandDimsLayerParams_default_instance_;
          }
          int v321 = v255;
          return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v321, (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)v66);
        }
        if (v27 != 1130)
        {
          if (v27 != 1135) {
            return this;
          }
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_reshapelike((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 1135)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_ReshapeLikeLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        v256 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_flattento2d((CoreML::Specification::NeuralNetworkLayer *)v3);
        int v257 = (std::string *)v256;
        if (*v28 == 1130)
        {
          v113 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v256);
          v113 = &CoreML::Specification::_FlattenTo2DLayerParams_default_instance_;
        }
        v326 = v257;
        return CoreML::Specification::SplitLayerParams::MergeFrom(v326, (const CoreML::Specification::SplitLayerParams *)v113);
      }
      if (v27 <= 1089)
      {
        if (v27 == 1080)
        {
          int v287 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_filllike((CoreML::Specification::NeuralNetworkLayer *)v3);
          v288 = (std::string *)v287;
          if (*v28 == 1080)
          {
            uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v287);
            uint64_t v48 = &CoreML::Specification::_FillLikeLayerParams_default_instance_;
          }
          int v319 = v288;
          return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
        }
        if (v27 == 1085)
        {
          v114 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_fillstatic((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v115 = (unint64_t *)v114;
          if (*v28 == 1085)
          {
            v116 = (const CoreML::Specification::FillStaticLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v114);
            v116 = (const CoreML::Specification::FillStaticLayerParams *)&CoreML::Specification::_FillStaticLayerParams_default_instance_;
          }
          return (std::string *)CoreML::Specification::FillStaticLayerParams::MergeFrom(v115, v116);
        }
        return this;
      }
      if (v27 == 1090)
      {
        int v213 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_filldynamic((CoreML::Specification::NeuralNetworkLayer *)v3);
        v214 = (std::string *)v213;
        if (*v28 == 1090)
        {
          uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v213);
          uint64_t v48 = &CoreML::Specification::_FillDynamicLayerParams_default_instance_;
        }
        int v319 = v214;
        return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
      }
      if (v27 == 1100)
      {
        this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttolike((CoreML::Specification::NeuralNetworkLayer *)v3);
        unsigned int v32 = this;
        if (*v28 != 1100)
        {
          this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
          int v33 = &CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_;
          goto LABEL_542;
        }
        goto LABEL_541;
      }
      if (v27 != 1105) {
        return this;
      }
      int v64 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttostatic((CoreML::Specification::NeuralNetworkLayer *)v3);
      BOOL v65 = (unint64_t *)v64;
      if (*v28 == 1105)
      {
        int v66 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v64);
        int v66 = &CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_;
      }
      int v321 = v65;
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v321, (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)v66);
    }
    if (v27 > 1274)
    {
      if (v27 > 1349)
      {
        if (v27 <= 1454)
        {
          switch(v27)
          {
            case 1350:
              v260 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_layernormalization((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v261 = (unint64_t *)v260;
              if (*v28 == 1350)
              {
                v262 = (const CoreML::Specification::LayerNormalizationLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v260);
                v262 = (const CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_;
              }
              return (std::string *)CoreML::Specification::LayerNormalizationLayerParams::MergeFrom(v261, v262);
            case 1400:
              int v263 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_nonmaximumsuppression((CoreML::Specification::NeuralNetworkLayer *)v3);
              v264 = (std::string *)v263;
              if (*v28 == 1400)
              {
                int v265 = (const CoreML::Specification::NonMaximumSuppressionLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v263);
                int v265 = (const CoreML::Specification::NonMaximumSuppressionLayerParams *)&CoreML::Specification::_NonMaximumSuppressionLayerParams_default_instance_;
              }
              return CoreML::Specification::NonMaximumSuppressionLayerParams::MergeFrom(v264, v265);
            case 1450:
              uint64_t v91 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_onehot((CoreML::Specification::NeuralNetworkLayer *)v3);
              uint64_t v92 = (std::string *)v91;
              if (*v28 == 1450)
              {
                uint64_t v93 = (const CoreML::Specification::OneHotLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v91);
                uint64_t v93 = (const CoreML::Specification::OneHotLayerParams *)&CoreML::Specification::_OneHotLayerParams_default_instance_;
              }
              return CoreML::Specification::OneHotLayerParams::MergeFrom(v92, v93);
          }
        }
        else
        {
          switch(v27)
          {
            case 1455:
              unint64_t v58 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_cumsum((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v59 = (std::string *)v58;
              if (*v28 == 1455)
              {
                unint64_t v60 = (const CoreML::Specification::CumSumLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v58);
                unint64_t v60 = (const CoreML::Specification::CumSumLayerParams *)&CoreML::Specification::_CumSumLayerParams_default_instance_;
              }
              this = CoreML::Specification::CumSumLayerParams::MergeFrom(v59, v60);
              break;
            case 1460:
              v194 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_clampedrelu((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v195 = (std::string *)v194;
              if (*v28 == 1460)
              {
                int v126 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v194);
                int v126 = &CoreML::Specification::_ClampedReLULayerParams_default_instance_;
              }
              int v327 = v195;
              return CoreML::Specification::RangeDynamicLayerParams::MergeFrom(v327, (const CoreML::Specification::RangeDynamicLayerParams *)v126);
            case 1461:
              v196 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_argsort((CoreML::Specification::NeuralNetworkLayer *)v3);
              v197 = (std::string *)v196;
              if (*v28 == 1461)
              {
                uint64_t v45 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v196);
                uint64_t v45 = &CoreML::Specification::_ArgSortLayerParams_default_instance_;
              }
              v318 = v197;
              return CoreML::Specification::ConcatNDLayerParams::MergeFrom(v318, (const CoreML::Specification::ConcatNDLayerParams *)v45);
            case 1465:
              int v198 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_pooling3d((CoreML::Specification::NeuralNetworkLayer *)v3);
              v199 = (std::string *)v198;
              if (*v28 == 1465)
              {
                int v200 = (const CoreML::Specification::Pooling3DLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v198);
                int v200 = (const CoreML::Specification::Pooling3DLayerParams *)&CoreML::Specification::_Pooling3DLayerParams_default_instance_;
              }
              this = CoreML::Specification::Pooling3DLayerParams::MergeFrom(v199, v200);
              break;
            case 1466:
              v201 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_globalpooling3d((CoreML::Specification::NeuralNetworkLayer *)v3);
              v202 = (std::string *)v201;
              if (*v28 == 1466)
              {
                int v57 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v201);
                int v57 = &CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_;
              }
              v320 = v202;
              return CoreML::Specification::FlattenLayerParams::MergeFrom(v320, (const CoreML::Specification::FlattenLayerParams *)v57);
            case 1470:
              v203 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slicebysize((CoreML::Specification::NeuralNetworkLayer *)v3);
              v204 = (std::string *)v203;
              if (*v28 == 1470)
              {
                v129 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v203);
                v129 = &CoreML::Specification::_SliceBySizeLayerParams_default_instance_;
              }
              v328 = v204;
              return CoreML::Specification::Int64Range::MergeFrom(v328, (const CoreML::Specification::Int64Range *)v129);
            case 1471:
              v205 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_convolution3d((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v206 = (unint64_t *)v205;
              if (*v28 == 1471)
              {
                v207 = (const CoreML::Specification::Convolution3DLayerParams *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v205);
                v207 = (const CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_;
              }
              this = (std::string *)CoreML::Specification::Convolution3DLayerParams::MergeFrom(v206, v207);
              break;
            default:
              return this;
          }
        }
        return this;
      }
      if (v27 > 1312)
      {
        if (v27 > 1319)
        {
          switch(v27)
          {
            case 1320:
              v226 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_lowertriangular((CoreML::Specification::NeuralNetworkLayer *)v3);
              v227 = (std::string *)v226;
              if (*v28 == 1320)
              {
                v113 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v226);
                v113 = &CoreML::Specification::_LowerTriangularLayerParams_default_instance_;
              }
              v326 = v227;
              break;
            case 1325:
              v228 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_uppertriangular((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v229 = (std::string *)v228;
              if (*v28 == 1325)
              {
                v113 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v228);
                v113 = &CoreML::Specification::_UpperTriangularLayerParams_default_instance_;
              }
              v326 = v229;
              break;
            case 1330:
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_wherebroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 != 1330)
              {
                this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                int v33 = &CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            default:
              return this;
          }
          return CoreML::Specification::SplitLayerParams::MergeFrom(v326, (const CoreML::Specification::SplitLayerParams *)v113);
        }
        if (v27 == 1313)
        {
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_wherenonzero((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 1313)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_WhereNonZeroLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        if (v27 != 1315) {
          return this;
        }
        v127 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_matrixbandpart((CoreML::Specification::NeuralNetworkLayer *)v3);
        int v128 = (std::string *)v127;
        if (*v28 == 1315)
        {
          v129 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v127);
          v129 = &CoreML::Specification::_MatrixBandPartLayerParams_default_instance_;
        }
        v328 = v128;
        return CoreML::Specification::Int64Range::MergeFrom(v328, (const CoreML::Specification::Int64Range *)v129);
      }
      if (v27 <= 1284)
      {
        if (v27 == 1275)
        {
          v272 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reduceprod((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v273 = (unint64_t *)v272;
          if (*v28 == 1275)
          {
            unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v272);
            unsigned int v39 = &CoreML::Specification::_ReduceProdLayerParams_default_instance_;
          }
          int v317 = v273;
        }
        else
        {
          if (v27 != 1280) {
            return this;
          }
          uint64_t v100 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducemean((CoreML::Specification::NeuralNetworkLayer *)v3);
          uint64_t v101 = (unint64_t *)v100;
          if (*v28 == 1280)
          {
            unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v100);
            unsigned int v39 = &CoreML::Specification::_ReduceMeanLayerParams_default_instance_;
          }
          int v317 = v101;
        }
      }
      else
      {
        switch(v27)
        {
          case 1285:
            int v159 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsum((CoreML::Specification::NeuralNetworkLayer *)v3);
            v160 = (unint64_t *)v159;
            if (*v28 == 1285)
            {
              unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v159);
              unsigned int v39 = &CoreML::Specification::_ReduceLogSumLayerParams_default_instance_;
            }
            int v317 = v160;
            break;
          case 1290:
            int v161 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducesumsquare((CoreML::Specification::NeuralNetworkLayer *)v3);
            v162 = (unint64_t *)v161;
            if (*v28 == 1290)
            {
              unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v161);
              unsigned int v39 = &CoreML::Specification::_ReduceSumSquareLayerParams_default_instance_;
            }
            int v317 = v162;
            break;
          case 1295:
            uint64_t v37 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsumexp((CoreML::Specification::NeuralNetworkLayer *)v3);
            signed int v38 = (unint64_t *)v37;
            if (*v28 == 1295)
            {
              unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v37);
              unsigned int v39 = &CoreML::Specification::_ReduceLogSumExpLayerParams_default_instance_;
            }
            int v317 = v38;
            break;
          default:
            return this;
        }
      }
      return (std::string *)CoreML::Specification::ReduceL1LayerParams::MergeFrom(v317, (const CoreML::Specification::ReduceL1LayerParams *)v39);
    }
    if (v27 > 1199)
    {
      if (v27 > 1249)
      {
        if (v27 <= 1259)
        {
          if (v27 == 1250)
          {
            int v301 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducel1((CoreML::Specification::NeuralNetworkLayer *)v3);
            v302 = (unint64_t *)v301;
            if (*v28 == 1250)
            {
              unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v301);
              unsigned int v39 = &CoreML::Specification::_ReduceL1LayerParams_default_instance_;
            }
            int v317 = v302;
          }
          else
          {
            if (v27 != 1255) {
              return this;
            }
            char v136 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducel2((CoreML::Specification::NeuralNetworkLayer *)v3);
            int v137 = (unint64_t *)v136;
            if (*v28 == 1255)
            {
              unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v136);
              unsigned int v39 = &CoreML::Specification::_ReduceL2LayerParams_default_instance_;
            }
            int v317 = v137;
          }
        }
        else
        {
          switch(v27)
          {
            case 1260:
              v237 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducemax((CoreML::Specification::NeuralNetworkLayer *)v3);
              v238 = (unint64_t *)v237;
              if (*v28 == 1260)
              {
                unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v237);
                unsigned int v39 = &CoreML::Specification::_ReduceMaxLayerParams_default_instance_;
              }
              int v317 = v238;
              break;
            case 1265:
              v239 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducemin((CoreML::Specification::NeuralNetworkLayer *)v3);
              v240 = (unint64_t *)v239;
              if (*v28 == 1265)
              {
                unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v239);
                unsigned int v39 = &CoreML::Specification::_ReduceMinLayerParams_default_instance_;
              }
              int v317 = v240;
              break;
            case 1270:
              int v82 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reducesum((CoreML::Specification::NeuralNetworkLayer *)v3);
              int v83 = (unint64_t *)v82;
              if (*v28 == 1270)
              {
                unsigned int v39 = (uint64_t *)*((void *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v82);
                unsigned int v39 = &CoreML::Specification::_ReduceSumLayerParams_default_instance_;
              }
              int v317 = v83;
              break;
            default:
              return this;
          }
        }
        return (std::string *)CoreML::Specification::ReduceL1LayerParams::MergeFrom(v317, (const CoreML::Specification::ReduceL1LayerParams *)v39);
      }
      if (v27 > 1214)
      {
        if (v27 == 1215)
        {
          v177 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullistatic((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v178 = (unint64_t *)v177;
          if (*v28 == 1215)
          {
            v179 = (const CoreML::Specification::RandomBernoulliStaticLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v177);
            v179 = (const CoreML::Specification::RandomBernoulliStaticLayerParams *)&CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_;
          }
          return (std::string *)CoreML::Specification::RandomBernoulliStaticLayerParams::MergeFrom(v178, v179);
        }
        if (v27 != 1220)
        {
          if (v27 == 1230)
          {
            uint64_t v49 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_categoricaldistribution((CoreML::Specification::NeuralNetworkLayer *)v3);
            uint64_t v50 = (std::string *)v49;
            if (*v28 == 1230)
            {
              uint64_t v51 = (const CoreML::Specification::CategoricalDistributionLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v49);
              uint64_t v51 = (const CoreML::Specification::CategoricalDistributionLayerParams *)&CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_;
            }
            return CoreML::Specification::CategoricalDistributionLayerParams::MergeFrom(v50, v51);
          }
          return this;
        }
        int v180 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullidynamic((CoreML::Specification::NeuralNetworkLayer *)v3);
        v181 = (std::string *)v180;
        if (*v28 == 1220)
        {
          uint64_t v107 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v180);
          uint64_t v107 = &CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_;
        }
        int v325 = v181;
        return CoreML::Specification::RandomBernoulliLikeLayerParams::MergeFrom(v325, (const CoreML::Specification::RandomBernoulliLikeLayerParams *)v107);
      }
      if (v27 != 1200)
      {
        if (v27 != 1210) {
          return this;
        }
        uint64_t v105 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullilike((CoreML::Specification::NeuralNetworkLayer *)v3);
        int v106 = (std::string *)v105;
        if (*v28 == 1210)
        {
          uint64_t v107 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v105);
          uint64_t v107 = &CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_;
        }
        int v325 = v106;
        return CoreML::Specification::RandomBernoulliLikeLayerParams::MergeFrom(v325, (const CoreML::Specification::RandomBernoulliLikeLayerParams *)v107);
      }
      v280 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformdynamic((CoreML::Specification::NeuralNetworkLayer *)v3);
      int v281 = (std::string *)v280;
      if (*v28 == 1200)
      {
        int v217 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v280);
        int v217 = &CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_;
      }
      int v329 = v281;
      return CoreML::Specification::RandomNormalLikeLayerParams::MergeFrom(v329, (const CoreML::Specification::RandomNormalLikeLayerParams *)v217);
    }
    if (v27 <= 1169)
    {
      if (v27 > 1149)
      {
        if (v27 != 1150)
        {
          if (v27 == 1155)
          {
            v148 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_constantpad((CoreML::Specification::NeuralNetworkLayer *)v3);
            v149 = (unint64_t *)v148;
            if (*v28 == 1155)
            {
              v150 = (const CoreML::Specification::ConstantPaddingLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v148);
              v150 = (const CoreML::Specification::ConstantPaddingLayerParams *)&CoreML::Specification::_ConstantPaddingLayerParams_default_instance_;
            }
            return (std::string *)CoreML::Specification::ConstantPaddingLayerParams::MergeFrom(v149, v150);
          }
          return this;
        }
        int v313 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_rankpreservingreshape((CoreML::Specification::NeuralNetworkLayer *)v3);
        v314 = (unint64_t *)v313;
        if (*v28 == 1150)
        {
          int v66 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v313);
          int v66 = &CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_;
        }
        int v321 = v314;
      }
      else
      {
        if (v27 != 1140)
        {
          if (v27 != 1145) {
            return this;
          }
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_reshapedynamic((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 1145)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_ReshapeDynamicLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        v258 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reshapestatic((CoreML::Specification::NeuralNetworkLayer *)v3);
        int v259 = (unint64_t *)v258;
        if (*v28 == 1140)
        {
          int v66 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v258);
          int v66 = &CoreML::Specification::_ReshapeStaticLayerParams_default_instance_;
        }
        int v321 = v259;
      }
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v321, (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)v66);
    }
    if (v27 <= 1179)
    {
      if (v27 == 1170)
      {
        int v289 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomnormallike((CoreML::Specification::NeuralNetworkLayer *)v3);
        v290 = (std::string *)v289;
        if (*v28 == 1170)
        {
          int v217 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v289);
          int v217 = &CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_;
        }
        int v329 = v290;
        return CoreML::Specification::RandomNormalLikeLayerParams::MergeFrom(v329, (const CoreML::Specification::RandomNormalLikeLayerParams *)v217);
      }
      if (v27 != 1175) {
        return this;
      }
      v117 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomnormalstatic((CoreML::Specification::NeuralNetworkLayer *)v3);
      v118 = (unint64_t *)v117;
      if (*v28 == 1175)
      {
        char v69 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v117);
        char v69 = &CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_;
      }
      v322 = v118;
    }
    else
    {
      if (v27 == 1180)
      {
        v215 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomnormaldynamic((CoreML::Specification::NeuralNetworkLayer *)v3);
        v216 = (std::string *)v215;
        if (*v28 == 1180)
        {
          int v217 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v215);
          int v217 = &CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_;
        }
        int v329 = v216;
        return CoreML::Specification::RandomNormalLikeLayerParams::MergeFrom(v329, (const CoreML::Specification::RandomNormalLikeLayerParams *)v217);
      }
      if (v27 == 1190)
      {
        v218 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformlike((CoreML::Specification::NeuralNetworkLayer *)v3);
        v219 = (std::string *)v218;
        if (*v28 == 1190)
        {
          int v217 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v218);
          int v217 = &CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_;
        }
        int v329 = v219;
        return CoreML::Specification::RandomNormalLikeLayerParams::MergeFrom(v329, (const CoreML::Specification::RandomNormalLikeLayerParams *)v217);
      }
      if (v27 != 1195) {
        return this;
      }
      unint64_t v67 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformstatic((CoreML::Specification::NeuralNetworkLayer *)v3);
      char v68 = (unint64_t *)v67;
      if (*v28 == 1195)
      {
        char v69 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v67);
        char v69 = &CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_;
      }
      v322 = v68;
    }
    return (std::string *)CoreML::Specification::RandomNormalStaticLayerParams::MergeFrom(v322, (const CoreML::Specification::RandomNormalStaticLayerParams *)v69);
  }
  if (v27 > 604)
  {
    if (v27 <= 759)
    {
      if (v27 > 684)
      {
        if (v27 > 729)
        {
          if (v27 <= 739)
          {
            if (v27 == 730)
            {
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_asin((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 != 730)
              {
                this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                int v33 = &CoreML::Specification::_AsinLayerParams_default_instance_;
                goto LABEL_542;
              }
            }
            else
            {
              if (v27 != 735) {
                return this;
              }
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_acos((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 != 735)
              {
                this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                int v33 = &CoreML::Specification::_AcosLayerParams_default_instance_;
                goto LABEL_542;
              }
            }
          }
          else
          {
            switch(v27)
            {
              case 740:
                this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_atan((CoreML::Specification::NeuralNetworkLayer *)v3);
                unsigned int v32 = this;
                if (*v28 != 740)
                {
                  this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                  int v33 = &CoreML::Specification::_AtanLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              case 750:
                this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_sinh((CoreML::Specification::NeuralNetworkLayer *)v3);
                unsigned int v32 = this;
                if (*v28 != 750)
                {
                  this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                  int v33 = &CoreML::Specification::_SinhLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              case 755:
                this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_cosh((CoreML::Specification::NeuralNetworkLayer *)v3);
                unsigned int v32 = this;
                if (*v28 != 755)
                {
                  this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                  int v33 = &CoreML::Specification::_CoshLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              default:
                return this;
            }
          }
        }
        else if (v27 <= 709)
        {
          if (v27 == 685)
          {
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_round((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 685)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_RoundLayerParams_default_instance_;
              goto LABEL_542;
            }
          }
          else
          {
            if (v27 != 700) {
              return this;
            }
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_exp2((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 700)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_Exp2LayerParams_default_instance_;
              goto LABEL_542;
            }
          }
        }
        else
        {
          switch(v27)
          {
            case 710:
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_sin((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 != 710)
              {
                this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                int v33 = &CoreML::Specification::_SinLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            case 715:
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_cos((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 != 715)
              {
                this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                int v33 = &CoreML::Specification::_CosLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            case 720:
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_tan((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 != 720)
              {
                this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                int v33 = &CoreML::Specification::_TanLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            default:
              return this;
          }
        }
        goto LABEL_541;
      }
      if (v27 > 639)
      {
        if (v27 <= 664)
        {
          if (v27 == 640)
          {
            v294 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_rangedynamic((CoreML::Specification::NeuralNetworkLayer *)v3);
            int v295 = (std::string *)v294;
            if (*v28 == 640)
            {
              int v126 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v294);
              int v126 = &CoreML::Specification::_RangeDynamicLayerParams_default_instance_;
            }
            int v327 = v295;
          }
          else
          {
            if (v27 != 660) {
              return this;
            }
            int v124 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_clip((CoreML::Specification::NeuralNetworkLayer *)v3);
            v125 = (std::string *)v124;
            if (*v28 == 660)
            {
              int v126 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v124);
              int v126 = &CoreML::Specification::_ClipLayerParams_default_instance_;
            }
            int v327 = v125;
          }
          return CoreML::Specification::RangeDynamicLayerParams::MergeFrom(v327, (const CoreML::Specification::RangeDynamicLayerParams *)v126);
        }
        switch(v27)
        {
          case 665:
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_ceil((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 665)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_CeilLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 670:
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_floor((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 670)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_FloorLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 680:
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_sign((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 680)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_SignLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          default:
            return this;
        }
        goto LABEL_541;
      }
      if (v27 <= 619)
      {
        if (v27 == 605)
        {
          int v269 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_branch((CoreML::Specification::NeuralNetworkLayer *)v3);
          v270 = (std::string *)v269;
          if (*v28 == 605)
          {
            int v271 = (const CoreML::Specification::BranchLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v269);
            int v271 = (const CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_;
          }
          return CoreML::Specification::BranchLayerParams::MergeFrom(v270, v271);
        }
        else if (v27 == 615)
        {
          uint64_t v97 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_loop((CoreML::Specification::NeuralNetworkLayer *)v3);
          uint64_t v98 = (std::string *)v97;
          if (*v28 == 615)
          {
            uint64_t v99 = (const CoreML::Specification::LoopLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v97);
            uint64_t v99 = (const CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_;
          }
          return CoreML::Specification::LoopLayerParams::MergeFrom(v98, v99);
        }
        return this;
      }
      switch(v27)
      {
        case 620:
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_loopbreak((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 620)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_LoopBreakLayerParams_default_instance_;
            goto LABEL_542;
          }
          break;
        case 625:
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_loopcontinue((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 625)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_LoopContinueLayerParams_default_instance_;
            goto LABEL_542;
          }
          break;
        case 635:
          unsigned int v34 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_rangestatic((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v35 = (std::string *)v34;
          if (*v28 == 635)
          {
            int v36 = (const CoreML::Specification::RangeStaticLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v34);
            int v36 = (const CoreML::Specification::RangeStaticLayerParams *)&CoreML::Specification::_RangeStaticLayerParams_default_instance_;
          }
          return CoreML::Specification::RangeStaticLayerParams::MergeFrom(v35, v36);
        default:
          return this;
      }
      goto LABEL_541;
    }
    if (v27 > 824)
    {
      if (v27 <= 849)
      {
        switch(v27)
        {
          case 825:
            signed int v46 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_lessthan((CoreML::Specification::NeuralNetworkLayer *)v3);
            uint64_t v47 = (std::string *)v46;
            if (*v28 == 825)
            {
              uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v46);
              uint64_t v48 = &CoreML::Specification::_LessThanLayerParams_default_instance_;
            }
            int v319 = v47;
            return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
          case 826:
          case 828:
          case 829:
          case 831:
            return this;
          case 827:
            v171 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_lessequal((CoreML::Specification::NeuralNetworkLayer *)v3);
            int v172 = (std::string *)v171;
            if (*v28 == 827)
            {
              uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v171);
              uint64_t v48 = &CoreML::Specification::_LessEqualLayerParams_default_instance_;
            }
            int v319 = v172;
            return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
          case 830:
            v173 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_greaterthan((CoreML::Specification::NeuralNetworkLayer *)v3);
            v174 = (std::string *)v173;
            if (*v28 == 830)
            {
              uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v173);
              uint64_t v48 = &CoreML::Specification::_GreaterThanLayerParams_default_instance_;
            }
            int v319 = v174;
            return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
          case 832:
            v175 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_greaterequal((CoreML::Specification::NeuralNetworkLayer *)v3);
            v176 = (std::string *)v175;
            if (*v28 == 832)
            {
              uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v175);
              uint64_t v48 = &CoreML::Specification::_GreaterEqualLayerParams_default_instance_;
            }
            int v319 = v176;
            return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
          default:
            if (v27 != 840)
            {
              if (v27 != 845) {
                return this;
              }
              this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_logicalxor((CoreML::Specification::NeuralNetworkLayer *)v3);
              unsigned int v32 = this;
              if (*v28 != 845)
              {
                this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
                int v33 = &CoreML::Specification::_LogicalXorLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            }
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_logicalor((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 == 840) {
              goto LABEL_541;
            }
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_LogicalOrLayerParams_default_instance_;
            break;
        }
        goto LABEL_542;
      }
      if (v27 <= 864)
      {
        if (v27 == 850)
        {
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_logicalnot((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 850)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_LogicalNotLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 855) {
            return this;
          }
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_logicaland((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 855)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_LogicalAndLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
      }
      else
      {
        switch(v27)
        {
          case 865:
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_modbroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 865)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_ModBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 870:
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_minbroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 870)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_MinBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 875:
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_maxbroadcastable((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 875)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          default:
            return this;
        }
      }
      goto LABEL_541;
    }
    if (v27 <= 789)
    {
      if (v27 > 774)
      {
        if (v27 == 775)
        {
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_acosh((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 775)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_AcoshLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 780) {
            return this;
          }
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_atanh((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 780)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_AtanhLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
      }
      else if (v27 == 760)
      {
        this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_tanh((CoreML::Specification::NeuralNetworkLayer *)v3);
        unsigned int v32 = this;
        if (*v28 != 760)
        {
          this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
          int v33 = &CoreML::Specification::_TanhLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      else
      {
        if (v27 != 770) {
          return this;
        }
        this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_asinh((CoreML::Specification::NeuralNetworkLayer *)v3);
        unsigned int v32 = this;
        if (*v28 != 770)
        {
          this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
          int v33 = &CoreML::Specification::_AsinhLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      goto LABEL_541;
    }
    if (v27 > 814)
    {
      if (v27 == 815)
      {
        int v315 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_equal((CoreML::Specification::NeuralNetworkLayer *)v3);
        v316 = (std::string *)v315;
        if (*v28 == 815)
        {
          uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v315);
          uint64_t v48 = &CoreML::Specification::_EqualLayerParams_default_instance_;
        }
        int v319 = v316;
      }
      else
      {
        if (v27 != 820) {
          return this;
        }
        v151 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_notequal((CoreML::Specification::NeuralNetworkLayer *)v3);
        v152 = (std::string *)v151;
        if (*v28 == 820)
        {
          uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v151);
          uint64_t v48 = &CoreML::Specification::_NotEqualLayerParams_default_instance_;
        }
        int v319 = v152;
      }
      return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
    }
    if (v27 == 790)
    {
      this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_erf((CoreML::Specification::NeuralNetworkLayer *)v3);
      unsigned int v32 = this;
      if (*v28 != 790)
      {
        this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
        int v33 = &CoreML::Specification::_ErfLayerParams_default_instance_;
        goto LABEL_542;
      }
      goto LABEL_541;
    }
    if (v27 != 795) {
      return this;
    }
    uint64_t v89 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gelu((CoreML::Specification::NeuralNetworkLayer *)v3);
    uint64_t v90 = (std::string *)v89;
    if (*v28 == 795)
    {
      int v57 = (uint64_t *)*((void *)a2 + 16);
    }
    else
    {
      CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v89);
      int v57 = &CoreML::Specification::_GeluLayerParams_default_instance_;
    }
    v320 = v90;
    return CoreML::Specification::FlattenLayerParams::MergeFrom(v320, (const CoreML::Specification::FlattenLayerParams *)v57);
  }
  if (v27 > 249)
  {
    if (v27 <= 329)
    {
      if (v27 <= 289)
      {
        if (v27 <= 260)
        {
          if (v27 == 250)
          {
            v274 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_bias((CoreML::Specification::NeuralNetworkLayer *)v3);
            int v275 = (unint64_t *)v274;
            if (*v28 == 250)
            {
              v276 = (const CoreML::Specification::BiasLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v274);
              v276 = (const CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_;
            }
            return (std::string *)CoreML::Specification::BiasLayerParams::MergeFrom(v275, v276);
          }
          if (v27 != 260) {
            return this;
          }
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_max((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 260)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_MaxLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 261)
          {
            if (v27 != 270)
            {
              if (v27 == 280)
              {
                int v40 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reduce((CoreML::Specification::NeuralNetworkLayer *)v3);
                int v41 = (std::string *)v40;
                if (*v28 == 280)
                {
                  int v42 = (const CoreML::Specification::ReduceLayerParams *)*((void *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v40);
                  int v42 = (const CoreML::Specification::ReduceLayerParams *)&CoreML::Specification::_ReduceLayerParams_default_instance_;
                }
                return CoreML::Specification::ReduceLayerParams::MergeFrom(v41, v42);
              }
              return this;
            }
            int v163 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_dot((CoreML::Specification::NeuralNetworkLayer *)v3);
            v164 = (std::string *)v163;
            if (*v28 == 270)
            {
              char v78 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v163);
              char v78 = &CoreML::Specification::_DotProductLayerParams_default_instance_;
            }
            v324 = v164;
            return CoreML::Specification::DotProductLayerParams::MergeFrom(v324, (const CoreML::Specification::DotProductLayerParams *)v78);
          }
          this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_min((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v32 = this;
          if (*v28 != 261)
          {
            this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
            int v33 = &CoreML::Specification::_MinLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
LABEL_541:
        int v33 = (uint64_t *)*((void *)a2 + 16);
        goto LABEL_542;
      }
      if (v27 <= 300)
      {
        if (v27 == 290)
        {
          v296 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_loadconstant((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v297 = (unint64_t *)v296;
          if (*v28 == 290)
          {
            v298 = (const CoreML::Specification::LoadConstantLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v296);
            v298 = (const CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_;
          }
          return (std::string *)CoreML::Specification::LoadConstantLayerParams::MergeFrom(v297, v298);
        }
        else if (v27 == 300)
        {
          v130 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reshape((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v131 = (unint64_t *)v130;
          if (*v28 == 300)
          {
            v132 = (const CoreML::Specification::ReshapeLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v130);
            v132 = (const CoreML::Specification::ReshapeLayerParams *)&CoreML::Specification::_ReshapeLayerParams_default_instance_;
          }
          return (std::string *)CoreML::Specification::ReshapeLayerParams::MergeFrom(v131, v132);
        }
        return this;
      }
      if (v27 != 301)
      {
        if (v27 != 310)
        {
          if (v27 != 320) {
            return this;
          }
          unint64_t v76 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_concat((CoreML::Specification::NeuralNetworkLayer *)v3);
          unint64_t v77 = (std::string *)v76;
          if (*v28 == 320)
          {
            char v78 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v76);
            char v78 = &CoreML::Specification::_ConcatLayerParams_default_instance_;
          }
          v324 = v77;
          return CoreML::Specification::DotProductLayerParams::MergeFrom(v324, (const CoreML::Specification::DotProductLayerParams *)v78);
        }
        int v232 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_permute((CoreML::Specification::NeuralNetworkLayer *)v3);
        v233 = (unint64_t *)v232;
        if (*v28 == 310)
        {
          int v66 = (uint64_t *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v232);
          int v66 = &CoreML::Specification::_PermuteLayerParams_default_instance_;
        }
        int v321 = v233;
        return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v321, (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)v66);
      }
      v230 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_flatten((CoreML::Specification::NeuralNetworkLayer *)v3);
      v231 = (std::string *)v230;
      if (*v28 == 301)
      {
        int v57 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v230);
        int v57 = &CoreML::Specification::_FlattenLayerParams_default_instance_;
      }
      v320 = v231;
      return CoreML::Specification::FlattenLayerParams::MergeFrom(v320, (const CoreML::Specification::FlattenLayerParams *)v57);
    }
    if (v27 > 409)
    {
      if (v27 <= 429)
      {
        if (v27 == 410)
        {
          int v309 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_gru((CoreML::Specification::NeuralNetworkLayer *)v3);
          v310 = (std::string *)v309;
          if (*v28 == 410)
          {
            int v311 = (const CoreML::Specification::GRULayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v309);
            int v311 = (const CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_;
          }
          return CoreML::Specification::GRULayerParams::MergeFrom(v310, v311);
        }
        else if (v27 == 420)
        {
          v142 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_unidirectionallstm((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v143 = (std::string *)v142;
          if (*v28 == 420)
          {
            v144 = (const CoreML::Specification::UniDirectionalLSTMLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v142);
            v144 = (const CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_;
          }
          return CoreML::Specification::UniDirectionalLSTMLayerParams::MergeFrom(v143, v144);
        }
        return this;
      }
      if (v27 == 430)
      {
        v248 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_bidirectionallstm((CoreML::Specification::NeuralNetworkLayer *)v3);
        int v249 = (unint64_t *)v248;
        if (*v28 == 430)
        {
          v250 = (const CoreML::Specification::BiDirectionalLSTMLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v248);
          v250 = (const CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_;
        }
        return (std::string *)CoreML::Specification::BiDirectionalLSTMLayerParams::MergeFrom(v249, v250);
      }
      if (v27 == 500)
      {
        int v251 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_custom((CoreML::Specification::NeuralNetworkLayer *)v3);
        v252 = v251;
        if (*v28 == 500)
        {
          int v253 = (const CoreML::Specification::CustomLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v251);
          int v253 = (const CoreML::Specification::CustomLayerParams *)&CoreML::Specification::_CustomLayerParams_default_instance_;
        }
        return CoreML::Specification::CustomLayerParams::MergeFrom(v252, v253);
      }
      if (v27 != 600) {
        return this;
      }
      this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_copy((CoreML::Specification::NeuralNetworkLayer *)v3);
      unsigned int v32 = this;
      if (*v28 != 600)
      {
        this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
        int v33 = &CoreML::Specification::_CopyLayerParams_default_instance_;
        goto LABEL_542;
      }
      goto LABEL_541;
    }
    if (v27 > 344)
    {
      if (v27 != 345)
      {
        if (v27 == 350)
        {
          v210 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_slice((CoreML::Specification::NeuralNetworkLayer *)v3);
          v211 = (std::string *)v210;
          if (*v28 == 350)
          {
            v212 = (const CoreML::Specification::SliceLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v210);
            v212 = (const CoreML::Specification::SliceLayerParams *)&CoreML::Specification::_SliceLayerParams_default_instance_;
          }
          return CoreML::Specification::SliceLayerParams::MergeFrom(v211, v212);
        }
        else if (v27 == 400)
        {
          int v61 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_simplerecurrent((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v62 = (std::string *)v61;
          if (*v28 == 400)
          {
            unsigned int v63 = (const CoreML::Specification::SimpleRecurrentLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v61);
            unsigned int v63 = (const CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_;
          }
          return CoreML::Specification::SimpleRecurrentLayerParams::MergeFrom(v62, v63);
        }
        return this;
      }
      v208 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_reorganizedata((CoreML::Specification::NeuralNetworkLayer *)v3);
      v209 = (std::string *)v208;
      if (*v28 == 345)
      {
        int v75 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v208);
        int v75 = &CoreML::Specification::_ReorganizeDataLayerParams_default_instance_;
      }
      int v323 = v209;
      return CoreML::Specification::ReorganizeDataLayerParams::MergeFrom(v323, (const CoreML::Specification::ReorganizeDataLayerParams *)v75);
    }
    if (v27 == 330)
    {
      int v285 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_split((CoreML::Specification::NeuralNetworkLayer *)v3);
      v286 = (std::string *)v285;
      if (*v28 == 330)
      {
        v113 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v285);
        v113 = &CoreML::Specification::_SplitLayerParams_default_instance_;
      }
      v326 = v286;
    }
    else
    {
      if (v27 != 340) {
        return this;
      }
      v111 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_sequencerepeat((CoreML::Specification::NeuralNetworkLayer *)v3);
      v112 = (std::string *)v111;
      if (*v28 == 340)
      {
        v113 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v111);
        v113 = &CoreML::Specification::_SequenceRepeatLayerParams_default_instance_;
      }
      v326 = v112;
    }
    return CoreML::Specification::SplitLayerParams::MergeFrom(v326, (const CoreML::Specification::SplitLayerParams *)v113);
  }
  if (v27 > 189)
  {
    if (v27 > 219)
    {
      if (v27 <= 230)
      {
        if (v27 != 220)
        {
          if (v27 != 230) {
            return this;
          }
          v138 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_add((CoreML::Specification::NeuralNetworkLayer *)v3);
          v139 = (std::string *)v138;
          if (*v28 == 230)
          {
            uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v138);
            uint64_t v48 = &CoreML::Specification::_AddLayerParams_default_instance_;
          }
          int v319 = v139;
          return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
        }
        int v303 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_unary((CoreML::Specification::NeuralNetworkLayer *)v3);
        v304 = (std::string *)v303;
        if (*v28 == 220)
        {
          int v305 = (const CoreML::Specification::UnaryFunctionLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v303);
          int v305 = (const CoreML::Specification::UnaryFunctionLayerParams *)&CoreML::Specification::_UnaryFunctionLayerParams_default_instance_;
        }
        return CoreML::Specification::UnaryFunctionLayerParams::MergeFrom(v304, v305);
      }
      else
      {
        switch(v27)
        {
          case 231:
            int v241 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_multiply((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v242 = (std::string *)v241;
            if (*v28 == 231)
            {
              uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v241);
              uint64_t v48 = &CoreML::Specification::_MultiplyLayerParams_default_instance_;
            }
            int v319 = v242;
            return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
          case 240:
            this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_average((CoreML::Specification::NeuralNetworkLayer *)v3);
            unsigned int v32 = this;
            if (*v28 != 240)
            {
              this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
              int v33 = &CoreML::Specification::_AverageLayerParams_default_instance_;
              goto LABEL_542;
            }
            goto LABEL_541;
          case 245:
            int v84 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_scale((CoreML::Specification::NeuralNetworkLayer *)v3);
            uint64_t v85 = (unint64_t *)v84;
            if (*v28 == 245)
            {
              uint64_t v86 = (const CoreML::Specification::ScaleLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v84);
              uint64_t v86 = (const CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_;
            }
            return (std::string *)CoreML::Specification::ScaleLayerParams::MergeFrom(v85, v86);
        }
      }
    }
    else if (v27 <= 209)
    {
      if (v27 == 190)
      {
        v282 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_crop((CoreML::Specification::NeuralNetworkLayer *)v3);
        int v283 = (unint64_t *)v282;
        if (*v28 == 190)
        {
          v284 = (const CoreML::Specification::CropLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v282);
          v284 = (const CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_;
        }
        return (std::string *)CoreML::Specification::CropLayerParams::MergeFrom(v283, v284);
      }
      else if (v27 == 200)
      {
        v108 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_padding((CoreML::Specification::NeuralNetworkLayer *)v3);
        uint64_t v109 = (std::string *)v108;
        if (*v28 == 200)
        {
          int v110 = (const CoreML::Specification::PaddingLayerParams *)*((void *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v108);
          int v110 = (const CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_;
        }
        return CoreML::Specification::PaddingLayerParams::MergeFrom(v109, v110);
      }
    }
    else
    {
      switch(v27)
      {
        case 210:
          v182 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_upsample((CoreML::Specification::NeuralNetworkLayer *)v3);
          v183 = (unint64_t *)v182;
          if (*v28 == 210)
          {
            v184 = (const CoreML::Specification::UpsampleLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v182);
            v184 = (const CoreML::Specification::UpsampleLayerParams *)&CoreML::Specification::_UpsampleLayerParams_default_instance_;
          }
          return (std::string *)CoreML::Specification::UpsampleLayerParams::MergeFrom(v183, v184);
        case 211:
          v185 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_resizebilinear((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v186 = (unint64_t *)v185;
          if (*v28 == 211)
          {
            v187 = (const CoreML::Specification::ResizeBilinearLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v185);
            v187 = (const CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_;
          }
          return (std::string *)CoreML::Specification::ResizeBilinearLayerParams::MergeFrom(v186, v187);
        case 212:
          unsigned int v52 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_cropresize((CoreML::Specification::NeuralNetworkLayer *)v3);
          unsigned int v53 = (unint64_t *)v52;
          if (*v28 == 212)
          {
            uint64_t v54 = (const CoreML::Specification::CropResizeLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v52);
            uint64_t v54 = (const CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_;
          }
          return (std::string *)CoreML::Specification::CropResizeLayerParams::MergeFrom(v53, v54);
      }
    }
  }
  else
  {
    if (v27 <= 159)
    {
      if (v27 <= 129)
      {
        if (v27 == 100)
        {
          v266 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_convolution((CoreML::Specification::NeuralNetworkLayer *)v3);
          int v267 = (std::string *)v266;
          if (*v28 == 100)
          {
            v268 = (const CoreML::Specification::ConvolutionLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v266);
            v268 = (const CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_;
          }
          return CoreML::Specification::ConvolutionLayerParams::MergeFrom(v267, v268);
        }
        else if (v27 == 120)
        {
          uint64_t v94 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_pooling((CoreML::Specification::NeuralNetworkLayer *)v3);
          uint64_t v95 = (std::string *)v94;
          if (*v28 == 120)
          {
            uint64_t v96 = (const CoreML::Specification::PoolingLayerParams *)*((void *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v94);
            uint64_t v96 = (const CoreML::Specification::PoolingLayerParams *)&CoreML::Specification::_PoolingLayerParams_default_instance_;
          }
          return CoreML::Specification::PoolingLayerParams::MergeFrom(v95, v96);
        }
      }
      else
      {
        switch(v27)
        {
          case 130:
            v153 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_activation((CoreML::Specification::NeuralNetworkLayer *)v3);
            v154 = (std::string *)v153;
            if (*v28 == 130)
            {
              v155 = (const CoreML::Specification::ActivationParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v153);
              v155 = (const CoreML::Specification::ActivationParams *)&CoreML::Specification::_ActivationParams_default_instance_;
            }
            return CoreML::Specification::ActivationParams::MergeFrom(v154, v155);
          case 140:
            v156 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_innerproduct((CoreML::Specification::NeuralNetworkLayer *)v3);
            int v157 = (std::string *)v156;
            if (*v28 == 140)
            {
              v158 = (const CoreML::Specification::InnerProductLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v156);
              v158 = (const CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_;
            }
            return CoreML::Specification::InnerProductLayerParams::MergeFrom(v157, v158);
          case 150:
            char v29 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_embedding((CoreML::Specification::NeuralNetworkLayer *)v3);
            char v30 = (std::string *)v29;
            if (*v28 == 150)
            {
              unsigned int v31 = (const CoreML::Specification::EmbeddingLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v29);
              unsigned int v31 = (const CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_;
            }
            return CoreML::Specification::EmbeddingLayerParams::MergeFrom(v30, v31);
        }
      }
      return this;
    }
    if (v27 > 169)
    {
      if (v27 != 170)
      {
        if (v27 != 175)
        {
          if (v27 == 180)
          {
            int v70 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_lrn((CoreML::Specification::NeuralNetworkLayer *)v3);
            int v71 = (std::string *)v70;
            if (*v28 == 180)
            {
              uint64_t v72 = (const CoreML::Specification::LRNLayerParams *)*((void *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v70);
              uint64_t v72 = (const CoreML::Specification::LRNLayerParams *)&CoreML::Specification::_LRNLayerParams_default_instance_;
            }
            return CoreML::Specification::LRNLayerParams::MergeFrom(v71, v72);
          }
          return this;
        }
        this = (std::string *)CoreML::Specification::NeuralNetworkLayer::mutable_softmax((CoreML::Specification::NeuralNetworkLayer *)v3);
        unsigned int v32 = this;
        if (*v28 != 175)
        {
          this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
          int v33 = &CoreML::Specification::_SoftmaxLayerParams_default_instance_;
          goto LABEL_542;
        }
        goto LABEL_541;
      }
      v220 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_l2normalize((CoreML::Specification::NeuralNetworkLayer *)v3);
      v221 = (std::string *)v220;
      if (*v28 == 170)
      {
        uint64_t v48 = (uint64_t *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v220);
        uint64_t v48 = &CoreML::Specification::_L2NormalizeLayerParams_default_instance_;
      }
      int v319 = v221;
      return CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v319, (const CoreML::Specification::L2NormalizeLayerParams *)v48);
    }
    if (v27 == 160)
    {
      int v291 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_batchnorm((CoreML::Specification::NeuralNetworkLayer *)v3);
      v292 = (std::string *)v291;
      if (*v28 == 160)
      {
        int v293 = (const CoreML::Specification::BatchnormLayerParams *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v291);
        int v293 = (const CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_;
      }
      return CoreML::Specification::BatchnormLayerParams::MergeFrom(v292, v293);
    }
    else if (v27 == 165)
    {
      v119 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)CoreML::Specification::NeuralNetworkLayer::mutable_mvn((CoreML::Specification::NeuralNetworkLayer *)v3);
      v120 = (std::string *)v119;
      if (*v28 == 165)
      {
        v121 = (const CoreML::Specification::MeanVarianceNormalizeLayerParams *)*((void *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v119);
        v121 = (const CoreML::Specification::MeanVarianceNormalizeLayerParams *)&CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_;
      }
      return CoreML::Specification::MeanVarianceNormalizeLayerParams::MergeFrom(v120, v121);
    }
  }
  return this;
}

unint64_t *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(unint64_t *result, CoreML::Specification::ReshapeLayerParams **a2, CoreML::Specification::ReshapeLayerParams **a3, unsigned int a4, unsigned int a5)
{
  float v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    BOOL v12 = a2;
    do
    {
      int v14 = *v11++;
      signed int v13 = v14;
      unsigned int v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::Tensor>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    signed int v18 = *v9;
    unint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    unsigned int v20 = &a3[a5];
    do
    {
      char v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::Tensor::Tensor((CoreML::Specification::Tensor *)Aligned);
      signed int v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *signed int v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Tensor>;
      uint64_t v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::Tensor>::Merge(v21, (CoreML::Specification::ReshapeLayerParams *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1DC119C00(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_convolution(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 100)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 100;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC119C90(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407928EB6DLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ConvolutionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ConvolutionLayerParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 16), *(_DWORD *)(v3 + 16) + v5);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 24) + 8 * *(int *)(v3 + 16) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *(_DWORD *)(v3 + 16) += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 40), *(_DWORD *)(v3 + 40) + v6);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 48) + 8 * *(int *)(v3 + 40) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *(_DWORD *)(v3 + 40) += *((_DWORD *)a2 + 10);
  }
  int v7 = *((_DWORD *)a2 + 16);
  if (v7)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 64), *(_DWORD *)(v3 + 64) + v7);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 72) + 8 * *(int *)(v3 + 64) + 8), (const void *)(*((void *)a2 + 9) + 8), 8 * *((int *)a2 + 16));
    *(_DWORD *)(v3 + 64) += *((_DWORD *)a2 + 16);
  }
  int v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 88), *(_DWORD *)(v3 + 88) + v8);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 96) + 8 * *(int *)(v3 + 88) + 8), (const void *)(*((void *)a2 + 12) + 8), 8 * *((int *)a2 + 22));
    *(_DWORD *)(v3 + 88) += *((_DWORD *)a2 + 22);
  }
  if (a2 != (const CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    if (*((void *)a2 + 14))
    {
      float v9 = *(unint64_t **)(v3 + 112);
      if (!v9) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v9, *((const CoreML::Specification::WeightParams **)a2 + 14));
    }
    if (*((void *)a2 + 15))
    {
      uint64_t v10 = *(unint64_t **)(v3 + 120);
      if (!v10) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v10, *((const CoreML::Specification::WeightParams **)a2 + 15));
    }
  }
  uint64_t v11 = *((void *)a2 + 16);
  if (v11) {
    *(void *)(v3 + 128) = v11;
  }
  uint64_t v12 = *((void *)a2 + 17);
  if (v12) {
    *(void *)(v3 + 136) = v12;
  }
  uint64_t v13 = *((void *)a2 + 18);
  if (v13) {
    *(void *)(v3 + 144) = v13;
  }
  if (*((unsigned char *)a2 + 152)) {
    *(unsigned char *)(v3 + 152) = 1;
  }
  if (*((unsigned char *)a2 + 153)) {
    *(unsigned char *)(v3 + 15google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 1;
  }
  int v14 = *((_DWORD *)a2 + 43);
  if (v14 == 51)
  {
    if (*(_DWORD *)(v3 + 172) != 51)
    {
      CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType(v3);
      *(_DWORD *)(v3 + 172) = 51;
      operator new();
    }
    uint64_t v15 = *(void *)(v3 + 160);
    uint64_t v17 = *((void *)a2 + 20);
    uint64_t v19 = *(void *)(v17 + 8);
    if (v19) {
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v15 + 8), v19 & 0xFFFFFFFFFFFFFFFELL);
    }
    int v20 = *(_DWORD *)(v17 + 16);
    if (v20) {
      *(_DWORD *)(v15 + 16) = v20;
    }
  }
  else if (v14 == 50)
  {
    if (*(_DWORD *)(v3 + 172) != 50)
    {
      CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType(v3);
      *(_DWORD *)(v3 + 172) = 50;
      operator new();
    }
    BOOL v16 = (const CoreML::Specification::ValidPadding *)*((void *)a2 + 20);
    signed int v18 = *(std::string **)(v3 + 160);
    return CoreML::Specification::ValidPadding::MergeFrom(v18, v16);
  }
  return this;
}

void sub_1DC11A048(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_pooling(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 120)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 120;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11A10C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40A643CE47);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::PoolingLayerParams::MergeFrom(std::string *this, const CoreML::Specification::PoolingLayerParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 16), *(_DWORD *)(v3 + 16) + v5);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 24) + 8 * *(int *)(v3 + 16) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *(_DWORD *)(v3 + 16) += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 40), *(_DWORD *)(v3 + 40) + v6);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 48) + 8 * *(int *)(v3 + 40) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *(_DWORD *)(v3 + 40) += *((_DWORD *)a2 + 10);
  }
  int v7 = *((_DWORD *)a2 + 15);
  if (v7) {
    *(_DWORD *)(v3 + 6CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v7;
  }
  if (*((unsigned char *)a2 + 64)) {
    *(unsigned char *)(v3 + 64) = 1;
  }
  if (*((unsigned char *)a2 + 65)) {
    *(unsigned char *)(v3 + 65) = 1;
  }
  int v8 = *((_DWORD *)a2 + 21);
  switch(v8)
  {
    case 32:
      if (*(_DWORD *)(v3 + 84) != 32)
      {
        CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
        *(_DWORD *)(v3 + 84) = 32;
        operator new();
      }
      uint64_t v11 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 9);
      int v14 = *(unint64_t **)(v3 + 72);
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v14, v11);
    case 31:
      if (*(_DWORD *)(v3 + 84) != 31)
      {
        CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
        *(_DWORD *)(v3 + 84) = 31;
        operator new();
      }
      uint64_t v9 = *(void *)(v3 + 72);
      uint64_t v12 = *((void *)a2 + 9);
      uint64_t v15 = *(void *)(v12 + 8);
      if (v15) {
        this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v9 + 8), v15 & 0xFFFFFFFFFFFFFFFELL);
      }
      int v16 = *(_DWORD *)(v12 + 16);
      if (v16) {
        *(_DWORD *)(v9 + 16) = v16;
      }
      break;
    case 30:
      if (*(_DWORD *)(v3 + 84) != 30)
      {
        CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
        *(_DWORD *)(v3 + 84) = 30;
        operator new();
      }
      uint64_t v10 = (const CoreML::Specification::ValidPadding *)*((void *)a2 + 9);
      uint64_t v13 = *(std::string **)(v3 + 72);
      return CoreML::Specification::ValidPadding::MergeFrom(v13, v10);
  }
  return this;
}

void sub_1DC11A3F8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_activation(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 130)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 130;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11A4B8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ActivationParams::MergeFrom(std::string *this, const CoreML::Specification::ActivationParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 > 30)
  {
    if (v5 > 49)
    {
      if (v5 <= 69)
      {
        if (v5 != 50)
        {
          if (v5 != 60) {
            return this;
          }
          if (*(_DWORD *)(v3 + 28) != 60)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
            *(_DWORD *)(v3 + 28) = 60;
            operator new();
          }
          goto LABEL_48;
        }
        if (*(_DWORD *)(v3 + 28) != 50)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
          *(_DWORD *)(v3 + 28) = 50;
          operator new();
        }
        goto LABEL_41;
      }
      if (v5 != 70)
      {
        if (v5 == 71)
        {
          if (*(_DWORD *)(v3 + 28) != 71)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
            *(_DWORD *)(v3 + 28) = 71;
            operator new();
          }
          uint64_t v13 = (const CoreML::Specification::ActivationParametricSoftplus *)*((void *)a2 + 2);
          int v16 = *(std::string **)(v3 + 16);
          return CoreML::Specification::ActivationParametricSoftplus::MergeFrom(v16, v13);
        }
        return this;
      }
      if (*(_DWORD *)(v3 + 28) != 70)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
        *(_DWORD *)(v3 + 28) = 70;
        operator new();
      }
LABEL_48:
      uint64_t v10 = *(void *)(*((void *)a2 + 2) + 8);
      if (v10)
      {
        uint64_t v11 = (unint64_t *)(*(void *)(v3 + 16) + 8);
        return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v11, v10 & 0xFFFFFFFFFFFFFFFELL);
      }
      return this;
    }
    switch(v5)
    {
      case 31:
        if (*(_DWORD *)(v3 + 28) != 31)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
          *(_DWORD *)(v3 + 28) = 31;
          operator new();
        }
        uint64_t v12 = (const CoreML::Specification::RangeDynamicLayerParams *)*((void *)a2 + 2);
        uint64_t v15 = *(std::string **)(v3 + 16);
        break;
      case 40:
        if (*(_DWORD *)(v3 + 28) != 40)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
          *(_DWORD *)(v3 + 28) = 40;
          operator new();
        }
        goto LABEL_48;
      case 41:
        if (*(_DWORD *)(v3 + 28) != 41)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
          *(_DWORD *)(v3 + 28) = 41;
          operator new();
        }
        uint64_t v12 = (const CoreML::Specification::RangeDynamicLayerParams *)*((void *)a2 + 2);
        uint64_t v15 = *(std::string **)(v3 + 16);
        break;
      default:
        return this;
    }
    return CoreML::Specification::RangeDynamicLayerParams::MergeFrom(v15, v12);
  }
  if (v5 <= 19)
  {
    if (v5 == 5)
    {
      if (*(_DWORD *)(v3 + 28) != 5)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
        *(_DWORD *)(v3 + 28) = 5;
        operator new();
      }
      uint64_t v12 = (const CoreML::Specification::RangeDynamicLayerParams *)*((void *)a2 + 2);
      uint64_t v15 = *(std::string **)(v3 + 16);
      return CoreML::Specification::RangeDynamicLayerParams::MergeFrom(v15, v12);
    }
    if (v5 == 10)
    {
      if (*(_DWORD *)(v3 + 28) != 10)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
        *(_DWORD *)(v3 + 28) = 10;
        operator new();
      }
      goto LABEL_48;
    }
    if (v5 != 15) {
      return this;
    }
    if (*(_DWORD *)(v3 + 28) != 15)
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
      *(_DWORD *)(v3 + 28) = 15;
      operator new();
    }
LABEL_41:
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v7 = *((void *)a2 + 2);
    uint64_t v8 = *(void *)(v7 + 8);
    if (v8) {
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v8 & 0xFFFFFFFFFFFFFFFELL);
    }
    float v9 = *(float *)(v7 + 16);
    if (v9 != 0.0) {
      *(float *)(v6 + 16) = v9;
    }
    return this;
  }
  if (v5 == 20)
  {
    if (*(_DWORD *)(v3 + 28) != 20)
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
      *(_DWORD *)(v3 + 28) = 20;
      operator new();
    }
    goto LABEL_41;
  }
  if (v5 != 25)
  {
    if (v5 != 30) {
      return this;
    }
    if (*(_DWORD *)(v3 + 28) != 30)
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
      *(_DWORD *)(v3 + 28) = 30;
      operator new();
    }
    goto LABEL_48;
  }
  if (*(_DWORD *)(v3 + 28) != 25)
  {
    CoreML::Specification::ActivationParams::clear_NonlinearityType(v3);
    *(_DWORD *)(v3 + 28) = 25;
    operator new();
  }
  int v14 = (const CoreML::Specification::ActivationPReLU *)*((void *)a2 + 2);
  uint64_t v17 = *(std::string **)(v3 + 16);
  return CoreML::Specification::ActivationPReLU::MergeFrom(v17, v14);
}

void sub_1DC11ABAC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_innerproduct(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 140)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 140;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11ACB4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C404A0E3968);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::InnerProductLayerParams::MergeFrom(std::string *this, const CoreML::Specification::InnerProductLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 5);
  if (v8) {
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  if (*((unsigned char *)a2 + 48)) {
    v3[2].__r_.__value_.__s.__data_[0] = 1;
  }
  if (*((unsigned char *)a2 + 49)) {
    v3[2].__r_.__value_.__s.__data_[1] = 1;
  }
  return this;
}

void sub_1DC11ADF8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_embedding(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 150)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 150;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11AE8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4055BE373CLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::EmbeddingLayerParams::MergeFrom(std::string *this, const CoreML::Specification::EmbeddingLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 5);
  if (v8) {
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  if (*((unsigned char *)a2 + 48)) {
    v3[2].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

void sub_1DC11AFC0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_batchnorm(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 160)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 160;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11B054(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40F35C4FACLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::BatchnormLayerParams::MergeFrom(std::string *this, const CoreML::Specification::BatchnormLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      std::string::size_type size = (unint64_t *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(size, *((const CoreML::Specification::WeightParams **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      std::string::size_type v8 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      if (!v8) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v8, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
  }
  std::string::size_type v9 = *((void *)a2 + 6);
  if (v9) {
    v3[2].__r_.__value_.__r.__words[0] = v9;
  }
  if (*((unsigned char *)a2 + 56)) {
    v3[2].__r_.__value_.__s.__data_[8] = 1;
  }
  if (*((unsigned char *)a2 + 57)) {
    v3[2].__r_.__value_.__s.__data_[9] = 1;
  }
  float v10 = *((float *)a2 + 15);
  if (v10 != 0.0) {
    *((float *)&v3[2].__r_.__value_.__r.__words[1] + 1) = v10;
  }
  return this;
}

void sub_1DC11B22C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_mvn(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 165)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 165;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11B2C8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C408CDDB221);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MeanVarianceNormalizeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::MeanVarianceNormalizeLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  if (*((unsigned char *)a2 + 17)) {
    v3->__r_.__value_.__s.__data_[17] = 1;
  }
  float v5 = *((float *)a2 + 5);
  if (v5 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_l2normalize(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 170)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 170;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11B3C0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::L2NormalizeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::L2NormalizeLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_softmax(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 175)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 175;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11B498(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_lrn(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 180)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 180;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11B528(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::LRNLayerParams::MergeFrom(std::string *this, const CoreML::Specification::LRNLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  std::string::size_type v7 = *((void *)a2 + 3);
  if (v7) {
    v3[1].__r_.__value_.__r.__words[0] = v7;
  }
  float v8 = *((float *)a2 + 8);
  if (v8 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__r.__words[1] = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_crop(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 190)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 190;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11B62C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::CropLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::CropLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    if (!v3[5]) {
      operator new();
    }
    float v6 = (const CoreML::Specification::BorderAmounts *)*((void *)a2 + 5);
    std::string::size_type v7 = (unint64_t *)v3[5];
    return CoreML::Specification::BorderAmounts::MergeFrom(v7, v6);
  }
  return this;
}

void sub_1DC11B75C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_padding(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 200)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 200;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11B7EC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::PaddingLayerParams::MergeFrom(std::string *this, const CoreML::Specification::PaddingLayerParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_
    && v5 != 0)
  {
    std::string::size_type v7 = *(unint64_t **)(v3 + 16);
    if (!v7) {
      operator new();
    }
    if (v5) {
      float v8 = (const CoreML::Specification::BorderAmounts *)*((void *)a2 + 2);
    }
    else {
      float v8 = (const CoreML::Specification::BorderAmounts *)&CoreML::Specification::_BorderAmounts_default_instance_;
    }
    this = (std::string *)CoreML::Specification::BorderAmounts::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 9);
  if (v9 == 3)
  {
    if (*(_DWORD *)(v3 + 36) != 3)
    {
      CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
      *(_DWORD *)(v3 + 36) = 3;
      operator new();
    }
  }
  else
  {
    if (v9 != 2)
    {
      if (v9 == 1)
      {
        if (*(_DWORD *)(v3 + 36) != 1)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
          *(_DWORD *)(v3 + 36) = 1;
          operator new();
        }
        uint64_t v10 = *(void *)(v3 + 24);
        uint64_t v13 = *((void *)a2 + 3);
        uint64_t v14 = *(void *)(v13 + 8);
        if (v14) {
          this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v10 + 8), v14 & 0xFFFFFFFFFFFFFFFELL);
        }
        float v15 = *(float *)(v13 + 16);
        if (v15 != 0.0) {
          *(float *)(v10 + 16) = v15;
        }
      }
      return this;
    }
    if (*(_DWORD *)(v3 + 36) != 2)
    {
      CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
      *(_DWORD *)(v3 + 36) = 2;
      operator new();
    }
  }
  uint64_t v11 = *(void *)(*((void *)a2 + 3) + 8);
  if (v11)
  {
    uint64_t v12 = (unint64_t *)(*(void *)(v3 + 24) + 8);
    return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v12, v11 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

void sub_1DC11BA48(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_upsample(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 210)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 210;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11BB0C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40BDAE892FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::UpsampleLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::UpsampleLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<int>::Reserve(v3 + 10, v3[10] + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 6) + 4 * (int)v3[10] + 8), (const void *)(*((void *)a2 + 6) + 8), 4 * *((int *)a2 + 10));
    v3[10] += *((_DWORD *)a2 + 10);
  }
  unsigned int v7 = *((_DWORD *)a2 + 15);
  if (v7) {
    v3[15] = v7;
  }
  unsigned int v8 = *((_DWORD *)a2 + 16);
  if (v8) {
    v3[16] = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_resizebilinear(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 211)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 211;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11BC94(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ResizeBilinearLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ResizeBilinearLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    uint64_t v6 = *((void *)v3 + 5);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *((void *)a2 + 5);
    uint64_t v8 = *(void *)(v7 + 8);
    if (v8) {
      this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v8 & 0xFFFFFFFFFFFFFFFELL);
    }
    int v9 = *(_DWORD *)(v7 + 16);
    if (v9) {
      *(_DWORD *)(v6 + 16) = v9;
    }
  }
  return this;
}

void sub_1DC11BDC0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_cropresize(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 212)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 212;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11BE50(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C405E24942CLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::CropResizeLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::CropResizeLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      uint64_t v6 = *((void *)v3 + 5);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *((void *)a2 + 5);
      uint64_t v8 = *(void *)(v7 + 8);
      if (v8) {
        this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v8 & 0xFFFFFFFFFFFFFFFELL);
      }
      int v9 = *(_DWORD *)(v7 + 16);
      if (v9) {
        *(_DWORD *)(v6 + 16) = v9;
      }
    }
    if (*((void *)a2 + 6))
    {
      uint64_t v10 = *((void *)v3 + 6);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *((void *)a2 + 6);
      uint64_t v12 = *(void *)(v11 + 8);
      if (v12) {
        this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v10 + 8), v12 & 0xFFFFFFFFFFFFFFFELL);
      }
      int v13 = *(_DWORD *)(v11 + 16);
      if (v13) {
        *(_DWORD *)(v10 + 16) = v13;
      }
    }
  }
  if (*((unsigned char *)a2 + 56)) {
    *((unsigned char *)v3 + 56) = 1;
  }
  float v14 = *((float *)a2 + 15);
  if (v14 != 0.0) {
    *((float *)v3 + 15) = v14;
  }
  return this;
}

void sub_1DC11C004(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_unary(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 220)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 220;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C098(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::UnaryFunctionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::UnaryFunctionLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  float v7 = *((float *)a2 + 6);
  if (v7 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__l.__data_ = v7;
  }
  float v8 = *((float *)a2 + 7);
  if (v8 != 0.0) {
    *((float *)v3[1].__r_.__value_.__r.__words + 1) = v8;
  }
  float v9 = *((float *)a2 + 8);
  if (v9 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__r.__words[1] = v9;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_add(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 230)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 230;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C1AC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_multiply(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 231)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 231;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C23C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_average(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 240)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 240;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C2CC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_scale(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 245)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 245;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C35C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40771A4C38);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ScaleLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ScaleLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 10, *((_DWORD *)v3 + 10) + v6);
    this = (unint64_t *)memcpy((void *)(v3[6] + 8 * *((int *)v3 + 10) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *((_DWORD *)v3 + 10) += *((_DWORD *)a2 + 10);
  }
  if (a2 != (const CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    if (*((void *)a2 + 8))
    {
      float v7 = (unint64_t *)v3[8];
      if (!v7) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v7, *((const CoreML::Specification::WeightParams **)a2 + 8));
    }
    if (*((void *)a2 + 9))
    {
      float v8 = (unint64_t *)v3[9];
      if (!v8) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v8, *((const CoreML::Specification::WeightParams **)a2 + 9));
    }
  }
  if (*((unsigned char *)a2 + 80)) {
    *((unsigned char *)v3 + 8CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 1;
  }
  return this;
}

void sub_1DC11C518(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_bias(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 250)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 250;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C5AC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::BiasLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::BiasLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    if (!v3[5]) {
      operator new();
    }
    int v6 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 5);
    float v7 = (unint64_t *)v3[5];
    return CoreML::Specification::WeightParams::MergeFrom(v7, v6);
  }
  return this;
}

void sub_1DC11C6DC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_max(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 260)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 260;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C76C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_min(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 261)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 261;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C7FC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_dot(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 270)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 270;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C88C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::DotProductLayerParams::MergeFrom(std::string *this, const CoreML::Specification::DotProductLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reduce(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 280)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 280;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11C964(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ReduceLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ReduceLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  int v7 = *((_DWORD *)a2 + 6);
  if (v7) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loadconstant(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 290)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 290;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11CA54(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::LoadConstantLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::LoadConstantLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    if (!v3[5]) {
      operator new();
    }
    float v6 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 5);
    int v7 = (unint64_t *)v3[5];
    return CoreML::Specification::WeightParams::MergeFrom(v7, v6);
  }
  return this;
}

void sub_1DC11CB84(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reshape(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 300)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 300;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11CC14(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ReshapeLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ReshapeLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  unsigned int v6 = *((_DWORD *)a2 + 9);
  if (v6) {
    v3[9] = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_flatten(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 301)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 301;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11CD40(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::FlattenLayerParams::MergeFrom(std::string *this, const CoreML::Specification::FlattenLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_permute(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 310)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 310;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11CE14(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_concat(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 320)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 320;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11CEA4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_split(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 330)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 330;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11CF34(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SplitLayerParams::MergeFrom(std::string *this, const CoreML::Specification::SplitLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_sequencerepeat(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 340)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 340;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11D008(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reorganizedata(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 345)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 345;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11D098(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ReorganizeDataLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ReorganizeDataLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slice(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 350)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 350;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11D178(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40DAA165ECLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SliceLayerParams::MergeFrom(std::string *this, const CoreML::Specification::SliceLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  int v8 = *((_DWORD *)a2 + 10);
  if (v8) {
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_simplerecurrent(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 400)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 400;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11D270(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4089F1CBADLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SimpleRecurrentLayerParams::MergeFrom(std::string *this, const CoreML::Specification::SimpleRecurrentLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      std::string::size_type v5 = (std::string *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::ActivationParams::MergeFrom(v5, *((const CoreML::Specification::ActivationParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      std::string::size_type size = (unint64_t *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(size, *((const CoreML::Specification::WeightParams **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      int v8 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      if (!v8) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v8, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
  }
  std::string::size_type v9 = *((void *)a2 + 6);
  if (v9) {
    v3[2].__r_.__value_.__r.__words[0] = v9;
  }
  std::string::size_type v10 = *((void *)a2 + 7);
  if (v10) {
    v3[2].__r_.__value_.__l.__size_ = v10;
  }
  if (*((unsigned char *)a2 + 64)) {
    v3[2].__r_.__value_.__s.__data_[16] = 1;
  }
  if (*((unsigned char *)a2 + 65)) {
    v3[2].__r_.__value_.__s.__data_[17] = 1;
  }
  if (*((unsigned char *)a2 + 66)) {
    v3[2].__r_.__value_.__s.__data_[18] = 1;
  }
  return this;
}

void sub_1DC11D45C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gru(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 410)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 410;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11D508(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C409E07629ELL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::GRULayerParams::MergeFrom(std::string *this, const CoreML::Specification::GRULayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    std::string::size_type v6 = (CoreML::Specification::ActivationParams **)(*((void *)a2 + 4) + 8);
    std::string::size_type v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  if (a2 != (const CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      std::string::size_type v10 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v10, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      data = (unint64_t *)v3[2].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 6));
    }
    if (*((void *)a2 + 7))
    {
      uint64_t v12 = (unint64_t *)v3[2].__r_.__value_.__l.__size_;
      if (!v12) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v12, *((const CoreML::Specification::WeightParams **)a2 + 7));
    }
    if (*((void *)a2 + 8))
    {
      int v13 = (unint64_t *)v3[2].__r_.__value_.__r.__words[2];
      if (!v13) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v13, *((const CoreML::Specification::WeightParams **)a2 + 8));
    }
    if (*((void *)a2 + 9))
    {
      float v14 = (unint64_t *)v3[3].__r_.__value_.__l.__data_;
      if (!v14) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v14, *((const CoreML::Specification::WeightParams **)a2 + 9));
    }
    if (*((void *)a2 + 10))
    {
      float v15 = (unint64_t *)v3[3].__r_.__value_.__l.__size_;
      if (!v15) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v15, *((const CoreML::Specification::WeightParams **)a2 + 10));
    }
    if (*((void *)a2 + 11))
    {
      int v16 = (unint64_t *)v3[3].__r_.__value_.__r.__words[2];
      if (!v16) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v16, *((const CoreML::Specification::WeightParams **)a2 + 11));
    }
    if (*((void *)a2 + 12))
    {
      uint64_t v17 = (unint64_t *)v3[4].__r_.__value_.__l.__data_;
      if (!v17) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v17, *((const CoreML::Specification::WeightParams **)a2 + 12));
    }
    if (*((void *)a2 + 13))
    {
      signed int v18 = (unint64_t *)v3[4].__r_.__value_.__l.__size_;
      if (!v18) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v18, *((const CoreML::Specification::WeightParams **)a2 + 13));
    }
  }
  std::string::size_type v19 = *((void *)a2 + 14);
  if (v19) {
    v3[4].__r_.__value_.__r.__words[2] = v19;
  }
  std::string::size_type v20 = *((void *)a2 + 15);
  if (v20) {
    v3[5].__r_.__value_.__r.__words[0] = v20;
  }
  if (*((unsigned char *)a2 + 128)) {
    v3[5].__r_.__value_.__s.__data_[8] = 1;
  }
  if (*((unsigned char *)a2 + 129)) {
    v3[5].__r_.__value_.__s.__data_[9] = 1;
  }
  if (*((unsigned char *)a2 + 130)) {
    v3[5].__r_.__value_.__s.__data_[10] = 1;
  }
  return this;
}

void sub_1DC11D8C0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_unidirectionallstm(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 420)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 420;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11D970(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40B3944273);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::UniDirectionalLSTMLayerParams::MergeFrom(std::string *this, const CoreML::Specification::UniDirectionalLSTMLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    std::string::size_type v6 = (CoreML::Specification::ActivationParams **)(*((void *)a2 + 4) + 8);
    std::string::size_type v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  if (a2 != (const CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      std::string::size_type v10 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10) {
        operator new();
      }
      this = CoreML::Specification::LSTMParams::MergeFrom(v10, *((const CoreML::Specification::LSTMParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::LSTMWeightParams::MergeFrom(data, *((const CoreML::Specification::LSTMWeightParams **)a2 + 6));
    }
  }
  std::string::size_type v12 = *((void *)a2 + 7);
  if (v12) {
    v3[2].__r_.__value_.__l.__size_ = v12;
  }
  std::string::size_type v13 = *((void *)a2 + 8);
  if (v13) {
    v3[2].__r_.__value_.__r.__words[2] = v13;
  }
  if (*((unsigned char *)a2 + 72)) {
    v3[3].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

void sub_1DC11DB18(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_bidirectionallstm(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 430)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 430;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11DBC4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C402A225981);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::BiDirectionalLSTMLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::BiDirectionalLSTMLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    std::string::size_type v6 = (CoreML::Specification::ActivationParams **)(*((void *)a2 + 4) + 8);
    std::string::size_type v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), *((_DWORD *)a2 + 6));
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)(v3 + 2), (std::string **)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    std::string::size_type v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *std::string::size_type v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    uint64_t v11 = (CoreML::Specification::ActivationParams **)(*((void *)a2 + 7) + 8);
    std::string::size_type v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 5), *((_DWORD *)a2 + 12));
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((std::string *)(v3 + 5), (std::string **)v12, v11, v10, *(_DWORD *)v3[7] - *((_DWORD *)v3 + 12));
    signed int v13 = *((_DWORD *)v3 + 12) + v10;
    *((_DWORD *)v3 + 12) = v13;
    float v14 = (signed int *)v3[7];
    if (*v14 < v13) {
      signed int *v14 = v13;
    }
  }
  int v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    uint64_t v41 = *((void *)a2 + 10);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 8), v15);
    int v40 = this;
    uint64_t v16 = *(int *)v3[10];
    uint64_t v17 = *((int *)v3 + 18);
    int v18 = v16 - v17;
    if ((int)v16 - (int)v17 >= v15) {
      uint64_t v19 = v15;
    }
    else {
      uint64_t v19 = v18;
    }
    if ((int)v19 >= 1)
    {
      std::string::size_type v20 = (std::string **)this;
      char v21 = (const CoreML::Specification::LSTMWeightParams **)(v41 + 8);
      do
      {
        signed int v23 = *v21++;
        signed int v22 = v23;
        uint64_t v24 = *v20++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LSTMWeightParams>::Merge(v22, v24);
        --v19;
      }
      while (v19);
    }
    if (v18 < v15)
    {
      unint64_t v25 = (google::protobuf::Arena *)v3[8];
      int v26 = v17 + v15 - v16;
      uint64_t v27 = 8 * v16 - 8 * v17;
      char v28 = (google::protobuf::Arena ***)((char *)v40 + v27);
      char v29 = (const CoreML::Specification::LSTMWeightParams **)(v27 + v41 + 8);
      do
      {
        char v30 = *v29;
        if (!v25) {
          operator new();
        }
        CoreML::Specification::LSTMWeightParams::LSTMWeightParams((CoreML::Specification::LSTMWeightParams *)Aligned);
        unsigned int v32 = google::protobuf::Arena::AllocateAligned(v25, 0, 24);
        std::string *v32 = (google::protobuf::Arena *)Aligned;
        v32[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LSTMWeightParams>;
        int v33 = (unint64_t *)((char *)v25 + 32);
        do
          unint64_t v34 = __ldxr(v33);
        while (__stxr((unint64_t)v32, v33));
        v32[2] = (google::protobuf::Arena *)v34;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LSTMWeightParams>::Merge(v30, (std::string *)Aligned);
        *v28++ = Aligned;
        ++v29;
        --v26;
      }
      while (v26);
    }
    int v35 = *((_DWORD *)v3 + 18) + v15;
    *((_DWORD *)v3 + 18) = v35;
    int v36 = (int *)v3[10];
    if (*v36 < v35) {
      int *v36 = v35;
    }
  }
  if (a2 != (const CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_
    && *((void *)a2 + 11))
  {
    uint64_t v37 = (std::string *)v3[11];
    if (!v37) {
      operator new();
    }
    this = (unint64_t *)CoreML::Specification::LSTMParams::MergeFrom(v37, *((const CoreML::Specification::LSTMParams **)a2 + 11));
  }
  unint64_t v38 = *((void *)a2 + 12);
  if (v38) {
    v3[12] = v38;
  }
  unint64_t v39 = *((void *)a2 + 13);
  if (v39) {
    v3[13] = v39;
  }
  return this;
}

void sub_1DC11DED4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_custom(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 500)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 500;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11DF80(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40B612A46ELL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CustomLayerParams::MergeFrom(CoreML::Specification::CustomLayerParams *this, const CoreML::Specification::CustomLayerParams *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v39 = *((void *)a2 + 4);
    unint64_t v38 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::CustomLayerParams *)((char *)this + 16), v5);
    uint64_t v6 = **((int **)this + 4);
    uint64_t v7 = *((int *)this + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      unsigned int v10 = (CoreML::Specification::WeightParams **)v38;
      uint64_t v11 = (CoreML::Specification::WeightParams **)(v39 + 8);
      do
      {
        signed int v13 = *v11++;
        std::string::size_type v12 = v13;
        float v14 = *v10++;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::WeightParams>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)*((void *)this + 2);
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      int v18 = (google::protobuf::Arena ***)((char *)v38 + v17);
      uint64_t v19 = (CoreML::Specification::WeightParams **)(v17 + v39 + 8);
      do
      {
        std::string::size_type v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::WeightParams::WeightParams((CoreML::Specification::WeightParams *)Aligned);
        signed int v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *signed int v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::WeightParams>;
        signed int v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::WeightParams>::Merge(v20, (CoreML::Specification::WeightParams *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v25;
    int v26 = (int *)*((void *)this + 4);
    if (*v26 < v25) {
      *int v26 = v25;
    }
  }
  uint64_t result = (std::string *)google::protobuf::Map<std::string,std::string>::begin(v40, *((void **)a2 + 8));
  for (int i = v40[0]; v40[0]; int i = v40[0])
  {
    uint64_t v29 = *((void *)i + 3);
    char v30 = (const CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(v29 + 24);
    unsigned int v31 = google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[]((uint64_t)this + 48, v29);
    if (v30 != (const CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)v31)
    {
      unsigned int v32 = (std::string *)v31;
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)v31);
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergeFrom(v32, v30);
    }
    uint64_t result = (std::string *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v40);
  }
  uint64_t v33 = *((void *)a2 + 9);
  if (*(char *)(v33 + 23) < 0)
  {
    if (!*(void *)(v33 + 8)) {
      goto LABEL_32;
    }
  }
  else if (!*(unsigned char *)(v33 + 23))
  {
    goto LABEL_32;
  }
  uint64_t result = (std::string *)((char *)this + 72);
  unint64_t v34 = (uint64_t *)*((void *)this + 9);
  if (v34 != (uint64_t *)v33)
  {
    if (v34 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, v33);
    }
    uint64_t result = std::string::operator=(*((std::string **)this + 9), (const std::string *)v33);
  }
LABEL_32:
  uint64_t v35 = *((void *)a2 + 10);
  if (*(char *)(v35 + 23) < 0)
  {
    if (!*(void *)(v35 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v35 + 23))
  {
    return result;
  }
  uint64_t v37 = (std::string *)*((void *)this + 10);
  int v36 = (char *)this + 80;
  uint64_t result = v37;
  if (v37 != (std::string *)v35)
  {
    if (result == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v36, v35);
    }
    return std::string::operator=(result, (const std::string *)v35);
  }
  return result;
}

void sub_1DC11E294(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_copy(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 600)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 600;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11E324(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_branch(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 605)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 605;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11E3B4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::BranchLayerParams::MergeFrom(std::string *this, const CoreML::Specification::BranchLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (std::string *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::NeuralNetwork::MergeFrom(v5, *((const CoreML::Specification::NeuralNetwork **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::NeuralNetwork *)*((void *)a2 + 3);
      data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      return CoreML::Specification::NeuralNetwork::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_1DC11E4DC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loop(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 615)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 615;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11E570(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FB89D240);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::LoopLayerParams::MergeFrom(std::string *this, const CoreML::Specification::LoopLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  if (a2 != (const CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_)
  {
    if (*((void *)a2 + 3))
    {
      data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = CoreML::Specification::NeuralNetwork::MergeFrom(data, *((const CoreML::Specification::NeuralNetwork **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      std::string::size_type size = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = CoreML::Specification::NeuralNetwork::MergeFrom(size, *((const CoreML::Specification::NeuralNetwork **)a2 + 4));
    }
  }
  std::string::size_type v9 = *((void *)a2 + 5);
  if (v9) {
    v3[1].__r_.__value_.__r.__words[2] = v9;
  }
  return this;
}

void sub_1DC11E6D8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loopbreak(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 620)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 620;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11E76C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loopcontinue(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 625)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 625;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11E7FC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_rangestatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 635)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 635;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11E88C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::RangeStaticLayerParams::MergeFrom(std::string *this, const CoreML::Specification::RangeStaticLayerParams *a2)
{
  uint64_t v3 = (float *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    v3[4] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    v3[5] = v6;
  }
  float v7 = *((float *)a2 + 6);
  if (v7 != 0.0) {
    v3[6] = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_rangedynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 640)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 640;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11E984(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::RangeDynamicLayerParams::MergeFrom(std::string *this, const CoreML::Specification::RangeDynamicLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_clip(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 660)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 660;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11EA6C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_ceil(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 665)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 665;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11EAFC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_floor(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 670)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 670;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11EB8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_sign(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 680)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 680;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11EC1C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_round(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 685)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 685;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11ECAC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_exp2(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 700)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 700;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11ED3C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_sin(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 710)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 710;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11EDCC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_cos(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 715)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 715;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11EE5C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_tan(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 720)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 720;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11EEEC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_asin(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 730)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 730;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11EF7C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_acos(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 735)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 735;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F00C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_atan(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 740)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 740;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F09C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_sinh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 750)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 750;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F12C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_cosh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 755)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 755;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F1BC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_tanh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 760)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 760;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F24C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_asinh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 770)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 770;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F2DC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_acosh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 775)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 775;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F36C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_atanh(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 780)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 780;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F3FC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_erf(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 790)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 790;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F48C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gelu(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 795)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 795;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F51C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_equal(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 815)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 815;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F5AC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_notequal(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 820)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 820;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F63C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_lessthan(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 825)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 825;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F6CC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_lessequal(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 827)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 827;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F75C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_greaterthan(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 830)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 830;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F7EC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_greaterequal(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 832)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 832;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F87C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_logicalor(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 840)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 840;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F90C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_logicalxor(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 845)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 845;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11F99C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_logicalnot(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 850)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 850;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FA2C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_logicaland(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 855)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 855;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FABC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_modbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 865)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 865;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FB4C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_minbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 870)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 870;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FBDC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_maxbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 875)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 875;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FC6C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_addbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 880)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 880;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FCFC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_powbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 885)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 885;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FD8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_dividebroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 890)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 890;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FE1C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_floordivbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 895)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 895;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FEAC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_multiplybroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 900)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 900;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FF3C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_subtractbroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 905)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 905;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC11FFCC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_tile(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 920)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 920;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12005C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_stack(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 925)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 925;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1200EC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gather(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 930)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 930;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12017C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_scatter(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 935)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 935;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12020C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gathernd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 940)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 940;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12029C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_scatternd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 945)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 945;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12032C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_softmaxnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 950)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 950;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1203BC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_gatheralongaxis(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 952)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 952;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12044C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_scatteralongaxis(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 954)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 954;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1204DC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reverse(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 960)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 960;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12056C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reverseseq(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 965)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 965;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1205FC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_splitnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 975)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 975;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12068C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C7CBD27BLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SplitNDLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::SplitNDLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  uint64_t v6 = *((void *)a2 + 5);
  if (v6) {
    *((void *)v3 + 5) = v6;
  }
  uint64_t v7 = *((void *)a2 + 6);
  if (v7) {
    *((void *)v3 + 6) = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_concatnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 980)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 980;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1207C4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ConcatNDLayerParams::MergeFrom(std::string *this, const CoreML::Specification::ConcatNDLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  if (*((unsigned char *)a2 + 24)) {
    v3[1].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_transpose(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 985)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 985;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1208A8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slicestatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 995)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 995;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC120938(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40B7792B36);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SliceStaticLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::SliceStaticLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve(v3 + 10, v3[10] + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 6) + (int)v3[10] + 8), (const void *)(*((void *)a2 + 6) + 8), *((int *)a2 + 10));
    v3[10] += *((_DWORD *)a2 + 10);
  }
  int v7 = *((_DWORD *)a2 + 16);
  if (v7)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 16, v3[16] + v7);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 9) + 8 * (int)v3[16] + 8), (const void *)(*((void *)a2 + 9) + 8), 8 * *((int *)a2 + 16));
    v3[16] += *((_DWORD *)a2 + 16);
  }
  int v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve(v3 + 22, v3[22] + v8);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 12) + (int)v3[22] + 8), (const void *)(*((void *)a2 + 12) + 8), *((int *)a2 + 22));
    v3[22] += *((_DWORD *)a2 + 22);
  }
  int v9 = *((_DWORD *)a2 + 28);
  if (v9)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 28, v3[28] + v9);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 15) + 8 * (int)v3[28] + 8), (const void *)(*((void *)a2 + 15) + 8), 8 * *((int *)a2 + 28));
    v3[28] += *((_DWORD *)a2 + 28);
  }
  int v10 = *((_DWORD *)a2 + 34);
  if (v10)
  {
    int v12 = v3[34];
    uint64_t v11 = v3 + 34;
    google::protobuf::RepeatedField<BOOL>::Reserve(v11, v12 + v10);
    this = (unint64_t *)memcpy((void *)(*((void *)v11 + 1) + (int)*v11 + 8), (const void *)(*((void *)a2 + 18) + 8), *((int *)a2 + 34));
    *v11 += *((_DWORD *)a2 + 34);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slicedynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1000)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1000;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC120BD8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4014994198);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SliceDynamicLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::SliceDynamicLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 10, v3[10] + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 6) + 8 * (int)v3[10] + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    v3[10] += *((_DWORD *)a2 + 10);
  }
  int v7 = *((_DWORD *)a2 + 16);
  if (v7)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve(v3 + 16, v3[16] + v7);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 9) + (int)v3[16] + 8), (const void *)(*((void *)a2 + 9) + 8), *((int *)a2 + 16));
    v3[16] += *((_DWORD *)a2 + 16);
  }
  int v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 22, v3[22] + v8);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 12) + 8 * (int)v3[22] + 8), (const void *)(*((void *)a2 + 12) + 8), 8 * *((int *)a2 + 22));
    v3[22] += *((_DWORD *)a2 + 22);
  }
  int v9 = *((_DWORD *)a2 + 28);
  if (v9)
  {
    int v11 = v3[28];
    int v10 = v3 + 28;
    google::protobuf::RepeatedField<BOOL>::Reserve(v10, v11 + v9);
    this = (unint64_t *)memcpy((void *)(*((void *)v10 + 1) + (int)*v10 + 8), (const void *)(*((void *)a2 + 15) + 8), *((int *)a2 + 28));
    *v10 += *((_DWORD *)a2 + 28);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slidingwindows(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1005)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1005;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC120E28(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40594C3D85);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SlidingWindowsLayerParams::MergeFrom(std::string *this, const CoreML::Specification::SlidingWindowsLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_topk(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1015)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1015;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC120F14(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40A90F680CLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::TopKLayerParams::MergeFrom(std::string *this, const CoreML::Specification::TopKLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  if (*((unsigned char *)a2 + 32)) {
    v3[1].__r_.__value_.__s.__data_[8] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_argmin(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1020)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1020;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121004(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_argmax(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1025)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1025;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121094(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_embeddingnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1040)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1040;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121124(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4055BE373CLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::EmbeddingNDLayerParams::MergeFrom(std::string *this, const CoreML::Specification::EmbeddingNDLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      std::string::size_type v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 5);
  if (v8) {
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  if (*((unsigned char *)a2 + 48)) {
    v3[2].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

void sub_1DC121258(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_batchedmatmul(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1045)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1045;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1212EC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40A7ADAA20);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::BatchedMatMulLayerParams::MergeFrom(std::string *this, const CoreML::Specification::BatchedMatMulLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      std::string::size_type v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
  }
  std::string::size_type v7 = *((void *)a2 + 4);
  if (v7) {
    v3[1].__r_.__value_.__l.__size_ = v7;
  }
  std::string::size_type v8 = *((void *)a2 + 5);
  if (v8) {
    v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  if (*((unsigned char *)a2 + 48)) {
    v3[2].__r_.__value_.__s.__data_[0] = 1;
  }
  if (*((unsigned char *)a2 + 49)) {
    v3[2].__r_.__value_.__s.__data_[1] = 1;
  }
  if (*((unsigned char *)a2 + 50)) {
    v3[2].__r_.__value_.__s.__data_[2] = 1;
  }
  if (*((unsigned char *)a2 + 51)) {
    v3[2].__r_.__value_.__s.__data_[3] = 1;
  }
  return this;
}

void sub_1DC121450(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_getshape(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1065)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1065;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1214E4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_loadconstantnd(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1070)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1070;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121574(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::LoadConstantNDLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::LoadConstantNDLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_
    && *((void *)a2 + 5))
  {
    if (!v3[5]) {
      operator new();
    }
    std::string::size_type v6 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 5);
    std::string::size_type v7 = (unint64_t *)v3[5];
    return CoreML::Specification::WeightParams::MergeFrom(v7, v6);
  }
  return this;
}

void sub_1DC1216A4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_filllike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1080)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1080;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121734(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_fillstatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1085)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1085;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1217C4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::FillStaticLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::FillStaticLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  float v6 = *((float *)a2 + 9);
  if (v6 != 0.0) {
    *((float *)v3 + 9) = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_filldynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1090)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1090;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1218F4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttolike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1100)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1100;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121984(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttostatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1105)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1105;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121A14(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttodynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1110)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1110;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121AA4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_squeeze(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1120)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1120;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121B34(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4095A926F0);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SqueezeLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::SqueezeLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  if (*((unsigned char *)a2 + 36)) {
    *((unsigned char *)v3 + 36) = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_expanddims(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1125)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1125;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121C64(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_flattento2d(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1130)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1130;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121CF4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reshapelike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1135)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1135;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121D84(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reshapestatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1140)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1140;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121E14(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reshapedynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1145)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1145;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121EA4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_rankpreservingreshape(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1150)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1150;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121F34(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_constantpad(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1155)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1155;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC121FC4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C404456B134);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ConstantPaddingLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ConstantPaddingLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  float v6 = *((float *)a2 + 9);
  if (v6 != 0.0) {
    *((float *)v3 + 9) = v6;
  }
  if (*((unsigned char *)a2 + 40)) {
    *((unsigned char *)v3 + 4CoreML::Specification::NetworkUpdateParameters::New(this, 0) = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomnormallike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1170)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1170;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122104(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::RandomNormalLikeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::RandomNormalLikeLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 6);
  if (v6 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  float v7 = *((float *)a2 + 7);
  if (v7 != 0.0) {
    *((float *)v3[1].__r_.__value_.__r.__words + 1) = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomnormalstatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1175)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1175;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1221F8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C7CBD27BLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::RandomNormalStaticLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::RandomNormalStaticLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  uint64_t v6 = *((void *)a2 + 5);
  if (v6) {
    *((void *)v3 + 5) = v6;
  }
  float v7 = *((float *)a2 + 12);
  if (v7 != 0.0) {
    *((float *)v3 + 12) = v7;
  }
  float v8 = *((float *)a2 + 13);
  if (v8 != 0.0) {
    *((float *)v3 + 1google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomnormaldynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1180)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1180;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122344(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformlike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1190)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1190;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1223D4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformstatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1195)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1195;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122464(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C7CBD27BLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformdynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1200)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1200;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1224F4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullilike(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1210)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1210;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122584(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::RandomBernoulliLikeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::RandomBernoulliLikeLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 6);
  if (v6 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullistatic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1215)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1215;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122668(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403321297FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::RandomBernoulliStaticLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::RandomBernoulliStaticLayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  uint64_t v6 = *((void *)a2 + 5);
  if (v6) {
    *((void *)v3 + 5) = v6;
  }
  float v7 = *((float *)a2 + 12);
  if (v7 != 0.0) {
    *((float *)v3 + 12) = v7;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullidynamic(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1220)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1220;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1227A4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_categoricaldistribution(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1230)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1230;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122834(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C4067988C7FLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CategoricalDistributionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::CategoricalDistributionLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  if (*((unsigned char *)a2 + 32)) {
    v3[1].__r_.__value_.__s.__data_[8] = 1;
  }
  float v7 = *((float *)a2 + 9);
  if (v7 != 0.0) {
    *((float *)&v3[1].__r_.__value_.__r.__words[1] + 1) = v7;
  }
  float v8 = *((float *)a2 + 10);
  if (v8 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__r.__words[2] = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducel1(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1250)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1250;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122944(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::ReduceL1LayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::ReduceL1LayerParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  if (*((unsigned char *)a2 + 36)) {
    *((unsigned char *)v3 + 36) = 1;
  }
  if (*((unsigned char *)a2 + 37)) {
    *((unsigned char *)v3 + 37) = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducel2(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1255)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1255;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122A84(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducemax(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1260)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1260;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122B14(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducemin(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1265)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1265;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122BA4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducesum(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1270)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1270;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122C34(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reduceprod(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1275)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1275;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122CC4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducemean(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1280)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1280;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122D54(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsum(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1285)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1285;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122DE4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducesumsquare(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1290)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1290;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122E74(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsumexp(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1295)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1295;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122F04(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4024E920E0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_wherenonzero(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1313)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1313;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC122F94(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_matrixbandpart(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1315)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1315;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC123024(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_lowertriangular(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1320)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1320;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1230B4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_uppertriangular(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1325)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1325;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC123144(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_wherebroadcastable(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1330)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1330;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1231D4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_layernormalization(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1350)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1350;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC123264(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4054F75DDDLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::LayerNormalizationLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::LayerNormalizationLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      std::string::size_type v6 = (unint64_t *)v3[5];
      if (!v6) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v6, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      float v7 = (unint64_t *)v3[6];
      if (!v7) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v7, *((const CoreML::Specification::WeightParams **)a2 + 6));
    }
  }
  float v8 = *((float *)a2 + 14);
  if (v8 != 0.0) {
    *((float *)v3 + 14) = v8;
  }
  return this;
}

void sub_1DC1233D0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_nonmaximumsuppression(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1400)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1400;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC123464(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40A90F680CLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::NonMaximumSuppressionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::NonMaximumSuppressionLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  float v6 = *((float *)a2 + 5);
  if (v6 != 0.0) {
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  }
  std::string::size_type v7 = *((void *)a2 + 3);
  if (v7) {
    v3[1].__r_.__value_.__r.__words[0] = v7;
  }
  if (*((unsigned char *)a2 + 32)) {
    v3[1].__r_.__value_.__s.__data_[8] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_onehot(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1450)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1450;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC123568(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40594C3D85);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::OneHotLayerParams::MergeFrom(std::string *this, const CoreML::Specification::OneHotLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  std::string::size_type v6 = *((void *)a2 + 3);
  if (v6) {
    v3[1].__r_.__value_.__r.__words[0] = v6;
  }
  float v7 = *((float *)a2 + 8);
  if (v7 != 0.0) {
    *(float *)&v3[1].__r_.__value_.__r.__words[1] = v7;
  }
  float v8 = *((float *)a2 + 9);
  if (v8 != 0.0) {
    *((float *)&v3[1].__r_.__value_.__r.__words[1] + 1) = v8;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_cumsum(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1455)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1455;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC123668(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C400751EDB2);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CumSumLayerParams::MergeFrom(std::string *this, const CoreML::Specification::CumSumLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  if (*((unsigned char *)a2 + 24)) {
    v3[1].__r_.__value_.__s.__data_[0] = 1;
  }
  if (*((unsigned char *)a2 + 25)) {
    v3[1].__r_.__value_.__s.__data_[1] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_clampedrelu(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1460)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1460;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12375C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_argsort(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1461)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1461;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1237EC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E45386B4);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_pooling3d(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1465)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1465;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC12387C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40004337BDLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::Pooling3DLayerParams::MergeFrom(std::string *this, const CoreML::Specification::Pooling3DLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  int v6 = *((_DWORD *)a2 + 5);
  if (v6) {
    HIDWORD(v3->__r_.__value_.__r.__words[2]) = v6;
  }
  int v7 = *((_DWORD *)a2 + 6);
  if (v7) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
  }
  int v8 = *((_DWORD *)a2 + 7);
  if (v8) {
    HIDWORD(v3[1].__r_.__value_.__r.__words[0]) = v8;
  }
  int v9 = *((_DWORD *)a2 + 8);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
  }
  int v10 = *((_DWORD *)a2 + 9);
  if (v10) {
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = v10;
  }
  int v11 = *((_DWORD *)a2 + 10);
  if (v11) {
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v11;
  }
  int v12 = *((_DWORD *)a2 + 11);
  if (v12) {
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = v12;
  }
  int v13 = *((_DWORD *)a2 + 12);
  if (v13) {
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
  }
  int v14 = *((_DWORD *)a2 + 13);
  if (v14) {
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = v14;
  }
  int v15 = *((_DWORD *)a2 + 14);
  if (v15) {
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v15;
  }
  int v16 = *((_DWORD *)a2 + 15);
  if (v16) {
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = v16;
  }
  int v17 = *((_DWORD *)a2 + 16);
  if (v17) {
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = v17;
  }
  if (*((unsigned char *)a2 + 68)) {
    v3[2].__r_.__value_.__s.__data_[20] = 1;
  }
  int v18 = *((_DWORD *)a2 + 18);
  if (v18) {
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v18;
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_globalpooling3d(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1466)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1466;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC1239FC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_slicebysize(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1470)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1470;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC123A8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::mutable_convolution3d(CoreML::Specification::NeuralNetworkLayer *this)
{
  if (*((_DWORD *)this + 35) != 1471)
  {
    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
    *((_DWORD *)this + 35) = 1471;
    operator new();
  }
  return *((void *)this + 16);
}

void sub_1DC123B1C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40381DED69);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::Convolution3DLayerParams::MergeFrom(unint64_t *this, const CoreML::Specification::Convolution3DLayerParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_)
  {
    if (*((void *)a2 + 5))
    {
      int v6 = (unint64_t *)v3[5];
      if (!v6) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v6, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      int v7 = (unint64_t *)v3[6];
      if (!v7) {
        operator new();
      }
      this = CoreML::Specification::WeightParams::MergeFrom(v7, *((const CoreML::Specification::WeightParams **)a2 + 6));
    }
  }
  int v8 = *((_DWORD *)a2 + 14);
  if (v8) {
    *((_DWORD *)v3 + 14) = v8;
  }
  int v9 = *((_DWORD *)a2 + 15);
  if (v9) {
    *((_DWORD *)v3 + 15) = v9;
  }
  int v10 = *((_DWORD *)a2 + 16);
  if (v10) {
    *((_DWORD *)v3 + 16) = v10;
  }
  int v11 = *((_DWORD *)a2 + 17);
  if (v11) {
    *((_DWORD *)v3 + 17) = v11;
  }
  int v12 = *((_DWORD *)a2 + 18);
  if (v12) {
    *((_DWORD *)v3 + 18) = v12;
  }
  int v13 = *((_DWORD *)a2 + 19);
  if (v13) {
    *((_DWORD *)v3 + 19) = v13;
  }
  int v14 = *((_DWORD *)a2 + 20);
  if (v14) {
    *((_DWORD *)v3 + 2CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v14;
  }
  int v15 = *((_DWORD *)a2 + 21);
  if (v15) {
    *((_DWORD *)v3 + 21) = v15;
  }
  int v16 = *((_DWORD *)a2 + 22);
  if (v16) {
    *((_DWORD *)v3 + 22) = v16;
  }
  int v17 = *((_DWORD *)a2 + 23);
  if (v17) {
    *((_DWORD *)v3 + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v17;
  }
  int v18 = *((_DWORD *)a2 + 24);
  if (v18) {
    *((_DWORD *)v3 + 24) = v18;
  }
  int v19 = *((_DWORD *)a2 + 25);
  if (v19) {
    *((_DWORD *)v3 + 25) = v19;
  }
  if (*((unsigned char *)a2 + 104)) {
    *((unsigned char *)v3 + 104) = 1;
  }
  if (*((unsigned char *)a2 + 105)) {
    *((unsigned char *)v3 + 105) = 1;
  }
  int v20 = *((_DWORD *)a2 + 27);
  if (v20) {
    *((_DWORD *)v3 + 27) = v20;
  }
  int v21 = *((_DWORD *)a2 + 28);
  if (v21) {
    *((_DWORD *)v3 + 28) = v21;
  }
  int v22 = *((_DWORD *)a2 + 29);
  if (v22) {
    *((_DWORD *)v3 + 29) = v22;
  }
  int v23 = *((_DWORD *)a2 + 30);
  if (v23) {
    *((_DWORD *)v3 + 3CoreML::Specification::NetworkUpdateParameters::New(this, 0) = v23;
  }
  int v24 = *((_DWORD *)a2 + 31);
  if (v24) {
    *((_DWORD *)v3 + 31) = v24;
  }
  int v25 = *((_DWORD *)a2 + 32);
  if (v25) {
    *((_DWORD *)v3 + 32) = v25;
  }
  int v26 = *((_DWORD *)a2 + 33);
  if (v26) {
    *((_DWORD *)v3 + 3google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = v26;
  }
  return this;
}

void sub_1DC123D7C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::WeightParams::MergeFrom(unint64_t *this, const CoreML::Specification::WeightParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (unint64_t *)memcpy((void *)(v3[3] + 4 * *((int *)v3 + 4) + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  uint64_t v6 = *((void *)a2 + 5);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  this = v3 + 5;
  int v7 = (uint64_t *)v3[5];
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v6);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[5], (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 6);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  this = v3 + 6;
  int v9 = (uint64_t *)v3[6];
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v8);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[6], (const std::string *)v8);
  }
LABEL_21:
  uint64_t v10 = *((void *)a2 + 7);
  if (*(char *)(v10 + 23) < 0)
  {
    if (!*(void *)(v10 + 8)) {
      goto LABEL_29;
    }
  }
  else if (!*(unsigned char *)(v10 + 23))
  {
    goto LABEL_29;
  }
  this = v3 + 7;
  int v11 = (uint64_t *)v3[7];
  if (v11 != (uint64_t *)v10)
  {
    if (v11 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v10);
    }
    this = (unint64_t *)std::string::operator=((std::string *)v3[7], (const std::string *)v10);
  }
LABEL_29:
  if (a2 != (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_
    && *((void *)a2 + 8))
  {
    int v12 = (std::string *)v3[8];
    if (!v12) {
      operator new();
    }
    this = (unint64_t *)CoreML::Specification::QuantizationParams::MergeFrom(v12, *((const CoreML::Specification::QuantizationParams **)a2 + 8));
  }
  if (*((unsigned char *)a2 + 72)) {
    *((unsigned char *)v3 + 72) = 1;
  }
  return this;
}

void sub_1DC123F94(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::QuantizationParams::MergeFrom(std::string *this, const CoreML::Specification::QuantizationParams *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (v5) {
    *(void *)(v3 + 16) = v5;
  }
  int v6 = *((_DWORD *)a2 + 9);
  if (v6 == 102)
  {
    if (*(_DWORD *)(v3 + 36) != 102)
    {
      CoreML::Specification::QuantizationParams::clear_QuantizationType(v3);
      *(_DWORD *)(v3 + 36) = 102;
      operator new();
    }
    uint64_t v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((void *)a2 + 3);
    uint64_t v10 = *(unint64_t **)(v3 + 24);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(v10, v8);
  }
  else if (v6 == 101)
  {
    if (*(_DWORD *)(v3 + 36) != 101)
    {
      CoreML::Specification::QuantizationParams::clear_QuantizationType(v3);
      *(_DWORD *)(v3 + 36) = 101;
      operator new();
    }
    int v7 = (const CoreML::Specification::LinearQuantizationParams *)*((void *)a2 + 3);
    int v9 = *(unint64_t **)(v3 + 24);
    return (std::string *)CoreML::Specification::LinearQuantizationParams::MergeFrom(v9, v7);
  }
  return this;
}

void sub_1DC124130(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::LinearQuantizationParams::MergeFrom(unint64_t *this, const CoreML::Specification::LinearQuantizationParams *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<int>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 4 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    int v8 = v3[10];
    int v7 = v3 + 10;
    google::protobuf::RepeatedField<int>::Reserve(v7, v8 + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v7 + 1) + 4 * (int)*v7 + 8), (const void *)(*((void *)a2 + 6) + 8), 4 * *((int *)a2 + 10));
    *v7 += *((_DWORD *)a2 + 10);
  }
  return this;
}

std::string *CoreML::Specification::NeuralNetwork::MergeFrom(std::string *this, const CoreML::Specification::NeuralNetwork *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((unsigned int *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = *((void *)a2 + 4) + 8;
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(&v3->__r_.__value_.__r.__words[2], v7, v6, v5, (*(_DWORD *)v3[1].__r_.__value_.__l.__size_- LODWORD(v3[1].__r_.__value_.__l.__data_)));
    int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (_DWORD *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    int v11 = (const CoreML::Specification::NeuralNetworkPreprocessing **)(*((void *)a2 + 7) + 8);
    int v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((std::string *)((char *)v3 + 40), (std::string **)v12, v11, v10, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v13 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v10;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
    int v14 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v14 < v13) {
      signed int *v14 = v13;
    }
  }
  if (a2 != (const CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_
    && *((void *)a2 + 8))
  {
    int v15 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v15) {
      operator new();
    }
    this = CoreML::Specification::NetworkUpdateParameters::MergeFrom(v15, *((const CoreML::Specification::NetworkUpdateParameters **)a2 + 8));
  }
  int v16 = *((_DWORD *)a2 + 18);
  if (v16) {
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v16;
  }
  int v17 = *((_DWORD *)a2 + 19);
  if (v17) {
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = v17;
  }
  return this;
}

void sub_1DC1243CC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergeFrom(std::string *this, const CoreML::Specification::CustomLayerParams_CustomLayerParamValue *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 > 29)
  {
    switch(v5)
    {
      case 30:
        int v9 = *((_DWORD *)a2 + 4);
        if (*(_DWORD *)(v3 + 28) != 30)
        {
          this = (std::string *)CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 30;
        }
        *(_DWORD *)(v3 + 16) = v9;
        break;
      case 40:
        uint64_t v10 = *((void *)a2 + 2);
        if (*(_DWORD *)(v3 + 28) != 40)
        {
          this = (std::string *)CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 40;
        }
        *(void *)(v3 + 16) = v10;
        break;
      case 50:
        char v6 = *((unsigned char *)a2 + 16);
        if (*(_DWORD *)(v3 + 28) != 50)
        {
          this = (std::string *)CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 50;
        }
        *(unsigned char *)(v3 + 16) = v6;
        break;
    }
    return this;
  }
  if (v5 != 10)
  {
    if (v5 != 20) {
      return this;
    }
    int v7 = (const std::string *)*((void *)a2 + 2);
    if (*(_DWORD *)(v3 + 28) == 20)
    {
      int v8 = *(std::string **)(v3 + 16);
      if (v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        return std::string::operator=(v8, v7);
      }
    }
    else
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
      *(_DWORD *)(v3 + 28) = 20;
      *(void *)(v3 + 16) = &google::protobuf::internal::fixed_address_empty_string;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v3 + 16, (uint64_t)v7);
  }
  uint64_t v11 = *((void *)a2 + 2);
  if (*(_DWORD *)(v3 + 28) != 10)
  {
    this = (std::string *)CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(v3);
    *(_DWORD *)(v3 + 28) = 10;
  }
  *(void *)(v3 + 16) = v11;
  return this;
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::WeightParams>::Merge(CoreML::Specification::WeightParams *a1, CoreML::Specification::WeightParams *this)
{
  return CoreML::Specification::WeightParams::MergeFrom((unint64_t *)this, a1);
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(std::string *result, std::string **a2, CoreML::Specification::ActivationParams **a3, unsigned int a4, unsigned int a5)
{
  int v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    int v12 = a2;
    do
    {
      int v14 = *v11++;
      signed int v13 = v14;
      int v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ActivationParams>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    int v18 = *v9;
    int v19 = (google::protobuf::Arena ***)&a2[a5];
    int v20 = &a3[a5];
    do
    {
      int v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::ActivationParams::ActivationParams((CoreML::Specification::ActivationParams *)Aligned);
      int v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *int v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ActivationParams>;
      int v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ActivationParams>::Merge(v21, (std::string *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1DC1246C0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::LSTMParams::MergeFrom(std::string *this, const CoreML::Specification::LSTMParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  float v5 = *((float *)a2 + 4);
  if (v5 != 0.0) {
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  if (*((unsigned char *)a2 + 20)) {
    v3->__r_.__value_.__s.__data_[20] = 1;
  }
  if (*((unsigned char *)a2 + 21)) {
    v3->__r_.__value_.__s.__data_[21] = 1;
  }
  if (*((unsigned char *)a2 + 22)) {
    v3->__r_.__value_.__s.__data_[22] = 1;
  }
  if (*((unsigned char *)a2 + 23)) {
    *((unsigned char *)&v3->__r_.__value_.__s + 2google::protobuf::Map<long long,std::string>::clear((void *)this + 3) = 1;
  }
  if (*((unsigned char *)a2 + 24)) {
    v3[1].__r_.__value_.__s.__data_[0] = 1;
  }
  return this;
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LSTMWeightParams>::Merge(const CoreML::Specification::LSTMWeightParams *a1, std::string *a2)
{
  return CoreML::Specification::LSTMWeightParams::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::LSTMWeightParams::MergeFrom(std::string *this, const CoreML::Specification::LSTMWeightParams *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::LSTMWeightParams *)&CoreML::Specification::_LSTMWeightParams_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      float v5 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v5, *((const CoreML::Specification::WeightParams **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
      if (!data) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(data, *((const CoreML::Specification::WeightParams **)a2 + 3));
    }
    if (*((void *)a2 + 4))
    {
      std::string::size_type size = (unint64_t *)v3[1].__r_.__value_.__l.__size_;
      if (!size) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(size, *((const CoreML::Specification::WeightParams **)a2 + 4));
    }
    if (*((void *)a2 + 5))
    {
      int v8 = (unint64_t *)v3[1].__r_.__value_.__r.__words[2];
      if (!v8) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v8, *((const CoreML::Specification::WeightParams **)a2 + 5));
    }
    if (*((void *)a2 + 6))
    {
      int v9 = (unint64_t *)v3[2].__r_.__value_.__l.__data_;
      if (!v9) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v9, *((const CoreML::Specification::WeightParams **)a2 + 6));
    }
    if (*((void *)a2 + 7))
    {
      uint64_t v10 = (unint64_t *)v3[2].__r_.__value_.__l.__size_;
      if (!v10) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v10, *((const CoreML::Specification::WeightParams **)a2 + 7));
    }
    if (*((void *)a2 + 8))
    {
      uint64_t v11 = (unint64_t *)v3[2].__r_.__value_.__r.__words[2];
      if (!v11) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v11, *((const CoreML::Specification::WeightParams **)a2 + 8));
    }
    if (*((void *)a2 + 9))
    {
      int v12 = (unint64_t *)v3[3].__r_.__value_.__l.__data_;
      if (!v12) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v12, *((const CoreML::Specification::WeightParams **)a2 + 9));
    }
    if (*((void *)a2 + 10))
    {
      signed int v13 = (unint64_t *)v3[3].__r_.__value_.__l.__size_;
      if (!v13) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v13, *((const CoreML::Specification::WeightParams **)a2 + 10));
    }
    if (*((void *)a2 + 11))
    {
      int v14 = (unint64_t *)v3[3].__r_.__value_.__r.__words[2];
      if (!v14) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v14, *((const CoreML::Specification::WeightParams **)a2 + 11));
    }
    if (*((void *)a2 + 12))
    {
      int v15 = (unint64_t *)v3[4].__r_.__value_.__l.__data_;
      if (!v15) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v15, *((const CoreML::Specification::WeightParams **)a2 + 12));
    }
    if (*((void *)a2 + 13))
    {
      BOOL v16 = (unint64_t *)v3[4].__r_.__value_.__l.__size_;
      if (!v16) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v16, *((const CoreML::Specification::WeightParams **)a2 + 13));
    }
    if (*((void *)a2 + 14))
    {
      int v17 = (unint64_t *)v3[4].__r_.__value_.__r.__words[2];
      if (!v17) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v17, *((const CoreML::Specification::WeightParams **)a2 + 14));
    }
    if (*((void *)a2 + 15))
    {
      int v18 = (unint64_t *)v3[5].__r_.__value_.__l.__data_;
      if (!v18) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::WeightParams::MergeFrom(v18, *((const CoreML::Specification::WeightParams **)a2 + 15));
    }
    if (*((void *)a2 + 16))
    {
      if (!v3[5].__r_.__value_.__l.__size_) {
        operator new();
      }
      int v19 = (const CoreML::Specification::WeightParams *)*((void *)a2 + 16);
      int v20 = (unint64_t *)v3[5].__r_.__value_.__l.__size_;
      return (std::string *)CoreML::Specification::WeightParams::MergeFrom(v20, v19);
    }
  }
  return this;
}

void sub_1DC124C38(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ActivationParams>::Merge(CoreML::Specification::ActivationParams *a1, std::string *this)
{
  return CoreML::Specification::ActivationParams::MergeFrom(this, a1);
}

unint64_t *CoreML::Specification::BorderAmounts::MergeFrom(unint64_t *this, const CoreML::Specification::BorderAmounts *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    char v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (CoreML::Specification::Int64Range **)(v28 + 8);
      int v12 = (std::string **)this;
      do
      {
        int v14 = *v11++;
        signed int v13 = v14;
        int v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BorderAmounts_EdgeSizes>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      BOOL v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      int v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      int v20 = (CoreML::Specification::Int64Range **)(v18 + v28 + 8);
      do
      {
        int v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::BorderAmounts_EdgeSizes::BorderAmounts_EdgeSizes((CoreML::Specification::BorderAmounts_EdgeSizes *)Aligned);
        int v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *int v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BorderAmounts_EdgeSizes>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BorderAmounts_EdgeSizes>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    uint64_t v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC124E50(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}