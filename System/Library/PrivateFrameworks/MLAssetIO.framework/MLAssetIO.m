void MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser(MLAssetIO::ProtoWireFormatCallbackParser *this)
{
  operator new();
}

void MLAssetIO::ProtoWireFormatCallbackParser::addBranchesToSearchTree(uint64_t **a1@<X0>, int **a2@<X1>, uint64_t **a3@<X8>)
{
  v5 = *a2;
  v4 = a2[1];
  if (*a2 == v4)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Field number path is empty.");
    __cxa_throw(exception, MEMORY[0x1E4FBA328], MEMORY[0x1E4FBA1B0]);
  }
  v7 = *a1;
  v6 = (std::__shared_weak_count *)a1[1];
  *a3 = *a1;
  a3[1] = (uint64_t *)v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  for (i = v4 - 1; v5 != i; v6 = v18)
  {
    int v9 = *v5;
    uint64_t v12 = v7[2];
    v11 = (uint64_t **)(v7 + 2);
    uint64_t v10 = v12;
    if (!v12) {
      goto LABEL_15;
    }
    v13 = v11;
    do
    {
      int v14 = *(_DWORD *)(v10 + 32);
      BOOL v15 = v14 < v9;
      if (v14 >= v9) {
        v16 = (uint64_t *)v10;
      }
      else {
        v16 = (uint64_t *)(v10 + 8);
      }
      if (!v15) {
        v13 = (uint64_t **)v10;
      }
      uint64_t v10 = *v16;
    }
    while (*v16);
    if (v13 == v11 || v9 < *((_DWORD *)v13 + 8))
    {
LABEL_15:
      v17 = (std::__shared_weak_count *)operator new(0x38uLL);
      v17->__shared_owners_ = 0;
      v17->__shared_weak_owners_ = 0;
      v17->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36287F8;
      v17[2].__vftable = 0;
      v17[1].__shared_weak_owners_ = 0;
      v17[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36281E0;
      v17[1].__shared_owners_ = (uint64_t)&v17[1].__shared_weak_owners_;
      int v20 = v9;
      v21 = v17 + 1;
      v22 = v17;
      v13 = std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__emplace_unique_key_args<int,std::pair<int const,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>> const&>(v11 - 1, &v20, (uint64_t)&v20);
      if (v22) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v22);
      }
    }
    v7 = v13[5];
    v18 = (std::__shared_weak_count *)v13[6];
    if (v18) {
      atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *a3 = v7;
    a3[1] = (uint64_t *)v18;
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
    ++v5;
  }
}

void sub_1DC037CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  __cxa_free_exception(v12);
  _Unwind_Resume(a1);
}

void MLAssetIO::ProtoWireFormatCallbackParser::setHandler<std::function<void ()(google::protobuf::io::CodedInputStream &)>>(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  MLAssetIO::ProtoWireFormatCallbackParser::addBranchesToSearchTree(a1, (int **)a2, (uint64_t **)&v9);
  std::allocate_shared[abi:ne180100]<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>,std::function<void ()(google::protobuf::io::CodedInputStream &)> const&,void>(a3, &v8);
  v11 = (int *)(*(void *)(a2 + 8) - 4);
  v5 = std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int const&>,std::tuple<>>(v9 + 1, v11, (uint64_t)&std::piecewise_construct, &v11);
  long long v6 = v8;
  long long v8 = 0uLL;
  v7 = (std::__shared_weak_count *)v5[6];
  *(_OWORD *)(v5 + 5) = v6;
  if (v7)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    if (*((void *)&v8 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v8 + 1));
    }
  }
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
}

void sub_1DC037DDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

void MLAssetIO::ProtoWireFormatCallbackParser::setHandler<std::function<void ()(long long)>>(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  MLAssetIO::ProtoWireFormatCallbackParser::addBranchesToSearchTree(a1, (int **)a2, (uint64_t **)&v9);
  std::allocate_shared[abi:ne180100]<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>,std::function<void ()(long long)> const&,void>(a3, &v8);
  v11 = (int *)(*(void *)(a2 + 8) - 4);
  v5 = std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int const&>,std::tuple<>>(v9 + 1, v11, (uint64_t)&std::piecewise_construct, &v11);
  long long v6 = v8;
  long long v8 = 0uLL;
  v7 = (std::__shared_weak_count *)v5[6];
  *(_OWORD *)(v5 + 5) = v6;
  if (v7)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
    if (*((void *)&v8 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v8 + 1));
    }
  }
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
}

void sub_1DC037EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

void MLAssetIO::ProtoWireFormatCallbackParser::parse(MLAssetIO::ProtoWireFormatCallbackParser *this, CodedInputStream *a2)
{
  v2 = (std::__shared_weak_count *)*((void *)this + 1);
  v3[0] = *(void *)this;
  v3[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  MLAssetIO::ProtoWireFormatCallbackParser::parseRecursively((uint64_t)this, a2, (uint64_t)v3);
  if (v2)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void sub_1DC037F44(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t MLAssetIO::ProtoWireFormatCallbackParser::parseRecursively(uint64_t a1, CodedInputStream *a2, uint64_t a3)
{
  MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser((uint64_t)v39, a2);
  for (uint64_t result = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)v39);
        result;
        uint64_t result = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)v39))
  {
    uint64_t v7 = *(void *)(*(void *)a3 + 16);
    if (v7)
    {
      uint64_t v8 = *(void *)a3 + 16;
      do
      {
        int v9 = *(_DWORD *)(v7 + 32);
        BOOL v10 = v9 < (int)result;
        if (v9 >= (int)result) {
          v11 = (uint64_t *)v7;
        }
        else {
          v11 = (uint64_t *)(v7 + 8);
        }
        if (!v10) {
          uint64_t v8 = v7;
        }
        uint64_t v7 = *v11;
      }
      while (*v11);
      if (v8 != *(void *)a3 + 16 && (int)result >= *(_DWORD *)(v8 + 32))
      {
        switch(MLAssetIO::ProtoWireFormatParser::tag((MLAssetIO::ProtoWireFormatParser *)v39) & 7)
        {
          case 0:
            uint64_t v12 = *(std::__shared_weak_count **)(v8 + 48);
            uint64_t v35 = *(void *)(v8 + 40);
            v36 = v12;
            if (v12) {
              atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            MLAssetIO::ProtoWireFormatCallbackParser::verifyAndCast<std::function<void ()(long long)>>((uint64_t)&v35, &v37);
            if (v36) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v36);
            }
            uint64_t v13 = v37;
            uint64_t v14 = MLAssetIO::ProtoWireFormatParser::int64Value((MLAssetIO::ProtoWireFormatParser *)v39);
            std::function<void ()(long long)>::operator()(v13 + 8, v14);
            goto LABEL_38;
          case 1:
            v18 = *(std::__shared_weak_count **)(v8 + 48);
            uint64_t v33 = *(void *)(v8 + 40);
            v34 = v18;
            if (v18) {
              atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            MLAssetIO::ProtoWireFormatCallbackParser::verifyAndCast<std::function<void ()(unsigned long long)>>((uint64_t)&v33, &v37);
            if (v34) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v34);
            }
            uint64_t v19 = v37;
            uint64_t v20 = MLAssetIO::ProtoWireFormatParser::fixed64Value((MLAssetIO::ProtoWireFormatParser *)v39);
            std::function<void ()(unsigned long long)>::operator()(v19 + 8, v20);
            goto LABEL_38;
          case 2:
            BOOL v15 = *(const void **)(v8 + 40);
            if (v15
            {
              v17 = *(std::__shared_weak_count **)(v8 + 48);
              if (v17)
              {
                atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
                v29 = v16;
                v30 = v17;
                atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              else
              {
                v29 = v16;
                v30 = 0;
              }
              MLAssetIO::ProtoWireFormatCallbackParser::parseRecursively(a1, a2, &v29);
              if (v17)
              {
                std::__shared_weak_count::__release_shared[abi:ne180100](v17);
                v26 = v17;
LABEL_39:
                std::__shared_weak_count::__release_shared[abi:ne180100](v26);
                continue;
              }
            }
            else
            {
              v24 = *(std::__shared_weak_count **)(v8 + 48);
              v27 = v15;
              v28 = v24;
              if (v24) {
                atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              MLAssetIO::ProtoWireFormatCallbackParser::verifyAndCast<std::function<void ()(google::protobuf::io::CodedInputStream &)>>((uint64_t)&v27, &v37);
              if (v28) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v28);
              }
              uint64_t v25 = *(void *)(v37 + 32);
              if (!v25) {
                std::__throw_bad_function_call[abi:ne180100]();
              }
              (*(void (**)(uint64_t, CodedInputStream *))(*(void *)v25 + 48))(v25, a2);
LABEL_38:
              v26 = v38;
              if (v38) {
                goto LABEL_39;
              }
            }
            break;
          case 5:
            v21 = *(std::__shared_weak_count **)(v8 + 48);
            uint64_t v31 = *(void *)(v8 + 40);
            v32 = v21;
            if (v21) {
              atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            MLAssetIO::ProtoWireFormatCallbackParser::verifyAndCast<std::function<void ()>>((uint64_t)&v31, &v37);
            if (v32) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v32);
            }
            uint64_t v22 = v37;
            int v23 = MLAssetIO::ProtoWireFormatParser::fixed32Value((MLAssetIO::ProtoWireFormatParser *)v39);
            std::function<void ()>::operator()(v22 + 8, v23);
            goto LABEL_38;
          default:
            continue;
        }
      }
    }
  }
  return result;
}

void sub_1DC038238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (v20)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v20);
    std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  }
  _Unwind_Resume(exception_object);
}

void *MLAssetIO::ProtoWireFormatCallbackParser::verifyAndCast<std::function<void ()(long long)>>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  if (!*(void *)a1
  {
    *a2 = 0;
    a2[1] = 0;
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E0198850](exception, "The field handler for the field number path is not compatible with the protobuf message type.");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  *a2 = result;
  a2[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DC038394(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::function<void ()(long long)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void *MLAssetIO::ProtoWireFormatCallbackParser::verifyAndCast<std::function<void ()(unsigned long long)>>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  if (!*(void *)a1
  {
    *a2 = 0;
    a2[1] = 0;
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E0198850](exception, "The field handler for the field number path is not compatible with the protobuf message type.");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  *a2 = result;
  a2[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DC0384C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::function<void ()(unsigned long long)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

void *MLAssetIO::ProtoWireFormatCallbackParser::verifyAndCast<std::function<void ()(unsigned int)>>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  if (!*(void *)a1
  {
    *a2 = 0;
    a2[1] = 0;
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E0198850](exception, "The field handler for the field number path is not compatible with the protobuf message type.");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  *a2 = result;
  a2[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DC0385EC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t std::function<void ()(unsigned int)>::operator()(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

void *MLAssetIO::ProtoWireFormatCallbackParser::verifyAndCast<std::function<void ()(google::protobuf::io::CodedInputStream &)>>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  if (!*(void *)a1
  {
    *a2 = 0;
    a2[1] = 0;
    exception = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E0198850](exception, "The field handler for the field number path is not compatible with the protobuf message type.");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  *a2 = result;
  a2[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1DC038718(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void MLAssetIO::ProtoWireFormatCallbackParser::BranchField::~BranchField(MLAssetIO::ProtoWireFormatCallbackParser::BranchField *this)
{
  *(void *)this = &unk_1F36281E0;
  std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::destroy((uint64_t)this + 8, *((void **)this + 2));
}

{
  uint64_t vars8;

  *(void *)this = &unk_1F36281E0;
  std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::destroy((uint64_t)this + 8, *((void **)this + 2));
  JUMPOUT(0x1E0198C00);
}

void std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::destroy(a1, a2[1]);
    int v4 = (std::__shared_weak_count *)a2[6];
    if (v4) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    }
    operator delete(a2);
  }
}

void std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::shared_ptr[abi:ne180100]<MLAssetIO::ProtoWireFormatCallbackParser::BranchField,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1DC0388A4(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::shared_ptr[abi:ne180100]<MLAssetIO::ProtoWireFormatCallbackParser::BranchField,void>(v1);
  }
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_pointer<MLAssetIO::ProtoWireFormatCallbackParser::BranchField *,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::__shared_ptr_default_delete<MLAssetIO::ProtoWireFormatCallbackParser::BranchField,MLAssetIO::ProtoWireFormatCallbackParser::BranchField>,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_pointer<MLAssetIO::ProtoWireFormatCallbackParser::BranchField *,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::__shared_ptr_default_delete<MLAssetIO::ProtoWireFormatCallbackParser::BranchField,MLAssetIO::ProtoWireFormatCallbackParser::BranchField>,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MLAssetIO::ProtoWireFormatCallbackParser::BranchField *,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::__shared_ptr_default_delete<MLAssetIO::ProtoWireFormatCallbackParser::BranchField,MLAssetIO::ProtoWireFormatCallbackParser::BranchField>,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void std::__shared_weak_count::__release_shared[abi:ne180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36287F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36287F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t **std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__emplace_unique_key_args<int,std::pair<int const,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>> const&>(uint64_t **a1, int *a2, uint64_t a3)
{
  long long v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 8);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        long long v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        return v8;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        long long v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    BOOL v10 = operator new(0x38uLL);
    v10[8] = *(_DWORD *)a3;
    uint64_t v11 = *(void *)(a3 + 16);
    *((void *)v10 + 5) = *(void *)(a3 + 8);
    *((void *)v10 + 6) = v11;
    if (v11) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
    }
    std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__insert_node_at(a1, (uint64_t)v8, v6, (uint64_t *)v10);
  }
  return (uint64_t **)v10;
}

uint64_t *std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      int v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (int v8 = *(unsigned __int8 *)(v7 + 24), v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            int v9 = (uint64_t **)a2[2];
          }
          else
          {
            int v9 = (uint64_t **)v2[1];
            BOOL v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *int v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *uint64_t v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (int v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        void v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void *std::allocate_shared[abi:ne180100]<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>,std::function<void ()(google::protobuf::io::CodedInputStream &)> const&,void>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  int v4 = operator new(0x40uLL);
  uint64_t result = std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>::__shared_ptr_emplace[abi:ne180100]<std::function<void ()(google::protobuf::io::CodedInputStream &)> const&,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1DC038DD8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>::__shared_ptr_emplace[abi:ne180100]<std::function<void ()(google::protobuf::io::CodedInputStream &)> const&,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>,0>(void *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F3628830;
  a1[3] = &unk_1F3628200;
  std::__function::__value_func<void ()(google::protobuf::io::CodedInputStream &)>::__value_func[abi:ne180100]((uint64_t)(a1 + 4), a2);
  return a1;
}

void sub_1DC038E58(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628830;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628830;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>::~LeafField(void *a1)
{
  *a1 = &unk_1F3628200;
  std::__function::__value_func<void ()(google::protobuf::io::CodedInputStream &)>::~__value_func[abi:ne180100](a1 + 1);
  return a1;
}

void MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(google::protobuf::io::CodedInputStream &)>>::~LeafField(void *a1)
{
  *a1 = &unk_1F3628200;
  std::__function::__value_func<void ()(google::protobuf::io::CodedInputStream &)>::~__value_func[abi:ne180100](a1 + 1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__function::__value_func<void ()(google::protobuf::io::CodedInputStream &)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *std::__function::__value_func<void ()(google::protobuf::io::CodedInputStream &)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t **std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int const&>,std::tuple<>>(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t v7 = a1 + 1;
  int v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        int v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        int v6 = *v9;
        uint64_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      int v6 = v9[1];
      if (!v6)
      {
        uint64_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x38uLL);
    v11[8] = **a4;
    *((void *)v11 + 5) = 0;
    *((void *)v11 + 6) = 0;
    std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__insert_node_at(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

void *std::allocate_shared[abi:ne180100]<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>,std::function<void ()(long long)> const&,void>@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  int v4 = operator new(0x40uLL);
  uint64_t result = std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>::__shared_ptr_emplace[abi:ne180100]<std::function<void ()(long long)> const&,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1DC0391D8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>::__shared_ptr_emplace[abi:ne180100]<std::function<void ()(long long)> const&,std::allocator<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>,0>(void *a1, uint64_t a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F3628868;
  a1[3] = &unk_1F3628220;
  std::__function::__value_func<void ()(long long)>::__value_func[abi:ne180100]((uint64_t)(a1 + 4), a2);
  return a1;
}

void sub_1DC039258(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628868;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628868;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_emplace<MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>::~LeafField(void *a1)
{
  *a1 = &unk_1F3628220;
  std::__function::__value_func<void ()(long long)>::~__value_func[abi:ne180100](a1 + 1);
  return a1;
}

void MLAssetIO::ProtoWireFormatCallbackParser::LeafField<std::function<void ()(long long)>>::~LeafField(void *a1)
{
  *a1 = &unk_1F3628220;
  std::__function::__value_func<void ()(long long)>::~__value_func[abi:ne180100](a1 + 1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__function::__value_func<void ()(long long)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *std::__function::__value_func<void ()(long long)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::BranchField>::shared_ptr[abi:ne180100]<MLAssetIO::ProtoWireFormatCallbackParser::BranchField,void>(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

void sub_1DC039684(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC039768(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC039870(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0399B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser(uint64_t this, CodedInputStream *a2)
{
  *(void *)this = a2;
  *(_DWORD *)(this + 8) = -1;
  return this;
}

uint64_t MLAssetIO::ProtoWireFormatParser::nextField(MLAssetIO::ProtoWireFormatParser *this)
{
  if ((*((_DWORD *)this + 2) & 7) == 2)
  {
    uint64_t v2 = *(google::protobuf::io::CodedInputStream **)this;
    unsigned int v3 = google::protobuf::io::CodedInputStream::BytesUntilLimit(*(google::protobuf::io::CodedInputStream **)this);
    google::protobuf::io::CodedInputStream::Skip(v2, v3);
    google::protobuf::io::CodedInputStream::PopLimit(*(void *)this, *((_DWORD *)this + 6));
  }
  int v4 = *(google::protobuf::io::CodedInputStream **)this;
  uint64_t v5 = **(char ***)this;
  int v6 = *(unsigned __int8 **)(*(void *)this + 8);
  if (v5 == (char *)v6 && (*((_DWORD *)v4 + 11) || *((_DWORD *)v4 + 6) == *((_DWORD *)v4 + 10)))
  {
    uint64_t v8 = 0;
    *((_DWORD *)v4 + 8) = 0;
    *((unsigned char *)v4 + 36) = 1;
    return v8;
  }
  if (v5 >= (char *)v6)
  {
    unsigned int TagFallback = 0;
  }
  else
  {
    unsigned int TagFallback = *v5;
    if ((*v5 & 0x80000000) == 0)
    {
      *((_DWORD *)v4 + 8) = TagFallback;
      *(void *)int v4 = v5 + 1;
      goto LABEL_12;
    }
  }
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(*(google::protobuf::io::CodedInputStream **)this, TagFallback);
  *((_DWORD *)v4 + 8) = TagFallback;
LABEL_12:
  *((_DWORD *)this + 2) = TagFallback;
  uint64_t v8 = TagFallback >> 3;
  switch(TagFallback & 7)
  {
    case 0u:
      int v9 = *(google::protobuf::io::CodedInputStream **)this;
      int v10 = **(char ***)this;
      if ((unint64_t)v10 < *(void *)(*(void *)this + 8) && (*v10 & 0x80000000) == 0)
      {
        *((void *)this + 2) = *v10;
        uint64_t v11 = (unsigned __int8 *)(v10 + 1);
        goto LABEL_23;
      }
      *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(v9);
      if ((v24 & 1) == 0)
      {
        std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v34);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v35, (uint64_t)"Failed to read varint integer for field number ", 47);
        std::ostream::operator<<();
        exception = __cxa_allocate_exception(0x10uLL);
        std::stringbuf::str();
        MEMORY[0x1E0198860](exception, v33);
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      return v8;
    case 1u:
      uint64_t v20 = *(google::protobuf::io::CodedInputStream **)this;
      uint64_t v19 = (unint64_t *)((char *)this + 16);
      int v9 = v20;
      v21 = *(unint64_t **)v20;
      if ((int)(*((_DWORD *)v20 + 2) - *(void *)v20) >= 8)
      {
        unint64_t v22 = *v21;
        uint64_t v11 = (unsigned __int8 *)(v21 + 1);
        *uint64_t v19 = v22;
        goto LABEL_23;
      }
      if (!google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)v9, v19))
      {
        std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v34);
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v35, (uint64_t)"Failed to read FIXED64 for field number ", 40);
        std::ostream::operator<<();
        v27 = __cxa_allocate_exception(0x10uLL);
        std::stringbuf::str();
        MEMORY[0x1E0198860](v27, v33);
        __cxa_throw(v27, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      return result;
    case 2u:
      uint64_t v12 = *(google::protobuf::io::CodedInputStream **)this;
      uint64_t v13 = **(char ***)this;
      if ((unint64_t)v13 >= *(void *)(*(void *)this + 8) || *v13 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(v12);
        *((_DWORD *)this + 4) = VarintSizeAsIntFallback;
        if (VarintSizeAsIntFallback < 0)
        {
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v34);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v35, (uint64_t)"Failed to read length-delimited length for field number ", 56);
          std::ostream::operator<<();
          uint64_t v31 = __cxa_allocate_exception(0x10uLL);
          std::stringbuf::str();
          MEMORY[0x1E0198860](v31, v33);
          __cxa_throw(v31, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        int v14 = VarintSizeAsIntFallback;
        uint64_t v12 = *(google::protobuf::io::CodedInputStream **)this;
      }
      else
      {
        int v14 = *v13;
        *((_DWORD *)this + 4) = v14;
        *(void *)uint64_t v12 = v13 + 1;
      }
      *((_DWORD *)this + 6) = google::protobuf::io::CodedInputStream::PushLimit(v12, v14);
      return v8;
    case 5u:
      v16 = *(google::protobuf::io::CodedInputStream **)this;
      BOOL v15 = (unsigned int *)((char *)this + 16);
      int v9 = v16;
      v17 = *(unsigned int **)v16;
      if ((int)(*((_DWORD *)v16 + 2) - *(void *)v16) < 4)
      {
        if (!google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)v9, v15))
        {
          std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v34);
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v35, (uint64_t)"Failed to read FIXED32 for field number ", 40);
          std::ostream::operator<<();
          v26 = __cxa_allocate_exception(0x10uLL);
          std::stringbuf::str();
          MEMORY[0x1E0198860](v26, v33);
          __cxa_throw(v26, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
      }
      else
      {
        unsigned int v18 = *v17;
        uint64_t v11 = (unsigned __int8 *)(v17 + 1);
        *BOOL v15 = v18;
LABEL_23:
        *(void *)int v9 = v11;
      }
      break;
    default:
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v34);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v35, (uint64_t)"Field number ", 13);
      v28 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v28, (uint64_t)" has wireType ", 14);
      v29 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v29, (uint64_t)", which is not supported.", 25);
      v30 = __cxa_allocate_exception(0x10uLL);
      std::stringbuf::str();
      MEMORY[0x1E0198860](v30, v33);
      __cxa_throw(v30, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return v8;
}

void sub_1DC039F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
    {
LABEL_6:
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA488] + 104;
  *(void *)(a1 + 128) = MEMORY[0x1E4FBA488] + 104;
  uint64_t v3 = a1 + 16;
  uint64_t v4 = MEMORY[0x1E4FBA488] + 64;
  *(void *)(a1 + 16) = MEMORY[0x1E4FBA488] + 64;
  uint64_t v5 = (void *)MEMORY[0x1E4FBA408];
  uint64_t v6 = *(void *)(MEMORY[0x1E4FBA408] + 24);
  uint64_t v7 = *(void *)(MEMORY[0x1E4FBA408] + 16);
  *(void *)a1 = v7;
  *(void *)(a1 + *(void *)(v7 - 24)) = v6;
  *(void *)(a1 + 8) = 0;
  uint64_t v8 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v8, (void *)(a1 + 24));
  uint64_t v9 = MEMORY[0x1E4FBA488] + 24;
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  uint64_t v10 = v5[5];
  uint64_t v11 = v5[4];
  *(void *)(a1 + 16) = v11;
  *(void *)(v3 + *(void *)(v11 - 24)) = v10;
  uint64_t v12 = v5[1];
  *(void *)a1 = v12;
  *(void *)(a1 + *(void *)(v12 - 24)) = v5[6];
  *(void *)a1 = v9;
  *(void *)(a1 + 128) = v2;
  *(void *)(a1 + 16) = v4;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 24) = MEMORY[0x1E4FBA470] + 16;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  return a1;
}

void sub_1DC03A2CC(_Unwind_Exception *a1)
{
  std::iostream::~basic_iostream();
  MEMORY[0x1E0198B70](v1);
  _Unwind_Resume(a1);
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA408];
  uint64_t v3 = *MEMORY[0x1E4FBA408];
  *(void *)a1 = *MEMORY[0x1E4FBA408];
  uint64_t v4 = *(void *)(v2 + 72);
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 64);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x1E0198B70](a1 + 128);
  return a1;
}

uint64_t MLAssetIO::ProtoWireFormatParser::int32Value(MLAssetIO::ProtoWireFormatParser *this)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "int32");
  MLAssetIO::verifyWireType((uint64_t)__p, *((_DWORD *)this + 2), 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return *((unsigned int *)this + 4);
}

void sub_1DC03A488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t MLAssetIO::verifyWireType(uint64_t result, char a2, int a3)
{
  if ((a2 & 7) != a3)
  {
    uint64_t v3 = result;
    std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v14);
    char v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)"Failed to read ", 15);
    int v5 = *(char *)(v3 + 23);
    if (v5 >= 0) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = *(void *)v3;
    }
    if (v5 >= 0) {
      uint64_t v7 = *(unsigned __int8 *)(v3 + 23);
    }
    else {
      uint64_t v7 = *(void *)(v3 + 8);
    }
    uint64_t v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, v6, v7);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)" value because field number ", 28);
    uint64_t v9 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)" uses wireType ", 15);
    uint64_t v10 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)". It should have used wireType ", 31);
    uint64_t v11 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)".", 1);
    exception = __cxa_allocate_exception(0x10uLL);
    std::stringbuf::str();
    MEMORY[0x1E0198860](exception, v13);
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return result;
}

void sub_1DC03A5D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
    {
LABEL_6:
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a17);
      _Unwind_Resume(a1);
    }
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  goto LABEL_6;
}

uint64_t MLAssetIO::ProtoWireFormatParser::int64Value(MLAssetIO::ProtoWireFormatParser *this)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "int64");
  MLAssetIO::verifyWireType((uint64_t)__p, *((_DWORD *)this + 2), 0);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return *((void *)this + 2);
}

void sub_1DC03A674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t MLAssetIO::ProtoWireFormatParser::fixed64Value(MLAssetIO::ProtoWireFormatParser *this)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "fixed64");
  MLAssetIO::verifyWireType((uint64_t)__p, *((_DWORD *)this + 2), 1);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return *((void *)this + 2);
}

void sub_1DC03A6EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t MLAssetIO::ProtoWireFormatParser::fixed32Value(MLAssetIO::ProtoWireFormatParser *this)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "fixed32");
  MLAssetIO::verifyWireType((uint64_t)__p, *((_DWORD *)this + 2), 5);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return *((unsigned int *)this + 4);
}

void sub_1DC03A764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t MLAssetIO::ProtoWireFormatParser::length(MLAssetIO::ProtoWireFormatParser *this)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "message length");
  MLAssetIO::verifyWireType((uint64_t)__p, *((_DWORD *)this + 2), 2);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  return *((unsigned int *)this + 4);
}

void sub_1DC03A7DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t MLAssetIO::ProtoWireFormatParser::copyMessageFieldTo(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  unsigned int v4 = *(_DWORD *)(this + 16);
  if (*((int *)a2 + 4) < 5)
  {
    this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v4);
  }
  else
  {
    uint64_t v5 = *((void *)a2 + 1);
    if (v4 < 0x80)
    {
      unsigned int v7 = *(_DWORD *)(this + 16);
      uint64_t v6 = (unsigned char *)*((void *)a2 + 1);
    }
    else
    {
      uint64_t v6 = (unsigned char *)*((void *)a2 + 1);
      do
      {
        *v6++ = v4 | 0x80;
        unsigned int v7 = v4 >> 7;
        unsigned int v8 = v4 >> 14;
        v4 >>= 7;
      }
      while (v8);
    }
    unsigned char *v6 = v7;
    int v9 = v6 - v5 + 1;
    *((void *)a2 + 1) += v9;
    *((_DWORD *)a2 + 4) -= v9;
  }
  int v16 = 0;
  int v15 = 0;
  int v10 = *(_DWORD *)(v3 + 16);
  if (v10)
  {
    signed int v11 = 0;
    do
    {
      int v12 = v15;
      if (v15 == v11)
      {
        google::protobuf::io::CodedInputStream::Skip(*(google::protobuf::io::CodedInputStream **)v3, v11);
        google::protobuf::io::CodedInputStream::GetDirectBufferPointer(*(google::protobuf::io::CodedInputStream **)v3, (const void **)&v16, &v15);
        signed int v11 = 0;
        int v12 = v15;
      }
      int v13 = v12 - v11;
      if (v13 >= v10) {
        int v14 = v10;
      }
      else {
        int v14 = v13;
      }
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, (char *)v16 + v11, v14);
      v11 += v14;
      v10 -= v14;
    }
    while (v10);
  }
  return this;
}

uint64_t MLAssetIO::ProtoWireFormatParser::copyFieldTo(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  switch(*(_DWORD *)(this + 8) & 7)
  {
    case 0:
      unint64_t v2 = *(void *)(this + 16);
      if (*((int *)a2 + 4) < 10)
      {
        this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v2);
      }
      else
      {
        uint64_t v3 = *((void *)a2 + 1);
        if (v2 < 0x80)
        {
          unint64_t v5 = *(void *)(this + 16);
          unsigned int v4 = (unsigned char *)*((void *)a2 + 1);
        }
        else
        {
          unsigned int v4 = (unsigned char *)*((void *)a2 + 1);
          do
          {
            *v4++ = v2 | 0x80;
            unint64_t v5 = v2 >> 7;
            unint64_t v6 = v2 >> 14;
            v2 >>= 7;
          }
          while (v6);
        }
        unsigned char *v4 = v5;
        int v9 = v4 - v3 + 1;
        *((void *)a2 + 1) += v9;
        *((_DWORD *)a2 + 4) -= v9;
      }
      break;
    case 1:
      uint64_t v8 = *(void *)(this + 16);
      this = google::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a2, v8);
      break;
    case 2:
      this = MLAssetIO::ProtoWireFormatParser::copyMessageFieldTo(this, a2);
      break;
    case 5:
      int v7 = *(_DWORD *)(this + 16);
      this = google::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a2, v7);
      break;
    default:
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v14);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)"Field number ", 13);
      int v10 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)" uses wireType ", 15);
      signed int v11 = (void *)std::ostream::operator<<();
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)", which is not supported.", 25);
      exception = __cxa_allocate_exception(0x10uLL);
      std::stringbuf::str();
      MEMORY[0x1E0198860](exception, &v13);
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return this;
}

void sub_1DC03AB34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
    {
LABEL_6:
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

uint64_t MLAssetIO::ProtoWireFormatParser::tag(MLAssetIO::ProtoWireFormatParser *this)
{
  return *((unsigned int *)this + 2);
}

void *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1E01989D0](v13, a1);
  if (v13[0])
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      int v10 = std::locale::use_facet(&v14, MEMORY[0x1E4FBA258]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x1E01989E0](v13);
  return a1;
}

void sub_1DC03ACD8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  MEMORY[0x1E01989E0](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1DC03ACB8);
}

void sub_1DC03AD2C(_Unwind_Exception *a1)
{
}

uint64_t std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      std::string::basic_string[abi:ne180100](__p, v12, __c);
      uint64_t v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_1DC03AEAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void __clang_call_terminate(void *a1)
{
}

void *std::string::basic_string[abi:ne180100](void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E6C2B488, MEMORY[0x1E4FBA1C8]);
}

void sub_1DC03AFE8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_1DC03B1B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03B2C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03B4BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03B588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03B624(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03B6E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03B880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03B978(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03BE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1DC03BF6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03C438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03C88C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03CA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1DC03CC38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC03CFC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }

  _Unwind_Resume(a1);
}

std::string *setShortDescription(uint64_t a1, unsigned char *a2, std::string *__str)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4) {
    size_t v5 = (uint64_t *)(v4 + 8);
  }
  else {
    size_t v5 = 0;
  }
  uint64_t v6 = *(int *)(a1 + 8);
  char v7 = a2[23];
  if (v6)
  {
    int v9 = &v5[v6];
    int v10 = *(unsigned __int8 **)a2;
    if (v7 >= 0) {
      uint64_t v11 = a2[23];
    }
    else {
      uint64_t v11 = *((void *)a2 + 1);
    }
    if (v7 >= 0) {
      int64_t v12 = a2;
    }
    else {
      int64_t v12 = *(unsigned __int8 **)a2;
    }
    while (1)
    {
      uint64_t v13 = *v5;
      uint64_t v14 = *(unsigned __int8 **)(*v5 + 16);
      uint64_t v15 = v14[23];
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = v14[23];
      }
      else {
        uint64_t v16 = *((void *)v14 + 1);
      }
      if (v16 == v11)
      {
        if ((v15 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v14, v12, *((void *)v14 + 1)))
          {
LABEL_24:
            uint64_t v20 = *(uint64_t **)(v13 + 24);
            uint64_t v19 = v13 + 24;
            char v18 = (std::string *)v20;
            if (v20 == &google::protobuf::internal::fixed_address_empty_string)
            {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v19, (uint64_t)__str);
            }
            return std::string::operator=(v18, __str);
          }
        }
        else
        {
          if (!v14[23]) {
            goto LABEL_24;
          }
          v17 = v12;
          while (*v14 == *v17)
          {
            ++v14;
            ++v17;
            if (!--v15) {
              goto LABEL_24;
            }
          }
        }
      }
      if (++v5 == v9) {
        goto LABEL_29;
      }
    }
  }
  int v10 = *(unsigned __int8 **)a2;
LABEL_29:
  if (v7 >= 0) {
    unint64_t v22 = a2;
  }
  else {
    unint64_t v22 = v10;
  }
  return (std::string *)objc_msgSend(MEMORY[0x1E4F1CA00], "raise:format:", *MEMORY[0x1E4F1C3C8], @"No input feature named: %s was found.", v22);
}

void sub_1DC03D410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }

  _Unwind_Resume(a1);
}

void sub_1DC03D6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }

  _Unwind_Resume(a1);
}

void sub_1DC03D7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }

  _Unwind_Resume(a1);
}

void sub_1DC03DB58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  MEMORY[0x1E0198C00](v28, 0x10A1C40FB0D5B10);
  CoreML::Specification::Metadata::~Metadata((CoreML::Specification::Metadata *)&a11);

  _Unwind_Resume(a1);
}

void sub_1DC03DD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC03DDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC03DE98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC03DF64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC03E034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC03E104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t defaultFunctionDescriptionSpecification(const CoreML::Specification::ModelDescription *a1)
{
  uint64_t v1 = (unsigned __int8 *)*((void *)a1 + 19);
  uint64_t v2 = *((void *)a1 + 13);
  if (v2) {
    uint64_t v3 = (uint64_t *)(v2 + 8);
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *((int *)a1 + 24);
  if (!v4)
  {
LABEL_22:
    exception = __cxa_allocate_exception(0x10uLL);
    int v14 = (char)v1[23];
    if (v14 >= 0) {
      uint64_t v15 = (const std::string::value_type *)v1;
    }
    else {
      uint64_t v15 = *(const std::string::value_type **)v1;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = v1[23];
    }
    else {
      std::string::size_type v16 = *((void *)v1 + 1);
    }
    v17 = std::string::append(&v22, v15, v16);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v23.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    std::string::size_type v25 = v19->__r_.__value_.__r.__words[2];
    long long v24 = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    MEMORY[0x1E0198830](exception, &v24);
    __cxa_throw(exception, MEMORY[0x1E4FBA328], MEMORY[0x1E4FBA1B0]);
  }
  size_t v5 = &v3[v4];
  int v6 = (char)v1[23];
  if (v6 >= 0) {
    uint64_t v7 = v1[23];
  }
  else {
    uint64_t v7 = *((void *)v1 + 1);
  }
  while (1)
  {
    uint64_t v8 = *v3;
    int v9 = *(unsigned __int8 **)(*v3 + 88);
    uint64_t v10 = v9[23];
    uint64_t v11 = (v10 & 0x80u) == 0 ? v9[23] : *((void *)v9 + 1);
    if (v11 == v7)
    {
      if (v6 >= 0) {
        int64_t v12 = v1;
      }
      else {
        int64_t v12 = *(unsigned __int8 **)v1;
      }
      if ((v10 & 0x80) == 0)
      {
        if (!v9[23]) {
          return v8;
        }
        while (*v9 == *v12)
        {
          ++v9;
          ++v12;
          if (!--v10) {
            return v8;
          }
        }
        goto LABEL_21;
      }
      if (!memcmp(*(const void **)v9, v12, *((void *)v9 + 1))) {
        return v8;
      }
    }
LABEL_21:
    if (++v3 == v5) {
      goto LABEL_22;
    }
  }
}

void sub_1DC03E2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v29 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v29)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v28);
  goto LABEL_10;
}

void google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v4, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/arenastring.h", 303);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v4, "CHECK failed: initial_value != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v3, (google::protobuf::internal::LogMessage *)v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v4[0].__r_.__value_.__l.__data_);
  }
  operator new();
}

void sub_1DC03E400(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  size_t v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    uint64_t v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    size_t v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, __sz + 1);
}

void CoreML::Specification::Metadata::set_shortdescription(CoreML::Specification::Metadata *this, char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/mlmodel/build/format/Model.pb.h", 3061);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: value != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
}

void sub_1DC03E578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void CoreML::Specification::Metadata::set_versionstring(CoreML::Specification::Metadata *this, char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/mlmodel/build/format/Model.pb.h", 3114);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: value != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
}

void sub_1DC03E648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void CoreML::Specification::Metadata::set_author(CoreML::Specification::Metadata *this, char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/mlmodel/build/format/Model.pb.h", 3167);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: value != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
}

void sub_1DC03E718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void CoreML::Specification::Metadata::set_license(CoreML::Specification::Metadata *this, char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/mlmodel/build/format/Model.pb.h", 3220);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: value != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
}

void sub_1DC03E7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

google::protobuf::Arena **google::protobuf::Map<std::string,std::string>::operator[](uint64_t a1, const std::string *a2)
{
  uint64_t v4 = (google::protobuf::Arena ***)google::protobuf::Map<std::string,std::string>::InnerMap::operator[](*(void **)(a1 + 16), (uint64_t)a2);
  ValueTypeInternal = *v4;
  if (!*v4)
  {
    ValueTypeInternal = google::protobuf::Map<std::string,std::string>::CreateValueTypeInternal((google::protobuf::Arena **)a1, a2);
    std::string *v4 = ValueTypeInternal;
  }
  return ValueTypeInternal + 3;
}

__n128 google::protobuf::internal::ArenaStringPtr::SetNoArena(uint64_t *a1, uint64_t a2, __n128 *a3)
{
  uint64_t v4 = *a1;
  if (*a1 == a2) {
    operator new();
  }
  if (*(char *)(v4 + 23) < 0) {
    operator delete(*(void **)v4);
  }
  __n128 result = *a3;
  *(void *)(v4 + 16) = a3[1].n128_u64[0];
  *(__n128 *)uint64_t v4 = result;
  a3[1].n128_u8[7] = 0;
  a3->n128_u8[0] = 0;
  return result;
}

uint64_t google::protobuf::Map<std::string,std::string>::InnerMap::operator[](void *a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v6, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string v6 = *(std::string *)a2;
  }
  uint64_t v7 = 0;
  google::protobuf::Map<std::string,std::string>::InnerMap::insert(a1, (long long *)&v6, (uint64_t)v5);
  uint64_t v3 = v5[0];
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  return v3 + 24;
}

void sub_1DC03E984(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::Arena **google::protobuf::Map<std::string,std::string>::CreateValueTypeInternal(google::protobuf::Arena **a1, const std::string *a2)
{
  uint64_t v4 = *a1;
  if (!v4) {
    operator new();
  }
  Aligned = google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x1E4FBA3A0], 48);
  std::string v6 = (google::protobuf::Arena **)*a1;
  Aligned[1] = 0;
  Aligned[2] = 0;
  *Aligned = 0;
  google::protobuf::Arena::OwnDestructor<std::string>(v6, (google::protobuf::Arena *)Aligned);
  uint64_t v7 = (google::protobuf::Arena **)*a1;
  Aligned[4] = 0;
  Aligned[5] = 0;
  Aligned[3] = 0;
  google::protobuf::Arena::OwnDestructor<std::string>(v7, (google::protobuf::Arena *)(Aligned + 3));
  std::string::operator=((std::string *)Aligned, a2);
  return Aligned;
}

void sub_1DC03EA70(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1012C403467C318);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,std::string>::InnerMap::insert@<D0>(void *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (const void **)a2, 0, (uint64_t)&v17);
  if ((void)v17)
  {
    uint64_t v7 = *((void *)&v17 + 1);
    uint64_t v8 = v18;
    *(void *)a3 = v17;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = v8;
    *(unsigned char *)(a3 + 24) = 0;
  }
  else
  {
    if (google::protobuf::Map<std::string,std::string>::InnerMap::ResizeIfLoadIsOutOfRange(a1, *a1 + 1))
    {
      google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (const void **)a2, 0, (uint64_t)&v14);
      long long v17 = v14;
      unint64_t v9 = v16;
      uint64_t v18 = v15;
      unint64_t v19 = v16;
    }
    else
    {
      unint64_t v9 = v19;
    }
    uint64_t v10 = (google::protobuf::Arena *)a1[5];
    if (v10) {
      Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v10, MEMORY[0x1E4FBA3A0], 40);
    }
    else {
      Aligned = (std::string *)operator new(0x28uLL);
    }
    std::string::size_type v12 = (std::string::size_type)Aligned;
    if (*((char *)a2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(Aligned, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v13 = *a2;
      Aligned->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
      *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v13;
    }
    *(void *)(v12 + 24) = *((void *)a2 + 3);
    google::protobuf::Map<std::string,std::string>::InnerMap::InsertUnique(a1, v9, v12, (std::string::size_type *)&v14);
    ++*a1;
    double result = *(double *)&v14;
    *(_OWORD *)a3 = v14;
    *(void *)(a3 + 16) = v15;
    *(unsigned char *)(a3 + 24) = 1;
  }
  return result;
}

uint64_t google::protobuf::Map<std::string,std::string>::InnerMap::ResizeIfLoadIsOutOfRange(void *a1, unint64_t a2)
{
  unint64_t v2 = a1[1];
  unint64_t v3 = ((3 * v2) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v3 <= a2)
  {
    if (v2 <= 0x800000000000000)
    {
      unint64_t v6 = 2 * v2;
LABEL_16:
      google::protobuf::Map<std::string,std::string>::InnerMap::Resize(a1, v6);
      return 1;
    }
  }
  else if (v2 >= 9 && (12 * v2) >> 6 >= a2)
  {
    char v7 = 0;
    do
      ++v7;
    while ((((5 * a2) >> 2) + 1) << v7 < v3);
    unint64_t v6 = v2 >> v7 <= 8 ? 8 : v2 >> v7;
    if (v6 != v2) {
      goto LABEL_16;
    }
  }
  return 0;
}

void google::protobuf::Map<std::string,std::string>::InnerMap::InsertUnique(void *a1@<X0>, unint64_t a2@<X1>, std::string::size_type a3@<X2>, std::string::size_type *a4@<X8>)
{
  uint64_t v8 = a1[3];
  if (v8 != a1[1] && !*(void *)(a1[4] + 8 * v8))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 655);
    unint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: index_of_first_non_null_ == num_buckets_ || table_[index_of_first_non_null_] != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (google::protobuf::internal::LogMessage *)v9);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper((uint64_t)a1, (const void **)a3, 0, (uint64_t)v20);
  if (v20[0].__r_.__value_.__r.__words[0])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 661);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: find(*KeyPtrFromNodePtr(node)) == end(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (google::protobuf::internal::LogMessage *)v10);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  uint64_t v11 = a1[4];
  uint64_t v12 = *(void *)(v11 + 8 * a2);
  if (!v12)
  {
    *(void *)(a3 + 32) = 0;
    *(void *)(v11 + 8 * a2) = a3;
    std::string::size_type size = (std::string::size_type)a1;
    goto LABEL_11;
  }
  if (v12 != *(void *)(v11 + 8 * (a2 ^ 1)))
  {
    if (!google::protobuf::Map<std::string,std::string>::InnerMap::TableEntryIsTooLong((uint64_t)a1, a2))
    {
      uint64_t v13 = a1[4];
      *(void *)(a3 + 32) = *(void *)(v13 + 8 * a2);
      *(void *)(v13 + 8 * a2) = a3;
      *a4 = a3;
      a4[1] = (std::string::size_type)a1;
LABEL_14:
      a4[2] = a2;
      return;
    }
    google::protobuf::Map<std::string,std::string>::InnerMap::TreeConvert((uint64_t)a1, a2);
    google::protobuf::Map<std::string,std::string>::InnerMap::InsertUniqueInTree((uint64_t)a1, a2, a3, v20);
    std::string::size_type size = v20[0].__r_.__value_.__l.__size_;
    a3 = v20[0].__r_.__value_.__r.__words[0];
    unint64_t v16 = a2 & 0xFFFFFFFFFFFFFFFELL;
    a2 = v20[0].__r_.__value_.__r.__words[2];
    if (v20[0].__r_.__value_.__r.__words[2] != v16)
    {
      std::string::size_type v18 = v20[0].__r_.__value_.__l.__size_;
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 668);
      long long v17 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (result.bucket_index_) == (b & ~static_cast<size_type>(1)): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (google::protobuf::internal::LogMessage *)v17);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
      std::string::size_type size = v18;
    }
LABEL_11:
    unint64_t v15 = a1[3];
    if (a2 < v15) {
      unint64_t v15 = a2;
    }
    a1[3] = v15;
    *a4 = a3;
    a4[1] = size;
    goto LABEL_14;
  }
  google::protobuf::Map<std::string,std::string>::InnerMap::InsertUniqueInTree((uint64_t)a1, a2, a3, a4);
}

void sub_1DC03EE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper@<X0>(uint64_t a1@<X0>, const void **a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber(a1, a2);
  unint64_t v9 = result;
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(v10 + 8 * result);
  if (!v11) {
    goto LABEL_10;
  }
  if (v11 == *(void *)(v10 + 8 * (result ^ 1)))
  {
    unint64_t v9 = result & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(void *)(v10 + 8 * (result & 0xFFFFFFFFFFFFFFFELL));
    unint64_t v15 = a2;
    uint64_t result = std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::find<std::string *>(v12, &v15);
    if (v12 + 8 != result)
    {
      if (a3) {
        *a3 = result;
      }
      uint64_t result = (uint64_t)google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::iterator_base(&v13, result, a1, v9);
      *(_OWORD *)a4 = v13;
      *(void *)(a4 + 16) = v14;
      goto LABEL_12;
    }
LABEL_10:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    goto LABEL_12;
  }
  while (1)
  {
    uint64_t result = std::equal_to<std::string>::operator()[abi:ne180100]((uint64_t)&v13, (unsigned __int8 *)v11, (unsigned __int8 *)a2);
    if (result) {
      break;
    }
    uint64_t v11 = *(void *)(v11 + 32);
    if (!v11) {
      goto LABEL_10;
    }
  }
  *(void *)a4 = v11;
  *(void *)(a4 + 8) = a1;
  *(void *)(a4 + 16) = v9;
LABEL_12:
  *(void *)(a4 + 24) = v9;
  return result;
}

uint64_t google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber(uint64_t a1, unsigned char *a2)
{
  if ((char)a2[23] >= 0) {
    unint64_t v2 = a2;
  }
  else {
    unint64_t v2 = *(unsigned char **)a2;
  }
  char v3 = *v2;
  if (*v2)
  {
    uint64_t v4 = 0;
    char v5 = v2 + 1;
    do
    {
      uint64_t v4 = 5 * v4 + v3;
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
  }
  else
  {
    uint64_t v4 = 0;
  }
  return ((*(void *)(a1 + 16) | 1) * v4) & (*(void *)(a1 + 8) - 1);
}

uint64_t std::equal_to<std::string>::operator()[abi:ne180100](uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  char v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    char v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

uint64_t std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::find<std::string *>(uint64_t a1, const void ***a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 24;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v5, *(const void ***)(v3 + 32), *a2);
    uint64_t v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2
    || google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v5, *a2, *(const void ***)(v6 + 32)))
  {
    return v2;
  }
  return v6;
}

BOOL google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

void *google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::iterator_base(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *a1 = *(void *)(a2 + 32);
  a1[1] = a3;
  a1[2] = a4;
  if (a4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 394);
    size_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (bucket_index_ % 2) == (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1DC03F1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::Map<std::string,std::string>::InnerMap::Resize(void *a1, unint64_t a2)
{
  if (a2 <= 7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 748);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (new_num_buckets) >= (kMinTableSize): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  size_t v5 = (void *)a1[4];
  unint64_t v6 = a1[1];
  a1[1] = a2;
  EmptyTable = google::protobuf::Map<std::string,std::string>::InnerMap::CreateEmptyTable((uint64_t)a1, a2);
  unint64_t v8 = a1[3];
  a1[3] = a1[1];
  a1[4] = EmptyTable;
  while (v8 < v6)
  {
    uint64_t v9 = v5[v8];
    if (v9)
    {
      if (v9 == v5[v8 ^ 1]) {
        google::protobuf::Map<std::string,std::string>::InnerMap::TransferTree(a1, (uint64_t)v5, v8++);
      }
      else {
        google::protobuf::Map<std::string,std::string>::InnerMap::TransferList(a1, (uint64_t)v5, v8);
      }
    }
    ++v8;
  }
  if (!a1[5]) {
    operator delete(v5);
  }
}

void sub_1DC03F2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,std::string>::InnerMap::CreateEmptyTable(uint64_t a1, unint64_t a2)
{
  if (a2 <= 7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 916);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: n >= kMinTableSize: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  if ((a2 & (a2 - 1)) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 917);
    size_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (n & (n - 1)) == (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  v9[0].__r_.__value_.__r.__words[0] = *(void *)(a1 + 40);
  unint64_t v6 = google::protobuf::Map<std::string,std::string>::MapAllocator<void *>::allocate((google::protobuf::Arena **)v9, a2, 0);
  bzero(v6, 8 * a2);
  return v6;
}

void sub_1DC03F3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::Map<std::string,std::string>::InnerMap::TransferList(void *a1, uint64_t a2, uint64_t a3)
{
  std::string::size_type v4 = *(void *)(a2 + 8 * a3);
  do
  {
    std::string::size_type v5 = *(void *)(v4 + 32);
    unint64_t v6 = google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, (unsigned char *)v4);
    google::protobuf::Map<std::string,std::string>::InnerMap::InsertUnique(a1, v6, v4, v7);
    std::string::size_type v4 = v5;
  }
  while (v5);
}

void google::protobuf::Map<std::string,std::string>::InnerMap::TransferTree(void *a1, uint64_t a2, uint64_t a3)
{
  std::string::size_type v4 = *(void ***)(a2 + 8 * a3);
  std::string::size_type v5 = *v4;
  do
  {
    unint64_t v6 = (unsigned char *)v5[4];
    unint64_t v7 = google::protobuf::Map<std::string,std::string>::InnerMap::BucketNumber((uint64_t)a1, v6);
    google::protobuf::Map<std::string,std::string>::InnerMap::InsertUnique(a1, v7, (std::string::size_type)v6, v11);
    char v8 = (void *)v5[1];
    if (v8)
    {
      do
      {
        uint64_t v9 = v8;
        char v8 = (void *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        uint64_t v9 = (void *)v5[2];
        BOOL v10 = *v9 == (void)v5;
        std::string::size_type v5 = v9;
      }
      while (!v10);
    }
    std::string::size_type v5 = v9;
  }
  while (v9 != v4 + 1);
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree((uint64_t)a1, v4);
}

google::protobuf::Arena **google::protobuf::Map<std::string,std::string>::MapAllocator<void *>::allocate(google::protobuf::Arena **a1, uint64_t a2, size_t __sz)
{
  int v3 = *a1;
  if (v3) {
    return google::protobuf::Arena::AllocateAligned(v3, MEMORY[0x1E4FBA3A0], 8 * a2);
  }
  else {
    return (google::protobuf::Arena **)operator new(8 * a2);
  }
}

void google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(uint64_t a1, void **a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)a2, a2[1]);
  if (!v3)
  {
    operator delete(a2);
  }
}

void std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(a1, *a2);
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(a1, a2[1]);
    if (!*(void *)(a1 + 16))
    {
      operator delete(a2);
    }
  }
}

BOOL google::protobuf::Map<std::string,std::string>::InnerMap::TableEntryIsTooLong(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = 0;
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8 * a2);
  do
  {
    ++v2;
    uint64_t v3 = *(void *)(v3 + 32);
  }
  while (v3);
  if (v2 >= 9)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 861);
    std::string::size_type v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (count) <= (kMaxLength): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  return v2 > 7;
}

void sub_1DC03F67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::Map<std::string,std::string>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(v4 + 8 * a2);
  if (v5)
  {
    uint64_t v6 = *(void *)(v4 + 8 * (a2 ^ 1));
    if (v5 == v6)
    {
LABEL_10:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 820);
      char v8 = google::protobuf::internal::LogMessage::operator<<(&v15, "CHECK failed: !TableEntryIsTree(b) && !TableEntryIsTree(b ^ 1): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (google::protobuf::internal::LogMessage *)v8);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15.__r_.__value_.__l.__data_);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 8 * (a2 ^ 1));
  }
  if (v6) {
    BOOL v7 = v6 == v5;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7) {
    goto LABEL_10;
  }
LABEL_11:
  uint64_t v9 = *(google::protobuf::Arena **)(a1 + 40);
  if (v9) {
    Aligned = (uint64_t *)google::protobuf::Arena::AllocateAligned(v9, MEMORY[0x1E4FBA3A0], 32);
  }
  else {
    Aligned = (uint64_t *)operator new(0x20uLL);
  }
  uint64_t v11 = (uint64_t)Aligned;
  v15.__r_.__value_.__r.__words[2] = *(void *)(a1 + 40);
  uint64_t v16 = 0;
  v15.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15.__r_.__value_.__l.__size_;
  v15.__r_.__value_.__l.__size_ = 0;
  std::set<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::set[abi:ne180100](Aligned, (uint64_t)&v15);
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&v15, (void *)v15.__r_.__value_.__l.__size_);
  uint64_t v12 = google::protobuf::Map<std::string,std::string>::InnerMap::CopyListToTree(a1, a2, v11);
  if (google::protobuf::Map<std::string,std::string>::InnerMap::CopyListToTree(a1, a2 ^ 1, v11) + v12 != *(void *)(v11 + 24))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 831);
    long long v13 = google::protobuf::internal::LogMessage::operator<<(&v15, "CHECK failed: (count) == (tree->size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (google::protobuf::internal::LogMessage *)v13);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15.__r_.__value_.__l.__data_);
  }
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v11;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v11;
}

void sub_1DC03F814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::Map<std::string,std::string>::InnerMap::InsertUniqueInTree@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string::size_type a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 32);
  if (*(void *)(v8 + 8 * a2) != *(void *)(v8 + 8 * (a2 ^ 1)))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 696);
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (table_[b]) == (table_[b ^ 1]): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (google::protobuf::internal::LogMessage *)v9);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    uint64_t v8 = *(void *)(a1 + 32);
  }
  *(void *)(a3 + 32) = 0;
  uint64_t v10 = *(void *)(v8 + 8 * a2);
  v14[0].__r_.__value_.__r.__words[0] = a3;
  uint64_t v11 = std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v10, (const void ***)v14, (uint64_t *)v14);
  return google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair>::iterator_base(a4, (uint64_t)v11, a1, a2 & 0xFFFFFFFFFFFFFFFELL);
}

void sub_1DC03F908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Map<std::string,std::string>::InnerMap::CopyListToTree(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8 * a2);
  if (!v3) {
    return 0;
  }
  uint64_t v5 = 0;
  do
  {
    uint64_t v8 = (const void **)v3;
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(a3, &v8, (uint64_t *)&v8);
    ++v5;
    uint64_t v6 = *(void *)(v3 + 32);
    *(void *)(v3 + 32) = 0;
    uint64_t v3 = v6;
  }
  while (v6);
  return v5;
}

uint64_t *std::set<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::set[abi:ne180100](uint64_t *a1, uint64_t a2)
{
  *a1 = 0;
  uint64_t v3 = *(void *)(a2 + 16);
  a1[1] = 0;
  a1[2] = v3;
  a1[3] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::set<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::insert[abi:ne180100]<std::__tree_const_iterator<std::string *,std::__tree_node<std::string *,void *> *,long>>(a1, *(const void ****)a2, (const void ****)(a2 + 8));
  return a1;
}

void sub_1DC03F9DC(_Unwind_Exception *a1)
{
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::set<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::insert[abi:ne180100]<std::__tree_const_iterator<std::string *,std::__tree_node<std::string *,void *> *,long>>(uint64_t *result, const void ***a2, const void ****a3)
{
  if (a2 != (const void ***)a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__emplace_hint_unique_key_args<std::string *,std::string * const&>(v5, v6, v4 + 4, (uint64_t *)v4 + 4);
      BOOL v7 = v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = (const void ****)v7;
          BOOL v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (const void ****)v4[2];
          BOOL v9 = *v8 == v4;
          uint64_t v4 = (const void ***)v8;
        }
        while (!v9);
      }
      uint64_t v4 = (const void ***)v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__emplace_hint_unique_key_args<std::string *,std::string * const&>(uint64_t a1, uint64_t *a2, const void ***a3, uint64_t *a4)
{
  uint64_t v6 = std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__find_equal<std::string *>((void *)a1, a2, &v11, &v10, a3);
  BOOL v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    BOOL v7 = (uint64_t *)google::protobuf::Map<std::string,std::string>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate((google::protobuf::Arena **)(a1 + 16), 1, 0);
    v7[4] = *a4;
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

uint64_t *std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__find_equal<std::string *>(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, const void ***a5)
{
  BOOL v9 = a1 + 1;
  if (a1 + 1 != a2
    && !google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()((uint64_t)(a1 + 3), *a5, (const void **)a2[4]))
  {
    if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()((uint64_t)(a1 + 3), (const void **)a2[4], *a5))
    {
      *a3 = a2;
      *a4 = (uint64_t)a2;
      return a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      char v14 = (uint64_t *)a2[1];
      do
      {
        std::string v15 = v14;
        char v14 = (uint64_t *)*v14;
      }
      while (v14);
    }
    else
    {
      std::string::size_type v18 = a2;
      do
      {
        std::string v15 = (uint64_t *)v18[2];
        BOOL v17 = *v15 == (void)v18;
        std::string::size_type v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()((uint64_t)(a1 + 3), *a5, (const void **)v15[4]))goto LABEL_28; {
      uint64_t v13 = *a4;
      }
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = a2;
    }
    return a4;
  }
  if ((uint64_t *)*a1 == a2)
  {
    uint64_t v12 = a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v12;
      return v12 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  uint64_t v11 = (uint64_t *)*a2;
  if (*a2)
  {
    do
    {
      uint64_t v12 = v11;
      uint64_t v11 = (uint64_t *)v11[1];
    }
    while (v11);
  }
  else
  {
    uint64_t v16 = a2;
    do
    {
      uint64_t v12 = (uint64_t *)v16[2];
      BOOL v17 = *v12 == (void)v16;
      uint64_t v16 = v12;
    }
    while (v17);
  }
  if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()((uint64_t)(a1 + 3), (const void **)v12[4], *a5))
  {
    goto LABEL_16;
  }
LABEL_28:
  return std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__find_equal<std::string *>((uint64_t)a1, a3, a5);
}

uint64_t *std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[3] = (uint64_t *)((char *)a1[3] + 1);
  return result;
}

uint64_t *std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__find_equal<std::string *>(uint64_t a1, void *a2, const void ***a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 24;
    do
    {
      while (1)
      {
        uint64_t v8 = v4;
        if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v7, *a3, (const void **)v4[4]))break; {
        uint64_t v4 = (uint64_t *)*v8;
        }
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v7, (const void **)v8[4], *a3))break; {
      uint64_t v5 = v8 + 1;
      }
      uint64_t v4 = (uint64_t *)v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (uint64_t *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

google::protobuf::Arena **google::protobuf::Map<std::string,std::string>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(google::protobuf::Arena **a1, uint64_t a2, size_t __sz)
{
  uint64_t v3 = *a1;
  if (v3) {
    return google::protobuf::Arena::AllocateAligned(v3, MEMORY[0x1E4FBA3A0], 40 * a2);
  }
  else {
    return (google::protobuf::Arena **)operator new(40 * a2);
  }
}

uint64_t *std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(uint64_t a1, const void ***a2, uint64_t *a3)
{
  uint64_t v5 = std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__find_equal<std::string *>(a1, &v9, a2);
  uint64_t v6 = (uint64_t *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = (uint64_t *)google::protobuf::Map<std::string,std::string>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate((google::protobuf::Arena **)(a1 + 16), 1, 0);
    v6[4] = *a3;
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)a1, v9, v7, v6);
  }
  return v6;
}

void *google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair>::iterator_base(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *a1 = *(void *)(a2 + 32);
  a1[1] = a3;
  a1[2] = a4;
  if (a4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 394);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (bucket_index_ % 2) == (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (google::protobuf::internal::LogMessage *)v5);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1DC03FEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::OwnDestructor<std::string>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2) {
    return google::protobuf::Arena::AddListNode((google::protobuf::Arena *)result, a2, (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>);
  }
  return result;
}

void google::protobuf::internal::arena_destruct_object<std::string>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

BOOL MIOEqualRanges(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL MIOLocationInRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a2 <= a1 && a3 >= a1;
}

__CFString *NSStringFromMIORange(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v4 = @"InvalidRange";
  }
  else
  {
    if (a2 == -1) {
      [NSString stringWithFormat:@"[%zd, unbound]", a1, v6, v2];
    }
    else {
    uint64_t v4 = [NSString stringWithFormat:@"[%zd, %zd]", a1, a2, v2];
    }
  }
  return v4;
}

void sub_1DC04063C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC040760(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0408A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC040AF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  MEMORY[0x1E0198C00](v3, 0x10A1C40B6FDD44FLL);
  CoreML::Specification::FeatureDescription::~FeatureDescription((CoreML::Specification::FeatureDescription *)va);

  _Unwind_Resume(a1);
}

void sub_1DC040C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC040D0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC040DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC040F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC040FC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC04106C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

__CFString *MIOMultiArrayDataTypeToString(uint64_t a1)
{
  uint64_t v1 = @"unknown";
  uint64_t v2 = @"Int32";
  if (a1 == 65600) {
    uint64_t v3 = @"Double";
  }
  else {
    uint64_t v3 = @"unknown";
  }
  if (a1 != 131104) {
    uint64_t v2 = v3;
  }
  if (a1 == 65568) {
    uint64_t v1 = @"Float32";
  }
  if (a1 == 65552) {
    uint64_t v1 = @"Float16";
  }
  if (a1 <= 65599) {
    return v1;
  }
  else {
    return v2;
  }
}

void sub_1DC041420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_1DC0415F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0417A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC04191C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC041AC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC041B5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC041EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC042024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC042244(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC042514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0426A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC04274C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0429AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  CoreML::Specification::ImageFeatureType_ImageSize::~ImageFeatureType_ImageSize((CoreML::Specification::ImageFeatureType_ImageSize *)va);

  _Unwind_Resume(a1);
}

void sub_1DC042B74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC042CB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC042FF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC043150(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC043360(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC043438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0434D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void CoreML::Specification::FeatureDescription::set_shortdescription(CoreML::Specification::FeatureDescription *this, char *__s)
{
  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/mlmodel/build/format/Model.pb.h", 2963);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: value != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (google::protobuf::internal::LogMessage *)v4);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::internal::ArenaStringPtr::SetNoArena((uint64_t *)this + 3, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
}

void sub_1DC04358C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1DC043718(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_1DC043890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void sub_1DC043A30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC043BEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC043DD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t nullSafeEqual(objc_object *a1, objc_object *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a2;
  char v5 = v4;
  if (v3 && v4) {
    uint64_t v6 = [(objc_object *)v3 isEqual:v4];
  }
  else {
    uint64_t v6 = v3 == v4;
  }

  return v6;
}

void sub_1DC043E94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC043EE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void MIOParseModelSpecification(CodedInputStream *a1, MIOParserContext *a2, MIOModelInfo *a3)
{
  uint64_t v121 = *MEMORY[0x1E4F143B8];
  v82 = a2;
  MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser((uint64_t)v95, a1);
  v80 = (id *)&v92;
  v88 = a3;
  char v5 = (void **)((char *)a3 + 48);
  long long v89 = 0u;
  long long v90 = 0u;
  int v91 = 1065353216;
  long long v92 = 0u;
  long long v93 = 0u;
  id v94 = 0;
  while (1)
  {
    int Field = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)v95);
    int v7 = Field;
    if (Field > 1)
    {
      if (Field == 2)
      {
        _ZNSt3__115allocate_sharedB8ne180100IN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(&v117);
        long long v8 = v117;
        long long v117 = 0uLL;
        uint64_t v9 = (std::__shared_weak_count *)*((void *)a3 + 2);
        *(_OWORD *)((char *)a3 + 8) = v8;
        if (v9)
        {
          std::__shared_weak_count::__release_shared[abi:ne180100](v9);
          if (*((void *)&v117 + 1)) {
            std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v117 + 1));
          }
        }
        if ((google::protobuf::MessageLite::ParseFromCodedStream(*((google::protobuf::MessageLite **)a3 + 1), (google::protobuf::io::CodedInputStream *)a1) & 1) == 0)
        {
          exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
          MEMORY[0x1E0198850](exception, "Failed to read ModelDescription message.");
          __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
        }
        goto LABEL_12;
      }
      if (Field == 10)
      {
        *((_DWORD *)a3 + 6) = MLAssetIO::ProtoWireFormatParser::int32Value((MLAssetIO::ProtoWireFormatParser *)v95);
LABEL_12:
        uint64_t v10 = NSString;
LABEL_13:
        uint64_t v11 = "INVALID";
        goto LABEL_14;
      }
      goto LABEL_18;
    }
    if (Field == 1)
    {
      *(_DWORD *)a3 = MLAssetIO::ProtoWireFormatParser::int32Value((MLAssetIO::ProtoWireFormatParser *)v95);
      goto LABEL_12;
    }
    if (!Field) {
      break;
    }
LABEL_18:
    if ((Field & 0xFFFFFFFE) == 0xC8)
    {
      std::string v15 = v82;
      MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser((uint64_t)&v117, a1);
      while (1)
      {
        int v16 = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)&v117);
        if (!v16) {
          break;
        }
        BOOL v17 = (void *)MEMORY[0x1E0198E60]();
        if (v16 == 1) {
          parsePipeline(a1, v15, v5);
        }
      }

      a3 = v88;
    }
    else
    {
      if (Field <= 499)
      {
        switch(Field)
        {
          case 400:
            parseClassLabels((google::protobuf::io::CodedInputStream *)a1, 100, 101, (ModelParserWorkspace *)&v89);
          case 401:
            parseClassLabels((google::protobuf::io::CodedInputStream *)a1, 100, 101, (ModelParserWorkspace *)&v89);
          case 402:
            parseClassLabels((google::protobuf::io::CodedInputStream *)a1, 100, 101, (ModelParserWorkspace *)&v89);
          case 403:
            break;
          case 404:
            id v19 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
            MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)&v112);
          default:
            if (Field == 202)
            {
              parsePipeline(a1, v82, v5);
              uint64_t v10 = NSString;
              goto LABEL_84;
            }
            if (Field != 303) {
              goto LABEL_28;
            }
            break;
        }
LABEL_57:
        parseNeuralNetworkSpecification(a1, v5, (ModelParserWorkspace *)&v89);
        goto LABEL_28;
      }
      if (Field <= 609)
      {
        switch(Field)
        {
          case 500:
            goto LABEL_57;
          case 502:
            parseMILProgram((google::protobuf::io::CodedInputStream *)a1, v82, (MIOModelSpecificInfo *)v5, (ModelParserWorkspace *)&v89);
          case 556:
            id v18 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
            MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)&v112);
        }
      }
      else if (Field > 2000)
      {
        if (Field == 2001) {
          parseClassLabels((google::protobuf::io::CodedInputStream *)a1, 200, 0, (ModelParserWorkspace *)&v89);
        }
        if (Field == 2004) {
          parseClassLabels((google::protobuf::io::CodedInputStream *)a1, 200, 0, (ModelParserWorkspace *)&v89);
        }
      }
      else
      {
        if (Field == 610) {
          parseClassLabels((google::protobuf::io::CodedInputStream *)a1, 100, 101, (ModelParserWorkspace *)&v89);
        }
        if (Field == 2000) {
          parseClassLabels((google::protobuf::io::CodedInputStream *)a1, 200, 0, (ModelParserWorkspace *)&v89);
        }
      }
    }
LABEL_28:
    uint64_t v10 = NSString;
    if (v7 <= 559)
    {
      if (v7 <= 399)
      {
        if (v7 <= 299)
        {
          switch(v7)
          {
            case 200:
              uint64_t v11 = "MLModelType_pipelineClassifier";
              break;
            case 201:
              uint64_t v11 = "MLModelType_pipelineRegressor";
              break;
            case 202:
LABEL_84:
              uint64_t v11 = "MLModelType_pipeline";
              break;
            default:
              goto LABEL_13;
          }
        }
        else
        {
          switch(v7)
          {
            case 300:
              uint64_t v11 = "MLModelType_glmRegressor";
              break;
            case 301:
              uint64_t v11 = "MLModelType_supportVectorRegressor";
              break;
            case 302:
              uint64_t v11 = "MLModelType_treeEnsembleRegressor";
              break;
            case 303:
              uint64_t v11 = "MLModelType_neuralNetworkRegressor";
              break;
            case 304:
              uint64_t v11 = "MLModelType_bayesianProbitRegressor";
              break;
            default:
              goto LABEL_13;
          }
        }
      }
      else if (v7 > 499)
      {
        if (v7 <= 501)
        {
          if (v7 == 500) {
            uint64_t v11 = "MLModelType_neuralNetwork";
          }
          else {
            uint64_t v11 = "MLModelType_itemSimilarityRecommender";
          }
          goto LABEL_14;
        }
        switch(v7)
        {
          case 502:
            uint64_t v11 = "MLModelType_mlProgram";
            break;
          case 555:
            uint64_t v11 = "MLModelType_customModel";
            break;
          case 556:
            uint64_t v11 = "MLModelType_linkedModel";
            break;
          default:
            goto LABEL_13;
        }
      }
      else
      {
        switch(v7)
        {
          case 400:
            uint64_t v11 = "MLModelType_glmClassifier";
            break;
          case 401:
            uint64_t v11 = "MLModelType_supportVectorClassifier";
            break;
          case 402:
            uint64_t v11 = "MLModelType_treeEnsembleClassifier";
            break;
          case 403:
            uint64_t v11 = "MLModelType_neuralNetworkClassifier";
            break;
          case 404:
            uint64_t v11 = "MLModelType_kNearestNeighborsClassifier";
            break;
          default:
            goto LABEL_13;
        }
      }
    }
    else if (v7 > 899)
    {
      switch(v7)
      {
        case 2000:
          uint64_t v11 = "MLModelType_textClassifier";
          break;
        case 2001:
          uint64_t v11 = "MLModelType_wordTagger";
          break;
        case 2002:
          uint64_t v11 = "MLModelType_visionFeaturePrint";
          break;
        case 2003:
          uint64_t v11 = "MLModelType_soundAnalysisPreprocessing";
          break;
        case 2004:
          uint64_t v11 = "MLModelType_gazetteer";
          break;
        case 2005:
          uint64_t v11 = "MLModelType_wordEmbedding";
          break;
        case 2006:
          uint64_t v11 = "MLModelType_audioFeaturePrint";
          break;
        default:
          if (v7 == 900)
          {
            uint64_t v11 = "MLModelType_identity";
          }
          else
          {
            if (v7 != 3000) {
              goto LABEL_13;
            }
            uint64_t v11 = "MLModelType_serializedModel";
          }
          break;
      }
    }
    else
    {
      switch(v7)
      {
        case 600:
          uint64_t v11 = "MLModelType_oneHotEncoder";
          break;
        case 601:
          uint64_t v11 = "MLModelType_imputer";
          break;
        case 602:
          uint64_t v11 = "MLModelType_featureVectorizer";
          break;
        case 603:
          uint64_t v11 = "MLModelType_dictVectorizer";
          break;
        case 604:
          uint64_t v11 = "MLModelType_scaler";
          break;
        case 605:
        case 608:
          goto LABEL_13;
        case 606:
          uint64_t v11 = "MLModelType_categoricalMapping";
          break;
        case 607:
          uint64_t v11 = "MLModelType_normalizer";
          break;
        case 609:
          uint64_t v11 = "MLModelType_arrayFeatureExtractor";
          break;
        case 610:
          uint64_t v11 = "MLModelType_nonMaximumSuppression";
          break;
        default:
          if (v7 != 560) {
            goto LABEL_13;
          }
          uint64_t v11 = "MLModelType_classConfidenceThresholding";
          break;
      }
    }
LABEL_14:
    uint64_t v12 = objc_msgSend(v10, "stringWithUTF8String:", v11, v80);
    if (![v12 rangeOfString:@"MLModelType_"])
    {
      uint64_t v13 = [v12 stringByReplacingOccurrencesOfString:@"MLModelType_" withString:&stru_1F362A748];
      char v14 = (void *)*((void *)a3 + 4);
      *((void *)a3 + 4) = v13;

      *((_DWORD *)v88 + 10) = v7;
    }

    a3 = v88;
  }
  if ([*v5 count])
  {
    long long v20 = *(uint64_t **)(*((void *)a3 + 1) + 136);
    if (*((char *)v20 + 23) < 0) {
      long long v20 = (uint64_t *)*v20;
    }
    v21 = objc_msgSend(NSString, "stringWithUTF8String:", v20, v80);
    id v22 = *v5;
    id v81 = v21;
    long long v112 = 0u;
    long long v113 = 0u;
    long long v114 = 0u;
    long long v115 = 0u;
    locatiouint64_t n = (id *)v22;
    uint64_t v23 = [location countByEnumeratingWithState:&v112 objects:&v117 count:16];
    if (v23)
    {
      uint64_t v24 = *(void *)v113;
      while (2)
      {
        for (uint64_t i = 0; i != v23; ++i)
        {
          if (*(void *)v113 != v24) {
            objc_enumerationMutation(location);
          }
          v26 = [*(id *)(*((void *)&v112 + 1) + 8 * i) modelDescription];
          v27 = [v26 outputDescriptions];
          *(void *)&long long v100 = MEMORY[0x1E4F143A8];
          *((void *)&v100 + 1) = 3221225472;
          *(void *)&long long v101 = ___ZL22classLabelsForPipelineP7NSArrayIP8MIOModelEP8NSString_block_invoke;
          *((void *)&v101 + 1) = &unk_1E6C2BB70;
          *(void *)&long long v102 = v81;
          uint64_t v28 = [v27 indexOfObjectPassingTest:&v100];

          if (v28 != 0x7FFFFFFFFFFFFFFFLL)
          {
            v30 = [v26 classLabels];
            v36 = v102;
LABEL_134:

            goto LABEL_135;
          }
        }
        uint64_t v23 = [location countByEnumeratingWithState:&v112 objects:&v117 count:16];
        if (v23) {
          continue;
        }
        break;
      }
    }

    long long v110 = 0u;
    long long v111 = 0u;
    long long v108 = 0u;
    long long v109 = 0u;
    int v29 = location;
    v30 = 0;
    uint64_t v31 = [v29 countByEnumeratingWithState:&v108 objects:&__p count:16];
    if (v31)
    {
      uint64_t v32 = *(void *)v109;
      while (2)
      {
        for (uint64_t j = 0; j != v31; ++j)
        {
          if (*(void *)v109 != v32) {
            objc_enumerationMutation(v29);
          }
          v26 = [*(id *)(*((void *)&v108 + 1) + 8 * j) modelDescription];
          v34 = [v26 classLabels];
          BOOL v35 = v34 == 0;

          if (!v35)
          {
            if (v30)
            {

              v36 = +[MIOLogging coreChannel];
              if (os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
              {
                *(_WORD *)buf = 0;
                _os_log_impl(&dword_1DC036000, v36, OS_LOG_TYPE_INFO, "This pipeline contains multiple sub-models with class labels. As a result, the classLabel property of the pipeline instance will not be populated.", buf, 2u);
              }
              v30 = 0;
              goto LABEL_134;
            }
            v30 = [v26 classLabels];
          }
        }
        uint64_t v31 = [v29 countByEnumeratingWithState:&v108 objects:&__p count:16];
        if (v31) {
          continue;
        }
        break;
      }
    }
LABEL_135:

    uint64_t v37 = (void *)v92;
    *(void *)&long long v92 = v30;

    id v85 = [MEMORY[0x1E4F1CA60] dictionaryWithDictionary:*((void *)&v92 + 1)];
    locationa = [MEMORY[0x1E4F1CA60] dictionaryWithDictionary:(void)v93];
    v38 = [MEMORY[0x1E4F1CA80] setWithArray:*((void *)&v93 + 1)];
    v39 = [MEMORY[0x1E4F1CA80] setWithArray:v94];
    long long v110 = 0u;
    long long v111 = 0u;
    long long v108 = 0u;
    long long v109 = 0u;
    obuint64_t j = *v5;
    uint64_t v40 = [obj countByEnumeratingWithState:&v108 objects:&v117 count:16];
    if (v40)
    {
      uint64_t v84 = *(void *)v109;
      do
      {
        for (uint64_t k = 0; k != v40; ++k)
        {
          if (*(void *)v109 != v84) {
            objc_enumerationMutation(obj);
          }
          v42 = *(void **)(*((void *)&v108 + 1) + 8 * k);
          v43 = [v42 neuralNetworkLayerHistogramForFunctionNamed:0];
          v106[0] = MEMORY[0x1E4F143A8];
          v106[1] = 3221225472;
          v106[2] = ___ZL26populatePipelineInfomationRK12MIOModelInfoR20ModelParserWorkspace_block_invoke;
          v106[3] = &unk_1E6C2BB28;
          id v107 = v85;
          [v43 enumerateKeysAndObjectsUsingBlock:v106];

          v44 = [v42 programOperationHistogramForFunctionNamed:0];
          v104[0] = MEMORY[0x1E4F143A8];
          v104[1] = 3221225472;
          v104[2] = ___ZL26populatePipelineInfomationRK12MIOModelInfoR20ModelParserWorkspace_block_invoke_2;
          v104[3] = &unk_1E6C2BB28;
          v105 = locationa;
          [v44 enumerateKeysAndObjectsUsingBlock:v104];

          long long v102 = 0u;
          long long v103 = 0u;
          long long v100 = 0u;
          long long v101 = 0u;
          v45 = [v42 computePrecisionForFunctionNamed:0];
          uint64_t v46 = [v45 countByEnumeratingWithState:&v100 objects:&__p count:16];
          if (v46)
          {
            uint64_t v47 = *(void *)v101;
            do
            {
              for (uint64_t m = 0; m != v46; ++m)
              {
                if (*(void *)v101 != v47) {
                  objc_enumerationMutation(v45);
                }
                [v38 addObject:*(void *)(*((void *)&v100 + 1) + 8 * m)];
              }
              uint64_t v46 = [v45 countByEnumeratingWithState:&v100 objects:&__p count:16];
            }
            while (v46);
          }

          long long v98 = 0u;
          long long v99 = 0u;
          *(_OWORD *)buf = 0u;
          long long v97 = 0u;
          v49 = [v42 storagePrecisionForFunctionNamed:0];
          uint64_t v50 = [v49 countByEnumeratingWithState:buf objects:&v112 count:16];
          if (v50)
          {
            uint64_t v51 = *(void *)v97;
            do
            {
              for (uint64_t n = 0; n != v50; ++n)
              {
                if (*(void *)v97 != v51) {
                  objc_enumerationMutation(v49);
                }
                [v39 addObject:*(void *)(*(void *)&buf[8] + 8 * n)];
              }
              uint64_t v50 = [v49 countByEnumeratingWithState:buf objects:&v112 count:16];
            }
            while (v50);
          }
        }
        uint64_t v40 = [obj countByEnumeratingWithState:&v108 objects:&v117 count:16];
      }
      while (v40);
    }

    if ([v85 count]) {
      objc_storeStrong((id *)&v92 + 1, v85);
    }
    if ([locationa count]) {
      objc_storeStrong((id *)&v93, locationa);
    }
    if ([v38 count])
    {
      uint64_t v53 = [v38 allObjects];
      v54 = (void *)*((void *)&v93 + 1);
      *((void *)&v93 + 1) = v53;
    }
    if ([v39 count])
    {
      v55 = [v39 allObjects];
      id v56 = v94;
      id v94 = v55;
    }
    a3 = v88;
  }
  uint64_t v57 = *((void *)a3 + 1);
  if (!v57)
  {
    _ZNSt3__115allocate_sharedB8ne180100IN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(&v117);
    long long v58 = v117;
    long long v117 = 0uLL;
    v59 = (std::__shared_weak_count *)*((void *)a3 + 2);
    *(_OWORD *)((char *)a3 + 8) = v58;
    if (v59)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v59);
      if (*((void *)&v117 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v117 + 1));
      }
    }
    uint64_t v57 = *((void *)a3 + 1);
  }
  v60 = (std::__shared_weak_count *)*((void *)a3 + 2);
  if (v60) {
    atomic_fetch_add_explicit(&v60->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v61 = *(int *)(v57 + 96);
  if (!v61)
  {
    if (*((void *)&v90 + 1))
    {
      v74 = (id *)(v90 + 40);
      v75 = (char *)a3 + 88;
      unint64_t v76 = *((void *)a3 + 10);
      if (v76 < *((void *)a3 + 11))
      {
        v77 = (void *)*((void *)a3 + 10);
LABEL_190:
        std::allocator<MIOFunctionInfo>::construct[abi:ne180100]<MIOFunctionInfo,MIOFunctionInfo const&>((uint64_t)v75, v77, v74);
        uint64_t v78 = v76 + 40;
        goto LABEL_193;
      }
      uint64_t v78 = std::vector<MIOFunctionInfo>::__push_back_slow_path<MIOFunctionInfo const&>((uint64_t *)a3 + 9, (id *)(v90 + 40));
    }
    else
    {
      v75 = (char *)a3 + 88;
      unint64_t v76 = *((void *)a3 + 10);
      if (v76 < *((void *)a3 + 11))
      {
        v77 = (void *)*((void *)a3 + 10);
        v74 = v80;
        goto LABEL_190;
      }
      uint64_t v78 = std::vector<MIOFunctionInfo>::__push_back_slow_path<MIOFunctionInfo const&>((uint64_t *)a3 + 9, v80);
    }
LABEL_193:
    *((void *)a3 + 10) = v78;
    if (v60) {
      goto LABEL_183;
    }
    goto LABEL_184;
  }
  uint64_t v62 = *(void *)(v57 + 104);
  uint64_t v63 = v62 + 8;
  BOOL v64 = v62 == 0;
  v65 = a3;
  if (v64) {
    uint64_t v66 = 0;
  }
  else {
    uint64_t v66 = v63;
  }
  uint64_t v67 = (uint64_t)v65 + 88;
  v68 = (uint64_t *)((char *)v65 + 72);
  uint64_t v69 = 8 * v61;
  do
  {
    v70 = std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::find<std::string>(&v89, *(unsigned __int8 **)(*(void *)v66 + 88));
    v71 = (id *)v70;
    if (!v70) {
      std::__throw_out_of_range[abi:ne180100]("unordered_map::at: key not found");
    }
    *(void *)&long long v117 = *((id *)v70 + 5);
    *((void *)&v117 + 1) = v71[6];
    id v118 = v71[7];
    id v119 = v71[8];
    id v120 = v71[9];
    unint64_t v72 = *((void *)v88 + 10);
    if (v72 >= *((void *)v88 + 11))
    {
      uint64_t v73 = std::vector<MIOFunctionInfo>::__push_back_slow_path<MIOFunctionInfo const&>(v68, (id *)&v117);
    }
    else
    {
      std::allocator<MIOFunctionInfo>::construct[abi:ne180100]<MIOFunctionInfo,MIOFunctionInfo const&>(v67, *((void **)v88 + 10), (id *)&v117);
      uint64_t v73 = v72 + 40;
    }
    *((void *)v88 + 10) = v73;

    v66 += 8;
    v69 -= 8;
  }
  while (v69);
  if (v60) {
LABEL_183:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v60);
LABEL_184:

  std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::~__hash_table((uint64_t)&v89);
}

void sub_1DC045274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  ModelParserWorkspace::~ModelParserWorkspace((id *)va);

  _Unwind_Resume(a1);
}

void parsePipeline(CodedInputStream *a1, MIOParserContext *a2, void **a3)
{
  char v5 = a2;
  uint64_t v6 = (void *)[MEMORY[0x1E4F1CBF0] mutableCopy];
  MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser((uint64_t)v21, a1);
  while (1)
  {
    int Field = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)v21);
    if (!Field) {
      break;
    }
    long long v8 = (void *)MEMORY[0x1E0198E60]();
    if (Field == 1)
    {
      uint64_t v9 = v5;
      MIL::ParserOptions::Make(&v24, v9);
      (*(void (**)(uint64_t, uint64_t))(*(void *)v24 + 64))(v24, 1);
      MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser((uint64_t)v23, a1);
      uint64_t v10 = 0;
      while (1)
      {
        int v11 = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)v23);
        if (!v11) {
          break;
        }
        if (v11 == 1)
        {
          uint64_t v12 = [MIOModel alloc];
          id v22 = 0;
          uint64_t v13 = [(MIOModel *)v12 initWithMessageStream:a1 parserContext:v9 error:&v22];
          id v14 = v22;

          if (!v13)
          {
            BOOL v17 = NSString;
            id v18 = [v14 localizedDescription];
            id v19 = [v17 stringWithFormat:@"Failed to parse a sub model: %@", v18];

            exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
            MEMORY[0x1E0198850](exception, [v19 UTF8String]);
            __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
          }

          uint64_t v10 = (void *)v13;
        }
      }
      uint64_t v15 = v24;
      uint64_t v24 = 0;
      if (v15) {
        (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
      }

      [v6 addObject:v10];
    }
  }
  int v16 = *a3;
  *a3 = v6;
}

void sub_1DC0457B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a20) {
    (*(void (**)(uint64_t))(*(void *)a20 + 8))(a20);
  }

  _Unwind_Resume(a1);
}

void parseNeuralNetworkSpecification(CodedInputStream *a1, id *a2, ModelParserWorkspace *a3)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  obuint64_t j = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  id v28 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  id v29 = objc_alloc_init(MEMORY[0x1E4F1CA80]);
  MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser((uint64_t)v39, a1);
  while (1)
  {
    int Field = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)v39);
    if (!Field) {
      break;
    }
    char v5 = (void *)MEMORY[0x1E0198E60]();
    if (Field > 99)
    {
      if (Field == 100)
      {
        uint64_t v7 = parseStringVector((google::protobuf::io::CodedInputStream *)a1);
      }
      else
      {
        if (Field != 101) {
          goto LABEL_15;
        }
        uint64_t v7 = parseInt64Vector((google::protobuf::io::CodedInputStream *)a1);
      }
      id v10 = (id)*((void *)a3 + 5);
      *((void *)a3 + 5) = v7;
      goto LABEL_14;
    }
    if (Field == 1)
    {
      long long v8 = [MIOModelLayer alloc];
      id v38 = 0;
      uint64_t v9 = [(MIOModelLayer *)v8 initWithMessageStream:a1 error:&v38];
      id v10 = v38;
      if (!v9)
      {
        std::string::size_type v25 = [NSString stringWithFormat:@"Failed to parse layer: %i due to error: %@", 1, v10];
        exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E0198850](exception, [v25 UTF8String]);
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      int v11 = [(MIOModelLayer *)v9 computePrecision];
      [v28 addObjectsFromArray:v11];

      uint64_t v12 = [(MIOModelLayer *)v9 storagePrecision];
      [v29 addObjectsFromArray:v12];

      [obj addObject:v9];
LABEL_14:

      goto LABEL_15;
    }
    if (Field == 10)
    {
      id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
      MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v40);
    }
LABEL_15:
  }
  id v13 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v14 = obj;
  uint64_t v15 = [v14 countByEnumeratingWithState:&v34 objects:v41 count:16];
  if (v15)
  {
    uint64_t v16 = *(void *)v35;
    do
    {
      for (uint64_t i = 0; i != v15; ++i)
      {
        if (*(void *)v35 != v16) {
          objc_enumerationMutation(v14);
        }
        id v18 = *(void **)(*((void *)&v34 + 1) + 8 * i);
        id v19 = (void *)MEMORY[0x1E0198E60]();
        long long v20 = [v18 layerHistogram];
        v32[0] = MEMORY[0x1E4F143A8];
        v32[1] = 3221225472;
        v32[2] = ___ZL31parseNeuralNetworkSpecificationRN6google8protobuf2io16CodedInputStreamER20MIOModelSpecificInfoR20ModelParserWorkspace_block_invoke;
        v32[3] = &unk_1E6C2BB28;
        id v33 = v13;
        [v20 enumerateKeysAndObjectsUsingBlock:v32];
      }
      uint64_t v15 = [v14 countByEnumeratingWithState:&v34 objects:v41 count:16];
    }
    while (v15);
  }

  objc_storeStrong(a2 + 1, obj);
  objc_storeStrong((id *)a3 + 6, v13);
  uint64_t v21 = [v28 allObjects];
  id v22 = (void *)*((void *)a3 + 8);
  *((void *)a3 + 8) = v21;

  uint64_t v23 = [v29 allObjects];
  uint64_t v24 = (void *)*((void *)a3 + 9);
  *((void *)a3 + 9) = v23;
}

void sub_1DC04611C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  _Unwind_Resume(a1);
}

void parseMILProgram(google::protobuf::io::CodedInputStream *a1, MIOParserContext *a2, MIOModelSpecificInfo *a3, ModelParserWorkspace *a4)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  a2;
  memset(&v9, 0, sizeof(v9));
  std::string::size_type v5 = google::protobuf::io::CodedInputStream::BytesUntilLimit(a1);
  if (google::protobuf::io::CodedInputStream::ReadString((uint64_t)a1, &v9, v5))
  {
    id v6 = std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100](&v8, &v9, 24);
    CoreML::MIL::CoreMLUtil::MakeContext((CoreML::MIL::CoreMLUtil *)v6);
  }
  exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
  MEMORY[0x1E0198850](exception, "Failed to read MIL message.");
  __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
}

void sub_1DC047410(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  for (uint64_t i = 720; i != -48; i -= 48)
    std::pair<std::string const,std::vector<std::string>>::~pair(v72 + i);
  STACK[0x4B8] = (unint64_t)&a67;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x4B8]);
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete((void *)STACK[0x4C0]);
  }
  if (a71 < 0) {
    operator delete(a70);
  }
  a70 = &a72;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a70);
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete((void *)STACK[0x4D8]);
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete((void *)STACK[0x200]);
  }
  STACK[0x200] = (unint64_t)&STACK[0x218];
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x200]);
  uint64_t v75 = 0;
  while (1)
  {
    if (*((char *)&STACK[0x4F0] + v75 + 47) < 0) {
      operator delete(*(void **)((char *)&STACK[0x4F0] + v75 + 24));
    }
    v75 -= 24;
    if (v75 == -48)
    {
      if (SLOBYTE(STACK[0x247]) < 0) {
        operator delete((void *)STACK[0x230]);
      }
      STACK[0x4F0] = (unint64_t)&STACK[0x248];
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x4F0]);
      if (SLOBYTE(STACK[0x537]) < 0) {
        operator delete((void *)STACK[0x520]);
      }
      if (SLOBYTE(STACK[0x277]) < 0) {
        operator delete((void *)STACK[0x260]);
      }
      STACK[0x4F0] = (unint64_t)&STACK[0x278];
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x4F0]);
      if (SLOBYTE(STACK[0x54F]) < 0) {
        operator delete((void *)STACK[0x538]);
      }
      if (SLOBYTE(STACK[0x2A7]) < 0) {
        operator delete((void *)STACK[0x290]);
      }
      STACK[0x4F0] = (unint64_t)&STACK[0x2A8];
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x4F0]);
      if (SLOBYTE(STACK[0x567]) < 0) {
        operator delete((void *)STACK[0x550]);
      }
      if (SLOBYTE(STACK[0x2D7]) < 0) {
        operator delete((void *)STACK[0x2C0]);
      }
      STACK[0x4F0] = (unint64_t)&STACK[0x2D8];
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x4F0]);
      if (SLOBYTE(STACK[0x57F]) < 0) {
        operator delete((void *)STACK[0x568]);
      }
      if (SLOBYTE(STACK[0x307]) < 0) {
        operator delete((void *)STACK[0x2F0]);
      }
      STACK[0x4F0] = (unint64_t)&STACK[0x308];
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x4F0]);
      if (SLOBYTE(STACK[0x597]) < 0) {
        operator delete((void *)STACK[0x580]);
      }
      if (SLOBYTE(STACK[0x337]) < 0) {
        operator delete((void *)STACK[0x320]);
      }
      STACK[0x4F0] = (unint64_t)&STACK[0x338];
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x4F0]);
      uint64_t v76 = 0;
      while (1)
      {
        if (*((char *)&STACK[0x598] + v76 + 47) < 0) {
          operator delete(*(void **)((char *)&STACK[0x598] + v76 + 24));
        }
        v76 -= 24;
        if (v76 == -48)
        {
          if (SLOBYTE(STACK[0x367]) < 0) {
            operator delete((void *)STACK[0x350]);
          }
          STACK[0x598] = (unint64_t)&STACK[0x368];
          std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x598]);
          uint64_t v77 = 0;
          while (1)
          {
            if (*((char *)&STACK[0x5C8] + v77 + 71) < 0) {
              operator delete(*(void **)((char *)&STACK[0x5C8] + v77 + 48));
            }
            v77 -= 24;
            if (v77 == -72)
            {
              if (SLOBYTE(STACK[0x397]) < 0) {
                operator delete((void *)STACK[0x380]);
              }
              STACK[0x5C8] = (unint64_t)&STACK[0x398];
              std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x5C8]);
              uint64_t v78 = 0;
              while (1)
              {
                if (*((char *)&STACK[0x610] + v78 + 95) < 0) {
                  operator delete(*(void **)((char *)&STACK[0x610] + v78 + 72));
                }
                v78 -= 24;
                if (v78 == -96)
                {
                  if (SLOBYTE(STACK[0x3C7]) < 0) {
                    operator delete((void *)STACK[0x3B0]);
                  }
                  STACK[0x610] = (unint64_t)&STACK[0x3C8];
                  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x610]);
                  uint64_t v79 = 0;
                  while (1)
                  {
                    if (*((char *)&STACK[0x670] + v79 + 47) < 0) {
                      operator delete(*(void **)((char *)&STACK[0x670] + v79 + 24));
                    }
                    v79 -= 24;
                    if (v79 == -48)
                    {
                      if (SLOBYTE(STACK[0x3F7]) < 0) {
                        operator delete((void *)STACK[0x3E0]);
                      }
                      STACK[0x610] = (unint64_t)&STACK[0x3F8];
                      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x610]);
                      uint64_t v80 = 0;
                      while (1)
                      {
                        if (*((char *)&STACK[0x6A0] + v80 + 47) < 0) {
                          operator delete(*(void **)((char *)&STACK[0x6A0] + v80 + 24));
                        }
                        v80 -= 24;
                        if (v80 == -48)
                        {
                          if (SLOBYTE(STACK[0x427]) < 0) {
                            operator delete((void *)STACK[0x410]);
                          }
                          STACK[0x610] = (unint64_t)&STACK[0x428];
                          std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x610]);
                          uint64_t v81 = 0;
                          while (1)
                          {
                            if (*((char *)&STACK[0x6D0] + v81 + 47) < 0) {
                              operator delete(*(void **)((char *)&STACK[0x6D0] + v81 + 24));
                            }
                            v81 -= 24;
                            if (v81 == -48)
                            {
                              if (SLOBYTE(STACK[0x457]) < 0) {
                                operator delete((void *)STACK[0x440]);
                              }
                              STACK[0x610] = (unint64_t)&STACK[0x458];
                              std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x610]);
                              uint64_t v82 = 0;
                              while (1)
                              {
                                if (*((char *)&STACK[0x700] + v82 + 47) < 0) {
                                  operator delete(*(void **)((char *)&STACK[0x700] + v82 + 24));
                                }
                                v82 -= 24;
                                if (v82 == -48)
                                {
                                  if (SLOBYTE(STACK[0x487]) < 0) {
                                    operator delete((void *)STACK[0x470]);
                                  }
                                  STACK[0x610] = (unint64_t)&STACK[0x488];
                                  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x610]);
                                  uint64_t v83 = 0;
                                  while (1)
                                  {
                                    if (*((char *)&STACK[0x730] + v83 + 47) < 0) {
                                      operator delete(*(void **)((char *)&STACK[0x730] + v83 + 24));
                                    }
                                    v83 -= 24;
                                    if (v83 == -48)
                                    {
                                      if (SLOBYTE(STACK[0x4B7]) < 0) {
                                        operator delete((void *)STACK[0x4A0]);
                                      }
                                      STACK[0x760] = (unint64_t)&a23;
                                      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x760]);
                                      if (a12) {
                                        std::__shared_weak_count::__release_shared[abi:ne180100](a12);
                                      }
                                      if (a2 == 2)
                                      {
                                        uint64_t v84 = __cxa_begin_catch(a1);
                                        id v85 = NSString;
                                        (*(void (**)(unint64_t *__return_ptr))(*(void *)v84 + 24))(&STACK[0x760]);
                                        if (SLOBYTE(STACK[0x777]) >= 0) {
                                          v86 = &STACK[0x760];
                                        }
                                        else {
                                          v86 = (unint64_t *)STACK[0x760];
                                        }
                                        id v94 = [v85 stringWithUTF8String:v86];
                                        v87 = [v85 stringWithFormat:@"Unable to parse ML Program: %@"];

                                        if (SLOBYTE(STACK[0x777]) < 0) {
                                          operator delete((void *)STACK[0x760]);
                                        }
                                        exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
                                        MEMORY[0x1E0198850](exception, [v87 UTF8String]);
                                        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
                                      }
                                      if (a2 == 1)
                                      {
                                        long long v89 = __cxa_begin_catch(a1);
                                        long long v90 = (char *)(*(uint64_t (**)(void *))(*(void *)v89 + 16))(v89);
                                        std::string::basic_string[abi:ne180100]<0>(&STACK[0x610], v90);
                                        int v91 = std::string::insert((std::string *)&STACK[0x610], 0, "Unable to parse ML Program: Error: ");
                                        long long v92 = *(_OWORD *)&v91->__r_.__value_.__l.__data_;
                                        STACK[0x770] = v91->__r_.__value_.__r.__words[2];
                                        *(_OWORD *)&STACK[0x760] = v92;
                                        v91->__r_.__value_.__l.__size_ = 0;
                                        v91->__r_.__value_.__r.__words[2] = 0;
                                        v91->__r_.__value_.__r.__words[0] = 0;
                                        if (SLOBYTE(STACK[0x627]) < 0) {
                                          operator delete((void *)STACK[0x610]);
                                        }
                                        long long v93 = __cxa_allocate_exception(0x10uLL);
                                        MEMORY[0x1E0198860](v93, &STACK[0x760]);
                                        __cxa_throw(v93, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
                                      }
                                      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a26);
                                      if (a66 < 0) {
                                        operator delete(a61);
                                      }

                                      _Unwind_Resume(a1);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1DC04808C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,int a63)
{
  __cxa_end_catch();
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a26);
  if (a66 < 0) {
    operator delete(a61);
  }

  JUMPOUT(0x1DC048154);
}

void sub_1DC048140(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void parseClassLabels(google::protobuf::io::CodedInputStream *a1, int a2, int a3, ModelParserWorkspace *a4)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v4);
}

void sub_1DC0482A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }
  _Unwind_Resume(a1);
}

void ModelParserWorkspace::~ModelParserWorkspace(id *this)
{
  std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::~__hash_table((uint64_t)this);
}

void MIOParseNeuralNetworkLayerSpecification(CodedInputStream *a1, uint64_t a2)
{
  uint64_t v4 = @"InvalidType";
  MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser((uint64_t)v35, a1);
  uint64_t v5 = 0;
  id v6 = 0;
  uint64_t v7 = 0;
  unint64_t v8 = 0x1E4F29000uLL;
  std::string v9 = &stru_1F362A748;
  while (1)
  {
    int Field = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)v35);
    if (!Field) {
      break;
    }
    if (Field == 1)
    {
      std::string::size_type v18 = MLAssetIO::ProtoWireFormatParser::length((MLAssetIO::ProtoWireFormatParser *)v35);
      memset(&__p, 0, sizeof(__p));
      if (!google::protobuf::io::CodedInputStream::ReadString((uint64_t)a1, &__p, v18))
      {
        exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E0198850](exception, "Failed to read a string.");
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      uint64_t v20 = [*(id *)(v8 + 24) stringWithUTF8String:p_p];
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      BOOL v17 = v9;
      std::string v9 = (__CFString *)v20;
LABEL_13:
    }
    else if (Field >= 100)
    {
      id v33 = v5;
      long long v34 = v4;
      uint64_t v31 = v7;
      id v32 = v6;
      parseLayerParams(Field, a1, &v34, &v33, &v32, &v31);
      int v11 = v34;

      id v12 = v33;
      id v13 = v7;
      unint64_t v14 = v8;
      id v15 = v32;

      uint64_t v16 = v31;
      BOOL v17 = v13;
      uint64_t v4 = v11;
      uint64_t v5 = v12;
      id v6 = v15;
      unint64_t v8 = v14;
      uint64_t v7 = v16;
      goto LABEL_13;
    }
  }
  uint64_t v21 = *(void **)a2;
  *(void *)a2 = v9;
  id v22 = v9;

  uint64_t v23 = *(void **)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  uint64_t v24 = v4;

  std::string::size_type v25 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v5;
  id v26 = v5;

  v27 = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v6;
  id v28 = v6;

  id v29 = *(void **)(a2 + 32);
  *(void *)(a2 + 32) = v7;
}

void sub_1DC048580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void parseLayerParams(int a1, CodedInputStream *a2, __CFString **a3, void *a4, void *a5, void *a6)
{
  id v12 = 0;
  v48[4] = *MEMORY[0x1E4F143B8];
  if (a1 <= 879)
  {
    if (a1 > 604)
    {
      if (a1 > 759)
      {
        if (a1 <= 824)
        {
          if (a1 > 789)
          {
            if (a1 > 814)
            {
              if (a1 == 815)
              {
                id v13 = MIOModelLayerTypeEqual;
              }
              else
              {
                if (a1 != 820) {
                  goto LABEL_365;
                }
                id v13 = MIOModelLayerTypeNotEqual;
              }
            }
            else if (a1 == 790)
            {
              id v13 = MIOModelLayerTypeErf;
            }
            else
            {
              if (a1 != 795) {
                goto LABEL_365;
              }
              id v13 = MIOModelLayerTypeGelu;
            }
          }
          else if (a1 > 774)
          {
            if (a1 == 775)
            {
              id v13 = MIOModelLayerTypeAcosh;
            }
            else
            {
              if (a1 != 780) {
                goto LABEL_365;
              }
              id v13 = MIOModelLayerTypeAtanh;
            }
          }
          else if (a1 == 760)
          {
            id v13 = MIOModelLayerTypeTanh;
          }
          else
          {
            if (a1 != 770) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeAsinh;
          }
        }
        else if (a1 > 849)
        {
          if (a1 <= 864)
          {
            if (a1 == 850)
            {
              id v13 = MIOModelLayerTypeLogicalNot;
            }
            else
            {
              if (a1 != 855) {
                goto LABEL_365;
              }
              id v13 = MIOModelLayerTypeLogicalAnd;
            }
          }
          else
          {
            switch(a1)
            {
              case 865:
                id v13 = MIOModelLayerTypeModBroadcastable;
                break;
              case 870:
                id v13 = MIOModelLayerTypeMinBroadcastable;
                break;
              case 875:
                id v13 = MIOModelLayerTypeMaxBroadcastable;
                break;
              default:
                goto LABEL_365;
            }
          }
        }
        else
        {
          switch(a1)
          {
            case 825:
              id v13 = MIOModelLayerTypeLessThan;
              goto LABEL_364;
            case 826:
            case 828:
            case 829:
            case 831:
              goto LABEL_365;
            case 827:
              id v13 = MIOModelLayerTypeLessEqual;
              goto LABEL_364;
            case 830:
              id v13 = MIOModelLayerTypeGreaterThan;
              goto LABEL_364;
            case 832:
              id v13 = MIOModelLayerTypeGreaterEqual;
              goto LABEL_364;
            default:
              if (a1 == 840)
              {
                id v13 = MIOModelLayerTypeLogicalOr;
              }
              else
              {
                if (a1 != 845) {
                  goto LABEL_365;
                }
                id v13 = MIOModelLayerTypeLogicalXor;
              }
              break;
          }
        }
      }
      else if (a1 > 684)
      {
        if (a1 > 729)
        {
          if (a1 <= 739)
          {
            if (a1 == 730)
            {
              id v13 = MIOModelLayerTypeAsin;
            }
            else
            {
              if (a1 != 735) {
                goto LABEL_365;
              }
              id v13 = MIOModelLayerTypeAcos;
            }
          }
          else
          {
            switch(a1)
            {
              case 740:
                id v13 = MIOModelLayerTypeAtan;
                break;
              case 750:
                id v13 = MIOModelLayerTypeSinh;
                break;
              case 755:
                id v13 = MIOModelLayerTypeCosh;
                break;
              default:
                goto LABEL_365;
            }
          }
        }
        else if (a1 <= 709)
        {
          if (a1 == 685)
          {
            id v13 = MIOModelLayerTypeRound;
          }
          else
          {
            if (a1 != 700) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeExp2;
          }
        }
        else
        {
          switch(a1)
          {
            case 710:
              id v13 = MIOModelLayerTypeSin;
              break;
            case 715:
              id v13 = MIOModelLayerTypeCos;
              break;
            case 720:
              id v13 = MIOModelLayerTypeTan;
              break;
            default:
              goto LABEL_365;
          }
        }
      }
      else if (a1 > 639)
      {
        if (a1 <= 664)
        {
          if (a1 == 640)
          {
            id v13 = MIOModelLayerTypeRangeDynamic;
          }
          else
          {
            if (a1 != 660) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeClip;
          }
        }
        else
        {
          switch(a1)
          {
            case 665:
              id v13 = MIOModelLayerTypeCeil;
              break;
            case 670:
              id v13 = MIOModelLayerTypeFloor;
              break;
            case 680:
              id v13 = MIOModelLayerTypeSign;
              break;
            default:
              goto LABEL_365;
          }
        }
      }
      else if (a1 <= 619)
      {
        if (a1 == 605)
        {
          id v13 = MIOModelLayerTypeBranch;
        }
        else
        {
          if (a1 != 615) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeLoop;
        }
      }
      else
      {
        switch(a1)
        {
          case 620:
            id v13 = MIOModelLayerTypeLoopBreak;
            break;
          case 625:
            id v13 = MIOModelLayerTypeLoopContinue;
            break;
          case 635:
            id v13 = MIOModelLayerTypeRangeStatic;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 > 249)
    {
      if (a1 > 329)
      {
        if (a1 > 409)
        {
          if (a1 <= 429)
          {
            if (a1 == 410)
            {
              id v13 = MIOModelLayerTypeGru;
            }
            else
            {
              if (a1 != 420) {
                goto LABEL_365;
              }
              id v13 = MIOModelLayerTypeUniDirectionalLSTM;
            }
          }
          else
          {
            switch(a1)
            {
              case 430:
                id v13 = MIOModelLayerTypeBiDirectionalLSTM;
                break;
              case 500:
                id v13 = MIOModelLayerTypeCustom;
                break;
              case 600:
                id v13 = MIOModelLayerTypeCopy;
                break;
              default:
                goto LABEL_365;
            }
          }
        }
        else if (a1 <= 344)
        {
          if (a1 == 330)
          {
            id v13 = MIOModelLayerTypeSplit;
          }
          else
          {
            if (a1 != 340) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeSequenceRepeat;
          }
        }
        else
        {
          switch(a1)
          {
            case 345:
              id v13 = MIOModelLayerTypeReorganizeData;
              break;
            case 350:
              id v13 = MIOModelLayerTypeSlice;
              break;
            case 400:
              id v13 = MIOModelLayerTypeSimpleRecurrent;
              break;
            default:
              goto LABEL_365;
          }
        }
      }
      else if (a1 > 289)
      {
        if (a1 <= 300)
        {
          if (a1 == 290)
          {
            id v13 = MIOModelLayerTypeLoadConstant;
          }
          else
          {
            if (a1 != 300) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeReshape;
          }
        }
        else
        {
          switch(a1)
          {
            case 301:
              id v13 = MIOModelLayerTypeFlatten;
              break;
            case 310:
              id v13 = MIOModelLayerTypePermute;
              break;
            case 320:
              id v13 = MIOModelLayerTypeConcat;
              break;
            default:
              goto LABEL_365;
          }
        }
      }
      else if (a1 <= 260)
      {
        if (a1 == 250)
        {
          id v13 = MIOModelLayerTypeBias;
        }
        else
        {
          if (a1 != 260) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeMax;
        }
      }
      else
      {
        switch(a1)
        {
          case 261:
            id v13 = MIOModelLayerTypeMin;
            break;
          case 270:
            id v13 = MIOModelLayerTypeDot;
            break;
          case 280:
            id v13 = MIOModelLayerTypeReduce;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 > 189)
    {
      if (a1 > 219)
      {
        if (a1 <= 230)
        {
          if (a1 == 220)
          {
            id v13 = MIOModelLayerTypeUnary;
          }
          else
          {
            if (a1 != 230) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeAdd;
          }
        }
        else
        {
          switch(a1)
          {
            case 231:
              id v13 = MIOModelLayerTypeMultiply;
              break;
            case 240:
              id v13 = MIOModelLayerTypeAverage;
              break;
            case 245:
              id v13 = MIOModelLayerTypeScale;
              break;
            default:
              goto LABEL_365;
          }
        }
      }
      else if (a1 <= 209)
      {
        if (a1 == 190)
        {
          id v13 = MIOModelLayerTypeCrop;
        }
        else
        {
          if (a1 != 200) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypePadding;
        }
      }
      else
      {
        switch(a1)
        {
          case 210:
            id v13 = MIOModelLayerTypeUpsample;
            break;
          case 211:
            id v13 = MIOModelLayerTypeResizeBilinear;
            break;
          case 212:
            id v13 = MIOModelLayerTypeCropResize;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 > 159)
    {
      if (a1 <= 169)
      {
        if (a1 == 160)
        {
          id v13 = MIOModelLayerTypeBatchnorm;
        }
        else
        {
          if (a1 != 165) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeMvn;
        }
      }
      else
      {
        switch(a1)
        {
          case 170:
            id v13 = MIOModelLayerTypeL2Normalize;
            break;
          case 175:
            id v13 = MIOModelLayerTypeSoftmax;
            break;
          case 180:
            id v13 = MIOModelLayerTypeLrn;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 <= 129)
    {
      if (a1 == 100)
      {
        id v13 = MIOModelLayerTypeConvolution;
      }
      else
      {
        if (a1 != 120) {
          goto LABEL_365;
        }
        id v13 = MIOModelLayerTypePooling;
      }
    }
    else
    {
      switch(a1)
      {
        case 130:
          id v13 = MIOModelLayerTypeActivation;
          break;
        case 140:
          id v13 = MIOModelLayerTypeInnerProduct;
          break;
        case 150:
          id v13 = MIOModelLayerTypeEmbedding;
          break;
        default:
          goto LABEL_365;
      }
    }
    goto LABEL_364;
  }
  if (a1 <= 1139)
  {
    if (a1 > 994)
    {
      if (a1 > 1079)
      {
        if (a1 > 1109)
        {
          if (a1 <= 1124)
          {
            if (a1 == 1110)
            {
              id v13 = MIOModelLayerTypeBroadcastToDynamic;
            }
            else
            {
              if (a1 != 1120) {
                goto LABEL_365;
              }
              id v13 = MIOModelLayerTypeSqueeze;
            }
          }
          else
          {
            switch(a1)
            {
              case 1125:
                id v13 = MIOModelLayerTypeExpandDims;
                break;
              case 1130:
                id v13 = MIOModelLayerTypeFlattenTo2D;
                break;
              case 1135:
                id v13 = MIOModelLayerTypeReshapeLike;
                break;
              default:
                goto LABEL_365;
            }
          }
        }
        else if (a1 <= 1089)
        {
          if (a1 == 1080)
          {
            id v13 = MIOModelLayerTypeFillLike;
          }
          else
          {
            if (a1 != 1085) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeFillStatic;
          }
        }
        else
        {
          switch(a1)
          {
            case 1090:
              id v13 = MIOModelLayerTypeFillDynamic;
              break;
            case 1100:
              id v13 = MIOModelLayerTypeBroadcastToLike;
              break;
            case 1105:
              id v13 = MIOModelLayerTypeBroadcastToStatic;
              break;
            default:
              goto LABEL_365;
          }
        }
      }
      else if (a1 > 1024)
      {
        if (a1 <= 1044)
        {
          if (a1 == 1025)
          {
            id v13 = MIOModelLayerTypeArgMax;
          }
          else
          {
            if (a1 != 1040) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeEmbeddingND;
          }
        }
        else
        {
          switch(a1)
          {
            case 1045:
              id v13 = MIOModelLayerTypeBatchedMatmul;
              break;
            case 1065:
              id v13 = MIOModelLayerTypeGetShape;
              break;
            case 1070:
              id v13 = MIOModelLayerTypeLoadConstantND;
              break;
            default:
              goto LABEL_365;
          }
        }
      }
      else if (a1 <= 1004)
      {
        if (a1 == 995)
        {
          id v13 = MIOModelLayerTypeSliceStatic;
        }
        else
        {
          if (a1 != 1000) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeSliceDynamic;
        }
      }
      else
      {
        switch(a1)
        {
          case 1005:
            id v13 = MIOModelLayerTypeSlidingWindows;
            break;
          case 1015:
            id v13 = MIOModelLayerTypeTopK;
            break;
          case 1020:
            id v13 = MIOModelLayerTypeArgMin;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 > 939)
    {
      if (a1 > 959)
      {
        if (a1 <= 974)
        {
          if (a1 == 960)
          {
            id v13 = MIOModelLayerTypeReverse;
          }
          else
          {
            if (a1 != 965) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeReverseSeq;
          }
        }
        else
        {
          switch(a1)
          {
            case 975:
              id v13 = MIOModelLayerTypeSplitND;
              break;
            case 980:
              id v13 = MIOModelLayerTypeConcatND;
              break;
            case 985:
              id v13 = MIOModelLayerTypeTranspose;
              break;
            default:
              goto LABEL_365;
          }
        }
      }
      else
      {
        switch(a1)
        {
          case 945:
            id v13 = MIOModelLayerTypeScatterND;
            goto LABEL_364;
          case 946:
          case 947:
          case 948:
          case 949:
          case 951:
          case 953:
            goto LABEL_365;
          case 950:
            id v13 = MIOModelLayerTypeSoftmaxND;
            goto LABEL_364;
          case 952:
            id v13 = MIOModelLayerTypeGatherAlongAxis;
            goto LABEL_364;
          case 954:
            id v13 = MIOModelLayerTypeScatterAlongAxis;
            goto LABEL_364;
          default:
            if (a1 != 940) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeGatherND;
            break;
        }
      }
    }
    else if (a1 > 904)
    {
      if (a1 <= 924)
      {
        if (a1 == 905)
        {
          id v13 = MIOModelLayerTypeSubtractBroadcastable;
        }
        else
        {
          if (a1 != 920) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeTile;
        }
      }
      else
      {
        switch(a1)
        {
          case 925:
            id v13 = MIOModelLayerTypeStack;
            break;
          case 930:
            id v13 = MIOModelLayerTypeGather;
            break;
          case 935:
            id v13 = MIOModelLayerTypeScatter;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 <= 889)
    {
      if (a1 == 880)
      {
        id v13 = MIOModelLayerTypeAddBroadcastable;
      }
      else
      {
        if (a1 != 885) {
          goto LABEL_365;
        }
        id v13 = MIOModelLayerTypePowBroadcastable;
      }
    }
    else
    {
      switch(a1)
      {
        case 890:
          id v13 = MIOModelLayerTypeDivideBroadcastable;
          break;
        case 895:
          id v13 = MIOModelLayerTypeFloorDivBroadcastable;
          break;
        case 900:
          id v13 = MIOModelLayerTypeMultiplyBroadcastable;
          break;
        default:
          goto LABEL_365;
      }
    }
    goto LABEL_364;
  }
  if (a1 <= 1274)
  {
    if (a1 <= 1199)
    {
      if (a1 <= 1169)
      {
        if (a1 > 1149)
        {
          if (a1 == 1150)
          {
            id v13 = MIOModelLayerTypeRankPreservingReshape;
          }
          else
          {
            if (a1 != 1155) {
              goto LABEL_365;
            }
            id v13 = MIOModelLayerTypeConstantPad;
          }
        }
        else if (a1 == 1140)
        {
          id v13 = MIOModelLayerTypeReshapeStatic;
        }
        else
        {
          if (a1 != 1145) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeReshapeDynamic;
        }
      }
      else if (a1 <= 1179)
      {
        if (a1 == 1170)
        {
          id v13 = MIOModelLayerTypeRandomNormalLike;
        }
        else
        {
          if (a1 != 1175) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeRandomNormalStatic;
        }
      }
      else
      {
        switch(a1)
        {
          case 1180:
            id v13 = MIOModelLayerTypeRandomNormalDynamic;
            break;
          case 1190:
            id v13 = MIOModelLayerTypeRandomUniformLike;
            break;
          case 1195:
            id v13 = MIOModelLayerTypeRandomUniformStatic;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 > 1249)
    {
      if (a1 <= 1259)
      {
        if (a1 == 1250)
        {
          id v13 = MIOModelLayerTypeReduceL1;
        }
        else
        {
          if (a1 != 1255) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeReduceL2;
        }
      }
      else
      {
        switch(a1)
        {
          case 1260:
            id v13 = MIOModelLayerTypeReduceMax;
            break;
          case 1265:
            id v13 = MIOModelLayerTypeReduceMin;
            break;
          case 1270:
            id v13 = MIOModelLayerTypeReduceSum;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 <= 1214)
    {
      if (a1 == 1200)
      {
        id v13 = MIOModelLayerTypeRandomUniformDynamic;
      }
      else
      {
        if (a1 != 1210) {
          goto LABEL_365;
        }
        id v13 = MIOModelLayerTypeRandomBernoulliLike;
      }
    }
    else
    {
      switch(a1)
      {
        case 1215:
          id v13 = MIOModelLayerTypeRandomBernoulliStatic;
          break;
        case 1220:
          id v13 = MIOModelLayerTypeRandomBernoulliDynamic;
          break;
        case 1230:
          id v13 = MIOModelLayerTypeCategoricalDistribution;
          break;
        default:
          goto LABEL_365;
      }
    }
    goto LABEL_364;
  }
  if (a1 <= 1349)
  {
    if (a1 > 1312)
    {
      if (a1 <= 1319)
      {
        if (a1 == 1313)
        {
          id v13 = MIOModelLayerTypeWhereNonZero;
        }
        else
        {
          if (a1 != 1315) {
            goto LABEL_365;
          }
          id v13 = MIOModelLayerTypeMatrixBandPart;
        }
      }
      else
      {
        switch(a1)
        {
          case 1320:
            id v13 = MIOModelLayerTypeLowerTriangular;
            break;
          case 1325:
            id v13 = MIOModelLayerTypeUpperTriangular;
            break;
          case 1330:
            id v13 = MIOModelLayerTypeWhereBroadcastable;
            break;
          default:
            goto LABEL_365;
        }
      }
    }
    else if (a1 <= 1284)
    {
      if (a1 == 1275)
      {
        id v13 = MIOModelLayerTypeReduceProd;
      }
      else
      {
        if (a1 != 1280) {
          goto LABEL_365;
        }
        id v13 = MIOModelLayerTypeReduceMean;
      }
    }
    else
    {
      switch(a1)
      {
        case 1285:
          id v13 = MIOModelLayerTypeReduceLogSum;
          break;
        case 1290:
          id v13 = MIOModelLayerTypeReduceSumSquare;
          break;
        case 1295:
          id v13 = MIOModelLayerTypeReduceLogSumExp;
          break;
        default:
          goto LABEL_365;
      }
    }
    goto LABEL_364;
  }
  if (a1 <= 1454)
  {
    switch(a1)
    {
      case 1350:
        id v13 = MIOModelLayerTypeLayerNormalization;
        break;
      case 1400:
        id v13 = MIOModelLayerTypeNonMaximumSuppression;
        break;
      case 1450:
        id v13 = MIOModelLayerTypeOneHot;
        break;
      default:
        goto LABEL_365;
    }
LABEL_364:
    id v12 = *v13;
    goto LABEL_365;
  }
  switch(a1)
  {
    case 1455:
      id v13 = MIOModelLayerTypeCumSum;
      goto LABEL_364;
    case 1460:
      id v13 = MIOModelLayerTypeClampedReLU;
      goto LABEL_364;
    case 1461:
      id v13 = MIOModelLayerTypeArgSort;
      goto LABEL_364;
    case 1465:
      id v13 = MIOModelLayerTypePooling3D;
      goto LABEL_364;
    case 1466:
      id v13 = MIOModelLayerTypeGlobalPooling3D;
      goto LABEL_364;
    case 1470:
      id v13 = MIOModelLayerTypeSliceBySize;
      goto LABEL_364;
    case 1471:
      id v13 = MIOModelLayerTypeConvolution3D;
      goto LABEL_364;
    default:
      break;
  }
LABEL_365:
  locatiouint64_t n = &stru_1F362A748;
  id v14 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v15 = (void *)[MEMORY[0x1E4F1CBF0] mutableCopy];
  if (a1 > 344)
  {
    if (a1 > 614)
    {
      if (a1 > 1069)
      {
        switch(a1)
        {
          case 1070:
            id v32 = location;
            locatiouint64_t n = @"LoadConstantND";

            MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
          case 1350:
            id v33 = location;
            locatiouint64_t n = @"LayerNormalization";

            MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
          case 1471:
            id v19 = location;
            locatiouint64_t n = @"Convolution3D";

            MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        }
      }
      else
      {
        switch(a1)
        {
          case 615:
            MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
          case 1040:
            id v25 = location;
            locatiouint64_t n = @"EmbeddingND";

            MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
          case 1045:
            id v18 = location;
            locatiouint64_t n = @"BatchedMatmul";

            MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        }
      }
    }
    else if (a1 > 429)
    {
      switch(a1)
      {
        case 430:
          id v28 = location;
          locatiouint64_t n = @"BiDirectionalLSTM";

          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        case 500:
          id v29 = location;
          locatiouint64_t n = @"Custom";

          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        case 605:
          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
      }
    }
    else
    {
      switch(a1)
      {
        case 345:
          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        case 400:
          id v21 = location;
          locatiouint64_t n = @"SimpleRecurrent";

          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        case 420:
          id v16 = location;
          locatiouint64_t n = @"UniDirectionalLSTM";

          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
      }
    }
LABEL_425:
    if (a1 <= 879)
    {
      if (a1 > 599)
      {
        if (a1 > 759)
        {
          if (a1 <= 824)
          {
            if (a1 > 789)
            {
              if (a1 > 814)
              {
                if (a1 == 815)
                {
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_equal";
                  goto LABEL_750;
                }
                if (a1 == 820)
                {
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_notEqual";
                  goto LABEL_750;
                }
              }
              else
              {
                if (a1 == 790)
                {
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_erf";
                  goto LABEL_750;
                }
                if (a1 == 795)
                {
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_gelu";
                  goto LABEL_750;
                }
              }
            }
            else if (a1 > 774)
            {
              if (a1 == 775)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_acosh";
                goto LABEL_750;
              }
              if (a1 == 780)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_atanh";
                goto LABEL_750;
              }
            }
            else
            {
              if (a1 == 760)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_tanh";
                goto LABEL_750;
              }
              if (a1 == 770)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_asinh";
                goto LABEL_750;
              }
            }
          }
          else
          {
            if (a1 <= 849)
            {
              switch(a1)
              {
                case 825:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_lessThan";
                  goto LABEL_750;
                case 826:
                case 828:
                case 829:
                case 831:
                  goto LABEL_749;
                case 827:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_lessEqual";
                  goto LABEL_750;
                case 830:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_greaterThan";
                  goto LABEL_750;
                case 832:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_greaterEqual";
                  goto LABEL_750;
                default:
                  if (a1 == 840)
                  {
                    uint64_t v40 = "MLNeuralNetworkLayerlayer_logicalOr";
                  }
                  else
                  {
                    if (a1 != 845) {
                      goto LABEL_749;
                    }
                    uint64_t v40 = "MLNeuralNetworkLayerlayer_logicalXor";
                  }
                  break;
              }
              goto LABEL_750;
            }
            if (a1 <= 864)
            {
              if (a1 == 850)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_logicalNot";
                goto LABEL_750;
              }
              if (a1 == 855)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_logicalAnd";
                goto LABEL_750;
              }
            }
            else
            {
              switch(a1)
              {
                case 865:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_modBroadcastable";
                  goto LABEL_750;
                case 870:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_minBroadcastable";
                  goto LABEL_750;
                case 875:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_maxBroadcastable";
                  goto LABEL_750;
              }
            }
          }
        }
        else if (a1 > 684)
        {
          if (a1 > 729)
          {
            if (a1 <= 739)
            {
              if (a1 == 730)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_asin";
                goto LABEL_750;
              }
              if (a1 == 735)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_acos";
                goto LABEL_750;
              }
            }
            else
            {
              switch(a1)
              {
                case 740:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_atan";
                  goto LABEL_750;
                case 750:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_sinh";
                  goto LABEL_750;
                case 755:
                  uint64_t v40 = "MLNeuralNetworkLayerlayer_cosh";
                  goto LABEL_750;
              }
            }
          }
          else if (a1 <= 709)
          {
            if (a1 == 685)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_round";
              goto LABEL_750;
            }
            if (a1 == 700)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_exp2";
              goto LABEL_750;
            }
          }
          else
          {
            switch(a1)
            {
              case 710:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_sin";
                goto LABEL_750;
              case 715:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_cos";
                goto LABEL_750;
              case 720:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_tan";
                goto LABEL_750;
            }
          }
        }
        else if (a1 > 639)
        {
          if (a1 <= 664)
          {
            if (a1 == 640)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_rangeDynamic";
              goto LABEL_750;
            }
            if (a1 == 660)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_clip";
              goto LABEL_750;
            }
          }
          else
          {
            switch(a1)
            {
              case 665:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_ceil";
                goto LABEL_750;
              case 670:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_floor";
                goto LABEL_750;
              case 680:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_sign";
                goto LABEL_750;
            }
          }
        }
        else if (a1 <= 619)
        {
          if (a1 == 600)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_copy";
            goto LABEL_750;
          }
        }
        else
        {
          switch(a1)
          {
            case 620:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_loopBreak";
              goto LABEL_750;
            case 625:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_loopContinue";
              goto LABEL_750;
            case 635:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_rangeStatic";
              goto LABEL_750;
          }
        }
      }
      else if (a1 <= 244)
      {
        if (a1 <= 179)
        {
          if (a1 > 164)
          {
            switch(a1)
            {
              case 165:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_mvn";
                goto LABEL_750;
              case 170:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_l2normalize";
                goto LABEL_750;
              case 175:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_softmax";
                goto LABEL_750;
            }
          }
        }
        else if (a1 > 211)
        {
          if (a1 <= 229)
          {
            if (a1 == 212)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_cropResize";
              goto LABEL_750;
            }
          }
          else
          {
            switch(a1)
            {
              case 230:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_add";
                goto LABEL_750;
              case 231:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_multiply";
                goto LABEL_750;
              case 240:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_average";
                goto LABEL_750;
            }
          }
        }
        else if (a1 <= 199)
        {
          if (a1 == 180)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_lrn";
            goto LABEL_750;
          }
          if (a1 == 190)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_crop";
            goto LABEL_750;
          }
        }
        else if (a1 == 211)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_resizeBilinear";
          goto LABEL_750;
        }
      }
      else if (a1 > 319)
      {
        if (a1 > 399)
        {
          if (a1 == 410)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_gru";
            goto LABEL_750;
          }
        }
        else if (a1 <= 339)
        {
          if (a1 == 320)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_concat";
            goto LABEL_750;
          }
          if (a1 == 330)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_split";
            goto LABEL_750;
          }
        }
        else
        {
          if (a1 == 340)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_sequenceRepeat";
            goto LABEL_750;
          }
          if (a1 == 350)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_slice";
            goto LABEL_750;
          }
        }
      }
      else if (a1 > 279)
      {
        if (a1 <= 299)
        {
          if (a1 == 290)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_loadConstant";
            goto LABEL_750;
          }
        }
        else
        {
          switch(a1)
          {
            case 300:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_reshape";
              goto LABEL_750;
            case 301:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_flatten";
              goto LABEL_750;
            case 310:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_permute";
              goto LABEL_750;
          }
        }
      }
      else if (a1 > 259)
      {
        switch(a1)
        {
          case 260:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_max";
            goto LABEL_750;
          case 261:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_min";
            goto LABEL_750;
          case 270:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_dot";
            goto LABEL_750;
        }
      }
    }
    else if (a1 > 1139)
    {
      if (a1 <= 1274)
      {
        if (a1 <= 1199)
        {
          if (a1 <= 1169)
          {
            if (a1 > 1149)
            {
              if (a1 == 1150)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_rankPreservingReshape";
                goto LABEL_750;
              }
              if (a1 == 1155)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_constantPad";
                goto LABEL_750;
              }
            }
            else
            {
              if (a1 == 1140)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_reshapeStatic";
                goto LABEL_750;
              }
              if (a1 == 1145)
              {
                uint64_t v40 = "MLNeuralNetworkLayerlayer_reshapeDynamic";
                goto LABEL_750;
              }
            }
          }
          else if (a1 <= 1179)
          {
            if (a1 == 1170)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_randomNormalLike";
              goto LABEL_750;
            }
            if (a1 == 1175)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_randomNormalStatic";
              goto LABEL_750;
            }
          }
          else
          {
            switch(a1)
            {
              case 1180:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_randomNormalDynamic";
                goto LABEL_750;
              case 1190:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_randomUniformLike";
                goto LABEL_750;
              case 1195:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_randomUniformStatic";
                goto LABEL_750;
            }
          }
        }
        else if (a1 > 1249)
        {
          if (a1 <= 1259)
          {
            if (a1 == 1250)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceL1";
              goto LABEL_750;
            }
            if (a1 == 1255)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceL2";
              goto LABEL_750;
            }
          }
          else
          {
            switch(a1)
            {
              case 1260:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceMax";
                goto LABEL_750;
              case 1265:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceMin";
                goto LABEL_750;
              case 1270:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceSum";
                goto LABEL_750;
            }
          }
        }
        else if (a1 <= 1214)
        {
          if (a1 == 1200)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_randomUniformDynamic";
            goto LABEL_750;
          }
          if (a1 == 1210)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_randomBernoulliLike";
            goto LABEL_750;
          }
        }
        else
        {
          switch(a1)
          {
            case 1215:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_randomBernoulliStatic";
              goto LABEL_750;
            case 1220:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_randomBernoulliDynamic";
              goto LABEL_750;
            case 1230:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_categoricalDistribution";
              goto LABEL_750;
          }
        }
      }
      else if (a1 > 1349)
      {
        if (a1 > 1454)
        {
          switch(a1)
          {
            case 1455:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_cumSum";
              break;
            case 1460:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_clampedReLU";
              break;
            case 1461:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_argSort";
              break;
            case 1465:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_pooling3d";
              break;
            case 1466:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_globalPooling3d";
              break;
            case 1470:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_sliceBySize";
              break;
            case 1471:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_convolution3d";
              break;
            default:
              goto LABEL_749;
          }
          goto LABEL_750;
        }
        if (a1 == 1400)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_NonMaximumSuppression";
          goto LABEL_750;
        }
        if (a1 == 1450)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_oneHot";
          goto LABEL_750;
        }
      }
      else if (a1 > 1312)
      {
        if (a1 <= 1319)
        {
          if (a1 == 1313)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_whereNonZero";
            goto LABEL_750;
          }
          if (a1 == 1315)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_matrixBandPart";
            goto LABEL_750;
          }
        }
        else
        {
          switch(a1)
          {
            case 1320:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_lowerTriangular";
              goto LABEL_750;
            case 1325:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_upperTriangular";
              goto LABEL_750;
            case 1330:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_whereBroadcastable";
              goto LABEL_750;
          }
        }
      }
      else if (a1 <= 1284)
      {
        if (a1 == 1275)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceProd";
          goto LABEL_750;
        }
        if (a1 == 1280)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceMean";
          goto LABEL_750;
        }
      }
      else
      {
        switch(a1)
        {
          case 1285:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceLogSum";
            goto LABEL_750;
          case 1290:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceSumSquare";
            goto LABEL_750;
          case 1295:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_reduceLogSumExp";
            goto LABEL_750;
        }
      }
    }
    else if (a1 > 994)
    {
      if (a1 > 1079)
      {
        if (a1 > 1109)
        {
          if (a1 <= 1124)
          {
            if (a1 == 1110)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_broadcastToDynamic";
              goto LABEL_750;
            }
            if (a1 == 1120)
            {
              uint64_t v40 = "MLNeuralNetworkLayerlayer_squeeze";
              goto LABEL_750;
            }
          }
          else
          {
            switch(a1)
            {
              case 1125:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_expandDims";
                goto LABEL_750;
              case 1130:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_flattenTo2D";
                goto LABEL_750;
              case 1135:
                uint64_t v40 = "MLNeuralNetworkLayerlayer_reshapeLike";
                goto LABEL_750;
            }
          }
        }
        else if (a1 <= 1089)
        {
          if (a1 == 1080)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_fillLike";
            goto LABEL_750;
          }
          if (a1 == 1085)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_fillStatic";
            goto LABEL_750;
          }
        }
        else
        {
          switch(a1)
          {
            case 1090:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_fillDynamic";
              goto LABEL_750;
            case 1100:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_broadcastToLike";
              goto LABEL_750;
            case 1105:
              uint64_t v40 = "MLNeuralNetworkLayerlayer_broadcastToStatic";
              goto LABEL_750;
          }
        }
      }
      else if (a1 > 1024)
      {
        if (a1 <= 1044)
        {
          if (a1 == 1025)
          {
            uint64_t v40 = "MLNeuralNetworkLayerlayer_argMax";
            goto LABEL_750;
          }
        }
        else if (a1 == 1065)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_getShape";
          goto LABEL_750;
        }
      }
      else if (a1 <= 1004)
      {
        if (a1 == 995)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_sliceStatic";
          goto LABEL_750;
        }
        if (a1 == 1000)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_sliceDynamic";
          goto LABEL_750;
        }
      }
      else
      {
        switch(a1)
        {
          case 1005:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_slidingWindows";
            goto LABEL_750;
          case 1015:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_topK";
            goto LABEL_750;
          case 1020:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_argMin";
            goto LABEL_750;
        }
      }
    }
    else if (a1 > 939)
    {
      if (a1 <= 959)
      {
        switch(a1)
        {
          case 945:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_scatterND";
            break;
          case 946:
          case 947:
          case 948:
          case 949:
          case 951:
          case 953:
            goto LABEL_749;
          case 950:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_softmaxND";
            break;
          case 952:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_gatherAlongAxis";
            break;
          case 954:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_scatterAlongAxis";
            break;
          default:
            if (a1 != 940) {
              goto LABEL_749;
            }
            uint64_t v40 = "MLNeuralNetworkLayerlayer_gatherND";
            break;
        }
        goto LABEL_750;
      }
      if (a1 <= 974)
      {
        if (a1 == 960)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_reverse";
          goto LABEL_750;
        }
        if (a1 == 965)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_reverseSeq";
          goto LABEL_750;
        }
      }
      else
      {
        switch(a1)
        {
          case 975:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_splitND";
            goto LABEL_750;
          case 980:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_concatND";
            goto LABEL_750;
          case 985:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_transpose";
            goto LABEL_750;
        }
      }
    }
    else if (a1 > 904)
    {
      if (a1 <= 924)
      {
        if (a1 == 905)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_subtractBroadcastable";
          goto LABEL_750;
        }
        if (a1 == 920)
        {
          uint64_t v40 = "MLNeuralNetworkLayerlayer_tile";
          goto LABEL_750;
        }
      }
      else
      {
        switch(a1)
        {
          case 925:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_stack";
            goto LABEL_750;
          case 930:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_gather";
            goto LABEL_750;
          case 935:
            uint64_t v40 = "MLNeuralNetworkLayerlayer_scatter";
            goto LABEL_750;
        }
      }
    }
    else if (a1 <= 889)
    {
      if (a1 == 880)
      {
        uint64_t v40 = "MLNeuralNetworkLayerlayer_addBroadcastable";
        goto LABEL_750;
      }
      if (a1 == 885)
      {
        uint64_t v40 = "MLNeuralNetworkLayerlayer_powBroadcastable";
        goto LABEL_750;
      }
    }
    else
    {
      switch(a1)
      {
        case 890:
          uint64_t v40 = "MLNeuralNetworkLayerlayer_divideBroadcastable";
          goto LABEL_750;
        case 895:
          uint64_t v40 = "MLNeuralNetworkLayerlayer_floorDivBroadcastable";
          goto LABEL_750;
        case 900:
          uint64_t v40 = "MLNeuralNetworkLayerlayer_multiplyBroadcastable";
LABEL_750:
          v45 = [NSString stringWithUTF8String:v40];

          prettyProtoFieldName(v45, &cfstr_Mlneuralnetwor.isa);
          locatiouint64_t n = (id)objc_claimAutoreleasedReturnValue();

          goto LABEL_424;
      }
    }
LABEL_749:
    uint64_t v40 = "INVALID";
    goto LABEL_750;
  }
  if (a1 <= 199)
  {
    if (a1 > 139)
    {
      switch(a1)
      {
        case 140:
          id v26 = location;
          locatiouint64_t n = @"InnerProduct";

          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        case 150:
          id v27 = location;
          locatiouint64_t n = @"Embedding";

          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        case 160:
          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
      }
    }
    else
    {
      switch(a1)
      {
        case 100:
          id v20 = location;
          locatiouint64_t n = @"Convolution";

          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        case 120:
          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
        case 130:
          MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
      }
    }
    goto LABEL_425;
  }
  if (a1 > 244)
  {
    switch(a1)
    {
      case 245:
        id v30 = location;
        locatiouint64_t n = @"Scale";

        MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
      case 250:
        id v31 = location;
        locatiouint64_t n = @"Bias";

        MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
      case 280:
        MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
    }
    goto LABEL_425;
  }
  if (a1 != 200)
  {
    if (a1 == 210) {
      MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
    }
    if (a1 == 220)
    {
      id v17 = location;
      locatiouint64_t n = @"Unary";

      MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v46);
    }
    goto LABEL_425;
  }
  MLAssetIO::ProtoWireFormatParser::ProtoWireFormatParser((uint64_t)v48, a2);
  id v22 = @"INVALID";
  while (1)
  {
    unsigned int Field = MLAssetIO::ProtoWireFormatParser::nextField((MLAssetIO::ProtoWireFormatParser *)v48);
    if (!Field) {
      break;
    }
    if (Field - 4 >= 0xFFFFFFFD)
    {
      if (Field > 3) {
        uint64_t v24 = "INVALID";
      }
      else {
        uint64_t v24 = off_1E6C2BB90[Field - 1];
      }
      v41 = [NSString stringWithUTF8String:v24];
      uint64_t v42 = prettyProtoFieldName(v41, &cfstr_Mlpaddinglayer.isa);

      id v22 = (__CFString *)v42;
      break;
    }
  }
  v43 = [@"Padding" stringByAppendingString:v22];
  id v44 = location;
  locatiouint64_t n = v43;

LABEL_424:
  long long v34 = NSNumber;
  long long v35 = [v14 objectForKeyedSubscript:location];
  long long v36 = objc_msgSend(v34, "numberWithInteger:", objc_msgSend(v35, "integerValue") + 1);
  [v14 setObject:v36 forKeyedSubscript:location];

  long long v37 = v12;
  *a3 = v37;
  id v38 = v14;
  *a4 = v38;
  *a5 = &unk_1F362DC00;
  id v39 = v15;
  *a6 = v39;
}

void sub_1DC04C220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, char a18)
{
  _Unwind_Resume(a1);
}

id parseStringVector(google::protobuf::io::CodedInputStream *a1)
{
  parseStream<CoreML::Specification::StringVector>(a1, (CoreML::Specification::StringVector *)v7);
  id v1 = objc_alloc(MEMORY[0x1E4F1CA48]);
  uint64_t v2 = (void *)[v1 initWithCapacity:v8];
  if (v9) {
    uint64_t v3 = v9 + 8;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v8)
  {
    uint64_t v4 = 8 * v8;
    do
    {
      uint64_t v5 = objc_msgSend(NSString, "stringWithUTF8String:");
      [v2 addObject:v5];

      v3 += 8;
      v4 -= 8;
    }
    while (v4);
  }
  CoreML::Specification::StringVector::~StringVector((CoreML::Specification::StringVector *)v7);
  return v2;
}

void sub_1DC04C7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

id parseInt64Vector(google::protobuf::io::CodedInputStream *a1)
{
  parseStream<CoreML::Specification::Int64Vector>(a1, (CoreML::Specification::Int64Vector *)v7);
  id v1 = objc_alloc(MEMORY[0x1E4F1CA48]);
  uint64_t v2 = (void *)[v1 initWithCapacity:v8];
  if (v9) {
    uint64_t v3 = (void *)(v9 + 8);
  }
  else {
    uint64_t v3 = 0;
  }
  if (v9) {
    uint64_t v4 = v9 + 8 + 8 * v8;
  }
  else {
    uint64_t v4 = 0;
  }
  for (; v3 != (void *)v4; ++v3)
  {
    uint64_t v5 = [NSNumber numberWithLongLong:*v3];
    [v2 addObject:v5];
  }
  CoreML::Specification::Int64Vector::~Int64Vector((CoreML::Specification::Int64Vector *)v7);
  return v2;
}

void sub_1DC04C8E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  CoreML::Specification::Int64Vector::~Int64Vector((CoreML::Specification::Int64Vector *)va);
  _Unwind_Resume(a1);
}

void ___ZL31parseNeuralNetworkSpecificationRN6google8protobuf2io16CodedInputStreamER20MIOModelSpecificInfoR20ModelParserWorkspace_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id v6 = NSNumber;
  uint64_t v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:v9];
  int v8 = objc_msgSend(v6, "numberWithInteger:", objc_msgSend(v5, "integerValue") + objc_msgSend(v7, "integerValue"));
  [*(id *)(a1 + 32) setObject:v8 forKeyedSubscript:v9];
}

void sub_1DC04C9D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exceptiouint64_t n = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  id v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F36282F0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F36282F0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::DoubleParameter>(a2, (CoreML::Specification::DoubleParameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"learningRate" doubleParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)v6);
}

void sub_1DC04CC1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t parseStream<CoreML::Specification::DoubleParameter>@<X0>(google::protobuf::io::CodedInputStream *a1@<X0>, CoreML::Specification::DoubleParameter *a2@<X8>)
{
  return google::protobuf::MessageLite::ParseFromCodedStream(a2, a1);
}

void sub_1DC04CCC0(_Unwind_Exception *a1)
{
  CoreML::Specification::DoubleParameter::~DoubleParameter(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F3628348;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F3628348;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::DoubleParameter>(a2, (CoreML::Specification::DoubleParameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"momentum" doubleParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)v6);
}

void sub_1DC04CEB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F36283A0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F36283A0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::Int64Parameter>(a2, (CoreML::Specification::Int64Parameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"miniBatchSize" int64Parameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)v6);
}

void sub_1DC04D108(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t parseStream<CoreML::Specification::Int64Parameter>@<X0>(google::protobuf::io::CodedInputStream *a1@<X0>, CoreML::Specification::Int64Parameter *a2@<X8>)
{
  return google::protobuf::MessageLite::ParseFromCodedStream(a2, a1);
}

void sub_1DC04D1AC(_Unwind_Exception *a1)
{
  CoreML::Specification::Int64Parameter::~Int64Parameter(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F36283F8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F36283F8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::DoubleParameter>(a2, (CoreML::Specification::DoubleParameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"learningRate" doubleParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)v6);
}

void sub_1DC04D3A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F3628450;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F3628450;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::Int64Parameter>(a2, (CoreML::Specification::Int64Parameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"miniBatchSize" int64Parameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)v6);
}

void sub_1DC04D5F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F36284A8;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F36284A8;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::DoubleParameter>(a2, (CoreML::Specification::DoubleParameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"beta1" doubleParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)v6);
}

void sub_1DC04D844(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F3628500;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F3628500;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::DoubleParameter>(a2, (CoreML::Specification::DoubleParameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"beta2" doubleParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)v6);
}

void sub_1DC04DA94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F3628558;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F3628558;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::DoubleParameter>(a2, (CoreML::Specification::DoubleParameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"eps" doubleParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)v6);
}

void sub_1DC04DCE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::DoubleParameter::~DoubleParameter((CoreML::Specification::DoubleParameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F36285B0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F36285B0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::Int64Parameter>(a2, (CoreML::Specification::Int64Parameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"epochs" int64Parameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)v6);
}

void sub_1DC04DF34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F3628608;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F3628608;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::BoolParameter>(a2, (CoreML::Specification::BoolParameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"shuffle" BOOLParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::BoolParameter::~BoolParameter((CoreML::Specification::BoolParameter *)v6);
}

void sub_1DC04E184(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::BoolParameter::~BoolParameter((CoreML::Specification::BoolParameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t parseStream<CoreML::Specification::BoolParameter>@<X0>(google::protobuf::io::CodedInputStream *a1@<X0>, CoreML::Specification::BoolParameter *a2@<X8>)
{
  return google::protobuf::MessageLite::ParseFromCodedStream(a2, a1);
}

void sub_1DC04E228(_Unwind_Exception *a1)
{
  CoreML::Specification::BoolParameter::~BoolParameter(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F3628660;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F3628660;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::Int64Parameter>(a2, (CoreML::Specification::Int64Parameter *)v6);
  id v5 = [(MIOParameterDescription *)v4 initWithKey:@"seed" int64Parameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)v6);
}

void sub_1DC04E420(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10,std::allocator<parseNetworkUpdateParameters(google::protobuf::io::CodedInputStream &)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t parseStream<CoreML::Specification::StringVector>@<X0>(google::protobuf::io::CodedInputStream *a1@<X0>, CoreML::Specification::StringVector *a2@<X8>)
{
  return google::protobuf::MessageLite::ParseFromCodedStream(a2, a1);
}

void sub_1DC04E4C4(_Unwind_Exception *a1)
{
  CoreML::Specification::StringVector::~StringVector(v1);
  _Unwind_Resume(a1);
}

uint64_t parseStream<CoreML::Specification::Int64Vector>@<X0>(google::protobuf::io::CodedInputStream *a1@<X0>, CoreML::Specification::Int64Vector *a2@<X8>)
{
  return google::protobuf::MessageLite::ParseFromCodedStream(a2, a1);
}

void sub_1DC04E510(_Unwind_Exception *a1)
{
  CoreML::Specification::Int64Vector::~Int64Vector(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100](uint64_t *a1, const std::string *a2, int a3)
{
  uint64_t v6 = MEMORY[0x1E4FBA488] + 104;
  a1[16] = MEMORY[0x1E4FBA488] + 104;
  uint64_t v7 = a1 + 2;
  uint64_t v8 = MEMORY[0x1E4FBA488] + 64;
  a1[2] = MEMORY[0x1E4FBA488] + 64;
  uint64_t v9 = (uint64_t)(a1 + 3);
  uint64_t v10 = (void *)MEMORY[0x1E4FBA408];
  uint64_t v11 = *(void *)(MEMORY[0x1E4FBA408] + 24);
  uint64_t v12 = *(void *)(MEMORY[0x1E4FBA408] + 16);
  *a1 = v12;
  *(uint64_t *)((char *)a1 + *(void *)(v12 - 24)) = v11;
  a1[1] = 0;
  id v13 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v13, a1 + 3);
  uint64_t v14 = MEMORY[0x1E4FBA488] + 24;
  v13[1].__vftable = 0;
  v13[1].__fmtflags_ = -1;
  uint64_t v15 = v10[5];
  uint64_t v16 = v10[4];
  a1[2] = v16;
  *(void *)((char *)v7 + *(void *)(v16 - 24)) = v15;
  uint64_t v17 = v10[1];
  *a1 = v17;
  *(uint64_t *)((char *)a1 + *(void *)(v17 - 24)) = v10[6];
  *a1 = v14;
  a1[16] = v6;
  a1[2] = v8;
  std::stringbuf::basic_stringbuf[abi:ne180100](v9, a2, a3);
  return a1;
}

void sub_1DC04E7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void insertTensorDataTypeToPrecisionSet(MIL::IRValueType *a1, void *a2)
{
  id v12 = a2;
  if ((*(uint64_t (**)(MIL::IRValueType *))(*(void *)a1 + 24))(a1))
  {
    uint64_t v3 = MIL::IRValueType::AsTensorType(a1);
    int v4 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 88))(v3);
    id v5 = NSStringFromIRDataType(v4);
    if (v5) {
      [v12 addObject:v5];
    }
  }
  else if ((*(uint64_t (**)(MIL::IRValueType *))(*(void *)a1 + 40))(a1))
  {
    uint64_t v6 = MIL::IRValueType::AsTupleType(a1);
    uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v6 + 64))(v6);
    uint64_t v8 = (void *)*v7;
    uint64_t v9 = (void *)v7[1];
    while (v8 != v9)
      insertTensorDataTypeToPrecisionSet(*v8++, v12);
  }
  else
  {
    if ((*(uint64_t (**)(MIL::IRValueType *))(*(void *)a1 + 32))(a1))
    {
      uint64_t v10 = (uint64_t (**)(void))(*(void *)MIL::IRValueType::AsListType(a1) + 64);
    }
    else
    {
      if (!(*(uint64_t (**)(MIL::IRValueType *))(*(void *)a1 + 48))(a1)) {
        goto LABEL_5;
      }
      uint64_t v10 = (uint64_t (**)(void))(*(void *)MIL::IRValueType::AsDictionaryType(a1) + 72);
    }
    uint64_t v11 = (*v10)();
    insertTensorDataTypeToPrecisionSet(v11, v12);
  }
LABEL_5:
}

void sub_1DC04E9FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  uint64_t v11 = v10;

  _Unwind_Resume(a1);
}

void MIOFunctionInfo::~MIOFunctionInfo(MIOFunctionInfo *this)
{
}

uint64_t std::stringbuf::basic_stringbuf[abi:ne180100](uint64_t a1, const std::string *a2, int a3)
{
  uint64_t v6 = std::streambuf::basic_streambuf();
  *(void *)uint64_t v6 = MEMORY[0x1E4FBA470] + 16;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_DWORD *)(v6 + 96) = a3;
  std::string::operator=((std::string *)(v6 + 64), a2);
  std::stringbuf::__init_buf_ptrs[abi:ne180100](a1);
  return a1;
}

void sub_1DC04EAF4(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 87) < 0) {
    operator delete(*v2);
  }
  std::streambuf::~streambuf();
  _Unwind_Resume(a1);
}

void std::stringbuf::__init_buf_ptrs[abi:ne180100](uint64_t a1)
{
  *(void *)(a1 + 88) = 0;
  uint64_t v2 = (std::string *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 87);
  if (v3 < 0)
  {
    int v4 = *(std::string **)(a1 + 64);
    unint64_t v5 = *(void *)(a1 + 72);
  }
  else
  {
    int v4 = v2;
    unint64_t v5 = *(unsigned __int8 *)(a1 + 87);
  }
  int v6 = *(_DWORD *)(a1 + 96);
  if ((v6 & 8) != 0)
  {
    *(void *)(a1 + 88) = (char *)v4 + v5;
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = (char *)v4 + v5;
  }
  if ((v6 & 0x10) != 0)
  {
    *(void *)(a1 + 88) = (char *)v4 + v5;
    std::string::size_type v7 = v3 < 0 ? (*(void *)(a1 + 80) & 0x7FFFFFFFFFFFFFFFLL) - 1 : 22;
    std::string::resize(v2, v7, 0);
    uint64_t v8 = *(char *)(a1 + 87) < 0 ? *(void *)(a1 + 72) : *(unsigned __int8 *)(a1 + 87);
    *(void *)(a1 + 40) = v4;
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = (char *)v4 + v8;
    if ((*(unsigned char *)(a1 + 96) & 3) != 0)
    {
      if (v5 >> 31)
      {
        uint64_t v9 = ((v5 - 0x80000000) * (unsigned __int128)0x200000005uLL) >> 64;
        unint64_t v10 = 0x7FFFFFFF * ((v9 + ((v5 - 0x80000000 - v9) >> 1)) >> 30);
        int v4 = (std::string *)((char *)v4 + v10 + 0x7FFFFFFF);
        unint64_t v5 = v5 - v10 - 0x7FFFFFFF;
        *(void *)(a1 + 48) = v4;
      }
      if (v5) {
        *(void *)(a1 + 48) = (char *)v4 + v5;
      }
    }
  }
}

void std::__shared_ptr_pointer<MIL::MILContext  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_pointer<MIL::MILContext  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::MILContext  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

uint64_t std::vector<std::string>::vector[abi:ne180100](uint64_t a1, long long *a2, unint64_t a3)
{
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if (a3)
  {
    std::vector<std::string>::__vallocate[abi:ne180100]((void *)a1, a3);
    *(void *)(a1 + 8) = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>(v4, a2, (long long *)((char *)a2 + 24 * a3), *(std::string **)(a1 + 8));
  }
  return a1;
}

void sub_1DC04ED5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string const,std::vector<std::string>>::~pair(uint64_t a1)
{
  char v3 = (void **)(a1 + 24);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v3);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

char *std::vector<std::string>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void std::vector<std::string>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>(uint64_t a1, long long *a2, long long *a3, std::string *this)
{
  uint64_t v4 = this;
  uint64_t v11 = this;
  id v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  std::string v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    int v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((void *)v6 + 1));
        uint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      int v6 = (long long *)((char *)v6 + 24);
      id v12 = ++v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1DC04EF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

void std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)v2);
    char v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::string>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

std::string *std::pair<std::string const,std::vector<std::string>>::pair[abi:ne180100]<true,0>(std::string *this, long long *a2, long long **a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  this[1].__r_.__value_.__r.__words[0] = 0;
  this[1].__r_.__value_.__l.__size_ = 0;
  this[1].__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(this + 1, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  return this;
}

void sub_1DC04F0DC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(std::string *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    std::vector<std::string>::__vallocate[abi:ne180100](result, a4);
    uint64_t result = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>((uint64_t)&v6->__r_.__value_.__r.__words[2], a2, a3, (std::string *)v6->__r_.__value_.__l.__size_);
    v6->__r_.__value_.__l.__size_ = (std::string::size_type)result;
  }
  return result;
}

void sub_1DC04F160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>(uint64_t a1, long long *a2, long long *a3, std::string *this)
{
  uint64_t v4 = this;
  uint64_t v11 = this;
  id v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  std::string v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    int v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((void *)v6 + 1));
        uint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      int v6 = (long long *)((char *)v6 + 24);
      id v12 = ++v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1DC04F22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::unordered_map<std::string,std::vector<std::string>>::unordered_map(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 48 * a3;
    do
    {
      std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::vector<std::string>> const&>(a1, a2, (long long *)a2);
      a2 += 48;
      v5 -= 48;
    }
    while (v5);
  }
  return a1;
}

void sub_1DC04F2A8(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::vector<std::string>> const&>(uint64_t a1, unsigned __int8 *a2, long long *a3)
{
  long long v7 = (void *)(a1 + 24);
  unint64_t v8 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    id v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__construct_node_hash<std::pair<std::string const,std::vector<std::string>> const&>(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__rehash<true>(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  id v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::vector<std::string>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::vector<std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)v25, 0);
  return i;
}

void sub_1DC04F528(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::vector<std::string>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::vector<std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

std::string *std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__construct_node_hash<std::pair<std::string const,std::vector<std::string>> const&>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x40uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  uint64_t result = std::pair<std::string const,std::vector<std::string>>::pair[abi:ne180100]((std::string *)(v8 + 16), a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1DC04F5A0(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::vector<std::string>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::vector<std::string>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

unint64_t std::__string_hash<char>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      id v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64;
      }
      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_33_to_64[abi:ne180100](a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_17_to_32[abi:ne180100](a2, a3);
  }
  else
  {
    return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_0_to_16[abi:ne180100](a2, a3);
  }
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_0_to_16[abi:ne180100](_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_17_to_32[abi:ne180100](void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273 * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_33_to_64[abi:ne180100](void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127 * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(void *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

std::string *std::pair<std::string const,std::vector<std::string>>::pair[abi:ne180100](std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  this[1].__r_.__value_.__r.__words[0] = 0;
  this[1].__r_.__value_.__l.__size_ = 0;
  this[1].__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(this + 1, *((long long **)a2 + 3), *((long long **)a2 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 4) - *((void *)a2 + 3)) >> 3));
  return this;
}

void sub_1DC04FADC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__do_rehash<true>(a1, prime);
    }
  }
}

void std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      uint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            void *v7 = *v11;
            void *v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            uint64_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          uint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    uint64_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::vector<std::string>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::vector<std::string>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::string>>,0>((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::string>>,0>(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__deallocate_node(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__deallocate_node(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::string>>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

uint64_t std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  void *v2 = &unk_1F36167D0;
  id v3 = *(id *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  v2[1] = v3;
  v2[2] = v4;
  return v2;
}

id std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F36167D0;
  id result = *(id *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  a2[1] = result;
  a2[2] = v5;
  return result;
}

void std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

uint64_t std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::operator()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)MEMORY[0x1E0198E60]();
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 56))(a2);
  int v6 = *(char *)(v5 + 23);
  if (v6 < 0)
  {
    if (*(void *)(v5 + 8) != 8) {
      goto LABEL_23;
    }
    uint64_t v5 = *(void *)v5;
  }
  else if (v6 != 8)
  {
    goto LABEL_23;
  }
  if (*(void *)v5 == 0x7966697373616C63)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "classes");
    ParameterValue = (MIL::IRValue *)MIL::IROperation::GetParameterValue();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    unint64_t v8 = [MEMORY[0x1E4F1CA70] orderedSet];
    uint8x8_t v9 = (MIL::IRValueType *)(*(uint64_t (**)(MIL::IRValue *))(*(void *)ParameterValue + 32))(ParameterValue);
    uint64_t v10 = MIL::IRValueType::AsListType(v9);
    uint64_t v11 = (MIL::IRValueType *)(*(uint64_t (**)(uint64_t))(*(void *)v10 + 64))(v10);
    uint64_t v12 = MIL::IRValueType::AsTensorType(v11);
    if ((*(unsigned int (**)(uint64_t))(*(void *)v12 + 88))(v12) == 3)
    {
      unint64_t v13 = (MIL::IRListValue *)MIL::IRValue::AsList(ParameterValue);
      uint64_t Values = MIL::IRListValue::GetValues(v13);
      if (v15)
      {
        uint64_t v16 = Values;
        uint64_t v17 = 16 * v15;
        do
        {
          uint64_t v18 = NSString;
          MIL::IRValue::GetScalar<std::string>();
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_p = &__p;
          }
          else {
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          uint64_t v20 = [v18 stringWithUTF8String:p_p];
          [v8 addObject:v20];

          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          v16 += 16;
          v17 -= 16;
        }
        while (v17);
      }
    }
    else
    {
      uint64_t v21 = (MIL::IRListValue *)MIL::IRValue::AsList(ParameterValue);
      uint64_t v22 = MIL::IRListValue::GetValues(v21);
      if (v23)
      {
        uint64_t v24 = v22;
        uint64_t v25 = 16 * v23;
        do
        {
          uint64_t v26 = [NSNumber numberWithLongLong:MIL::IRValue::GetScalar<long long>()];
          [v8 addObject:v26];

          v24 += 16;
          v25 -= 16;
        }
        while (v25);
      }
    }
    uint64_t v27 = [v8 array];

    uint64_t v28 = *(void ***)(a1 + 16);
    uint64_t v29 = *v28;
    void *v28 = (void *)v27;
  }
LABEL_23:
  id v30 = *(id *)(a1 + 8);
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 56))(a2);
  if (std::__find_impl[abi:ne180100]<std::string_view const*,std::string_view const*,std::string,std::__identity>((uint64_t)&addOperationToHistogram(MIL::IROperation const&,NSMutableDictionary<NSString *,NSNumber *> *)::ignoredOps, (uint64_t)&__block_descriptor_40_ea8_32s_e38_B32__0__MIOFeatureDescription_8Q16_B24ls32l8, (const void **)v31)- (void)&addOperationToHistogram(MIL::IROperation const&,NSMutableDictionary<NSString *,NSNumber *> *)::ignoredOps == 32)
  {
    uint64_t v32 = NSString;
    if (*(char *)(v31 + 23) >= 0) {
      uint64_t v33 = (char *)v31;
    }
    else {
      uint64_t v33 = *(char **)v31;
    }
    std::string::basic_string[abi:ne180100]<0>(&v49, v33);
    memset(&__p, 0, sizeof(__p));
    std::string::size_type size = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = v49.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      std::string::size_type v35 = 0;
      int v36 = 0;
      unsigned int v37 = 1;
      do
      {
        __darwin_ct_rune_t v38 = *std::string::at(&v49, v35);
        BOOL v39 = v38 == 95;
        if (v38 != 95)
        {
          if (((v37 != 1) & ~v36) == 0) {
            LOBYTE(v38) = __toupper(v38);
          }
          std::string::push_back(&__p, v38);
        }
        std::string::size_type v35 = v37;
        std::string::size_type v40 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
        if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v40 = v49.__r_.__value_.__l.__size_;
        }
        BOOL v41 = v40 > v37++;
        int v36 = v39;
      }
      while (v41);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v42 = &__p;
      }
      else {
        uint64_t v42 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
    }
    else
    {
      uint64_t v42 = &__p;
    }
    v43 = [v32 stringWithUTF8String:v42];
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    id v44 = [v30 objectForKeyedSubscript:v43];

    if (v44)
    {
      v45 = NSNumber;
      uint64_t v46 = [v30 objectForKeyedSubscript:v43];
      uint64_t v47 = objc_msgSend(v45, "numberWithInt:", objc_msgSend(v46, "intValue") + 1);
      [v30 setObject:v47 forKeyedSubscript:v43];
    }
    else
    {
      [v30 setObject:&unk_1F362DBE8 forKeyedSubscript:v43];
    }
  }
  return 1;
}

void sub_1DC050440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_0>,BOOL ()(MIL::IROperation const&)>::target_type()
{
}

void std::__throw_out_of_range[abi:ne180100](const char *a1)
{
  exceptiouint64_t n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::out_of_range::out_of_range[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E6C2B490, MEMORY[0x1E4FBA1D0]);
}

void sub_1DC05059C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::out_of_range::out_of_range[abi:ne180100](std::logic_error *a1, const char *a2)
{
  id result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D8] + 16);
  return result;
}

uint64_t std::__find_impl[abi:ne180100]<std::string_view const*,std::string_view const*,std::string,std::__identity>(uint64_t a1, uint64_t a2, const void **a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    char v5 = *((unsigned char *)a3 + 23);
    if (v5 >= 0) {
      size_t v6 = *((unsigned __int8 *)a3 + 23);
    }
    else {
      size_t v6 = (size_t)a3[1];
    }
    if (v5 >= 0) {
      uint64_t v7 = a3;
    }
    else {
      uint64_t v7 = *a3;
    }
    while (*(void *)(v3 + 8) != v6 || memcmp(*(const void **)v3, v7, v6))
    {
      v3 += 16;
      if (v3 == a2) {
        return a2;
      }
    }
  }
  return v3;
}

void *std::__function::__value_func<BOOL ()(MIL::IROperation const&)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

__CFString *NSStringFromIRDataType(int a1)
{
  if ((a1 - 4) > 0x13) {
    return 0;
  }
  else {
    return off_1E6C2BBA8[a1 - 4];
  }
}

uint64_t std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

char *std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::__clone(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v2 = &unk_1F3616828;
  *((void *)v2 + 1) = *(id *)(a1 + 8);
  *((void *)v2 + 2) = *(id *)(a1 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 24);
  return v2;
}

__n128 std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::__clone(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_1F3616828;
  *(void *)(a2 + 8) = *(id *)(a1 + 8);
  *(void *)(a2 + 16) = *(id *)(a1 + 16);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a2 + 24) = result;
  return result;
}

void std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::destroy(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

void std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

uint64_t std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::operator()(uint64_t a1, MIL::IROperation *a2)
{
  uint64_t v4 = (void *)MEMORY[0x1E0198E60]();
  uint64_t v5 = (*(uint64_t (**)(MIL::IROperation *))(*(void *)a2 + 56))(a2);
  if (*(char *)(v5 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&v70, *(const std::string::value_type **)v5, *(void *)(v5 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    v70.__r_.__value_.__r.__words[2] = *(void *)(v5 + 16);
    *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v6;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  __p[0] = &v70;
  unint64_t v8 = std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v7, (unsigned __int8 *)&v70, (uint64_t)&std::piecewise_construct, (long long **)__p);
  if ((char)v8[63] < 0) {
    std::string::__init_copy_ctor_external(&__s1, *((const std::string::value_type **)v8 + 5), *((void *)v8 + 6));
  }
  else {
    std::string __s1 = *(std::string *)(v8 + 40);
  }
  uint8x8_t v9 = std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::find<std::string>(*(void **)(a1 + 24), (unsigned __int8 *)&__s1);
  if (v9)
  {
    uint64_t v10 = *((void *)v9 + 5);
    uint64_t v11 = *((void *)v9 + 6);
    while (v10 != v11)
    {
      uint64_t ParameterValue = MIL::IROperation::TryGetParameterValue();
      if (ParameterValue)
      {
        unint64_t v13 = (MIL::IRValueType *)(*(uint64_t (**)(uint64_t))(*(void *)ParameterValue + 32))(ParameterValue);
        insertTensorDataTypeToPrecisionSet(v13, *(void **)(a1 + 16));
      }
      v10 += 24;
    }
  }
  id v14 = *(id *)(a1 + 16);
  int v15 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
  if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0)
  {
    std::string::size_type size = __s1.__r_.__value_.__l.__size_;
    if ((uint64_t)__s1.__r_.__value_.__l.__size_ <= 24)
    {
      if (__s1.__r_.__value_.__l.__size_ != 22)
      {
        if (__s1.__r_.__value_.__l.__size_ == 23)
        {
          if (*(void *)__s1.__r_.__value_.__l.__data_ == 0x70786574736E6F63
            && *(void *)(__s1.__r_.__value_.__r.__words[0] + 8) == 0x6F745F74756C5F72
            && *(void *)(__s1.__r_.__value_.__r.__words[0] + 15) == 0x6573726170735F6FLL)
          {
            goto LABEL_81;
          }
          goto LABEL_145;
        }
        goto LABEL_105;
      }
      uint64_t v22 = (std::string *)__s1.__r_.__value_.__r.__words[0];
      goto LABEL_60;
    }
    if (__s1.__r_.__value_.__l.__size_ == 25)
    {
      if (*(void *)__s1.__r_.__value_.__l.__data_ == 0x70786574736E6F63
        && *(void *)(__s1.__r_.__value_.__r.__words[0] + 8) == 0x6573726170735F72
        && *(void *)(__s1.__r_.__value_.__r.__words[0] + 16) == 0x736E65645F6F745FLL
        && *(unsigned char *)(__s1.__r_.__value_.__r.__words[0] + 24) == 101)
      {
        goto LABEL_81;
      }
      goto LABEL_145;
    }
    if (__s1.__r_.__value_.__l.__size_ != 38) {
      goto LABEL_105;
    }
    p_s1 = (std::string *)__s1.__r_.__value_.__r.__words[0];
LABEL_44:
    if (memcmp(p_s1, "constexpr_sparse_blockwise_shift_scale", 0x26uLL)) {
      goto LABEL_145;
    }
    goto LABEL_81;
  }
  if (HIBYTE(__s1.__r_.__value_.__r.__words[2]) > 0x18u)
  {
    if (HIBYTE(__s1.__r_.__value_.__r.__words[2]) == 25)
    {
      if (__s1.__r_.__value_.__r.__words[0] == 0x70786574736E6F63
        && __s1.__r_.__value_.__l.__size_ == 0x6573726170735F72
        && __s1.__r_.__value_.__r.__words[2] == 0x736E65645F6F745FLL
        && v69 == 101)
      {
        goto LABEL_81;
      }
      goto LABEL_145;
    }
    if (HIBYTE(__s1.__r_.__value_.__r.__words[2]) != 38) {
      goto LABEL_68;
    }
    p_s1 = &__s1;
    goto LABEL_44;
  }
  if (HIBYTE(__s1.__r_.__value_.__r.__words[2]) != 22)
  {
    if (HIBYTE(__s1.__r_.__value_.__r.__words[2]) == 23)
    {
      if (__s1.__r_.__value_.__r.__words[0] != 0x70786574736E6F63
        || __s1.__r_.__value_.__l.__size_ != 0x6F745F74756C5F72
        || *(std::string::size_type *)((char *)&__s1.__r_.__value_.__r.__words[1] + 7) != 0x6573726170735F6FLL)
      {
        goto LABEL_145;
      }
LABEL_81:
      objc_msgSend(v14, "addObject:", @"Sparse", __s1.__r_.__value_.__r.__words[0]);
      goto LABEL_145;
    }
    goto LABEL_68;
  }
  uint64_t v22 = &__s1;
LABEL_60:
  std::string::size_type v26 = v22->__r_.__value_.__r.__words[0];
  std::string::size_type v27 = v22->__r_.__value_.__l.__size_;
  uint64_t v28 = *(std::string::size_type *)((char *)&v22->__r_.__value_.__r.__words[1] + 6);
  if (v26 == 0x70786574736E6F63 && v27 == 0x6F745F74756C5F72 && v28 == 0x65736E65645F6F74)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "lut");
    uint64_t Attribute = MIL::IRObject::TryGetAttribute();
    if (v72 < 0) {
      operator delete(__p[0]);
    }
    if (Attribute)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "lut");
      uint64_t v36 = MIL::IRObject::GetAttribute();
      uint64_t v37 = (*(uint64_t (**)(uint64_t))(*(void *)v36 + 32))(v36);
      insertAdditionalStoragePrecisionForPaletizedWeights(v37, v14);
      goto LABEL_143;
    }
    int v15 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
    if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_68;
    }
  }
  else if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) == 0)
  {
LABEL_68:
    if (v15 != 22)
    {
LABEL_97:
      if (v15 != 27)
      {
LABEL_118:
        if (v15 != 31) {
          goto LABEL_145;
        }
        uint64_t v53 = &__s1;
        goto LABEL_128;
      }
      v43 = &__s1;
      goto LABEL_107;
    }
    uint64_t v31 = &__s1;
    goto LABEL_89;
  }
  std::string::size_type size = __s1.__r_.__value_.__l.__size_;
  if (__s1.__r_.__value_.__l.__size_ != 22) {
    goto LABEL_105;
  }
  uint64_t v31 = (std::string *)__s1.__r_.__value_.__r.__words[0];
LABEL_89:
  std::string::size_type v38 = v31->__r_.__value_.__r.__words[0];
  std::string::size_type v39 = v31->__r_.__value_.__l.__size_;
  uint64_t v40 = *(std::string::size_type *)((char *)&v31->__r_.__value_.__r.__words[1] + 6);
  if (v38 == 0x70786574736E6F63 && v39 == 0x6F745F74756C5F72 && v40 == 0x65736E65645F6F74)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "lut");
    uint64_t ParameterType = MIL::IROperation::TryGetParameterType();
    if (v72 < 0) {
      operator delete(__p[0]);
    }
    if (ParameterType)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "lut");
      uint64_t v45 = MIL::IROperation::GetParameterType();
      insertAdditionalStoragePrecisionForPaletizedWeights(v45, v14);
      goto LABEL_143;
    }
    int v15 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
    if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_97;
    }
  }
  else if ((v15 & 0x80) == 0)
  {
    goto LABEL_97;
  }
  std::string::size_type size = __s1.__r_.__value_.__l.__size_;
LABEL_105:
  if (size != 27) {
    goto LABEL_126;
  }
  v43 = (std::string *)__s1.__r_.__value_.__r.__words[0];
LABEL_107:
  std::string::size_type v46 = v43->__r_.__value_.__r.__words[0];
  std::string::size_type v47 = v43->__r_.__value_.__l.__size_;
  std::string::size_type v48 = v43->__r_.__value_.__r.__words[2];
  uint64_t v49 = *(std::string::size_type *)((char *)&v43->__r_.__value_.__r.__words[2] + 3);
  if (v46 == 0x70786574736E6F63
    && v47 == 0x656E696666615F72
    && v48 == 0x746E61757165645FLL
    && v49 == 0x657A69746E617571)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "quantized_data");
    uint64_t v54 = MIL::IRObject::TryGetAttribute();
    if (v72 < 0) {
      operator delete(__p[0]);
    }
    if (v54)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "quantized_data");
      uint64_t v55 = MIL::IRObject::GetAttribute();
      id v56 = (MIL::IRValueType *)(*(uint64_t (**)(uint64_t))(*(void *)v55 + 32))(v55);
      insertAdditionalStoragePrecisionForQuantizedWeights(v56, v14);
      goto LABEL_143;
    }
    int v15 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
    if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_118;
    }
  }
  else if ((v15 & 0x80) == 0)
  {
    goto LABEL_118;
  }
  std::string::size_type size = __s1.__r_.__value_.__l.__size_;
LABEL_126:
  if (size != 31) {
    goto LABEL_145;
  }
  uint64_t v53 = (std::string *)__s1.__r_.__value_.__r.__words[0];
LABEL_128:
  std::string::size_type v57 = v53->__r_.__value_.__r.__words[0];
  std::string::size_type v58 = v53->__r_.__value_.__l.__size_;
  std::string::size_type v59 = v53->__r_.__value_.__r.__words[2];
  uint64_t v60 = *(std::string::size_type *)((char *)&v53->__r_.__value_.__r.__words[2] + 7);
  if (v57 == 0x70786574736E6F63
    && v58 == 0x776B636F6C625F72
    && v59 == 0x666968735F657369
    && v60 == 0x656C6163735F7466)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "data");
    uint64_t v64 = MIL::IROperation::TryGetParameterType();
    if (v72 < 0) {
      operator delete(__p[0]);
    }
    if (v64)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, "data");
      v65 = (MIL::IRValueType *)MIL::IROperation::GetParameterType();
      insertAdditionalStoragePrecisionForQuantizedWeights(v65, v14);
LABEL_143:
      if (v72 < 0) {
        operator delete(__p[0]);
      }
    }
  }
LABEL_145:

  OutputType = (MIL::IRValueType *)MIL::IROperation::TryGetOutputType(a2);
  if (OutputType) {
    insertTensorDataTypeToPrecisionSet(OutputType, *(void **)(a1 + 8));
  }
  if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s1.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v70.__r_.__value_.__l.__data_);
  }
  return 1;
}

void sub_1DC050FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseMILProgram(google::protobuf::io::CodedInputStream &,MIOParserContext *,MIOModelSpecificInfo &,ModelParserWorkspace &)::$_1>,BOOL ()(MIL::IROperation const&)>::target_type()
{
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  unint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    id v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__rehash<true>(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *uint64_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  v26[0] = 0;
  ++*v8;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v26, 0);
  return i;
}

void sub_1DC05131C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x40uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  unint64_t v9 = (std::string *)(v8 + 2);
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    v8[4] = *((void *)v10 + 2);
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = v11;
  }
  v8[5] = 0;
  v8[6] = 0;
  v8[7] = 0;
  *(unsigned char *)(a4 + 16) = 1;
}

void sub_1DC0513C0(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::find<std::string>(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  unint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  long long v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v6 == v13)
      {
        if (std::equal_to<std::string>::operator()[abi:ne180100](v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      long long v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

void insertAdditionalStoragePrecisionForPaletizedWeights(uint64_t a1, void *a2)
{
  id v6 = a2;
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1))
  {
    unint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1);
    LODWORD(v4) = vcvtpd_s64_f64(log2((double)v3));
    objc_msgSend(NSString, "stringWithFormat:", @"Palettized (%d bits)", v4);
    int8x8_t v5 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    int8x8_t v5 = @"Palettized (unknown bits)";
  }
  [v6 addObject:v5];
}

void sub_1DC051618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void insertAdditionalStoragePrecisionForQuantizedWeights(MIL::IRValueType *a1, void *a2)
{
  id v6 = a2;
  if ((*(uint64_t (**)(MIL::IRValueType *))(*(void *)a1 + 24))(a1))
  {
    uint64_t v3 = MIL::IRValueType::AsTensorType(a1);
    int v4 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 88))(v3);
    int8x8_t v5 = NSStringFromIRDataType(v4);
    [v6 addObject:v5];
  }
}

void sub_1DC0516F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  long long v11 = v10;

  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__deallocate_node(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  unint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    id v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__rehash<true>(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *uint64_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  v26[0] = 0;
  ++*v8;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,MIOFunctionInfo>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,MIOFunctionInfo>,void *>>>>::reset[abi:ne180100]((uint64_t)v26, 0);
  return i;
}

void sub_1DC051A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,MIOFunctionInfo>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,MIOFunctionInfo>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

double std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x50uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  unint64_t v9 = (std::string *)(v8 + 16);
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *(const std::string::value_type **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    *((void *)v8 + 4) = *((void *)v10 + 2);
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = v11;
  }
  *((void *)v8 + 9) = 0;
  double result = 0.0;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1DC051AC8(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,MIOFunctionInfo>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,MIOFunctionInfo>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,MIOFunctionInfo>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,MIOFunctionInfo>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,MIOFunctionInfo>,0>((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,MIOFunctionInfo>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F36172D0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F36172D0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  unint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::Int64Parameter>(a2, (CoreML::Specification::Int64Parameter *)v6);
  int8x8_t v5 = [(MIOParameterDescription *)v4 initWithKey:@"numberOfNeighbors" int64Parameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)v6);
}

void sub_1DC051D8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::Int64Parameter::~Int64Parameter((CoreML::Specification::Int64Parameter *)va);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3617328;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617328;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  *(void *)(*(void *)(a1 + 8) + 40) = parseStringVector(a2);
  return MEMORY[0x1F41817F8]();
}

uint64_t std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3617380;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617380;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  *(void *)(*(void *)(a1 + 8) + 40) = parseInt64Vector(a2);
  return MEMORY[0x1F41817F8]();
}

uint64_t std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2,std::allocator<parseKNearestNeighborsClassifier(google::protobuf::io::CodedInputStream &,MIOModelInfo &,ModelParserWorkspace &)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F3617068;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F3617068;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  unint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::StringParameter>(a2, (CoreML::Specification::StringParameter *)v6);
  int8x8_t v5 = [(MIOParameterDescription *)v4 initWithKey:@"linkedModelFileName" stringParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::StringParameter::~StringParameter((CoreML::Specification::StringParameter *)v6);
}

void sub_1DC05221C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  CoreML::Specification::StringParameter::~StringParameter((CoreML::Specification::StringParameter *)&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t parseStream<CoreML::Specification::StringParameter>@<X0>(google::protobuf::io::CodedInputStream *a1@<X0>, CoreML::Specification::StringParameter *a2@<X8>)
{
  return google::protobuf::MessageLite::ParseFromCodedStream(a2, a1);
}

void sub_1DC0522C0(_Unwind_Exception *a1)
{
  CoreML::Specification::StringParameter::~StringParameter(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x10uLL);
  void *v2 = &unk_1F36170C0;
  v2[1] = *(id *)(a1 + 8);
  return v2;
}

id std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  *a2 = &unk_1F36170C0;
  id result = *(id *)(a1 + 8);
  a2[1] = result;
  return result;
}

void std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  unint64_t v4 = [MIOParameterDescription alloc];
  parseStream<CoreML::Specification::StringParameter>(a2, (CoreML::Specification::StringParameter *)v6);
  int8x8_t v5 = [(MIOParameterDescription *)v4 initWithKey:@"linkedModelSearchPath" stringParameter:v6];
  [v3 addObject:v5];

  CoreML::Specification::StringParameter::~StringParameter((CoreML::Specification::StringParameter *)v6);
}

void sub_1DC0524B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  CoreML::Specification::StringParameter::~StringParameter((CoreML::Specification::StringParameter *)&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1,std::allocator<parseLinkedModel(google::protobuf::io::CodedInputStream &,MIOModelInfo &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616880;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616880;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  *(void *)(*(void *)(a1 + 8) + 40) = parseStringVector(a2);
  return MEMORY[0x1F41817F8]();
}

uint64_t std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F36168D8;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F36168D8;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, google::protobuf::io::CodedInputStream *a2)
{
  *(void *)(*(void *)(a1 + 8) + 40) = parseInt64Vector(a2);
  return MEMORY[0x1F41817F8]();
}

uint64_t std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1,std::allocator<parseClassLabels(google::protobuf::io::CodedInputStream &,int,int,ModelParserWorkspace &)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void ___ZL26populatePipelineInfomationRK12MIOModelInfoR20ModelParserWorkspace_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id v6 = NSNumber;
  uint64_t v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:v9];
  unint64_t v8 = objc_msgSend(v6, "numberWithInteger:", objc_msgSend(v5, "integerValue") + objc_msgSend(v7, "integerValue"));
  [*(id *)(a1 + 32) setObject:v8 forKeyedSubscript:v9];
}

void sub_1DC052820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void ___ZL26populatePipelineInfomationRK12MIOModelInfoR20ModelParserWorkspace_block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id v6 = NSNumber;
  uint64_t v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:v9];
  unint64_t v8 = objc_msgSend(v6, "numberWithInteger:", objc_msgSend(v5, "integerValue") + objc_msgSend(v7, "integerValue"));
  [*(id *)(a1 + 32) setObject:v8 forKeyedSubscript:v9];
}

void sub_1DC05290C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL22classLabelsForPipelineP7NSArrayIP8MIOModelEP8NSString_block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 name];
  uint64_t v7 = [v6 isEqual:*(void *)(a1 + 32)];

  if (v7) {
    *a4 = 1;
  }
  return v7;
}

void sub_1DC052998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::vector<MIOFunctionInfo>::__push_back_slow_path<MIOFunctionInfo const&>(uint64_t *a1, id *a2)
{
  unint64_t v3 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x666666666666666) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  if (0x999999999999999ALL * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x999999999999999ALL * ((a1[2] - *a1) >> 3);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 3) >= 0x333333333333333) {
    unint64_t v6 = 0x666666666666666;
  }
  else {
    unint64_t v6 = v4;
  }
  id v14 = a1 + 2;
  if (v6) {
    uint64_t v7 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MIOFunctionInfo>>((uint64_t)(a1 + 2), v6);
  }
  else {
    uint64_t v7 = 0;
  }
  unint64_t v10 = v7;
  long long v11 = &v7[40 * v3];
  unint64_t v13 = &v7[40 * v6];
  std::allocator<MIOFunctionInfo>::construct[abi:ne180100]<MIOFunctionInfo,MIOFunctionInfo const&>((uint64_t)(a1 + 2), v11, a2);
  uint8x8_t v12 = v11 + 40;
  std::vector<MIOFunctionInfo>::__swap_out_circular_buffer(a1, &v10);
  uint64_t v8 = a1[1];
  std::__split_buffer<MIOFunctionInfo>::~__split_buffer(&v10);
  return v8;
}

void sub_1DC052AA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<MIOFunctionInfo>::~__split_buffer((void **)va);
  _Unwind_Resume(a1);
}

id std::allocator<MIOFunctionInfo>::construct[abi:ne180100]<MIOFunctionInfo,MIOFunctionInfo const&>(uint64_t a1, void *a2, id *a3)
{
  *a2 = *a3;
  a2[1] = a3[1];
  a2[2] = a3[2];
  a2[3] = a3[3];
  id result = a3[4];
  a2[4] = result;
  return result;
}

uint64_t std::vector<MIOFunctionInfo>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MIOFunctionInfo>,std::reverse_iterator<MIOFunctionInfo*>,std::reverse_iterator<MIOFunctionInfo*>,std::reverse_iterator<MIOFunctionInfo*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MIOFunctionInfo>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(40 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<MIOFunctionInfo>,std::reverse_iterator<MIOFunctionInfo*>,std::reverse_iterator<MIOFunctionInfo*>,std::reverse_iterator<MIOFunctionInfo*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  std::string v14[2] = &v17;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      long long v9 = *(_OWORD *)(a3 - 40);
      a3 -= 40;
      *(_OWORD *)a3 = 0uLL;
      *(_OWORD *)(v8 - 40) = v9;
      v8 -= 40;
      long long v10 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(a3 + 16) = 0uLL;
      *(_OWORD *)(v8 + 16) = v10;
      uint64_t v11 = *(void *)(a3 + 32);
      *(void *)(a3 + 32) = 0;
      *(void *)(v8 + 32) = v11;
      v7 -= 40;
    }
    while (a3 != a5);
    *((void *)&v17 + 1) = v8;
    uint64_t v12 = v17;
  }
  char v15 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MIOFunctionInfo>,std::reverse_iterator<MIOFunctionInfo*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v14);
  return v12;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<MIOFunctionInfo>,std::reverse_iterator<MIOFunctionInfo*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<MIOFunctionInfo>,std::reverse_iterator<MIOFunctionInfo*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<MIOFunctionInfo>,std::reverse_iterator<MIOFunctionInfo*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *(void ***)(a1[2] + 8);
  uint64_t v2 = *(void ***)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      std::allocator<MIOFunctionInfo>::destroy[abi:ne180100](v3, v1);
      v1 += 5;
    }
    while (v1 != v2);
  }
}

void std::allocator<MIOFunctionInfo>::destroy[abi:ne180100](uint64_t a1, void **a2)
{
  uint64_t v3 = *a2;
}

void **std::__split_buffer<MIOFunctionInfo>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<MIOFunctionInfo>::clear[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 40;
    std::allocator<MIOFunctionInfo>::destroy[abi:ne180100](v4, (void **)(i - 40));
  }
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::__deallocate_node(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::__deallocate_node(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,MIOFunctionInfo>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void parseNeuralNetworkWeightParams(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  int v4 = 0;
  int v5 = 5;
  MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v3);
}

void sub_1DC053184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, char a16)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }

  _Unwind_Resume(a1);
}

void parseNeuralNetworkLSTMWeightParams(uint64_t a1, void *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v3);
}

void sub_1DC0539E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, char a14)
{
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }

  _Unwind_Resume(a1);
}

__CFString *prettyProtoFieldName(NSString *a1, NSString *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a2;
  if ([(NSString *)v3 length])
  {
    int v5 = v3;
    if ([(NSString *)v4 length] && [(__CFString *)v5 hasPrefix:v4])
    {
      uint64_t v6 = [(__CFString *)v5 substringFromIndex:[(NSString *)v4 length]];

      int v5 = (__CFString *)v6;
    }
    if ([(__CFString *)v5 length])
    {
      uint64_t v7 = [(__CFString *)v5 substringToIndex:1];
      uint64_t v8 = [v7 uppercaseString];

      long long v9 = [(__CFString *)v5 substringFromIndex:1];
      long long v10 = [v8 stringByAppendingString:v9];

      int v5 = v10;
      uint64_t v11 = v5;
    }
    else
    {
      uint64_t v11 = &stru_1F362A748;
    }
  }
  else
  {
    uint64_t v11 = &stru_1F362A748;
  }

  return v11;
}

void sub_1DC053BE0(_Unwind_Exception *a1)
{
  uint64_t v6 = v5;

  _Unwind_Resume(a1);
}

void parseNeuralNetworkAndUpdateLayerHistogram(CodedInputStream *a1, void *a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v3 = a2;
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  memset(v16, 0, sizeof(v16));
  int v17 = 1065353216;
  long long v18 = 0u;
  long long v19 = 0u;
  id v20 = 0;
  parseNeuralNetworkSpecification(a1, v21, (ModelParserWorkspace *)v16);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v4 = v21[1];
  uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v23 count:16];
  if (v5)
  {
    uint64_t v6 = *(void *)v13;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v4);
        }
        uint64_t v8 = [*(id *)(*((void *)&v12 + 1) + 8 * v7) layerHistogram];
        v10[0] = MEMORY[0x1E4F143A8];
        v10[1] = 3221225472;
        v10[2] = ___ZL41parseNeuralNetworkAndUpdateLayerHistogramRN6google8protobuf2io16CodedInputStreamEP19NSMutableDictionaryIP8NSStringP8NSNumberE_block_invoke;
        v10[3] = &unk_1E6C2BB28;
        id v11 = v3;
        [v8 enumerateKeysAndObjectsUsingBlock:v10];

        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = [v4 countByEnumeratingWithState:&v12 objects:v23 count:16];
    }
    while (v5);
  }

  std::__hash_table<std::__hash_value_type<std::string,MIOFunctionInfo>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,MIOFunctionInfo>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,MIOFunctionInfo>>>::~__hash_table((uint64_t)v16);
  uint64_t v9 = v22;
  uint64_t v22 = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *(void *)&v16[0] = &v21[3];
  std::vector<MIOFunctionInfo>::__destroy_vector::operator()[abi:ne180100]((void ***)v16);
}

void sub_1DC053E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  ModelParserWorkspace::~ModelParserWorkspace(&a23);
  MIOModelSpecificInfo::~MIOModelSpecificInfo((MIOModelSpecificInfo *)&a33);

  _Unwind_Resume(a1);
}

void std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3617118;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617118;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::operator()()
{
  uint64_t v1 = *MEMORY[0x1E4F143B8];
  MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v0);
}

void sub_1DC054034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, char a14)
{
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void _ZNSt3__110__function6__funcIZZL30parseNeuralNetworkWeightParamsRN6google8protobuf2io16CodedInputStreamEP14NSMutableArrayIP8NSStringEENK3__0clIS5_EEDaRT_EUlxE_NS_9allocatorISH_EEFvxEED0Ev()
{
}

void *_ZNKSt3__110__function6__funcIZZL30parseNeuralNetworkWeightParamsRN6google8protobuf2io16CodedInputStreamEP14NSMutableArrayIP8NSStringEENK3__0clIS5_EEDaRT_EUlxE_NS_9allocatorISH_EEFvxEE7__cloneEv(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F36173D8;
  result[1] = v3;
  return result;
}

uint64_t _ZNKSt3__110__function6__funcIZZL30parseNeuralNetworkWeightParamsRN6google8protobuf2io16CodedInputStreamEP14NSMutableArrayIP8NSStringEENK3__0clIS5_EEDaRT_EUlxE_NS_9allocatorISH_EEFvxEE7__cloneEPNS0_6__baseISK_EE(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F36173D8;
  a2[1] = v2;
  return result;
}

uint64_t _ZNSt3__110__function6__funcIZZL30parseNeuralNetworkWeightParamsRN6google8protobuf2io16CodedInputStreamEP14NSMutableArrayIP8NSStringEENK3__0clIS5_EEDaRT_EUlxE_NS_9allocatorISH_EEFvxEEclEOx(uint64_t result, void *a2)
{
  **(_DWORD **)(result + 8) = *a2;
  return result;
}

uint64_t _ZNKSt3__110__function6__funcIZZL30parseNeuralNetworkWeightParamsRN6google8protobuf2io16CodedInputStreamEP14NSMutableArrayIP8NSStringEENK3__0clIS5_EEDaRT_EUlxE_NS_9allocatorISH_EEFvxEE6targetERKSt9type_info(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](a2, (uint64_t)&_ZTIZZL30parseNeuralNetworkWeightParamsRN6google8protobuf2io16CodedInputStreamEP14NSMutableArrayIP8NSStringEENK3__0clIS2_EEDaRT_EUlxE_))
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *_ZNKSt3__110__function6__funcIZZL30parseNeuralNetworkWeightParamsRN6google8protobuf2io16CodedInputStreamEP14NSMutableArrayIP8NSStringEENK3__0clIS5_EEDaRT_EUlxE_NS_9allocatorISH_EEFvxEE11target_typeEv()
{
  return &_ZTIZZL30parseNeuralNetworkWeightParamsRN6google8protobuf2io16CodedInputStreamEP14NSMutableArrayIP8NSStringEENK3__0clIS2_EEDaRT_EUlxE_;
}

void std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3617170;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617170;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t result)
{
  **(_DWORD **)(result + 8) = 4 * (**(_DWORD **)(result + 8) != 5);
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F36171C8;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F36171C8;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t result)
{
  uint64_t v1 = *(int **)(result + 8);
  if (*v1 == 5) {
    int v2 = 1;
  }
  else {
    int v2 = 4;
  }
  int *v1 = v2;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3617220;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617220;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t result)
{
  uint64_t v1 = *(int **)(result + 8);
  if (*v1 == 5) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  int *v1 = v2;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3617278;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617278;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t result)
{
  uint64_t v1 = *(int **)(result + 8);
  if (*v1 == 5) {
    int v2 = 3;
  }
  else {
    int v2 = 4;
  }
  int *v1 = v2;
  return result;
}

uint64_t std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4,std::allocator<parseNeuralNetworkWeightParams(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  int v2 = operator new(0x18uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  void *v2 = &unk_1F3616778;
  v2[1] = v3;
  v2[2] = v4;
  return v2;
}

id std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  *a2 = &unk_1F3616778;
  a2[1] = v3;
  id result = v4;
  a2[2] = result;
  return result;
}

void std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

uint64_t std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a1 + 8))(a2, *(void *)(a1 + 16));
}

uint64_t std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableArray<NSString *> *),std::placeholders::__ph<1> const&,NSMutableArray<NSString *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13>,void ()(long long)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13>,void ()(long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616DA8;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13>,void ()(long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616DA8;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13>,void ()(long long)>::operator()(uint64_t a1, void *a2)
{
  if (*a2) {
    uint64_t v2 = @"Deconvolution";
  }
  else {
    uint64_t v2 = @"Convolution";
  }
  objc_storeStrong(*(id **)(a1 + 8), v2);
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13>,void ()(long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_13>,void ()(long long)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14>,void ()(long long)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14>,void ()(long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616E00;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14>,void ()(long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616E00;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14>,void ()(long long)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  switch(*a2)
  {
    case 0:
      id v4 = @"Sqrt";
      break;
    case 1:
      id v4 = @"Rsqrt";
      break;
    case 2:
      id v4 = @"Inverse";
      break;
    case 3:
      id v4 = @"Power";
      break;
    case 4:
      id v4 = @"Exp";
      break;
    case 5:
      id v4 = @"Log";
      break;
    case 6:
      id v4 = @"Abs";
      break;
    case 7:
      id v4 = @"Threshold";
      break;
    default:
      if (v3 == 0xFFFFFFFF80000000 || v3 == 0x7FFFFFFF) {
        id v4 = @"<Unspecified>";
      }
      else {
        id v4 = 0;
      }
      break;
  }
  **(void **)(a1 + 8) = [@"Unary" stringByAppendingString:v4];
  return MEMORY[0x1F41817F8]();
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14>,void ()(long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_14>,void ()(long long)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15>,void ()(long long)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15>,void ()(long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616E58;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15>,void ()(long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616E58;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15>,void ()(long long)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  switch(*a2)
  {
    case 0:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"Sum";
      goto LABEL_18;
    case 1:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"Avg";
      goto LABEL_18;
    case 2:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"Prod";
      goto LABEL_18;
    case 3:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"LogSum";
      goto LABEL_18;
    case 4:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"SumSquare";
      goto LABEL_18;
    case 5:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"L1";
      goto LABEL_18;
    case 6:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"L2";
      goto LABEL_18;
    case 7:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"Max";
      goto LABEL_18;
    case 8:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"Min";
      goto LABEL_18;
    case 9:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"Argmax";
      goto LABEL_18;
    default:
      if (v2 != 0xFFFFFFFF80000000 && v2 != 0x7FFFFFFF) {
        return;
      }
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"<Unspecified>";
LABEL_18:
      *uint64_t v3 = v5;

      return;
  }
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15>,void ()(long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_15>,void ()(long long)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16>,void ()(long long)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16>,void ()(long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616EB0;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16>,void ()(long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616EB0;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16>,void ()(long long)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2 > 0)
  {
    if (v2 == 1)
    {
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"BiLinear";
      goto LABEL_10;
    }
    if (v2 != 0x7FFFFFFF) {
      return;
    }
LABEL_7:
    uint64_t v3 = *(void ***)(a1 + 8);
    id v4 = *v3;
    uint64_t v5 = @"<Unspecified>";
    goto LABEL_10;
  }
  if (v2 == 0xFFFFFFFF80000000) {
    goto LABEL_7;
  }
  if (!v2)
  {
    uint64_t v3 = *(void ***)(a1 + 8);
    id v4 = *v3;
    uint64_t v5 = @"NearestNeighbor";
LABEL_10:
    *uint64_t v3 = v5;
  }
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16>,void ()(long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_16>,void ()(long long)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17>,void ()(long long)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17>,void ()(long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616F08;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17>,void ()(long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616F08;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17>,void ()(long long)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2 <= 0)
  {
    if (v2 != 0xFFFFFFFF80000000)
    {
      if (v2) {
        return;
      }
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"Max";
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  switch(v2)
  {
    case 1:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"Average";
      goto LABEL_12;
    case 2:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"L2";
      goto LABEL_12;
    case 0x7FFFFFFFLL:
LABEL_9:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"<Unspecified>";
LABEL_12:
      *uint64_t v3 = v5;

      break;
  }
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17>,void ()(long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_17>,void ()(long long)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18>,void ()(long long)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18>,void ()(long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616F60;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18>,void ()(long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616F60;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18>,void ()(long long)>::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2 <= 0)
  {
    if (v2 != 0xFFFFFFFF80000000)
    {
      if (v2) {
        return;
      }
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"SpaceToDepth";
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  switch(v2)
  {
    case 1:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"DepthToSpace";
      goto LABEL_12;
    case 2:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"PixelShuffle";
      goto LABEL_12;
    case 0x7FFFFFFFLL:
LABEL_9:
      uint64_t v3 = *(void ***)(a1 + 8);
      id v4 = *v3;
      uint64_t v5 = @"<Unspecified>";
LABEL_12:
      *uint64_t v3 = v5;

      break;
  }
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18>,void ()(long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_18>,void ()(long long)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19>,void ()(long long)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19>,void ()(long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616FB8;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19>,void ()(long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616FB8;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19>,void ()(long long)>::operator()(uint64_t result, void *a2)
{
  **(unsigned char **)(result + 8) = *a2 != 0;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19>,void ()(long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_19>,void ()(long long)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20>,void ()(long long)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20>,void ()(long long)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3617010;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20>,void ()(long long)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617010;
  a2[1] = v2;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20>,void ()(long long)>::operator()(uint64_t result, void *a2)
{
  **(unsigned char **)(result + 8) = *a2 != 0;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20>,void ()(long long)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_20>,void ()(long long)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616930;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616930;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationLinear";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_0>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616988;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616988;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationReLU";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_1>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F36169E0;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F36169E0;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationLeakyReLU";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_2>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616A38;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616A38;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationThresholdedReLU";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_3>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  void *v2 = &unk_1F3616A90;
  v2[1] = v3;
  v2[2] = v4;
  return v2;
}

id std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  *a2 = &unk_1F3616A90;
  a2[1] = v3;
  id result = v4;
  a2[2] = result;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v3 = *v2;
  void *v2 = @"ActivationPReLU";

  id v4 = *(id *)(a1 + 16);
  MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v5);
}

void sub_1DC055888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, char a14)
{
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }

  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_4>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616AE8;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616AE8;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationTanh";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_5>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616B40;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616B40;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationScaledTanh";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_6>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616B98;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616B98;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationSigmoid";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_7>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616BF0;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616BF0;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationSigmoidHard";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_8>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616C48;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616C48;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationELU";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_9>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616CA0;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616CA0;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationSoftsign";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_10>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11>,void ()(google::protobuf::io::CodedInputStream &)>::~__func()
{
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = &unk_1F3616CF8;
  result[1] = v3;
  return result;
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3616CF8;
  a2[1] = v2;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v1 = *(void ***)(a1 + 8);
  uint64_t v2 = *v1;
  int *v1 = @"ActivationSoftplus";
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_11>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  void *v2 = &unk_1F3616D50;
  v2[1] = v3;
  v2[2] = v4;
  return v2;
}

id std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  *a2 = &unk_1F3616D50;
  a2[1] = v3;
  id result = v4;
  a2[2] = result;
  return result;
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

void std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v3 = *v2;
  void *v2 = @"ActivationParametricSoftplus";

  id v4 = *(id *)(a1 + 16);
  MLAssetIO::ProtoWireFormatCallbackParser::ProtoWireFormatCallbackParser((MLAssetIO::ProtoWireFormatCallbackParser *)v5);
}

void sub_1DC0562B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, char a14)
{
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }

  _Unwind_Resume(a1);
}

uint64_t std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12,std::allocator<parseLayerParams(int,google::protobuf::io::CodedInputStream &,NSString * {__autoreleasing}*,NSDictionary<NSString *,NSNumber *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*,NSArray<NSString *> * {__autoreleasing}*)::$_12>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void ___ZL41parseNeuralNetworkAndUpdateLayerHistogramRN6google8protobuf2io16CodedInputStreamEP19NSMutableDictionaryIP8NSStringP8NSNumberE_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  uint64_t v6 = NSNumber;
  uint64_t v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:v9];
  uint64_t v8 = objc_msgSend(v6, "numberWithInteger:", objc_msgSend(v5, "integerValue") + objc_msgSend(v7, "integerValue"));
  [*(id *)(a1 + 32) setObject:v8 forKeyedSubscript:v9];
}

void sub_1DC056410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void MIOModelSpecificInfo::~MIOModelSpecificInfo(MIOModelSpecificInfo *this)
{
  uint64_t v2 = *((void *)this + 6);
  *((void *)this + 6) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void **)((char *)this + 24);
  std::vector<MIOFunctionInfo>::__destroy_vector::operator()[abi:ne180100](&v3);
}

void std::vector<MIOFunctionInfo>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    id v4 = (void **)v1[1];
    id v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 5;
        std::allocator<MIOFunctionInfo>::destroy[abi:ne180100]((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      id v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  return a1;
}

void std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::~__func(uint64_t a1)
{
  JUMPOUT(0x1E0198C00);
}

void *std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1)
{
  uint64_t v2 = operator new(0x18uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  void *v2 = &unk_1F3628240;
  v2[1] = v3;
  v2[2] = v4;
  return v2;
}

id std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::__clone(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  *a2 = &unk_1F3628240;
  a2[1] = v3;
  id result = v4;
  a2[2] = result;
  return result;
}

void std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::destroy(uint64_t a1)
{
}

void std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::destroy_deallocate(id *a1)
{
  operator delete(a1);
}

uint64_t std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::operator()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a1 + 8))(a2, *(void *)(a1 + 16));
}

uint64_t std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void *std::__function::__func<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>,std::allocator<std::__bind<void (&)(google::protobuf::io::CodedInputStream &,NSMutableDictionary<NSString *,NSNumber *> *),std::placeholders::__ph<1> const&,NSMutableDictionary<NSString *,NSNumber *> * {__strong}&>>,void ()(google::protobuf::io::CodedInputStream &)>::target_type()
{
}

void *_ZNSt3__115allocate_sharedB8ne180100IN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0xC8uLL);
  id result = _ZNSt3__120__shared_ptr_emplaceIN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEEC2B8ne180100IJES5_Li0EEES5_DpOT_(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_1DC05674C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *_ZNSt3__120__shared_ptr_emplaceIN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEEC2B8ne180100IJES5_Li0EEES5_DpOT_(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &unk_1F3628788;
  CoreML::Specification::ModelDescription::ModelDescription((CoreML::Specification::ModelDescription *)(a1 + 3));
  return a1;
}

void sub_1DC0567A8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<CoreML::Specification::ModelDescription>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628788;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<CoreML::Specification::ModelDescription>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628788;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_emplace<CoreML::Specification::ModelDescription>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t parseMILProgram(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 8))(a1);
}

__CFString *MIOFeatureTypeToString(unint64_t a1)
{
  if (a1 > 8) {
    return @"Unknown";
  }
  else {
    return off_1E6C2BC48[a1];
  }
}

void sub_1DC056938(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC056BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC056EBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  CoreML::Specification::ImageFeatureType_ImageSize::~ImageFeatureType_ImageSize((CoreML::Specification::ImageFeatureType_ImageSize *)va);
  _Unwind_Resume(a1);
}

void sub_1DC056FBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0572A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057374(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05766C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  _Unwind_Resume(a1);
}

void sub_1DC057770(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05796C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057AF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC057D1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057D78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057DF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC057E7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0580A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_1DC0581C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC05825C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0582E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC058338(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0583B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC058468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC0584C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05854C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id NSDictionaryFromModelMetadataSpecification(const CoreML::Specification::Metadata *a1)
{
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  uint64_t v3 = (uint64_t *)*((void *)a1 + 6);
  if (*((char *)v3 + 23) < 0)
  {
    if (!v3[1]) {
      goto LABEL_7;
    }
    uint64_t v3 = (uint64_t *)*v3;
    goto LABEL_6;
  }
  if (*((unsigned char *)v3 + 23))
  {
LABEL_6:
    id v4 = [NSString stringWithUTF8String:v3];
    [v2 setObject:v4 forKeyedSubscript:@"MLModelDescriptionKey"];
  }
LABEL_7:
  id v5 = (uint64_t *)*((void *)a1 + 7);
  if (*((char *)v5 + 23) < 0)
  {
    if (!v5[1]) {
      goto LABEL_13;
    }
    id v5 = (uint64_t *)*v5;
    goto LABEL_12;
  }
  if (*((unsigned char *)v5 + 23))
  {
LABEL_12:
    uint64_t v6 = [NSString stringWithUTF8String:v5];
    [v2 setObject:v6 forKeyedSubscript:@"MLModelVersionStringKey"];
  }
LABEL_13:
  uint64_t v7 = (uint64_t *)*((void *)a1 + 8);
  if (*((char *)v7 + 23) < 0)
  {
    if (!v7[1]) {
      goto LABEL_19;
    }
    uint64_t v7 = (uint64_t *)*v7;
    goto LABEL_18;
  }
  if (*((unsigned char *)v7 + 23))
  {
LABEL_18:
    uint64_t v8 = [NSString stringWithUTF8String:v7];
    [v2 setObject:v8 forKeyedSubscript:@"MLModelAuthorKey"];
  }
LABEL_19:
  id v9 = (uint64_t *)*((void *)a1 + 9);
  if (*((char *)v9 + 23) < 0)
  {
    if (!v9[1]) {
      goto LABEL_25;
    }
    id v9 = (uint64_t *)*v9;
    goto LABEL_24;
  }
  if (*((unsigned char *)v9 + 23))
  {
LABEL_24:
    long long v10 = [NSString stringWithUTF8String:v9];
    [v2 setObject:v10 forKeyedSubscript:@"MLModelLicenseKey"];
  }
LABEL_25:
  if (**((_DWORD **)a1 + 5))
  {
    id v11 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    *((void *)&v19 + 1) = *((void *)a1 + 5);
    google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair>::SearchFrom(&v19, *(void *)(*((void *)&v19 + 1) + 24));
    long long v17 = v19;
    uint64_t v18 = v20;
    while ((void)v17)
    {
      long long v12 = *(uint64_t **)(v17 + 24);
      long long v13 = v12 + 3;
      if (*((char *)v12 + 47) < 0) {
        long long v13 = (void *)*v13;
      }
      long long v14 = objc_msgSend(NSString, "stringWithUTF8String:", v13, v17, v18);
      if (*((char *)v12 + 23) < 0) {
        long long v12 = (uint64_t *)*v12;
      }
      long long v15 = [NSString stringWithUTF8String:v12];
      [v11 setObject:v14 forKeyedSubscript:v15];

      google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(&v17);
    }
    [v2 setObject:v11 forKeyedSubscript:@"MLModelCreatorDefinedKey"];
  }
  return v2;
}

void sub_1DC05891C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id NSArrayFromFeatureDescriptionSpecifications(uint64_t a1)
{
  id v2 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:*(int *)(a1 + 8)];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3) {
    id v4 = (void *)(v3 + 8);
  }
  else {
    id v4 = 0;
  }
  uint64_t v5 = *(int *)(a1 + 8);
  if (v5)
  {
    uint64_t v6 = 8 * v5;
    do
    {
      uint64_t v7 = [[MIOFeatureDescription alloc] initWithSpecification:*v4];
      [v2 addObject:v7];

      ++v4;
      v6 -= 8;
    }
    while (v6);
  }
  return v2;
}

void sub_1DC058A24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC058BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair>::SearchFrom(void *a1, unint64_t a2)
{
  id v4 = (void *)a1[1];
  uint64_t v5 = v4[3];
  unint64_t v6 = v4[1];
  if (v5 != v6 && !*(void *)(v4[4] + 8 * v5))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 401);
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: m_->index_of_first_non_null_ == m_->num_buckets_ || m_->table_[m_->index_of_first_non_null_] != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (google::protobuf::internal::LogMessage *)v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    id v4 = (void *)a1[1];
    unint64_t v6 = v4[1];
  }
  *a1 = 0;
  if (v6 <= a2)
  {
LABEL_9:
    a1[2] = a2;
  }
  else
  {
    uint64_t v8 = v4[4];
    while (1)
    {
      id v9 = *(void **)(v8 + 8 * a2);
      if (v9) {
        break;
      }
      if (v6 == ++a2)
      {
        a2 = v6;
        goto LABEL_9;
      }
    }
    long long v10 = *(void **)(v8 + 8 * (a2 ^ 1));
    a1[2] = a2;
    if (v9 == v10)
    {
      if (!v9[3])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 410);
        id v11 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: !tree->empty(): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v12, (google::protobuf::internal::LogMessage *)v11);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
      }
      *a1 = *(void *)(*v9 + 32);
    }
    else
    {
      *a1 = v9;
    }
  }
}

void sub_1DC058D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(void *a1)
{
  uint64_t v2 = *(void *)(*a1 + 32);
  if (v2) {
    goto LABEL_2;
  }
  long long v15 = 0;
  BOOL v3 = google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::revalidate_if_necessary((uint64_t)a1, (uint64_t *)&v15);
  uint64_t v4 = a1[2];
  if (v3)
  {
    unint64_t v5 = v4 + 1;
LABEL_15:
    google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::SearchFrom(a1, v5);
    return a1;
  }
  if (v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 434);
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (bucket_index_ & 1) == (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    uint64_t v4 = a1[2];
  }
  uint64_t v7 = *(void *)(*(void *)(a1[1] + 32) + 8 * v4);
  uint64_t v8 = (uint64_t)v15;
  id v9 = (void *)v15[1];
  if (v9)
  {
    do
    {
      long long v10 = v9;
      id v9 = (void *)*v9;
    }
    while (v9);
  }
  else
  {
    do
    {
      long long v10 = *(void **)(v8 + 16);
      BOOL v11 = *v10 == v8;
      uint64_t v8 = (uint64_t)v10;
    }
    while (!v11);
  }
  long long v15 = v10;
  if (v10 == (void *)(v7 + 8))
  {
    unint64_t v5 = v4 + 2;
    goto LABEL_15;
  }
  uint64_t v2 = v10[4];
LABEL_2:
  *a1 = v2;
  return a1;
}

void sub_1DC058E44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::revalidate_if_necessary(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(const void ***)a1;
  if (!*(void *)a1 || (uint64_t v5 = *(void *)(a1 + 8)) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 459);
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: node_ != NULL && m_ != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (google::protobuf::internal::LogMessage *)v6);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    uint64_t v4 = *(const void ***)a1;
    uint64_t v5 = *(void *)(a1 + 8);
  }
  uint64_t v7 = *(void *)(a1 + 16) & (*(void *)(v5 + 8) - 1);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = *(void *)(v5 + 32);
  uint64_t v9 = *(void *)(v8 + 8 * v7);
  if ((const void **)v9 == v4) {
    return 1;
  }
  if (v9 && v9 != *(void *)(v8 + 8 * (v7 ^ 1)))
  {
    while (1)
    {
      uint64_t v9 = *(void *)(v9 + 32);
      if (!v9) {
        break;
      }
      if ((const void **)v9 == v4) {
        return 1;
      }
    }
  }
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(v5, v4, a2, (uint64_t)v15);
  std::string::size_type v10 = v15[0].__r_.__value_.__r.__words[2];
  *(void *)(a1 + 16) = *((void *)&v15[0].__r_.__value_.__l + 2);
  uint64_t v11 = *(void *)(*(void *)(a1 + 8) + 32);
  uint64_t v12 = *(void *)(v11 + 8 * v10);
  return !v12 || v12 != *(void *)(v11 + 8 * (v10 ^ 1));
}

void sub_1DC058F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::SearchFrom(void *a1, unint64_t a2)
{
  uint64_t v4 = (void *)a1[1];
  uint64_t v5 = v4[3];
  unint64_t v6 = v4[1];
  if (v5 != v6 && !*(void *)(v4[4] + 8 * v5))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 401);
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: m_->index_of_first_non_null_ == m_->num_buckets_ || m_->table_[m_->index_of_first_non_null_] != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (google::protobuf::internal::LogMessage *)v7);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    uint64_t v4 = (void *)a1[1];
    unint64_t v6 = v4[1];
  }
  *a1 = 0;
  if (v6 <= a2)
  {
LABEL_9:
    a1[2] = a2;
  }
  else
  {
    uint64_t v8 = v4[4];
    while (1)
    {
      uint64_t v9 = *(void **)(v8 + 8 * a2);
      if (v9) {
        break;
      }
      if (v6 == ++a2)
      {
        a2 = v6;
        goto LABEL_9;
      }
    }
    std::string::size_type v10 = *(void **)(v8 + 8 * (a2 ^ 1));
    a1[2] = a2;
    if (v9 == v10)
    {
      if (!v9[3])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map.h", 410);
        uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: !tree->empty(): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v12, (google::protobuf::internal::LogMessage *)v11);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
      }
      *a1 = *(void *)(*v9 + 32);
    }
    else
    {
      *a1 = v9;
    }
  }
}

void sub_1DC0590AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1DC05920C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&a9);

  _Unwind_Resume(a1);
}

void sub_1DC059580(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, void *a5, void *a6, ...)
{
  va_start(va, a6);

  MIOModelInfo::~MIOModelInfo((MIOModelInfo *)va);
  if (a2 == 1)
  {
    uint64_t v11 = __cxa_begin_catch(a1);
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
      -[MIOSpecificationModel initWithMessageStream:parserContext:error:]((uint64_t)v11);
    }
    if (a5)
    {
      char v12 = (void *)MEMORY[0x1E4F28C58];
      *(void *)(v8 - 112) = *MEMORY[0x1E4F28568];
      char v13 = NSString;
      (*(void (**)(void *))(*(void *)v11 + 16))(v11);
      char v14 = [v13 stringWithFormat:@"Failed to parse the model specification. Error: %s"];
      *(void *)(v8 - 104) = v14;
      long long v15 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v8 - 104 forKeys:v8 - 112 count:1];
      *a5 = [v12 errorWithDomain:@"com.apple.mlassetio" code:1 userInfo:v15];
    }
    __cxa_end_catch();
    JUMPOUT(0x1DC059530);
  }

  _Unwind_Resume(a1);
}

void MIOModelInfo::~MIOModelInfo(MIOModelInfo *this)
{
  uint64_t v2 = *((void *)this + 12);
  *((void *)this + 12) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v4 = (void **)((char *)this + 72);
  std::vector<MIOFunctionInfo>::__destroy_vector::operator()[abi:ne180100](&v4);

  BOOL v3 = (std::__shared_weak_count *)*((void *)this + 2);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_1DC0598D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC059968(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC059F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  CoreML::Specification::ModelDescription::~ModelDescription((CoreML::Specification::ModelDescription *)&a10);
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&a36);
  google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)(v39 - 216));
  google::protobuf::io::FileOutputStream::~FileOutputStream((google::protobuf::io::FileOutputStream *)(v39 - 184));

  _Unwind_Resume(a1);
}

unint64_t google::protobuf::MessageLite::ByteSize(google::protobuf::MessageLite *this)
{
  unint64_t v1 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 96))(this);
  if (v1 >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/generated_message_util.h", 212);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (size) <= (static_cast<size_t>(2147483647)): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (google::protobuf::internal::LogMessage *)v2);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return v1;
}

void sub_1DC05A050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_1DC05A29C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05A370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05A4A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::vector<MIOFunctionInfo>::__vdeallocate(void ***a1)
{
  unint64_t v1 = *a1;
  if (*a1)
  {
    BOOL v3 = a1[1];
    char v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v3 -= 5;
        std::allocator<MIOFunctionInfo>::destroy[abi:ne180100]((uint64_t)(a1 + 2), v3);
      }
      while (v3 != v1);
      char v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_1DC05A930(_Unwind_Exception *a1)
{
  uint64_t v5 = v3;

  _Unwind_Resume(a1);
}

void sub_1DC05A9F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AA64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AACC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AB28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AB84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05ABF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AC60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05ACBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AD38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05ADC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AE48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AED0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AF24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05AFD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05B038(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05B0D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05B79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, void *a16, void *a17, uint64_t a18, void *a19, void *a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51)
{
  _Unwind_Resume(a1);
}

void sub_1DC05BE0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05CFBC()
{
  __cxa_end_catch();
  JUMPOUT(0x1DC05D0CCLL);
}

void sub_1DC05CFF4()
{
}

void sub_1DC05CFFC()
{
  JUMPOUT(0x1DC05D0E4);
}

void sub_1DC05D008()
{
}

void sub_1DC05D010()
{
}

void sub_1DC05D01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D028()
{
  JUMPOUT(0x1DC05D08CLL);
}

void sub_1DC05D034()
{
  JUMPOUT(0x1DC05D08CLL);
}

void sub_1DC05D070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,void *a25)
{
  JUMPOUT(0x1DC05D0CCLL);
}

void sub_1DC05D150(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D1AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D208(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D2E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D368(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D3F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D478(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D5C4(_Unwind_Exception *a1)
{
  char v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1DC05D644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05D718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void extractExternalFeatureDescriptionsFromDictionary(NSDictionary *a1, MIOMutableModelDescription *a2, NSString *a3)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = a1;
  unint64_t v6 = a2;
  uint64_t v7 = a3;
  uint64_t v36 = v5;
  [(NSDictionary *)v5 objectForKeyedSubscript:@"Inputs"];
  long long v55 = 0u;
  long long v56 = 0u;
  long long v53 = 0u;
  uint64_t v40 = v54 = 0u;
  uint64_t v8 = [v40 allKeys];
  uint64_t v9 = [v8 countByEnumeratingWithState:&v53 objects:v60 count:16];
  if (v9)
  {
    uint64_t v10 = *(void *)v54;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v54 != v10) {
          objc_enumerationMutation(v8);
        }
        uint64_t v12 = *(void *)(*((void *)&v53 + 1) + 8 * i);
        char v13 = [v40 objectForKeyedSubscript:v12];
        char v14 = [v13 objectForKeyedSubscript:@"MLFeatureShortDescription"];
        [(MIOMutableModelDescription *)v6 setShortDescription:v14 forInputFeatureWithName:v12 functionName:v7];
      }
      uint64_t v9 = [v8 countByEnumeratingWithState:&v53 objects:v60 count:16];
    }
    while (v9);
  }

  [(NSDictionary *)v36 objectForKeyedSubscript:@"States"];
  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  v39 = long long v50 = 0u;
  long long v15 = [v39 allKeys];
  uint64_t v16 = [v15 countByEnumeratingWithState:&v49 objects:v59 count:16];
  if (v16)
  {
    uint64_t v17 = *(void *)v50;
    do
    {
      for (uint64_t j = 0; j != v16; ++j)
      {
        if (*(void *)v50 != v17) {
          objc_enumerationMutation(v15);
        }
        uint64_t v19 = *(void *)(*((void *)&v49 + 1) + 8 * j);
        uint64_t v20 = [v39 objectForKeyedSubscript:v19];
        unint64_t v21 = [v20 objectForKeyedSubscript:@"MLFeatureShortDescription"];
        [(MIOMutableModelDescription *)v6 setShortDescription:v21 forStateFeatureWithName:v19 functionName:v7];
      }
      uint64_t v16 = [v15 countByEnumeratingWithState:&v49 objects:v59 count:16];
    }
    while (v16);
  }

  [(NSDictionary *)v36 objectForKeyedSubscript:@"Outputs"];
  long long v47 = 0u;
  long long v48 = 0u;
  long long v45 = 0u;
  v38 = long long v46 = 0u;
  uint64_t v22 = [v38 allKeys];
  uint64_t v23 = [v22 countByEnumeratingWithState:&v45 objects:v58 count:16];
  if (v23)
  {
    uint64_t v24 = *(void *)v46;
    do
    {
      for (uint64_t k = 0; k != v23; ++k)
      {
        if (*(void *)v46 != v24) {
          objc_enumerationMutation(v22);
        }
        uint64_t v26 = *(void *)(*((void *)&v45 + 1) + 8 * k);
        std::string::size_type v27 = [v38 objectForKeyedSubscript:v26];
        uint64_t v28 = [v27 objectForKeyedSubscript:@"MLFeatureShortDescription"];
        [(MIOMutableModelDescription *)v6 setShortDescription:v28 forOutputFeatureWithName:v26 functionName:v7];
      }
      uint64_t v23 = [v22 countByEnumeratingWithState:&v45 objects:v58 count:16];
    }
    while (v23);
  }

  uint64_t v29 = [(NSDictionary *)v36 objectForKeyedSubscript:@"TrainingInputs"];
  long long v43 = 0u;
  long long v44 = 0u;
  long long v41 = 0u;
  long long v42 = 0u;
  obuint64_t j = [v29 allKeys];
  uint64_t v30 = [obj countByEnumeratingWithState:&v41 objects:v57 count:16];
  if (v30)
  {
    uint64_t v31 = *(void *)v42;
    do
    {
      for (uint64_t m = 0; m != v30; ++m)
      {
        if (*(void *)v42 != v31) {
          objc_enumerationMutation(obj);
        }
        uint64_t v33 = *(void *)(*((void *)&v41 + 1) + 8 * m);
        uint64_t v34 = [v29 objectForKeyedSubscript:v33];
        std::string::size_type v35 = [v34 objectForKeyedSubscript:@"MLFeatureShortDescription"];
        [(MIOMutableModelDescription *)v6 setShortDescription:v35 forTrainingInputFeatureWithName:v33];
      }
      uint64_t v30 = [obj countByEnumeratingWithState:&v41 objects:v57 count:16];
    }
    while (v30);
  }
}

void sub_1DC05DC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

id featureDescriptionDictionaryFromFeatureDescriptionArray(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v11 = a1;
  unint64_t v1 = (void *)[MEMORY[0x1E4F1CC08] mutableCopy];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = v11;
  uint64_t v3 = [v2 countByEnumeratingWithState:&v12 objects:v18 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v13 != v4) {
          objc_enumerationMutation(v2);
        }
        unint64_t v6 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        uint64_t v16 = @"MLFeatureShortDescription";
        uint64_t v7 = [v6 shortDescription];
        uint64_t v17 = v7;
        uint64_t v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v17 forKeys:&v16 count:1];
        uint64_t v9 = [v6 name];
        [v1 setObject:v8 forKeyedSubscript:v9];
      }
      uint64_t v3 = [v2 countByEnumeratingWithState:&v12 objects:v18 count:16];
    }
    while (v3);
  }

  return v1;
}

void sub_1DC05DF28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_3(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1DC05E4BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05E5F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05E6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  MIOFunctionInfo::~MIOFunctionInfo((MIOFunctionInfo *)&a11);
  if (a2 == 1)
  {
    if (![(MIOModelLayer *)a1 initWithMessageStream:(uint64_t)v18 error:&a11])
    {
      unint64_t v21 = (void *)MEMORY[0x1E4F28C58];
      a16 = *MEMORY[0x1E4F28568];
      uint64_t v22 = NSString;
      (*(void (**)(uint64_t))(*(void *)a11 + 16))(a11);
      uint64_t v23 = [v22 stringWithFormat:@"Failed to parse the Layer specification. Error: %s"];
      a17 = v23;
      uint64_t v24 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&a17 forKeys:&a16 count:1];
      void *v18 = [v21 errorWithDomain:@"com.apple.mlassetio" code:1 userInfo:v24];
    }
    __cxa_end_catch();
    JUMPOUT(0x1DC05E6ACLL);
  }

  _Unwind_Resume(a1);
}

void sub_1DC05E8B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05E9C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC05EA74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id MIOFindProtobufFields(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v3;
  id v6 = v4;
  if ([v6 count])
  {
    id v7 = v5;
    uint64_t v8 = [v7 bytes];
    int v9 = [v7 length];
    v13[0] = v8;
    v13[1] = v8 + v9;
    std::string v13[2] = 0;
    int v14 = v9;
    uint64_t v15 = 0;
    __int16 v16 = 0;
    int v17 = v9;
    uint64_t v18 = 0x7FFFFFFF00000000;
    int v19 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
    int v20 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
    char v21 = 1;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v10 = objc_opt_new();
    parseStreamForFieldNumberPath((uint64_t)v13, v6, 0, v10);
    id v11 = v10;

    google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)v13);
  }
  else
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
      MIOFindProtobufFields_cold_1();
    }
    id v11 = 0;
  }

  return v11;
}

void parseStreamForFieldNumberPath(uint64_t a1, void *a2, int a3, void *a4)
{
  id v36 = a2;
  id v7 = a4;
  uint64_t v8 = a3;
  uint64_t v9 = (a3 + 1);
  while (1)
  {
    while (1)
    {
      uint64_t v10 = *(char **)a1;
      unint64_t v11 = *(void *)(a1 + 8);
      if (*(void *)a1 == v11 && (*(_DWORD *)(a1 + 44) || *(_DWORD *)(a1 + 24) == *(_DWORD *)(a1 + 40)))
      {
        *(_DWORD *)(a1 + 32) = 0;
        *(unsigned char *)(a1 + 36) = 1;
        goto LABEL_30;
      }
      if ((unint64_t)v10 >= v11)
      {
        LODWORD(TagFallback) = 0;
      }
      else
      {
        unint64_t TagFallback = *v10;
        if ((*v10 & 0x80000000) == 0)
        {
          *(_DWORD *)(a1 + 32) = TagFallback;
          *(void *)a1 = v10 + 1;
          goto LABEL_10;
        }
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a1, TagFallback);
      *(_DWORD *)(a1 + 32) = TagFallback;
LABEL_10:
      long long v13 = [v36 objectAtIndexedSubscript:v8];
      int v14 = [v13 intValue];

      if (TagFallback >> 3 == v14) {
        break;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a1, (google::protobuf::io::CodedInputStream *)TagFallback, v15) & 1) == 0)
      {
        exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E0198850](exception, "Failed to skip a field.");
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
    }
    uint64_t v16 = [v36 count];
    int v18 = TagFallback & 7;
    if (v16 - 1 == v8) {
      break;
    }
    if (v18 != 2)
    {
      uint64_t v32 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E0198850](v32, "The message must have the length delimited wire type.");
      __cxa_throw(v32, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    int v19 = *(char **)a1;
    if (*(void *)a1 >= *(void *)(a1 + 8) || *v19 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a1);
      if (VarintSizeAsIntFallback < 0)
      {
        uint64_t v33 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E0198850](v33, "Failed to read length.");
        __cxa_throw(v33, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v19;
      *(void *)a1 = v19 + 1;
    }
    int v21 = google::protobuf::io::CodedInputStream::PushLimit((google::protobuf::io::CodedInputStream *)a1, VarintSizeAsIntFallback);
    parseStreamForFieldNumberPath(a1, v36, v9, v7);
    google::protobuf::io::CodedInputStream::PopLimit(a1, v21);
  }
  unint64_t v22 = *(void *)(a1 + 8);
  if (v18 == 2)
  {
    uint64_t v23 = *(char **)a1;
    if (*(void *)a1 >= v22 || *v23 < 0)
    {
      unsigned int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a1);
      if ((v24 & 0x80000000) != 0)
      {
        std::string::size_type v35 = __cxa_allocate_exception(0x10uLL);
        MEMORY[0x1E0198850](v35, "Failed to read length.");
        __cxa_throw(v35, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      uint64_t v25 = *(unsigned __int8 **)a1;
      unint64_t v22 = *(void *)(a1 + 8);
    }
    else
    {
      unsigned int v24 = *v23;
      uint64_t v25 = (unsigned __int8 *)(v23 + 1);
      *(void *)a1 = v25;
    }
    uint64_t v30 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithRange:", *(_DWORD *)(a1 + 24) - *(_DWORD *)(a1 + 44) + (int)v25 - (int)v22, v24);
    [v7 addObject:v30];

    google::protobuf::io::CodedInputStream::Skip((google::protobuf::io::CodedInputStream *)a1, v24);
  }
  else
  {
    int v26 = *(_DWORD *)(a1 + 24);
    int v27 = *(_DWORD *)a1;
    int v28 = *(_DWORD *)(a1 + 44);
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a1, (google::protobuf::io::CodedInputStream *)TagFallback, v17) & 1) == 0)
    {
      uint64_t v34 = __cxa_allocate_exception(0x10uLL);
      MEMORY[0x1E0198850](v34, "Failed to skip a field.");
      __cxa_throw(v34, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    uint64_t v29 = objc_msgSend(MEMORY[0x1E4F29238], "valueWithRange:", v26 - v28 + v27 - (int)v22, *(_DWORD *)(a1 + 24)- *(_DWORD *)(a1 + 44)+ *(_DWORD *)a1- *(_DWORD *)(a1 + 8)- (uint64_t)(v26 - v28 + v27 - (int)v22));
    [v7 addObject:v29];
  }
LABEL_30:
}

void sub_1DC05F760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  __cxa_free_exception(v11);

  _Unwind_Resume(a1);
}

void MIOFindProtobufFields_cold_1()
{
  *(_WORD *)v0 = 0;
  _os_log_error_impl(&dword_1DC036000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "fieldNumberPath has no components.", v0, 2u);
}

void MIOFindProtobufFields_cold_2(void *a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  unint64_t v1 = __cxa_begin_catch(a1);
  if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR))
  {
    uint64_t v2 = (*(uint64_t (**)(void *))(*(void *)v1 + 16))(v1);
    int v3 = 136315138;
    uint64_t v4 = v2;
    _os_log_error_impl(&dword_1DC036000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to parse the model specification. Error: %s", (uint8_t *)&v3, 0xCu);
  }
}

void sub_1DC05FCFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DC060008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  _Unwind_Resume(a1);
}

void sub_1DC0604C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void JsonMapImpl::JsonMapImpl(JsonMapImpl *this)
{
  *(unsigned char *)this = 0;
  *((void *)this + 1) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)this);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)this);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)v2, 0, 0, 1, 2);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=((uint64_t)this, (uint64_t)v2);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v2);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v3, v2[0]);
}

void sub_1DC060AC4(_Unwind_Exception *a1)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(v1);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  return a1;
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(uint64_t a1, uint64_t a2)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a2);
  char v4 = *(unsigned char *)a1;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)a2 = v4;
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v5;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  return a1;
}

uint64_t **nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(uint64_t **a1)
{
  return a1;
}

uint64_t JsonMapImpl::JsonMapImpl(uint64_t a1, void *a2)
{
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  JsonMapImpl::deserialize((unsigned char *)a1, a2);
  return a1;
}

void sub_1DC060C00(_Unwind_Exception *a1)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(v1);
  _Unwind_Resume(a1);
}

void *JsonMapImpl::deserialize(unsigned char *a1, void *a2)
{
  if (*(_DWORD *)((char *)a2 + *(void *)(*a2 - 24) + 32))
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
    MEMORY[0x1E0198850](exception, "Input stream is not valid");
    __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  return nlohmann::operator>>(a2, a1);
}

void sub_1DC060C98(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

BOOL JsonMapImpl::getKeys(uint64_t a1, uint64_t *a2)
{
  nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::iter_impl(v9, a1);
  nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::set_begin(v9);
  while (1)
  {
    nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::iter_impl(v8, a1);
    nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::set_end(v8);
    BOOL result = nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator==<nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,(decltype(nullptr))0>(v9, v8);
    if (result) {
      break;
    }
    uint64_t v5 = (long long *)nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::key(v9);
    unint64_t v6 = a2[1];
    if (v6 >= a2[2])
    {
      uint64_t v7 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a2, v5);
    }
    else
    {
      std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a2, v5);
      uint64_t v7 = v6 + 24;
    }
    a2[1] = v7;
    nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator++(v9);
  }
  return result;
}

uint64_t nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::key(void *a1)
{
  if (!*a1) {
    nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::key();
  }
  if (*(unsigned char *)*a1 != 1)
  {
    exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
    std::string::basic_string[abi:ne180100]<0>(v3, "cannot use key() for non-object iterators");
    nlohmann::detail::invalid_iterator::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(207, (uint64_t)v3, exception);
  }
  return a1[1] + 32;
}

void sub_1DC060E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

unsigned __int8 **nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator++(unsigned __int8 **result)
{
  if (!*result) {
    nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator++();
  }
  int v1 = **result;
  if (v1 == 2)
  {
    result[2] += 16;
  }
  else if (v1 == 1)
  {
    uint64_t v2 = result[1];
    int v3 = (unsigned __int8 *)*((void *)v2 + 1);
    if (v3)
    {
      do
      {
        char v4 = v3;
        int v3 = *(unsigned __int8 **)v3;
      }
      while (v3);
    }
    else
    {
      do
      {
        char v4 = (unsigned __int8 *)*((void *)v2 + 2);
        BOOL v5 = *(void *)v4 == (void)v2;
        uint64_t v2 = v4;
      }
      while (!v5);
    }
    result[1] = v4;
  }
  else
  {
    ++result[3];
  }
  return result;
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::at(uint64_t a1, const void **a2)
{
  if (*(unsigned char *)a1 != 1)
  {
    exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
    BOOL v5 = (char *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::type_name((char *)a1);
    std::string::basic_string[abi:ne180100]<0>(&v8, v5);
    unint64_t v6 = std::string::insert(&v8, 0, "cannot use at() with ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    std::string::size_type v10 = v6->__r_.__value_.__r.__words[2];
    long long v9 = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(304, (uint64_t)&v9, exception);
  }
  return std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::at(*(void *)(a1 + 8), a2);
}

void sub_1DC06102C(uint64_t a1, std::string *a2, long long a3)
{
}

void sub_1DC0610CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v21 & 1) == 0)
    {
LABEL_8:
      __cxa_end_catch();
      _Unwind_Resume(a1);
    }
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v22);
  goto LABEL_8;
}

void sub_1DC061130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

std::string *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::get<std::string,std::string,0>@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return nlohmann::detail::from_json<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(a1, a2);
}

void sub_1DC0611C0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void JsonMapImpl::getObject(uint64_t a1, const void **a2)
{
  uint64_t v2 = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::at(a1, a2);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)v3, v2);
  operator new();
}

void sub_1DC06128C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t *a11)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&a11);
  MEMORY[0x1E0198C00](v11, 0x1022C40B06DCE69);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&a9);
  _Unwind_Resume(a1);
}

void JsonMapImpl::setString(unsigned __int8 *a1, const void **a2, uint64_t a3)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<std::string const&,std::string,0>((uint64_t)v6, a3);
  BOOL v5 = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator[](a1, a2);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=((uint64_t)v5, (uint64_t)v6);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v6);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v7, v6[0]);
}

void sub_1DC061340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
}

uint64_t *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator[](unsigned __int8 *a1, const void **a2)
{
  int v4 = *a1;
  if (!*a1)
  {
    *a1 = 1;
    BOOL v5 = operator new(0x18uLL);
    std::string v5[2] = 0;
    v5[1] = 0;
    void *v5 = v5 + 1;
    *((void *)a1 + 1) = v5;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)a1);
    int v4 = *a1;
  }
  if (v4 != 1)
  {
    exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
    long long v9 = (char *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::type_name((char *)a1);
    std::string::basic_string[abi:ne180100]<0>(&v12, v9);
    std::string::size_type v10 = std::string::insert(&v12, 0, "cannot use operator[] with a string argument with ");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v10->__r_.__value_.__r.__words[2];
    long long v13 = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(305, (uint64_t)&v13, exception);
  }
  unint64_t v6 = (uint64_t **)*((void *)a1 + 1);
  *(void *)&long long v13 = a2;
  return std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v6, a2, (uint64_t)&std::piecewise_construct, (long long **)&v13)+ 7;
}

void sub_1DC06147C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void JsonMapImpl::setObject(unsigned __int8 *a1, const void **a2, uint64_t *a3)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)v6, *a3);
  BOOL v5 = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator[](a1, a2);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=((uint64_t)v5, (uint64_t)v6);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v6);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v7, v6[0]);
}

void sub_1DC06154C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
}

void *nlohmann::operator>>(void *a1, unsigned char *a2)
{
  v8[19] = *(void **)MEMORY[0x1E4F143B8];
  v5[0] = a1;
  v5[1] = *(void *)((char *)a1 + *(void *)(*a1 - 24) + 40);
  v6[3] = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::parser<nlohmann::detail::input_stream_adapter>((uint64_t)v5, (uint64_t)v6, 1, 0, (uint64_t)v7);
  nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::parse((uint64_t)v7, 0, a2);
  nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::~lexer(v8);
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100](v7);
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100](v6);
  nlohmann::detail::input_stream_adapter::~input_stream_adapter((nlohmann::detail::input_stream_adapter *)v5);
  return a1;
}

void sub_1DC061638(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v7 = va_arg(va2, void);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::~lexer((void **)(v2 + 40));
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100]((uint64_t *)va2);
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100]((uint64_t *)va1);
  nlohmann::detail::input_stream_adapter::~input_stream_adapter((nlohmann::detail::input_stream_adapter *)va);
  _Unwind_Resume(a1);
}

uint64_t JsonMapImpl::serialize(uint64_t a1, uint64_t *a2)
{
  *(uint64_t *)((char *)a2 + *(void *)(*a2 - 24) + 24) = 4;
  uint64_t v2 = nlohmann::operator<<(a2, a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v2 + *(void *)(*v2 - 24)));
  int v3 = std::locale::use_facet(&v5, MEMORY[0x1E4FBA258]);
  ((void (*)(const std::locale::facet *, uint64_t))v3->__vftable[2].~facet_0)(v3, 10);
  std::locale::~locale(&v5);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_1DC06173C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

uint64_t *nlohmann::operator<<(uint64_t *a1, uint64_t a2)
{
  v15[80] = *(void ***)MEMORY[0x1E4F143B8];
  uint64_t v4 = *a1;
  std::locale v5 = (char *)a1 + *(void *)(*a1 - 24);
  uint64_t v6 = *((void *)v5 + 3);
  *((void *)v5 + 3) = 0;
  uint64_t v7 = (std::__shared_weak_count *)operator new(0x28uLL);
  v7->__shared_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36287C0;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628188;
  v7[1].__shared_owners_ = (uint64_t)a1;
  std::string v12 = v7 + 1;
  long long v13 = v7;
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  std::string v8 = (const std::ios_base *)((char *)a1 + *(void *)(v4 - 24));
  std::ios_base::fmtflags fmtflags = v8[1].__fmtflags_;
  if (fmtflags == -1)
  {
    std::ios_base::getloc(v8);
    uint64_t v10 = std::locale::use_facet(&v14, MEMORY[0x1E4FBA258]);
    std::ios_base::fmtflags fmtflags = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
    std::locale::~locale(&v14);
    v8[1].__fmtflags_ = fmtflags;
  }
  nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::serializer((uint64_t)v15, (uint64_t)&v12, (char)fmtflags, 0);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(v15, a2, v6 > 0, 0, v6 & ~(v6 >> 63), 0);
  nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~serializer((uint64_t)v15);
  return a1;
}

void sub_1DC061934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::locale a11, char a12)
{
  std::locale::~locale(&a11);
  std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  _Unwind_Resume(a1);
}

void JsonMap::JsonMap(JsonMap *this)
{
}

void sub_1DC0619C0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1022C40B06DCE69);
  _Unwind_Resume(a1);
}

void JsonMap::JsonMap()
{
}

void sub_1DC061A40(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1022C40B06DCE69);
  _Unwind_Resume(a1);
}

void JsonMap::~JsonMap(uint64_t ***this)
{
  uint64_t v1 = *this;
  *this = 0;
  if (v1) {
    std::default_delete<JsonMapImpl>::operator()[abi:ne180100]((uint64_t)this, v1);
  }
}

BOOL JsonMap::hasKey(uint64_t a1, const void **a2)
{
  return **(unsigned char **)a1 == 1
      && std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__count_unique<std::string>(*(void *)(*(void *)a1 + 8), a2) != 0;
}

BOOL JsonMap::getKeys(uint64_t *a1, uint64_t *a2)
{
  return JsonMapImpl::getKeys(*a1, a2);
}

std::string *JsonMap::getString@<X0>(uint64_t *a1@<X0>, const void **a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v4 = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::at(*a1, a2);
  return nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::get<std::string,std::string,0>(v4, a3);
}

void JsonMap::getObject(uint64_t *a1, const void **a2)
{
}

void sub_1DC061B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t **a10)
{
  uint64_t v11 = a10;
  a10 = 0;
  if (v11) {
    std::default_delete<JsonMapImpl>::operator()[abi:ne180100]((uint64_t)&a10, v11);
  }
  _Unwind_Resume(exception_object);
}

void JsonMap::setString(unsigned __int8 **a1, const void **a2, uint64_t a3)
{
}

void JsonMap::setObject(unsigned __int8 **a1, const void **a2, uint64_t **a3)
{
  int v3 = *a1;
  uint64_t v4 = **a3;
  **a3 = 0;
  uint64_t v6 = (uint64_t **)v4;
  JsonMapImpl::setObject(v3, a2, (uint64_t *)&v6);
  std::locale v5 = v6;
  uint64_t v6 = 0;
  if (v5) {
    std::default_delete<JsonMapImpl>::operator()[abi:ne180100]((uint64_t)&v6, v5);
  }
}

void sub_1DC061BF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t **a10)
{
  uint64_t v11 = a10;
  a10 = 0;
  if (v11) {
    std::default_delete<JsonMapImpl>::operator()[abi:ne180100]((uint64_t)&a10, v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t JsonMap::serialize(uint64_t *a1, uint64_t *a2)
{
  return JsonMapImpl::serialize(*a1, a2);
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(uint64_t result)
{
  switch(*(unsigned char *)result)
  {
    case 1:
      if (*(void *)(result + 8)) {
        return result;
      }
      uint64_t v1 = "m_type != value_t::object || m_value.object != nullptr";
      int v2 = 18026;
      break;
    case 2:
      if (*(void *)(result + 8)) {
        return result;
      }
      uint64_t v1 = "m_type != value_t::array || m_value.array != nullptr";
      int v2 = 18027;
      break;
    case 3:
      if (*(void *)(result + 8)) {
        return result;
      }
      uint64_t v1 = "m_type != value_t::string || m_value.string != nullptr";
      int v2 = 18028;
      break;
    case 8:
      if (*(void *)(result + 8)) {
        return result;
      }
      uint64_t v1 = "m_type != value_t::binary || m_value.binary != nullptr";
      int v2 = 18029;
      break;
    default:
      return result;
  }
  __assert_rtn("assert_invariant", "json.hpp", v2, v1);
}

void nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(uint64_t **a1, int a2)
{
  uint64_t v24 = 0;
  unint64_t v25 = 0;
  unint64_t v26 = 0;
  int v3 = a2 - 1;
  if (a2 == 1)
  {
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::reserve(&v24, (*a1)[2]);
    uint64_t v4 = (uint64_t)(*a1 + 1);
    std::locale v5 = (void *)**a1;
    if (v5 != (void *)v4)
    {
      unint64_t v6 = v25;
      do
      {
        if (v6 >= v26)
        {
          unint64_t v6 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__push_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(&v24, (uint64_t)(v5 + 7));
        }
        else
        {
          *(unsigned char *)unint64_t v6 = *((unsigned char *)v5 + 56);
          *(void *)(v6 + 8) = v5[8];
          nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)(v5 + 7));
          *((unsigned char *)v5 + 56) = 0;
          unsigned char v5[8] = 0;
          nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v6);
          v6 += 16;
        }
        unint64_t v25 = v6;
        uint64_t v7 = (void *)v5[1];
        if (v7)
        {
          do
          {
            std::string v8 = v7;
            uint64_t v7 = (void *)*v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            std::string v8 = (void *)v5[2];
            BOOL v9 = *v8 == (void)v5;
            std::locale v5 = v8;
          }
          while (!v9);
        }
        std::locale v5 = v8;
      }
      while (v8 != (void *)v4);
    }
  }
  else if (a2 == 2)
  {
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::reserve(&v24, ((*a1)[1] - **a1) >> 4);
    std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,std::back_insert_iterator<std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>((uint64_t)&v22, **a1, (*a1)[1], &v24);
  }
  for (unint64_t i = v25; v24 != v25; unint64_t i = v25)
  {
    char v12 = *(unsigned char *)(i - 16);
    uint64_t v11 = i - 16;
    LOBYTE(v22) = v12;
    uint64_t v23 = *(uint64_t **)(v11 + 8);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
    *(unsigned char *)uint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v22);
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__base_destruct_at_end[abi:ne180100]((uint64_t)&v24, v25 - 16);
    if (v22 == 1)
    {
      long long v13 = v23;
      std::locale v14 = v23 + 1;
      unsigned int v15 = (void *)*v23;
      if ((uint64_t *)*v23 != v23 + 1)
      {
        unint64_t v16 = v25;
        do
        {
          if (v16 >= v26)
          {
            unint64_t v16 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__push_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(&v24, (uint64_t)(v15 + 7));
          }
          else
          {
            *(unsigned char *)unint64_t v16 = *((unsigned char *)v15 + 56);
            *(void *)(v16 + 8) = v15[8];
            nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)(v15 + 7));
            *((unsigned char *)v15 + 56) = 0;
            v15[8] = 0;
            nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v16);
            v16 += 16;
          }
          unint64_t v25 = v16;
          unsigned int v17 = (void *)v15[1];
          if (v17)
          {
            do
            {
              int v18 = v17;
              unsigned int v17 = (void *)*v17;
            }
            while (v17);
          }
          else
          {
            do
            {
              int v18 = (void *)v15[2];
              BOOL v9 = *v18 == (void)v15;
              unsigned int v15 = v18;
            }
            while (!v9);
          }
          unsigned int v15 = v18;
        }
        while (v18 != v14);
        long long v13 = v23;
      }
      std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::destroy((uint64_t)v13, (char *)v13[1]);
      *long long v13 = (uint64_t)(v13 + 1);
      std::string v13[2] = 0;
      v13[1] = 0;
    }
    else if (v22 == 2)
    {
      std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,std::back_insert_iterator<std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>((uint64_t)&v27, *v23, v23[1], &v24);
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::clear[abi:ne180100](v23);
    }
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v22);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v23, v22);
  }
  switch(v3)
  {
    case 0:
      std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::destroy((uint64_t)*a1, (char *)(*a1)[1]);
      goto LABEL_41;
    case 1:
      int v22 = (void **)*a1;
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__destroy_vector::operator()[abi:ne180100](&v22);
      goto LABEL_41;
    case 2:
      int v19 = *a1;
      if ((*((char *)*a1 + 23) & 0x80000000) == 0) {
        goto LABEL_42;
      }
      int v20 = (void *)*v19;
      break;
    case 7:
      int v19 = *a1;
      int v21 = (void *)**a1;
      if (!v21) {
        goto LABEL_42;
      }
      v19[1] = (uint64_t)v21;
      int v20 = v21;
      break;
    default:
      goto LABEL_43;
  }
  operator delete(v20);
LABEL_41:
  int v19 = *a1;
LABEL_42:
  operator delete(v19);
LABEL_43:
  int v22 = (void **)&v24;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__destroy_vector::operator()[abi:ne180100](&v22);
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::reserve(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (a2 > (v4 - *a1) >> 4)
  {
    if (a2 >> 60) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(result, a2);
    v7[1] = v7[0] + v5;
    std::string v7[2] = v7[0] + v5;
    std::string::size_type v7[3] = v7[0] + 16 * v6;
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v7);
    return std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v7);
  }
  return result;
}

void sub_1DC0620E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void *std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::clear[abi:ne180100](void *result)
{
  uint64_t v1 = result;
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  if (v2 != *result)
  {
    uint64_t v4 = v2 - 16;
    uint64_t v5 = (unsigned __int8 *)(v2 - 16);
    do
    {
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v4);
      unsigned int v6 = *v5;
      v5 -= 16;
      uint64_t result = (void *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(v4 + 8, v6);
      BOOL v7 = v4 == v3;
      uint64_t v4 = (uint64_t)v5;
    }
    while (!v7);
  }
  v1[1] = v3;
  return result;
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  std::string v14[2] = &v17;
  char v15 = 0;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    uint64_t v9 = a3 - 16;
    do
    {
      *(unsigned char *)(v7 - 16) = *(unsigned char *)v9;
      uint64_t v10 = v7 - 16;
      *(void *)(v10 + 8) = *(void *)(v9 + 8);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v9);
      *(unsigned char *)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v10);
      uint64_t v7 = *((void *)&v17 + 1) - 16;
      *((void *)&v17 + 1) -= 16;
      BOOL v11 = v9 == a5;
      v9 -= 16;
    }
    while (!v11);
    uint64_t v12 = v17;
  }
  char v15 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v14);
  return v12;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>::operator()[abi:ne180100]((uint64_t *)a1);
  }
  return a1;
}

uint64_t std::_AllocatorDestroyRangeReverse<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>::operator()[abi:ne180100](uint64_t *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v15 = v3;
  uint64_t v16 = v2;
  uint64_t v17 = v3;
  uint64_t v18 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  uint64_t v13 = v6;
  return std::__allocator_destroy[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>,std::reverse_iterator<std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>>(v4, (uint64_t)v14, (uint64_t)v9);
}

uint64_t std::__allocator_destroy[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>,std::reverse_iterator<std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (unint64_t i = *(unsigned __int8 **)(a2 + 32); i != *(unsigned __int8 **)(a3 + 32); *(void *)(a2 + 32) = i)
  {
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)i);
    uint64_t result = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(i + 8, *i);
    unint64_t i = (unsigned __int8 *)(*(void *)(a2 + 32) + 16);
  }
  return result;
}

uint64_t std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__destruct_at_end[abi:ne180100](uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2 != a2)
  {
    uint64_t v4 = result;
    do
    {
      *(void *)(v4 + 16) = v2 - 16;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v2 - 16);
      uint64_t result = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(v2 - 8, *(unsigned __int8 *)(v2 - 16));
      uint64_t v2 = *(void *)(v4 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

uint64_t std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,std::back_insert_iterator<std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    unint64_t v7 = a4[1];
    do
    {
      if (v7 >= a4[2])
      {
        unint64_t v7 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__push_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(a4, v5);
      }
      else
      {
        std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>((uint64_t)a4, v5);
        v7 += 16;
      }
      a4[1] = v7;
      v5 += 16;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(unsigned char *)uint64_t v4 = *(unsigned char *)a2;
  *(void *)(v4 + 8) = *(void *)(a2 + 8);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a2);
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  uint64_t result = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v4);
  *(void *)(a1 + 8) = v4 + 16;
  return result;
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__push_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 4;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 3 > v5) {
    unint64_t v5 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v9 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v15[4] = a1 + 2;
  uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v7, v9);
  uint64_t v11 = (uint64_t)&v10[16 * v4];
  v15[0] = v10;
  v15[1] = v11;
  v15[3] = &v10[16 * v12];
  *(unsigned char *)uint64_t v11 = *(unsigned char *)a2;
  *(void *)(v11 + 8) = *(void *)(a2 + 8);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a2);
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  std::string v15[2] = v11 + 16;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v15);
  uint64_t v13 = a1[1];
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v15);
  return v13;
}

void sub_1DC062660(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__base_destruct_at_end[abi:ne180100](uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 8);
  if (v4 != a2)
  {
    uint64_t v5 = v4 - 16;
    uint64_t v6 = (unsigned __int8 *)(v4 - 16);
    do
    {
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v5);
      unsigned int v7 = *v6;
      v6 -= 16;
      uint64_t result = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(v5 + 8, v7);
      BOOL v8 = v5 == a2;
      uint64_t v5 = (uint64_t)v6;
    }
    while (!v8);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

void std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::destroy(a1, *(void *)a2);
    std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::destroy(a1, *((void *)a2 + 1));
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)(a2 + 56));
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(a2 + 64, a2[56]);
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,0>(uint64_t a1)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1 + 24);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy((uint64_t **)(a1 + 32), *(unsigned __int8 *)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      uint64_t v6 = (uint64_t)(v4 - 16);
      unsigned int v7 = v4 - 16;
      do
      {
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v6);
        unsigned int v8 = *v7;
        v7 -= 16;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(v6 + 8, v8);
        BOOL v9 = v6 == (void)v2;
        uint64_t v6 = (uint64_t)v7;
      }
      while (!v9);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

unsigned char *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::json_value(unsigned char *a1, int a2)
{
  switch(a2)
  {
    case 1:
      uint64_t v3 = operator new(0x18uLL);
      void v3[2] = 0;
      v3[1] = 0;
      *uint64_t v3 = v3 + 1;
      goto LABEL_8;
    case 2:
      uint64_t v3 = operator new(0x18uLL);
      v3[1] = 0;
      void v3[2] = 0;
      *uint64_t v3 = 0;
      goto LABEL_8;
    case 3:
      uint64_t v3 = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::string,char const(&)[1]>("");
      goto LABEL_8;
    case 4:
      *a1 = 0;
      return a1;
    case 8:
      uint64_t v3 = operator new(0x20uLL);
      v3[1] = 0;
      void v3[2] = 0;
      *uint64_t v3 = 0;
      *((_WORD *)v3 + 12) = 0;
LABEL_8:
      *(void *)a1 = v3;
      break;
    default:
      *(void *)a1 = 0;
      break;
  }
  return a1;
}

void *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::string,char const(&)[1]>(char *a1)
{
  uint64_t v2 = operator new(0x18uLL);
  std::string::basic_string[abi:ne180100]<0>(v2, a1);
  return v2;
}

void sub_1DC062974(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void nlohmann::detail::exception::name(int a1@<W1>, std::string *a2@<X8>)
{
  std::operator+<char>();
  uint64_t v4 = std::string::append(&v12, ".");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, a1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  unsigned int v8 = std::string::append(&v13, (const std::string::value_type *)p_p, size);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  uint64_t v10 = std::string::append(&v14, "] ");
  *a2 = *v10;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
}

void sub_1DC062AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (*(char *)(v26 - 41) < 0) {
    operator delete(*(void **)(v26 - 64));
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

nlohmann::detail::exception *nlohmann::detail::exception::exception(nlohmann::detail::exception *this, int a2, const char *a3)
{
  *(void *)this = &unk_1F36281B8;
  *((_DWORD *)this + 2) = a2;
  MEMORY[0x1E0198850]((char *)this + 16, a3);
  return this;
}

void sub_1DC062B5C(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

const char *nlohmann::detail::exception::what(const std::runtime_error *this)
{
  return std::runtime_error::what(this + 1);
}

void nlohmann::detail::exception::~exception(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
  JUMPOUT(0x1E0198C00);
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5)
{
  uint64_t v8 = a2;
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if (a3)
  {
    uint64_t v10 = 24 * a3;
    uint64_t v11 = a2;
    while (1)
    {
      uint64_t v12 = *(void *)(v11 + 16) ? *(void *)(v11 + 16) : v11;
      if (*(unsigned char *)v12 != 2
        || *(void *)(*(void *)(v12 + 8) + 8) - **(void **)(v12 + 8) != 32
        || *(unsigned char *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator[](v12, 0) != 3)
      {
        break;
      }
      v11 += 24;
      v10 -= 24;
      if (!v10) {
        goto LABEL_10;
      }
    }
    int v13 = 0;
    if ((a4 & 1) == 0)
    {
LABEL_17:
      if (a5 == 2) {
        int v16 = 0;
      }
      else {
        int v16 = v13;
      }
      if (a5 != 1) {
        LOBYTE(v13) = 1;
      }
      if ((v13 & 1) == 0)
      {
        exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
        std::string::basic_string[abi:ne180100]<0>(&v20, "cannot create object from initializer list");
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)v19);
        nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(301, (uint64_t)&v20, exception);
      }
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_12;
    }
  }
  else
  {
LABEL_10:
    int v13 = 1;
    if ((a4 & 1) == 0) {
      goto LABEL_17;
    }
  }
  if (!v13)
  {
LABEL_24:
    *(unsigned char *)a1 = 2;
    uint64_t v20 = v8;
    v19[0] = v8 + 24 * a3;
    *(void *)(a1 + 8) = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*>(&v20, v19);
    goto LABEL_25;
  }
LABEL_12:
  *(unsigned char *)a1 = 1;
  std::string v14 = operator new(0x18uLL);
  std::string v14[2] = 0;
  v14[1] = 0;
  *std::string v14 = v14 + 1;
  *(void *)(a1 + 8) = v14;
  if (a3)
  {
    uint64_t v15 = 24 * a3;
    do
    {
      nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::moved_or_copied(v8, (uint64_t)&v20);
      std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_unique_key_args<std::string,std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(*(uint64_t ***)(a1 + 8), *(const void ***)(*v21 + 8), *(long long **)(*v21 + 8), *v21 + 16);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v20);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v21, v20);
      v8 += 24;
      v15 -= 24;
    }
    while (v15);
  }
LABEL_25:
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  return a1;
}

void sub_1DC062E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
}

void nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(int a1@<W0>, uint64_t a2@<X1>, nlohmann::detail::exception *a3@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(&v18, "type_error");
  nlohmann::detail::exception::name(a1, &v20);
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  if ((v17 & 0x80u) == 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    std::string::size_type v7 = v17;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)__p[1];
  }
  uint64_t v8 = std::string::append(&v20, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    uint64_t v11 = (const std::string::value_type *)a2;
  }
  else {
    uint64_t v11 = *(const std::string::value_type **)a2;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v12 = *(void *)(a2 + 8);
  }
  int v13 = std::string::append(&v21, v11, v12);
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  int64_t v23 = v13->__r_.__value_.__r.__words[2];
  long long v22 = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (v19 < 0) {
    operator delete(v18);
  }
  if (v23 >= 0) {
    uint64_t v15 = (const char *)&v22;
  }
  else {
    uint64_t v15 = (const char *)v22;
  }
  nlohmann::detail::exception::exception(a3, a1, v15);
  *(void *)a3 = &unk_1F36280E8;
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)v22);
  }
}

void sub_1DC062FF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  _Unwind_Resume(exception_object);
}

void nlohmann::detail::type_error::~type_error(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
  JUMPOUT(0x1E0198C00);
}

uint64_t nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::moved_or_copied@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    return nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json(a2, v3);
  }
  else
  {
    *(unsigned char *)a2 = *(unsigned char *)a1;
    *(void *)(a2 + 8) = *(void *)(a1 + 8);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
    *(unsigned char *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    return nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a2);
  }
}

void *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0x18uLL);
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((*a2 - *a1) >> 3);
  v4[1] = 0;
  std::string v4[2] = 0;
  void *v4 = 0;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__init_with_size[abi:ne180100]<nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*>(v4, v5, v6, v7);
  return v4;
}

void sub_1DC0631A8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator[](uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)a1 != 2)
  {
    exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
    uint64_t v5 = (char *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::type_name((char *)a1);
    std::string::basic_string[abi:ne180100]<0>(&v8, v5);
    uint64_t v6 = std::string::insert(&v8, 0, "cannot use operator[] with a numeric argument with ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    std::string::size_type v10 = v6->__r_.__value_.__r.__words[2];
    long long v9 = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(305, (uint64_t)&v9, exception);
  }
  return **(void **)(a1 + 8) + 16 * a2;
}

void sub_1DC063290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

const char *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::type_name(char *a1)
{
  unint64_t v1 = *a1;
  if (v1 > 9) {
    return "number";
  }
  else {
    return off_1E6C2BCF8[v1];
  }
}

uint64_t *std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_unique_key_args<std::string,std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(uint64_t **a1, const void **a2, long long *a3, uint64_t a4)
{
  long long v7 = (uint64_t **)std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__find_equal<std::string>((uint64_t)a1, &v13, a2);
  std::string v8 = *v7;
  if (!*v7)
  {
    long long v9 = v7;
    std::string v8 = (uint64_t *)operator new(0x48uLL);
    v11[1] = a1 + 1;
    std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::pair[abi:ne180100]<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,0>((uint64_t)(v8 + 4), a3, a4);
    char v12 = 1;
    std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__insert_node_at(a1, v13, v9, v8);
    v11[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>>>>::reset[abi:ne180100]((uint64_t)v11, 0);
  }
  return v8;
}

void *std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__find_equal<std::string>(uint64_t a1, void *a2, const void **a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        std::string v8 = (void *)v4;
        long long v9 = (const void **)(v4 + 32);
        if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v7, a3, (const void **)(v4 + 32)))break; {
        uint64_t v4 = *v8;
        }
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v7, v9, a3)) {
        break;
      }
      uint64_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    std::string v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

uint64_t std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::pair[abi:ne180100]<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,0>(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v5 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v5;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)a3;
  uint64_t v6 = a1 + 24;
  *(void *)(a1 + 32) = *(void *)(a3 + 8);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a3);
  *(unsigned char *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v6);
  return a1;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,0>((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void *std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__init_with_size[abi:ne180100]<nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*>(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__vallocate[abi:ne180100](result, a4);
    uint64_t result = (void *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1DC063614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*,nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const*,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  std::string v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,0>(v4, v6);
      v6 += 24;
      uint64_t v4 = v11 + 16;
      v11 += 16;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1DC063708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,0>(uint64_t a1, uint64_t a2)
{
  nlohmann::detail::json_ref<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::moved_or_copied(a2, (uint64_t)v4);
  *(unsigned char *)a1 = v4[0];
  *(void *)(a1 + 8) = v5;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v4);
  v4[0] = 0;
  long long v5 = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v4);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v5, v4[0]);
  return a1;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::__allocator_destroy[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>(*(void *)a1, **(void **)(a1 + 16), **(void **)(a1 + 16), **(void **)(a1 + 8), **(void **)(a1 + 8));
  }
  return a1;
}

void std::__allocator_destroy[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>,std::reverse_iterator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3 != a5)
  {
    uint64_t v6 = a3 - 16;
    uint64_t v7 = (unsigned __int8 *)(a3 - 16);
    do
    {
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v6);
      int v8 = *v7;
      v7 -= 16;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy((uint64_t **)(v6 + 8), v8);
      BOOL v9 = v6 == a5;
      uint64_t v6 = (uint64_t)v7;
    }
    while (!v9);
  }
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a2);
  switch(*(unsigned char *)a1)
  {
    case 1:
      uint64_t v4 = (std::string *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const&>(*(const void ****)(a2 + 8));
      goto LABEL_8;
    case 2:
      uint64_t v4 = (std::string *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const&>(*(uint64_t **)(a2 + 8));
      goto LABEL_8;
    case 3:
      uint64_t v4 = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::string,std::string const&>(*(void *)(a2 + 8));
      goto LABEL_8;
    case 4:
      uint64_t v4 = (std::string *)*(unsigned __int8 *)(a2 + 8);
      goto LABEL_8;
    case 5:
    case 6:
    case 7:
      uint64_t v4 = *(std::string **)(a2 + 8);
      goto LABEL_8;
    case 8:
      uint64_t v4 = (std::string *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<nlohmann::byte_container_with_subtype<std::vector<unsigned char>>,nlohmann::byte_container_with_subtype<std::vector<unsigned char>> const&>(*(void *)(a2 + 8));
LABEL_8:
      *(void *)(a1 + 8) = v4;
      break;
    default:
      break;
  }
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  return a1;
}

uint64_t *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const&>(const void ***a1)
{
  uint64_t v2 = (uint64_t *)operator new(0x18uLL);
  std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::map[abi:ne180100](v2, a1);
  return v2;
}

void sub_1DC063964(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::map[abi:ne180100](uint64_t *a1, const void ***a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *> *,long>>>(a1, *a2, a2 + 1);
  return a1;
}

void sub_1DC0639B8(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::destroy(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::insert[abi:ne180100]<std::__map_const_iterator<std::__tree_const_iterator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *> *,long>>>(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    uint64_t v4 = a2;
    long long v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const&>(v5, v6, v4 + 4, (long long *)v4 + 2);
      uint64_t v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          int v8 = (const void ***)v7;
          uint64_t v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          int v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          uint64_t v4 = (const void **)v8;
        }
        while (!v9);
      }
      uint64_t v4 = (const void **)v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const&>(uint64_t **a1, uint64_t *a2, const void **a3, long long *a4)
{
  uint64_t v6 = std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__find_equal<std::string>(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__construct_node<std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const&>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__insert_node_at(a1, (uint64_t)v12, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

const void **std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__find_equal<std::string>(void *a1, uint64_t *a2, const void ***a3, uint64_t *a4, const void **a5)
{
  BOOL v9 = (const void **)(a1 + 1);
  if (a1 + 1 != a2
    && !google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()((uint64_t)(a1 + 2), a5, (const void **)a2 + 4))
  {
    if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()((uint64_t)(a1 + 2), (const void **)a2 + 4, a5))
    {
      *a3 = (const void **)a2;
      *a4 = (uint64_t)a2;
      return (const void **)a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      long long v14 = (const void **)a2[1];
      do
      {
        uint64_t v15 = v14;
        long long v14 = (const void **)*v14;
      }
      while (v14);
    }
    else
    {
      uint64_t v18 = (const void **)a2;
      do
      {
        uint64_t v15 = (const void **)v18[2];
        BOOL v17 = *v15 == v18;
        uint64_t v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()((uint64_t)(a1 + 2), a5, v15 + 4))goto LABEL_28; {
      uint64_t v13 = *a4;
      }
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (const void **)a2;
    }
    return (const void **)a4;
  }
  if ((uint64_t *)*a1 == a2)
  {
    char v12 = (const void **)a2;
LABEL_16:
    if (*a2)
    {
      *a3 = v12;
      return v12 + 1;
    }
    else
    {
      *a3 = (const void **)a2;
      return (const void **)a2;
    }
  }
  uint64_t v11 = (const void **)*a2;
  if (*a2)
  {
    do
    {
      char v12 = v11;
      uint64_t v11 = (const void **)v11[1];
    }
    while (v11);
  }
  else
  {
    int v16 = a2;
    do
    {
      char v12 = (const void **)v16[2];
      BOOL v17 = *v12 == v16;
      int v16 = (uint64_t *)v12;
    }
    while (v17);
  }
  if (google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()((uint64_t)(a1 + 2), v12 + 4, a5)) {
    goto LABEL_16;
  }
LABEL_28:
  return (const void **)std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__find_equal<std::string>((uint64_t)a1, a3, a5);
}

std::string *std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__construct_node<std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const&>@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x48uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::pair[abi:ne180100]((std::string *)(v6 + 32), a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1DC063CF4(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::pair[abi:ne180100](std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json(&this[1], (char *)a2 + 24);
  return this;
}

void sub_1DC063D68(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>> const&>(uint64_t *a1)
{
  uint64_t v2 = operator new(0x18uLL);
  v2[1] = 0;
  v2[2] = 0;
  void *v2 = 0;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__init_with_size[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>(v2, *a1, a1[1], (a1[1] - *a1) >> 4);
  return v2;
}

void sub_1DC063DCC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__init_with_size[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__vallocate[abi:ne180100](result, a4);
    uint64_t result = (void *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1DC063E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  std::string v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json(v4, v6);
      v6 += 16;
      uint64_t v4 = v11 + 16;
      v11 += 16;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1DC063EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

std::string *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::string,std::string const&>(uint64_t a1)
{
  uint64_t v2 = (std::string *)operator new(0x18uLL);
  uint64_t v3 = v2;
  if (*(char *)(a1 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v2, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&v2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    v2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  return v3;
}

void sub_1DC063F64(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<nlohmann::byte_container_with_subtype<std::vector<unsigned char>>,nlohmann::byte_container_with_subtype<std::vector<unsigned char>> const&>(uint64_t a1)
{
  uint64_t v2 = operator new(0x20uLL);
  v2[1] = 0;
  v2[2] = 0;
  void *v2 = 0;
  std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(v2, *(const void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 8) - *(void *)a1);
  *((_WORD *)v2 + 12) = *(_WORD *)(a1 + 24);
  return v2;
}

void sub_1DC063FC4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    uint64_t result = std::vector<unsigned char>::__vallocate[abi:ne180100](result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1DC064038(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<unsigned char>::__vallocate[abi:ne180100](void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000) != 0) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

uint64_t std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__count_unique<std::string>(uint64_t a1, const void **a2)
{
  uint64_t v2 = *(const void ***)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = a1 + 16;
    uint64_t v5 = 1;
    do
    {
      if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v4, a2, v2 + 4))
      {
        if (!google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare::operator()(v4, v2 + 4, a2)) {
          return v5;
        }
        ++v2;
      }
      uint64_t v2 = (const void **)*v2;
    }
    while (v2);
  }
  return 0;
}

unsigned __int8 **nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::set_begin(unsigned __int8 **result)
{
  uint64_t v1 = *result;
  if (!*result) {
    __assert_rtn("set_begin", "json.hpp", 11268, "m_object != nullptr");
  }
  int v2 = *v1;
  if (*v1)
  {
    if (v2 == 2)
    {
      result[2] = (unsigned __int8 *)**((void **)v1 + 1);
    }
    else if (v2 == 1)
    {
      result[1] = (unsigned __int8 *)**((void **)v1 + 1);
    }
    else
    {
      result[3] = 0;
    }
  }
  else
  {
    result[3] = (unsigned __int8 *)1;
  }
  return result;
}

void *nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::iter_impl(void *result, uint64_t a2)
{
  *uint64_t result = a2;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0x8000000000000000;
  if (!a2) {
    __assert_rtn("iter_impl", "json.hpp", 11182, "m_object != nullptr");
  }
  return result;
}

unsigned __int8 **nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::set_end(unsigned __int8 **result)
{
  uint64_t v1 = *result;
  if (!*result) {
    __assert_rtn("set_end", "json.hpp", 11305, "m_object != nullptr");
  }
  int v2 = *v1;
  if (v2 == 2)
  {
    result[2] = *(unsigned __int8 **)(*((void *)v1 + 1) + 8);
  }
  else if (v2 == 1)
  {
    result[1] = (unsigned __int8 *)(*((void *)v1 + 1) + 8);
  }
  else
  {
    result[3] = (unsigned __int8 *)1;
  }
  return result;
}

BOOL nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator==<nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,(decltype(nullptr))0>(unsigned __int8 **a1, unsigned __int8 **a2)
{
  int v2 = *a1;
  if (*a1 != *a2)
  {
    exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
    std::string::basic_string[abi:ne180100]<0>(v8, "cannot compare iterators of different containers");
    nlohmann::detail::invalid_iterator::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(212, (uint64_t)v8, exception);
  }
  if (!v2) {
    nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator==<nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,(decltype(nullptr))0>();
  }
  int v3 = *v2;
  if (v3 == 2)
  {
    uint64_t v4 = a1[2];
    uint64_t v5 = a2[2];
  }
  else if (v3 == 1)
  {
    uint64_t v4 = a1[1];
    uint64_t v5 = a2[1];
  }
  else
  {
    uint64_t v4 = a1[3];
    uint64_t v5 = a2[3];
  }
  return v4 == v5;
}

void sub_1DC064350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void nlohmann::detail::invalid_iterator::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(int a1@<W0>, uint64_t a2@<X1>, nlohmann::detail::exception *a3@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(&v18, "invalid_iterator");
  nlohmann::detail::exception::name(a1, &v20);
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  if ((v17 & 0x80u) == 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    std::string::size_type v7 = v17;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)__p[1];
  }
  size_t v8 = std::string::append(&v20, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    uint64_t v11 = (const std::string::value_type *)a2;
  }
  else {
    uint64_t v11 = *(const std::string::value_type **)a2;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v12 = *(void *)(a2 + 8);
  }
  uint64_t v13 = std::string::append(&v21, v11, v12);
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  int64_t v23 = v13->__r_.__value_.__r.__words[2];
  long long v22 = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (v19 < 0) {
    operator delete(v18);
  }
  if (v23 >= 0) {
    uint64_t v15 = (const char *)&v22;
  }
  else {
    uint64_t v15 = (const char *)v22;
  }
  nlohmann::detail::exception::exception(a3, a1, v15);
  *(void *)a3 = &unk_1F3628160;
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)v22);
  }
}

void sub_1DC0644F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  _Unwind_Resume(exception_object);
}

void nlohmann::detail::invalid_iterator::~invalid_iterator(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
  JUMPOUT(0x1E0198C00);
}

void std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(*(std::string **)(a1 + 8), *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  *(void *)(a1 + 8) = v3 + 24;
}

void sub_1DC06467C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::string>::__push_back_slow_path<std::string const&>(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a1 + 2);
  if (v9) {
    int v10 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v7, v9);
  }
  else {
    int v10 = 0;
  }
  std::__split_buffer<std::string>::pointer end = v10 + v4;
  __v.__first_ = v10;
  __v.__begin_ = end;
  __v.__end_ = end;
  __v.__end_cap_.__value_ = &v10[v9];
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(end, *(const std::string::value_type **)a2, *((void *)a2 + 1));
    std::__split_buffer<std::string>::pointer end = __v.__end_;
  }
  else
  {
    long long v12 = *a2;
    end->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v12;
  }
  __v.__end_ = end + 1;
  std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a1, &__v);
  uint64_t v13 = a1[1];
  std::__split_buffer<std::string>::~__split_buffer(&__v);
  return v13;
}

void sub_1DC064794(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void std::vector<std::string>::__swap_out_circular_buffer(std::vector<std::string> *this, std::__split_buffer<std::string> *__v)
{
  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>((uint64_t)&this->__end_cap_, (uint64_t)this->__end_, (uint64_t)this->__end_, (uint64_t)this->__begin_, (uint64_t)this->__begin_, (uint64_t)__v->__begin_, (uint64_t)__v->__begin_);
  __v->__begin_ = v4;
  begiuint64_t n = this->__begin_;
  this->__begin_ = v4;
  __v->__begin_ = begin;
  std::__split_buffer<std::string>::pointer end = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = end;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return a6;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

void std::__split_buffer<std::string>::__destruct_at_end[abi:ne180100](uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      unint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        unint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t std::map<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::at(uint64_t a1, const void **a2)
{
  uint64_t v2 = *std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__find_equal<std::string>(a1, &v4, a2);
  if (!v2) {
    std::__throw_out_of_range[abi:ne180100]("map::at:  key not found");
  }
  return v2 + 56;
}

void nlohmann::detail::out_of_range::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(int a1@<W0>, uint64_t a2@<X1>, nlohmann::detail::exception *a3@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(&v18, "out_of_range");
  nlohmann::detail::exception::name(a1, &v20);
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  if ((v17 & 0x80u) == 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  if ((v17 & 0x80u) == 0) {
    std::string::size_type v7 = v17;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)__p[1];
  }
  unint64_t v8 = std::string::append(&v20, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    uint64_t v11 = (const std::string::value_type *)a2;
  }
  else {
    uint64_t v11 = *(const std::string::value_type **)a2;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v12 = *(void *)(a2 + 8);
  }
  char v13 = std::string::append(&v21, v11, v12);
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  int64_t v23 = v13->__r_.__value_.__r.__words[2];
  long long v22 = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if ((char)v17 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (v19 < 0) {
    operator delete(v18);
  }
  if (v23 >= 0) {
    long long v15 = (const char *)&v22;
  }
  else {
    long long v15 = (const char *)v22;
  }
  nlohmann::detail::exception::exception(a3, a1, v15);
  *(void *)a3 = &unk_1F3628138;
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)v22);
  }
}

void sub_1DC064B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  _Unwind_Resume(exception_object);
}

void nlohmann::detail::out_of_range::~out_of_range(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
  JUMPOUT(0x1E0198C00);
}

std::string *nlohmann::detail::from_json<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(uint64_t a1, std::string *this)
{
  if (*(unsigned char *)a1 != 3)
  {
    exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
    std::string::size_type v7 = (char *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::type_name((char *)a1);
    std::string::basic_string[abi:ne180100]<0>(&v10, v7);
    unint64_t v8 = std::string::insert(&v10, 0, "type must be string, but is ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    std::string::size_type v12 = v8->__r_.__value_.__r.__words[2];
    long long v11 = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(302, (uint64_t)&v11, exception);
  }
  uint64_t v4 = *(const std::string **)(a1 + 8);
  return std::string::operator=(this, v4);
}

void sub_1DC064D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void std::default_delete<JsonMapImpl>::operator()[abi:ne180100](uint64_t a1, uint64_t **a2)
{
  if (a2)
  {
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)a2);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(a2 + 1, *(unsigned __int8 *)a2);
    JUMPOUT(0x1E0198C00);
  }
}

uint64_t *std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__find_equal<std::string>((uint64_t)a1, &v11, a2);
  std::string::size_type v7 = *v6;
  if (!*v6)
  {
    unint64_t v8 = v6;
    std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::__map_value_compare<int,std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>,std::less<int>,true>,std::allocator<std::__value_type<int,std::shared_ptr<MLAssetIO::ProtoWireFormatCallbackParser::Field>>>>::__insert_node_at(a1, v11, v8, v10[0]);
    std::string::size_type v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

std::string *std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x48uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::pair[abi:ne180100]<std::string const&>((std::string *)(v6 + 32), *a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1DC064F54(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::pair[abi:ne180100]<std::string const&>(std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v3;
  }
  this[1].__r_.__value_.__s.__data_[0] = 0;
  this[1].__r_.__value_.__l.__size_ = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&this[1]);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&this[1]);
  return this;
}

uint64_t nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<std::string const&,std::string,0>(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)a1 = 3;
  *(void *)(a1 + 8) = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::create<std::string,std::string const&>(a2);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1);
  return a1;
}

void *nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::parser<nlohmann::detail::input_stream_adapter>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int8 a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  void v10[4] = *MEMORY[0x1E4F143B8];
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::__value_func[abi:ne180100]((uint64_t)v10, a2);
  nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::parser(a5, a1, (uint64_t)v10, a3, a4);
  return std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100](v10);
}

void sub_1DC0650C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

void nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::parse(uint64_t a1, int a2, unsigned char *a3)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a1 + 24))
  {
    std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::__value_func[abi:ne180100]((uint64_t)v28, a1);
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::json_sax_dom_callback_parser((uint64_t)&v29, (uint64_t)a3, (uint64_t)v28, *(unsigned char *)(a1 + 184));
    std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100](v28);
    nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::sax_parse_internal<nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(a1, (uint64_t *)&v29);
    if (a2)
    {
      int v6 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan((int64x2_t *)(a1 + 40));
      *(_DWORD *)(a1 + 32) = v6;
      if (v6 != 15)
      {
        uint64_t v7 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string(a1 + 40, &v27);
        long long v23 = *(_OWORD *)(a1 + 72);
        uint64_t v24 = *(void *)(a1 + 88);
        std::string::basic_string[abi:ne180100]<0>(v20, "value");
        nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0xFu, (uint64_t)v20, &__p);
        v18[0] = 0;
        char v19 = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v18);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v18);
        nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)&v23, (uint64_t)&__p, (nlohmann::detail::exception *)&v25);
        nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)&v29, v7, (uint64_t)&v27, (const nlohmann::detail::parse_error *)&v25);
        v25.__vftable = (std::exception_vtbl *)&unk_1F36281B8;
        MEMORY[0x1E0198880](v26);
        std::exception::~exception(&v25);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v18);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v19, v18[0]);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (v21 < 0) {
          operator delete(v20[0]);
        }
        if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v27.__r_.__value_.__l.__data_);
        }
      }
    }
    if (v34)
    {
      v16[0] = 9;
      unsigned __int8 v17 = 0;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v16);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=((uint64_t)a3, (uint64_t)v16);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v16);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v17, v16[0]);
      nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~json_sax_dom_callback_parser((uint64_t)&v29);
      return;
    }
    if (*a3 == 9)
    {
      v14[0] = 0;
      long long v15 = 0;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v14);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v14);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=((uint64_t)a3, (uint64_t)v14);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v14);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v15, v14[0]);
    }
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~json_sax_dom_callback_parser((uint64_t)&v29);
    goto LABEL_29;
  }
  char v8 = *(unsigned char *)(a1 + 184);
  uint64_t v29 = a3;
  long long v30 = 0u;
  long long v31 = 0u;
  unsigned __int8 v32 = 0;
  char v33 = v8;
  nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::sax_parse_internal<nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(a1, (uint64_t *)&v29);
  if (a2)
  {
    int v9 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan((int64x2_t *)(a1 + 40));
    *(_DWORD *)(a1 + 32) = v9;
    if (v9 != 15)
    {
      uint64_t v10 = *(void *)(a1 + 72);
      nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string(a1 + 40, &v27);
      long long v23 = *(_OWORD *)(a1 + 72);
      uint64_t v24 = *(void *)(a1 + 88);
      std::string::basic_string[abi:ne180100]<0>(v20, "value");
      nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0xFu, (uint64_t)v20, &__p);
      v18[0] = 0;
      char v19 = 0;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v18);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v18);
      nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)&v23, (uint64_t)&__p, (nlohmann::detail::exception *)&v25);
      nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)&v29, v10, (uint64_t)&v27, (const nlohmann::detail::parse_error *)&v25);
      v25.__vftable = (std::exception_vtbl *)&unk_1F36281B8;
      MEMORY[0x1E0198880](v26);
      std::exception::~exception(&v25);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v18);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v19, v18[0]);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v21 < 0) {
        operator delete(v20[0]);
      }
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v27.__r_.__value_.__l.__data_);
      }
    }
  }
  int v11 = v32;
  if (v32)
  {
    v12[0] = 9;
    char v13 = 0;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v12);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=((uint64_t)a3, (uint64_t)v12);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v12);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v13, v12[0]);
  }
  if ((void)v30)
  {
    *((void *)&v30 + 1) = v30;
    operator delete((void *)v30);
  }
  if (!v11) {
LABEL_29:
  }
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)a3);
}

void sub_1DC065534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,std::exception a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,char a44)
{
  nlohmann::detail::parse_error::~parse_error(&a33);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&a15);
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a43 < 0) {
    operator delete(a38);
  }
  long long v46 = *(void **)(v44 - 200);
  if (v46)
  {
    *(void *)(v44 - 192) = v46;
    operator delete(v46);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  long long v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    long long v3 = (void *)(a1 + 24);
  }
  *long long v3 = 0;
  return a1;
}

{
  uint64_t v3;

  long long v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::parser(uint64_t a1, uint64_t a2, uint64_t a3, __int8 a4, char a5)
{
  uint64_t v9 = std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::__value_func[abi:ne180100](a1, a3);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)a2;
  uint64_t v10 = (int64x2_t *)(v9 + 40);
  *(_DWORD *)(v9 + 32) = 0;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(v9 + 56) = a5;
  *(_DWORD *)(v9 + 60) = -1;
  *(unsigned char *)(v9 + 64) = 0;
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(_OWORD *)(v9 + 104) = 0u;
  *(_OWORD *)(v9 + 120) = 0u;
  *(void *)(v9 + 136) = 0;
  *(void *)(v9 + 144) = "";
  *(void *)(v9 + 160) = 0;
  *(void *)(v9 + 168) = 0;
  *(void *)(v9 + 152) = 0;
  *(_DWORD *)(v9 + 176) = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_decimal_point();
  v10[9].i8[0] = a4;
  *(_DWORD *)(a1 + 32) = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v10);
  return a1;
}

void sub_1DC065764(_Unwind_Exception *a1)
{
  nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::~lexer(v2);
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_decimal_point()
{
  v0 = localeconv();
  if (!v0) {
    __assert_rtn("get_decimal_point", "json.hpp", 6346, "loc != nullptr");
  }
  if (v0->decimal_point) {
    return *v0->decimal_point;
  }
  else {
    return 46;
  }
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(int64x2_t *this)
{
  if (this[2].i64[0]
    || nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::skip_bom(this))
  {
    do
    {
      nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(this);
      int v2 = this[1].i32[1];
    }
    while (v2 <= 0x20 && ((1 << v2) & 0x100002600) != 0);
    while (this[1].i8[0])
    {
      if (v2 != 47) {
        break;
      }
      if (!nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_comment(this)) {
        return 14;
      }
      do
      {
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(this);
        int v2 = this[1].i32[1];
      }
      while (v2 <= 0x20 && ((1 << v2) & 0x100002600) != 0);
    }
    if (v2 <= 90)
    {
      switch(v2)
      {
        case '""':
          uint64_t result = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_string((uint64_t)this);
          break;
        case '#':
        case '$':
        case '%':
        case '&':
        case '\'':
        case '(':
        case ')':
        case '*':
        case '+':
        case '.':
        case '/':
          goto LABEL_50;
        case ',':
          uint64_t result = 13;
          break;
        case '-':
        case '0':
        case '1':
        case '2':
        case '3':
        case '4':
        case '5':
        case '6':
        case '7':
        case '8':
        case '9':
          uint64_t result = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_number((uint64_t)this);
          break;
        case ':':
          uint64_t result = 12;
          break;
        default:
          if ((v2 + 1) >= 2) {
            goto LABEL_50;
          }
          uint64_t result = 15;
          break;
      }
      return result;
    }
    if (v2 <= 109)
    {
      switch(v2)
      {
        case '[':
          return 8;
        case ']':
          return 10;
        case 'f':
          qmemcpy(v12, "false", 5);
          int v6 = v12;
          uint64_t v7 = this;
          unint64_t v8 = 5;
          uint64_t v9 = 2;
          return nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_literal(v7, (unsigned __int8 *)v6, v8, v9);
      }
    }
    else if (v2 > 122)
    {
      if (v2 == 123) {
        return 9;
      }
      if (v2 == 125) {
        return 11;
      }
    }
    else
    {
      if (v2 == 110)
      {
        int v11 = 1819047278;
        int v6 = &v11;
        uint64_t v7 = this;
        unint64_t v8 = 4;
        uint64_t v9 = 3;
        return nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_literal(v7, (unsigned __int8 *)v6, v8, v9);
      }
      if (v2 == 116)
      {
        int v13 = 1702195828;
        int v6 = &v13;
        uint64_t v7 = this;
        unint64_t v8 = 4;
        uint64_t v9 = 1;
        return nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_literal(v7, (unsigned __int8 *)v6, v8, v9);
      }
    }
LABEL_50:
    uint64_t v10 = "invalid literal";
  }
  else
  {
    uint64_t v10 = "invalid BOM; must be 0xEF 0xBB 0xBF if given";
  }
  this[6].i64[1] = (uint64_t)v10;
  return 14;
}

BOOL nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::skip_bom(int64x2_t *a1)
{
  if (nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(a1) == 239)
  {
    return nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(a1) == 187
        && nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(a1) == 191;
  }
  else
  {
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::unget((uint64_t)a1);
    return 1;
  }
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_comment(int64x2_t *a1)
{
  int v2 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(a1);
  if (v2 == 47)
  {
    do
    {
      do
        unsigned int v4 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(a1)
           + 1;
      while (v4 >= 0xF);
    }
    while (((0x4803u >> v4) & 1) == 0);
    return 1;
  }
  else
  {
    if (v2 == 42)
    {
      do
      {
        while (1)
        {
          int v3 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(a1);
          if (v3 != 42) {
            break;
          }
          if (nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(a1) == 47) {
            return 1;
          }
          nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::unget((uint64_t)a1);
        }
      }
      while ((v3 + 1) >= 2);
      int v6 = "invalid comment; missing closing '*/'";
    }
    else
    {
      int v6 = "invalid comment; expecting '/' or '*' after '/'";
    }
    uint64_t result = 0;
    a1[6].i64[1] = (uint64_t)v6;
  }
  return result;
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_literal(int64x2_t *this, unsigned __int8 *a2, unint64_t a3, uint64_t a4)
{
  if (*a2 != this[1].u8[4]) {
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_literal();
  }
  if (a3 >= 2)
  {
    unint64_t v6 = a3 - 1;
    uint64_t v7 = a2 + 1;
    while (1)
    {
      unsigned __int8 v8 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(this);
      int v9 = *v7++;
      if (v9 != v8) {
        break;
      }
      if (!--v6) {
        return a4;
      }
    }
    this[6].i64[1] = (uint64_t)"invalid literal";
    return 14;
  }
  return a4;
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_string(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::reset(a1);
  if (*(_DWORD *)(a1 + 20) != 34) {
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_string();
  }
  while (2)
  {
    while (2)
    {
      int v2 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1)
         + 1;
      uint64_t result = 4;
      unsigned int v4 = "invalid string: missing closing quote";
      switch(v2)
      {
        case 0:
          goto LABEL_82;
        case 1:
          unsigned int v4 = "invalid string: control character U+0000 (NUL) must be escaped to \\u0000";
          goto LABEL_82;
        case 2:
          unsigned int v4 = "invalid string: control character U+0001 (SOH) must be escaped to \\u0001";
          goto LABEL_82;
        case 3:
          unsigned int v4 = "invalid string: control character U+0002 (STX) must be escaped to \\u0002";
          goto LABEL_82;
        case 4:
          unsigned int v4 = "invalid string: control character U+0003 (ETX) must be escaped to \\u0003";
          goto LABEL_82;
        case 5:
          unsigned int v4 = "invalid string: control character U+0004 (EOT) must be escaped to \\u0004";
          goto LABEL_82;
        case 6:
          unsigned int v4 = "invalid string: control character U+0005 (ENQ) must be escaped to \\u0005";
          goto LABEL_82;
        case 7:
          unsigned int v4 = "invalid string: control character U+0006 (ACK) must be escaped to \\u0006";
          goto LABEL_82;
        case 8:
          unsigned int v4 = "invalid string: control character U+0007 (BEL) must be escaped to \\u0007";
          goto LABEL_82;
        case 9:
          unsigned int v4 = "invalid string: control character U+0008 (BS) must be escaped to \\u0008 or \\b";
          goto LABEL_82;
        case 10:
          unsigned int v4 = "invalid string: control character U+0009 (HT) must be escaped to \\u0009 or \\t";
          goto LABEL_82;
        case 11:
          unsigned int v4 = "invalid string: control character U+000A (LF) must be escaped to \\u000A or \\n";
          goto LABEL_82;
        case 12:
          unsigned int v4 = "invalid string: control character U+000B (VT) must be escaped to \\u000B";
          goto LABEL_82;
        case 13:
          unsigned int v4 = "invalid string: control character U+000C (FF) must be escaped to \\u000C or \\f";
          goto LABEL_82;
        case 14:
          unsigned int v4 = "invalid string: control character U+000D (CR) must be escaped to \\u000D or \\r";
          goto LABEL_82;
        case 15:
          unsigned int v4 = "invalid string: control character U+000E (SO) must be escaped to \\u000E";
          goto LABEL_82;
        case 16:
          unsigned int v4 = "invalid string: control character U+000F (SI) must be escaped to \\u000F";
          goto LABEL_82;
        case 17:
          unsigned int v4 = "invalid string: control character U+0010 (DLE) must be escaped to \\u0010";
          goto LABEL_82;
        case 18:
          unsigned int v4 = "invalid string: control character U+0011 (DC1) must be escaped to \\u0011";
          goto LABEL_82;
        case 19:
          unsigned int v4 = "invalid string: control character U+0012 (DC2) must be escaped to \\u0012";
          goto LABEL_82;
        case 20:
          unsigned int v4 = "invalid string: control character U+0013 (DC3) must be escaped to \\u0013";
          goto LABEL_82;
        case 21:
          unsigned int v4 = "invalid string: control character U+0014 (DC4) must be escaped to \\u0014";
          goto LABEL_82;
        case 22:
          unsigned int v4 = "invalid string: control character U+0015 (NAK) must be escaped to \\u0015";
          goto LABEL_82;
        case 23:
          unsigned int v4 = "invalid string: control character U+0016 (SYN) must be escaped to \\u0016";
          goto LABEL_82;
        case 24:
          unsigned int v4 = "invalid string: control character U+0017 (ETB) must be escaped to \\u0017";
          goto LABEL_82;
        case 25:
          unsigned int v4 = "invalid string: control character U+0018 (CAN) must be escaped to \\u0018";
          goto LABEL_82;
        case 26:
          unsigned int v4 = "invalid string: control character U+0019 (EM) must be escaped to \\u0019";
          goto LABEL_82;
        case 27:
          unsigned int v4 = "invalid string: control character U+001A (SUB) must be escaped to \\u001A";
          goto LABEL_82;
        case 28:
          unsigned int v4 = "invalid string: control character U+001B (ESC) must be escaped to \\u001B";
          goto LABEL_82;
        case 29:
          unsigned int v4 = "invalid string: control character U+001C (FS) must be escaped to \\u001C";
          goto LABEL_82;
        case 30:
          unsigned int v4 = "invalid string: control character U+001D (GS) must be escaped to \\u001D";
          goto LABEL_82;
        case 31:
          unsigned int v4 = "invalid string: control character U+001E (RS) must be escaped to \\u001E";
          goto LABEL_82;
        case 32:
          unsigned int v4 = "invalid string: control character U+001F (US) must be escaped to \\u001F";
          goto LABEL_82;
        case 33:
        case 34:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 92:
        case 94:
        case 95:
        case 96:
        case 97:
        case 98:
        case 99:
        case 100:
        case 101:
        case 102:
        case 103:
        case 104:
        case 105:
        case 106:
        case 107:
        case 108:
        case 109:
        case 110:
        case 111:
        case 112:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 119:
        case 120:
        case 121:
        case 122:
        case 123:
        case 124:
        case 125:
        case 126:
        case 127:
        case 128:
          int v5 = *(_DWORD *)(a1 + 20);
          goto LABEL_4;
        case 35:
          return result;
        case 93:
          int v10 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1);
          unsigned int v4 = "invalid string: forbidden character after backslash";
          if (v10 <= 97)
          {
            switch(v10)
            {
              case '""':
                LOBYTE(v5) = 34;
                break;
              case '/':
                LOBYTE(v5) = 47;
                break;
              case '\\':
                LOBYTE(v5) = 92;
                break;
              default:
                goto LABEL_82;
            }
            goto LABEL_4;
          }
          break;
        case 195:
        case 196:
        case 197:
        case 198:
        case 199:
        case 200:
        case 201:
        case 202:
        case 203:
        case 204:
        case 205:
        case 206:
        case 207:
        case 208:
        case 209:
        case 210:
        case 211:
        case 212:
        case 213:
        case 214:
        case 215:
        case 216:
        case 217:
        case 218:
        case 219:
        case 220:
        case 221:
        case 222:
        case 223:
        case 224:
          *(void *)&long long v14 = 0xBF00000080;
          uint64_t v6 = a1;
          unint64_t v7 = 2;
          goto LABEL_19;
        case 225:
          long long v8 = xmmword_1DC160250;
          goto LABEL_7;
        case 226:
        case 227:
        case 228:
        case 229:
        case 230:
        case 231:
        case 232:
        case 233:
        case 234:
        case 235:
        case 236:
        case 237:
        case 239:
        case 240:
          long long v8 = xmmword_1DC160240;
          goto LABEL_7;
        case 238:
          long long v8 = xmmword_1DC160230;
LABEL_7:
          long long v14 = v8;
          uint64_t v6 = a1;
          unint64_t v7 = 4;
          goto LABEL_19;
        case 241:
          uint64_t v15 = 0xBF00000080;
          int v9 = &xmmword_1DC160308;
          goto LABEL_18;
        case 242:
        case 243:
        case 244:
          uint64_t v15 = 0xBF00000080;
          int v9 = &xmmword_1DC160320;
          goto LABEL_18;
        case 245:
          uint64_t v15 = 0xBF00000080;
          int v9 = &xmmword_1DC160338;
LABEL_18:
          long long v14 = *v9;
          uint64_t v6 = a1;
          unint64_t v7 = 6;
LABEL_19:
          if ((nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::next_byte_in_range(v6, &v14, v7) & 1) == 0)return 14; {
          continue;
          }
        default:
          unsigned int v4 = "invalid string: ill-formed UTF-8 byte";
          goto LABEL_82;
      }
      break;
    }
    switch(v10)
    {
      case 'n':
        LOBYTE(v5) = 10;
        goto LABEL_4;
      case 'o':
      case 'p':
      case 'q':
      case 's':
        goto LABEL_82;
      case 'r':
        LOBYTE(v5) = 13;
        goto LABEL_4;
      case 't':
        LOBYTE(v5) = 9;
        goto LABEL_4;
      case 'u':
        unsigned int codepoint = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_codepoint((int64x2_t *)a1);
        if (codepoint == -1) {
          goto LABEL_85;
        }
        unsigned int v12 = codepoint;
        if ((codepoint & 0xFFFFFC00) != 0xD800)
        {
          if ((codepoint & 0xFFFFFC00) == 0xDC00)
          {
            unsigned int v4 = "invalid string: surrogate U+DC00..U+DFFF must follow U+D800..U+DBFF";
            goto LABEL_82;
          }
          if (codepoint >= 0x110000) {
            nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_string();
          }
          if (codepoint > 0x7F)
          {
            if (codepoint <= 0x7FF)
            {
              std::string::push_back((std::string *)(a1 + 80), (codepoint >> 6) | 0xC0);
              goto LABEL_39;
            }
            if (!HIWORD(codepoint))
            {
              std::string::push_back((std::string *)(a1 + 80), (codepoint >> 12) | 0xE0);
              goto LABEL_38;
            }
LABEL_37:
            std::string::push_back((std::string *)(a1 + 80), (v12 >> 18) | 0xF0);
            std::string::push_back((std::string *)(a1 + 80), (v12 >> 12) & 0x3F | 0x80);
LABEL_38:
            std::string::push_back((std::string *)(a1 + 80), (v12 >> 6) & 0x3F | 0x80);
LABEL_39:
            LOBYTE(v5) = v12 & 0x3F | 0x80;
            goto LABEL_4;
          }
          LOBYTE(v5) = codepoint;
LABEL_4:
          std::string::push_back((std::string *)(a1 + 80), v5);
          continue;
        }
        if (nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1) != 92
          || nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1) != 117)
        {
LABEL_86:
          unsigned int v4 = "invalid string: surrogate U+D800..U+DBFF must be followed by U+DC00..U+DFFF";
          goto LABEL_82;
        }
        unsigned int v13 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_codepoint((int64x2_t *)a1);
        if (v13 != -1)
        {
          if (v13 >> 10 != 55) {
            goto LABEL_86;
          }
          unsigned int v12 = v13 + (v12 << 10) - 56613888;
          goto LABEL_37;
        }
LABEL_85:
        unsigned int v4 = "invalid string: '\\u' must be followed by 4 hex digits";
LABEL_82:
        *(void *)(a1 + 104) = v4;
        return 14;
      default:
        if (v10 == 98)
        {
          LOBYTE(v5) = 8;
        }
        else
        {
          if (v10 != 102) {
            goto LABEL_82;
          }
          LOBYTE(v5) = 12;
        }
        goto LABEL_4;
    }
  }
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_number(uint64_t a1)
{
  nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::reset(a1);
  int v2 = *(_DWORD *)(a1 + 20);
  if ((v2 - 49) >= 9)
  {
    if (v2 == 48)
    {
      std::string::push_back((std::string *)(a1 + 80), 48);
      int v4 = 5;
    }
    else
    {
      if (v2 != 45) {
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_number();
      }
      int v3 = (std::string *)(a1 + 80);
      std::string::push_back((std::string *)(a1 + 80), 45);
      int v13 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1);
      if ((v13 - 49) < 9)
      {
        int v2 = *(_DWORD *)(a1 + 20);
        int v4 = 6;
        goto LABEL_3;
      }
      if (v13 != 48)
      {
        long long v14 = "invalid number; expected digit after '-'";
        goto LABEL_52;
      }
      std::string::push_back((std::string *)(a1 + 80), *(unsigned char *)(a1 + 20));
      int v4 = 6;
    }
    int v15 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1);
    if (v15 == 101 || v15 == 69)
    {
      int v5 = (std::string *)(a1 + 80);
      goto LABEL_9;
    }
    if (v15 != 46) {
      goto LABEL_40;
    }
    int v5 = (std::string *)(a1 + 80);
LABEL_34:
    std::string::push_back(v5, *(unsigned char *)(a1 + 136));
    if (nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1)
       - 48 > 9)
    {
      long long v14 = "invalid number; expected digit after '.'";
      goto LABEL_52;
    }
    int v5 = (std::string *)(a1 + 80);
    do
    {
      std::string::push_back((std::string *)(a1 + 80), *(unsigned char *)(a1 + 20));
      int v16 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1);
    }
    while ((v16 - 48) < 0xA);
    if (v16 != 101 && v16 != 69)
    {
LABEL_13:
      nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::unget(a1);
      __endptr = 0;
      *__error() = 0;
      goto LABEL_14;
    }
LABEL_9:
    std::string::push_back(v5, *(unsigned char *)(a1 + 20));
    int v7 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1);
    if ((v7 - 48) < 0xA)
    {
      long long v8 = (std::string *)(a1 + 80);
      goto LABEL_11;
    }
    if (v7 == 45 || v7 == 43)
    {
      long long v8 = (std::string *)(a1 + 80);
      std::string::push_back((std::string *)(a1 + 80), *(unsigned char *)(a1 + 20));
      if (nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1)
         - 48 < 0xA)
      {
LABEL_11:
        std::string::push_back(v8, *(unsigned char *)(a1 + 20));
        if (nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1)
           - 48 <= 9)
        {
          do
            std::string::push_back((std::string *)(a1 + 80), *(unsigned char *)(a1 + 20));
          while (nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1)
                - 48 < 0xA);
        }
        goto LABEL_13;
      }
      long long v14 = "invalid number; expected digit after exponent sign";
    }
    else
    {
      long long v14 = "invalid number; expected '+', '-', or digit after exponent";
    }
LABEL_52:
    *(void *)(a1 + 104) = v14;
    return 14;
  }
  int v3 = (std::string *)(a1 + 80);
  int v4 = 5;
LABEL_3:
  std::string::push_back(v3, v2);
  int v5 = (std::string *)(a1 + 80);
  while (1)
  {
    int v6 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1);
    if ((v6 - 48) >= 0xA) {
      break;
    }
    std::string::push_back((std::string *)(a1 + 80), *(unsigned char *)(a1 + 20));
  }
  if (v6 == 46) {
    goto LABEL_34;
  }
  if (v6 == 69 || v6 == 101) {
    goto LABEL_9;
  }
LABEL_40:
  nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::unget(a1);
  __endptr = 0;
  *__error() = 0;
  if (v4 == 6)
  {
    char v21 = (const char **)(a1 + 80);
    int v22 = (const char *)(a1 + 80);
    if (*(char *)(a1 + 103) < 0) {
      int v22 = *v21;
    }
    uint64_t v23 = strtoll(v22, &__endptr, 10);
    if (*(char *)(a1 + 103) < 0)
    {
      char v21 = *(const char ***)(a1 + 80);
      uint64_t v24 = *(void *)(a1 + 88);
    }
    else
    {
      uint64_t v24 = *(unsigned __int8 *)(a1 + 103);
    }
    if (__endptr != (char *)v21 + v24) {
      nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_number();
    }
    if (!*__error())
    {
      *(void *)(a1 + 112) = v23;
      return 6;
    }
  }
  else
  {
    unsigned __int8 v17 = (const char **)(a1 + 80);
    uint64_t v18 = (const char *)(a1 + 80);
    if (*(char *)(a1 + 103) < 0) {
      uint64_t v18 = *v17;
    }
    unint64_t v19 = strtoull(v18, &__endptr, 10);
    if (*(char *)(a1 + 103) < 0)
    {
      unsigned __int8 v17 = *(const char ***)(a1 + 80);
      uint64_t v20 = *(void *)(a1 + 88);
    }
    else
    {
      uint64_t v20 = *(unsigned __int8 *)(a1 + 103);
    }
    if (__endptr != (char *)v17 + v20) {
      nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_number();
    }
    if (!*__error())
    {
      *(void *)(a1 + 120) = v19;
      return 5;
    }
  }
LABEL_14:
  int v9 = (const char **)(a1 + 80);
  int v10 = (const char *)(a1 + 80);
  if (*(char *)(a1 + 103) < 0) {
    int v10 = *v9;
  }
  *(double *)(a1 + 128) = strtod(v10, &__endptr);
  if (*(char *)(a1 + 103) < 0)
  {
    int v9 = *(const char ***)(a1 + 80);
    uint64_t v11 = *(void *)(a1 + 88);
  }
  else
  {
    uint64_t v11 = *(unsigned __int8 *)(a1 + 103);
  }
  if (__endptr != (char *)v9 + v11) {
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_number();
  }
  return 7;
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(int64x2_t *this)
{
  this[2] = vaddq_s64(this[2], vdupq_n_s64(1uLL));
  if (this[1].i8[8])
  {
    this[1].i8[8] = 0;
    __int32 character = this[1].i32[1];
  }
  else
  {
    __int32 character = nlohmann::detail::input_stream_adapter::get_character((nlohmann::detail::input_stream_adapter *)this);
    this[1].i32[1] = character;
  }
  if (character == -1) {
    return 0xFFFFFFFFLL;
  }
  int v4 = (unsigned char *)this[4].i64[0];
  unint64_t v3 = this[4].u64[1];
  if ((unint64_t)v4 >= v3)
  {
    uint64_t v6 = this[3].i64[1];
    int v7 = &v4[-v6];
    uint64_t v8 = (uint64_t)&v4[-v6 + 1];
    if (v8 < 0) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v9 = v3 - v6;
    if (2 * v9 > v8) {
      uint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v10 = v8;
    }
    if (v10) {
      uint64_t v11 = (uint64_t)operator new(v10);
    }
    else {
      uint64_t v11 = 0;
    }
    unsigned int v12 = (char *)(v11 + v10);
    v7[v11] = character;
    uint64_t v5 = (uint64_t)&v7[v11 + 1];
    if (v4 == (unsigned char *)v6)
    {
      v11 += (uint64_t)v7;
    }
    else
    {
      int v13 = &v4[~v6];
      do
      {
        char v14 = *--v4;
        (v13--)[v11] = v14;
      }
      while (v4 != (unsigned char *)v6);
      int v4 = (unsigned char *)this[3].i64[1];
    }
    this[3].i64[1] = v11;
    this[4].i64[0] = v5;
    this[4].i64[1] = (uint64_t)v12;
    if (v4) {
      operator delete(v4);
    }
  }
  else
  {
    unsigned char *v4 = character;
    uint64_t v5 = (uint64_t)(v4 + 1);
  }
  this[4].i64[0] = v5;
  uint64_t result = this[1].u32[1];
  if (result == 10)
  {
    uint64_t v16 = this[3].i64[0] + 1;
    this[2].i64[1] = 0;
    this[3].i64[0] = v16;
  }
  return result;
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::unget(uint64_t result)
{
  uint64_t v1 = (void *)(result + 40);
  uint64_t v2 = *(void *)(result + 40);
  *(unsigned char *)(result + 24) = 1;
  --*(void *)(result + 32);
  if (v2 || (v1 = (void *)(result + 48), (uint64_t v2 = *(void *)(result + 48)) != 0)) {
    void *v1 = v2 - 1;
  }
  if (*(_DWORD *)(result + 20) != -1)
  {
    uint64_t v3 = *(void *)(result + 64);
    if (*(void *)(result + 56) == v3) {
      nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::unget();
    }
    *(void *)(result + 64) = v3 - 1;
  }
  return result;
}

uint64_t nlohmann::detail::input_stream_adapter::get_character(nlohmann::detail::input_stream_adapter *this)
{
  uint64_t v2 = (void *)*((void *)this + 1);
  uint64_t v3 = (unsigned __int8 *)v2[3];
  if (v3 == (unsigned __int8 *)v2[4])
  {
    uint64_t result = (*(uint64_t (**)(void *))(*v2 + 80))(v2);
    if (result == -1)
    {
      uint64_t v5 = (std::ios_base *)(*(void *)this + *(void *)(**(void **)this - 24));
      std::ios_base::clear(v5, v5->__rdstate_ | 2);
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    v2[3] = v3 + 1;
    return *v3;
  }
  return result;
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::reset(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0)
  {
    **(unsigned char **)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 80) = 0;
    *(unsigned char *)(a1 + 103) = 0;
  }
  uint64_t v2 = *(unsigned char **)(a1 + 56);
  *(void *)(a1 + 64) = v2;
  int v3 = *(_DWORD *)(a1 + 20);
  unint64_t v4 = *(void *)(a1 + 72);
  if ((unint64_t)v2 >= v4)
  {
    unint64_t v6 = v4 - (void)v2;
    uint64_t v7 = 2 * v6;
    if (2 * v6 <= 1) {
      uint64_t v7 = 1;
    }
    if (v6 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v8 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v8 = v7;
    }
    unint64_t v9 = operator new(v8);
    *unint64_t v9 = v3;
    uint64_t v5 = v9 + 1;
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v9 + 1;
    *(void *)(a1 + 72) = &v9[v8];
    if (v2) {
      operator delete(v2);
    }
  }
  else
  {
    unsigned char *v2 = v3;
    uint64_t v5 = v2 + 1;
  }
  *(void *)(a1 + 64) = v5;
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_codepoint(int64x2_t *this)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  if (this[1].i32[1] != 117) {
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_codepoint();
  }
  uint64_t v2 = 0;
  LODWORD(v3) = 0;
  long long v8 = xmmword_1DC160260;
  do
  {
    int v4 = *(_DWORD *)((char *)&v8 + v2);
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get(this);
    __int32 v5 = this[1].i32[1];
    __int32 v6 = v5 - 48;
    if ((v5 - 48) >= 0xA)
    {
      if ((v5 - 65) > 5)
      {
        if ((v5 - 97) > 5) {
          return 0xFFFFFFFFLL;
        }
        __int32 v6 = v5 - 87;
      }
      else
      {
        __int32 v6 = v5 - 55;
      }
    }
    uint64_t v3 = ((v6 << v4) + v3);
    v2 += 4;
  }
  while (v2 != 16);
  if (v3 >= 0x10000) {
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_codepoint();
  }
  return v3;
}

uint64_t nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::next_byte_in_range(uint64_t a1, _DWORD *a2, unint64_t a3)
{
  if (a3 > 6 || ((1 << a3) & 0x54) == 0) {
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::next_byte_in_range();
  }
  __int32 v6 = (std::string *)(a1 + 80);
  std::string::push_back((std::string *)(a1 + 80), *(unsigned char *)(a1 + 20));
  uint64_t v7 = &a2[a3];
  while (1)
  {
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get((int64x2_t *)a1);
    int v8 = *(_DWORD *)(a1 + 20);
    if (*a2 > v8 || v8 > a2[1]) {
      break;
    }
    std::string::push_back(v6, v8);
    a2 += 2;
    if (a2 == v7) {
      return 1;
    }
  }
  uint64_t result = 0;
  *(void *)(a1 + 104) = "invalid string: ill-formed UTF-8 byte";
  return result;
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::~lexer(void **this)
{
  if (*((char *)this + 103) < 0) {
    operator delete(this[10]);
  }
  uint64_t v2 = this[7];
  if (v2)
  {
    this[8] = v2;
    operator delete(v2);
  }
  nlohmann::detail::input_stream_adapter::~input_stream_adapter((nlohmann::detail::input_stream_adapter *)this);
}

uint64_t nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::sax_parse_internal<nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(uint64_t a1, uint64_t *a2)
{
  long long v42 = 0;
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  int v4 = (long long *)(a1 + 120);
  __int32 v5 = (int64x2_t *)(a1 + 40);
  while (2)
  {
    switch(*(_DWORD *)(a1 + 32))
    {
      case 1:
        LOBYTE(v39.__vftable) = 1;
        nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<BOOL &>(a2, (unsigned __int8 *)&v39, 0);
        goto LABEL_19;
      case 2:
        LOBYTE(v39.__vftable) = 0;
        nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<BOOL &>(a2, (unsigned __int8 *)&v39, 0);
        goto LABEL_19;
      case 3:
        v39.__vftable = 0;
        nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<decltype(nullptr)>(a2, (uint64_t)&v39, 0);
        goto LABEL_19;
      case 4:
        nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<std::string&>(a2, (uint64_t)v4, 0);
        goto LABEL_19;
      case 5:
        v39.__vftable = *(std::exception_vtbl **)(a1 + 160);
        nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<unsigned long long &>(a2, (uint64_t **)&v39, 0);
        goto LABEL_19;
      case 6:
        v39.__vftable = *(std::exception_vtbl **)(a1 + 152);
        nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<long long &>(a2, (uint64_t **)&v39, 0);
        goto LABEL_19;
      case 7:
        if ((*(void *)(a1 + 168) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
        {
          v39.__vftable = *(std::exception_vtbl **)(a1 + 168);
          nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<double &>(a2, (uint64_t **)&v39, 0);
          goto LABEL_19;
        }
        uint64_t v28 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v41);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v35);
        uint64_t v29 = std::string::insert(&v35, 0, "number overflow parsing '");
        long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v30;
        v29->__r_.__value_.__l.__size_ = 0;
        v29->__r_.__value_.__r.__words[2] = 0;
        v29->__r_.__value_.__r.__words[0] = 0;
        long long v31 = std::string::append(&__p, "'");
        long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        std::string::size_type v38 = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)uint64_t v37 = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v33);
        nlohmann::detail::out_of_range::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(406, (uint64_t)v37, (nlohmann::detail::exception *)&v39);
        uint64_t v17 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::out_of_range>((uint64_t)a2, v28, (uint64_t)&v41, (const nlohmann::detail::out_of_range *)&v39);
        nlohmann::detail::out_of_range::~out_of_range(&v39);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&v33);
        if (SHIBYTE(v38) < 0) {
          operator delete(v37[0]);
        }
        goto LABEL_50;
      case 8:
        if (!nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::start_array(a2, 0xFFFFFFFFFFFFFFFFLL))goto LABEL_56; {
        int v6 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        }
        *(_DWORD *)(a1 + 32) = v6;
        if (v6 == 10)
        {
          char v7 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_array(a2);
          goto LABEL_13;
        }
        LOBYTE(v39.__vftable) = 1;
        std::vector<BOOL>::push_back((uint64_t)&v42, &v39);
        continue;
      case 9:
        if ((nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::start_object(a2, 0xFFFFFFFFFFFFFFFFLL) & 1) == 0)goto LABEL_56; {
        int v8 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        }
        *(_DWORD *)(a1 + 32) = v8;
        if (v8 != 11)
        {
          if (v8 != 4) {
            goto LABEL_59;
          }
          if (!nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::key(a2, v4))goto LABEL_56; {
          int v16 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
          }
          *(_DWORD *)(a1 + 32) = v16;
          if (v16 != 12) {
            goto LABEL_60;
          }
          LOBYTE(v39.__vftable) = 0;
          std::vector<BOOL>::push_back((uint64_t)&v42, &v39);
          int v15 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
LABEL_37:
          *(_DWORD *)(a1 + 32) = v15;
          continue;
        }
        char v7 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_object(a2);
LABEL_13:
        if ((v7 & 1) == 0)
        {
LABEL_56:
          uint64_t v17 = 0;
          goto LABEL_44;
        }
LABEL_19:
        uint64_t v9 = v43;
        if (!v43)
        {
LABEL_43:
          uint64_t v17 = 1;
          goto LABEL_44;
        }
        while (2)
        {
          if ((*(void *)&v42[((unint64_t)(v9 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v9 - 1)))
          {
            int v10 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
            *(_DWORD *)(a1 + 32) = v10;
            if (v10 == 13) {
              goto LABEL_36;
            }
            if (v10 != 10)
            {
              uint64_t v22 = *(void *)(a1 + 72);
              nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v41);
              *(_OWORD *)uint64_t v37 = *(_OWORD *)(a1 + 72);
              std::string::size_type v38 = *(void *)(a1 + 88);
              std::string::basic_string[abi:ne180100]<0>(&v35, "array");
              nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0xAu, (uint64_t)&v35, &__p);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v33);
              nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v37, (uint64_t)&__p, (nlohmann::detail::exception *)&v39);
              uint64_t v23 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v22, (uint64_t)&v41, (const nlohmann::detail::parse_error *)&v39);
              goto LABEL_61;
            }
            if (!nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_array(a2)) {
              goto LABEL_56;
            }
            uint64_t v11 = v43;
            if (!v43)
            {
              int v24 = 10820;
              goto LABEL_63;
            }
LABEL_30:
            uint64_t v9 = v11 - 1;
            uint64_t v43 = v9;
            if (!v9) {
              goto LABEL_43;
            }
            continue;
          }
          break;
        }
        int v12 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        *(_DWORD *)(a1 + 32) = v12;
        if (v12 != 13)
        {
          if (v12 != 11)
          {
            uint64_t v25 = *(void *)(a1 + 72);
            nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v41);
            *(_OWORD *)uint64_t v37 = *(_OWORD *)(a1 + 72);
            std::string::size_type v38 = *(void *)(a1 + 88);
            std::string::basic_string[abi:ne180100]<0>(&v35, "object");
            nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0xBu, (uint64_t)&v35, &__p);
            nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v33);
            nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v37, (uint64_t)&__p, (nlohmann::detail::exception *)&v39);
            uint64_t v23 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v25, (uint64_t)&v41, (const nlohmann::detail::parse_error *)&v39);
            goto LABEL_61;
          }
          if (!nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_object(a2)) {
            goto LABEL_56;
          }
          uint64_t v11 = v43;
          if (!v43)
          {
            int v24 = 10874;
LABEL_63:
            __assert_rtn("sax_parse_internal", "json.hpp", v24, "!states.empty()");
          }
          goto LABEL_30;
        }
        int v13 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        *(_DWORD *)(a1 + 32) = v13;
        if (v13 != 4)
        {
LABEL_59:
          uint64_t v26 = *(void *)(a1 + 72);
          nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v41);
          *(_OWORD *)uint64_t v37 = *(_OWORD *)(a1 + 72);
          std::string::size_type v38 = *(void *)(a1 + 88);
          std::string::basic_string[abi:ne180100]<0>(&v35, "object key");
          nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 4u, (uint64_t)&v35, &__p);
          nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v33);
          nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v37, (uint64_t)&__p, (nlohmann::detail::exception *)&v39);
          uint64_t v23 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v26, (uint64_t)&v41, (const nlohmann::detail::parse_error *)&v39);
          goto LABEL_61;
        }
        if (!nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::key(a2, v4))goto LABEL_56; {
        int v14 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        }
        *(_DWORD *)(a1 + 32) = v14;
        if (v14 == 12)
        {
LABEL_36:
          int v15 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
          goto LABEL_37;
        }
LABEL_60:
        uint64_t v27 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v41);
        *(_OWORD *)uint64_t v37 = *(_OWORD *)(a1 + 72);
        std::string::size_type v38 = *(void *)(a1 + 88);
        std::string::basic_string[abi:ne180100]<0>(&v35, "object separator");
        nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0xCu, (uint64_t)&v35, &__p);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v33);
        nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v37, (uint64_t)&__p, (nlohmann::detail::exception *)&v39);
        uint64_t v23 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v27, (uint64_t)&v41, (const nlohmann::detail::parse_error *)&v39);
LABEL_61:
        uint64_t v17 = v23;
        nlohmann::detail::parse_error::~parse_error(&v39);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&v33);
LABEL_50:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v35.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v41.__r_.__value_.__l.__data_);
        }
LABEL_44:
        if (v42) {
          operator delete(v42);
        }
        return v17;
      case 0xE:
        uint64_t v19 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v41);
        *(_OWORD *)uint64_t v37 = *(_OWORD *)(a1 + 72);
        std::string::size_type v38 = *(void *)(a1 + 88);
        std::string::basic_string[abi:ne180100]<0>(&v35, "value");
        nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0, (uint64_t)&v35, &__p);
        LOBYTE(v33) = 0;
        char v34 = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v33);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v33);
        nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v37, (uint64_t)&__p, (nlohmann::detail::exception *)&v39);
        uint64_t v20 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v19, (uint64_t)&v41, (const nlohmann::detail::parse_error *)&v39);
        goto LABEL_49;
      default:
        uint64_t v21 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v41);
        *(_OWORD *)uint64_t v37 = *(_OWORD *)(a1 + 72);
        std::string::size_type v38 = *(void *)(a1 + 88);
        std::string::basic_string[abi:ne180100]<0>(&v35, "value");
        nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0x10u, (uint64_t)&v35, &__p);
        LOBYTE(v33) = 0;
        char v34 = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v33);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v33);
        nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v37, (uint64_t)&__p, (nlohmann::detail::exception *)&v39);
        uint64_t v20 = nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v21, (uint64_t)&v41, (const nlohmann::detail::parse_error *)&v39);
LABEL_49:
        uint64_t v17 = v20;
        v39.__vftable = (std::exception_vtbl *)&unk_1F36281B8;
        MEMORY[0x1E0198880](&v40);
        std::exception::~exception(&v39);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v33);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v34, v33);
        goto LABEL_50;
    }
  }
}

void sub_1DC067788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t *a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,std::exception a31)
{
  nlohmann::detail::parse_error::~parse_error(&a31);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&a10);
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  if (*(char *)(v31 - 89) < 0) {
    operator delete(*(void **)(v31 - 112));
  }
  char v33 = *(void **)(v31 - 88);
  if (v33) {
    operator delete(v33);
  }
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>(uint64_t a1, uint64_t a2, uint64_t a3, const nlohmann::detail::parse_error *a4)
{
  *(unsigned char *)(a1 + 88) = 1;
  if (*(unsigned char *)(a1 + 128))
  {
    exceptiouint64_t n = (nlohmann::detail::parse_error *)__cxa_allocate_exception(0x28uLL);
    char v7 = nlohmann::detail::parse_error::parse_error(exception, a4);
  }
  return 0;
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t v3 = *(unsigned __int8 **)(a1 + 56);
  for (unint64_t i = *(unsigned __int8 **)(a1 + 64); v3 != i; ++v3)
  {
    unsigned int v5 = *v3;
    if (v5 > 0x1F)
    {
      std::string::push_back(a2, v5);
    }
    else
    {
      char v7 = 0;
      *(void *)__str = 0;
      snprintf(__str, 9uLL, "<U+%.4X>", v5);
      std::string::append(a2, __str);
    }
  }
}

void sub_1DC067A44(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(int a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, nlohmann::detail::exception *a4@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(&v30, "parse_error");
  nlohmann::detail::exception::name(a1, &v32);
  uint64_t v8 = std::string::append(&v32, "parse error");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  nlohmann::detail::parse_error::position_string((uint64_t)a2, &v29);
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v10 = &v29;
  }
  else {
    int v10 = (std::string *)v29.__r_.__value_.__r.__words[0];
  }
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v29.__r_.__value_.__l.__size_;
  }
  int v12 = std::string::append(&v33, (const std::string::value_type *)v10, size);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  int v14 = std::string::append(&v34, ": ");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  std::string::basic_string[abi:ne180100]<0>(__p, "");
  if ((v28 & 0x80u) == 0) {
    int v16 = __p;
  }
  else {
    int v16 = (void **)__p[0];
  }
  if ((v28 & 0x80u) == 0) {
    std::string::size_type v17 = v28;
  }
  else {
    std::string::size_type v17 = (std::string::size_type)__p[1];
  }
  uint64_t v18 = std::string::append(&v35, (const std::string::value_type *)v16, v17);
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  int v20 = *(char *)(a3 + 23);
  if (v20 >= 0) {
    uint64_t v21 = (const std::string::value_type *)a3;
  }
  else {
    uint64_t v21 = *(const std::string::value_type **)a3;
  }
  if (v20 >= 0) {
    std::string::size_type v22 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    std::string::size_type v22 = *(void *)(a3 + 8);
  }
  uint64_t v23 = std::string::append(&v36, v21, v22);
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  int64_t v38 = v23->__r_.__value_.__r.__words[2];
  long long v37 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  if ((char)v28 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v34.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v33.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  if (v31 < 0) {
    operator delete(v30);
  }
  uint64_t v25 = *a2;
  if (v38 >= 0) {
    uint64_t v26 = (const char *)&v37;
  }
  else {
    uint64_t v26 = (const char *)v37;
  }
  nlohmann::detail::exception::exception(a4, a1, v26);
  *(void *)a4 = &unk_1F3628110;
  *((void *)a4 + 4) = v25;
  if (SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
}

void sub_1DC067CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (*(char *)(v45 - 57) < 0) {
    operator delete(*(void **)(v45 - 80));
  }
  _Unwind_Resume(exception_object);
}

void nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(a4, "syntax error ");
  uint64_t v8 = *(unsigned __int8 *)(a3 + 23);
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a3 + 8);
  }
  if (v8)
  {
    std::operator+<char>();
    long long v9 = std::string::append(&v38, " ");
    long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    int64_t v40 = v9->__r_.__value_.__r.__words[2];
    long long v39 = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    if (v40 >= 0) {
      uint64_t v11 = (const std::string::value_type *)&v39;
    }
    else {
      uint64_t v11 = (const std::string::value_type *)v39;
    }
    if (v40 >= 0) {
      std::string::size_type v12 = HIBYTE(v40);
    }
    else {
      std::string::size_type v12 = *((void *)&v39 + 1);
    }
    std::string::append(a4, v11, v12);
    if (SHIBYTE(v40) < 0) {
      operator delete((void *)v39);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
  }
  std::string::append(a4, "- ");
  unsigned int v13 = *(_DWORD *)(a1 + 32);
  if (v13 == 14)
  {
    std::string::basic_string[abi:ne180100]<0>(&v36, *(char **)(a1 + 144));
    int v14 = std::string::append(&v36, "; last read: '");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string(a1 + 40, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v18 = std::string::append(&v37, (const std::string::value_type *)p_p, size);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    int v20 = std::string::append(&v38, "'");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    int64_t v40 = v20->__r_.__value_.__r.__words[2];
    long long v39 = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (v40 >= 0) {
      std::string::size_type v22 = (const std::string::value_type *)&v39;
    }
    else {
      std::string::size_type v22 = (const std::string::value_type *)v39;
    }
    if (v40 >= 0) {
      std::string::size_type v23 = HIBYTE(v40);
    }
    else {
      std::string::size_type v23 = *((void *)&v39 + 1);
    }
    std::string::append(a4, v22, v23);
    if (SHIBYTE(v40) < 0) {
      operator delete((void *)v39);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
    {
      long long v24 = (void *)v36.__r_.__value_.__r.__words[0];
      goto LABEL_49;
    }
LABEL_46:
    if (!a2) {
      return;
    }
    goto LABEL_50;
  }
  uint64_t v25 = (char *)nlohmann::detail::lexer_base<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::token_type_name(v13);
  std::string::basic_string[abi:ne180100]<0>(&v38, v25);
  uint64_t v26 = std::string::insert(&v38, 0, "unexpected ");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  int64_t v40 = v26->__r_.__value_.__r.__words[2];
  long long v39 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if (v40 >= 0) {
    unsigned __int8 v28 = (const std::string::value_type *)&v39;
  }
  else {
    unsigned __int8 v28 = (const std::string::value_type *)v39;
  }
  if (v40 >= 0) {
    std::string::size_type v29 = HIBYTE(v40);
  }
  else {
    std::string::size_type v29 = *((void *)&v39 + 1);
  }
  std::string::append(a4, v28, v29);
  if (SHIBYTE(v40) < 0) {
    operator delete((void *)v39);
  }
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_46;
  }
  long long v24 = (void *)v38.__r_.__value_.__r.__words[0];
LABEL_49:
  operator delete(v24);
  if (!a2) {
    return;
  }
LABEL_50:
  long long v30 = (char *)nlohmann::detail::lexer_base<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::token_type_name(a2);
  std::string::basic_string[abi:ne180100]<0>(&v38, v30);
  char v31 = std::string::insert(&v38, 0, "; expected ");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  int64_t v40 = v31->__r_.__value_.__r.__words[2];
  long long v39 = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  if (v40 >= 0) {
    std::string v33 = (const std::string::value_type *)&v39;
  }
  else {
    std::string v33 = (const std::string::value_type *)v39;
  }
  if (v40 >= 0) {
    std::string::size_type v34 = HIBYTE(v40);
  }
  else {
    std::string::size_type v34 = *((void *)&v39 + 1);
  }
  std::string::append(a4, v33, v34);
  if (SHIBYTE(v40) < 0) {
    operator delete((void *)v39);
  }
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
}

void sub_1DC0680BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v34 - 41) < 0) {
    operator delete(*(void **)(v34 - 64));
  }
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (*(char *)(v33 + 23) < 0) {
    operator delete(*(void **)v33);
  }
  _Unwind_Resume(exception_object);
}

void nlohmann::detail::parse_error::~parse_error(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F36281B8;
  MEMORY[0x1E0198880](&this[2]);
  std::exception::~exception(this);
  JUMPOUT(0x1E0198C00);
}

uint64_t nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::sax_parse_internal<nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(uint64_t a1, uint64_t *a2)
{
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  int v4 = (std::exception_vtbl *)(a1 + 120);
  unsigned int v5 = (int64x2_t *)(a1 + 40);
  while (2)
  {
    switch(*(_DWORD *)(a1 + 32))
    {
      case 1:
        LOBYTE(v40.__vftable) = 1;
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<BOOL &>(a2, (unsigned __int8 *)&v40);
        goto LABEL_17;
      case 2:
        LOBYTE(v40.__vftable) = 0;
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<BOOL &>(a2, (unsigned __int8 *)&v40);
        goto LABEL_17;
      case 3:
        v40.__vftable = 0;
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<decltype(nullptr)>(a2);
        goto LABEL_17;
      case 4:
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<std::string&>(a2, (uint64_t)v4);
        goto LABEL_17;
      case 5:
        v40.__vftable = *(std::exception_vtbl **)(a1 + 160);
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<unsigned long long &>(a2, (uint64_t *)&v40);
        goto LABEL_17;
      case 6:
        v40.__vftable = *(std::exception_vtbl **)(a1 + 152);
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<long long &>(a2, (uint64_t *)&v40);
        goto LABEL_17;
      case 7:
        if ((*(void *)(a1 + 168) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
        {
          v40.__vftable = *(std::exception_vtbl **)(a1 + 168);
          nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<double &>(a2, (uint64_t *)&v40);
          goto LABEL_17;
        }
        uint64_t v29 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v42);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v36);
        long long v30 = std::string::insert(&v36, 0, "number overflow parsing '");
        long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v31;
        v30->__r_.__value_.__l.__size_ = 0;
        v30->__r_.__value_.__r.__words[2] = 0;
        v30->__r_.__value_.__r.__words[0] = 0;
        long long v32 = std::string::append(&__p, "'");
        long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
        std::string::size_type v39 = v32->__r_.__value_.__r.__words[2];
        *(_OWORD *)std::string v38 = v33;
        v32->__r_.__value_.__l.__size_ = 0;
        v32->__r_.__value_.__r.__words[2] = 0;
        v32->__r_.__value_.__r.__words[0] = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v34);
        nlohmann::detail::out_of_range::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(406, (uint64_t)v38, (nlohmann::detail::exception *)&v40);
        uint64_t v18 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::out_of_range>((uint64_t)a2, v29, (uint64_t)&v42, (const nlohmann::detail::out_of_range *)&v40);
        nlohmann::detail::out_of_range::~out_of_range(&v40);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&v34);
        if (SHIBYTE(v39) < 0) {
          operator delete(v38[0]);
        }
        goto LABEL_43;
      case 8:
        if (!nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::start_array(a2, 0xFFFFFFFFFFFFFFFFLL))goto LABEL_56; {
        int v6 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        }
        *(_DWORD *)(a1 + 32) = v6;
        if (v6 == 10) {
          goto LABEL_12;
        }
        LOBYTE(v40.__vftable) = 1;
        std::vector<BOOL>::push_back((uint64_t)&v43, &v40);
        continue;
      case 9:
        if ((nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::start_object(a2, 0xFFFFFFFFFFFFFFFFLL) & 1) == 0)
        {
LABEL_56:
          uint64_t v18 = 0;
          goto LABEL_37;
        }
        int v7 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        *(_DWORD *)(a1 + 32) = v7;
        if (v7 != 11)
        {
          if (v7 != 4) {
            goto LABEL_51;
          }
          int v16 = *(uint64_t ***)(*(void *)(a2[2] - 8) + 8);
          v40.__vftable = v4;
          a2[4] = (uint64_t)(std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v16, (const void **)&v4->~exception, (uint64_t)&std::piecewise_construct, (long long **)&v40)+ 7);
          int v17 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
          *(_DWORD *)(a1 + 32) = v17;
          if (v17 != 12) {
            goto LABEL_54;
          }
          LOBYTE(v40.__vftable) = 0;
          std::vector<BOOL>::push_back((uint64_t)&v43, &v40);
          int v15 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
LABEL_32:
          *(_DWORD *)(a1 + 32) = v15;
          continue;
        }
LABEL_12:
        a2[2] -= 8;
LABEL_17:
        uint64_t v8 = v44;
        if (!v44)
        {
LABEL_36:
          uint64_t v18 = 1;
          goto LABEL_37;
        }
        while (2)
        {
          if ((*(void *)&v43[((unint64_t)(v8 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8] >> (v8 - 1)))
          {
            int v9 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
            *(_DWORD *)(a1 + 32) = v9;
            if (v9 == 13) {
              goto LABEL_31;
            }
            if (v9 != 10)
            {
              uint64_t v23 = *(void *)(a1 + 72);
              nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v42);
              *(_OWORD *)std::string v38 = *(_OWORD *)(a1 + 72);
              std::string::size_type v39 = *(void *)(a1 + 88);
              std::string::basic_string[abi:ne180100]<0>(&v36, "array");
              nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0xAu, (uint64_t)&v36, &__p);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v34);
              nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v38, (uint64_t)&__p, (nlohmann::detail::exception *)&v40);
              uint64_t v24 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v23, (uint64_t)&v42, (const nlohmann::detail::parse_error *)&v40);
              goto LABEL_55;
            }
            a2[2] -= 8;
            uint64_t v10 = v44;
            if (!v44)
            {
              int v25 = 10820;
              goto LABEL_53;
            }
LABEL_26:
            uint64_t v8 = v10 - 1;
            uint64_t v44 = v8;
            if (!v8) {
              goto LABEL_36;
            }
            continue;
          }
          break;
        }
        int v11 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        *(_DWORD *)(a1 + 32) = v11;
        if (v11 != 13)
        {
          if (v11 != 11)
          {
            uint64_t v26 = *(void *)(a1 + 72);
            nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v42);
            *(_OWORD *)std::string v38 = *(_OWORD *)(a1 + 72);
            std::string::size_type v39 = *(void *)(a1 + 88);
            std::string::basic_string[abi:ne180100]<0>(&v36, "object");
            nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0xBu, (uint64_t)&v36, &__p);
            nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v34);
            nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v38, (uint64_t)&__p, (nlohmann::detail::exception *)&v40);
            uint64_t v24 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v26, (uint64_t)&v42, (const nlohmann::detail::parse_error *)&v40);
            goto LABEL_55;
          }
          a2[2] -= 8;
          uint64_t v10 = v44;
          if (!v44)
          {
            int v25 = 10874;
LABEL_53:
            __assert_rtn("sax_parse_internal", "json.hpp", v25, "!states.empty()");
          }
          goto LABEL_26;
        }
        int v12 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        *(_DWORD *)(a1 + 32) = v12;
        if (v12 != 4)
        {
LABEL_51:
          uint64_t v27 = *(void *)(a1 + 72);
          nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v42);
          *(_OWORD *)std::string v38 = *(_OWORD *)(a1 + 72);
          std::string::size_type v39 = *(void *)(a1 + 88);
          std::string::basic_string[abi:ne180100]<0>(&v36, "object key");
          nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 4u, (uint64_t)&v36, &__p);
          nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v34);
          nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v38, (uint64_t)&__p, (nlohmann::detail::exception *)&v40);
          uint64_t v24 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v27, (uint64_t)&v42, (const nlohmann::detail::parse_error *)&v40);
          goto LABEL_55;
        }
        unsigned int v13 = *(uint64_t ***)(*(void *)(a2[2] - 8) + 8);
        v40.__vftable = v4;
        a2[4] = (uint64_t)(std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v13, (const void **)&v4->~exception, (uint64_t)&std::piecewise_construct, (long long **)&v40)+ 7);
        int v14 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
        *(_DWORD *)(a1 + 32) = v14;
        if (v14 == 12)
        {
LABEL_31:
          int v15 = nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan(v5);
          goto LABEL_32;
        }
LABEL_54:
        uint64_t v28 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v42);
        *(_OWORD *)std::string v38 = *(_OWORD *)(a1 + 72);
        std::string::size_type v39 = *(void *)(a1 + 88);
        std::string::basic_string[abi:ne180100]<0>(&v36, "object separator");
        nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0xCu, (uint64_t)&v36, &__p);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v34);
        nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v38, (uint64_t)&__p, (nlohmann::detail::exception *)&v40);
        uint64_t v24 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v28, (uint64_t)&v42, (const nlohmann::detail::parse_error *)&v40);
LABEL_55:
        uint64_t v18 = v24;
        nlohmann::detail::parse_error::~parse_error(&v40);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&v34);
LABEL_43:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v36.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v42.__r_.__value_.__l.__data_);
        }
LABEL_37:
        if (v43) {
          operator delete(v43);
        }
        return v18;
      case 0xE:
        uint64_t v20 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v42);
        *(_OWORD *)std::string v38 = *(_OWORD *)(a1 + 72);
        std::string::size_type v39 = *(void *)(a1 + 88);
        std::string::basic_string[abi:ne180100]<0>(&v36, "value");
        nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0, (uint64_t)&v36, &__p);
        LOBYTE(v34) = 0;
        std::string v35 = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v34);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v34);
        nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v38, (uint64_t)&__p, (nlohmann::detail::exception *)&v40);
        uint64_t v21 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v20, (uint64_t)&v42, (const nlohmann::detail::parse_error *)&v40);
        goto LABEL_42;
      default:
        uint64_t v22 = *(void *)(a1 + 72);
        nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_token_string((uint64_t)v5, &v42);
        *(_OWORD *)std::string v38 = *(_OWORD *)(a1 + 72);
        std::string::size_type v39 = *(void *)(a1 + 88);
        std::string::basic_string[abi:ne180100]<0>(&v36, "value");
        nlohmann::detail::parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::exception_message(a1, 0x10u, (uint64_t)&v36, &__p);
        LOBYTE(v34) = 0;
        std::string v35 = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v34);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v34);
        nlohmann::detail::parse_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(101, (uint64_t *)v38, (uint64_t)&__p, (nlohmann::detail::exception *)&v40);
        uint64_t v21 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>((uint64_t)a2, v22, (uint64_t)&v42, (const nlohmann::detail::parse_error *)&v40);
LABEL_42:
        uint64_t v18 = v21;
        v40.__vftable = (std::exception_vtbl *)&unk_1F36281B8;
        MEMORY[0x1E0198880](&v41);
        std::exception::~exception(&v40);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)&v34);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v35, v34);
        goto LABEL_43;
    }
  }
}

void sub_1DC068AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t *a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,std::exception a31)
{
  nlohmann::detail::parse_error::~parse_error(&a31);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(&a10);
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  if (*(char *)(v31 - 89) < 0) {
    operator delete(*(void **)(v31 - 112));
  }
  long long v33 = *(void **)(v31 - 88);
  if (v33) {
    operator delete(v33);
  }
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::parse_error>(uint64_t a1, uint64_t a2, uint64_t a3, const nlohmann::detail::parse_error *a4)
{
  *(unsigned char *)(a1 + 40) = 1;
  if (*(unsigned char *)(a1 + 41))
  {
    exceptiouint64_t n = (nlohmann::detail::parse_error *)__cxa_allocate_exception(0x28uLL);
    int v7 = nlohmann::detail::parse_error::parse_error(exception, a4);
  }
  return 0;
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::json_sax_dom_callback_parser(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  uint64_t v6 = a1 + 32;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(unsigned char *)(a1 + 88) = 0;
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::__value_func[abi:ne180100](a1 + 96, a3);
  *(unsigned char *)(a1 + 136) = 9;
  *(unsigned char *)(a1 + 128) = a4;
  *(void *)(a1 + 144) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1 + 136);
  char v8 = 1;
  std::vector<BOOL>::push_back(v6, &v8);
  return a1;
}

void sub_1DC068D9C(_Unwind_Exception *a1)
{
  uint64_t v6 = v3;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json(v4);
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100](v6);
  char v8 = *(void **)(v1 + 56);
  if (v8) {
    operator delete(v8);
  }
  if (*v2) {
    operator delete(*v2);
  }
  int v9 = *v5;
  if (*v5)
  {
    *(void *)(v1 + 16) = v9;
    operator delete(v9);
  }
  _Unwind_Resume(a1);
}

void std::vector<BOOL>::push_back(uint64_t a1, unsigned char *a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  if (v4 == v5 << 6)
  {
    if ((uint64_t)(v4 + 1) < 0) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v6 = v5 << 7;
    if (v6 <= (v4 & 0xFFFFFFFFFFFFFFC0) + 64) {
      unint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFC0) + 64;
    }
    if (v4 <= 0x3FFFFFFFFFFFFFFELL) {
      unint64_t v7 = v6;
    }
    else {
      unint64_t v7 = 0x7FFFFFFFFFFFFFFFLL;
    }
    std::vector<BOOL>::reserve((char **)a1, v7);
    unint64_t v4 = *(void *)(a1 + 8);
  }
  *(void *)(a1 + 8) = v4 + 1;
  char v8 = *(char **)a1;
  unint64_t v9 = v4 >> 6;
  uint64_t v10 = 1 << v4;
  if (*a2) {
    uint64_t v11 = *(void *)&v8[8 * v9] | v10;
  }
  else {
    uint64_t v11 = *(void *)&v8[8 * v9] & ~v10;
  }
  *(void *)&v8[8 * v9] = v11;
}

void std::vector<BOOL>::reserve(char **a1, unint64_t a2)
{
  if (a2 > (void)a1[2] << 6)
  {
    if ((a2 & 0x8000000000000000) != 0) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = 0;
    long long v11 = 0uLL;
    std::vector<BOOL>::__vallocate[abi:ne180100](&v10, a2);
    unint64_t v3 = (unint64_t)a1[1];
    char v8 = *a1;
    int v9 = 0;
    unint64_t v6 = &v8[8 * (v3 >> 6)];
    int v7 = v3 & 0x3F;
    std::vector<BOOL>::__construct_at_end<std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>>(&v10, (uint64_t)&v8, (uint64_t)&v6, v3);
    unint64_t v4 = *a1;
    *a1 = v10;
    uint64_t v10 = v4;
    long long v5 = *(_OWORD *)(a1 + 1);
    *(_OWORD *)(a1 + 1) = v11;
    long long v11 = v5;
    if (v4) {
      operator delete(v4);
    }
  }
}

void sub_1DC068F3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<BOOL>::__vallocate[abi:ne180100](void *a1, uint64_t a2)
{
  if (a2 < 0) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 2), ((unint64_t)(a2 - 1) >> 6) + 1);
  *a1 = result;
  a1[1] = 0;
  a1[2] = v4;
  return result;
}

void std::vector<BOOL>::__construct_at_end<std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>>(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = a1[1];
  unint64_t v5 = v4 + a4;
  a1[1] = v4 + a4;
  if (!v4 || ((v5 - 1) ^ (v4 - 1)) >= 0x40)
  {
    if (v5 >= 0x41) {
      unint64_t v6 = (v5 - 1) >> 6;
    }
    else {
      unint64_t v6 = 0;
    }
    *(void *)(*a1 + 8 * v6) = 0;
  }
  int v7 = *(_DWORD *)(a2 + 8);
  uint64_t v8 = *(void *)a3;
  int v9 = *(_DWORD *)(a3 + 8);
  uint64_t v10 = *a1 + 8 * (v4 >> 6);
  uint64_t v16 = *(void *)a2;
  int v17 = v7;
  uint64_t v14 = v8;
  int v15 = v9;
  uint64_t v12 = v10;
  int v13 = v4 & 0x3F;
  std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>,0>(&v16, &v14, &v12, (uint64_t)&v11);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

void std::__unwrap_and_dispatch[abi:ne180100]<std::__overload<std::__copy_loop<std::_ClassicAlgPolicy>,std::__copy_trivial>,std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>,0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  int v5 = *((_DWORD *)a1 + 2);
  uint64_t v6 = *a2;
  int v7 = *((_DWORD *)a2 + 2);
  uint64_t v16 = *a1;
  int v17 = v5;
  uint64_t v14 = v6;
  int v15 = v7;
  int v8 = *((_DWORD *)a3 + 2);
  uint64_t v12 = *a3;
  int v13 = v8;
  std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>>((uint64_t)&v16, (uint64_t)&v14, (uint64_t)&v12, (uint64_t)&v18);
  int v9 = v19;
  uint64_t v10 = v20;
  int v11 = v21;
  *(void *)a4 = v18;
  *(_DWORD *)(a4 + 8) = v9;
  *(void *)(a4 + 16) = v10;
  *(_DWORD *)(a4 + 24) = v11;
}

void std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>,std::__bit_iterator<std::vector<BOOL>,false,0ul>>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  unint64_t v4 = *(void **)a1;
  int v5 = *(_DWORD *)(a1 + 8);
  for (i = *(_DWORD *)(a3 + 8); *(void *)a1 != *(void *)a2 || v5 != *(_DWORD *)(a2 + 8); int v5 = *(_DWORD *)(a1 + 8))
  {
    int v8 = *(uint64_t **)a3;
    uint64_t v9 = 1 << i;
    if ((*v4 >> v5)) {
      uint64_t v10 = *v8 | v9;
    }
    else {
      uint64_t v10 = *v8 & ~v9;
    }
    *int v8 = v10;
    if (v5 == 63)
    {
      int v11 = 0;
      *(void *)a1 = v4 + 1;
    }
    else
    {
      int v11 = v5 + 1;
    }
    *(_DWORD *)(a1 + 8) = v11;
    int v12 = *(_DWORD *)(a3 + 8);
    if (v12 == 63)
    {
      int i = 0;
      *(void *)a3 += 8;
    }
    else
    {
      int i = v12 + 1;
    }
    *(_DWORD *)(a3 + 8) = i;
    unint64_t v4 = *(void **)a1;
  }
  *(void *)a4 = v4;
  *(_DWORD *)(a4 + 8) = v5;
  *(void *)(a4 + 16) = *(void *)a3;
  *(_DWORD *)(a4 + 24) = i;
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::start_object(uint64_t *a1, unint64_t a2)
{
  unint64_t v4 = (char **)(a1 + 1);
  char v30 = std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 0);
  std::vector<BOOL>::push_back((uint64_t)(a1 + 4), &v30);
  LOBYTE(v28) = 1;
  nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>(a1, (unsigned __int8 *)&v28, 1);
  uint64_t v6 = v5;
  int v7 = (void *)a1[2];
  unint64_t v8 = a1[3];
  if ((unint64_t)v7 >= v8)
  {
    uint64_t v10 = ((char *)v7 - *v4) >> 3;
    if ((unint64_t)(v10 + 1) >> 61) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v8 - (void)*v4;
    uint64_t v12 = v11 >> 2;
    if (v11 >> 2 <= (unint64_t)(v10 + 1)) {
      uint64_t v12 = v10 + 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v12;
    }
    if (v13) {
      uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v13);
    }
    else {
      uint64_t v14 = 0;
    }
    int v15 = &v14[8 * v10];
    uint64_t v16 = &v14[8 * v13];
    *(void *)int v15 = v6;
    uint64_t v9 = v15 + 8;
    uint64_t v18 = (char *)a1[1];
    int v17 = (char *)a1[2];
    if (v17 != v18)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v15 - 1) = v19;
        v15 -= 8;
      }
      while (v17 != v18);
      int v17 = *v4;
    }
    a1[1] = (uint64_t)v15;
    a1[2] = (uint64_t)v9;
    a1[3] = (uint64_t)v16;
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    void *v7 = v5;
    uint64_t v9 = v7 + 1;
  }
  a1[2] = (uint64_t)v9;
  if (a2 != -1)
  {
    uint64_t v20 = (char *)*(v9 - 1);
    if (v20)
    {
      unint64_t v21 = *v20;
      if (v21 > 2) {
        unint64_t v22 = 1;
      }
      else {
        unint64_t v22 = qword_1DC160D20[v21];
      }
      if (v22 < a2)
      {
        exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
        std::to_string(&v27, a2);
        int v25 = std::string::insert(&v27, 0, "excessive object size: ");
        long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        std::string::size_type v29 = v25->__r_.__value_.__r.__words[2];
        long long v28 = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        nlohmann::detail::out_of_range::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(408, (uint64_t)&v28, exception);
      }
    }
  }
  return 1;
}

void sub_1DC0693D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v22);
  goto LABEL_8;
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_object(void *a1)
{
  uint64_t v2 = a1[2];
  if (*(void *)(v2 - 8)
    && (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), ((unint64_t)(v2 - a1[1]) >> 3) - 1, 1) & 1) == 0)
  {
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)v16, (uint64_t)(a1 + 17));
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*(void *)(a1[2] - 8), (uint64_t)v16);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v16);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v17, v16[0]);
  }
  uint64_t v4 = a1[1];
  uint64_t v3 = a1[2];
  if (v4 == v3) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_object();
  }
  uint64_t v5 = a1[5];
  if (!v5) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_object();
  }
  a1[2] = v3 - 8;
  a1[5] = v5 - 1;
  if (v4 != v3 - 8)
  {
    uint64_t v6 = *(unsigned __int8 **)(v3 - 16);
    if (v6)
    {
      if (*v6 - 1 <= 1)
      {
        nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::iter_impl(&v13, (uint64_t)v6);
        nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::set_begin(&v13);
        nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::iter_impl(v12, *(void *)(a1[2] - 8));
        nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::set_end(v12);
        if (!nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator==<nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,(decltype(nullptr))0>(&v13, v12))
        {
          while (*nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator->(&v13) != 9)
          {
            nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator++(&v13);
            nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::iter_impl(v12, *(void *)(a1[2] - 8));
            nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::set_end(v12);
            if (nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator==<nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,(decltype(nullptr))0>(&v13, v12))
            {
              return 1;
            }
          }
          int v7 = *(unsigned __int8 **)(a1[2] - 8);
          uint64_t v9 = v13;
          long long v10 = v14;
          uint64_t v11 = v15;
          nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::erase<nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,0>(v7, &v9, v12);
        }
      }
    }
  }
  return 1;
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::key(void *a1, long long *a2)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<std::string const&,std::string,0>((uint64_t)v10, (uint64_t)a2);
  char v9 = std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (a1[2] - a1[1]) >> 3, 4);
  std::vector<BOOL>::push_back((uint64_t)(a1 + 7), &v9);
  if (v9 && *(void *)(a1[2] - 8))
  {
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)v7, (uint64_t)(a1 + 17));
    uint64_t v4 = *(uint64_t ***)(*(void *)(a1[2] - 8) + 8);
    uint64_t v12 = a2;
    uint64_t v5 = std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v4, (const void **)a2, (uint64_t)&std::piecewise_construct, &v12);
    a1[10] = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=((uint64_t)(v5 + 7), (uint64_t)v7);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v7);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v8, v7[0]);
  }
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v10);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v11, v10[0]);
  return 1;
}

void sub_1DC0696B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, uint64_t *);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va1);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::start_array(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = (char **)(a1 + 1);
  char v30 = std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 2);
  std::vector<BOOL>::push_back((uint64_t)(a1 + 4), &v30);
  LOBYTE(v28) = 2;
  nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>(a1, (unsigned __int8 *)&v28, 1);
  uint64_t v6 = v5;
  int v7 = (void *)a1[2];
  unint64_t v8 = a1[3];
  if ((unint64_t)v7 >= v8)
  {
    uint64_t v10 = ((char *)v7 - *v4) >> 3;
    if ((unint64_t)(v10 + 1) >> 61) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v11 = v8 - (void)*v4;
    uint64_t v12 = v11 >> 2;
    if (v11 >> 2 <= (unint64_t)(v10 + 1)) {
      uint64_t v12 = v10 + 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v12;
    }
    if (v13) {
      long long v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v13);
    }
    else {
      long long v14 = 0;
    }
    uint64_t v15 = &v14[8 * v10];
    uint64_t v16 = &v14[8 * v13];
    *(void *)uint64_t v15 = v6;
    char v9 = v15 + 8;
    uint64_t v18 = (char *)a1[1];
    int v17 = (char *)a1[2];
    if (v17 != v18)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v15 - 1) = v19;
        v15 -= 8;
      }
      while (v17 != v18);
      int v17 = *v4;
    }
    a1[1] = (uint64_t)v15;
    a1[2] = (uint64_t)v9;
    a1[3] = (uint64_t)v16;
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    void *v7 = v5;
    char v9 = v7 + 1;
  }
  a1[2] = (uint64_t)v9;
  if (a2 != -1)
  {
    uint64_t v20 = (char *)*(v9 - 1);
    if (v20)
    {
      unint64_t v21 = *v20;
      if (v21 > 2) {
        unint64_t v22 = 1;
      }
      else {
        unint64_t v22 = qword_1DC160D20[v21];
      }
      if (v22 < a2)
      {
        exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
        std::to_string(&v27, a2);
        int v25 = std::string::insert(&v27, 0, "excessive array size: ");
        long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        std::string::size_type v29 = v25->__r_.__value_.__r.__words[2];
        long long v28 = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        nlohmann::detail::out_of_range::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(408, (uint64_t)&v28, exception);
      }
    }
  }
  return 1;
}

void sub_1DC0698D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v22);
  goto LABEL_8;
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_array(void *a1)
{
  uint64_t v2 = a1[2];
  if (*(void *)(v2 - 8)
    && (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), ((unint64_t)(v2 - a1[1]) >> 3) - 1, 3) & 1) == 0)
  {
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)v9, (uint64_t)(a1 + 17));
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*(void *)(a1[2] - 8), (uint64_t)v9);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v9);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v10, v9[0]);
    char v3 = 0;
  }
  else
  {
    char v3 = 1;
  }
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  if (v5 == v4) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_array();
  }
  uint64_t v6 = a1[5];
  if (!v6) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_array();
  }
  a1[2] = v4 - 8;
  a1[5] = v6 - 1;
  if (v5 == v4 - 8) {
    char v3 = 1;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v7 = *(void *)(v4 - 16);
    if (*(unsigned char *)v7 == 2) {
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__base_destruct_at_end[abi:ne180100](*(void *)(v7 + 8), *(void *)(*(void *)(v7 + 8) + 8) - 16);
    }
  }
  return 1;
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::out_of_range>(uint64_t a1, uint64_t a2, uint64_t a3, const nlohmann::detail::out_of_range *a4)
{
  *(unsigned char *)(a1 + 88) = 1;
  if (*(unsigned char *)(a1 + 128))
  {
    exceptiouint64_t n = (nlohmann::detail::out_of_range *)__cxa_allocate_exception(0x20uLL);
    uint64_t v7 = nlohmann::detail::out_of_range::out_of_range(exception, a4);
  }
  return 0;
}

uint64_t std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()(uint64_t a1, int a2, char a3)
{
  int v6 = a2;
  char v5 = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    std::__throw_bad_function_call[abi:ne180100]();
  }
  return (*(uint64_t (**)(uint64_t, int *, char *))(*(void *)v3 + 48))(v3, &v6, &v5);
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>(uint64_t *a1, unsigned __int8 *a2, char a3)
{
  uint64_t v3 = a1[5];
  if (!v3) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
  }
  if ((*(void *)(a1[4] + (((unint64_t)(v3 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v3 - 1)))
  {
    int v6 = *a2;
    v24[0] = v6;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::json_value(&v25, v6);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    if ((a3 & 1) != 0
      || (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 5) & 1) != 0)
    {
      uint64_t v7 = a1[2];
      if (a1[1] == v7)
      {
        v22[0] = v24[0];
        uint64_t v23 = v25;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        v24[0] = 0;
        int v25 = 0;
        uint64_t v13 = 1;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v23, v22[0]);
LABEL_20:
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v25, v24[0]);
        return v13;
      }
      unint64_t v8 = *(unsigned __int8 **)(v7 - 8);
      if (v8)
      {
        int v9 = *v8;
        if (v9 == 2)
        {
          uint64_t v10 = (uint64_t *)*((void *)v8 + 1);
          unint64_t v11 = v10[1];
          if (v11 >= v10[2])
          {
            uint64_t v12 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(v10, (uint64_t)v24);
          }
          else
          {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>((uint64_t)v10, (uint64_t)v24);
            uint64_t v12 = v11 + 16;
          }
          v10[1] = v12;
          uint64_t v13 = 1;
          goto LABEL_20;
        }
        if (v9 == 1)
        {
          uint64_t v14 = a1[8];
          if (v14)
          {
            unint64_t v15 = v14 - 1;
            unint64_t v16 = *(void *)(a1[7] + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8));
            a1[8] = v15;
            if ((v16 >> v15))
            {
              if (!a1[10]) {
                __assert_rtn("handle_value", "json.hpp", 6101, "object_element");
              }
              v20[0] = v24[0];
              int v21 = v25;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
              v24[0] = 0;
              int v25 = 0;
              uint64_t v13 = 1;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[10], (uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v21, v20[0]);
              goto LABEL_20;
            }
            goto LABEL_17;
          }
          uint64_t v18 = "!key_keep_stack.empty()";
          int v19 = 6092;
        }
        else
        {
          uint64_t v18 = "ref_stack.back()->is_array() || ref_stack.back()->is_object()";
          int v19 = 6080;
        }
        __assert_rtn("handle_value", "json.hpp", v19, v18);
      }
    }
LABEL_17:
    uint64_t v13 = 0;
    goto LABEL_20;
  }
  return 0;
}

void sub_1DC069D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 4;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 3 > v5) {
    unint64_t v5 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v9 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v15[4] = a1 + 2;
  uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v7, v9);
  uint64_t v11 = (uint64_t)&v10[16 * v4];
  v15[0] = v10;
  v15[1] = v11;
  v15[3] = &v10[16 * v12];
  *(unsigned char *)uint64_t v11 = *(unsigned char *)a2;
  *(void *)(v11 + 8) = *(void *)(a2 + 8);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a2);
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  std::string v15[2] = v11 + 16;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v15);
  uint64_t v13 = a1[1];
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v15);
  return v13;
}

void sub_1DC069E90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator->(unsigned __int8 **a1)
{
  uint64_t result = *a1;
  if (!result) {
    nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator->();
  }
  int v3 = *result;
  if (v3 == 2)
  {
    unint64_t v5 = *(unsigned __int8 **)(*((void *)result + 1) + 8);
    uint64_t result = a1[2];
    if (result == v5) {
      nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator->();
    }
  }
  else if (v3 == 1)
  {
    uint64_t v4 = a1[1];
    if (v4 == (unsigned __int8 *)(*((void *)result + 1) + 8)) {
      nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator->();
    }
    return v4 + 56;
  }
  else if (a1[3])
  {
    exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
    std::string::basic_string[abi:ne180100]<0>(v7, "cannot get value");
    nlohmann::detail::invalid_iterator::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(214, (uint64_t)v7, exception);
  }
  return result;
}

void sub_1DC069F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::erase<nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, void *a3@<X8>)
{
  if (*a2 != a1)
  {
    exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
    std::string::basic_string[abi:ne180100]<0>(&v25, "iterator does not fit current value");
    nlohmann::detail::invalid_iterator::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(202, (uint64_t)&v25, exception);
  }
  int v6 = (unsigned __int8 **)nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::iter_impl(a3, (uint64_t)a1);
  nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::set_end(v6);
  int v7 = *a1;
  if ((v7 - 3) < 6)
  {
    if (a2[3])
    {
      int v19 = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
      std::string::basic_string[abi:ne180100]<0>(&v25, "iterator out of range");
      nlohmann::detail::invalid_iterator::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(205, (uint64_t)&v25, v19);
    }
    if (v7 == 8)
    {
      unint64_t v9 = (void **)(a1 + 8);
      uint64_t v8 = (void **)*((void *)a1 + 1);
      uint64_t v14 = *v8;
      if (*v8)
      {
        v8[1] = v14;
        uint64_t v10 = v14;
        goto LABEL_13;
      }
    }
    else
    {
      if (v7 != 3)
      {
LABEL_15:
        *a1 = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)a1);
        return;
      }
      unint64_t v9 = (void **)(a1 + 8);
      uint64_t v8 = (void **)*((void *)a1 + 1);
      if (*((char *)v8 + 23) < 0)
      {
        uint64_t v10 = *v8;
LABEL_13:
        operator delete(v10);
        uint64_t v8 = (void **)*v9;
      }
    }
    operator delete(v8);
    *unint64_t v9 = 0;
    goto LABEL_15;
  }
  if (v7 == 1)
  {
    unint64_t v15 = (uint64_t **)*((void *)a1 + 1);
    int v16 = (uint64_t *)a2[1];
    int v17 = std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__remove_node_pointer(v15, v16);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,0>((uint64_t)(v16 + 4));
    operator delete(v16);
    a3[1] = v17;
  }
  else
  {
    if (v7 != 2)
    {
      uint64_t v20 = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
      int v21 = (char *)nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::type_name((char *)a1);
      std::string::basic_string[abi:ne180100]<0>(&v24, v21);
      unint64_t v22 = std::string::insert(&v24, 0, "cannot use erase() with ");
      long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
      std::string::size_type v26 = v22->__r_.__value_.__r.__words[2];
      long long v25 = v23;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(307, (uint64_t)&v25, v20);
    }
    uint64_t v11 = *((void *)a1 + 1);
    uint64_t v12 = (uint64_t)a2[2];
    std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *>((uint64_t)&v25, v12 + 16, *(void *)(v11 + 8), v12);
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__base_destruct_at_end[abi:ne180100](v11, v13);
    a3[2] = v12;
  }
}

void sub_1DC06A260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (v22) {
    __cxa_free_exception(v21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::__map_value_compare<std::string,std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>>::__remove_node_pointer(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      int v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = a2;
    do
    {
      int v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      uint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  int v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
  return v3;
}

uint64_t *std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  int v3 = a2;
  if (*a2)
  {
    uint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      int v3 = a2;
      goto LABEL_7;
    }
    do
    {
      int v3 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  int v6 = (uint64_t **)v3[2];
  int v7 = *v6;
  if (*v6 == v3)
  {
    uint64_t *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      int v7 = 0;
      uint64_t result = (uint64_t *)v2;
    }
    else
    {
      int v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    void v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *int v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      uint64_t result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 == v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      uint64_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      std::string v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
      *uint64_t v13 = v12;
      *(void *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7) {
        uint64_t result = v7;
      }
      int v7 = *(uint64_t **)(*v7 + 8);
    }
    unint64_t v15 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v15 + 24))
    {
      int v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((unsigned char *)v16 + 24))
      {
LABEL_56:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        uint64_t *v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        std::string v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v15;
        v15[1] = v7;
        std::string v7[2] = (uint64_t)v15;
        int v16 = v7;
      }
      else
      {
        unint64_t v15 = v7;
      }
      uint64_t v23 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v16 + 24) = 1;
      std::string v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      uint64_t *v24 = v23;
      goto LABEL_72;
    }
    int v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_55;
    }
    *((unsigned char *)v7 + 24) = 0;
    int v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      int v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    int v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    std::string v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12) {
      uint64_t result = v7;
    }
    int v7 = *(uint64_t **)v12;
  }
  int v19 = (void *)*v7;
  if (*v7 && !*((unsigned char *)v19 + 24)) {
    goto LABEL_68;
  }
  uint64_t v20 = (uint64_t *)v7[1];
  if (!v20 || *((unsigned char *)v20 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    int v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if (v19 && !*((unsigned char *)v19 + 24))
  {
LABEL_68:
    uint64_t v20 = v7;
  }
  else
  {
    *((unsigned char *)v20 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    std::string v20[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)v7)) = v20;
    *uint64_t v20 = (uint64_t)v7;
    std::string v7[2] = (uint64_t)v20;
    int v19 = v7;
  }
  uint64_t v23 = v20[2];
  *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v19 + 24) = 1;
  std::string v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

uint64_t std::__move_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> *>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      v8[0] = *(unsigned char *)v5;
      uint64_t v9 = *(uint64_t **)(v5 + 8);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v5);
      *(unsigned char *)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v8);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a4, (uint64_t)v8);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v8);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v9, v8[0]);
      a4 += 16;
      v5 += 16;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

nlohmann::detail::out_of_range *nlohmann::detail::out_of_range::out_of_range(nlohmann::detail::out_of_range *this, const nlohmann::detail::out_of_range *a2)
{
  *(void *)this = &unk_1F36281B8;
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  MEMORY[0x1E0198870]((char *)this + 16, (char *)a2 + 16);
  *(void *)this = &unk_1F3628138;
  return this;
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<double &>(uint64_t *a1, uint64_t **a2, char a3)
{
  uint64_t v3 = a1[5];
  if (!v3) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
  }
  if ((*(void *)(a1[4] + (((unint64_t)(v3 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v3 - 1)))
  {
    int v6 = *a2;
    v24[0] = 7;
    uint64_t v25 = v6;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    if ((a3 & 1) != 0
      || (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 5) & 1) != 0)
    {
      uint64_t v7 = a1[2];
      if (a1[1] == v7)
      {
        v22[0] = v24[0];
        uint64_t v23 = v25;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        v24[0] = 0;
        uint64_t v25 = 0;
        uint64_t v13 = 1;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v23, v22[0]);
LABEL_20:
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v25, v24[0]);
        return v13;
      }
      int v8 = *(unsigned __int8 **)(v7 - 8);
      if (v8)
      {
        int v9 = *v8;
        if (v9 == 2)
        {
          uint64_t v10 = (uint64_t *)*((void *)v8 + 1);
          unint64_t v11 = v10[1];
          if (v11 >= v10[2])
          {
            uint64_t v12 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(v10, (uint64_t)v24);
          }
          else
          {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>((uint64_t)v10, (uint64_t)v24);
            uint64_t v12 = v11 + 16;
          }
          v10[1] = v12;
          uint64_t v13 = 1;
          goto LABEL_20;
        }
        if (v9 == 1)
        {
          uint64_t v14 = a1[8];
          if (v14)
          {
            unint64_t v15 = v14 - 1;
            unint64_t v16 = *(void *)(a1[7] + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8));
            a1[8] = v15;
            if ((v16 >> v15))
            {
              if (!a1[10]) {
                __assert_rtn("handle_value", "json.hpp", 6101, "object_element");
              }
              v20[0] = v24[0];
              BOOL v21 = v25;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
              v24[0] = 0;
              uint64_t v25 = 0;
              uint64_t v13 = 1;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[10], (uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v21, v20[0]);
              goto LABEL_20;
            }
            goto LABEL_17;
          }
          uint64_t v18 = "!key_keep_stack.empty()";
          int v19 = 6092;
        }
        else
        {
          uint64_t v18 = "ref_stack.back()->is_array() || ref_stack.back()->is_object()";
          int v19 = 6080;
        }
        __assert_rtn("handle_value", "json.hpp", v19, v18);
      }
    }
LABEL_17:
    uint64_t v13 = 0;
    goto LABEL_20;
  }
  return 0;
}

void sub_1DC06AAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<BOOL &>(uint64_t *a1, unsigned __int8 *a2, char a3)
{
  uint64_t v3 = a1[5];
  if (!v3) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
  }
  if ((*(void *)(a1[4] + (((unint64_t)(v3 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v3 - 1)))
  {
    int v6 = (uint64_t *)*a2;
    v24[0] = 4;
    uint64_t v25 = v6;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    if ((a3 & 1) != 0
      || (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 5) & 1) != 0)
    {
      uint64_t v7 = a1[2];
      if (a1[1] == v7)
      {
        v22[0] = v24[0];
        uint64_t v23 = v25;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        v24[0] = 0;
        uint64_t v25 = 0;
        uint64_t v13 = 1;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v23, v22[0]);
LABEL_20:
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v25, v24[0]);
        return v13;
      }
      int v8 = *(unsigned __int8 **)(v7 - 8);
      if (v8)
      {
        int v9 = *v8;
        if (v9 == 2)
        {
          uint64_t v10 = (uint64_t *)*((void *)v8 + 1);
          unint64_t v11 = v10[1];
          if (v11 >= v10[2])
          {
            uint64_t v12 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(v10, (uint64_t)v24);
          }
          else
          {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>((uint64_t)v10, (uint64_t)v24);
            uint64_t v12 = v11 + 16;
          }
          v10[1] = v12;
          uint64_t v13 = 1;
          goto LABEL_20;
        }
        if (v9 == 1)
        {
          uint64_t v14 = a1[8];
          if (v14)
          {
            unint64_t v15 = v14 - 1;
            unint64_t v16 = *(void *)(a1[7] + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8));
            a1[8] = v15;
            if ((v16 >> v15))
            {
              if (!a1[10]) {
                __assert_rtn("handle_value", "json.hpp", 6101, "object_element");
              }
              v20[0] = v24[0];
              BOOL v21 = v25;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
              v24[0] = 0;
              uint64_t v25 = 0;
              uint64_t v13 = 1;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[10], (uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v21, v20[0]);
              goto LABEL_20;
            }
            goto LABEL_17;
          }
          uint64_t v18 = "!key_keep_stack.empty()";
          int v19 = 6092;
        }
        else
        {
          uint64_t v18 = "ref_stack.back()->is_array() || ref_stack.back()->is_object()";
          int v19 = 6080;
        }
        __assert_rtn("handle_value", "json.hpp", v19, v18);
      }
    }
LABEL_17:
    uint64_t v13 = 0;
    goto LABEL_20;
  }
  return 0;
}

void sub_1DC06AD78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<decltype(nullptr)>(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v3 = a1[5];
  if (!v3) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
  }
  if ((*(void *)(a1[4] + (((unint64_t)(v3 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v3 - 1)))
  {
    v23[0] = 0;
    std::string v24 = 0;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v23);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v23);
    if ((a3 & 1) != 0
      || (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 5) & 1) != 0)
    {
      uint64_t v6 = a1[2];
      if (a1[1] == v6)
      {
        v21[0] = v23[0];
        uint64_t v22 = v24;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v23);
        v23[0] = 0;
        std::string v24 = 0;
        uint64_t v12 = 1;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v21);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v21);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v21);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v22, v21[0]);
LABEL_20:
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v23);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v24, v23[0]);
        return v12;
      }
      uint64_t v7 = *(unsigned __int8 **)(v6 - 8);
      if (v7)
      {
        int v8 = *v7;
        if (v8 == 2)
        {
          int v9 = (uint64_t *)*((void *)v7 + 1);
          unint64_t v10 = v9[1];
          if (v10 >= v9[2])
          {
            uint64_t v11 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(v9, (uint64_t)v23);
          }
          else
          {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>((uint64_t)v9, (uint64_t)v23);
            uint64_t v11 = v10 + 16;
          }
          v9[1] = v11;
          uint64_t v12 = 1;
          goto LABEL_20;
        }
        if (v8 == 1)
        {
          uint64_t v13 = a1[8];
          if (v13)
          {
            unint64_t v14 = v13 - 1;
            unint64_t v15 = *(void *)(a1[7] + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8));
            a1[8] = v14;
            if ((v15 >> v14))
            {
              if (!a1[10]) {
                __assert_rtn("handle_value", "json.hpp", 6101, "object_element");
              }
              v19[0] = v23[0];
              uint64_t v20 = v24;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v23);
              v23[0] = 0;
              std::string v24 = 0;
              uint64_t v12 = 1;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v19);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[10], (uint64_t)v19);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v19);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v20, v19[0]);
              goto LABEL_20;
            }
            goto LABEL_17;
          }
          int v17 = "!key_keep_stack.empty()";
          int v18 = 6092;
        }
        else
        {
          int v17 = "ref_stack.back()->is_array() || ref_stack.back()->is_object()";
          int v18 = 6080;
        }
        __assert_rtn("handle_value", "json.hpp", v18, v17);
      }
    }
LABEL_17:
    uint64_t v12 = 0;
    goto LABEL_20;
  }
  return 0;
}

void sub_1DC06B03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<long long &>(uint64_t *a1, uint64_t **a2, char a3)
{
  uint64_t v3 = a1[5];
  if (!v3) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
  }
  if ((*(void *)(a1[4] + (((unint64_t)(v3 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v3 - 1)))
  {
    uint64_t v6 = *a2;
    v24[0] = 5;
    uint64_t v25 = v6;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    if ((a3 & 1) != 0
      || (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 5) & 1) != 0)
    {
      uint64_t v7 = a1[2];
      if (a1[1] == v7)
      {
        v22[0] = v24[0];
        uint64_t v23 = v25;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        v24[0] = 0;
        uint64_t v25 = 0;
        uint64_t v13 = 1;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v23, v22[0]);
LABEL_20:
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v25, v24[0]);
        return v13;
      }
      int v8 = *(unsigned __int8 **)(v7 - 8);
      if (v8)
      {
        int v9 = *v8;
        if (v9 == 2)
        {
          unint64_t v10 = (uint64_t *)*((void *)v8 + 1);
          unint64_t v11 = v10[1];
          if (v11 >= v10[2])
          {
            uint64_t v12 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(v10, (uint64_t)v24);
          }
          else
          {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>((uint64_t)v10, (uint64_t)v24);
            uint64_t v12 = v11 + 16;
          }
          v10[1] = v12;
          uint64_t v13 = 1;
          goto LABEL_20;
        }
        if (v9 == 1)
        {
          uint64_t v14 = a1[8];
          if (v14)
          {
            unint64_t v15 = v14 - 1;
            unint64_t v16 = *(void *)(a1[7] + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8));
            a1[8] = v15;
            if ((v16 >> v15))
            {
              if (!a1[10]) {
                __assert_rtn("handle_value", "json.hpp", 6101, "object_element");
              }
              v20[0] = v24[0];
              BOOL v21 = v25;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
              v24[0] = 0;
              uint64_t v25 = 0;
              uint64_t v13 = 1;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[10], (uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v21, v20[0]);
              goto LABEL_20;
            }
            goto LABEL_17;
          }
          int v18 = "!key_keep_stack.empty()";
          int v19 = 6092;
        }
        else
        {
          int v18 = "ref_stack.back()->is_array() || ref_stack.back()->is_object()";
          int v19 = 6080;
        }
        __assert_rtn("handle_value", "json.hpp", v19, v18);
      }
    }
LABEL_17:
    uint64_t v13 = 0;
    goto LABEL_20;
  }
  return 0;
}

void sub_1DC06B308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<std::string&>(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v3 = a1[5];
  if (!v3) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
  }
  if ((*(void *)(a1[4] + (((unint64_t)(v3 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v3 - 1)))
  {
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<std::string const&,std::string,0>((uint64_t)v23, a2);
    if ((a3 & 1) != 0
      || (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 5) & 1) != 0)
    {
      uint64_t v6 = a1[2];
      if (a1[1] == v6)
      {
        v21[0] = v23[0];
        uint64_t v22 = v24;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v23);
        v23[0] = 0;
        std::string v24 = 0;
        uint64_t v12 = 1;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v21);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v21);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v21);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v22, v21[0]);
LABEL_20:
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v23);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v24, v23[0]);
        return v12;
      }
      uint64_t v7 = *(unsigned __int8 **)(v6 - 8);
      if (v7)
      {
        int v8 = *v7;
        if (v8 == 2)
        {
          int v9 = (uint64_t *)*((void *)v7 + 1);
          unint64_t v10 = v9[1];
          if (v10 >= v9[2])
          {
            uint64_t v11 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(v9, (uint64_t)v23);
          }
          else
          {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>((uint64_t)v9, (uint64_t)v23);
            uint64_t v11 = v10 + 16;
          }
          v9[1] = v11;
          uint64_t v12 = 1;
          goto LABEL_20;
        }
        if (v8 == 1)
        {
          uint64_t v13 = a1[8];
          if (v13)
          {
            unint64_t v14 = v13 - 1;
            unint64_t v15 = *(void *)(a1[7] + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8));
            a1[8] = v14;
            if ((v15 >> v14))
            {
              if (!a1[10]) {
                __assert_rtn("handle_value", "json.hpp", 6101, "object_element");
              }
              v19[0] = v23[0];
              uint64_t v20 = v24;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v23);
              v23[0] = 0;
              std::string v24 = 0;
              uint64_t v12 = 1;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v19);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[10], (uint64_t)v19);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v19);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v20, v19[0]);
              goto LABEL_20;
            }
            goto LABEL_17;
          }
          int v17 = "!key_keep_stack.empty()";
          int v18 = 6092;
        }
        else
        {
          int v17 = "ref_stack.back()->is_array() || ref_stack.back()->is_object()";
          int v18 = 6080;
        }
        __assert_rtn("handle_value", "json.hpp", v18, v17);
      }
    }
LABEL_17:
    uint64_t v12 = 0;
    goto LABEL_20;
  }
  return 0;
}

void sub_1DC06B5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<unsigned long long &>(uint64_t *a1, uint64_t **a2, char a3)
{
  uint64_t v3 = a1[5];
  if (!v3) {
    nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
  }
  if ((*(void *)(a1[4] + (((unint64_t)(v3 - 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) >> (v3 - 1)))
  {
    uint64_t v6 = *a2;
    v24[0] = 6;
    uint64_t v25 = v6;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
    if ((a3 & 1) != 0
      || (std::function<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::operator()((uint64_t)(a1 + 12), (unint64_t)(a1[2] - a1[1]) >> 3, 5) & 1) != 0)
    {
      uint64_t v7 = a1[2];
      if (a1[1] == v7)
      {
        v22[0] = v24[0];
        uint64_t v23 = v25;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        v24[0] = 0;
        uint64_t v25 = 0;
        uint64_t v13 = 1;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v22);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v23, v22[0]);
LABEL_20:
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v25, v24[0]);
        return v13;
      }
      int v8 = *(unsigned __int8 **)(v7 - 8);
      if (v8)
      {
        int v9 = *v8;
        if (v9 == 2)
        {
          unint64_t v10 = (uint64_t *)*((void *)v8 + 1);
          unint64_t v11 = v10[1];
          if (v11 >= v10[2])
          {
            uint64_t v12 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(v10, (uint64_t)v24);
          }
          else
          {
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>((uint64_t)v10, (uint64_t)v24);
            uint64_t v12 = v11 + 16;
          }
          v10[1] = v12;
          uint64_t v13 = 1;
          goto LABEL_20;
        }
        if (v9 == 1)
        {
          uint64_t v14 = a1[8];
          if (v14)
          {
            unint64_t v15 = v14 - 1;
            unint64_t v16 = *(void *)(a1[7] + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8));
            a1[8] = v15;
            if ((v16 >> v15))
            {
              if (!a1[10]) {
                __assert_rtn("handle_value", "json.hpp", 6101, "object_element");
              }
              v20[0] = v24[0];
              BOOL v21 = v25;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v24);
              v24[0] = 0;
              uint64_t v25 = 0;
              uint64_t v13 = 1;
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[10], (uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v20);
              nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v21, v20[0]);
              goto LABEL_20;
            }
            goto LABEL_17;
          }
          int v18 = "!key_keep_stack.empty()";
          int v19 = 6092;
        }
        else
        {
          int v18 = "ref_stack.back()->is_array() || ref_stack.back()->is_object()";
          int v19 = 6080;
        }
        __assert_rtn("handle_value", "json.hpp", v19, v18);
      }
    }
LABEL_17:
    uint64_t v13 = 0;
    goto LABEL_20;
  }
  return 0;
}

void sub_1DC06B87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)va);
  _Unwind_Resume(a1);
}

nlohmann::detail::parse_error *nlohmann::detail::parse_error::parse_error(nlohmann::detail::parse_error *this, const nlohmann::detail::parse_error *a2)
{
  *(void *)this = &unk_1F36281B8;
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  MEMORY[0x1E0198870]((char *)this + 16, (char *)a2 + 16);
  *(void *)this = &unk_1F3628110;
  *((void *)this + 4) = *((void *)a2 + 4);
  return this;
}

void nlohmann::detail::parse_error::position_string(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::to_string(&v12, *(void *)(a1 + 16) + 1);
  uint64_t v4 = std::string::insert(&v12, 0, " at line ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  uint64_t v6 = std::string::append(&v13, ", column ");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, *(void *)(a1 + 8));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v10 = std::string::append(&v14, (const std::string::value_type *)p_p, size);
  *a2 = *v10;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
}

void sub_1DC06BA90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v26 - 25) < 0) {
    operator delete(*(void **)(v26 - 48));
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

const char *nlohmann::detail::lexer_base<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::token_type_name(unsigned int a1)
{
  if (a1 > 0x10) {
    return "unknown token";
  }
  else {
    return off_1E6C2BD48[a1];
  }
}

uint64_t nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~json_sax_dom_callback_parser(uint64_t a1)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(a1 + 136);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy((uint64_t **)(a1 + 144), *(unsigned __int8 *)(a1 + 136));
  std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100]((void *)(a1 + 96));
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2) {
    operator delete(v2);
  }
  uint64_t v3 = *(void **)(a1 + 32);
  if (v3) {
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    *(void *)(a1 + 16) = v4;
    operator delete(v4);
  }
  return a1;
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::start_object(uint64_t *a1, unint64_t a2)
{
  LOBYTE(v26) = 1;
  uint64_t v4 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>(a1, (unsigned __int8 *)&v26);
  unint64_t v5 = a1[3];
  uint64_t v6 = (uint64_t *)a1[2];
  if ((unint64_t)v6 >= v5)
  {
    uint64_t v8 = a1[1];
    uint64_t v9 = ((uint64_t)v6 - v8) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v5 - v8;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12) {
      std::string v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v12);
    }
    else {
      std::string v13 = 0;
    }
    std::string v14 = (uint64_t *)&v13[8 * v9];
    unint64_t v15 = &v13[8 * v12];
    *std::string v14 = v4;
    long long v7 = v14 + 1;
    int v17 = (char *)a1[1];
    unint64_t v16 = (char *)a1[2];
    if (v16 != v17)
    {
      do
      {
        uint64_t v18 = *((void *)v16 - 1);
        v16 -= 8;
        *--std::string v14 = v18;
      }
      while (v16 != v17);
      unint64_t v16 = (char *)a1[1];
    }
    a1[1] = (uint64_t)v14;
    a1[2] = (uint64_t)v7;
    a1[3] = (uint64_t)v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    uint64_t *v6 = v4;
    long long v7 = v6 + 1;
  }
  a1[2] = (uint64_t)v7;
  if (a2 != -1)
  {
    unint64_t v19 = *(char *)*(v7 - 1);
    if (v19 > 2) {
      unint64_t v20 = 1;
    }
    else {
      unint64_t v20 = qword_1DC160D20[v19];
    }
    if (v20 < a2)
    {
      exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
      std::to_string(&v25, a2);
      uint64_t v23 = std::string::insert(&v25, 0, "excessive object size: ");
      long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
      std::string::size_type v27 = v23->__r_.__value_.__r.__words[2];
      long long v26 = v24;
      v23->__r_.__value_.__l.__size_ = 0;
      v23->__r_.__value_.__r.__words[2] = 0;
      v23->__r_.__value_.__r.__words[0] = 0;
      nlohmann::detail::out_of_range::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(408, (uint64_t)&v26, exception);
    }
  }
  return 1;
}

void sub_1DC06BD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v22);
  goto LABEL_8;
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::start_array(uint64_t *a1, unint64_t a2)
{
  LOBYTE(v26) = 2;
  uint64_t v4 = nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>(a1, (unsigned __int8 *)&v26);
  unint64_t v5 = a1[3];
  uint64_t v6 = (uint64_t *)a1[2];
  if ((unint64_t)v6 >= v5)
  {
    uint64_t v8 = a1[1];
    uint64_t v9 = ((uint64_t)v6 - v8) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v5 - v8;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12) {
      std::string v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 3), v12);
    }
    else {
      std::string v13 = 0;
    }
    std::string v14 = (uint64_t *)&v13[8 * v9];
    unint64_t v15 = &v13[8 * v12];
    *std::string v14 = v4;
    long long v7 = v14 + 1;
    int v17 = (char *)a1[1];
    unint64_t v16 = (char *)a1[2];
    if (v16 != v17)
    {
      do
      {
        uint64_t v18 = *((void *)v16 - 1);
        v16 -= 8;
        *--std::string v14 = v18;
      }
      while (v16 != v17);
      unint64_t v16 = (char *)a1[1];
    }
    a1[1] = (uint64_t)v14;
    a1[2] = (uint64_t)v7;
    a1[3] = (uint64_t)v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    uint64_t *v6 = v4;
    long long v7 = v6 + 1;
  }
  a1[2] = (uint64_t)v7;
  if (a2 != -1)
  {
    unint64_t v19 = *(char *)*(v7 - 1);
    if (v19 > 2) {
      unint64_t v20 = 1;
    }
    else {
      unint64_t v20 = qword_1DC160D20[v19];
    }
    if (v20 < a2)
    {
      exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
      std::to_string(&v25, a2);
      uint64_t v23 = std::string::insert(&v25, 0, "excessive array size: ");
      long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
      std::string::size_type v27 = v23->__r_.__value_.__r.__words[2];
      long long v26 = v24;
      v23->__r_.__value_.__l.__size_ = 0;
      v23->__r_.__value_.__r.__words[2] = 0;
      v23->__r_.__value_.__r.__words[0] = 0;
      nlohmann::detail::out_of_range::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(408, (uint64_t)&v26, exception);
    }
  }
  return 1;
}

void sub_1DC06BF6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v21 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v21)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v22);
  goto LABEL_8;
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::parse_error<nlohmann::detail::out_of_range>(uint64_t a1, uint64_t a2, uint64_t a3, const nlohmann::detail::out_of_range *a4)
{
  *(unsigned char *)(a1 + 40) = 1;
  if (*(unsigned char *)(a1 + 41))
  {
    exceptiouint64_t n = (nlohmann::detail::out_of_range *)__cxa_allocate_exception(0x20uLL);
    long long v7 = nlohmann::detail::out_of_range::out_of_range(exception, a4);
  }
  return 0;
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v3 = a1[2];
  if (a1[1] == v3)
  {
    int v9 = *a2;
    v14[0] = v9;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::json_value(&v15, v9);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v14);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v14);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v14);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v15, v14[0]);
    return *a1;
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 **)(v3 - 8);
    int v5 = *v4;
    if (v5 == 2)
    {
      uint64_t v6 = (uint64_t *)*((void *)v4 + 1);
      unint64_t v7 = v6[1];
      if (v7 >= v6[2])
      {
        uint64_t v8 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::detail::value_t>(v6, a2);
      }
      else
      {
        std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::detail::value_t>((uint64_t)v6, a2);
        uint64_t v8 = v7 + 16;
      }
      v6[1] = v8;
      return *(void *)(*(void *)(*(void *)(a1[2] - 8) + 8) + 8) - 16;
    }
    else
    {
      if (v5 != 1) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      if (!a1[4]) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      int v11 = *a2;
      v12[0] = v11;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::json_value(&v13, v11);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v12);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[4], (uint64_t)v12);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v12);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v13, v12[0]);
      return a1[4];
    }
  }
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__construct_one_at_end[abi:ne180100]<nlohmann::detail::value_t>(uint64_t a1, unsigned __int8 *a2)
{
  int v4 = *a2;
  uint64_t v3 = *(unsigned char **)(a1 + 8);
  *uint64_t v3 = v4;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::json_value(v3 + 8, v4);
  uint64_t result = nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v3);
  *(void *)(a1 + 8) = v3 + 16;
  return result;
}

void sub_1DC06C1B4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<nlohmann::detail::value_t>(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 4;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 3 > v5) {
    unint64_t v5 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v9 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v18 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  int v11 = &v10[16 * v4];
  v15[0] = v10;
  v15[1] = v11;
  unint64_t v16 = v11;
  int v17 = &v10[16 * v9];
  int v12 = *a2;
  char *v11 = v12;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::json_value(v11 + 8, v12);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v11);
  v16 += 16;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v15);
  uint64_t v13 = a1[1];
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v15);
  return v13;
}

void sub_1DC06C2A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<double &>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a1[2];
  if (a1[1] == v3)
  {
    uint64_t v10 = (uint64_t *)*a2;
    v15[0] = 7;
    unint64_t v16 = v10;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v16, v15[0]);
    return *a1;
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 **)(v3 - 8);
    int v5 = *v4;
    if (v5 == 2)
    {
      uint64_t v6 = (uint64_t *)*((void *)v4 + 1);
      unint64_t v7 = v6[1];
      if (v7 >= v6[2])
      {
        uint64_t v9 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<double &>(v6, a2);
      }
      else
      {
        *(void *)(v7 + 8) = 0;
        uint64_t v8 = *a2;
        *(unsigned char *)unint64_t v7 = 7;
        *(void *)(v7 + 8) = v8;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v7);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v7);
        uint64_t v9 = v7 + 16;
      }
      v6[1] = v9;
      return *(void *)(*(void *)(*(void *)(a1[2] - 8) + 8) + 8) - 16;
    }
    else
    {
      if (v5 != 1) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      if (!a1[4]) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      int v12 = (uint64_t *)*a2;
      v13[0] = 7;
      std::string v14 = v12;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[4], (uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v14, v13[0]);
      return a1[4];
    }
  }
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<double &>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 4;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 3 > v5) {
    unint64_t v5 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v9 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v7, v9);
  uint64_t v11 = (uint64_t)&v10[16 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[16 * v12];
  *(void *)(v11 + 8) = 0;
  uint64_t v13 = *a2;
  *(unsigned char *)uint64_t v11 = 7;
  *(void *)(v11 + 8) = v13;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  _OWORD v16[2] = v11 + 16;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v16);
  uint64_t v14 = a1[1];
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v16);
  return v14;
}

void sub_1DC06C518(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<BOOL &>(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v3 = a1[2];
  if (a1[1] == v3)
  {
    uint64_t v10 = (uint64_t *)*a2;
    v15[0] = 4;
    unint64_t v16 = v10;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v16, v15[0]);
    return *a1;
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 **)(v3 - 8);
    int v5 = *v4;
    if (v5 == 2)
    {
      uint64_t v6 = (uint64_t *)*((void *)v4 + 1);
      unint64_t v7 = v6[1];
      if (v7 >= v6[2])
      {
        uint64_t v9 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<BOOL &>(v6, a2);
      }
      else
      {
        *(void *)(v7 + 8) = 0;
        uint64_t v8 = *a2;
        *(unsigned char *)unint64_t v7 = 4;
        *(void *)(v7 + 8) = v8;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v7);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v7);
        uint64_t v9 = v7 + 16;
      }
      v6[1] = v9;
      return *(void *)(*(void *)(*(void *)(a1[2] - 8) + 8) + 8) - 16;
    }
    else
    {
      if (v5 != 1) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      if (!a1[4]) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      uint64_t v12 = (uint64_t *)*a2;
      v13[0] = 4;
      uint64_t v14 = v12;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[4], (uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v14, v13[0]);
      return a1[4];
    }
  }
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<BOOL &>(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 4;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 3 > v5) {
    unint64_t v5 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v9 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v7, v9);
  uint64_t v11 = (uint64_t)&v10[16 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[16 * v12];
  *(void *)(v11 + 8) = 0;
  uint64_t v13 = *a2;
  *(unsigned char *)uint64_t v11 = 4;
  *(void *)(v11 + 8) = v13;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  _OWORD v16[2] = v11 + 16;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v16);
  uint64_t v14 = a1[1];
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v16);
  return v14;
}

void sub_1DC06C790(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<decltype(nullptr)>(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  if (a1[1] == v2)
  {
    v11[0] = 0;
    uint64_t v12 = 0;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v11);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v11);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v11);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v11);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v12, v11[0]);
    return *a1;
  }
  else
  {
    uint64_t v3 = *(unsigned __int8 **)(v2 - 8);
    int v4 = *v3;
    if (v4 == 2)
    {
      unint64_t v5 = (uint64_t *)*((void *)v3 + 1);
      unint64_t v6 = v5[1];
      if (v6 >= v5[2])
      {
        uint64_t v7 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<decltype(nullptr)>(v5);
      }
      else
      {
        *(unsigned char *)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v6);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v6);
        uint64_t v7 = v6 + 16;
      }
      v5[1] = v7;
      return *(void *)(*(void *)(*(void *)(a1[2] - 8) + 8) + 8) - 16;
    }
    else
    {
      if (v4 != 1) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      if (!a1[4]) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      v9[0] = 0;
      uint64_t v10 = 0;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v9);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v9);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[4], (uint64_t)v9);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v9);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v10, v9[0]);
      return a1[4];
    }
  }
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<decltype(nullptr)>(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (a1[1] - *a1) >> 4;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v5 = (uint64_t)(a1 + 2);
  uint64_t v6 = a1[2] - v2;
  if (v6 >> 3 > v4) {
    unint64_t v4 = v6 >> 3;
  }
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v7 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v7 = v4;
  }
  v13[4] = a1 + 2;
  uint64_t v8 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v5, v7);
  uint64_t v9 = (uint64_t)&v8[16 * v3];
  v13[0] = v8;
  v13[1] = v9;
  void v13[3] = &v8[16 * v10];
  *(unsigned char *)uint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v9);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v9);
  std::string v13[2] = v9 + 16;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v13);
  uint64_t v11 = a1[1];
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v13);
  return v11;
}

void sub_1DC06C9D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<long long &>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a1[2];
  if (a1[1] == v3)
  {
    uint64_t v10 = (uint64_t *)*a2;
    v15[0] = 5;
    unint64_t v16 = v10;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v16, v15[0]);
    return *a1;
  }
  else
  {
    unint64_t v4 = *(unsigned __int8 **)(v3 - 8);
    int v5 = *v4;
    if (v5 == 2)
    {
      uint64_t v6 = (uint64_t *)*((void *)v4 + 1);
      unint64_t v7 = v6[1];
      if (v7 >= v6[2])
      {
        uint64_t v9 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<long long &>(v6, a2);
      }
      else
      {
        *(void *)(v7 + 8) = 0;
        uint64_t v8 = *a2;
        *(unsigned char *)unint64_t v7 = 5;
        *(void *)(v7 + 8) = v8;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v7);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v7);
        uint64_t v9 = v7 + 16;
      }
      v6[1] = v9;
      return *(void *)(*(void *)(*(void *)(a1[2] - 8) + 8) + 8) - 16;
    }
    else
    {
      if (v5 != 1) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      if (!a1[4]) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      uint64_t v12 = (uint64_t *)*a2;
      v13[0] = 5;
      uint64_t v14 = v12;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[4], (uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v14, v13[0]);
      return a1[4];
    }
  }
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<long long &>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 4;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 3 > v5) {
    unint64_t v5 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v9 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v7, v9);
  uint64_t v11 = (uint64_t)&v10[16 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[16 * v12];
  *(void *)(v11 + 8) = 0;
  uint64_t v13 = *a2;
  *(unsigned char *)uint64_t v11 = 5;
  *(void *)(v11 + 8) = v13;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  _OWORD v16[2] = v11 + 16;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v16);
  uint64_t v14 = a1[1];
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v16);
  return v14;
}

void sub_1DC06CC4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<std::string&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a1[2];
  if (a1[1] == v3)
  {
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<std::string const&,std::string,0>((uint64_t)v9, a2);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v9);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v9);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v10, v9[0]);
    return *a1;
  }
  else
  {
    uint64_t v4 = *(uint64_t ***)(v3 - 8);
    int v5 = *(unsigned __int8 *)v4;
    if (v5 == 2)
    {
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::emplace_back<std::string&>(v4[1], a2);
      return *(void *)(*(void *)(*(void *)(a1[2] - 8) + 8) + 8) - 16;
    }
    else
    {
      if (v5 != 1) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      if (!a1[4]) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<std::string const&,std::string,0>((uint64_t)v7, a2);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[4], (uint64_t)v7);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v7);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v8, v7[0]);
      return a1[4];
    }
  }
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::emplace_back<std::string&>(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    uint64_t v9 = (uint64_t)(v7 - *a1) >> 4;
    if ((unint64_t)(v9 + 1) >> 60) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v5 - *a1;
    uint64_t v11 = v10 >> 3;
    if (v10 >> 3 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    uint64_t v19 = v4;
    if (v12) {
      uint64_t v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    unint64_t v15 = v13;
    unint64_t v16 = &v13[16 * v9];
    uint64_t v18 = &v13[16 * v12];
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<std::string const&,std::string,0>((uint64_t)v16, a2);
    int v17 = v16 + 16;
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, &v15);
    uint64_t v8 = a1[1];
    std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)&v15);
  }
  else
  {
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json<std::string const&,std::string,0>(*(void *)(v4 - 8), a2);
    uint64_t v8 = v7 + 16;
    a1[1] = v7 + 16;
  }
  a1[1] = v8;
  return v8 - 16;
}

void sub_1DC06CE40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

uint64_t nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<unsigned long long &>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a1[2];
  if (a1[1] == v3)
  {
    uint64_t v10 = (uint64_t *)*a2;
    v15[0] = 6;
    unint64_t v16 = v10;
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(*a1, (uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v15);
    nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v16, v15[0]);
    return *a1;
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 **)(v3 - 8);
    int v5 = *v4;
    if (v5 == 2)
    {
      unint64_t v6 = (uint64_t *)*((void *)v4 + 1);
      unint64_t v7 = v6[1];
      if (v7 >= v6[2])
      {
        uint64_t v9 = std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<unsigned long long &>(v6, a2);
      }
      else
      {
        *(void *)(v7 + 8) = 0;
        uint64_t v8 = *a2;
        *(unsigned char *)unint64_t v7 = 6;
        *(void *)(v7 + 8) = v8;
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v7);
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v7);
        uint64_t v9 = v7 + 16;
      }
      v6[1] = v9;
      return *(void *)(*(void *)(*(void *)(a1[2] - 8) + 8) + 8) - 16;
    }
    else
    {
      if (v5 != 1) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      if (!a1[4]) {
        nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>();
      }
      unint64_t v12 = (uint64_t *)*a2;
      v13[0] = 6;
      uint64_t v14 = v12;
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::operator=(a1[4], (uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant((uint64_t)v13);
      nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::json_value::destroy(&v14, v13[0]);
      return a1[4];
    }
  }
}

uint64_t std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__emplace_back_slow_path<unsigned long long &>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 4;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60) {
    std::vector<std::string>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 3 > v5) {
    unint64_t v5 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v9 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  uint64_t v10 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>>(v7, v9);
  uint64_t v11 = (uint64_t)&v10[16 * v4];
  v16[0] = v10;
  v16[1] = v11;
  v16[3] = &v10[16 * v12];
  *(void *)(v11 + 8) = 0;
  uint64_t v13 = *a2;
  *(unsigned char *)uint64_t v11 = 6;
  *(void *)(v11 + 8) = v13;
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::assert_invariant(v11);
  _OWORD v16[2] = v11 + 16;
  std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__swap_out_circular_buffer(a1, v16);
  uint64_t v14 = a1[1];
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)v16);
  return v14;
}

void sub_1DC06D0C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void *std::__function::__value_func<BOOL ()(int,nlohmann::detail::parse_event_t,nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>> &)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void nlohmann::detail::input_stream_adapter::~input_stream_adapter(nlohmann::detail::input_stream_adapter *this)
{
  if (*(void *)this) {
    std::ios_base::clear((std::ios_base *)(*(void *)this + *(void *)(**(void **)this - 24)), *(_DWORD *)(*(void *)this + *(void *)(**(void **)this - 24) + 32) & 2);
  }
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(void ***a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  switch(*(unsigned char *)a2)
  {
    case 0:
      uint64_t v11 = (uint64_t (*)(void))(**a1)[1];
      goto LABEL_83;
    case 1:
      uint64_t v12 = (uint64_t)**a1;
      if (!*(void *)(*(void *)(a2 + 8) + 16))
      {
        uint64_t v45 = *(uint64_t (**)(void))(v12 + 8);
        goto LABEL_52;
      }
      if (a3)
      {
        (*(void (**)(void))(v12 + 8))();
        unsigned int v13 = a6 + a5;
        uint64_t v14 = a1 + 76;
        if (*((char *)a1 + 631) < 0)
        {
          unint64_t v15 = (unint64_t)a1[77];
          if (v15 >= v13) {
            goto LABEL_7;
          }
        }
        else
        {
          unint64_t v15 = *((unsigned __int8 *)a1 + 631);
          if (v13 <= v15)
          {
LABEL_7:
            unint64_t v16 = *(void **)(a2 + 8);
            int v17 = (void *)*v16;
            if (v16[2] == 1)
            {
              uint64_t v18 = (void *)*v16;
            }
            else
            {
              unint64_t v67 = 0;
              do
              {
                v68 = a1 + 76;
                if (*((char *)a1 + 631) < 0) {
                  v68 = (void ***)*v14;
                }
                ((void (*)(void, void ***, void))(**a1)[1])(*a1, v68, (a6 + a5));
                ((void (*)(void))***a1)();
                nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped((uint64_t)a1, v17 + 4, a4);
                ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "\": ", 3);
                nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(a1, v17 + 7, 1, a4, a5, (a6 + a5));
                ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, ",\n", 2);
                char v69 = (void *)v17[1];
                if (v69)
                {
                  do
                  {
                    uint64_t v18 = v69;
                    char v69 = (void *)*v69;
                  }
                  while (v69);
                }
                else
                {
                  do
                  {
                    uint64_t v18 = (void *)v17[2];
                    BOOL v51 = *v18 == (void)v17;
                    int v17 = v18;
                  }
                  while (!v51);
                }
                ++v67;
                unint64_t v16 = *(void **)(a2 + 8);
                int v17 = v18;
              }
              while (v67 < v16[2] - 1);
            }
            std::string v70 = v16 + 1;
            if (v18 == v70) {
              nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump();
            }
            v71 = (void *)v18[1];
            if (v71)
            {
              do
              {
                char v72 = v71;
                v71 = (void *)*v71;
              }
              while (v71);
            }
            else
            {
              v74 = v18;
              do
              {
                char v72 = (void *)v74[2];
                BOOL v51 = *v72 == (void)v74;
                v74 = v72;
              }
              while (!v51);
            }
            if (v72 != v70) {
              nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump();
            }
            uint64_t v75 = a1 + 76;
            if (*((char *)a1 + 631) < 0) {
              uint64_t v75 = (void ***)*v14;
            }
            ((void (*)(void, void ***, void))(**a1)[1])(*a1, v75, (a6 + a5));
            ((void (*)(void))***a1)();
            nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped((uint64_t)a1, v18 + 4, a4);
            ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "\": ", 3);
            nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(a1, v18 + 7, 1, a4, a5, (a6 + a5));
            ((void (*)(void))***a1)();
            uint64_t v66 = (void (*)(void))(**a1)[1];
            goto LABEL_121;
          }
        }
        std::string::resize((std::string *)(a1 + 76), 2 * v15, 32);
        goto LABEL_7;
      }
      (*(void (**)(void))v12)();
      uint64_t v46 = *(void *)(a2 + 8);
      long long v47 = *(void **)v46;
      if (*(void *)(v46 + 16) != 1)
      {
        unint64_t v48 = 0;
        do
        {
          ((void (*)(void, uint64_t))***a1)(*a1, 34);
          nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped((uint64_t)a1, v47 + 4, a4);
          ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "\":", 2);
          nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(a1, v47 + 7, 0, a4, a5, a6);
          ((void (*)(void))***a1)();
          long long v49 = (void *)v47[1];
          long long v50 = v47;
          if (v49)
          {
            do
            {
              long long v47 = v49;
              long long v49 = (void *)*v49;
            }
            while (v49);
          }
          else
          {
            do
            {
              long long v47 = (void *)v50[2];
              BOOL v51 = *v47 == (void)v50;
              long long v50 = v47;
            }
            while (!v51);
          }
          ++v48;
          uint64_t v46 = *(void *)(a2 + 8);
        }
        while (v48 < *(void *)(v46 + 16) - 1);
      }
      long long v52 = (void *)(v46 + 8);
      if (v47 == v52) {
        nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump();
      }
      long long v53 = (void *)v47[1];
      if (v53)
      {
        do
        {
          long long v54 = v53;
          long long v53 = (void *)*v53;
        }
        while (v53);
      }
      else
      {
        uint64_t v73 = v47;
        do
        {
          long long v54 = (void *)v73[2];
          BOOL v51 = *v54 == (void)v73;
          uint64_t v73 = v54;
        }
        while (!v51);
      }
      if (v54 != v52) {
        nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump();
      }
      ((void (*)(void, uint64_t))***a1)(*a1, 34);
      nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped((uint64_t)a1, v47 + 4, a4);
      ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "\":", 2);
      nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(a1, v47 + 7, 0, a4, a5, a6);
LABEL_122:
      uint64_t v11 = (uint64_t (*)(void))***a1;
LABEL_123:
      return v11();
    case 2:
      uint64_t v19 = (void (**)(void))**a1;
      if (**(void **)(a2 + 8) != *(void *)(*(void *)(a2 + 8) + 8))
      {
        if (!a3)
        {
          (*v19)();
          long long v55 = *(uint64_t **)(a2 + 8);
          uint64_t v57 = *v55;
          uint64_t v56 = v55[1];
          if (v57 == v56 - 16)
          {
            uint64_t v58 = v57;
          }
          else
          {
            uint64_t v58 = v57;
            do
            {
              nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(a1, v58, 0, a4, a5, a6);
              ((void (*)(void))***a1)();
              v58 += 16;
              std::string::size_type v59 = *(uint64_t **)(a2 + 8);
              uint64_t v56 = v59[1];
            }
            while (v58 != v56 - 16);
            uint64_t v57 = *v59;
          }
          if (v57 == v56) {
            nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump();
          }
          nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(a1, v58, 0, a4, a5, a6);
          goto LABEL_108;
        }
        v19[1]();
        unsigned int v20 = a6 + a5;
        int v21 = a1 + 76;
        if (*((char *)a1 + 631) < 0)
        {
          unint64_t v22 = (unint64_t)a1[77];
          if (v22 >= v20) {
            goto LABEL_13;
          }
        }
        else
        {
          unint64_t v22 = *((unsigned __int8 *)a1 + 631);
          if (v20 <= v22)
          {
LABEL_13:
            uint64_t v23 = *(uint64_t **)(a2 + 8);
            uint64_t v25 = *v23;
            uint64_t v24 = v23[1];
            if (v25 != v24 - 16)
            {
              do
              {
                long long v26 = a1 + 76;
                if (*((char *)a1 + 631) < 0) {
                  long long v26 = (void ***)*v21;
                }
                ((void (*)(void, void ***, void))(**a1)[1])(*a1, v26, (a6 + a5));
                nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(a1, v25, 1, a4, a5, (a6 + a5));
                ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, ",\n", 2);
                v25 += 16;
                std::string::size_type v27 = *(uint64_t **)(a2 + 8);
                uint64_t v24 = v27[1];
              }
              while (v25 != v24 - 16);
              uint64_t v25 = *v27;
            }
            if (v25 == v24) {
              nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump();
            }
            long long v28 = a1 + 76;
            if (*((char *)a1 + 631) < 0) {
              long long v28 = (void ***)*v21;
            }
            ((void (*)(void, void ***, void))(**a1)[1])(*a1, v28, (a6 + a5));
            nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump(a1, *(void *)(*(void *)(a2 + 8) + 8) - 16, 1, a4, a5, (a6 + a5));
            ((void (*)(void))***a1)();
            if (*((char *)a1 + 631) < 0) {
              int v21 = (void *)*v21;
            }
            ((void (*)(void, void *, void))(**a1)[1])(*a1, v21, a6);
LABEL_108:
            uint64_t v11 = (uint64_t (*)(void))***a1;
            goto LABEL_123;
          }
        }
        std::string::resize((std::string *)(a1 + 76), 2 * v22, 32);
        goto LABEL_13;
      }
      uint64_t v45 = (uint64_t (*)(void))v19[1];
LABEL_52:
      return v45();
    case 3:
      ((void (*)(void))***a1)();
      nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped((uint64_t)a1, *(uint64_t **)(a2 + 8), a4);
      uint64_t v11 = (uint64_t (*)(void))***a1;
      goto LABEL_123;
    case 4:
      uint64_t v11 = (uint64_t (*)(void))(**a1)[1];
      goto LABEL_83;
    case 5:
      unint64_t v29 = *(void *)(a2 + 8);
      return nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<long long,0>((uint64_t (****)(void))a1, v29);
    case 6:
      unint64_t v31 = *(void *)(a2 + 8);
      return nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned long long,0>((uint64_t (****)(void))a1, v31);
    case 7:
      double v32 = *(double *)(a2 + 8);
      return nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_float((char *)a1, v32);
    case 8:
      long long v33 = (void (*)(void))(**a1)[1];
      if (a3)
      {
        v33();
        uint64_t v34 = (a6 + a5);
        std::string v35 = a1 + 76;
        if (*((char *)a1 + 631) < 0)
        {
          unint64_t v36 = (unint64_t)a1[77];
          if (v36 >= v34)
          {
            std::string v37 = (uint64_t (***)(void))*a1;
            goto LABEL_73;
          }
        }
        else
        {
          unint64_t v36 = *((unsigned __int8 *)a1 + 631);
          if (v34 <= v36)
          {
            std::string v37 = (uint64_t (***)(void))*a1;
            std::string v38 = a1 + 76;
            goto LABEL_74;
          }
        }
        std::string::resize((std::string *)(a1 + 76), 2 * v36, 32);
        std::string v37 = (uint64_t (***)(void))*a1;
        std::string v38 = a1 + 76;
        if ((*((char *)a1 + 631) & 0x80000000) == 0)
        {
LABEL_74:
          ((void (*)(uint64_t (***)(void), void ***, uint64_t))(*v37)[1])(v37, v38, v34);
          ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "\"bytes\": [", 10);
          uint64_t v60 = *(unsigned __int8 ***)(a2 + 8);
          uint64_t v62 = *v60;
          uint64_t v61 = v60[1];
          if (v62 != v61)
          {
            if (v62 != v61 - 1)
            {
              do
              {
                unsigned int v63 = *v62++;
                nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>((uint64_t)a1, v63);
                ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, ", ", 2);
              }
              while (v62 != (unsigned __int8 *)(*(void *)(*(void *)(a2 + 8) + 8) - 1));
            }
            nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>((uint64_t)a1, *v62);
          }
          ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "],\n", 3);
          uint64_t v64 = a1 + 76;
          if (*((char *)a1 + 631) < 0) {
            uint64_t v64 = (void ***)*v35;
          }
          ((void (*)(void, void ***, uint64_t))(**a1)[1])(*a1, v64, v34);
          ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "\"subtype\": ", 11);
          uint64_t v65 = *(void *)(a2 + 8);
          if (*(unsigned char *)(v65 + 25)) {
            nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>((uint64_t)a1, *(unsigned __int8 *)(v65 + 24));
          }
          else {
            ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "null", 4);
          }
          ((void (*)(void, uint64_t))***a1)(*a1, 10);
          uint64_t v66 = (void (*)(void))(**a1)[1];
LABEL_121:
          v66();
          goto LABEL_122;
        }
LABEL_73:
        std::string v38 = (void ***)*v35;
        goto LABEL_74;
      }
      v33();
      std::string::size_type v39 = *(unsigned __int8 ***)(a2 + 8);
      uint64_t v41 = *v39;
      std::exception v40 = v39[1];
      if (v41 != v40)
      {
        while (v41 != v40 - 1)
        {
          unsigned int v42 = *v41++;
          nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>((uint64_t)a1, v42);
          ((void (*)(void, uint64_t))***a1)(*a1, 44);
          std::exception v40 = *(unsigned __int8 **)(*(void *)(a2 + 8) + 8);
        }
        nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>((uint64_t)a1, *v41);
      }
      ((void (*)(void, const char *, uint64_t))(**a1)[1])(*a1, "],\"subtype\":", 12);
      uint64_t v43 = *(void *)(a2 + 8);
      if (*(unsigned char *)(v43 + 25))
      {
        nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>((uint64_t)a1, *(unsigned __int8 *)(v43 + 24));
        uint64_t v44 = (uint64_t (*)(void))***a1;
        return v44();
      }
      uint64_t v11 = (uint64_t (*)(void))(**a1)[1];
LABEL_83:
      return v11();
    case 9:
      uint64_t v11 = (uint64_t (*)(void))(**a1)[1];
      goto LABEL_83;
    default:
      nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump();
  }
}

void std::__shared_ptr_emplace<nlohmann::detail::output_stream_adapter<char>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36287C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<nlohmann::detail::output_stream_adapter<char>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36287C0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_emplace<nlohmann::detail::output_stream_adapter<char>>::__on_zero_shared(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

uint64_t nlohmann::detail::output_stream_adapter<char>::write_character()
{
  return std::ostream::put();
}

uint64_t nlohmann::detail::output_stream_adapter<char>::write_characters(uint64_t a1)
{
  return MEMORY[0x1F417E840](*(void *)(a1 + 8));
}

void nlohmann::detail::output_stream_adapter<char>::~output_stream_adapter()
{
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::serializer(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  uint64_t v7 = localeconv();
  *(void *)(a1 + 80) = v7;
  thousands_sep = v7->thousands_sep;
  if (thousands_sep) {
    LOBYTE(thousands_sep) = *thousands_sep;
  }
  *(unsigned char *)(a1 + 88) = (_BYTE)thousands_sep;
  decimal_point = v7->decimal_point;
  if (v7->decimal_point) {
    LOBYTE(decimal_point) = *decimal_point;
  }
  *(_OWORD *)(a1 + 90) = 0u;
  *(unsigned char *)(a1 + 89) = (_BYTE)decimal_point;
  *(_OWORD *)(a1 + 106) = 0u;
  *(_OWORD *)(a1 + 122) = 0u;
  *(_OWORD *)(a1 + 138) = 0u;
  *(_OWORD *)(a1 + 154) = 0u;
  *(_OWORD *)(a1 + 170) = 0u;
  *(_OWORD *)(a1 + 186) = 0u;
  *(_OWORD *)(a1 + 202) = 0u;
  *(_OWORD *)(a1 + 218) = 0u;
  *(_OWORD *)(a1 + 234) = 0u;
  *(_OWORD *)(a1 + 250) = 0u;
  *(_OWORD *)(a1 + 266) = 0u;
  *(_OWORD *)(a1 + 282) = 0u;
  *(_OWORD *)(a1 + 298) = 0u;
  *(_OWORD *)(a1 + 314) = 0u;
  *(_OWORD *)(a1 + 330) = 0u;
  *(_OWORD *)(a1 + 346) = 0u;
  *(_OWORD *)(a1 + 362) = 0u;
  *(_OWORD *)(a1 + 378) = 0u;
  *(_OWORD *)(a1 + 394) = 0u;
  *(_OWORD *)(a1 + 410) = 0u;
  *(_OWORD *)(a1 + 426) = 0u;
  *(_OWORD *)(a1 + 442) = 0u;
  *(_OWORD *)(a1 + 458) = 0u;
  *(_OWORD *)(a1 + 474) = 0u;
  *(_OWORD *)(a1 + 490) = 0u;
  *(_OWORD *)(a1 + 506) = 0u;
  *(_OWORD *)(a1 + 522) = 0u;
  *(_OWORD *)(a1 + 538) = 0u;
  *(_OWORD *)(a1 + 554) = 0u;
  *(_OWORD *)(a1 + 570) = 0u;
  *(_OWORD *)(a1 + 586) = 0u;
  *(unsigned char *)(a1 + 602) = a3;
  uint64_t v10 = (int8x16_t *)operator new(0x208uLL);
  *(void *)(a1 + 608) = v10;
  *(void *)(a1 + 624) = 0x8000000000000208;
  int8x16_t v11 = vdupq_n_s8(a3);
  *(void *)(a1 + 616) = 512;
  *uint64_t v10 = v11;
  v10[1] = v11;
  v10[2] = v11;
  v10[3] = v11;
  void v10[4] = v11;
  void v10[5] = v11;
  v10[6] = v11;
  v10[7] = v11;
  unsigned char v10[8] = v11;
  v10[9] = v11;
  v10[10] = v11;
  v10[11] = v11;
  v10[12] = v11;
  v10[13] = v11;
  v10[14] = v11;
  v10[15] = v11;
  v10[16] = v11;
  v10[17] = v11;
  v10[18] = v11;
  v10[19] = v11;
  v10[20] = v11;
  v10[21] = v11;
  v10[22] = v11;
  v10[23] = v11;
  v10[24] = v11;
  v10[25] = v11;
  v10[26] = v11;
  v10[27] = v11;
  v10[28] = v11;
  v10[29] = v11;
  v10[30] = v11;
  v10[31] = v11;
  v10[32].i8[0] = 0;
  *(_DWORD *)(a1 + 632) = a4;
  return a1;
}

void sub_1DC06E3F8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped(uint64_t result, uint64_t *a2, int a3)
{
  char v47 = 0;
  LOBYTE(v3) = *((char *)a2 + 23) < 0;
  uint64_t v4 = *((unsigned __int8 *)a2 + 23);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = a2[1];
  }
  if (!v4) {
    return result;
  }
  uint64_t v7 = (void *)result;
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  v48[0] = 0;
  uint64_t v12 = result + 90;
  do
  {
    if (v3) {
      unsigned int v13 = (uint64_t *)*a2;
    }
    else {
      unsigned int v13 = a2;
    }
    int v14 = *((unsigned __int8 *)v13 + v8);
    uint64_t result = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::decode(&v47, v48, v14);
    if (result == 1)
    {
      int v16 = *((_DWORD *)v7 + 158);
      if ((v16 - 1) >= 2)
      {
        if (!v16)
        {
          char v46 = 3;
          *(_DWORD *)__str = 0;
          snprintf(__str, 3uLL, "%.2X", v14);
          exceptiouint64_t n = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
          std::to_string(&v39, v8);
          long long v28 = std::string::insert(&v39, 0, "invalid UTF-8 byte at index ");
          long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
          v40.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v29;
          v28->__r_.__value_.__l.__size_ = 0;
          v28->__r_.__value_.__r.__words[2] = 0;
          v28->__r_.__value_.__r.__words[0] = 0;
          char v30 = std::string::append(&v40, ": 0x");
          long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
          v41.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v31;
          v30->__r_.__value_.__l.__size_ = 0;
          v30->__r_.__value_.__r.__words[2] = 0;
          v30->__r_.__value_.__r.__words[0] = 0;
          if (v46 >= 0) {
            double v32 = __str;
          }
          else {
            double v32 = *(char **)__str;
          }
          if (v46 >= 0) {
            std::string::size_type v33 = v46;
          }
          else {
            std::string::size_type v33 = v45;
          }
          uint64_t v34 = std::string::append(&v41, v32, v33);
          long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
          std::string::size_type v43 = v34->__r_.__value_.__r.__words[2];
          long long v42 = v35;
          v34->__r_.__value_.__l.__size_ = 0;
          v34->__r_.__value_.__r.__words[2] = 0;
          v34->__r_.__value_.__r.__words[0] = 0;
          nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)v38);
          nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(316, (uint64_t)&v42, exception);
        }
        nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped();
      }
      uint64_t v17 = v9 != 0;
      if (v16 == 1)
      {
        uint64_t v18 = v12 + v10;
        if (a3)
        {
          *(_DWORD *)uint64_t v18 = 1717990748;
          *(_WORD *)(v18 + 4) = 25702;
          v10 += 6;
        }
        else
        {
          v10 += 3;
          *(_WORD *)uint64_t v18 = -16401;
          *(unsigned char *)(v18 + 2) = -67;
        }
        if ((unint64_t)(v10 - 500) <= 0xC)
        {
          uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(*(void *)*v7 + 8))(*v7, v12, v10);
          uint64_t v10 = 0;
        }
      }
      uint64_t v9 = 0;
      v8 -= v17;
      char v47 = 0;
      uint64_t v11 = v10;
    }
    else if (result)
    {
      if ((a3 & 1) == 0)
      {
        if (*((char *)a2 + 23) >= 0) {
          uint64_t v19 = a2;
        }
        else {
          uint64_t v19 = (uint64_t *)*a2;
        }
        *(unsigned char *)(v12 + v11++) = *((unsigned char *)v19 + v8);
      }
      ++v9;
    }
    else
    {
      switch(v48[0])
      {
        case 8u:
          __int16 v15 = 25180;
          goto LABEL_43;
        case 9u:
          __int16 v15 = 29788;
          goto LABEL_43;
        case 0xAu:
          __int16 v15 = 28252;
          goto LABEL_43;
        case 0xBu:
          goto LABEL_29;
        case 0xCu:
          __int16 v15 = 26204;
          goto LABEL_43;
        case 0xDu:
          __int16 v15 = 29276;
          goto LABEL_43;
        default:
          if (v48[0] == 34)
          {
            __int16 v15 = 8796;
            goto LABEL_43;
          }
          if (v48[0] == 92)
          {
            __int16 v15 = 23644;
LABEL_43:
            *(_WORD *)(v12 + v11) = v15;
            v11 += 2;
            goto LABEL_44;
          }
LABEL_29:
          if (v48[0] > 0x7E) {
            int v20 = a3;
          }
          else {
            int v20 = 0;
          }
          if (v48[0] < 0x20 || v20)
          {
            uint64_t v24 = (char *)(v12 + v11);
            if (HIWORD(v48[0]))
            {
              uint64_t result = snprintf(v24, 0xDuLL, "\\u%04x\\u%04x", (unsigned __int16)((v48[0] >> 10) - 10304), v48[0] & 0x3FF | 0xDC00);
              v11 += 12;
            }
            else
            {
              uint64_t result = snprintf(v24, 7uLL, "\\u%04x", v48[0]);
              v11 += 6;
            }
          }
          else
          {
            if (*((char *)a2 + 23) >= 0) {
              int v21 = a2;
            }
            else {
              int v21 = (uint64_t *)*a2;
            }
            *(unsigned char *)(v12 + v11++) = *((unsigned char *)v21 + v8);
          }
LABEL_44:
          if ((unint64_t)(v11 - 500) > 0xC)
          {
            uint64_t v9 = 0;
            uint64_t v10 = v11;
          }
          else
          {
            uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(*(void *)*v7 + 8))(*v7, v12, v11);
            uint64_t v11 = 0;
            uint64_t v10 = 0;
            uint64_t v9 = 0;
          }
          break;
      }
    }
    ++v8;
    int v22 = *((char *)a2 + 23);
    unsigned int v3 = v22 >> 31;
    unint64_t v23 = a2[1];
    if (v22 >= 0) {
      unint64_t v23 = *((unsigned __int8 *)a2 + 23);
    }
  }
  while (v8 < v23);
  if (v47)
  {
    int v26 = *((_DWORD *)v7 + 158);
    switch(v26)
    {
      case 1:
        (*(void (**)(void, uint64_t, uint64_t))(*(void *)*v7 + 8))(*v7, v12, v10);
        uint64_t v25 = *(uint64_t (**)(void))(*(void *)*v7 + 8);
        break;
      case 2:
        uint64_t v25 = *(uint64_t (**)(void))(*(void *)*v7 + 8);
        break;
      case 0:
        char v46 = 3;
        *(_DWORD *)__str = 0;
        unint64_t v36 = (uint64_t *)*a2;
        if (v22 >= 0) {
          unint64_t v36 = a2;
        }
        snprintf(__str, 3uLL, "%.2X", *((unsigned __int8 *)v36 + v23 - 1));
        std::string v37 = (nlohmann::detail::exception *)__cxa_allocate_exception(0x20uLL);
        std::operator+<char>();
        nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::basic_json((uint64_t)&v41);
        nlohmann::detail::type_error::create<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>(316, (uint64_t)&v42, v37);
      default:
        nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped();
    }
    return v25();
  }
  else if (v11)
  {
    uint64_t v25 = *(uint64_t (**)(void))(*(void *)*v7 + 8);
    return v25();
  }
  return result;
}

void sub_1DC06E9D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>::~basic_json((uint64_t **)&a29);
  if (a41 < 0)
  {
    operator delete(__p);
    if ((v42 & 1) == 0)
    {
LABEL_6:
      if (*(char *)(v43 - 97) < 0) {
        operator delete(*(void **)(v43 - 120));
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v42)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v41);
  goto LABEL_6;
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return (***(uint64_t (****)(void, uint64_t))a1)(*(void *)a1, 48);
  }
  LOBYTE(v2) = a2;
  if (a2 >= 0xA)
  {
    if (a2 >= 0x64)
    {
      *(_WORD *)(a1 + 17) = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>(unsigned char)::digits_to_99[(a2 - 100 * ((41 * a2) >> 12))];
      uint64_t v5 = a1 + 17;
      unsigned int v2 = (41 * a2) >> 12;
      goto LABEL_10;
    }
    uint64_t v3 = 2;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v5 = a1 + 16 + v3;
  if (a2 < 0xA)
  {
LABEL_10:
    *(unsigned char *)(v5 - 1) = v2 | 0x30;
    return (*(uint64_t (**)(void))(**(void **)a1 + 8))();
  }
  *(_WORD *)(v5 - 2) = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned char,0>(unsigned char)::digits_to_99[a2];
  return (*(uint64_t (**)(void))(**(void **)a1 + 8))();
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<long long,0>(uint64_t (****a1)(void), unint64_t a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
    uint64_t v3 = a1 + 2;
    if ((v2 & 0x8000000000000000) != 0)
    {
      *uint64_t v3 = 45;
      unint64_t v2 = -(uint64_t)v2;
      if (v2 >= 0xA)
      {
        int v7 = 4;
        unint64_t v11 = v2;
        while (1)
        {
          if (v11 <= 0x63)
          {
            v7 -= 2;
            goto LABEL_26;
          }
          if (v11 <= 0x3E7) {
            break;
          }
          if (v11 >> 4 < 0x271) {
            goto LABEL_26;
          }
          v7 += 4;
          BOOL v10 = v11 >= 0x186A0;
          v11 /= 0x2710uLL;
          if (!v10)
          {
            v7 -= 3;
            goto LABEL_26;
          }
        }
        --v7;
      }
      else
      {
        int v7 = 1;
      }
LABEL_26:
      unsigned int v8 = v7 + 1;
    }
    else
    {
      if (v2 < 0xA)
      {
        uint64_t v4 = (char *)a1 + 17;
        goto LABEL_35;
      }
      unsigned int v8 = 4;
      unint64_t v9 = v2;
      while (1)
      {
        if (v9 <= 0x63)
        {
          v8 -= 2;
          goto LABEL_27;
        }
        if (v9 <= 0x3E7) {
          break;
        }
        if (v9 >> 4 < 0x271) {
          goto LABEL_27;
        }
        v8 += 4;
        BOOL v10 = v9 >= 0x186A0;
        v9 /= 0x2710uLL;
        if (!v10)
        {
          v8 -= 3;
          goto LABEL_27;
        }
      }
      --v8;
    }
LABEL_27:
    if (v8 >= 0x3F) {
      nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<long long,0>();
    }
    uint64_t v4 = &v3[v8];
    if (v2 < 0x64)
    {
      unint64_t v12 = v2;
    }
    else
    {
      do
      {
        unint64_t v12 = v2 / 0x64;
        *((_WORD *)v4 - 1) = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<long long,0>(long long)::digits_to_99[v2 % 0x64];
        v4 -= 2;
        unint64_t v13 = v2 >> 4;
        v2 /= 0x64uLL;
      }
      while (v13 > 0x270);
    }
    if (v12 >= 0xA)
    {
      *((_WORD *)v4 - 1) = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<long long,0>(long long)::digits_to_99[v12];
LABEL_36:
      int v14 = (**a1)[1];
      return v14();
    }
    LOBYTE(v2) = v12;
LABEL_35:
    *(v4 - 1) = v2 + 48;
    goto LABEL_36;
  }
  uint64_t v5 = ***a1;
  return v5();
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned long long,0>(uint64_t (****a1)(void), unint64_t a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
    if (a2 >= 0xA)
    {
      unsigned int v6 = 4;
      unint64_t v7 = a2;
      while (1)
      {
        if (v7 <= 0x63)
        {
          v6 -= 2;
          goto LABEL_15;
        }
        if (v7 <= 0x3E7) {
          break;
        }
        if (v7 >> 4 < 0x271) {
          goto LABEL_15;
        }
        unint64_t v8 = v7 >> 5;
        v7 /= 0x2710uLL;
        v6 += 4;
        if (v8 <= 0xC34)
        {
          v6 -= 3;
          goto LABEL_15;
        }
      }
      --v6;
LABEL_15:
      if (v6 >= 0x3F) {
        nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<long long,0>();
      }
      uint64_t v3 = (uint64_t)a1 + v6 + 16;
      if (a2 < 0x64)
      {
        unint64_t v9 = a2;
      }
      else
      {
        do
        {
          unint64_t v9 = v2 / 0x64;
          *(_WORD *)(v3 - 2) = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned long long,0>(unsigned long long)::digits_to_99[v2 % 0x64];
          v3 -= 2;
          unint64_t v10 = v2 >> 4;
          v2 /= 0x64uLL;
        }
        while (v10 > 0x270);
      }
      if (v9 >= 0xA)
      {
        *(_WORD *)(v3 - 2) = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<unsigned long long,0>(unsigned long long)::digits_to_99[v9];
LABEL_24:
        unint64_t v11 = (**a1)[1];
        return v11();
      }
      LOBYTE(v2) = v9;
    }
    else
    {
      uint64_t v3 = (uint64_t)a1 + 17;
    }
    *(unsigned char *)(v3 - 1) = v2 + 48;
    goto LABEL_24;
  }
  uint64_t v4 = ***a1;
  return v4();
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_float(char *a1, double a2)
{
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    uint64_t v5 = *(void *)a1;
    uint64_t v4 = *(uint64_t (**)(uint64_t, const char *, uint64_t))(**(void **)a1 + 8);
    unsigned int v6 = "null";
    uint64_t v3 = 4;
  }
  else
  {
    uint64_t v3 = nlohmann::detail::to_chars<double>(a1 + 16, (uint64_t)(a1 + 80), a2) - (a1 + 16);
    uint64_t v4 = *(uint64_t (**)(uint64_t, const char *, uint64_t))(**(void **)a1 + 8);
    uint64_t v5 = *(void *)a1;
    unsigned int v6 = a1 + 16;
  }
  return v4(v5, v6, v3);
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::decode(unsigned char *a1, unsigned int *a2, int a3)
{
  unsigned int v3 = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::decode(unsigned char &,unsigned int &,unsigned char)::utf8d[a3];
  if (*a1) {
    unsigned int v4 = a3 & 0x3F | (*a2 << 6);
  }
  else {
    unsigned int v4 = (0xFFu >> v3) & a3;
  }
  *a2 = v4;
  unint64_t v5 = 16 * *a1 + v3 + 256;
  if (v5 >= 0x190) {
    __assert_rtn("decode", "json.hpp", 16606, "index < 400");
  }
  uint64_t v6 = nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::decode(unsigned char &,unsigned int &,unsigned char)::utf8d[v5];
  *a1 = v6;
  return v6;
}

char *nlohmann::detail::to_chars<double>(char *a1, uint64_t a2, double a3)
{
  if ((*(void *)&a3 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
    nlohmann::detail::to_chars<double>();
  }
  unsigned int v3 = a1;
  if ((*(void *)&a3 & 0x8000000000000000) != 0)
  {
    a3 = -a3;
    *a1 = 45;
    unsigned int v3 = a1 + 1;
  }
  if (a3 == 0.0)
  {
    *(_WORD *)unsigned int v3 = 11824;
    uint64_t result = v3 + 3;
    void v3[2] = 48;
  }
  else
  {
    unint64_t v5 = a2 - (void)v3;
    if (a2 - (uint64_t)v3 <= 16) {
      nlohmann::detail::to_chars<double>();
    }
    uint64_t v6 = 0;
    nlohmann::detail::dtoa_impl::grisu2<double>((uint64_t)v3, (unsigned int *)&v6 + 1, &v6, a3);
    if (SHIDWORD(v6) >= 18) {
      nlohmann::detail::to_chars<double>();
    }
    if (v5 <= 0x15) {
      nlohmann::detail::to_chars<double>();
    }
    if (v5 == 22) {
      nlohmann::detail::to_chars<double>();
    }
    return nlohmann::detail::dtoa_impl::format_buffer((nlohmann::detail::dtoa_impl *)v3, (char *)HIDWORD(v6), (int)v6, -4, 15);
  }
  return result;
}

uint64_t nlohmann::detail::dtoa_impl::grisu2<double>(uint64_t a1, unsigned int *a2, _DWORD *a3, double a4)
{
  if ((*(void *)&a4 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
    nlohmann::detail::dtoa_impl::grisu2<double>();
  }
  if (a4 <= 0.0) {
    nlohmann::detail::dtoa_impl::grisu2<double>();
  }
  nlohmann::detail::dtoa_impl::compute_boundaries<double>((uint64_t)v9, a4);
  return nlohmann::detail::dtoa_impl::grisu2(a1, a2, a3, v9[2], v9[3], v9[0], v9[1], v7, v9[4], (nlohmann::detail::dtoa_impl *)v9[5]);
}

char *nlohmann::detail::dtoa_impl::format_buffer(nlohmann::detail::dtoa_impl *this, char *a2, int a3, int a4, int a5)
{
  if ((a4 & 0x80000000) == 0) {
    nlohmann::detail::dtoa_impl::format_buffer();
  }
  if (a5 <= 0) {
    nlohmann::detail::dtoa_impl::format_buffer();
  }
  int v5 = (int)a2;
  uint64_t v7 = a3 + (uint64_t)(int)a2;
  if ((a3 & 0x80000000) == 0 && (int)v7 <= a5)
  {
    memset((char *)this + (int)a2, 48, a3);
    *((unsigned char *)this + v7) = 46;
    uint64_t result = (char *)this + v7 + 2;
    *((unsigned char *)this + (int)v7 + 1) = 48;
    return result;
  }
  if ((int)v7 < 1 || (int)v7 > a5)
  {
    if ((int)v7 > a4 && (int)v7 <= 0)
    {
      size_t v10 = -(int)v7;
      memmove((char *)this + v10 + 2, this, (int)a2);
      *(_WORD *)this = 11824;
      memset((char *)this + 2, 48, v10);
      return (char *)this + v10 + v5 + 2;
    }
    if (a2 == 1)
    {
      uint64_t v11 = 1;
    }
    else
    {
      memmove((char *)this + 2, (char *)this + 1, (int)a2 - 1);
      *((unsigned char *)this + 1) = 46;
      uint64_t v11 = v5 + 1;
    }
    unint64_t v12 = (char *)this + v11;
    *unint64_t v12 = 101;
    if ((int)v7 <= -999) {
      nlohmann::detail::dtoa_impl::format_buffer();
    }
    if ((int)v7 >= 1001) {
      nlohmann::detail::dtoa_impl::format_buffer();
    }
    if ((int)v7 >= 1) {
      char v13 = 43;
    }
    else {
      char v13 = 45;
    }
    if ((int)v7 - 1 >= 0) {
      unsigned int v14 = v7 - 1;
    }
    else {
      unsigned int v14 = 1 - v7;
    }
    v12[1] = v13;
    if (v14 > 9)
    {
      if (v14 > 0x63)
      {
        _DWORD v12[2] = (unsigned __int16)v14 / 0x64u + 48;
        unsigned __int8 v17 = (unsigned __int16)v14 % 0x64u;
        void v12[3] = (v17 / 0xAu) | 0x30;
        v12[4] = (v17 % 0xAu) | 0x30;
        uint64_t v16 = 2;
        return &v12[v16 + 3];
      }
      _DWORD v12[2] = v14 / 0xAu + 48;
      char v15 = (v14 % 0xAu) | 0x30;
    }
    else
    {
      _DWORD v12[2] = 48;
      char v15 = v14 + 48;
    }
    void v12[3] = v15;
    uint64_t v16 = 1;
    return &v12[v16 + 3];
  }
  if ((a3 & 0x80000000) == 0) {
    nlohmann::detail::dtoa_impl::format_buffer();
  }
  unint64_t v9 = (char *)this + v7;
  memmove(v9 + 1, v9, (int)a2 - (unint64_t)v7);
  *unint64_t v9 = 46;
  return (char *)this + v5 + 1;
}

uint64_t nlohmann::detail::dtoa_impl::compute_boundaries<double>@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
    nlohmann::detail::dtoa_impl::compute_boundaries<double>();
  }
  if (a2 <= 0.0) {
    nlohmann::detail::dtoa_impl::compute_boundaries<double>();
  }
  uint64_t v4 = *(void *)&a2 >> 52;
  uint64_t v5 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL | 0x10000000000000;
  uint64_t v6 = 2 * v5;
  uint64_t v7 = *(void *)&a2 >> 53;
  uint64_t v8 = 4 * v5;
  int v9 = (*(void *)&a2 >> 52) - 1077;
  uint64_t v10 = 0x10000000000000;
  if ((*(void *)&a2 & 0xFFFFFFFFFFFFFLL) != 0)
  {
    uint64_t v8 = 2 * v5;
    int v9 = (*(void *)&a2 >> 52) - 1076;
    uint64_t v10 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL | 0x10000000000000;
  }
  BOOL v11 = v7 == 0;
  if (v7) {
    uint64_t v12 = v8;
  }
  else {
    uint64_t v12 = 2 * v5;
  }
  if (v11) {
    int v9 = (*(void *)&a2 >> 52) - 1076;
  }
  else {
    uint64_t v5 = v10;
  }
  uint64_t v3 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (v4)
  {
    unint64_t v13 = (*(void *)&a2 >> 52) - 1076;
  }
  else
  {
    uint64_t v12 = 2 * v3;
    int v9 = -1075;
    unint64_t v13 = 4294966221;
  }
  if (v4)
  {
    unint64_t v14 = (*(void *)&a2 >> 52) - 1075;
  }
  else
  {
    uint64_t v6 = 2 * v3;
    unint64_t v14 = 4294966222;
  }
  if (v4) {
    uint64_t v15 = v5;
  }
  else {
    uint64_t v15 = *(void *)&a2 & 0xFFFFFFFFFFFFFLL;
  }
  uint64_t v24 = v12 - 1;
  int v25 = v9;
  uint64_t v16 = nlohmann::detail::dtoa_impl::diyfp::normalize(v6 | 1, v13);
  int v18 = v17;
  unint64_t v19 = nlohmann::detail::dtoa_impl::diyfp::normalize_to(&v24, v17);
  int v21 = v20;
  uint64_t result = nlohmann::detail::dtoa_impl::diyfp::normalize(v15, v14);
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v23;
  *(void *)(a1 + 16) = v19;
  *(_DWORD *)(a1 + 24) = v21;
  *(void *)(a1 + 32) = v16;
  *(_DWORD *)(a1 + 40) = v18;
  return result;
}

uint64_t nlohmann::detail::dtoa_impl::grisu2(uint64_t a1, unsigned int *a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, nlohmann::detail::dtoa_impl *a10)
{
  v31[0] = a4;
  v31[1] = a5;
  v30[0] = a6;
  v30[1] = a7;
  v29[0] = a9;
  v29[1] = a10;
  if (a10 != a5) {
    nlohmann::detail::dtoa_impl::grisu2();
  }
  if (a10 != a7) {
    nlohmann::detail::dtoa_impl::grisu2();
  }
  uint64_t cached_power_for_binary_exponent = nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent(a10);
  int v15 = v14;
  uint64_t v27 = cached_power_for_binary_exponent;
  int v28 = v16;
  unint64_t v17 = nlohmann::detail::dtoa_impl::diyfp::mul(v30, &v27);
  uint64_t v19 = v18;
  unint64_t v20 = nlohmann::detail::dtoa_impl::diyfp::mul(v31, &v27);
  unsigned int v22 = v21;
  unint64_t v23 = nlohmann::detail::dtoa_impl::diyfp::mul(v29, &v27);
  *a3 = -v15;
  return nlohmann::detail::dtoa_impl::grisu2_digit_gen(a1, a2, a3, v20 + 1, v22, v17, v19, v25, v23 - 1, v24);
}

uint64_t nlohmann::detail::dtoa_impl::diyfp::normalize(uint64_t result, unint64_t a2)
{
  if (!result) {
    __assert_rtn("normalize", "json.hpp", 14760, "x.f != 0");
  }
  for (; (result & 0x8000000000000000) == 0; a2 = (a2 - 1) | a2 & 0xFFFFFFFF00000000)
    result *= 2;
  return result;
}

unint64_t nlohmann::detail::dtoa_impl::diyfp::normalize_to(uint64_t *a1, int a2)
{
  int v2 = *((_DWORD *)a1 + 2) - a2;
  if (v2 < 0)
  {
    uint64_t v5 = "delta >= 0";
    int v6 = 14779;
    goto LABEL_6;
  }
  uint64_t v3 = *a1;
  unint64_t result = *a1 << v2;
  if (result >> v2 != v3)
  {
    uint64_t v5 = "((x.f << delta) >> delta) == x.f";
    int v6 = 14780;
LABEL_6:
    __assert_rtn("normalize_to", "json.hpp", v6, v5);
  }
  return result;
}

uint64_t nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent(nlohmann::detail::dtoa_impl *this)
{
  if ((int)this <= -1501) {
    nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent();
  }
  if ((int)this >= 1501) {
    nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent();
  }
  int v1 = 78913 * (-61 - (int)this) / 0x40000;
  if ((int)this < -61) {
    ++v1;
  }
  if (v1 <= -315) {
    nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent();
  }
  unsigned int v2 = (int)((v1 + 307 + (((__int16)(v1 + 307) >> 28) & 7)) << 16) >> 19;
  if (v2 >= 0x4F) {
    nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent();
  }
  uint64_t v3 = (void *)((char *)&nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent(int)::kCachedPowers
                + 16 * (unsigned __int16)v2);
  int v4 = v3[1] + this;
  if (v4 <= -125) {
    nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent();
  }
  if (v4 >= -95) {
    nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent();
  }
  return *v3;
}

unint64_t nlohmann::detail::dtoa_impl::diyfp::mul(void *a1, void *a2)
{
  uint64_t v2 = HIDWORD(*a1);
  uint64_t v3 = HIDWORD(*a2);
  unint64_t v4 = v3 * (unint64_t)*a1;
  unint64_t v5 = *a2 * (unint64_t)v2;
  return HIDWORD(v5)
       + v3 * (unint64_t)v2
       + HIDWORD(v4)
       + ((((*a2 * (unint64_t)*a1) >> 32)
         + v4
         + v5
         + 0x80000000) >> 32);
}

uint64_t nlohmann::detail::dtoa_impl::grisu2_digit_gen(uint64_t a1, unsigned int *a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10)
{
  v47[0] = a4;
  v47[1] = a5;
  v46[0] = a6;
  v46[1] = a7;
  unint64_t v44 = a9;
  uint64_t v45 = a10;
  if ((int)a10 <= -61) {
    nlohmann::detail::dtoa_impl::grisu2_digit_gen();
  }
  if ((int)a10 >= -31) {
    nlohmann::detail::dtoa_impl::grisu2_digit_gen();
  }
  unint64_t v13 = nlohmann::detail::dtoa_impl::diyfp::sub((uint64_t)&v44, (uint64_t)v47);
  uint64_t v14 = nlohmann::detail::dtoa_impl::diyfp::sub((uint64_t)&v44, (uint64_t)v46);
  int v15 = -(int)v45;
  unint64_t v16 = v44 >> -(char)v45;
  if (!v16) {
    nlohmann::detail::dtoa_impl::grisu2_digit_gen();
  }
  unint64_t v17 = v14;
  unint64_t v18 = 1 << v15;
  uint64_t v19 = (1 << v15) - 1;
  unint64_t v20 = v19 & v44;
  if (v16 <= 0x3B9AC9FF)
  {
    if (v16 <= 0x5F5E0FF)
    {
      if (v16 <= 0x98967F)
      {
        if (v16 <= 0xF423F)
        {
          unsigned int v23 = v16 >> 5;
          unsigned int v24 = v16 >> 4;
          if (v16 <= 9) {
            int v25 = 1;
          }
          else {
            int v25 = 10;
          }
          if (v16 <= 9) {
            int v26 = 1;
          }
          else {
            int v26 = 2;
          }
          if (v16 <= 0x63) {
            int v27 = v26;
          }
          else {
            int v27 = 3;
          }
          if (v16 <= 0x63) {
            int v28 = v25;
          }
          else {
            int v28 = 100;
          }
          if (v16 <= 0x3E7) {
            int v29 = v27;
          }
          else {
            int v29 = 4;
          }
          if (v16 <= 0x3E7) {
            int v30 = v28;
          }
          else {
            int v30 = 1000;
          }
          if (v24 <= 0x270) {
            int v31 = v29;
          }
          else {
            int v31 = 5;
          }
          if (v24 <= 0x270) {
            int v32 = v30;
          }
          else {
            int v32 = 10000;
          }
          if (v23 <= 0xC34) {
            int v22 = v31;
          }
          else {
            int v22 = 6;
          }
          if (v23 > 0xC34) {
            unsigned int v21 = 100000;
          }
          else {
            unsigned int v21 = v32;
          }
        }
        else
        {
          unsigned int v21 = 1000000;
          int v22 = 7;
        }
      }
      else
      {
        unsigned int v21 = 10000000;
        int v22 = 8;
      }
    }
    else
    {
      unsigned int v21 = 100000000;
      int v22 = 9;
    }
  }
  else
  {
    unsigned int v21 = 1000000000;
    int v22 = 10;
  }
  unsigned int v33 = v22 + 1;
  do
  {
    unsigned int v34 = v16 / v21;
    if (v16 / v21 >= 0xA) {
      nlohmann::detail::dtoa_impl::grisu2_digit_gen();
    }
    unint64_t v16 = v16 % v21;
    uint64_t v35 = (int)*a2;
    *a2 = v35 + 1;
    *(unsigned char *)(a1 + v35) = v34 + 48;
    if ((v16 << v15) + v20 <= v13)
    {
      *a3 = *a3 + v33 - 2;
      unint64_t v18 = (unint64_t)v21 << v15;
      std::string v40 = (char *)*a2;
      uint64_t v41 = a1;
      unint64_t v42 = v13;
      v20 += v16 << v15;
      return nlohmann::detail::dtoa_impl::grisu2_round(v41, v40, v17, v42, v20, v18);
    }
    v21 /= 0xAu;
    --v33;
  }
  while (v33 > 1);
  if (v20 <= v13) {
    nlohmann::detail::dtoa_impl::grisu2_digit_gen();
  }
  int v36 = 0;
  do
  {
    if (v20 >= 0x199999999999999ALL) {
      nlohmann::detail::dtoa_impl::grisu2_digit_gen();
    }
    unint64_t v37 = (10 * v20) >> v15;
    if (v37 >= 0xA) {
      nlohmann::detail::dtoa_impl::grisu2_digit_gen();
    }
    uint64_t v38 = (int)*a2;
    *a2 = v38 + 1;
    *(unsigned char *)(a1 + v38) = v37 + 48;
    uint64_t v39 = 5 * v13;
    unint64_t v20 = (10 * v20) & v19;
    v13 *= 10;
    v17 *= 10;
    --v36;
  }
  while (v20 > 2 * v39);
  *a3 += v36;
  std::string v40 = (char *)*a2;
  uint64_t v41 = a1;
  unint64_t v42 = v13;
  return nlohmann::detail::dtoa_impl::grisu2_round(v41, v40, v17, v42, v20, v18);
}

uint64_t nlohmann::detail::dtoa_impl::diyfp::sub(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) != *(_DWORD *)(a2 + 8))
  {
    unint64_t v4 = "x.e == y.e";
    int v5 = 14683;
LABEL_6:
    __assert_rtn("sub", "json.hpp", v5, v4);
  }
  BOOL v2 = *(void *)a1 >= *(void *)a2;
  uint64_t result = *(void *)a1 - *(void *)a2;
  if (!v2)
  {
    unint64_t v4 = "x.f >= y.f";
    int v5 = 14684;
    goto LABEL_6;
  }
  return result;
}

uint64_t nlohmann::detail::dtoa_impl::grisu2_round(uint64_t this, char *a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  if ((int)a2 <= 0) {
    nlohmann::detail::dtoa_impl::grisu2_round();
  }
  if (a3 > a4) {
    nlohmann::detail::dtoa_impl::grisu2_round();
  }
  if (a4 < a5) {
    nlohmann::detail::dtoa_impl::grisu2_round();
  }
  if (!a6) {
    nlohmann::detail::dtoa_impl::grisu2_round();
  }
  if (a5 < a3 && a4 - a5 >= a6)
  {
    uint64_t v6 = (a2 - 1);
    uint64_t v7 = -(uint64_t)a5;
    unint64_t v8 = a6 + a5;
    do
    {
      if (v8 >= a3 && a3 + v7 <= v8 - a3) {
        break;
      }
      int v9 = *(unsigned __int8 *)(this + v6);
      if (v9 == 48) {
        nlohmann::detail::dtoa_impl::grisu2_round();
      }
      *(unsigned char *)(this + v6) = v9 - 1;
      if (v8 >= a3) {
        break;
      }
      unint64_t v10 = a4 - a6 + v7;
      v7 -= a6;
      v8 += a6;
    }
    while (v10 >= a6);
  }
  return this;
}

uint64_t nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::~serializer(uint64_t a1)
{
  if (*(char *)(a1 + 631) < 0) {
    operator delete(*(void **)(a1 + 608));
  }
  BOOL v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  return a1;
}

void nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::key()
{
  __assert_rtn("key", "json.hpp", 11708, "m_object != nullptr");
}

void nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator++()
{
  __assert_rtn("operator++", "json.hpp", 11418, "m_object != nullptr");
}

void nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator==<nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>,(decltype(nullptr))0>()
{
  __assert_rtn("operator==", "json.hpp", 11500, "m_object != nullptr");
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_literal()
{
  __assert_rtn("scan_literal", "json.hpp", 7503, "std::char_traits<char_type>::to_char_type(current) == literal_text[0]");
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_string()
{
  __assert_rtn("scan_string", "json.hpp", 6580, "0x00 <= codepoint && codepoint <= 0x10FFFF");
}

{
  __assert_rtn("scan_string", "json.hpp", 6460, "current == '\\\"'");
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::scan_number()
{
}

{
  __assert_rtn("scan_number", "json.hpp", 7489, "endptr == token_buffer.data() + token_buffer.size()");
}

{
  __assert_rtn("scan_number", "json.hpp", 7456, "endptr == token_buffer.data() + token_buffer.size()");
}

{
  __assert_rtn("scan_number", "json.hpp", 7472, "endptr == token_buffer.data() + token_buffer.size()");
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::unget()
{
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::get_codepoint()
{
  __assert_rtn("get_codepoint", "json.hpp", 6398, "0x0000 <= codepoint && codepoint <= 0xFFFF");
}

{
  __assert_rtn("get_codepoint", "json.hpp", 6372, "current == 'u'");
}

void nlohmann::detail::lexer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>,nlohmann::detail::input_stream_adapter>::next_byte_in_range()
{
  __assert_rtn("next_byte_in_range", "json.hpp", 6419, "ranges.size() == 2 || ranges.size() == 4 || ranges.size() == 6");
}

void nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_object()
{
}

{
  __assert_rtn("end_object", "json.hpp", 5939, "!keep_stack.empty()");
}

void nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::end_array()
{
}

{
  __assert_rtn("end_array", "json.hpp", 5995, "!keep_stack.empty()");
}

void nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>()
{
}

void nlohmann::detail::iter_impl<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::operator->()
{
  __assert_rtn("operator->", "json.hpp", 11373, "m_object != nullptr");
}

{
  __assert_rtn("operator->", "json.hpp", 11379, "m_it.object_iterator != m_object->m_value.object->end()");
}

{
  __assert_rtn("operator->", "json.hpp", 11385, "m_it.array_iterator != m_object->m_value.array->end()");
}

void nlohmann::detail::json_sax_dom_parser<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::handle_value<nlohmann::detail::value_t>()
{
}

{
  __assert_rtn("handle_value", "json.hpp", 5802, "object_element");
}

void nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump()
{
}

{
  __assert_rtn("dump", "json.hpp", 15850, "i != val.m_value.object->cend()");
}

{
  __assert_rtn("dump", "json.hpp", 15851, "std::next(i) == val.m_value.object->cend()");
}

{
  __assert_rtn("dump", "json.hpp", 15878, "i != val.m_value.object->cend()");
}

{
  __assert_rtn("dump", "json.hpp", 15879, "std::next(i) == val.m_value.object->cend()");
}

{
  __assert_rtn("dump", "json.hpp", 15920, "!val.m_value.array->empty()");
}

{
  __assert_rtn("dump", "json.hpp", 15941, "!val.m_value.array->empty()");
}

void nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_escaped()
{
}

{
  __assert_rtn("dump_escaped", "json.hpp", 16274, "false");
}

void nlohmann::detail::serializer<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::dump_integer<long long,0>()
{
}

void nlohmann::detail::to_chars<double>()
{
  __assert_rtn("to_chars", "json.hpp", 15697, "last - first >= std::numeric_limits<FloatType>::max_digits10");
}

{
  __assert_rtn("to_chars", "json.hpp", 15707, "len <= std::numeric_limits<FloatType>::max_digits10");
}

{
  __assert_rtn("to_chars", "json.hpp", 15715, "last - first >= 2 + (-kMinExp - 1) + std::numeric_limits<FloatType>::max_digits10");
}

{
  __assert_rtn("to_chars", "json.hpp", 15716, "last - first >= std::numeric_limits<FloatType>::max_digits10 + 6");
}

{
  __assert_rtn("to_chars", "json.hpp", 15679, "std::isfinite(value)");
}

void nlohmann::detail::dtoa_impl::grisu2<double>()
{
}

{
  __assert_rtn("grisu2", "json.hpp", 15504, "std::isfinite(value)");
}

void nlohmann::detail::dtoa_impl::format_buffer()
{
}

{
  __assert_rtn("format_buffer", "json.hpp", 15595, "max_exp > 0");
}

{
  __assert_rtn("append_exponent", "json.hpp", 15541, "e > -1000");
}

{
  __assert_rtn("append_exponent", "json.hpp", 15542, "e < 1000");
}

{
  __assert_rtn("format_buffer", "json.hpp", 15621, "k > n");
}

void nlohmann::detail::dtoa_impl::compute_boundaries<double>()
{
}

{
  __assert_rtn("compute_boundaries", "json.hpp", 14802, "std::isfinite(value)");
}

void nlohmann::detail::dtoa_impl::grisu2()
{
  __assert_rtn("grisu2", "json.hpp", 15443, "m_plus.e == v.e");
}

{
  __assert_rtn("grisu2", "json.hpp", 15442, "m_plus.e == m_minus.e");
}

void nlohmann::detail::dtoa_impl::get_cached_power_for_binary_exponent()
{
  __assert_rtn("get_cached_power_for_binary_exponent", "json.hpp", 15083, "e >= -1500");
}

{
  __assert_rtn("get_cached_power_for_binary_exponent", "json.hpp", 15084, "e <= 1500");
}

{
  __assert_rtn("get_cached_power_for_binary_exponent", "json.hpp", 15089, "index >= 0");
}

{
  __assert_rtn("get_cached_power_for_binary_exponent", "json.hpp", 15093, "kAlpha <= cached.e + e + 64");
}

{
  __assert_rtn("get_cached_power_for_binary_exponent", "json.hpp", 15094, "kGamma >= cached.e + e + 64");
}

{
  __assert_rtn("get_cached_power_for_binary_exponent", "json.hpp", 15090, "static_cast<std::size_t>(index) < kCachedPowers.size()");
}

void nlohmann::detail::dtoa_impl::grisu2_digit_gen()
{
  __assert_rtn("grisu2_digit_gen", "json.hpp", 15216, "M_plus.e >= kAlpha");
}

{
  __assert_rtn("grisu2_digit_gen", "json.hpp", 15217, "M_plus.e <= kGamma");
}

{
  __assert_rtn("grisu2_digit_gen", "json.hpp", 15238, "p1 > 0");
}

{
  __assert_rtn("grisu2_digit_gen", "json.hpp", 15274, "d <= 9");
}

{
  __assert_rtn("grisu2_digit_gen", "json.hpp", 15372, "p2 <= (std::numeric_limits<std::uint64_t>::max)() / 10");
}

{
  __assert_rtn("grisu2_digit_gen", "json.hpp", 15381, "d <= 9");
}

{
  __assert_rtn("grisu2_digit_gen", "json.hpp", 15361, "p2 > delta");
}

void nlohmann::detail::dtoa_impl::grisu2_round()
{
  __assert_rtn("grisu2_round", "json.hpp", 15160, "len >= 1");
}

{
  __assert_rtn("grisu2_round", "json.hpp", 15161, "dist <= delta");
}

{
  __assert_rtn("grisu2_round", "json.hpp", 15162, "rest <= delta");
}

{
  __assert_rtn("grisu2_round", "json.hpp", 15163, "ten_k > 0");
}

{
  __assert_rtn("grisu2_round", "json.hpp", 15188, "buf[len - 1] != '0'");
}

std::string *MPL::detail::ModelPackageItemInfoImpl::ModelPackageItemInfoImpl(std::string *this, long long *a2, long long *a3, long long *a4, long long *a5, long long *a6)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v11 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v11;
  }
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v12 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v12;
  }
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this + 2, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v13 = *a4;
    this[2].__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&this[2].__r_.__value_.__l.__data_ = v13;
  }
  if (*((char *)a5 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this + 3, *(const std::string::value_type **)a5, *((void *)a5 + 1));
  }
  else
  {
    long long v14 = *a5;
    this[3].__r_.__value_.__r.__words[2] = *((void *)a5 + 2);
    *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = v14;
  }
  int v15 = this + 4;
  if (*((char *)a6 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v15, *(const std::string::value_type **)a6, *((void *)a6 + 1));
  }
  else
  {
    long long v16 = *a6;
    this[4].__r_.__value_.__r.__words[2] = *((void *)a6 + 2);
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = v16;
  }
  return this;
}

void sub_1DC0708E0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 95) < 0) {
    operator delete(*v4);
  }
  if (*(char *)(v1 + 71) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void MPL::detail::ModelPackageItemInfoImpl::~ModelPackageItemInfoImpl(void **this)
{
  if (*((char *)this + 119) < 0) {
    operator delete(this[12]);
  }
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
  if (*((char *)this + 71) < 0) {
    operator delete(this[6]);
  }
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void MPL::ModelPackageItemInfo::~ModelPackageItemInfo(MPL::ModelPackageItemInfo *this)
{
  uint64_t v1 = (std::__shared_weak_count *)*((void *)this + 1);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

uint64_t MPL::ModelPackageItemInfo::path(MPL::ModelPackageItemInfo *this)
{
  return *(void *)this + 24;
}

void MPL::detail::ModelPackageImpl::ModelPackageImpl(std::string *this, const std::__fs::filesystem::path *a2, int a3, std::string::value_type a4)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (SHIBYTE(a2->__pn_.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(this, a2->__pn_.__r_.__value_.__l.__data_, a2->__pn_.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v8 = *(_OWORD *)&a2->__pn_.__r_.__value_.__l.__data_;
    this->__r_.__value_.__r.__words[2] = a2->__pn_.__r_.__value_.__r.__words[2];
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v8;
  }
  std::__fs::filesystem::path::path[abi:ne180100]<char const*,void>(&__p, kModelPackageManifestFileName);
  std::__fs::filesystem::operator/[abi:ne180100]((std::__fs::filesystem::path *)&__p, (uint64_t)a2, (std::__fs::filesystem::path *)&this[1]);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::__fs::filesystem::path::path[abi:ne180100]<char const*,void>(&__p, &kModelPackageDataDir);
  std::__fs::filesystem::operator/[abi:ne180100]((std::__fs::filesystem::path *)&__p, (uint64_t)a2, (std::__fs::filesystem::path *)&this[2]);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  this[3].__r_.__value_.__r.__words[0] = 0;
  this[3].__r_.__value_.__s.__data_[8] = a4;
  std::__fs::filesystem::__status((const std::__fs::filesystem::path *)this, 0);
  if (!__p.__r_.__value_.__s.__data_[0] || __p.__r_.__value_.__s.__data_[0] == 255)
  {
    if (a3)
    {
      if (std::__fs::filesystem::__create_directory((const std::__fs::filesystem::path *)this, 0))
      {
        if (std::__fs::filesystem::__create_directory((const std::__fs::filesystem::path *)&this[2], 0)) {
          operator new();
        }
        exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
        if (SHIBYTE(this[2].__r_.__value_.__r.__words[2]) < 0) {
          std::string::__init_copy_ctor_external(&v21, this[2].__r_.__value_.__l.__data_, this[2].__r_.__value_.__l.__size_);
        }
        else {
          std::string v21 = this[2];
        }
        uint64_t v19 = std::string::insert(&v21, 0, "Failed to create data directory at path: ");
        long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        MEMORY[0x1E0198860](exception, &__p);
        __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
      }
      long long v11 = __cxa_allocate_exception(0x10uLL);
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v21, this->__r_.__value_.__l.__data_, this->__r_.__value_.__l.__size_);
      }
      else {
        std::string v21 = *this;
      }
      unint64_t v17 = std::string::insert(&v21, 0, "Failed to create model package at path: ");
      long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v18;
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      MEMORY[0x1E0198860](v11, &__p);
      __cxa_throw(v11, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    int v9 = __cxa_allocate_exception(0x10uLL);
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v21, this->__r_.__value_.__l.__data_, this->__r_.__value_.__l.__size_);
    }
    else {
      std::string v21 = *this;
    }
    long long v13 = std::string::insert(&v21, 0, "Failed to open model package at path: ");
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    MEMORY[0x1E0198860](v9, &__p);
    __cxa_throw(v9, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  std::__fs::filesystem::__status((const std::__fs::filesystem::path *)&this[1], 0);
  if (__p.__r_.__value_.__s.__data_[0] && __p.__r_.__value_.__s.__data_[0] != 255)
  {
    std::ifstream::basic_ifstream((uint64_t *)&__p);
    operator new();
  }
  unint64_t v10 = __cxa_allocate_exception(0x10uLL);
  if (SHIBYTE(this[1].__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v21, this[1].__r_.__value_.__l.__data_, this[1].__r_.__value_.__l.__size_);
  }
  else {
    std::string v21 = this[1];
  }
  int v15 = std::string::insert(&v21, 0, "A valid manifest does not exist at path: ");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  MEMORY[0x1E0198860](v10, &__p);
  __cxa_throw(v10, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
}

void sub_1DC0710FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  __cxa_free_exception(v32);
  std::unique_ptr<JsonMap>::reset[abi:ne180100](v31, 0);
  if (*(char *)(v28 + 71) < 0) {
    operator delete(*v30);
  }
  if (*(char *)(v28 + 47) < 0) {
    operator delete(*v29);
  }
  if (*(char *)(v28 + 23) < 0) {
    operator delete(*(void **)v28);
  }
  _Unwind_Resume(a1);
}

std::__fs::filesystem::path *std::__fs::filesystem::operator/[abi:ne180100]@<X0>(std::__fs::filesystem::path *this@<X1>, uint64_t a2@<X0>, std::__fs::filesystem::path *a3@<X8>)
{
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&a3->__pn_, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&a3->__pn_.__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    a3->__pn_.__r_.__value_.__r.__words[2] = *(void *)(a2 + 16);
  }
  return std::__fs::filesystem::path::operator/=[abi:ne180100](a3, this);
}

void sub_1DC0712F8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::ifstream::~ifstream(void *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA3F8];
  uint64_t v3 = *MEMORY[0x1E4FBA3F8];
  *a1 = *MEMORY[0x1E4FBA3F8];
  *(void *)((char *)a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  MEMORY[0x1E0198970](a1 + 2);
  std::istream::~istream();
  MEMORY[0x1E0198B70](a1 + 53);
  return a1;
}

void MPL::detail::ModelPackageImpl::validate(MPL::detail::ModelPackageImpl *this)
{
  uint64_t v2 = (uint64_t *)*((void *)this + 9);
  std::string::basic_string[abi:ne180100]<0>(__p, "fileFormatVersion");
  JsonMap::getString(v2, (const void **)__p, &v20);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  std::istringstream::basic_istringstream[abi:ne180100]((uint64_t *)__p, &v20, 8);
  int v15 = 0;
  long long v16 = 0;
  unint64_t v17 = 0;
  v13[0] = 0;
  v13[1] = 0;
  std::string::size_type v14 = 0;
  while (1)
  {
    uint64_t v3 = std::getline[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(__p, (uint64_t)v13, 0x2Eu);
    if ((*((unsigned char *)v3 + *(void *)(*v3 - 24) + 32) & 5) != 0) {
      break;
    }
    unint64_t v4 = v16;
    if ((unint64_t)v16 >= v17)
    {
      uint64_t v6 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v15, (long long *)v13);
    }
    else
    {
      if (SHIBYTE(v14) < 0)
      {
        std::string::__init_copy_ctor_external(v16, (const std::string::value_type *)v13[0], (std::string::size_type)v13[1]);
      }
      else
      {
        long long v5 = *(_OWORD *)v13;
        v16->__r_.__value_.__r.__words[2] = v14;
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v5;
      }
      uint64_t v6 = v4 + 1;
    }
    long long v16 = v6;
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(v13[0]);
  }
  if ((char *)v16 - (char *)v15 == 72)
  {
    unsigned int v7 = std::stoi(v15, 0, 10);
    int v8 = std::stoi(v15 + 1, 0, 10);
    int v9 = std::stoi(v15 + 2, 0, 10);
    if ((v7 & 0x80000000) == 0 && (v8 & 0x80000000) == 0 && (v9 & 0x80000000) == 0)
    {
      if (v7 <= 1 && (v7 != 1 || !v8) && (v8 || !v9)) {
        MPL::detail::ModelPackageImpl::getItemInfoEntries(this);
      }
      exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
      std::operator+<char>();
      MEMORY[0x1E0198860](exception, v13);
      __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
    }
    long long v12 = __cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    MEMORY[0x1E0198860](v12, v13);
    __cxa_throw(v12, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
  }
  long long v11 = __cxa_allocate_exception(0x10uLL);
  std::operator+<char>();
  MEMORY[0x1E0198860](v11, v13);
  __cxa_throw(v11, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
}

void sub_1DC071A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((v41 & 1) == 0)
    {
LABEL_6:
      std::string __p = &a32;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
      std::istringstream::~istringstream((uint64_t)&a35);
      if (*(char *)(v42 - 81) < 0) {
        operator delete(*(void **)(v42 - 104));
      }
      _Unwind_Resume(a1);
    }
  }
  else if (!v41)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v40);
  goto LABEL_6;
}

void sub_1DC071AF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t ***a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  std::unique_ptr<JsonMap>::reset[abi:ne180100](&a21, 0);
  JUMPOUT(0x1DC071D94);
}

void sub_1DC071BF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (a36 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a22 < 0)
  {
    operator delete(a17);
    if ((v37 & 1) == 0) {
      goto LABEL_10;
    }
  }
  else if (!v37)
  {
LABEL_10:
    __cxa_end_catch();
    JUMPOUT(0x1DC071DB0);
  }
  __cxa_free_exception(v36);
  goto LABEL_10;
}

void sub_1DC071C8C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
}

void sub_1DC071CB4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0)
  {
    operator delete(__p);
    if ((v26 & 1) == 0) {
LABEL_6:
    }
      JUMPOUT(0x1DC071D88);
  }
  else if (!v26)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v27);
  goto LABEL_6;
}

void sub_1DC071CEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a22 < 0)
  {
    operator delete(__p);
    if ((v29 & 1) == 0)
    {
LABEL_6:
      if (a29 < 0) {
        operator delete(a24);
      }
      std::unique_ptr<JsonMap>::reset[abi:ne180100]((uint64_t ****)&a15, 0);
      JUMPOUT(0x1DC071D94);
    }
  }
  else if (!v29)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v30);
  goto LABEL_6;
}

void sub_1DC071D28()
{
}

void sub_1DC071D38(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    JUMPOUT(0x1DC071D84);
  }
  JUMPOUT(0x1DC071D88);
}

void MPL::detail::ModelPackageImpl::~ModelPackageImpl(MPL::detail::ModelPackageImpl *this)
{
  v6[19] = *MEMORY[0x1E4F143B8];
  if (!*((unsigned char *)this + 80))
  {
    if (*((char *)this + 47) < 0) {
      std::string::__init_copy_ctor_external(&v4, *((const std::string::value_type **)this + 3), *((void *)this + 4));
    }
    else {
      std::string v4 = *(std::string *)((unsigned char *)this + 1);
    }
    MPL::detail::ModelPackageImpl::generateIdentifier(v5);
    std::__fs::filesystem::path __replacement = v5[0];
    std::__fs::filesystem::path::replace_extension((std::__fs::filesystem::path *)&v4, &__replacement);
    std::ofstream::basic_ofstream((uint64_t *)v5);
    JsonMap::serialize(*((uint64_t **)this + 9), (uint64_t *)v5);
    if (!std::filebuf::close()) {
      std::ios_base::clear((std::ios_base *)((char *)v5 + *(void *)(v5[0].__pn_.__r_.__value_.__r.__words[0] - 24)), *(_DWORD *)((char *)&v5[1].__pn_.__r_.__value_.__r.__words[1]+ *(void *)(v5[0].__pn_.__r_.__value_.__r.__words[0] - 24)) | 4);
    }
    if ((*((unsigned char *)&v5[1].__pn_.__r_.__value_.__r.__words[1]
          + *(void *)(v5[0].__pn_.__r_.__value_.__r.__words[0] - 24)) & 5) == 0)
    {
      v2.__val_ = 0;
      v2.__cat_ = std::system_category();
      std::__fs::filesystem::__rename((const std::__fs::filesystem::path *)&v4, (const std::__fs::filesystem::path *)this + 1, &v2);
      if (v2.__val_) {
        std::__fs::filesystem::__remove((const std::__fs::filesystem::path *)&v4, 0);
      }
    }
    v5[0].__pn_.__r_.__value_.__r.__words[0] = *MEMORY[0x1E4FBA400];
    *(std::string::size_type *)((char *)v5[0].__pn_.__r_.__value_.__r.__words
                              + *(void *)(v5[0].__pn_.__r_.__value_.__r.__words[0] - 24)) = *(void *)(MEMORY[0x1E4FBA400] + 24);
    MEMORY[0x1E0198970](&v5[0].__pn_.__r_.__value_.__r.__words[1]);
    std::ostream::~ostream();
    MEMORY[0x1E0198B70](v6);
    if (SHIBYTE(__replacement.__pn_.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__replacement.__pn_.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v4.__r_.__value_.__l.__data_);
    }
  }
  std::unique_ptr<JsonMap>::reset[abi:ne180100]((uint64_t ****)this + 9, 0);
  if (*((char *)this + 71) < 0) {
    operator delete(*((void **)this + 6));
  }
  if (*((char *)this + 47) < 0) {
    operator delete(*((void **)this + 3));
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

void sub_1DC072074(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    __clang_call_terminate(a1);
  }
  _Unwind_Resume(a1);
}

void *MPL::detail::ModelPackageImpl::generateIdentifier@<X0>(void *a1@<X8>)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  *(void *)uu = 0;
  uint64_t v6 = 0;
  memset(v4, 0, sizeof(v4));
  MEMORY[0x1E0199240](uu);
  uuid_unparse(uu, v4);
  return std::string::basic_string[abi:ne180100]<0>(a1, v4);
}

void *std::ofstream::~ofstream(void *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA400];
  uint64_t v3 = *MEMORY[0x1E4FBA400];
  *a1 = *MEMORY[0x1E4FBA400];
  *(void *)((char *)a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  MEMORY[0x1E0198970](a1 + 1);
  std::ostream::~ostream();
  MEMORY[0x1E0198B70](a1 + 52);
  return a1;
}

uint64_t *std::istringstream::basic_istringstream[abi:ne180100](uint64_t *a1, const std::string *a2, int a3)
{
  uint64_t v6 = MEMORY[0x1E4FBA490] + 64;
  a1[15] = MEMORY[0x1E4FBA490] + 64;
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = *(void *)(MEMORY[0x1E4FBA410] + 16);
  uint64_t v9 = *(void *)(MEMORY[0x1E4FBA410] + 8);
  *a1 = v9;
  *(uint64_t *)((char *)a1 + *(void *)(v9 - 24)) = v8;
  a1[1] = 0;
  unint64_t v10 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v10, a1 + 2);
  uint64_t v11 = MEMORY[0x1E4FBA490] + 24;
  v10[1].__vftable = 0;
  v10[1].__fmtflags_ = -1;
  *a1 = v11;
  a1[15] = v6;
  std::stringbuf::basic_stringbuf[abi:ne180100](v7, a2, a3 | 8);
  return a1;
}

void sub_1DC072330(_Unwind_Exception *a1)
{
  std::istream::~istream();
  MEMORY[0x1E0198B70](v1);
  _Unwind_Resume(a1);
}

void *std::getline[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(void *a1, uint64_t a2, unsigned __int8 a3)
{
  MEMORY[0x1E0198980](&v11, a1, 1);
  if (!v11) {
    return a1;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    **(unsigned char **)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 23) = 0;
  }
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void **)((char *)a1 + *(void *)(*a1 - 24) + 40);
    uint64_t v8 = (unsigned char *)v7[3];
    if (v8 != (unsigned char *)v7[4])
    {
      void v7[3] = v8 + 1;
      LOBYTE(v7) = *v8;
      goto LABEL_9;
    }
    LODWORD(v7) = (*(uint64_t (**)(void *))(*v7 + 80))(v7);
    if (v7 == -1) {
      break;
    }
LABEL_9:
    if (v7 == a3)
    {
      int v9 = 0;
      goto LABEL_17;
    }
    std::string::push_back((std::string *)a2, (std::string::value_type)v7);
    --v6;
    if (*(char *)(a2 + 23) < 0 && *(void *)(a2 + 8) == 0x7FFFFFFFFFFFFFF7)
    {
      int v9 = 4;
      goto LABEL_17;
    }
  }
  if (v6) {
    int v9 = 2;
  }
  else {
    int v9 = 6;
  }
LABEL_17:
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | v9);
  return a1;
}

void sub_1DC0724B8(void *a1)
{
  __cxa_begin_catch(a1);
  uint64_t v2 = *v1;
  *(_DWORD *)((char *)v1 + *(void *)(*v1 - 24) + 32) |= 1u;
  if ((*((unsigned char *)v1 + *(void *)(v2 - 24) + 36) & 1) == 0)
  {
    __cxa_end_catch();
    JUMPOUT(0x1DC072478);
  }
  __cxa_rethrow();
}

void sub_1DC072534(_Unwind_Exception *a1)
{
}

void MPL::detail::ModelPackageImpl::getItemInfoEntries(MPL::detail::ModelPackageImpl *this)
{
  uint64_t v2 = *((void *)this + 9);
  std::string::basic_string[abi:ne180100]<0>(__p, "itemInfoEntries");
  BOOL hasKey = JsonMap::hasKey(v2, (const void **)__p);
  BOOL v4 = hasKey;
  if (v7 < 0)
  {
    operator delete(__p[0]);
    if (v4)
    {
LABEL_3:
      long long v5 = (uint64_t *)*((void *)this + 9);
      std::string::basic_string[abi:ne180100]<0>(__p, "itemInfoEntries");
      JsonMap::getObject(v5, (const void **)__p);
    }
  }
  else if (hasKey)
  {
    goto LABEL_3;
  }
  operator new();
}

void sub_1DC072614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  MEMORY[0x1E0198C00](v15, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void MPL::detail::ModelPackageImpl::getItemInfoEntry(MPL::detail::ModelPackageImpl *a1)
{
}

void sub_1DC0726D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<JsonMap>::reset[abi:ne180100]((uint64_t ****)va, 0);
  _Unwind_Resume(a1);
}

uint64_t std::istringstream::~istringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA410];
  uint64_t v3 = *MEMORY[0x1E4FBA410];
  *(void *)a1 = *MEMORY[0x1E4FBA410];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 16) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  std::streambuf::~streambuf();
  std::istream::~istream();
  MEMORY[0x1E0198B70](a1 + 120);
  return a1;
}

void MPL::detail::ModelPackageImpl::createItemInfoEntry(MPL::detail::ModelPackageImpl *a1)
{
}

void sub_1DC072A60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, int a11, __int16 a12, char a13, char a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t ***a25)
{
  MEMORY[0x1E0198C00](v25, 0x20C4093837F09);
  std::unique_ptr<JsonMap>::reset[abi:ne180100](&a25, 0);
  _Unwind_Resume(a1);
}

void MPL::detail::ModelPackageImpl::getItemPath(char *a1@<X1>, char *a2@<X2>, std::__fs::filesystem::path *a3@<X8>)
{
  std::__fs::filesystem::path::path[abi:ne180100]<std::string,void>(&v6, a2);
  std::__fs::filesystem::path::path[abi:ne180100]<std::string,void>(&__p, a1);
  std::__fs::filesystem::operator/[abi:ne180100]((std::__fs::filesystem::path *)&__p, (uint64_t)&v6, a3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_1DC072B98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void MPL::detail::ModelPackageImpl::createFile(MPL::detail::ModelPackageImpl *a1)
{
  uint64_t v1 = *MEMORY[0x1E4F143B8];
  MPL::detail::ModelPackageImpl::findItem(a1);
}

void sub_1DC072F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a27 < 0)
  {
    operator delete(a22);
    if ((v41 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v41)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v40);
  goto LABEL_10;
}

void MPL::detail::ModelPackageImpl::findItem(MPL::detail::ModelPackageImpl *a1)
{
}

{
  MPL::detail::ModelPackageImpl::getItemInfoEntry(a1);
}

void sub_1DC0732E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t ***a13, void **a14)
{
  a14 = (void **)&a10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a14);
  std::unique_ptr<JsonMap>::reset[abi:ne180100](&a13, 0);
  _Unwind_Resume(a1);
}

double std::__fs::filesystem::path::parent_path[abi:ne180100]@<D0>(const std::__fs::filesystem::path *a1@<X0>, uint64_t a2@<X8>)
{
  std::__fs::filesystem::path::__string_view v3 = std::__fs::filesystem::path::__parent_path(a1);
  if (v3.__size_ >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (v3.__size_ >= 0x17)
  {
    std::basic_string_view<_CharT, _Traits>::size_type v5 = (v3.__size_ & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3.__size_ | 7) != 0x17) {
      std::basic_string_view<_CharT, _Traits>::size_type v5 = v3.__size_ | 7;
    }
    std::basic_string_view<_CharT, _Traits>::size_type v6 = v5 + 1;
    p_dst = (long long *)operator new(v5 + 1);
    *((void *)&__dst + 1) = v3.__size_;
    unint64_t v9 = v6 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v9) = v3.__size_;
    p_dst = &__dst;
    if (!v3.__size_) {
      goto LABEL_9;
    }
  }
  memmove(p_dst, v3.__data_, v3.__size_);
LABEL_9:
  *((unsigned char *)p_dst + v3.__size_) = 0;
  double result = *(double *)&__dst;
  *(_OWORD *)a2 = __dst;
  *(void *)(a2 + 16) = v9;
  return result;
}

void sub_1DC0735D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (*(char *)(v33 - 49) < 0) {
    operator delete(*(void **)(v33 - 72));
  }
  std::unique_ptr<JsonMap>::reset[abi:ne180100]((uint64_t ****)(v33 - 48), 0);
  _Unwind_Resume(a1);
}

void sub_1DC0736D0()
{
}

void MPL::detail::ModelPackageImpl::addItem(MPL::detail::ModelPackageImpl *a1)
{
}

void sub_1DC0738DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    if ((v29 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v29)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v28);
  goto LABEL_10;
}

void MPL::detail::ModelPackageImpl::setRootModel(MPL::detail::ModelPackageImpl *a1)
{
  uint64_t v2 = *((void *)a1 + 9);
  std::string::basic_string[abi:ne180100]<0>(__p, "rootModelIdentifier");
  BOOL hasKey = JsonMap::hasKey(v2, (const void **)__p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  if (!hasKey) {
    MPL::detail::ModelPackageImpl::addItem(a1);
  }
  exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
  MEMORY[0x1E0198850](exception, "A root model already exists in this package");
  __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
}

void sub_1DC073AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void MPL::detail::ModelPackageImpl::getRootModel(MPL::detail::ModelPackageImpl *this)
{
  uint64_t v2 = *((void *)this + 9);
  std::string::basic_string[abi:ne180100]<0>(&__p, "rootModelIdentifier");
  BOOL hasKey = JsonMap::hasKey(v2, (const void **)&__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (hasKey)
  {
    BOOL v4 = (uint64_t *)*((void *)this + 9);
    std::string::basic_string[abi:ne180100]<0>(v6, "rootModelIdentifier");
    JsonMap::getString(v4, (const void **)v6, &__p);
    if (v7 < 0) {
      operator delete(v6[0]);
    }
    MPL::detail::ModelPackageImpl::findItem(this);
  }
  exceptiouint64_t n = __cxa_allocate_exception(0x10uLL);
  MEMORY[0x1E0198850](exception, "Failed to look up root model");
  __cxa_throw(exception, MEMORY[0x1E4FBA338], MEMORY[0x1E4FBA1D8]);
}

void sub_1DC073C34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  __cxa_free_exception(v20);
  _Unwind_Resume(a1);
}

void MPL::detail::ModelPackageImpl::isValid(std::__fs::filesystem::path *this, const std::__fs::filesystem::path *a2)
{
  MPL::detail::ModelPackageImpl::ModelPackageImpl(&v2, this, 0, 1);
}

void sub_1DC073CB4(void *a1)
{
}

void MPL::ModelPackage::ModelPackage(uint64_t a1, char *a2, unsigned __int8 a3, std::string::value_type a4)
{
  unsigned __int8 v5 = a3;
  std::string::value_type v4 = a4;
  std::allocate_shared[abi:ne180100]<MPL::detail::ModelPackageImpl,std::allocator<MPL::detail::ModelPackageImpl>,std::string const&,BOOL &,BOOL &,void>((uint64_t)&v6, a2, &v5, &v4);
}

void MPL::ModelPackage::setRootModel(MPL::detail::ModelPackageImpl **a1, char *a2)
{
  std::string v2 = *a1;
  std::__fs::filesystem::path::path[abi:ne180100]<std::string,void>(&__p, a2);
  MPL::detail::ModelPackageImpl::setRootModel(v2);
}

void sub_1DC073D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void MPL::ModelPackage::getRootModel(MPL::detail::ModelPackageImpl **this)
{
}

void MPL::ModelPackage::findItem(MPL::detail::ModelPackageImpl **a1)
{
}

void MPL::ModelPackage::isValid(char *a1)
{
  std::__fs::filesystem::path::path[abi:ne180100]<std::string,void>(&__p, a1);
  MPL::detail::ModelPackageImpl::isValid((std::__fs::filesystem::path *)&__p, v1);
}

void sub_1DC073E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void MPL::ModelPackage::createFile(MPL::detail::ModelPackageImpl **a1)
{
}

std::__fs::filesystem::path *std::__fs::filesystem::path::operator/=[abi:ne180100](std::__fs::filesystem::path *a1, std::__fs::filesystem::path *this)
{
  if (std::__fs::filesystem::path::__root_directory(this).__size_)
  {
    std::string::operator=(&a1->__pn_, &this->__pn_);
  }
  else
  {
    if (std::__fs::filesystem::path::__filename(a1).__size_) {
      std::string::push_back(&a1->__pn_, 47);
    }
    int v4 = SHIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
    if (v4 >= 0) {
      unsigned __int8 v5 = this;
    }
    else {
      unsigned __int8 v5 = (std::__fs::filesystem::path *)this->__pn_.__r_.__value_.__r.__words[0];
    }
    if (v4 >= 0) {
      std::string::size_type size = HIBYTE(this->__pn_.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = this->__pn_.__r_.__value_.__l.__size_;
    }
    std::string::append(&a1->__pn_, (const std::string::value_type *)v5, size);
  }
  return a1;
}

std::string *std::__fs::filesystem::path::path[abi:ne180100]<char const*,void>(std::string *this, char **a2)
{
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__r.__words[2] = 0;
  std::__fs::filesystem::path::__string_view v3 = *a2;
  int v4 = v3 - 1;
  while (*++v4)
    ;
  std::string::append[abi:ne180100]<char const*,0>(this, v3, v4);
  return this;
}

void sub_1DC073EEC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *std::string::append[abi:ne180100]<char const*,0>(std::string *this, char *a2, char *a3)
{
  int v4 = a2;
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  unint64_t v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v11 = this->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    unint64_t v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    unint64_t v6 = HIBYTE(v11);
  }
  else
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = 22;
    unint64_t v10 = this;
  }
  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    std::string::size_type v14 = this;
    if ((v6 & 0x80) != 0) {
      std::string::size_type v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    for (int i = (char *)v14 + size; v4 != a3; ++i)
    {
      char v16 = *v4++;
      unsigned char *i = v16;
    }
    unsigned char *i = 0;
    std::string::size_type v17 = v7 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v17;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
    }
  }
  else
  {
    std::string::__init_with_size[abi:ne180100]<char const*,char const*>(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0) {
      long long v12 = __p;
    }
    else {
      long long v12 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v13 = v20;
    }
    else {
      std::string::size_type v13 = (std::string::size_type)__p[1];
    }
    std::string::append(this, (const std::string::value_type *)v12, v13);
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
  }
  return this;
}

void sub_1DC074064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::string::__init_with_size[abi:ne180100]<char const*,char const*>(void *result, char *a2, char *a3, unint64_t a4)
{
  int v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (a4 > 0x16)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17) {
      uint64_t v8 = a4 | 7;
    }
    uint64_t v9 = v8 + 1;
    double result = operator new(v8 + 1);
    v4[1] = a4;
    std::string v4[2] = v9 | 0x8000000000000000;
    void *v4 = result;
    int v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    char v10 = *a2++;
    *(unsigned char *)int v4 = v10;
    int v4 = (void *)((char *)v4 + 1);
  }
  *(unsigned char *)int v4 = 0;
  return result;
}

uint64_t ***std::unique_ptr<JsonMap>::reset[abi:ne180100](uint64_t ****a1, uint64_t ***a2)
{
  double result = *a1;
  *a1 = a2;
  if (result)
  {
    JsonMap::~JsonMap(result);
    JUMPOUT(0x1E0198C00);
  }
  return result;
}

uint64_t *std::ifstream::basic_ifstream(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA460] + 64;
  a1[53] = MEMORY[0x1E4FBA460] + 64;
  std::__fs::filesystem::path::__string_view v3 = a1 + 2;
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA3F8] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4FBA3F8] + 8);
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = v4;
  a1[1] = 0;
  unint64_t v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 2);
  uint64_t v7 = MEMORY[0x1E4FBA460] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *a1 = v7;
  a1[53] = v2;
  MEMORY[0x1E0198960](v3);
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

void sub_1DC074304(_Unwind_Exception *a1)
{
  std::istream::~istream();
  MEMORY[0x1E0198B70](v1);
  _Unwind_Resume(a1);
}

uint64_t *std::ofstream::basic_ofstream(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA468] + 64;
  a1[52] = MEMORY[0x1E4FBA468] + 64;
  std::__fs::filesystem::path::__string_view v3 = a1 + 1;
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA400] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4FBA400] + 8);
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = v4;
  unint64_t v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 1);
  uint64_t v7 = MEMORY[0x1E4FBA468] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *a1 = v7;
  a1[52] = v2;
  MEMORY[0x1E0198960](v3);
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

void sub_1DC0744C4(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  MEMORY[0x1E0198B70](v1);
  _Unwind_Resume(a1);
}

std::string *std::__fs::filesystem::path::path[abi:ne180100]<std::string,void>(std::string *a1, char *a2)
{
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  LODWORD(v3) = a2[23];
  BOOL v4 = (int)v3 < 0;
  uint64_t v5 = *((void *)a2 + 1);
  if ((int)v3 < 0) {
    a2 = *(char **)a2;
  }
  uint64_t v3 = v3;
  if (v4) {
    uint64_t v3 = v5;
  }
  std::string::append[abi:ne180100]<char const*,0>(a1, a2, &a2[v3]);
  return a1;
}

void sub_1DC074548(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *std::allocate_shared[abi:ne180100]<MPL::detail::ModelPackageItemInfoImpl,std::allocator<MPL::detail::ModelPackageItemInfoImpl>,std::string const&,std::__fs::filesystem::path &,std::string&,std::string&,std::string&,void>@<X0>(long long *a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, long long *a4@<X4>, long long *a5@<X5>, void *a6@<X8>)
{
  long long v12 = (std::string *)operator new(0x90uLL);
  double result = std::__shared_ptr_emplace<MPL::detail::ModelPackageItemInfoImpl>::__shared_ptr_emplace[abi:ne180100]<std::string const&,std::__fs::filesystem::path &,std::string&,std::string&,std::string&,std::allocator<MPL::detail::ModelPackageItemInfoImpl>,0>(v12, a1, a2, a3, a4, a5);
  *a6 = v12 + 1;
  a6[1] = v12;
  return result;
}

void sub_1DC0745DC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

std::string *std::__shared_ptr_emplace<MPL::detail::ModelPackageItemInfoImpl>::__shared_ptr_emplace[abi:ne180100]<std::string const&,std::__fs::filesystem::path &,std::string&,std::string&,std::string&,std::allocator<MPL::detail::ModelPackageItemInfoImpl>,0>(std::string *a1, long long *a2, uint64_t a3, long long *a4, long long *a5, long long *a6)
{
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1F3628750;
  std::allocator<MPL::detail::ModelPackageItemInfoImpl>::construct[abi:ne180100]<MPL::detail::ModelPackageItemInfoImpl,std::string const&,std::__fs::filesystem::path &,std::string&,std::string&,std::string&>((int)&v8, a1 + 1, a2, a3, a4, a5, a6);
  return a1;
}

void sub_1DC07465C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<MPL::detail::ModelPackageItemInfoImpl>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628750;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<MPL::detail::ModelPackageItemInfoImpl>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628750;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

void std::__shared_ptr_emplace<MPL::detail::ModelPackageItemInfoImpl>::__on_zero_shared(uint64_t a1)
{
}

void std::allocator<MPL::detail::ModelPackageItemInfoImpl>::construct[abi:ne180100]<MPL::detail::ModelPackageItemInfoImpl,std::string const&,std::__fs::filesystem::path &,std::string&,std::string&,std::string&>(int a1, std::string *this, long long *a3, uint64_t a4, long long *a5, long long *a6, long long *a7)
{
  if (*(char *)(a4 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a4, *(void *)(a4 + 8));
  }
  else {
    std::string __p = *(std::string *)a4;
  }
  MPL::detail::ModelPackageItemInfoImpl::ModelPackageItemInfoImpl(this, a3, (long long *)&__p, a5, a6, a7);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1DC07478C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::allocate_shared[abi:ne180100]<MPL::ModelPackageItemInfo,std::allocator<MPL::ModelPackageItemInfo>,std::shared_ptr<MPL::detail::ModelPackageItemInfoImpl>,void>@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  BOOL v4 = (char *)operator new(0x28uLL);
  uint64_t result = std::__shared_ptr_emplace<MPL::ModelPackageItemInfo>::__shared_ptr_emplace[abi:ne180100]<std::shared_ptr<MPL::detail::ModelPackageItemInfoImpl>,std::allocator<MPL::ModelPackageItemInfo>,0>((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_1DC0747F0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<MPL::ModelPackageItemInfo>::__shared_ptr_emplace[abi:ne180100]<std::shared_ptr<MPL::detail::ModelPackageItemInfoImpl>,std::allocator<MPL::ModelPackageItemInfo>,0>(uint64_t a1, uint64_t *a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  *(void *)a1 = &unk_1F36286E0;
  uint64_t v4 = *a2;
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  *(_OWORD *)a2 = 0u;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  return a1;
}

void std::__shared_ptr_emplace<MPL::ModelPackageItemInfo>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36286E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<MPL::ModelPackageItemInfo>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F36286E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

void std::__shared_ptr_emplace<MPL::ModelPackageItemInfo>::__on_zero_shared(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
}

void std::allocate_shared[abi:ne180100]<MPL::detail::ModelPackageImpl,std::allocator<MPL::detail::ModelPackageImpl>,std::string const&,BOOL &,BOOL &,void>(uint64_t a1, char *a2, unsigned __int8 *a3, std::string::value_type *a4)
{
  uint64_t v7 = (std::string *)operator new(0x70uLL);
  std::__shared_ptr_emplace<MPL::detail::ModelPackageImpl>::__shared_ptr_emplace[abi:ne180100]<std::string const&,BOOL &,BOOL &,std::allocator<MPL::detail::ModelPackageImpl>,0>(v7, a2, a3, a4);
}

void sub_1DC074954(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<MPL::detail::ModelPackageImpl>::__shared_ptr_emplace[abi:ne180100]<std::string const&,BOOL &,BOOL &,std::allocator<MPL::detail::ModelPackageImpl>,0>(std::string *a1, char *a2, unsigned __int8 *a3, std::string::value_type *a4)
{
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  a1->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1F3628718;
  std::allocator<MPL::detail::ModelPackageImpl>::construct[abi:ne180100]<MPL::detail::ModelPackageImpl,std::string const&,BOOL &,BOOL &>((uint64_t)&v4, a1 + 1, a2, a3, a4);
}

void sub_1DC0749CC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<MPL::detail::ModelPackageImpl>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628718;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<MPL::detail::ModelPackageImpl>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F3628718;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

void std::__shared_ptr_emplace<MPL::detail::ModelPackageImpl>::__on_zero_shared(uint64_t a1)
{
}

void std::allocator<MPL::detail::ModelPackageImpl>::construct[abi:ne180100]<MPL::detail::ModelPackageImpl,std::string const&,BOOL &,BOOL &>(uint64_t a1, std::string *a2, char *a3, unsigned __int8 *a4, std::string::value_type *a5)
{
  std::__fs::filesystem::path::path[abi:ne180100]<std::string,void>(&__p, a3);
  MPL::detail::ModelPackageImpl::ModelPackageImpl(a2, (const std::__fs::filesystem::path *)&__p, *a4, *a5);
}

void sub_1DC074ACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t *google::protobuf::GoogleOnceInitImpl(unint64_t *result, uint64_t a2)
{
  unint64_t v2 = atomic_load(result);
  if (v2 != 2)
  {
    uint64_t v3 = result;
    do
      unint64_t v4 = __ldxr(result);
    while (!v4 && __stxr(1uLL, result));
    __dmb(0xBu);
    if (v4)
    {
      while (v4 == 1)
      {
        uint64_t result = (unint64_t *)sched_yield();
        unint64_t v4 = atomic_load(v3);
      }
    }
    else
    {
      uint64_t result = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
      atomic_store(2uLL, v3);
    }
  }
  return result;
}

void *google::protobuf::Arena::thread_cache(google::protobuf::Arena *this)
{
  {
    operator new();
  }
  uint64_t v1 = pthread_getspecific(*(void *)google::protobuf::Arena::thread_cache(void)::thread_cache_);
  if (!v1) {
    operator new();
  }
  return v1;
}

void sub_1DC074C40(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ThreadLocalStorage<google::protobuf::Arena::ThreadCache>::Delete(uint64_t result)
{
  if (result) {
    JUMPOUT(0x1E0198C00);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::Arena::AddListNode(google::protobuf::Arena *this, google::protobuf::Arena *a2, google::protobuf::Arena *a3)
{
  uint64_t result = google::protobuf::Arena::AllocateAligned(this, 0, 24);
  *uint64_t result = a2;
  result[1] = a3;
  uint64_t v7 = (unint64_t *)((char *)this + 32);
  do
    unint64_t v8 = __ldxr(v7);
  while (__stxr((unint64_t)result, v7));
  result[2] = (google::protobuf::Arena *)v8;
  return result;
}

google::protobuf::Arena **google::protobuf::Arena::AllocateAligned(google::protobuf::Arena *this, const std::type_info *a2, uint64_t a3)
{
  uint64_t v3 = (unint64_t *)this;
  unint64_t v4 = (a3 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*((void *)this + 7))
  {
    unint64_t v11 = (uint64_t (*)(const std::type_info *, unint64_t))*((void *)this + 17);
    if (v11) {
      this = (google::protobuf::Arena *)v11(a2, v4);
    }
  }
  uint64_t v5 = (google::protobuf::Arena *)google::protobuf::Arena::thread_cache(this);
  if (*(void *)v5 == *v3
    && (uint64_t v5 = (google::protobuf::Arena *)google::protobuf::Arena::thread_cache(v5), *((void *)v5 + 1)))
  {
    unint64_t v6 = (google::protobuf::Arena *)google::protobuf::Arena::thread_cache(v5);
    if (*(void *)(*((void *)v6 + 1) + 24) - *(void *)(*((void *)v6 + 1) + 16) >= v4)
    {
      uint64_t v7 = (void **)*((void *)google::protobuf::Arena::thread_cache(v6) + 1);
      unint64_t v8 = v7[2];
LABEL_12:
      std::string v7[2] = &v8[v4];
      return (google::protobuf::Arena **)&v8[(void)v7];
    }
  }
  else
  {
    uint64_t v9 = google::protobuf::Arena::thread_cache(v5);
    uint64_t v7 = (void **)atomic_load(v3 + 2);
    if (v7)
    {
      if (*v7 == v9)
      {
        unint64_t v8 = v7[2];
        if ((unsigned char *)v7[3] - v8 >= v4) {
          goto LABEL_12;
        }
      }
    }
  }
  return google::protobuf::Arena::SlowAlloc((google::protobuf::Arena *)v3, v4);
}

google::protobuf::Arena **google::protobuf::Arena::SlowAlloc(google::protobuf::Arena *this, unint64_t a2)
{
  unint64_t v4 = (google::protobuf::Arena *)google::protobuf::Arena::thread_cache(this);
  uint64_t v5 = v4;
  unint64_t v6 = (google::protobuf::Arena **)atomic_load((unint64_t *)this + 1);
  if (v6)
  {
    while (*v6 != v4)
    {
      unint64_t v6 = (google::protobuf::Arena **)v6[1];
      if (!v6) {
        goto LABEL_4;
      }
    }
    uint64_t v15 = v6[3];
    if (v15 - v6[2] >= a2)
    {
      std::string::size_type v17 = (google::protobuf::Arena *)google::protobuf::Arena::thread_cache(v4);
      *((void *)v17 + 1) = v6;
      uint64_t v18 = *(void *)this;
      *(void *)google::protobuf::Arena::thread_cache(v17) = v18;
      *((void *)this + 2) = v6;
      char v19 = v6[2];
      v6[2] = (google::protobuf::Arena *)((char *)v19 + a2);
      return (google::protobuf::Arena **)((char *)v19 + (void)v6);
    }
    unint64_t v16 = 2 * (void)v15;
    if (v16 >= *((void *)this + 9)) {
      unint64_t v7 = *((void *)this + 9);
    }
    else {
      unint64_t v7 = v16;
    }
  }
  else
  {
LABEL_4:
    unint64_t v7 = *((void *)this + 8);
  }
  if (a2 >= 0xFFFFFFFFFFFFFFE0)
  {
    int v20 = 3;
    std::string v21 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/arena.cc";
    int v22 = 149;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (n) <= (std::numeric_limits<size_t>::max() - kHeaderSize): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  unint64_t v8 = a2 + 32;
  if (v7 <= a2 + 32) {
    unint64_t v7 = a2 + 32;
  }
  uint64_t v9 = (google::protobuf::Arena **)(*((uint64_t (**)(unint64_t))this + 12))(v7);
  std::string v9[2] = (google::protobuf::Arena *)v8;
  void v9[3] = (google::protobuf::Arena *)v7;
  *uint64_t v9 = v5;
  google::protobuf::internal::Mutex::Lock((pthread_mutex_t **)this + 6);
  v9[1] = (google::protobuf::Arena *)*((void *)this + 1);
  atomic_store((unint64_t)v9, (unint64_t *)this + 1);
  char v10 = v9[3];
  if (v10 != v9[2])
  {
    atomic_store((unint64_t)v9, (unint64_t *)this + 2);
    char v10 = v9[3];
  }
  *((void *)this + 3) += v10;
  google::protobuf::internal::Mutex::Unlock((pthread_mutex_t **)this + 6);
  long long v12 = (google::protobuf::Arena *)google::protobuf::Arena::thread_cache(v11);
  *((void *)v12 + 1) = v9;
  uint64_t v13 = *(void *)this;
  *(void *)google::protobuf::Arena::thread_cache(v12) = v13;
  return v9 + 4;
}

void sub_1DC074F68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2)
  {
    if (*((_DWORD *)this + 7) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this >= 1)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
      unsigned int v3 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) + *(void *)this - *((_DWORD *)this + 2);
      *((void *)this + 1) = *(void *)this;
      *((_DWORD *)this + 11) = 0;
      *((void *)this + 3) = v3;
    }
  }
}

uint64_t google::protobuf::io::CodedInputStream::PushLimit(google::protobuf::io::CodedInputStream *this, int a2)
{
  uint64_t result = *((unsigned int *)this + 10);
  if ((a2 & 0x80000000) == 0)
  {
    int v4 = *((_DWORD *)this + 6);
    uint64_t v5 = *((void *)this + 1);
    uint64_t v6 = *((int *)this + 11);
    int v7 = v4 - v6 + *(_DWORD *)this - v5;
    if ((v7 ^ 0x7FFFFFFF) >= a2 && (int)result - v7 > a2)
    {
      int v9 = v7 + a2;
      *((_DWORD *)this + 10) = v9;
      uint64_t v10 = v5 + v6;
      *((void *)this + 1) = v10;
      int v11 = *((_DWORD *)this + 12);
      if (v11 >= v9) {
        int v11 = v9;
      }
      BOOL v12 = __OFSUB__(v4, v11);
      int v13 = v4 - v11;
      if ((v13 < 0) ^ v12 | (v13 == 0)) {
        int v13 = 0;
      }
      else {
        *((void *)this + 1) = v10 - v13;
      }
      *((_DWORD *)this + 11) = v13;
    }
  }
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::PopLimit(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  int v2 = *(_DWORD *)(this + 48);
  uint64_t v3 = *(void *)(this + 8) + *(int *)(this + 44);
  *(void *)(this + 8) = v3;
  if (v2 >= a2) {
    int v4 = a2;
  }
  else {
    int v4 = v2;
  }
  int v5 = *(_DWORD *)(this + 24);
  BOOL v6 = __OFSUB__(v5, v4);
  int v7 = v5 - v4;
  if ((v7 < 0) ^ v6 | (v7 == 0)) {
    int v7 = 0;
  }
  else {
    *(void *)(this + 8) = v3 - v7;
  }
  *(_DWORD *)(this + 44) = v7;
  *(unsigned char *)(this + 36) = 0;
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, int a2)
{
  unint64_t v3 = *(void *)this;
  unint64_t v2 = *((void *)this + 1);
  if ((int)(v2 - *(void *)this) <= 9 && (v2 <= v3 || *(char *)(v2 - 1) < 0))
  {
    Varint64Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
    if ((v7 & 1) == 0) {
      return -1;
    }
  }
  else
  {
    unsigned int v4 = a2 + (*(unsigned __int8 *)(v3 + 1) << 7) - 128;
    if (*(char *)(v3 + 1) < 0)
    {
      unsigned int v4 = v4 + (*(unsigned __int8 *)(v3 + 2) << 14) - 0x4000;
      if (*(char *)(v3 + 2) < 0)
      {
        unsigned int v4 = v4 + (*(unsigned __int8 *)(v3 + 3) << 21) - 0x200000;
        if (*(char *)(v3 + 3) < 0)
        {
          int v8 = *(char *)(v3 + 4);
          unsigned int v4 = v4 + (v8 << 28) - 0x10000000;
          if (v8 < 0)
          {
            uint64_t v9 = 0;
            while (*(char *)(v3 + v9 + 5) < 0)
            {
              ++v9;
              Varint64Fallbacuint64_t k = -1;
              if (v9 == 5) {
                return Varint64Fallback;
              }
            }
            uint64_t v5 = v3 + v9 + 6;
          }
          else
          {
            uint64_t v5 = v3 + 5;
          }
        }
        else
        {
          uint64_t v5 = v3 + 4;
        }
      }
      else
      {
        uint64_t v5 = v3 + 3;
      }
    }
    else
    {
      uint64_t v5 = v3 + 2;
    }
    *(void *)this = v5;
    return v4;
  }
  return Varint64Fallback;
}

unint64_t google::protobuf::io::CodedInputStream::ReadVarint64Fallback(google::protobuf::io::CodedInputStream *this)
{
  unint64_t v3 = *(char **)this;
  unint64_t v2 = *((void *)this + 1);
  if ((int)(v2 - *(void *)this) <= 9 && (v2 <= (unint64_t)v3 || *(char *)(v2 - 1) < 0))
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = v8;
      if (v8 == 10) {
        break;
      }
      while (1)
      {
        int v11 = *(char **)this;
        if (*(void *)this != *((void *)this + 1)) {
          break;
        }
        if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
          return 0;
        }
      }
      char v12 = *v11;
      v9 |= (unint64_t)(*v11 & 0x7F) << (7 * v10);
      *(void *)this = v11 + 1;
      uint64_t v8 = v10 + 1;
      if ((v12 & 0x80) == 0) {
        return v9;
      }
    }
    return 0;
  }
  else
  {
    unsigned int v4 = (unsigned __int8 *)(v3 + 1);
    unsigned int v5 = *v3;
    if (*v3 < 0)
    {
      unsigned int v5 = v5 + (v3[1] << 7) - 128;
      if (v3[1] < 0)
      {
        unsigned int v5 = v5 + (v3[2] << 14) - 0x4000;
        if (v3[2] < 0)
        {
          unsigned int v5 = v5 + (v3[3] << 21) - 0x200000;
          if (v3[3] < 0)
          {
            v5 -= 0x10000000;
            unsigned int v6 = v3[4];
            if (v3[4] < 0)
            {
              unsigned int v6 = v6 + (v3[5] << 7) - 128;
              if (v3[5] < 0)
              {
                unsigned int v6 = v6 + (v3[6] << 14) - 0x4000;
                if (v3[6] < 0)
                {
                  unsigned int v6 = v6 + (v3[7] << 21) - 0x200000;
                  if (v3[7] < 0)
                  {
                    v6 -= 0x10000000;
                    uint64_t v7 = v3[8];
                    if (v3[8] < 0)
                    {
                      if (v3[9] < 0) {
                        return 0;
                      }
                      unsigned int v4 = (unsigned __int8 *)(v3 + 10);
                      uint64_t v7 = v7 + (v3[9] << 7) - 128;
                    }
                    else
                    {
                      unsigned int v4 = (unsigned __int8 *)(v3 + 9);
                    }
                  }
                  else
                  {
                    uint64_t v7 = 0;
                    unsigned int v4 = (unsigned __int8 *)(v3 + 8);
                  }
                }
                else
                {
                  uint64_t v7 = 0;
                  unsigned int v4 = (unsigned __int8 *)(v3 + 7);
                }
              }
              else
              {
                uint64_t v7 = 0;
                unsigned int v4 = (unsigned __int8 *)(v3 + 6);
              }
            }
            else
            {
              uint64_t v7 = 0;
              unsigned int v4 = (unsigned __int8 *)(v3 + 5);
            }
          }
          else
          {
            unsigned int v6 = 0;
            uint64_t v7 = 0;
            unsigned int v4 = (unsigned __int8 *)(v3 + 4);
          }
        }
        else
        {
          unsigned int v6 = 0;
          uint64_t v7 = 0;
          unsigned int v4 = (unsigned __int8 *)(v3 + 3);
        }
      }
      else
      {
        unsigned int v6 = 0;
        uint64_t v7 = 0;
        unsigned int v4 = (unsigned __int8 *)(v3 + 2);
      }
    }
    else
    {
      unsigned int v6 = 0;
      uint64_t v7 = 0;
    }
    unint64_t v9 = v5 | ((unint64_t)v6 << 28) | (v7 << 56);
    *(void *)this = v4;
  }
  return v9;
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  int v2 = *((_DWORD *)this + 11);
  if (v2 > 0 || *((int *)this + 7) > 0 || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
  {
    int v3 = *((_DWORD *)this + 6) - v2;
    int v4 = *((_DWORD *)this + 12);
    if (v3 >= v4 && v4 != *((_DWORD *)this + 10))
    {
      LODWORD(v20[0]) = 2;
      v20[1] = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/coded_stream.cc";
      int v21 = 193;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "A protocol message was rejected because it was too big (more than ");
      snprintf(__str, 0x80uLL, "%d", *((_DWORD *)this + 12));
      char v27 = 0;
      std::string::append(&__p, __str);
      std::string::append(&__p, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)v20);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    return 0;
  }
  else
  {
    v20[0] = 0;
    int v19 = 0;
    uint64_t v7 = *((void *)this + 2);
    do
    {
      uint64_t v5 = (*(uint64_t (**)(uint64_t, void *, int *))(*(void *)v7 + 16))(v7, v20, &v19);
      if (!v5)
      {
        *(void *)this = 0;
        *((void *)this + 1) = 0;
        return v5;
      }
      int v8 = v19;
    }
    while (!v19);
    uint64_t v9 = v20[0] + v19;
    *(void *)this = v20[0];
    *((void *)this + 1) = v9;
    if (v8 < 0)
    {
      *(_DWORD *)__str = 3;
      unsigned int v24 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/coded_stream.cc";
      int v25 = 599;
      memset(v26, 0, 24);
      std::string::append(v26, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)__str);
      if (SHIBYTE(v26[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v26[0].__r_.__value_.__l.__data_);
      }
      int v8 = v19;
    }
    int v10 = *((_DWORD *)this + 6);
    int v11 = v10 - (v8 ^ 0x7FFFFFFF);
    if (v10 <= (v8 ^ 0x7FFFFFFF))
    {
      int v13 = v8 + v10;
      uint64_t v12 = *((void *)this + 1);
    }
    else
    {
      *((_DWORD *)this + 7) = v11;
      uint64_t v12 = *((void *)this + 1) - v11;
      *((void *)this + 1) = v12;
      int v13 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v13;
    int v14 = *((_DWORD *)this + 10);
    uint64_t v15 = v12 + *((int *)this + 11);
    *((void *)this + 1) = v15;
    int v16 = *((_DWORD *)this + 12);
    if (v16 >= v14) {
      int v16 = v14;
    }
    BOOL v17 = __OFSUB__(v13, v16);
    int v18 = v13 - v16;
    if ((v18 < 0) ^ v17 | (v18 == 0)) {
      int v18 = 0;
    }
    else {
      *((void *)this + 1) = v15 - v18;
    }
    *((_DWORD *)this + 11) = v18;
  }
  return v5;
}

void sub_1DC075654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(google::protobuf::io::CodedInputStream *this, int a2)
{
  int v2 = *((unsigned __int8 *)this + 36);
  *((_DWORD *)this + 10) = a2;
  int v3 = *((_DWORD *)this + 12);
  uint64_t v4 = *((void *)this + 1) + *((int *)this + 11);
  *((void *)this + 1) = v4;
  if (v3 >= a2) {
    int v5 = a2;
  }
  else {
    int v5 = v3;
  }
  int v6 = *((_DWORD *)this + 6);
  BOOL v7 = __OFSUB__(v6, v5);
  int v8 = v6 - v5;
  if ((v8 < 0) ^ v7 | (v8 == 0)) {
    int v8 = 0;
  }
  else {
    *((void *)this + 1) = v4 - v8;
  }
  *((_DWORD *)this + 11) = v8;
  *((unsigned char *)this + 36) = 0;
  ++*((_DWORD *)this + 13);
  return v2 != 0;
}

uint64_t google::protobuf::io::CodedInputStream::BytesUntilLimit(google::protobuf::io::CodedInputStream *this)
{
  int v1 = *((_DWORD *)this + 10);
  if (v1 == 0x7FFFFFFF) {
    return 0xFFFFFFFFLL;
  }
  else {
    return (v1 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this);
  }
}

uint64_t google::protobuf::io::CodedInputStream::Skip(google::protobuf::io::CodedInputStream *this, unsigned int a2)
{
  if ((a2 & 0x80000000) != 0) {
    return 0;
  }
  uint64_t v3 = *(void *)this;
  uint64_t v4 = *((void *)this + 1) - *(void *)this;
  BOOL v5 = __OFSUB__(a2, v4);
  int v6 = a2 - v4;
  if ((v6 < 0) ^ v5 | (v6 == 0))
  {
    *(void *)this = v3 + a2;
    return 1;
  }
  if (*((int *)this + 11) >= 1)
  {
    uint64_t v7 = 0;
    *(void *)this = v3 + (int)v4;
    return v7;
  }
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  int v8 = *((_DWORD *)this + 10);
  if (*((_DWORD *)this + 12) < v8) {
    int v8 = *((_DWORD *)this + 12);
  }
  int v9 = *((_DWORD *)this + 6);
  uint64_t v10 = (v8 - v9);
  if ((int)v10 < v6)
  {
    if ((int)v10 >= 1)
    {
      *((_DWORD *)this + 6) = v8;
      (*(void (**)(void, uint64_t))(**((void **)this + 2) + 32))(*((void *)this + 2), v10);
    }
    return 0;
  }
  *((_DWORD *)this + 6) = v9 + v6;
  uint64_t v12 = *(uint64_t (**)(void))(**((void **)this + 2) + 32);
  return v12();
}

uint64_t google::protobuf::io::CodedInputStream::GetDirectBufferPointer(google::protobuf::io::CodedInputStream *this, const void **a2, int *a3)
{
  int v6 = *(const void **)this;
  if (*((_DWORD *)this + 2) == *(void *)this)
  {
    uint64_t result = google::protobuf::io::CodedInputStream::Refresh(this);
    if (!result) {
      return result;
    }
    int v6 = *(const void **)this;
  }
  *a2 = v6;
  *a3 = *((_DWORD *)this + 2) - *(_DWORD *)this;
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadRaw(google::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  while (1)
  {
    int v6 = a3;
    uint64_t v7 = *(const void **)this;
    uint64_t v8 = *((void *)this + 1) - *(void *)this;
    BOOL v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0)) {
      break;
    }
    memcpy(__dst, v7, (int)v8);
    __dst += (int)v8;
    *(void *)this += (int)v8;
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v6 <= (int)v8;
    }
  }
  memcpy(__dst, v7, v6);
  *(void *)this += v6;
  return v6 <= (int)v8;
}

BOOL google::protobuf::io::CodedInputStream::ReadString(uint64_t a1, std::string *this, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0) {
    return 0;
  }
  uint64_t v3 = this;
  if (*(_DWORD *)(a1 + 8) - *(_DWORD *)a1 >= (int)__n)
  {
    size_t v6 = __n;
    std::string::resize(this, __n, 0);
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0) {
      uint64_t v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
    }
    memcpy(v3, *(const void **)a1, v6);
    *(void *)a1 += v6;
    return 1;
  }
  else
  {
    return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)a1, this, __n);
  }
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((unsigned char *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  int v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10)) {
    int v6 = *((_DWORD *)this + 10);
  }
  if (v6 != 0x7FFFFFFF)
  {
    int v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this;
    BOOL v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1) {
      std::string::reserve(a2, __requested_capacity);
    }
  }
  while (1)
  {
    int v10 = v3;
    int v11 = *(const std::string::value_type **)this;
    uint64_t v12 = *((void *)this + 1) - *(void *)this;
    BOOL v13 = __OFSUB__(v3, v12);
    v3 -= v12;
    if ((v3 < 0) ^ v13 | (v3 == 0)) {
      break;
    }
    if (v12)
    {
      std::string::append(a2, v11, (int)v12);
      int v11 = *(const std::string::value_type **)this;
    }
    *(void *)this = &v11[(int)v12];
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v10 <= (int)v12;
    }
  }
  std::string::append(a2, v11, v10);
  *(void *)this += v10;
  return v10 <= (int)v12;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(unsigned int **this, unsigned int *a2)
{
  int v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFFC) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    int v3 = (unsigned int *)__dst;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, __dst, 4);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(unint64_t **this, unint64_t *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFF8) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    int v3 = (unint64_t *)v5;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, v5, 8);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

unint64_t google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(google::protobuf::io::CodedInputStream *this)
{
  int v2 = *(char **)this;
  unint64_t v1 = *((void *)this + 1);
  if ((int)(v1 - *(void *)this) > 9 || v1 > (unint64_t)v2 && (*(char *)(v1 - 1) & 0x80000000) == 0)
  {
    int v3 = (unsigned __int8 *)(v2 + 1);
    unsigned int v4 = *v2;
    if (*v2 < 0)
    {
      unsigned int v4 = v4 + (v2[1] << 7) - 128;
      if (v2[1] < 0)
      {
        unsigned int v4 = v4 + (v2[2] << 14) - 0x4000;
        if (v2[2] < 0)
        {
          unsigned int v4 = v4 + (v2[3] << 21) - 0x200000;
          if (v2[3] < 0)
          {
            v4 -= 0x10000000;
            unsigned int v5 = v2[4];
            if (v2[4] < 0)
            {
              unsigned int v5 = v5 + (v2[5] << 7) - 128;
              if (v2[5] < 0)
              {
                unsigned int v5 = v5 + (v2[6] << 14) - 0x4000;
                if (v2[6] < 0)
                {
                  unsigned int v5 = v5 + (v2[7] << 21) - 0x200000;
                  if (v2[7] < 0)
                  {
                    v5 -= 0x10000000;
                    uint64_t v6 = v2[8];
                    if (v2[8] < 0)
                    {
                      if (v2[9] < 0) {
                        return 0xFFFFFFFFLL;
                      }
                      int v3 = (unsigned __int8 *)(v2 + 10);
                      uint64_t v6 = v6 + (v2[9] << 7) - 128;
                    }
                    else
                    {
                      int v3 = (unsigned __int8 *)(v2 + 9);
                    }
                  }
                  else
                  {
                    uint64_t v6 = 0;
                    int v3 = (unsigned __int8 *)(v2 + 8);
                  }
                }
                else
                {
                  uint64_t v6 = 0;
                  int v3 = (unsigned __int8 *)(v2 + 7);
                }
              }
              else
              {
                uint64_t v6 = 0;
                int v3 = (unsigned __int8 *)(v2 + 6);
              }
            }
            else
            {
              uint64_t v6 = 0;
              int v3 = (unsigned __int8 *)(v2 + 5);
            }
          }
          else
          {
            unsigned int v5 = 0;
            uint64_t v6 = 0;
            int v3 = (unsigned __int8 *)(v2 + 4);
          }
        }
        else
        {
          unsigned int v5 = 0;
          uint64_t v6 = 0;
          int v3 = (unsigned __int8 *)(v2 + 3);
        }
      }
      else
      {
        unsigned int v5 = 0;
        uint64_t v6 = 0;
        int v3 = (unsigned __int8 *)(v2 + 2);
      }
    }
    else
    {
      unsigned int v5 = 0;
      uint64_t v6 = 0;
    }
    unint64_t v10 = v4 | ((unint64_t)v5 << 28);
    if (!((v10 | (v6 << 56)) >> 31))
    {
      *(void *)this = v3;
      return v10;
    }
    return 0xFFFFFFFFLL;
  }
  Varint64Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
  if ((Varint64Fallback & 0xFFFFFFFF80000000) != 0 || (v8 & 1) == 0) {
    return 0xFFFFFFFFLL;
  }
  else {
    return Varint64Fallback;
  }
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this, int a2)
{
  int v3 = *(unsigned __int8 **)this;
  unsigned int v4 = (char *)*((void *)this + 1);
  int v5 = v4 - *(void *)this;
  if (v5 <= 9)
  {
    if (v5 < 1)
    {
      if (!v5)
      {
        int v10 = *((_DWORD *)this + 11);
        int v11 = *((_DWORD *)this + 6);
        if ((v10 > 0 || v11 == *((_DWORD *)this + 10)) && v11 - v10 < *((_DWORD *)this + 12)) {
          goto LABEL_27;
        }
      }
    }
    else if ((*(v4 - 1) & 0x80000000) == 0)
    {
      goto LABEL_4;
    }
    if (v3 != (unsigned __int8 *)v4) {
      goto LABEL_12;
    }
    if (google::protobuf::io::CodedInputStream::Refresh(this))
    {
      int v3 = *(unsigned __int8 **)this;
      unsigned int v4 = (char *)*((void *)this + 1);
LABEL_12:
      if (v3 >= (unsigned __int8 *)v4 || (char)*v3 < 0)
      {
        unint64_t result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
        if ((v9 & 1) == 0) {
          return 0;
        }
        return result;
      }
      unint64_t result = *v3;
LABEL_15:
      *(void *)this = v3 + 1;
      return result;
    }
    int v12 = *((_DWORD *)this + 12);
    if (*((_DWORD *)this + 6) - *((_DWORD *)this + 11) >= v12)
    {
      unint64_t result = 0;
      BOOL v13 = *((_DWORD *)this + 10) == v12;
      goto LABEL_29;
    }
LABEL_27:
    unint64_t result = 0;
    BOOL v13 = 1;
LABEL_29:
    *((unsigned char *)this + 36) = v13;
    return result;
  }
LABEL_4:
  if (!a2)
  {
    unint64_t result = 0;
    goto LABEL_15;
  }
  uint64_t v6 = a2 + (v3[1] << 7) - 128;
  if ((char)v3[1] < 0)
  {
    uint64_t v6 = v6 + (v3[2] << 14) - 0x4000;
    if ((char)v3[2] < 0)
    {
      uint64_t v6 = v6 + (v3[3] << 21) - 0x200000;
      if ((char)v3[3] < 0)
      {
        int v14 = (char)v3[4];
        uint64_t v6 = (v6 + (v14 << 28) - 0x10000000);
        if (v14 < 0)
        {
          uint64_t v15 = 0;
          while ((char)v3[v15 + 5] < 0)
          {
            unint64_t result = 0;
            if (++v15 == 5) {
              return result;
            }
          }
          uint64_t v7 = (uint64_t)&v3[v15 + 6];
        }
        else
        {
          uint64_t v7 = (uint64_t)(v3 + 5);
        }
      }
      else
      {
        uint64_t v7 = (uint64_t)(v3 + 4);
      }
    }
    else
    {
      uint64_t v7 = (uint64_t)(v3 + 3);
    }
  }
  else
  {
    uint64_t v7 = (uint64_t)(v3 + 2);
  }
  *(void *)this = v7;
  return v6;
}

uint64_t google::protobuf::io::CodedOutputStream::Refresh(google::protobuf::io::CodedOutputStream *this)
{
  uint64_t v4 = 0;
  uint64_t result = (*(uint64_t (**)(void, uint64_t *, char *))(**(void **)this + 16))(*(void *)this, &v4, (char *)this + 16);
  if (result)
  {
    uint64_t v3 = v4;
    *((_DWORD *)this + 5) += *((_DWORD *)this + 4);
  }
  else
  {
    uint64_t v3 = 0;
    *((_DWORD *)this + 4) = 0;
    *((unsigned char *)this + 24) = 1;
  }
  *((void *)this + 1) = v3;
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::CodedOutputStream(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 23) = 0;
  google::protobuf::io::CodedOutputStream::Refresh((google::protobuf::io::CodedOutputStream *)a1);
  *(unsigned char *)(a1 + 24) = 0;
  return a1;
}

int *google::protobuf::io::CodedOutputStream::Trim(int *this)
{
  if (this[4] >= 1)
  {
    unint64_t v1 = this;
    this = (int *)(*(uint64_t (**)(void))(**(void **)this + 24))(*(void *)this);
    int v2 = v1[5] - v1[4];
    v1[4] = 0;
    v1[5] = v2;
    *((void *)v1 + 1) = 0;
  }
  return this;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
}

uint64_t google::protobuf::io::CodedOutputStream::WriteRaw(google::protobuf::io::CodedOutputStream *this, char *__src, int a3)
{
  while (1)
  {
    size_t v6 = *((int *)this + 4);
    uint64_t v7 = (void *)*((void *)this + 1);
    if ((int)v6 >= a3) {
      break;
    }
    memcpy(v7, __src, v6);
    uint64_t v8 = *((int *)this + 4);
    a3 -= v8;
    __src += v8;
    uint64_t result = google::protobuf::io::CodedOutputStream::Refresh(this);
    if ((result & 1) == 0) {
      return result;
    }
  }
  uint64_t result = (uint64_t)memcpy(v7, __src, a3);
  *((void *)this + 1) += a3;
  *((_DWORD *)this + 4) -= a3;
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteAliasedRaw(google::protobuf::io::CodedOutputStream *this, char *__src, uint64_t a3)
{
  if (*((_DWORD *)this + 4) <= (int)a3)
  {
    google::protobuf::io::CodedOutputStream::Trim((int *)this);
    *((_DWORD *)this + 5) += a3;
    uint64_t result = (*(uint64_t (**)(void, char *, uint64_t))(**(void **)this + 40))(*(void *)this, __src, a3);
    *((unsigned char *)this + 24) |= result ^ 1;
  }
  else
  {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, __src, a3);
  }
  return result;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteLittleEndian32(uint64_t this, int a2)
{
  if (*(_DWORD *)(this + 16) < 4u)
  {
    int __src = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, (char *)&__src, 4);
  }
  else
  {
    **(_DWORD **)(this + 8) = a2;
    *(void *)(this + 8) += 4;
    *(_DWORD *)(this + 16) -= 4;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteLittleEndian64(uint64_t this, uint64_t a2)
{
  v2[1] = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(this + 16) < 8u)
  {
    v2[0] = a2;
    return google::protobuf::io::CodedOutputStream::WriteRaw((google::protobuf::io::CodedOutputStream *)this, (char *)v2, 8);
  }
  else
  {
    **(void **)(this + 8) = a2;
    *(void *)(this + 8) += 8;
    *(_DWORD *)(this + 16) -= 8;
  }
  return this;
}

uint64_t google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(google::protobuf::io::CodedOutputStream *this, unsigned int a2)
{
  int v2 = __src;
  if (a2 >= 0x80)
  {
    unsigned int v3 = a2;
    do
    {
      *v2++ = v3 | 0x80;
      a2 = v3 >> 7;
      unsigned int v4 = v3 >> 14;
      v3 >>= 7;
    }
    while (v4);
  }
  char *v2 = a2;
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, __src, v2 - (&vars0 - 5) + 1);
}

uint64_t google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(google::protobuf::io::CodedOutputStream *this, unint64_t a2)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v2 = __src;
  if (a2 >= 0x80)
  {
    unint64_t v3 = a2;
    do
    {
      *v2++ = v3 | 0x80;
      a2 = v3 >> 7;
      unint64_t v4 = v3 >> 14;
      v3 >>= 7;
    }
    while (v4);
  }
  char *v2 = a2;
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, __src, v2 - __src + 1);
}

char *google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(const void **a1, unsigned char *a2)
{
  if (*((char *)a1 + 23) >= 0) {
    unsigned int v3 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    unsigned int v3 = *((_DWORD *)a1 + 2);
  }
  if (v3 < 0x80)
  {
    LOBYTE(v4) = v3;
  }
  else
  {
    do
    {
      *a2++ = v3 | 0x80;
      unsigned int v4 = v3 >> 7;
      unsigned int v5 = v3 >> 14;
      v3 >>= 7;
    }
    while (v5);
  }
  *a2 = v4;
  size_t v6 = a2 + 1;
  int v7 = *((char *)a1 + 23);
  if (v7 >= 0) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = *a1;
  }
  if (v7 >= 0) {
    LODWORD(v9) = *((unsigned __int8 *)a1 + 23);
  }
  else {
    char v9 = a1[1];
  }
  memcpy(v6, v8, (int)v9);
  return &v6[(int)v9];
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  google::protobuf::FatalException::~FatalException(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t vars8;

  this->__vftable = (std::exception_vtbl *)&unk_1F36269F0;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  std::exception::~exception(this);
}

uint64_t google::protobuf::internal::FunctionClosure0::Run(uint64_t (**this)(void))
{
  int v2 = *((unsigned __int8 *)this + 16);
  uint64_t result = this[1]();
  if (this && v2)
  {
    unsigned int v4 = (uint64_t (*)(uint64_t (**)(void)))*((void *)*this + 1);
    return v4(this);
  }
  return result;
}

void google::protobuf::internal::FunctionClosure0::~FunctionClosure0(google::protobuf::internal::FunctionClosure0 *this)
{
}

uint64_t google::protobuf::internal::LogMessage::Finish(google::protobuf::internal::LogMessage *this)
{
  if (*(_DWORD *)this == 3)
  {
    uint64_t v2 = 3;
  }
  else
  {
    unint64_t v3 = atomic_load(&google::protobuf::internal::log_silencer_count_init_);
    if (v3 != 2)
    {
      v7[0] = &unk_1F36280C0;
      v7[1] = google::protobuf::internal::InitLogSilencerCount;
      char v8 = 0;
      google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::log_silencer_count_init_, (uint64_t)v7);
    }
    unsigned int v4 = (pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_;
    google::protobuf::internal::Mutex::Lock((google::protobuf::internal::Mutex *)google::protobuf::internal::log_silencer_count_mutex_);
    google::protobuf::internal::Mutex::Unlock(v4);
    uint64_t v2 = *(unsigned int *)this;
  }
  uint64_t result = google::protobuf::internal::DefaultLogHandler(v2, *((const char **)this + 1), *((_DWORD *)this + 4), (uint64_t)this + 24);
  if (*(_DWORD *)this == 3)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException((uint64_t)exception, *((void *)this + 1), *((_DWORD *)this + 4), (long long *)((char *)this + 24));
  }
  return result;
}

void sub_1DC076694(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::Mutex::Lock(pthread_mutex_t **this)
{
  int v1 = pthread_mutex_lock(*this);
  if (v1)
  {
    int v2 = v1;
    int v4 = 3;
    unsigned int v5 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/stubs/common.cc";
    int v6 = 377;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "pthread_mutex_lock: ");
    unint64_t v3 = strerror(v2);
    std::string::append(&__p, v3);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1DC076748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::Mutex::Unlock(pthread_mutex_t **this)
{
  int v1 = pthread_mutex_unlock(*this);
  if (v1)
  {
    int v2 = v1;
    int v4 = 3;
    unsigned int v5 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/stubs/common.cc";
    int v6 = 384;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "pthread_mutex_unlock: ");
    unint64_t v3 = strerror(v2);
    std::string::append(&__p, v3);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1DC076804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &unk_1F36269F0;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  unsigned int v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((void *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1DC076890(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::DefaultLogHandler(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  if ((result & 0x80000000) == 0)
  {
    int v4 = (FILE **)MEMORY[0x1E4F143C8];
    if (*(char *)(a4 + 23) >= 0) {
      unsigned int v5 = (const char *)a4;
    }
    else {
      unsigned int v5 = *(const char **)a4;
    }
    fprintf((FILE *)*MEMORY[0x1E4F143C8], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[result], a2, a3, v5);
    long long v6 = *v4;
    return fflush(v6);
  }
  return result;
}

void google::protobuf::internal::InitLogSilencerCount(google::protobuf::internal *this)
{
}

void sub_1DC0769A8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::OnShutdown(google::protobuf::internal *this, void (*a2)(void))
{
  unint64_t v3 = atomic_load(&google::protobuf::internal::shutdown_functions_init);
  if (v3 != 2)
  {
    v17[0] = &unk_1F36280C0;
    v17[1] = google::protobuf::internal::InitShutdownFunctions;
    char v18 = 0;
    google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::shutdown_functions_init, (uint64_t)v17);
  }
  int v4 = (pthread_mutex_t **)google::protobuf::internal::shutdown_functions_mutex;
  google::protobuf::internal::Mutex::Lock((pthread_mutex_t **)google::protobuf::internal::shutdown_functions_mutex);
  uint64_t v5 = google::protobuf::internal::shutdown_functions;
  int v7 = *(void **)(google::protobuf::internal::shutdown_functions + 8);
  unint64_t v6 = *(void *)(google::protobuf::internal::shutdown_functions + 16);
  if ((unint64_t)v7 >= v6)
  {
    char v9 = *(void **)google::protobuf::internal::shutdown_functions;
    uint64_t v10 = ((uint64_t)v7 - *(void *)google::protobuf::internal::shutdown_functions) >> 3;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 61) {
      std::vector<std::string>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = v6 - (void)v9;
    if (v12 >> 2 > v11) {
      unint64_t v11 = v12 >> 2;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13)
    {
      if (v13 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      int v14 = (char *)operator new(8 * v13);
    }
    else
    {
      int v14 = 0;
    }
    uint64_t v15 = &v14[8 * v10];
    *(void *)uint64_t v15 = this;
    char v8 = v15 + 8;
    if (v7 != v9)
    {
      do
      {
        uint64_t v16 = *--v7;
        *((void *)v15 - 1) = v16;
        v15 -= 8;
      }
      while (v7 != v9);
      int v7 = *(void **)v5;
    }
    *(void *)uint64_t v5 = v15;
    *(void *)(v5 + 8) = v8;
    *(void *)(v5 + 16) = &v14[8 * v13];
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    void *v7 = this;
    char v8 = v7 + 1;
  }
  *(void *)(v5 + 8) = v8;
  google::protobuf::internal::Mutex::Unlock(v4);
}

void sub_1DC076B48(_Unwind_Exception *a1)
{
  google::protobuf::internal::Mutex::Unlock(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::InitShutdownFunctions(google::protobuf::internal *this)
{
}

void sub_1DC076BEC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x20C4093837F09);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::DeleteLogSilencerCount(google::protobuf::internal *this)
{
  uint64_t v1 = (void *)google::protobuf::internal::log_silencer_count_mutex_;
  if (google::protobuf::internal::log_silencer_count_mutex_)
  {
    pthread_mutex_destroy(*(pthread_mutex_t **)google::protobuf::internal::log_silencer_count_mutex_);
    if (*v1) {
      MEMORY[0x1E0198C00](*v1, 0x1000C40FA0F61DDLL);
    }
    MEMORY[0x1E0198C00](v1, 0x20C4093837F09);
  }
  google::protobuf::internal::log_silencer_count_mutex_ = 0;
}

uint64_t google::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  return a1;
}

uint64_t google::protobuf::internal::LogFinisher::operator=(int a1, google::protobuf::internal::LogMessage *this)
{
  return google::protobuf::internal::LogMessage::Finish(this);
}

void google::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

uint64_t google::protobuf::internal::WireFormatLite::SkipField(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  if (a2 < 8) {
    return 0;
  }
  uint64_t result = 0;
  switch(a2 & 7)
  {
    case 0:
      uint64_t v5 = *(char **)this;
      if (*(void *)this < *((void *)this + 1) && (*v5 & 0x80000000) == 0)
      {
        uint64_t v6 = (uint64_t)(v5 + 1);
        goto LABEL_25;
      }
      google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
      return v15 & 1;
    case 1:
      if ((int)(*((_DWORD *)this + 2) - *(void *)this) >= 8)
      {
        uint64_t v6 = *(void *)this + 8;
        goto LABEL_25;
      }
      return google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)this, &v19);
    case 2:
      int v7 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1))
      {
        unsigned int v8 = 0;
      }
      else
      {
        unsigned int v8 = *v7;
        if ((*v7 & 0x80000000) == 0)
        {
          *(void *)this = v7 + 1;
          goto LABEL_33;
        }
      }
      Varint32Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
      unsigned int v8 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_33:
      return google::protobuf::io::CodedInputStream::Skip(this, v8);
    case 3:
      int v9 = *((_DWORD *)this + 13);
      BOOL v10 = __OFSUB__(v9--, 1);
      *((_DWORD *)this + 13) = v9;
      if (v9 < 0 != v10) {
        return 0;
      }
      unsigned int v11 = a2 & 0xFFFFFFF8;
      break;
    case 5:
      if ((int)(*((_DWORD *)this + 2) - *(void *)this) < 4) {
        return google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)this, &v18);
      }
      uint64_t v6 = *(void *)this + 4;
LABEL_25:
      *(void *)this = v6;
      return 1;
    default:
      return result;
  }
  while (1)
  {
    uint64_t v12 = *(char **)this;
    if (*(void *)this >= *((void *)this + 1))
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v12;
      if ((*v12 & 0x80000000) == 0)
      {
        *((_DWORD *)this + 8) = TagFallback;
        *(void *)this = v12 + 1;
        if (!TagFallback) {
          break;
        }
        goto LABEL_20;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      break;
    }
LABEL_20:
    if ((TagFallback & 7) == 4) {
      break;
    }
    char v14 = google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3);
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  int v16 = *((_DWORD *)this + 13);
  if (v16 < *((_DWORD *)this + 14)) {
    *((_DWORD *)this + 13) = v16 + 1;
  }
  return TagFallback == (v11 | 4);
}

void google::protobuf::RepeatedField<int>::Reserve(unsigned int *a1, int a2)
{
  signed int v2 = a1[1];
  if (v2 < a2)
  {
    int v4 = (google::protobuf::Arena **)*((void *)a1 + 1);
    if (v4) {
      uint64_t v5 = *v4;
    }
    else {
      uint64_t v5 = 0;
    }
    int v6 = 2 * v2;
    if (v6 <= a2) {
      int v6 = a2;
    }
    if (v6 <= 4) {
      unsigned int v7 = 4;
    }
    else {
      unsigned int v7 = v6;
    }
    uint64_t v8 = 4 * v7;
    if (v5) {
      Aligned = google::protobuf::Arena::AllocateAligned(v5, MEMORY[0x1E4FBA380], v8 + 8);
    }
    else {
      Aligned = operator new(v8 + 8);
    }
    *((void *)a1 + 1) = Aligned;
    void *Aligned = v5;
    a1[1] = v7;
    uint64_t v10 = *a1;
    if ((int)v10 >= 1) {
      memcpy(Aligned + 1, v4 + 1, 4 * v10);
    }
    if (v4 && !*v4)
    {
      operator delete(v4);
    }
  }
}

uint64_t google::protobuf::internal::WireFormatLite::WriteInt32(uint64_t this, signed int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v6 = 8 * this;
  if (*((int *)a3 + 4) < 5)
  {
    this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a3, v6);
    int v11 = *((_DWORD *)a3 + 4);
  }
  else
  {
    uint64_t v7 = *((void *)a3 + 1);
    if (v6 < 0x80)
    {
      LOBYTE(v9) = 8 * this;
      uint64_t v8 = (unsigned char *)*((void *)a3 + 1);
    }
    else
    {
      uint64_t v8 = (unsigned char *)*((void *)a3 + 1);
      do
      {
        *v8++ = v6 | 0x80;
        unsigned int v9 = v6 >> 7;
        unsigned int v10 = v6 >> 14;
        v6 >>= 7;
      }
      while (v10);
    }
    *uint64_t v8 = v9;
    int v12 = v8 - v7 + 1;
    *((void *)a3 + 1) += v12;
    int v11 = *((_DWORD *)a3 + 4) - v12;
    *((_DWORD *)a3 + 4) = v11;
  }
  unint64_t v13 = a2;
  if (v11 < 10)
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a3, a2);
  }
  else
  {
    uint64_t v14 = *((void *)a3 + 1);
    if (a2 < 0x80)
    {
      LOBYTE(v16) = a2;
      char v15 = (unsigned char *)*((void *)a3 + 1);
    }
    else
    {
      char v15 = (unsigned char *)*((void *)a3 + 1);
      do
      {
        *v15++ = v13 | 0x80;
        unint64_t v16 = v13 >> 7;
        unint64_t v17 = v13 >> 14;
        v13 >>= 7;
      }
      while (v17);
    }
    *char v15 = v16;
    int v18 = v15 - v14 + 1;
    *((void *)a3 + 1) += v18;
    *((_DWORD *)a3 + 4) -= v18;
  }
  return this;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteInt64(uint64_t this, unint64_t a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v6 = 8 * this;
  if (*((int *)a3 + 4) < 5)
  {
    this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a3, v6);
    int v9 = *((_DWORD *)a3 + 4);
  }
  else
  {
    uint64_t v7 = (unsigned char *)*((void *)a3 + 1);
    if (this < 0x10)
    {
      uint64_t v8 = (unsigned char *)*((void *)a3 + 1);
    }
    else
    {
      unsigned char *v7 = v6 | 0x80;
      uint64_t v8 = v7 + 1;
      unsigned int v6 = this >> 4;
    }
    *uint64_t v8 = v6;
    int v10 = v8 - v7 + 1;
    *((void *)a3 + 1) += v10;
    int v9 = *((_DWORD *)a3 + 4) - v10;
    *((_DWORD *)a3 + 4) = v9;
  }
  if (v9 < 10)
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a3, a2);
  }
  else
  {
    uint64_t v11 = *((void *)a3 + 1);
    if (a2 < 0x80)
    {
      LOBYTE(v13) = a2;
      int v12 = (unsigned char *)*((void *)a3 + 1);
    }
    else
    {
      int v12 = (unsigned char *)*((void *)a3 + 1);
      do
      {
        *v12++ = a2 | 0x80;
        unint64_t v13 = a2 >> 7;
        unint64_t v14 = a2 >> 14;
        a2 >>= 7;
      }
      while (v14);
    }
    *int v12 = v13;
    int v15 = v12 - v11 + 1;
    *((void *)a3 + 1) += v15;
    *((_DWORD *)a3 + 4) -= v15;
  }
  return this;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteUInt32(uint64_t this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = this;
  if (*((int *)a2 + 4) < 5)
  {
    __src[0] = 8;
    this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
    int v6 = *((_DWORD *)a2 + 4);
  }
  else
  {
    *(unsigned char *)(*((void *)a2 + 1))++ = 8;
    int v6 = *((_DWORD *)a2 + 4) - 1;
    *((_DWORD *)a2 + 4) = v6;
  }
  if (v6 < 5)
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    if (v5 < 0x80)
    {
      LOBYTE(v9) = v5;
      uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
    }
    else
    {
      uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
      do
      {
        *v8++ = v5 | 0x80;
        unsigned int v9 = v5 >> 7;
        unsigned int v10 = v5 >> 14;
        v5 >>= 7;
      }
      while (v10);
    }
    *uint64_t v8 = v9;
    int v11 = v8 - v7 + 1;
    *((void *)a2 + 1) += v11;
    *((_DWORD *)a2 + 4) -= v11;
  }
  return this;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteUInt64(uint64_t this, unint64_t a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v6 = 8 * this;
  if (*((int *)a3 + 4) < 5)
  {
    this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a3, v6);
    int v7 = *((_DWORD *)a3 + 4);
  }
  else
  {
    *(unsigned char *)(*((void *)a3 + 1))++ = v6;
    int v7 = *((_DWORD *)a3 + 4) - 1;
    *((_DWORD *)a3 + 4) = v7;
  }
  if (v7 < 10)
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a3, a2);
  }
  else
  {
    uint64_t v8 = *((void *)a3 + 1);
    if (a2 < 0x80)
    {
      LOBYTE(v10) = a2;
      unsigned int v9 = (unsigned char *)*((void *)a3 + 1);
    }
    else
    {
      unsigned int v9 = (unsigned char *)*((void *)a3 + 1);
      do
      {
        *v9++ = a2 | 0x80;
        unint64_t v10 = a2 >> 7;
        unint64_t v11 = a2 >> 14;
        a2 >>= 7;
      }
      while (v11);
    }
    *unsigned int v9 = v10;
    int v12 = v9 - v8 + 1;
    *((void *)a3 + 1) += v12;
    *((_DWORD *)a3 + 4) -= v12;
  }
  return this;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteFloat(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedOutputStream *a2, float a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v6 = (8 * this) | 5;
  if (*((int *)a2 + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v6);
  }
  else
  {
    int v7 = (unsigned char *)*((void *)a2 + 1);
    if (v6 < 0x80)
    {
      uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
    }
    else
    {
      unsigned char *v7 = (8 * (_BYTE)this) | 0x85;
      uint64_t v8 = v7 + 1;
      unsigned int v6 = this >> 4;
    }
    *uint64_t v8 = v6;
    int v9 = v8 - v7 + 1;
    *((void *)a2 + 1) += v9;
    *((_DWORD *)a2 + 4) -= v9;
  }
  return google::protobuf::io::CodedOutputStream::WriteLittleEndian32((uint64_t)a2, SLODWORD(a3));
}

uint64_t google::protobuf::internal::WireFormatLite::WriteDouble(google::protobuf::internal::WireFormatLite *this, google::protobuf::io::CodedOutputStream *a2, double a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v6 = (8 * this) | 1;
  if (*((int *)a2 + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v6);
  }
  else
  {
    int v7 = (unsigned char *)*((void *)a2 + 1);
    if (v6 < 0x80)
    {
      uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
    }
    else
    {
      unsigned char *v7 = (8 * (_BYTE)this) | 0x81;
      uint64_t v8 = v7 + 1;
      unsigned int v6 = this >> 4;
    }
    *uint64_t v8 = v6;
    int v9 = v8 - v7 + 1;
    *((void *)a2 + 1) += v9;
    *((_DWORD *)a2 + 4) -= v9;
  }
  return google::protobuf::io::CodedOutputStream::WriteLittleEndian64((uint64_t)a2, *(uint64_t *)&a3);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteBool(uint64_t this, unsigned int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v6 = 8 * this;
  if (*((int *)a3 + 4) < 5)
  {
    this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a3, v6);
    int v9 = *((_DWORD *)a3 + 4);
  }
  else
  {
    int v7 = (unsigned char *)*((void *)a3 + 1);
    if (this < 0x10)
    {
      uint64_t v8 = (unsigned char *)*((void *)a3 + 1);
    }
    else
    {
      unsigned char *v7 = v6 | 0x80;
      uint64_t v8 = v7 + 1;
      unsigned int v6 = this >> 4;
    }
    *uint64_t v8 = v6;
    int v10 = v8 - v7 + 1;
    *((void *)a3 + 1) += v10;
    int v9 = *((_DWORD *)a3 + 4) - v10;
    *((_DWORD *)a3 + 4) = v9;
  }
  if (v9 < 5)
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a3, a2);
  }
  else
  {
    *(unsigned char *)(*((void *)a3 + 1))++ = a2;
    --*((_DWORD *)a3 + 4);
  }
  return this;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteEnum(uint64_t this, signed int a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v6 = 8 * this;
  if (*((int *)a3 + 4) < 5)
  {
    this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a3, v6);
    int v9 = *((_DWORD *)a3 + 4);
  }
  else
  {
    int v7 = (unsigned char *)*((void *)a3 + 1);
    if (this < 0x10)
    {
      uint64_t v8 = (unsigned char *)*((void *)a3 + 1);
    }
    else
    {
      unsigned char *v7 = v6 | 0x80;
      uint64_t v8 = v7 + 1;
      unsigned int v6 = this >> 4;
    }
    *uint64_t v8 = v6;
    int v10 = v8 - v7 + 1;
    *((void *)a3 + 1) += v10;
    int v9 = *((_DWORD *)a3 + 4) - v10;
    *((_DWORD *)a3 + 4) = v9;
  }
  unint64_t v11 = a2;
  if (v9 < 10)
  {
    return google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a3, a2);
  }
  else
  {
    uint64_t v12 = *((void *)a3 + 1);
    if (a2 < 0x80)
    {
      LOBYTE(v14) = a2;
      unint64_t v13 = (unsigned char *)*((void *)a3 + 1);
    }
    else
    {
      unint64_t v13 = (unsigned char *)*((void *)a3 + 1);
      do
      {
        *v13++ = v11 | 0x80;
        unint64_t v14 = v11 >> 7;
        unint64_t v15 = v11 >> 14;
        v11 >>= 7;
      }
      while (v15);
    }
    *unint64_t v13 = v14;
    int v16 = v13 - v12 + 1;
    *((void *)a3 + 1) += v16;
    *((_DWORD *)a3 + 4) -= v16;
  }
  return this;
}

uint64_t google::protobuf::internal::WireFormatLite::WriteString(unsigned int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  unsigned int v5 = (8 * a1) | 2;
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v5);
  }
  else
  {
    unsigned int v6 = (unsigned char *)*((void *)this + 1);
    if (v5 < 0x80)
    {
      int v7 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      unsigned char *v6 = (8 * a1) | 0x82;
      int v7 = v6 + 1;
      unsigned int v5 = a1 >> 4;
    }
    unsigned char *v7 = v5;
    int v8 = v7 - v6 + 1;
    *((void *)this + 1) += v8;
    *((_DWORD *)this + 4) -= v8;
  }
  int v9 = *(char *)(a2 + 23);
  if (v9 < 0 && *(void *)(a2 + 8) >> 31)
  {
    int v20 = 3;
    int v21 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/wire_format_lite.cc";
    int v22 = 510;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (value.size()) <= (kint32max): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    LOBYTE(v9) = *(unsigned char *)(a2 + 23);
  }
  if ((v9 & 0x80u) == 0) {
    unsigned int v10 = v9;
  }
  else {
    unsigned int v10 = *(_DWORD *)(a2 + 8);
  }
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v10);
  }
  else
  {
    uint64_t v11 = *((void *)this + 1);
    if (v10 < 0x80)
    {
      LOBYTE(v13) = v10;
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      do
      {
        *v12++ = v10 | 0x80;
        unsigned int v13 = v10 >> 7;
        unsigned int v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
    }
    *uint64_t v12 = v13;
    int v15 = v12 - v11 + 1;
    *((void *)this + 1) += v15;
    *((_DWORD *)this + 4) -= v15;
  }
  int v16 = *(char *)(a2 + 23);
  if (v16 >= 0) {
    unint64_t v17 = (char *)a2;
  }
  else {
    unint64_t v17 = *(char **)a2;
  }
  if (v16 >= 0) {
    int v18 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v18 = *(_DWORD *)(a2 + 8);
  }
  return google::protobuf::io::CodedOutputStream::WriteRaw(this, v17, v18);
}

void sub_1DC0778E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(unsigned int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  unsigned int v5 = (8 * a1) | 2;
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v5);
  }
  else
  {
    unsigned int v6 = (unsigned char *)*((void *)this + 1);
    if (v5 < 0x80)
    {
      int v7 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      unsigned char *v6 = (8 * a1) | 0x82;
      int v7 = v6 + 1;
      unsigned int v5 = a1 >> 4;
    }
    unsigned char *v7 = v5;
    int v8 = v7 - v6 + 1;
    *((void *)this + 1) += v8;
    *((_DWORD *)this + 4) -= v8;
  }
  int v9 = *(char *)(a2 + 23);
  if (v9 < 0 && *(void *)(a2 + 8) >> 31)
  {
    int v20 = 3;
    int v21 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/wire_format_lite.cc";
    int v22 = 519;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (value.size()) <= (kint32max): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    LOBYTE(v9) = *(unsigned char *)(a2 + 23);
  }
  if ((v9 & 0x80u) == 0) {
    unsigned int v10 = v9;
  }
  else {
    unsigned int v10 = *(_DWORD *)(a2 + 8);
  }
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v10);
  }
  else
  {
    uint64_t v11 = *((void *)this + 1);
    if (v10 < 0x80)
    {
      LOBYTE(v13) = v10;
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      do
      {
        *v12++ = v10 | 0x80;
        unsigned int v13 = v10 >> 7;
        unsigned int v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
    }
    *uint64_t v12 = v13;
    int v15 = v12 - v11 + 1;
    *((void *)this + 1) += v15;
    *((_DWORD *)this + 4) -= v15;
  }
  int v16 = *(char *)(a2 + 23);
  if (v16 >= 0) {
    unint64_t v17 = (char *)a2;
  }
  else {
    unint64_t v17 = *(char **)a2;
  }
  if (v16 >= 0) {
    uint64_t v18 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v18 = *(unsigned int *)(a2 + 8);
  }
  if (*((unsigned char *)this + 25)) {
    return google::protobuf::io::CodedOutputStream::WriteAliasedRaw(this, v17, v18);
  }
  else {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, v17, v18);
  }
}

void sub_1DC077AB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(unsigned int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  unsigned int v5 = (8 * a1) | 2;
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v5);
  }
  else
  {
    unsigned int v6 = (unsigned char *)*((void *)this + 1);
    if (v5 < 0x80)
    {
      int v7 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      unsigned char *v6 = (8 * a1) | 0x82;
      int v7 = v6 + 1;
      unsigned int v5 = a1 >> 4;
    }
    unsigned char *v7 = v5;
    int v8 = v7 - v6 + 1;
    *((void *)this + 1) += v8;
    *((_DWORD *)this + 4) -= v8;
  }
  int v9 = *(char *)(a2 + 23);
  if (v9 < 0 && *(void *)(a2 + 8) >> 31)
  {
    int v20 = 3;
    int v21 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/wire_format_lite.cc";
    int v22 = 534;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (value.size()) <= (kint32max): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    LOBYTE(v9) = *(unsigned char *)(a2 + 23);
  }
  if ((v9 & 0x80u) == 0) {
    unsigned int v10 = v9;
  }
  else {
    unsigned int v10 = *(_DWORD *)(a2 + 8);
  }
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v10);
  }
  else
  {
    uint64_t v11 = *((void *)this + 1);
    if (v10 < 0x80)
    {
      LOBYTE(v13) = v10;
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      do
      {
        *v12++ = v10 | 0x80;
        unsigned int v13 = v10 >> 7;
        unsigned int v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
    }
    *uint64_t v12 = v13;
    int v15 = v12 - v11 + 1;
    *((void *)this + 1) += v15;
    *((_DWORD *)this + 4) -= v15;
  }
  int v16 = *(char *)(a2 + 23);
  if (v16 >= 0) {
    unint64_t v17 = (char *)a2;
  }
  else {
    unint64_t v17 = *(char **)a2;
  }
  if (v16 >= 0) {
    uint64_t v18 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v18 = *(unsigned int *)(a2 + 8);
  }
  if (*((unsigned char *)this + 25)) {
    return google::protobuf::io::CodedOutputStream::WriteAliasedRaw(this, v17, v18);
  }
  else {
    return google::protobuf::io::CodedOutputStream::WriteRaw(this, v17, v18);
  }
}

void sub_1DC077C90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteMessage(int a1, uint64_t a2, google::protobuf::io::CodedOutputStream *this)
{
  unsigned int v5 = (8 * a1) | 2;
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v5);
  }
  else
  {
    uint64_t v6 = *((void *)this + 1);
    if (v5 < 0x80)
    {
      LOBYTE(v8) = (8 * a1) | 2;
      int v7 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      int v7 = (unsigned char *)*((void *)this + 1);
      do
      {
        *v7++ = v5 | 0x80;
        unsigned int v8 = v5 >> 7;
        unsigned int v9 = v5 >> 14;
        v5 >>= 7;
      }
      while (v9);
    }
    unsigned char *v7 = v8;
    int v10 = v7 - v6 + 1;
    *((void *)this + 1) += v10;
    *((_DWORD *)this + 4) -= v10;
  }
  unsigned int v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
  unsigned int v12 = v11;
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v11);
  }
  else
  {
    uint64_t v13 = *((void *)this + 1);
    if (v11 < 0x80)
    {
      LOBYTE(v15) = v11;
      unsigned int v14 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      unsigned int v14 = (unsigned char *)*((void *)this + 1);
      do
      {
        *v14++ = v12 | 0x80;
        unsigned int v15 = v12 >> 7;
        unsigned int v16 = v12 >> 14;
        v12 >>= 7;
      }
      while (v16);
    }
    *unsigned int v14 = v15;
    int v17 = v14 - v13 + 1;
    *((void *)this + 1) += v17;
    *((_DWORD *)this + 4) -= v17;
  }
  uint64_t v18 = *(uint64_t (**)(uint64_t, google::protobuf::io::CodedOutputStream *))(*(void *)a2 + 104);
  return v18(a2, this);
}

uint64_t google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(uint64_t a1, google::protobuf::io::CodedOutputStream *this)
{
  if (*((int *)this + 4) < 5)
  {
    __src[0] = 18;
    google::protobuf::io::CodedOutputStream::WriteRaw(this, __src, 1);
  }
  else
  {
    *(unsigned char *)(*((void *)this + 1))++ = 18;
    --*((_DWORD *)this + 4);
  }
  unsigned int v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 120))(a1);
  signed int v5 = v4;
  if (*((int *)this + 4) < 5)
  {
    google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(this, v4);
    int v11 = *((_DWORD *)this + 4);
  }
  else
  {
    uint64_t v6 = *((void *)this + 1);
    if (v4 < 0x80)
    {
      LOBYTE(v9) = v4;
      int v7 = (unsigned char *)*((void *)this + 1);
    }
    else
    {
      int v7 = (unsigned char *)*((void *)this + 1);
      unsigned int v8 = v4;
      do
      {
        *v7++ = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        unsigned int v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
    }
    unsigned char *v7 = v9;
    int v12 = v7 - v6 + 1;
    *((void *)this + 1) += v12;
    int v11 = *((_DWORD *)this + 4) - v12;
    *((_DWORD *)this + 4) = v11;
  }
  BOOL v13 = __OFSUB__(v11, v5);
  int v14 = v11 - v5;
  if (v14 < 0 != v13
    || (uint64_t v15 = *((void *)this + 1), *((void *)this + 1) = v15 + v5, *((_DWORD *)this + 4) = v14, !v15))
  {
    int v17 = *(uint64_t (**)(uint64_t, google::protobuf::io::CodedOutputStream *))(*(void *)a1 + 104);
    return v17(a1, this);
  }
  else
  {
    if (*((unsigned char *)this + 26)) {
      BOOL v16 = *((unsigned char *)this + 27) == 0;
    }
    else {
      BOOL v16 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ == 0;
    }
    uint64_t v19 = !v16;
    int v20 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128);
    return v20(a1, v19);
  }
}

BOOL google::protobuf::internal::WireFormatLite::ReadBytes(char **this, std::string *a2)
{
  signed int v5 = *this;
  unsigned int v4 = this[1];
  if (*this >= v4)
  {
    LODWORD(v6) = 0;
  }
  else
  {
    std::string::size_type v6 = *v5;
    if ((*v5 & 0x80000000) == 0)
    {
      int v7 = (unsigned __int8 *)(v5 + 1);
      *this = (char *)v7;
      goto LABEL_4;
    }
  }
  Varint32Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)this, v6);
  if ((Varint32Fallback & 0x8000000080000000) != 0) {
    return 0;
  }
  std::string::size_type v6 = Varint32Fallback;
  int v7 = (unsigned __int8 *)*this;
  unsigned int v4 = this[1];
LABEL_4:
  if ((int)v6 <= (int)v4 - (int)v7)
  {
    size_t v9 = v6;
    std::string::resize(a2, v6, 0);
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
      a2 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    memcpy(a2, *this, v9);
    *this += v9;
    return 1;
  }
  else
  {
    return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)this, a2, v6);
  }
}

BOOL google::protobuf::internal::WireFormatLite::VerifyUtf8String(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  if (!a2)
  {
    int v25 = 0;
    goto LABEL_56;
  }
  std::string::size_type v6 = (unsigned int *)((char *)a1 + a2);
  int v7 = a1;
  uint64_t v8 = a1 & 7;
  if ((a1 & 7) != 0 && a2 >= 1)
  {
    char v9 = (_BYTE)a1 + 1;
    int v7 = a1;
    while ((*(char *)v7 & 0x80000000) == 0)
    {
      int v7 = (unsigned int *)((char *)v7 + 1);
      uint64_t v8 = v9 & 7;
      if ((v9 & 7) != 0)
      {
        ++v9;
        if (v7 < v6) {
          continue;
        }
      }
      goto LABEL_8;
    }
  }
  else
  {
LABEL_8:
    if (!v8 && v7 < (unsigned int *)((char *)v6 - 7))
    {
      do
      {
        if (((v7[1] | *v7) & 0x80808080) != 0) {
          break;
        }
        v7 += 2;
      }
      while (v7 < (unsigned int *)((char *)v6 - 7));
    }
  }
  if (v7 < v6)
  {
    int64_t v10 = (char *)a1 + a2 - (char *)v7;
    while ((*(char *)v7 & 0x80000000) == 0)
    {
      int v7 = (unsigned int *)((char *)v7 + 1);
      if (!--v10)
      {
        LODWORD(v7) = a1 + a2;
        break;
      }
    }
  }
  int v11 = v7 - a1;
  if (a2 == v7 - a1) {
    goto LABEL_55;
  }
  int v12 = (unsigned int *)((char *)a1 + v11);
  BOOL v13 = (unsigned int *)((char *)v12 + a2 - (uint64_t)v11);
  int v14 = (unsigned int *)((char *)v13 - 7);
  uint64_t v15 = (char *)a1 + a2;
  BOOL v16 = v12;
  while (1)
  {
    uint64_t v17 = v16 & 7;
    if ((v16 & 7) != 0 && v16 < v13)
    {
      char v18 = (_BYTE)v16 + 1;
      while (!google::protobuf::internal::utf8acceptnonsurrogates_fast[*(unsigned __int8 *)v16])
      {
        BOOL v16 = (unsigned int *)((char *)v16 + 1);
        uint64_t v17 = v18 & 7;
        if ((v18 & 7) != 0)
        {
          ++v18;
          if (v16 < v13) {
            continue;
          }
        }
        goto LABEL_25;
      }
LABEL_33:
      uint64_t v19 = v16;
      goto LABEL_34;
    }
LABEL_25:
    if (v17 || v16 >= v14) {
      goto LABEL_33;
    }
    uint64_t v19 = v16;
    while (1)
    {
      unint64_t v20 = v19[1];
      if ((((*v19 - 538976288) | (v20 - 538976288) | *v19 | v20) & 0x80808080) != 0)
      {
        if (google::protobuf::internal::utf8acceptnonsurrogates_fast[BYTE1(*v19)] | google::protobuf::internal::utf8acceptnonsurrogates_fast[*v19] | google::protobuf::internal::utf8acceptnonsurrogates_fast[BYTE2(*v19)] | google::protobuf::internal::utf8acceptnonsurrogates_fast[(unint64_t)*v19 >> 24]) {
          goto LABEL_34;
        }
        if (google::protobuf::internal::utf8acceptnonsurrogates_fast[BYTE1(v20)] | google::protobuf::internal::utf8acceptnonsurrogates_fast[v20] | google::protobuf::internal::utf8acceptnonsurrogates_fast[BYTE2(v20)] | google::protobuf::internal::utf8acceptnonsurrogates_fast[v20 >> 24]) {
          break;
        }
      }
      v19 += 2;
      if (v19 >= v14) {
        goto LABEL_34;
      }
    }
    ++v19;
LABEL_34:
    if (v19 >= v13) {
      break;
    }
    uint64_t v21 = v15 - (char *)v19;
    int v22 = (unsigned int *)((char *)v19 - 1);
    uint64_t v23 = (char *)&google::protobuf::internal::utf8acceptnonsurrogates;
    BOOL v16 = v19;
    while (1)
    {
      uint64_t v24 = v23[*(unsigned __int8 *)v16];
      if (v24 > 0xEF) {
        break;
      }
      BOOL v16 = (unsigned int *)((char *)v16 + 1);
      uint64_t v23 = (char *)&google::protobuf::internal::utf8acceptnonsurrogates + 256 * v24;
      int v22 = (unsigned int *)((char *)v22 + 1);
      if (!--v21) {
        goto LABEL_47;
      }
    }
    if (v23 - &google::protobuf::internal::utf8acceptnonsurrogates >= 0x100)
    {
      do
      {
        BOOL v16 = v22;
        if (v22 <= v12) {
          break;
        }
        int v22 = (unsigned int *)((char *)v22 - 1);
      }
      while ((*(unsigned char *)v16 & 0xC0) == 0x80);
    }
    if (v24 != 253)
    {
      int v32 = v16 - v12;
      goto LABEL_54;
    }
  }
  LODWORD(v13) = v19;
  uint64_t v23 = (char *)&google::protobuf::internal::utf8acceptnonsurrogates;
LABEL_47:
  if (v23 - &google::protobuf::internal::utf8acceptnonsurrogates >= 0x100)
  {
    if (v19 > v6) {
      std::string::size_type v6 = v19;
    }
    int v26 = (unsigned int *)((char *)v6 - 1);
    do
    {
      BOOL v13 = v26;
      if (v26 <= v12) {
        break;
      }
      int v26 = (unsigned int *)((char *)v26 - 1);
    }
    while ((*(unsigned char *)v13 & 0xC0) == 0x80);
  }
  int v32 = v13 - v12;
LABEL_54:
  LODWORD(v7) = v7 + v32;
LABEL_55:
  int v25 = v7 - a1;
LABEL_56:
  if (v25 != a2)
  {
    char v27 = "serializing";
    if (a3 != 1) {
      char v27 = 0;
    }
    if (a3) {
      uint64_t v28 = v27;
    }
    else {
      uint64_t v28 = "parsing";
    }
    std::string::basic_string[abi:ne180100]<0>(&__p, (char *)&unk_1DC167C33);
    if (a4)
    {
      google::protobuf::StringPrintf(&v33, a4);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::string __p = v33;
    }
    LODWORD(v33.__r_.__value_.__l.__data_) = 2;
    v33.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-int"
                                                            "ernal/deps/protobuf/src/google/protobuf/wire_format_lite.cc";
    LODWORD(v33.__r_.__value_.__r.__words[2]) = 629;
    memset(&v34, 0, sizeof(v34));
    std::string::append(&v34, "String field");
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(&v34, (const std::string::value_type *)p_p, size);
    std::string::append(&v34, " contains invalid ");
    std::string::append(&v34, "UTF-8 data when ");
    std::string::append(&v34, v28);
    std::string::append(&v34, " a protocol ");
    std::string::append(&v34, "buffer. Use the 'bytes' type if you intend to send raw ");
    std::string::append(&v34, "bytes. ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v33);
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v34.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return v25 == a2;
}

void sub_1DC078524(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::WireFormatLite::Int32Size(int a1, uint64_t a2)
{
  if (a1 < 1) {
    return 0;
  }
  LODWORD(v3) = a1;
  uint64_t result = 0;
  uint64_t v3 = v3;
  unsigned int v4 = (int *)(a2 + 8);
  do
  {
    int v6 = *v4++;
    int v5 = v6;
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v7;
    --v3;
  }
  while (v3);
  return result;
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing(google::protobuf::io::ZeroCopyOutputStream *this)
{
  return 0;
}

uint64_t google::protobuf::io::ArrayOutputStream::ByteCount(google::protobuf::io::ArrayOutputStream *this)
{
  return *((int *)this + 6);
}

void google::protobuf::io::ArrayOutputStream::BackUp(google::protobuf::io::ArrayOutputStream *this, int a2)
{
  int v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    int v5 = 3;
    int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_cop"
         "y_stream_impl_lite.cc";
    int v7 = 138;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (last_returned_size_) > (0): ");
    std::string::append(&__p, "BackUp() can only be called after a successful Next().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    int v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2
    && (int v5 = 3,
        int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero"
             "_copy_stream_impl_lite.cc",
        int v7 = 140,
        memset(&__p, 0, sizeof(__p)),
        std::string::append(&__p, "CHECK failed: (count) <= (last_returned_size_): "),
        google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5),
        SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0))
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_11;
    }
  }
  else if ((a2 & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  int v5 = 3;
  int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_copy_"
       "stream_impl_lite.cc";
  int v7 = 141;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "CHECK failed: (count) >= (0): ");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_11:
  *((void *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_1DC07872C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::io::ArrayOutputStream::Next(google::protobuf::io::ArrayOutputStream *this, void **a2, int *a3)
{
  uint64_t v3 = *((int *)this + 6);
  int v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    int v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5)) {
      int v5 = *((_DWORD *)this + 5);
    }
    *((_DWORD *)this + 7) = v5;
    *a2 = (void *)(*((void *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void google::protobuf::io::ArrayOutputStream::~ArrayOutputStream(google::protobuf::io::ArrayOutputStream *this)
{
}

uint64_t google::protobuf::io::CopyingOutputStreamAdaptor::ByteCount(google::protobuf::io::CopyingOutputStreamAdaptor *this)
{
  return *((void *)this + 3) + *((int *)this + 11);
}

void google::protobuf::io::CopyingOutputStreamAdaptor::BackUp(google::protobuf::io::CopyingOutputStreamAdaptor *this, int a2)
{
  if (a2 < 0)
  {
    int v5 = 3;
    int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_cop"
         "y_stream_impl_lite.cc";
    int v7 = 390;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  int v4 = *((_DWORD *)this + 11);
  if (v4 != *((_DWORD *)this + 10))
  {
    int v5 = 3;
    int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_cop"
         "y_stream_impl_lite.cc";
    int v7 = 391;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (buffer_used_) == (buffer_size_): ");
    std::string::append(&__p, " BackUp() can only be called after Next().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    int v4 = *((_DWORD *)this + 11);
  }
  if (v4 < a2)
  {
    int v5 = 3;
    int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_cop"
         "y_stream_impl_lite.cc";
    int v7 = 393;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (count) <= (buffer_used_): ");
    std::string::append(&__p, " Can't back up over more bytes than were returned by the last call to Next().");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    int v4 = *((_DWORD *)this + 11);
  }
  *((_DWORD *)this + 11) = v4 - a2;
}

void sub_1DC07894C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::CopyingOutputStreamAdaptor::Next(google::protobuf::io::CopyingOutputStreamAdaptor *this, void **a2, int *a3)
{
  if (*((_DWORD *)this + 11) != *((_DWORD *)this + 10)
    || (uint64_t result = google::protobuf::io::CopyingOutputStreamAdaptor::WriteBuffer(this), result))
  {
    uint64_t v7 = *((void *)this + 4);
    if (!v7) {
      operator new[]();
    }
    int v8 = *((_DWORD *)this + 10);
    uint64_t v9 = *((int *)this + 11);
    *a2 = (void *)(v7 + v9);
    *a3 = v8 - v9;
    *((_DWORD *)this + 11) = *((_DWORD *)this + 10);
    return 1;
  }
  return result;
}

uint64_t google::protobuf::io::CopyingOutputStreamAdaptor::WriteBuffer(google::protobuf::io::CopyingOutputStreamAdaptor *this)
{
  if (*((unsigned char *)this + 17)) {
    return 0;
  }
  if (!*((_DWORD *)this + 11)) {
    return 1;
  }
  if ((*(unsigned int (**)(void, void))(**((void **)this + 1) + 16))(*((void *)this + 1), *((void *)this + 4)))
  {
    *((void *)this + 3) += *((int *)this + 11);
    *((_DWORD *)this + 11) = 0;
    return 1;
  }
  *((unsigned char *)this + 17) = 1;
  *((_DWORD *)this + 11) = 0;
  uint64_t result = *((void *)this + 4);
  if (result)
  {
    MEMORY[0x1E0198BE0](result, 0x1000C8077774924);
    uint64_t result = 0;
    *((void *)this + 4) = 0;
  }
  return result;
}

void google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor(google::protobuf::io::CopyingOutputStreamAdaptor *this)
{
  google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;

  *(void *)this = &unk_1F3626AD0;
  google::protobuf::io::CopyingOutputStreamAdaptor::WriteBuffer(this);
  if (*((unsigned char *)this + 16))
  {
    signed int v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    MEMORY[0x1E0198BE0](v3, 0x1000C8077774924);
  }
}

std::string *google::protobuf::StringPrintf@<X0>(std::string *a1@<X8>, ...)
{
  va_start(va, a1);
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  a1->__r_.__value_.__r.__words[0] = 0;
  a1->__r_.__value_.__l.__size_ = 0;
  a1->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = (std::string *)vsnprintf(__str, 0x400uLL, " '%s'", va);
  if ((int)result > 1023) {
    operator new[]();
  }
  if ((result & 0x80000000) == 0) {
    return std::string::append(a1, __str, result);
  }
  return result;
}

void sub_1DC078CDC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(google::protobuf::io::ZeroCopyOutputStream *this, const void *a2)
{
  int v3 = 3;
  int v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_copy_stream.cc";
  int v5 = 50;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1DC078D70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::DeleteEmptyString(google::protobuf::internal *this)
{
  if (byte_1EC0068F0)
  {
    byte_1EC0068F0 = 0;
    if (byte_1EC0068EF < 0) {
      operator delete((void *)google::protobuf::internal::fixed_address_empty_string);
    }
  }
}

void google::protobuf::internal::InitEmptyString(google::protobuf::internal *this, void (*a2)(void))
{
  google::protobuf::internal::fixed_address_empty_string = 0;
  qword_1EC0068E0 = 0;
  unk_1EC0068E8 = 0;
  byte_1EC0068F0 = 1;
  google::protobuf::internal::OnShutdown((google::protobuf::internal *)google::protobuf::internal::DeleteEmptyString, a2);
}

unint64_t *google::protobuf::internal::InitProtobufDefaults(google::protobuf::internal *this)
{
  unint64_t v1 = atomic_load(&google::protobuf::internal::empty_string_once_init_);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = google::protobuf::internal::InitEmptyString;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&google::protobuf::internal::empty_string_once_init_, (uint64_t)v3);
  }
  return result;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(google::protobuf::internal::RepeatedPtrFieldBase *this, int a2)
{
  int v2 = *((_DWORD *)this + 2);
  int v3 = *((_DWORD *)this + 3);
  int v4 = v2 + a2;
  int v5 = (unsigned int *)*((void *)this + 2);
  if (v3 < v2 + a2)
  {
    uint64_t v7 = *(void *)this;
    int v8 = 2 * v3;
    if (2 * v3 <= v4) {
      int v8 = v4;
    }
    if (v8 <= 4) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = v8;
    }
    uint64_t v10 = 8 * v9;
    if (v7) {
      Aligned = (unsigned int *)google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)this, MEMORY[0x1E4FBA380], v10 + 8);
    }
    else {
      Aligned = (unsigned int *)operator new(v10 + 8);
    }
    *((void *)this + 2) = Aligned;
    *((_DWORD *)this + 3) = v9;
    if (v5 && (uint64_t v12 = *v5, (int)v12 >= 1))
    {
      memcpy(Aligned + 2, v5 + 2, 8 * v12);
      Aligned = (unsigned int *)*((void *)this + 2);
      unsigned int *Aligned = *v5;
      if (!v7) {
        goto LABEL_15;
      }
    }
    else
    {
      unsigned int *Aligned = 0;
      if (!v7)
      {
LABEL_15:
        operator delete(v5);
        Aligned = (unsigned int *)*((void *)this + 2);
      }
    }
    int v2 = *((_DWORD *)this + 2);
    int v5 = Aligned;
  }
  return &v5[2 * v2 + 2];
}

uint64_t google::protobuf::io::FileOutputStream::ByteCount(google::protobuf::io::FileOutputStream *this)
{
  return *((void *)this + 7) + *((int *)this + 19);
}

void google::protobuf::io::FileOutputStream::BackUp(google::protobuf::io::FileOutputStream *this, int a2)
{
}

uint64_t google::protobuf::io::FileOutputStream::Next(google::protobuf::io::FileOutputStream *this, void **a2, int *a3)
{
  return google::protobuf::io::CopyingOutputStreamAdaptor::Next((google::protobuf::io::FileOutputStream *)((char *)this + 32), a2, a3);
}

void google::protobuf::io::FileOutputStream::~FileOutputStream(google::protobuf::io::FileOutputStream *this)
{
  google::protobuf::io::FileOutputStream::~FileOutputStream(this);
  JUMPOUT(0x1E0198C00);
}

{
  google::protobuf::io::CopyingOutputStreamAdaptor *v2;

  *(void *)this = &unk_1F3626A40;
  int v2 = (google::protobuf::io::FileOutputStream *)((char *)this + 32);
  google::protobuf::io::CopyingOutputStreamAdaptor::WriteBuffer((google::protobuf::io::FileOutputStream *)((char *)this + 32));
  google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor(v2);
  google::protobuf::io::FileOutputStream::CopyingFileOutputStream::~CopyingFileOutputStream((google::protobuf::io::FileOutputStream *)((char *)this + 8));
}

void google::protobuf::io::FileOutputStream::CopyingFileOutputStream::~CopyingFileOutputStream(google::protobuf::io::FileOutputStream::CopyingFileOutputStream *this)
{
  *(void *)this = &unk_1F3626A18;
  if (*((unsigned char *)this + 12))
  {
    if (*((unsigned char *)this + 13))
    {
      int v5 = 3;
      uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_c"
           "opy_stream_impl.cc";
      int v7 = 222;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: !is_closed_: ");
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    *((unsigned char *)this + 13) = 1;
    int v2 = *((_DWORD *)this + 2);
    while (1)
    {
      int v3 = close(v2);
      if ((v3 & 0x80000000) == 0) {
        break;
      }
      if (*__error() != 4) {
        goto LABEL_10;
      }
    }
    if (!v3) {
      return;
    }
LABEL_10:
    *((_DWORD *)this + 4) = *__error();
    int v5 = 2;
    uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_cop"
         "y_stream_impl.cc";
    int v7 = 216;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "close() failed: ");
    int v4 = strerror(*((_DWORD *)this + 4));
    std::string::append(&__p, v4);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::io::FileOutputStream::CopyingFileOutputStream::~CopyingFileOutputStream(this);
  JUMPOUT(0x1E0198C00);
}

void sub_1DC079144(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  __clang_call_terminate(a1);
}

BOOL google::protobuf::io::FileOutputStream::CopyingFileOutputStream::Write(google::protobuf::io::FileOutputStream::CopyingFileOutputStream *this, char *a2, int a3)
{
  if (*((unsigned char *)this + 13))
  {
    int v12 = 3;
    BOOL v13 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/io/zero_co"
          "py_stream_impl.cc";
    int v14 = 238;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !is_closed_: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v12);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (a3 < 1) {
    return 1;
  }
  int v6 = 0;
  do
  {
    while (1)
    {
      int v7 = write(*((_DWORD *)this + 2), &a2[v6], a3 - v6);
      int v8 = v7;
      if (v7 < 0) {
        break;
      }
      BOOL result = v7 != 0;
      v6 += v8;
      if (v8) {
        BOOL v9 = v6 < a3;
      }
      else {
        BOOL v9 = 0;
      }
      if (!v9) {
        return result;
      }
    }
  }
  while (*__error() == 4);
  uint64_t v10 = __error();
  BOOL result = 0;
  *((_DWORD *)this + 4) = *v10;
  return result;
}

void sub_1DC079280(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::FileOutputStream::FileOutputStream(uint64_t this, int a2, int a3)
{
  *(void *)this = &unk_1F3626A40;
  *(void *)(this + 8) = &unk_1F3626A18;
  *(_DWORD *)(this + 16) = a2;
  *(_WORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = &unk_1F3626AD0;
  *(void *)(this + 40) = this + 8;
  *(_WORD *)(this + 48) = 0;
  if (a3 <= 0) {
    int v3 = 0x2000;
  }
  else {
    int v3 = a3;
  }
  *(void *)(this + 56) = 0;
  *(void *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = v3;
  *(_DWORD *)(this + 76) = 0;
  return this;
}

unsigned __int8 *google::protobuf::MessageLite::InternalSerializeWithCachedSizesToArray(google::protobuf::MessageLite *this, char a2, unsigned __int8 *a3)
{
  int v6 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 120))(this);
  v13[0] = &unk_1F3626A88;
  v13[1] = a3;
  int v14 = v6;
  int v15 = v6;
  uint64_t v16 = 0;
  memset(&v12[8], 0, 19);
  *(void *)int v12 = v13;
  google::protobuf::io::CodedOutputStream::Refresh((google::protobuf::io::CodedOutputStream *)v12);
  v12[24] = 0;
  v12[26] = 1;
  v12[27] = a2;
  (*(void (**)(google::protobuf::MessageLite *, unsigned char *))(*(void *)this + 104))(this, v12);
  if (v12[24])
  {
    int v8 = 3;
    BOOL v9 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/message_lite.cc";
    int v10 = 239;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: !coded_out.HadError(): ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (*(int *)&v12[16] >= 1) {
    (*(void (**)(void))(**(void **)v12 + 24))(*(void *)v12);
  }
  return &a3[v6];
}

void sub_1DC0794D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a20 >= 1) {
    (*(void (**)(uint64_t))(*(void *)a18 + 24))(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MessageLite::SerializeWithCachedSizesToArray(google::protobuf::MessageLite *this, unsigned __int8 *a2)
{
  unint64_t v2 = atomic_load((unint64_t *)&google::protobuf::io::CodedOutputStream::default_serialization_deterministic_);
  return (*(uint64_t (**)(google::protobuf::MessageLite *, BOOL, unsigned __int8 *))(*(void *)this + 128))(this, v2 != 0, a2);
}

void *google::protobuf::MessageLite::InitializationErrorString@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "(cannot determine missing fields for lite message)");
}

uint64_t google::protobuf::MessageLite::GetMaybeArenaPointer(google::protobuf::MessageLite *this)
{
  return (*(uint64_t (**)(void))(*(void *)this + 40))();
}

uint64_t google::protobuf::MessageLite::GetArena(google::protobuf::MessageLite *this)
{
  return 0;
}

uint64_t google::protobuf::MessageLite::ParseFromCodedStream(google::protobuf::MessageLite *this, google::protobuf::io::CodedInputStream *a2)
{
  (*(void (**)(google::protobuf::MessageLite *))(*(void *)this + 56))(this);
  uint64_t result = (*(uint64_t (**)(google::protobuf::MessageLite *, google::protobuf::io::CodedInputStream *))(*(void *)this + 88))(this, a2);
  if (result)
  {
    if ((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 64))(this))
    {
      return 1;
    }
    else
    {
      int v12 = 2;
      BOOL v13 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/message_lite.cc";
      int v14 = 121;
      memset(&v15, 0, sizeof(v15));
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't ");
      std::string::append(&__p, "parse");
      std::string::append(&__p, " message of type \"");
      (*(void (**)(std::string::value_type **__return_ptr, google::protobuf::MessageLite *))(*(void *)this + 16))(&v16, this);
      if ((v18 & 0x80u) == 0) {
        int v5 = (const std::string::value_type *)&v16;
      }
      else {
        int v5 = v16;
      }
      if ((v18 & 0x80u) == 0) {
        std::string::size_type v6 = v18;
      }
      else {
        std::string::size_type v6 = v17;
      }
      std::string::append(&__p, v5, v6);
      if ((char)v18 < 0) {
        operator delete(v16);
      }
      std::string::append(&__p, "\" because it is missing required fields: ");
      (*(void (**)(std::string::value_type **__return_ptr, google::protobuf::MessageLite *))(*(void *)this + 72))(&v16, this);
      if ((v18 & 0x80u) == 0) {
        int v7 = (const std::string::value_type *)&v16;
      }
      else {
        int v7 = v16;
      }
      if ((v18 & 0x80u) == 0) {
        std::string::size_type v8 = v18;
      }
      else {
        std::string::size_type v8 = v17;
      }
      std::string::append(&__p, v7, v8);
      if ((char)v18 < 0) {
        operator delete(v16);
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string::append(&v15, (const std::string::value_type *)p_p, size);
      google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v12);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v15.__r_.__value_.__l.__data_);
      }
      return 0;
    }
  }
  return result;
}

void sub_1DC0797DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::MessageLite::SerializeToCodedStream(google::protobuf::MessageLite *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  unint64_t v4 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 96))(this);
  int v5 = (google::protobuf::_anonymous_namespace_ *)v4;
  if (v4 >> 31)
  {
    int v17 = 2;
    unsigned __int8 v18 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/message_lite.cc";
    int v19 = 252;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "Exceeded maximum protobuf size of 2GB: ");
    snprintf(__str, 0x80uLL, "%lu", v5);
    __str[127] = 0;
    std::string::append(&__p, __str);
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v17);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  int v6 = *((_DWORD *)a2 + 4);
  int v7 = v6 - v4;
  if (v6 >= (int)v4)
  {
    uint64_t v8 = *((void *)a2 + 1);
    *((void *)a2 + 1) = v8 + v4;
    *((_DWORD *)a2 + 4) = v7;
    if (v8)
    {
      if (*((unsigned char *)a2 + 26)) {
        BOOL v9 = *((unsigned char *)a2 + 27) == 0;
      }
      else {
        BOOL v9 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ == 0;
      }
      uint64_t v14 = !v9;
      BOOL v13 = (google::protobuf::_anonymous_namespace_ *)((*(uint64_t (**)(google::protobuf::MessageLite *, uint64_t, uint64_t))(*(void *)this + 128))(this, v14, v8)- v8);
      if (v13 == v5) {
        return 1;
      }
      goto LABEL_18;
    }
    int v6 = v7;
  }
  int v10 = *((_DWORD *)a2 + 5);
  (*(void (**)(google::protobuf::MessageLite *, google::protobuf::io::CodedOutputStream *))(*(void *)this + 104))(this, a2);
  if (*((unsigned char *)a2 + 24)) {
    return 0;
  }
  int v12 = v6 + *((_DWORD *)a2 + 5) - (v10 + *((_DWORD *)a2 + 4));
  if (v5 != (google::protobuf::_anonymous_namespace_ *)v12)
  {
    BOOL v13 = (google::protobuf::_anonymous_namespace_ *)v12;
LABEL_18:
    std::string v15 = (google::protobuf::_anonymous_namespace_ *)(*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)this + 96))(this);
  }
  return 1;
}

void sub_1DC079A6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::anonymous namespace'::ByteSizeConsistencyError(google::protobuf::_anonymous_namespace_ *this, google::protobuf::_anonymous_namespace_ *a2, google::protobuf::_anonymous_namespace_ *a3, uint64_t a4, const google::protobuf::MessageLite *a5)
{
  if (this != a2)
  {
    int v15 = 3;
    uint64_t v16 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/message_lite.cc";
    int v17 = 68;
    memset(&v18, 0, sizeof(v18));
    std::string::append(&v18, "CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): ");
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a4 + 16))(&__p, a4);
    if ((v14 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v14 & 0x80u) == 0) {
      std::string::size_type v9 = v14;
    }
    else {
      std::string::size_type v9 = v13;
    }
    std::string::append(&v18, p_p, v9);
    std::string::append(&v18, " was modified concurrently during serialization.");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v15);
    if ((char)v14 < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
  }
  if (a3 != this)
  {
    int v15 = 3;
    uint64_t v16 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/message_lite.cc";
    int v17 = 71;
    memset(&v18, 0, sizeof(v18));
    std::string::append(&v18, "CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): ");
    std::string::append(&v18, "Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of ");
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a4 + 16))(&__p, a4);
    if ((v14 & 0x80u) == 0) {
      int v10 = (const std::string::value_type *)&__p;
    }
    else {
      int v10 = (const std::string::value_type *)__p;
    }
    if ((v14 & 0x80u) == 0) {
      std::string::size_type v11 = v14;
    }
    else {
      std::string::size_type v11 = v13;
    }
    std::string::append(&v18, v10, v11);
    std::string::append(&v18, ".");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v15);
    if ((char)v14 < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
  }
  int v15 = 3;
  uint64_t v16 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/message_lite.cc";
  int v17 = 75;
  memset(&v18, 0, sizeof(v18));
  std::string::append(&v18, "This shouldn't be called if all the sizes are equal.");
  google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v15);
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
}

void sub_1DC079CB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

void CoreML::MIL::Operators::CoreML::Classify::Make()
{
  uint64_t v1 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = 0;
  operator new();
}

void sub_1DC07A58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,std::__shared_weak_count *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v39 = *(void *)(v37 - 96);
  *(void *)(v37 - 96) = 0;
  if (v39) {
    (*(void (**)(uint64_t))(*(void *)v39 + 8))(v39);
  }
  if (a21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a21);
  }
  std::unique_ptr<std::vector<std::shared_ptr<MIL::IRParameter>>>::reset[abi:ne180100]((void ***)&a28, 0);
  std::unique_ptr<std::unordered_map<std::string,std::shared_ptr<MIL::IRParameter>>>::reset[abi:ne180100](&a29);
  _Unwind_Resume(a1);
}

void ***std::unique_ptr<std::vector<std::shared_ptr<MIL::IRParameter>>>::reset[abi:ne180100](void ***result, void **a2)
{
  unint64_t v2 = *result;
  *uint64_t result = a2;
  if (v2)
  {
    int v3 = v2;
    std::vector<std::shared_ptr<MIL::IRParameter>>::__destroy_vector::operator()[abi:ne180100](&v3);
    JUMPOUT(0x1E0198C00);
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRParameter>>>(unint64_t a1)
{
  if (a1 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a1);
}

void *std::vector<std::shared_ptr<MIL::IRParameter>>::__swap_out_circular_buffer(void *result, void *a2)
{
  int v3 = (void *)*result;
  unint64_t v2 = (void *)result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    long long v5 = *((_OWORD *)v2 - 1);
    v2 -= 2;
    *(_OWORD *)(v4 - 16) = v5;
    v4 -= 16;
    void *v2 = 0;
    v2[1] = 0;
  }
  a2[1] = v4;
  int v6 = (void *)*result;
  *uint64_t result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::shared_ptr<MIL::IRParameter>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != v3)
  {
    *(void *)(a1 + 16) = v2 - 16;
    uint64_t v4 = *(std::__shared_weak_count **)(v2 - 8);
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 16;
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *std::__function::__value_func<std::shared_ptr<MIL::IRValue const> ()(MIL::IROperation const&)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *std::__function::__value_func<MIL::ValidationResult ()(MIL::IROperation const&)>::~__value_func[abi:ne180100](void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t std::unique_ptr<std::unordered_map<std::string,std::shared_ptr<MIL::IRParameter>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result)
  {
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>>>::~__hash_table(result);
    JUMPOUT(0x1E0198C00);
  }
  return result;
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRParameter>>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRParameter>>,0>(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void *std::__function::__func<MIL::ValidationResult (*)(MIL::IROperation const&),std::allocator<MIL::ValidationResult (*)(MIL::IROperation const&)>,MIL::ValidationResult ()(MIL::IROperation const&)>::target_type()
{
}

uint64_t std::__function::__func<MIL::ValidationResult (*)(MIL::IROperation const&),std::allocator<MIL::ValidationResult (*)(MIL::IROperation const&)>,MIL::ValidationResult ()(MIL::IROperation const&)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__function::__func<MIL::ValidationResult (*)(MIL::IROperation const&),std::allocator<MIL::ValidationResult (*)(MIL::IROperation const&)>,MIL::ValidationResult ()(MIL::IROperation const&)>::operator()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(a2);
}

uint64_t std::__function::__func<MIL::ValidationResult (*)(MIL::IROperation const&),std::allocator<MIL::ValidationResult (*)(MIL::IROperation const&)>,MIL::ValidationResult ()(MIL::IROperation const&)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3628298;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<MIL::ValidationResult (*)(MIL::IROperation const&),std::allocator<MIL::ValidationResult (*)(MIL::IROperation const&)>,MIL::ValidationResult ()(MIL::IROperation const&)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3628298;
  result[1] = v3;
  return result;
}

void std::__function::__func<MIL::ValidationResult (*)(MIL::IROperation const&),std::allocator<MIL::ValidationResult (*)(MIL::IROperation const&)>,MIL::ValidationResult ()(MIL::IROperation const&)>::~__func()
{
}

uint64_t std::__shared_ptr_pointer<std::vector<std::shared_ptr<MIL::IRParameter>> *>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<std::vector<std::shared_ptr<MIL::IRParameter>> *>::__on_zero_shared(uint64_t result)
{
  if (*(void *)(result + 24))
  {
    uint64_t v1 = *(void ***)(result + 24);
    std::vector<std::shared_ptr<MIL::IRParameter>>::__destroy_vector::operator()[abi:ne180100](&v1);
    JUMPOUT(0x1E0198C00);
  }
  return result;
}

void std::vector<std::shared_ptr<MIL::IRParameter>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    long long v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        int v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v6);
        }
        v4 -= 16;
      }
      while (v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::__shared_ptr_pointer<std::vector<std::shared_ptr<MIL::IRParameter>> *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_pointer<std::unordered_map<std::string,std::shared_ptr<MIL::IRParameter>> *>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<std::unordered_map<std::string,std::shared_ptr<MIL::IRParameter>> *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>>>::~__hash_table(result);
    JUMPOUT(0x1E0198C00);
  }
  return result;
}

void std::__shared_ptr_pointer<std::unordered_map<std::string,std::shared_ptr<MIL::IRParameter>> *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__shared_ptr_pointer<MIL::IRParameter  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<MIL::IRParameter  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<MIL::IRParameter  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>>>::__node_insert_unique(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = a2 + 16;
  std::string v40 = (void *)(a1 + 24);
  unint64_t v5 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)(a2 + 16));
  *((void *)a2 + 1) = v5;
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v5;
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
    v8.i16[0] = vaddlv_u8(v8);
    unint64_t v9 = v8.u32[0];
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v10 = v5;
      if (v6 <= v5) {
        unint64_t v10 = v5 % v6;
      }
    }
    else
    {
      unint64_t v10 = (v6 - 1) & v5;
    }
    std::string::size_type v11 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v10);
    if (v11)
    {
      for (int i = *v11; i; int i = *(unsigned __int8 **)i)
      {
        unint64_t v13 = *((void *)i + 1);
        if (v13 == v7)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, v4)) {
            return 0;
          }
        }
        else
        {
          if (v9 > 1)
          {
            if (v13 >= v6) {
              v13 %= v6;
            }
          }
          else
          {
            v13 &= v6 - 1;
          }
          if (v13 != v10) {
            break;
          }
        }
      }
    }
  }
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v6 || (float)(v15 * (float)v6) < v14)
  {
    BOOL v16 = 1;
    if (v6 >= 3) {
      BOOL v16 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v6);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      int8x8_t prime = (int8x8_t)v18;
    }
    else {
      int8x8_t prime = (int8x8_t)v17;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    int8x8_t v20 = *(int8x8_t *)(a1 + 8);
    if (*(void *)&prime <= *(void *)&v20)
    {
      if (*(void *)&prime >= *(void *)&v20) {
        goto LABEL_65;
      }
      unint64_t v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v20 < 3uLL || (uint8x8_t v28 = (uint8x8_t)vcnt_s8(v20), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        unint64_t v27 = std::__next_prime(v27);
      }
      else
      {
        uint64_t v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2) {
          unint64_t v27 = v29;
        }
      }
      if (*(void *)&prime <= v27) {
        int8x8_t prime = (int8x8_t)v27;
      }
      if (*(void *)&prime >= *(void *)&v20) {
        goto LABEL_65;
      }
      if (!*(void *)&prime)
      {
        std::string v33 = *(void **)a1;
        *(void *)a1 = 0;
        if (v33) {
          operator delete(v33);
        }
        *(void *)(a1 + 8) = 0;
        goto LABEL_65;
      }
    }
    if (*(void *)&prime >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v21 = operator new(8 * *(void *)&prime);
    uint64_t v22 = *(void **)a1;
    *(void *)a1 = v21;
    if (v22) {
      operator delete(v22);
    }
    uint64_t v23 = 0;
    *(int8x8_t *)(a1 + 8) = prime;
    do
      *(void *)(*(void *)a1 + 8 * v23++) = 0;
    while (*(void *)&prime != v23);
    uint64_t v24 = *(void **)(a1 + 16);
    if (v24)
    {
      unint64_t v25 = v24[1];
      uint8x8_t v26 = (uint8x8_t)vcnt_s8(prime);
      v26.i16[0] = vaddlv_u8(v26);
      if (v26.u32[0] > 1uLL)
      {
        if (v25 >= *(void *)&prime) {
          v25 %= *(void *)&prime;
        }
      }
      else
      {
        v25 &= *(void *)&prime - 1;
      }
      *(void *)(*(void *)a1 + 8 * v25) = a1 + 16;
      int v30 = (void *)*v24;
      if (*v24)
      {
        do
        {
          unint64_t v31 = v30[1];
          if (v26.u32[0] > 1uLL)
          {
            if (v31 >= *(void *)&prime) {
              v31 %= *(void *)&prime;
            }
          }
          else
          {
            v31 &= *(void *)&prime - 1;
          }
          if (v31 != v25)
          {
            if (!*(void *)(*(void *)a1 + 8 * v31))
            {
              *(void *)(*(void *)a1 + 8 * v31) = v24;
              goto LABEL_54;
            }
            void *v24 = *v30;
            void *v30 = **(void **)(*(void *)a1 + 8 * v31);
            **(void **)(*(void *)a1 + 8 * v31) = v30;
            int v30 = v24;
          }
          unint64_t v31 = v25;
LABEL_54:
          uint64_t v24 = v30;
          int v30 = (void *)*v30;
          unint64_t v25 = v31;
        }
        while (v30);
      }
    }
  }
LABEL_65:
  int8x8_t v34 = *(int8x8_t *)(a1 + 8);
  unint64_t v35 = *((void *)a2 + 1);
  uint8x8_t v36 = (uint8x8_t)vcnt_s8(v34);
  v36.i16[0] = vaddlv_u8(v36);
  if (v36.u32[0] > 1uLL)
  {
    uint64_t v37 = v40;
    if (v35 >= *(void *)&v34) {
      v35 %= *(void *)&v34;
    }
  }
  else
  {
    v35 &= *(void *)&v34 - 1;
    uint64_t v37 = v40;
  }
  uint64_t v38 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v35);
  if (v38)
  {
    *(void *)a2 = *v38;
LABEL_77:
    void *v38 = a2;
    goto LABEL_78;
  }
  *(void *)a2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2;
  *(void *)(*(void *)a1 + 8 * v35) = a1 + 16;
  if (*(void *)a2)
  {
    unint64_t v39 = *(void *)(*(void *)a2 + 8);
    if (v36.u32[0] > 1uLL)
    {
      if (v39 >= *(void *)&v34) {
        v39 %= *(void *)&v34;
      }
    }
    else
    {
      v39 &= *(void *)&v34 - 1;
    }
    uint64_t v38 = (unsigned __int8 **)(*(void *)a1 + 8 * v39);
    goto LABEL_77;
  }
LABEL_78:
  ++*v37;
  return 1;
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRParameter>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRParameter>>,0>((uint64_t)v1 + 16);
    }
    operator delete(v1);
  }
}

const char *CoreML::MIL::Opsets::CoreML5Opset::GetName(CoreML::MIL::Opsets::CoreML5Opset *this)
{
  return "CoreML5";
}

void CoreML::MIL::Opsets::CoreML5Opset::~CoreML5Opset(CoreML::MIL::Opsets::CoreML5Opset *this)
{
  MIL::IROpset::~IROpset(this);
  JUMPOUT(0x1E0198C00);
}

const char *CoreML::MIL::Opsets::CoreML6Opset::GetName(CoreML::MIL::Opsets::CoreML6Opset *this)
{
  return "CoreML6";
}

void CoreML::MIL::Opsets::CoreML6Opset::~CoreML6Opset(CoreML::MIL::Opsets::CoreML6Opset *this)
{
  MIL::IROpset::~IROpset(this);
  JUMPOUT(0x1E0198C00);
}

const char *CoreML::MIL::Opsets::CoreML6_trainOpset::GetName(CoreML::MIL::Opsets::CoreML6_trainOpset *this)
{
  return "CoreML6_train";
}

void CoreML::MIL::Opsets::CoreML6_trainOpset::~CoreML6_trainOpset(CoreML::MIL::Opsets::CoreML6_trainOpset *this)
{
  MIL::IROpset::~IROpset(this);
  JUMPOUT(0x1E0198C00);
}

const char *CoreML::MIL::Opsets::CoreML7Opset::GetName(CoreML::MIL::Opsets::CoreML7Opset *this)
{
  return "CoreML7";
}

void CoreML::MIL::Opsets::CoreML7Opset::~CoreML7Opset(CoreML::MIL::Opsets::CoreML7Opset *this)
{
  MIL::IROpset::~IROpset(this);
  JUMPOUT(0x1E0198C00);
}

const char *CoreML::MIL::Opsets::CoreML8Opset::GetName(CoreML::MIL::Opsets::CoreML8Opset *this)
{
  return "CoreML8";
}

void CoreML::MIL::Opsets::CoreML8Opset::~CoreML8Opset(CoreML::MIL::Opsets::CoreML8Opset *this)
{
  MIL::IROpset::~IROpset(this);
  JUMPOUT(0x1E0198C00);
}

void CoreML::MIL::Opsets::RegisterCoreMLOpsets()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  char v1 = 7;
  strcpy((char *)&__p, "CoreML5");
  operator new();
}

void sub_1DC07D2C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (*(char *)(v58 - 201) < 0) {
    operator delete(*(void **)(v58 - 224));
  }
  if (a55 < 0) {
    operator delete(__p);
  }
  if (a36 < 0) {
    operator delete(a31);
  }
  if (a48 < 0) {
    operator delete(a43);
  }
  if (a42 < 0)
  {
    operator delete(a37);
    if ((v57 & 1) == 0)
    {
LABEL_14:
      std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::~__hash_table(v58 - 192);
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v58 - 112);
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v58 - 152);
      std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::~__hash_table((uint64_t)&a16);
      std::__hash_table<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>>>::~__hash_table((uint64_t)&a25);
      MEMORY[0x1E0198C00](v55, 0xA1C40BD48D6D6);
      _Unwind_Resume(a1);
    }
  }
  else if (!v57)
  {
    goto LABEL_14;
  }
  __cxa_free_exception(v56);
  goto LABEL_14;
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,0>(uint64_t a1)
{
  uint64_t v2 = a1 + 24;
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
  }
  else if (v3)
  {
    (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v4 = *(void **)a1;
    operator delete(v4);
  }
}

void std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__emplace_unique_impl<char const(&)[9],char const(&)[9]>(uint64_t a1)
{
  uint64_t v2 = a1 + 16;
  uint64_t v3 = operator new(0x40uLL);
  v26[0] = v3;
  v26[1] = v2;
  *uint64_t v3 = 0;
  v3[1] = 0;
  std::string::basic_string[abi:ne180100]<0>(v3 + 2, "classify");
  std::string::basic_string[abi:ne180100]<0>(v3 + 5, "classify");
  char v27 = 1;
  v3[1] = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)(v3 + 2));
  uint64_t v4 = (void *)v26[0];
  unint64_t v5 = (unsigned __int8 *)(v26[0] + 16);
  unint64_t v6 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, v26[0] + 16);
  *(void *)(v26[0] + 8) = v6;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v6;
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v9.i16[0] = vaddlv_u8(v9);
    unint64_t v10 = v9.u32[0];
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v11 = v6;
      if (v7 <= v6) {
        unint64_t v11 = v6 % v7;
      }
    }
    else
    {
      unint64_t v11 = (v7 - 1) & v6;
    }
    int v12 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v11);
    if (v12)
    {
      for (int i = *v12; i; int i = *(unsigned __int8 **)i)
      {
        unint64_t v14 = *((void *)i + 1);
        if (v14 == v8)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, v5)) {
            goto LABEL_39;
          }
        }
        else
        {
          if (v10 > 1)
          {
            if (v14 >= v7) {
              v14 %= v7;
            }
          }
          else
          {
            v14 &= v7 - 1;
          }
          if (v14 != v11) {
            break;
          }
        }
      }
    }
  }
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v7 || (float)(v16 * (float)v7) < v15)
  {
    BOOL v17 = 1;
    if (v7 >= 3) {
      BOOL v17 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v7);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__rehash<true>(a1, v20);
  }
  int8x8_t v21 = *(int8x8_t *)(a1 + 8);
  unint64_t v22 = v4[1];
  uint8x8_t v23 = (uint8x8_t)vcnt_s8(v21);
  v23.i16[0] = vaddlv_u8(v23);
  if (v23.u32[0] > 1uLL)
  {
    if (v22 >= *(void *)&v21) {
      v22 %= *(void *)&v21;
    }
  }
  else
  {
    v22 &= *(void *)&v21 - 1;
  }
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v22);
  if (v24)
  {
    void *v4 = *v24;
LABEL_37:
    void *v24 = v4;
    goto LABEL_38;
  }
  void *v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  *(void *)(*(void *)a1 + 8 * v22) = v2;
  if (*v4)
  {
    unint64_t v25 = *(void *)(*v4 + 8);
    if (v23.u32[0] > 1uLL)
    {
      if (v25 >= *(void *)&v21) {
        v25 %= *(void *)&v21;
      }
    }
    else
    {
      v25 &= *(void *)&v21 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_37;
  }
LABEL_38:
  ++*(void *)(a1 + 24);
  v26[0] = 0;
LABEL_39:
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v26, 0);
}

void sub_1DC07DAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t *std::unordered_set<std::string>::unordered_set(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  *((_DWORD *)a1 + 8) = 1065353216;
  unint64_t v5 = (float *)(a1 + 4);
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  if (a3)
  {
    uint64_t v6 = a2;
    unint64_t v7 = (unint64_t *)(a1 + 3);
    int v41 = a1 + 2;
    uint64_t v42 = a2 + 24 * a3;
    while (1)
    {
      unint64_t v8 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(a1 + 3), v6);
      unint64_t v9 = v8;
      unint64_t v10 = a1[1];
      if (v10)
      {
        uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
        v11.i16[0] = vaddlv_u8(v11);
        unint64_t v12 = v11.u32[0];
        if (v11.u32[0] > 1uLL)
        {
          unint64_t v3 = v8;
          if (v8 >= v10) {
            unint64_t v3 = v8 % v10;
          }
        }
        else
        {
          unint64_t v3 = (v10 - 1) & v8;
        }
        unint64_t v13 = *(unsigned __int8 ***)(*a1 + 8 * v3);
        if (v13)
        {
          for (int i = *v13; i; int i = *(unsigned __int8 **)i)
          {
            unint64_t v15 = *((void *)i + 1);
            if (v15 == v9)
            {
              if (std::equal_to<std::string>::operator()[abi:ne180100]((uint64_t)v5, i + 16, (unsigned __int8 *)v6)) {
                goto LABEL_78;
              }
            }
            else
            {
              if (v12 > 1)
              {
                if (v15 >= v10) {
                  v15 %= v10;
                }
              }
              else
              {
                v15 &= v10 - 1;
              }
              if (v15 != v3) {
                break;
              }
            }
          }
        }
      }
      float v16 = operator new(0x28uLL);
      void *v16 = 0;
      v16[1] = v9;
      BOOL v17 = (std::string *)(v16 + 2);
      if (*(char *)(v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v17, *(const std::string::value_type **)v6, *(void *)(v6 + 8));
      }
      else
      {
        long long v18 = *(_OWORD *)v6;
        v16[4] = *(void *)(v6 + 16);
        *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
      }
      float v19 = (float)(*v7 + 1);
      float v20 = *v5;
      if (!v10 || (float)(v20 * (float)v10) < v19) {
        break;
      }
LABEL_68:
      uint64_t v36 = *a1;
      uint64_t v37 = *(void **)(*a1 + 8 * v3);
      if (v37)
      {
        void *v16 = *v37;
      }
      else
      {
        void *v16 = *v41;
        void *v41 = v16;
        *(void *)(v36 + 8 * v3) = v41;
        if (!*v16) {
          goto LABEL_77;
        }
        unint64_t v38 = *(void *)(*v16 + 8);
        if ((v10 & (v10 - 1)) != 0)
        {
          if (v38 >= v10) {
            v38 %= v10;
          }
        }
        else
        {
          v38 &= v10 - 1;
        }
        uint64_t v37 = (void *)(*a1 + 8 * v38);
      }
      *uint64_t v37 = v16;
LABEL_77:
      ++*v7;
LABEL_78:
      v6 += 24;
      if (v6 == v42) {
        return a1;
      }
    }
    BOOL v21 = (v10 & (v10 - 1)) != 0;
    if (v10 < 3) {
      BOOL v21 = 1;
    }
    unint64_t v22 = v21 | (2 * v10);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      int8x8_t prime = (int8x8_t)v23;
    }
    else {
      int8x8_t prime = (int8x8_t)v22;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v10 = a1[1];
    if (*(void *)&prime > v10) {
      goto LABEL_34;
    }
    if (*(void *)&prime < v10)
    {
      unint64_t v31 = vcvtps_u32_f32((float)*v7 / *v5);
      if (v10 < 3 || (uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        unint64_t v31 = std::__next_prime(v31);
      }
      else
      {
        uint64_t v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2) {
          unint64_t v31 = v33;
        }
      }
      if (*(void *)&prime <= v31) {
        int8x8_t prime = (int8x8_t)v31;
      }
      if (*(void *)&prime >= v10)
      {
        unint64_t v10 = a1[1];
      }
      else
      {
        if (prime)
        {
LABEL_34:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          unint64_t v25 = operator new(8 * *(void *)&prime);
          uint8x8_t v26 = (void *)*a1;
          *a1 = (uint64_t)v25;
          if (v26) {
            operator delete(v26);
          }
          uint64_t v27 = 0;
          a1[1] = (uint64_t)prime;
          do
            *(void *)(*a1 + 8 * v27++) = 0;
          while (*(void *)&prime != v27);
          uint8x8_t v28 = (void *)*v41;
          if (*v41)
          {
            unint64_t v29 = v28[1];
            uint8x8_t v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(void *)&prime) {
                v29 %= *(void *)&prime;
              }
            }
            else
            {
              v29 &= *(void *)&prime - 1;
            }
            *(void *)(*a1 + 8 * v29) = v41;
            int8x8_t v34 = (void *)*v28;
            if (*v28)
            {
              do
              {
                unint64_t v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(void *)&prime) {
                    v35 %= *(void *)&prime;
                  }
                }
                else
                {
                  v35 &= *(void *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(void *)(*a1 + 8 * v35))
                  {
                    *(void *)(*a1 + 8 * v35) = v28;
                    goto LABEL_59;
                  }
                  void *v28 = *v34;
                  void *v34 = **(void **)(*a1 + 8 * v35);
                  **(void **)(*a1 + 8 * v35) = v34;
                  int8x8_t v34 = v28;
                }
                unint64_t v35 = v29;
LABEL_59:
                uint8x8_t v28 = v34;
                int8x8_t v34 = (void *)*v34;
                unint64_t v29 = v35;
              }
              while (v34);
            }
          }
          unint64_t v10 = (unint64_t)prime;
          goto LABEL_63;
        }
        unint64_t v39 = (void *)*a1;
        *a1 = 0;
        if (v39) {
          operator delete(v39);
        }
        unint64_t v10 = 0;
        a1[1] = 0;
      }
    }
LABEL_63:
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
    goto LABEL_68;
  }
  return a1;
}

void sub_1DC07DF64(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](1, v2);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      unint64_t v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::string>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::string>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::string>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::string const&,std::string&>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = (void *)(a1 + 24);
  unint64_t v10 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v11 = v10;
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v30 = v9;
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v12) {
        unint64_t v4 = v10 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v10;
    }
    unint64_t v15 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      for (int i = *v15; i; int i = *(unsigned __int8 **)i)
      {
        unint64_t v17 = *((void *)i + 1);
        if (v17 == v11)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v14 > 1)
          {
            if (v17 >= v12) {
              v17 %= v12;
            }
          }
          else
          {
            v17 &= v12 - 1;
          }
          if (v17 != v4) {
            break;
          }
        }
      }
    }
    unint64_t v9 = v30;
  }
  long long v18 = (char *)operator new(0x40uLL);
  float v19 = v18;
  v31[0] = v18;
  v31[1] = a1 + 16;
  char v32 = 0;
  *(void *)long long v18 = 0;
  *((void *)v18 + 1) = v11;
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v18 + 16), *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *((_OWORD *)v18 + 1) = *(_OWORD *)a3;
    *((void *)v18 + 4) = *(void *)(a3 + 16);
  }
  float v20 = (std::string *)(v19 + 40);
  if (*(char *)(a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v20, *(const std::string::value_type **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)&v20->__r_.__value_.__l.__data_ = *(_OWORD *)a4;
    *((void *)v19 + 7) = *(void *)(a4 + 16);
  }
  char v32 = 1;
  float v21 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v22 = *(float *)(a1 + 32);
  if (!v12 || (float)(v22 * (float)v12) < v21)
  {
    BOOL v23 = 1;
    if (v12 >= 3) {
      BOOL v23 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v24 = v23 | (2 * v12);
    unint64_t v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25) {
      size_t v26 = v25;
    }
    else {
      size_t v26 = v24;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::vector<std::string>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::vector<std::string>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::vector<std::string>>>>::__rehash<true>(a1, v26);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        unint64_t v4 = v11 % v12;
      }
      else {
        unint64_t v4 = v11;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v11;
    }
  }
  uint64_t v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)v31[0] = *v27;
    void *v27 = v31[0];
  }
  else
  {
    *(void *)v31[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v31[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v31[0])
    {
      unint64_t v28 = *(void *)(*(void *)v31[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v28 >= v12) {
          v28 %= v12;
        }
      }
      else
      {
        v28 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v28) = v31[0];
    }
  }
  int i = (unsigned __int8 *)v31[0];
  v31[0] = 0;
  ++*v9;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v31, 0);
  return i;
}

void sub_1DC07E2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  if (*(char *)(v4 + 39) < 0) {
    operator delete(*v5);
  }
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,0>((uint64_t)v1 + 16);
    }
    operator delete(v1);
  }
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>>>::__node_insert_unique(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = a2 + 16;
  size_t v26 = (void *)(a1 + 24);
  unint64_t v5 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)(a2 + 16));
  *((void *)a2 + 1) = v5;
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v5;
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
    v8.i16[0] = vaddlv_u8(v8);
    unint64_t v9 = v8.u32[0];
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v10 = v5;
      if (v6 <= v5) {
        unint64_t v10 = v5 % v6;
      }
    }
    else
    {
      unint64_t v10 = (v6 - 1) & v5;
    }
    unint64_t v11 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v10);
    if (v11)
    {
      for (int i = *v11; i; int i = *(unsigned __int8 **)i)
      {
        unint64_t v13 = *((void *)i + 1);
        if (v13 == v7)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, v4)) {
            return 0;
          }
        }
        else
        {
          if (v9 > 1)
          {
            if (v13 >= v6) {
              v13 %= v6;
            }
          }
          else
          {
            v13 &= v6 - 1;
          }
          if (v13 != v10) {
            break;
          }
        }
      }
    }
  }
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v6 || (float)(v15 * (float)v6) < v14)
  {
    BOOL v16 = 1;
    if (v6 >= 3) {
      BOOL v16 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v6);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>>>::__rehash<true>(a1, v19);
  }
  int8x8_t v20 = *(int8x8_t *)(a1 + 8);
  unint64_t v21 = *((void *)a2 + 1);
  uint8x8_t v22 = (uint8x8_t)vcnt_s8(v20);
  v22.i16[0] = vaddlv_u8(v22);
  if (v22.u32[0] > 1uLL)
  {
    if (v21 >= *(void *)&v20) {
      v21 %= *(void *)&v20;
    }
  }
  else
  {
    v21 &= *(void *)&v20 - 1;
  }
  BOOL v23 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v21);
  if (v23)
  {
    *(void *)a2 = *v23;
LABEL_37:
    *BOOL v23 = a2;
    goto LABEL_38;
  }
  *(void *)a2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2;
  *(void *)(*(void *)a1 + 8 * v21) = a1 + 16;
  if (*(void *)a2)
  {
    unint64_t v24 = *(void *)(*(void *)a2 + 8);
    if (v22.u32[0] > 1uLL)
    {
      if (v24 >= *(void *)&v20) {
        v24 %= *(void *)&v20;
      }
    }
    else
    {
      v24 &= *(void *)&v20 - 1;
    }
    BOOL v23 = (unsigned __int8 **)(*(void *)a1 + 8 * v24);
    goto LABEL_37;
  }
LABEL_38:
  ++*v26;
  return 1;
}

char *std::__hash_table<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>>>::__emplace_unique_key_args<std::string,std::string const&,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, void *a4)
{
  unint64_t v9 = (void *)(a1 + 24);
  unint64_t v10 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v11 = v10;
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v12) {
        unint64_t v4 = v10 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v10;
    }
    float v15 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      BOOL v16 = (char *)*v15;
      if (*v15)
      {
        do
        {
          unint64_t v17 = *((void *)v16 + 1);
          if (v17 == v11)
          {
            if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, (unsigned __int8 *)v16 + 16, a2)) {
              return v16;
            }
          }
          else
          {
            if (v14 > 1)
            {
              if (v17 >= v12) {
                v17 %= v12;
              }
            }
            else
            {
              v17 &= v12 - 1;
            }
            if (v17 != v4) {
              break;
            }
          }
          BOOL v16 = *(char **)v16;
        }
        while (v16);
      }
    }
  }
  unint64_t v18 = (void *)(a1 + 16);
  BOOL v16 = (char *)operator new(0x48uLL);
  v32[0] = v16;
  v32[1] = a1 + 16;
  char v33 = 0;
  *(void *)BOOL v16 = 0;
  *((void *)v16 + 1) = v11;
  size_t v19 = (std::string *)(v16 + 16);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v19, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    *((void *)v16 + 4) = *(void *)(a3 + 16);
  }
  int8x8_t v20 = a4 + 3;
  unint64_t v21 = (void *)a4[3];
  if (v21)
  {
    if (v21 == a4)
    {
      *((void *)v16 + 8) = v16 + 40;
      (*(void (**)(void *))(*a4 + 24))(a4);
      goto LABEL_27;
    }
    *((void *)v16 + 8) = v21;
  }
  else
  {
    int8x8_t v20 = v16 + 64;
  }
  *int8x8_t v20 = 0;
LABEL_27:
  char v33 = 1;
  float v22 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v23 = *(float *)(a1 + 32);
  if (!v12 || (float)(v23 * (float)v12) < v22)
  {
    BOOL v24 = 1;
    if (v12 >= 3) {
      BOOL v24 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v12);
    unint64_t v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v25;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>>>::__rehash<true>(a1, v27);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        unint64_t v4 = v11 % v12;
      }
      else {
        unint64_t v4 = v11;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v11;
    }
  }
  uint64_t v28 = *(void *)a1;
  unint64_t v29 = *(void **)(*(void *)a1 + 8 * v4);
  if (v29)
  {
    *(void *)BOOL v16 = *v29;
LABEL_47:
    void *v29 = v16;
    goto LABEL_48;
  }
  *(void *)BOOL v16 = *v18;
  void *v18 = v16;
  *(void *)(v28 + 8 * v4) = v18;
  if (*(void *)v16)
  {
    unint64_t v30 = *(void *)(*(void *)v16 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v30 >= v12) {
        v30 %= v12;
      }
    }
    else
    {
      v30 &= v12 - 1;
    }
    unint64_t v29 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_47;
  }
LABEL_48:
  v32[0] = 0;
  ++*v9;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)v32);
  return v16;
}

void sub_1DC07E8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::function<std::unique_ptr<MIL::IROperator> ()(void)>>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(void *)&v4)
  {
    if (prime >= *(void *)&v4) {
      return;
    }
    unint64_t v11 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v12 = (uint8x8_t)vcnt_s8(v4), v12.i16[0] = vaddlv_u8(v12), v12.u32[0] > 1uLL))
    {
      unint64_t v11 = std::__next_prime(v11);
    }
    else
    {
      uint64_t v13 = 1 << -(char)__clz(v11 - 1);
      if (v11 >= 2) {
        unint64_t v11 = v13;
      }
    }
    if (prime <= v11) {
      size_t prime = v11;
    }
    if (prime >= *(void *)&v4) {
      return;
    }
    if (!prime)
    {
      BOOL v16 = *(void **)a1;
      *(void *)a1 = 0;
      if (v16) {
        operator delete(v16);
      }
      *(void *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  unint64_t v5 = operator new(8 * prime);
  unint64_t v6 = *(void **)a1;
  *(void *)a1 = v5;
  if (v6) {
    operator delete(v6);
  }
  uint64_t v7 = 0;
  *(void *)(a1 + 8) = prime;
  do
    *(void *)(*(void *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  uint8x8_t v8 = *(void **)(a1 + 16);
  if (v8)
  {
    size_t v9 = v8[1];
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)prime);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      if (v9 >= prime) {
        v9 %= prime;
      }
    }
    else
    {
      v9 &= prime - 1;
    }
    *(void *)(*(void *)a1 + 8 * v9) = a1 + 16;
    unint64_t v14 = (void *)*v8;
    if (*v8)
    {
      do
      {
        size_t v15 = v14[1];
        if (v10.u32[0] > 1uLL)
        {
          if (v15 >= prime) {
            v15 %= prime;
          }
        }
        else
        {
          v15 &= prime - 1;
        }
        if (v15 != v9)
        {
          if (!*(void *)(*(void *)a1 + 8 * v15))
          {
            *(void *)(*(void *)a1 + 8 * v15) = v8;
            goto LABEL_31;
          }
          *uint8x8_t v8 = *v14;
          *unint64_t v14 = **(void **)(*(void *)a1 + 8 * v15);
          **(void **)(*(void *)a1 + 8 * v15) = v14;
          unint64_t v14 = v8;
        }
        size_t v15 = v9;
LABEL_31:
        uint8x8_t v8 = v14;
        unint64_t v14 = (void *)*v14;
        size_t v9 = v15;
      }
      while (v14);
    }
  }
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target_type()
{
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::operator()()
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "classify");
  CoreML::MIL::Operators::CoreML::Classify::Make();
}

void sub_1DC07EB94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617738;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3617738;
  result[1] = v3;
  return result;
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML8Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::~__func()
{
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target_type()
{
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::operator()()
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "classify");
  CoreML::MIL::Operators::CoreML::Classify::Make();
}

void sub_1DC07ECE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F36176E0;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F36176E0;
  result[1] = v3;
  return result;
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML7Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::~__func()
{
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target_type()
{
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::operator()()
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "classify");
  CoreML::MIL::Operators::CoreML::Classify::Make();
}

void sub_1DC07EE34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617790;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3617790;
  result[1] = v3;
  return result;
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6_trainOpset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::~__func()
{
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target_type()
{
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::operator()()
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "classify");
  CoreML::MIL::Operators::CoreML::Classify::Make();
}

void sub_1DC07EF84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617688;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3617688;
  result[1] = v3;
  return result;
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML6Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::~__func()
{
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target_type()
{
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::target(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::operator()()
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "classify");
  CoreML::MIL::Operators::CoreML::Classify::Make();
}

void sub_1DC07F0D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__function::__func<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = &unk_1F3617630;
  a2[1] = v2;
  return result;
}

void *std::__function::__func<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::__clone(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = &unk_1F3617630;
  result[1] = v3;
  return result;
}

void std::__function::__func<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0,std::allocator<CoreML::MIL::Opsets::CoreML5Opset::GetOperatorConstructors(MIL::MILContext &)::$_0>,std::unique_ptr<MIL::IROperator> ()(void)>::~__func()
{
}

void CoreML::MIL::Operators::CoreML::CustomValidators::ValidateClassify(CoreML::MIL::Operators::CoreML::CustomValidators *this@<X0>, MIL::ValidationResult *a2@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(v60, "probabilities");
  uint64_t ParameterType = (MIL::IRValueType *)MIL::IROperation::GetParameterType();
  uint64_t v6 = MIL::IRValueType::AsTensorType(ParameterType);
  if (v61 < 0) {
    operator delete(v60[0]);
  }
  std::string::basic_string[abi:ne180100]<0>(v60, "classes");
  uint64_t ParameterValue = MIL::IROperation::GetParameterValue();
  if (v61 < 0) {
    operator delete(v60[0]);
  }
  uint8x8_t v8 = (MIL::IRValueType *)(*(uint64_t (**)(uint64_t))(*(void *)ParameterValue + 32))(ParameterValue);
  uint64_t v9 = MIL::IRValueType::AsListType(v8);
  uint8x8_t v10 = (MIL::IRValueType *)(*(uint64_t (**)(uint64_t))(*(void *)v9 + 64))(v9);
  unint64_t v11 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(void *)v6 + 96))(v6);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  if (*v11 != v13)
  {
    unsigned __int8 v14 = 0;
    while (1)
    {
      uint64_t v15 = (*(uint64_t (**)(void))(**(void **)v12 + 16))();
      if (!v15) {
        break;
      }
      uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 48))(v15);
      if (((v16 != 1) & v14) == 1)
      {
        LocationPtr = (uint64_t *)MIL::IRObject::GetLocationPtr(this);
        uint64_t v43 = (std::__shared_weak_count *)LocationPtr[1];
        uint64_t v58 = *LocationPtr;
        std::string::size_type v59 = v43;
        if (v43) {
          atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        std::string::basic_string[abi:ne180100]<0>(v56, "Classifier probabilities can have a maximum of one dimension that is not rank 1.");
        MEMORY[0x1E01984A0](a2, &v58, 304, v56);
        if (v57 < 0) {
          operator delete(v56[0]);
        }
        unint64_t v35 = v59;
        if (!v59) {
          return;
        }
        goto LABEL_54;
      }
      v14 |= v16 != 1;
      v12 += 8;
      if (v12 == v13) {
        goto LABEL_10;
      }
    }
    std::string v40 = (uint64_t *)MIL::IRObject::GetLocationPtr(this);
    int v41 = (std::__shared_weak_count *)v40[1];
    uint64_t v54 = *v40;
    uint64_t v55 = v41;
    if (v41) {
      atomic_fetch_add_explicit(&v41->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    std::string::basic_string[abi:ne180100]<0>(v52, "Classifier probabilities must have a fully known shape.");
    MEMORY[0x1E01984A0](a2, &v54, 304, v52);
    if (v53 < 0) {
      operator delete(v52[0]);
    }
    unint64_t v35 = v55;
    if (v55) {
      goto LABEL_54;
    }
    return;
  }
LABEL_10:
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 16))(v9);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v6 + 16))(v6) != v17)
  {
    uint64_t v36 = (uint64_t *)MIL::IRObject::GetLocationPtr(this);
    uint64_t v37 = (std::__shared_weak_count *)v36[1];
    uint64_t v50 = *v36;
    BOOL v51 = v37;
    if (v37) {
      atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    std::string::basic_string[abi:ne180100]<0>(__p, "Arguments not of the same length in classify operation");
    MEMORY[0x1E01984A0](a2, &v50, 304, __p);
    if (v49 < 0) {
      operator delete(__p[0]);
    }
    unint64_t v35 = v51;
    if (!v51) {
      return;
    }
LABEL_54:
    std::__shared_weak_count::__release_shared[abi:ne180100](v35);
    return;
  }
  Outputuint64_t Type = (MIL::IRValueType *)MIL::IROperation::GetOutputType(this);
  size_t v19 = (MIL::IRTensorValueType *)MIL::IRValueType::AsTensorType(OutputType);
  if (!MIL::IRTensorValueType::IsScalar(v19)
    || (int v20 = (*(uint64_t (**)(MIL::IRTensorValueType *))(*(void *)v19 + 88))(v19),
        uint64_t v21 = MIL::IRValueType::AsTensorType(v10),
        v20 != (*(unsigned int (**)(uint64_t))(*(void *)v21 + 88))(v21)))
  {
    unint64_t v38 = (uint64_t *)MIL::IRObject::GetLocationPtr(this);
    unint64_t v39 = (std::__shared_weak_count *)v38[1];
    uint64_t v46 = *v38;
    char v47 = v39;
    if (v39) {
      atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    std::string::basic_string[abi:ne180100]<0>(v44, "Incorrect type for class prediction output of classify operation");
    MEMORY[0x1E01984A0](a2, &v46, 313, v44);
    if (v45 < 0) {
      operator delete(v44[0]);
    }
    unint64_t v35 = v47;
    if (!v47) {
      return;
    }
    goto LABEL_54;
  }
  if ((unint64_t)(*(uint64_t (**)(CoreML::MIL::Operators::CoreML::CustomValidators *))(*(void *)this + 192))(this) < 2) {
    goto LABEL_58;
  }
  float v22 = (void *)(*(uint64_t (**)(CoreML::MIL::Operators::CoreML::CustomValidators *))(*(void *)this + 176))(this);
  if (v22[1] - *v22 <= 0x10uLL) {
    std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__throw_out_of_range[abi:ne180100]();
  }
  uint64_t Type = MIL::IRNamedValueType::GetType(*(MIL::IRNamedValueType **)(*v22 + 16));
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(*(void *)Type + 48))(Type);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)v24 + 64))(v24);
    size_t v27 = (MIL::IRTensorValueType *)(*(uint64_t (**)(uint64_t))(*(void *)v26 + 24))(v26);
    uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)v25 + 72))(v25);
    uint64_t v29 = (*(uint64_t (**)(uint64_t))(*(void *)v28 + 24))(v28);
    if (v27)
    {
      unint64_t v30 = (MIL::IRTensorValueType *)v29;
      if (MIL::IRTensorValueType::IsScalar(v27) && v30 != 0)
      {
        BOOL v32 = MIL::IRTensorValueType::IsScalar(v30) && v27 == v10;
        if (v32
          && ((*(unsigned int (**)(MIL::IRTensorValueType *))(*(void *)v30 + 88))(v30) == 6
           || (*(unsigned int (**)(MIL::IRTensorValueType *))(*(void *)v30 + 88))(v30) == 5))
        {
LABEL_58:
          MIL::ValidationResult::ValidationResult(a2);
          return;
        }
      }
    }
  }
  char v33 = (uint64_t *)MIL::IRObject::GetLocationPtr(this);
  int8x8_t v34 = (std::__shared_weak_count *)v33[1];
  uint64_t v62 = *v33;
  unsigned int v63 = v34;
  if (v34) {
    atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::string::basic_string[abi:ne180100]<0>(v60, "Incorrect type for probabilities output of classify operation");
  MEMORY[0x1E01984A0](a2, &v62, 313, v60);
  if (v61 < 0) {
    operator delete(v60[0]);
  }
  unint64_t v35 = v63;
  if (v63) {
    goto LABEL_54;
  }
}

void sub_1DC07F7CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (*(char *)(v39 - 97) < 0) {
    operator delete(*(void **)(v39 - 120));
  }
  int v41 = *(std::__shared_weak_count **)(v39 - 88);
  if (v41) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v41);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__throw_out_of_range[abi:ne180100]()
{
}

void CoreML::MIL::CoreMLUtil::MakeContext(CoreML::MIL::CoreMLUtil *this)
{
}

void sub_1DC07F8FC(_Unwind_Exception *exception_object)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t *v2 = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::GetCachedSize(CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return google::protobuf::internal::WireFormatLite::WriteEnum(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::ByteSizeLong(CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      signed int v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

std::string *google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(unint64_t *a1, uint64_t a2)
{
  if (*a1) {
    uint64_t v3 = (std::string *)(*a1 & 0xFFFFFFFFFFFFFFFELL);
  }
  else {
    uint64_t v3 = (std::string *)google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(a1);
  }
  int v4 = *(char *)(a2 + 23);
  if (v4 >= 0) {
    int v5 = (const std::string::value_type *)a2;
  }
  else {
    int v5 = *(const std::string::value_type **)a2;
  }
  if (v4 >= 0) {
    std::string::size_type v6 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v6 = *(void *)(a2 + 8);
  }
  return std::string::append(v3, v5, v6);
}

google::protobuf::Arena **google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(unint64_t *a1)
{
  uint64_t v2 = (unint64_t *)(*a1 & 0xFFFFFFFFFFFFFFFELL);
  if (*a1)
  {
    uint64_t v2 = (unint64_t *)v2[3];
    if (v2) {
      goto LABEL_3;
    }
LABEL_7:
    operator new();
  }
  if (!v2) {
    goto LABEL_7;
  }
LABEL_3:
  *(_OWORD *)Aligned = 0u;
  *((_OWORD *)Aligned + 1) = 0u;
  int v4 = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)v2, 0, 24);
  unsigned __int8 *v4 = (google::protobuf::Arena *)Aligned;
  v4[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::Container>;
  int v5 = v2 + 4;
  do
    unint64_t v6 = __ldxr(v5);
  while (__stxr((unint64_t)v4, v5));
  std::string v4[2] = (google::protobuf::Arena *)v6;
  *a1 = (unint64_t)Aligned | 1;
  Aligned[3] = (google::protobuf::Arena *)v2;
  return Aligned;
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::Container>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::IsInitialized(CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::New(CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *this, google::protobuf::Arena *a2)
{
}

void sub_1DC07FC7C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::AudioFeaturePrint_Sound(CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *this)
{
  *(void *)this = &unk_1F361ADB0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *)&CoreML::Specification::CoreMLModels::_AudioFeaturePrint_Sound_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC07FD00(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

uint64_t *google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 24) && v3 != 0)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      MEMORY[0x1E0198C00](v3, 0x1032C402ED93987);
    }
  }
  *a1 = 0;
  return a1;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::TableStruct *this)
{
  uint64_t result = google::protobuf::internal::InitProtobufDefaults(this);
  qword_1EC001630 = 0;
  *(void *)&dword_1EC001638 = 0;
  CoreML::Specification::CoreMLModels::_AudioFeaturePrint_Sound_default_instance_ = (uint64_t)&unk_1F361ADB0;
  byte_1EC001640 = 1;
  CoreML::Specification::CoreMLModels::_AudioFeaturePrint_default_instance_ = (uint64_t)&unk_1F361AC80;
  unk_1EC0015C8 = 0;
  qword_1EC0015D8 = 0;
  byte_1EC0015E0 = 1;
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint::GetCachedSize(CoreML::Specification::CoreMLModels::AudioFeaturePrint *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(_DWORD *)(this + 28) == 20) {
    return google::protobuf::internal::WireFormatLite::WriteMessage(20, *(void *)(this + 16), a2);
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint::ByteSizeLong(CoreML::Specification::CoreMLModels::AudioFeaturePrint *this)
{
  if (*((_DWORD *)this + 7) == 20)
  {
    uint64_t v1 = *((void *)this + 2);
    int v2 = *(_DWORD *)(v1 + 16);
    if (v2)
    {
      if (v2 < 0) {
        uint64_t v3 = 11;
      }
      else {
        uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v3 = 0;
    }
    *(_DWORD *)(v1 + 20) = v3;
    uint64_t v4 = v3 + 3;
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 6) = v4;
  return v4;
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::AudioFeaturePrint *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 < v6) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_22:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_23;
      }
LABEL_8:
      if (v9 != 162 || (v9 & 0xFFFFFFF8) != 0xA0) {
        goto LABEL_23;
      }
      if (*((_DWORD *)this + 7) != 20)
      {
        *((_DWORD *)this + 7) = 20;
        operator new();
      }
      unint64_t v11 = (CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *)*((void *)this + 2);
      int v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v16 = *((_DWORD *)a2 + 13);
      BOOL v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 13) = v16;
      if (v16 < 0 == v17)
      {
        int v18 = v14;
        uint64_t result = CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::MergePartialFromCodedStream(v11, (char **)a2, v15);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18)) {
          continue;
        }
      }
      return 0;
    }
    unint64_t v7 = v5 + 1;
    uint64_t v8 = *v5;
    if ((char)*v5 < 1)
    {
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_8;
        }
      }
      goto LABEL_22;
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_23:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC08012C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CoreMLModels::AudioFeaturePrint::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::AudioFeaturePrint *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((_DWORD *)a2 + 7) == 20)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[0]) != 20)
    {
      HIDWORD(v3[1].__r_.__value_.__r.__words[0]) = 20;
      operator new();
    }
    std::string::size_type v5 = v3->__r_.__value_.__r.__words[2];
    uint64_t v6 = *((void *)a2 + 2);
    uint64_t v7 = *(void *)(v6 + 8);
    if (v7) {
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v5 + 8), v7 & 0xFFFFFFFFFFFFFFFELL);
    }
    int v8 = *(_DWORD *)(v6 + 16);
    if (v8) {
      *(_DWORD *)(v5 + 16) = v8;
    }
  }
  return this;
}

void sub_1DC080220(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint::IsInitialized(CoreML::Specification::CoreMLModels::AudioFeaturePrint *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::AudioFeaturePrint::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)(this + 28) == 20)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::AudioFeaturePrint::New(CoreML::Specification::CoreMLModels::AudioFeaturePrint *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0802FC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::AudioFeaturePrint *CoreML::Specification::CoreMLModels::AudioFeaturePrint::AudioFeaturePrint(CoreML::Specification::CoreMLModels::AudioFeaturePrint *this)
{
  *(void *)this = &unk_1F361AC80;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::AudioFeaturePrint *)&CoreML::Specification::CoreMLModels::_AudioFeaturePrint_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC080380(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::AudioFeaturePrint>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::AudioFeaturePrint>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::AudioFeaturePrint>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CoreMLModels::AudioFeaturePrint::New(CoreML::Specification::CoreMLModels::AudioFeaturePrint *this)
{
}

void *CoreML::Specification::CoreMLModels::AudioFeaturePrint::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.AudioFeaturePrint");
}

void CoreML::Specification::CoreMLModels::AudioFeaturePrint::~AudioFeaturePrint(CoreML::Specification::CoreMLModels::AudioFeaturePrint *this)
{
  CoreML::Specification::CoreMLModels::AudioFeaturePrint::~AudioFeaturePrint(this);
  JUMPOUT(0x1E0198C00);
}

{
  int v2;
  uint64_t v3;

  *(void *)this = &unk_1F361AC80;
  int v2 = *((_DWORD *)this + 7);
  if (v2)
  {
    if (v2 == 20)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3) {
        (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      }
    }
    *((_DWORD *)this + 7) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::New(CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *this)
{
}

void *CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.AudioFeaturePrint.Sound");
}

void CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::~AudioFeaturePrint_Sound(CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound *this)
{
  *(void *)this = &unk_1F361ADB0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361ADB0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

BOOL std::less<std::string>::operator()[abi:ne180100](void *a1, void *a2)
{
  int v2 = *((char *)a2 + 23);
  int v3 = *((char *)a1 + 23);
  if (v3 >= 0) {
    size_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v4 = a1[1];
  }
  if (v3 < 0) {
    a1 = (void *)*a1;
  }
  if (v2 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = a2[1];
  }
  if (v2 < 0) {
    a2 = (void *)*a2;
  }
  if (v5 >= v4) {
    size_t v6 = v4;
  }
  else {
    size_t v6 = v5;
  }
  int v7 = memcmp(a1, a2, v6);
  if (v7) {
    return v7 < 0;
  }
  else {
    return v4 < v5;
  }
}

uint64_t CoreML::Specification::CategoricalMapping::GetCachedSize(CoreML::Specification::CategoricalMapping *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::CategoricalMapping::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(this + 16), a2);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 2) {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(v5 + 16), a2);
  }
  int v7 = *(_DWORD *)(v5 + 40);
  if (v7 == 101)
  {
    int v8 = *(unsigned int **)(v5 + 24);
    if (*((char *)v8 + 23) < 0)
    {
      int v8 = *(unsigned int **)v8;
      uint64_t v9 = *(void *)(*(void *)(v5 + 24) + 8);
    }
    else
    {
      LODWORD(v9) = *((unsigned __int8 *)v8 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v8, v9, 1, (uint64_t)"CoreML.Specification.CategoricalMapping.strValue");
    if (*(_DWORD *)(v5 + 40) == 101) {
      int v10 = *(uint64_t **)(v5 + 24);
    }
    else {
      int v10 = &google::protobuf::internal::fixed_address_empty_string;
    }
    this = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x65u, (uint64_t)v10, a2);
    int v7 = *(_DWORD *)(v5 + 40);
  }
  if (v7 == 102)
  {
    unint64_t v11 = *(void *)(v5 + 24);
    return google::protobuf::internal::WireFormatLite::WriteInt64(102, v11, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::CategoricalMapping::ByteSizeLong(CoreML::Specification::CategoricalMapping *this)
{
  int v2 = *((_DWORD *)this + 9);
  if (v2 == 2)
  {
    uint64_t v3 = CoreML::Specification::Int64ToStringMap::ByteSizeLong(*((CoreML::Specification::Int64ToStringMap **)this + 2));
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    uint64_t v3 = CoreML::Specification::StringToInt64Map::ByteSizeLong(*((CoreML::Specification::StringToInt64Map **)this + 2));
LABEL_5:
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_7;
  }
  uint64_t result = 0;
LABEL_7:
  int v5 = *((_DWORD *)this + 10);
  if (v5 == 102)
  {
    uint64_t v9 = result + ((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6);
LABEL_13:
    uint64_t result = v9 + 2;
    goto LABEL_14;
  }
  if (v5 == 101)
  {
    uint64_t v6 = *((void *)this + 3);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    uint64_t v9 = result + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
    goto LABEL_13;
  }
LABEL_14:
  *((_DWORD *)this + 8) = result;
  return result;
}

uint64_t CoreML::Specification::CategoricalMapping::MergePartialFromCodedStream(CoreML::Specification::CategoricalMapping *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (std::string **)((char *)this + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(unsigned __int8 **)a2;
        unint64_t v7 = *((void *)a2 + 1);
        if (*(void *)a2 >= v7)
        {
          LODWORD(v9) = 0;
LABEL_65:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
          unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v10 & 0x100000000) == 0) {
            goto LABEL_66;
          }
          goto LABEL_9;
        }
        uint64_t v8 = v6 + 1;
        uint64_t v9 = *v6;
        if ((char)*v6 < 1)
        {
          if ((unint64_t)v8 < v7)
          {
            int v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(void *)a2 = v6 + 2;
              unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_9;
            }
          }
          goto LABEL_65;
        }
        *(void *)a2 = v8;
        unint64_t v10 = v9 | 0x100000000;
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_66;
        }
LABEL_9:
        unsigned int v12 = v10 >> 3;
        if (v10 >> 3 <= 0x64) {
          break;
        }
        if (v12 == 101)
        {
          if (v10 != 42) {
            goto LABEL_66;
          }
          if (*((_DWORD *)this + 10) != 101)
          {
            CoreML::Specification::CategoricalMapping::clear_ValueOnUnknown((uint64_t)this);
            *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::New(this, 0) = 101;
            *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_40:
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_40;
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
          if (!result) {
            return result;
          }
          int v23 = *((_DWORD *)this + 10);
          uint64_t v24 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v23 == 101) {
            uint64_t v24 = *v5;
          }
          if (SHIBYTE(v24->__r_.__value_.__r.__words[2]) < 0) {
            uint64_t v24 = (std::string *)v24->__r_.__value_.__r.__words[0];
          }
          uint64_t v25 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v23 == 101) {
            uint64_t v25 = *v5;
          }
          if (SHIBYTE(v25->__r_.__value_.__r.__words[2]) < 0) {
            std::string::size_type size = v25->__r_.__value_.__l.__size_;
          }
          else {
            LODWORD(size) = HIBYTE(v25->__r_.__value_.__r.__words[2]);
          }
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v24, size, 0, (uint64_t)"CoreML.Specification.CategoricalMapping.strValue"))return 0; {
        }
          }
        else
        {
          if (v12 != 102 || v10 != 48) {
            goto LABEL_66;
          }
          CoreML::Specification::CategoricalMapping::clear_ValueOnUnknown((uint64_t)this);
          unsigned int v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            Varint64Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v27 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacuint64_t k = *v15;
            *(void *)a2 = v15 + 1;
          }
          *((void *)this + 3) = Varint64Fallback;
          *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::New(this, 0) = 102;
        }
      }
      if (v12 != 1) {
        break;
      }
      if (v10 != 10) {
        goto LABEL_66;
      }
      if (*((_DWORD *)this + 9) != 1)
      {
        CoreML::Specification::CategoricalMapping::clear_MappingType((uint64_t)this);
        *((_DWORD *)this + 9) = 1;
        operator new();
      }
      BOOL v17 = (CoreML::Specification::StringToInt64Map *)*((void *)this + 2);
      int v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v20;
        *(void *)a2 = v20 + 1;
      }
      int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v35 = *((_DWORD *)a2 + 13);
      BOOL v31 = __OFSUB__(v35--, 1);
      *((_DWORD *)a2 + 13) = v35;
      if (v35 < 0 != v31) {
        return 0;
      }
      int v32 = v33;
      uint64_t result = CoreML::Specification::StringToInt64Map::MergePartialFromCodedStream(v17, a2, v34);
      if (!result) {
        return result;
      }
LABEL_59:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v32)) {
        return 0;
      }
    }
    if (v12 == 2 && v10 == 18)
    {
      if (*((_DWORD *)this + 9) != 2)
      {
        CoreML::Specification::CategoricalMapping::clear_MappingType((uint64_t)this);
        *((_DWORD *)this + 9) = 2;
        operator new();
      }
      int v14 = (CoreML::Specification::Int64ToStringMap *)*((void *)this + 2);
      int v18 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
      {
        int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v19 < 0) {
          return 0;
        }
      }
      else
      {
        int v19 = *v18;
        *(void *)a2 = v18 + 1;
      }
      int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
      int v30 = *((_DWORD *)a2 + 13);
      BOOL v31 = __OFSUB__(v30--, 1);
      *((_DWORD *)a2 + 13) = v30;
      if (v30 < 0 != v31) {
        return 0;
      }
      int v32 = v28;
      uint64_t result = CoreML::Specification::Int64ToStringMap::MergePartialFromCodedStream(v14, a2, v29);
      if (!result) {
        return result;
      }
      goto LABEL_59;
    }
LABEL_66:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC080BB0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CategoricalMapping::clear_MappingType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 2 || v2 == 1)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreML::Specification::CategoricalMapping::clear_ValueOnUnknown(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)(this + 40) == 101)
  {
    uint64_t v2 = *(void *)(this + 24);
    if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 4CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::New(this, 0) = 0;
  return this;
}

std::string *CoreML::Specification::CategoricalMapping::MergeFrom(std::string *this, const CoreML::Specification::CategoricalMapping *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 9);
  if (v5 == 2)
  {
    if (*(_DWORD *)(v3 + 36) != 2)
    {
      CoreML::Specification::CategoricalMapping::clear_MappingType(v3);
      *(_DWORD *)(v3 + 36) = 2;
      operator new();
    }
    this = (std::string *)CoreML::Specification::Int64ToStringMap::MergeFrom(*(CoreML::Specification::Int64ToStringMap **)(v3 + 16), *((const CoreML::Specification::Int64ToStringMap **)a2 + 2));
  }
  else if (v5 == 1)
  {
    if (*(_DWORD *)(v3 + 36) != 1)
    {
      CoreML::Specification::CategoricalMapping::clear_MappingType(v3);
      *(_DWORD *)(v3 + 36) = 1;
      operator new();
    }
    this = (std::string *)CoreML::Specification::StringToInt64Map::MergeFrom(*(CoreML::Specification::StringToInt64Map **)(v3 + 16), *((const CoreML::Specification::StringToInt64Map **)a2 + 2));
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6 != 102)
  {
    if (v6 != 101) {
      return this;
    }
    unint64_t v7 = (const std::string *)*((void *)a2 + 3);
    if (*(_DWORD *)(v3 + 40) == 101)
    {
      uint64_t v8 = *(std::string **)(v3 + 24);
      if (v8 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        return std::string::operator=(v8, v7);
      }
    }
    else
    {
      CoreML::Specification::CategoricalMapping::clear_ValueOnUnknown(v3);
      *(_DWORD *)(v3 + 4CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::New(this, 0) = 101;
      *(void *)(v3 + 24) = &google::protobuf::internal::fixed_address_empty_string;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v3 + 24, (uint64_t)v7);
  }
  uint64_t v9 = *((void *)a2 + 3);
  if (*(_DWORD *)(v3 + 40) != 102)
  {
    this = (std::string *)CoreML::Specification::CategoricalMapping::clear_ValueOnUnknown(v3);
    *(_DWORD *)(v3 + 4CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::New(this, 0) = 102;
  }
  *(void *)(v3 + 24) = v9;
  return this;
}

void sub_1DC080EAC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CategoricalMapping::IsInitialized(CoreML::Specification::CategoricalMapping *this)
{
  return 1;
}

uint64_t CoreML::Specification::CategoricalMapping::Clear(CoreML::Specification::CategoricalMapping *this)
{
  CoreML::Specification::CategoricalMapping::clear_MappingType((uint64_t)this);
  return CoreML::Specification::CategoricalMapping::clear_ValueOnUnknown((uint64_t)this);
}

void CoreML::Specification::CategoricalMapping::New(CoreML::Specification::CategoricalMapping *this, google::protobuf::Arena *a2)
{
}

void sub_1DC080F68(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EEBF8A51);
  _Unwind_Resume(a1);
}

CoreML::Specification::CategoricalMapping *CoreML::Specification::CategoricalMapping::CategoricalMapping(CoreML::Specification::CategoricalMapping *this)
{
  *(void *)this = &unk_1F361E910;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CategoricalMapping *)&CoreML::Specification::_CategoricalMapping_default_instance_) {
    CoreML::Specification::protobuf_CategoricalMapping_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::AudioFeaturePrint_Sound::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC080FF0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CategoricalMapping>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalMapping>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalMapping>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_CategoricalMapping_2eproto::InitDefaults(CoreML::Specification::protobuf_CategoricalMapping_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_CategoricalMapping_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_CategoricalMapping_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_CategoricalMapping_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_CategoricalMapping_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_CategoricalMapping_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  uint64_t result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_CategoricalMapping_default_instance_ = (uint64_t)&unk_1F361E910;
  *(void *)algn_1EC003008 = 0;
  dword_1EC003028 = 0;
  qword_1EC003020 = 0;
  byte_1EC003030 = 1;
  return result;
}

void CoreML::Specification::CategoricalMapping::New(CoreML::Specification::CategoricalMapping *this)
{
}

void *CoreML::Specification::CategoricalMapping::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CategoricalMapping");
}

void CoreML::Specification::CategoricalMapping::~CategoricalMapping(CoreML::Specification::CategoricalMapping *this)
{
  CoreML::Specification::CategoricalMapping::~CategoricalMapping(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361E910;
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::CategoricalMapping::clear_MappingType((uint64_t)this);
  }
  if (*((_DWORD *)this + 10)) {
    CoreML::Specification::CategoricalMapping::clear_ValueOnUnknown((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Pipeline::GetCachedSize(CoreML::Specification::Pipeline *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t CoreML::Specification::Pipeline::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    for (int i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v3 + 32) + 8 * i + 8), a2);
  }
  uint64_t v6 = *(unsigned int *)(v3 + 48);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = -v6;
    uint64_t v8 = 1;
    do
    {
      uint64_t v9 = *(unsigned int **)(*(void *)(v3 + 56) + 8 * v8);
      if (*((char *)v9 + 23) < 0)
      {
        uint64_t v9 = *(unsigned int **)v9;
        uint64_t v10 = *(void *)(*(void *)(*(void *)(v3 + 56) + 8 * v8) + 8);
      }
      else
      {
        LODWORD(v1CoreML::Specification::CategoricalMapping::New(this, 0) = *((unsigned __int8 *)v9 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.Pipeline.names");
      this = google::protobuf::internal::WireFormatLite::WriteString(2u, *(void *)(*(void *)(v3 + 56) + 8 * v8++), a2);
    }
    while (v7 + v8 != 1);
  }
  return this;
}

uint64_t CoreML::Specification::Pipeline::ByteSizeLong(CoreML::Specification::Pipeline *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::Model::ByteSizeLong(*(CoreML::Specification::Model **)(*((void *)this + 4)
                                                                                       + 8 * v3
                                                                                       + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t result = v4 + v6;
  if ((int)v6 >= 1)
  {
    uint64_t v8 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v9 = *v8++;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      result += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      --v6;
    }
    while (v6);
  }
  *((_DWORD *)this + 16) = result;
  return result;
}

uint64_t CoreML::Specification::Model::ByteSizeLong(CoreML::Specification::Model *this)
{
  if (this == (CoreML::Specification::Model *)&CoreML::Specification::_Model_default_instance_
    || (int v2 = (CoreML::Specification::ModelDescription *)*((void *)this + 2)) == 0)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v3 = CoreML::Specification::ModelDescription::ByteSizeLong(v2);
    uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  int v5 = *((_DWORD *)this + 6);
  if (v5)
  {
    if (v5 < 0) {
      uint64_t v6 = 10;
    }
    else {
      uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    v4 += v6 + 1;
  }
  if (*((unsigned char *)this + 28)) {
    uint64_t v7 = v4 + 2;
  }
  else {
    uint64_t v7 = v4;
  }
  int v8 = *((_DWORD *)this + 11);
  if (v8 <= 559)
  {
    if (v8 <= 399)
    {
      if (v8 > 299)
      {
        switch(v8)
        {
          case 300:
            uint64_t v9 = CoreML::Specification::GLMRegressor::ByteSizeLong(*((CoreML::Specification::GLMRegressor **)this + 4));
            goto LABEL_73;
          case 301:
            uint64_t v9 = CoreML::Specification::SupportVectorRegressor::ByteSizeLong(*((CoreML::Specification::SupportVectorRegressor **)this
                                                                             + 4));
            goto LABEL_73;
          case 302:
            uint64_t v9 = (uint64_t)CoreML::Specification::TreeEnsembleRegressor::ByteSizeLong(*((CoreML::Specification::TreeEnsembleRegressor **)this
                                                                                     + 4));
            goto LABEL_73;
          case 303:
            uint64_t v9 = CoreML::Specification::NeuralNetworkRegressor::ByteSizeLong(*((CoreML::Specification::NeuralNetworkRegressor **)this
                                                                             + 4));
            goto LABEL_73;
          case 304:
            uint64_t v9 = CoreML::Specification::BayesianProbitRegressor::ByteSizeLong(*((CoreML::Specification::BayesianProbitRegressor **)this
                                                                              + 4));
            goto LABEL_73;
          default:
            goto LABEL_74;
        }
        goto LABEL_74;
      }
      switch(v8)
      {
        case 200:
          uint64_t v9 = (uint64_t)CoreML::Specification::PipelineClassifier::ByteSizeLong(*((CoreML::Specification::PipelineClassifier **)this
                                                                                + 4));
          break;
        case 201:
          uint64_t v9 = (uint64_t)CoreML::Specification::PipelineRegressor::ByteSizeLong(*((CoreML::Specification::PipelineRegressor **)this
                                                                               + 4));
          break;
        case 202:
          uint64_t v9 = CoreML::Specification::Pipeline::ByteSizeLong(*((CoreML::Specification::Pipeline **)this + 4));
          break;
        default:
          goto LABEL_74;
      }
    }
    else
    {
      if (v8 <= 499)
      {
        switch(v8)
        {
          case 400:
            uint64_t v9 = CoreML::Specification::GLMClassifier::ByteSizeLong(*((CoreML::Specification::GLMClassifier **)this + 4));
            goto LABEL_73;
          case 401:
            uint64_t v9 = CoreML::Specification::SupportVectorClassifier::ByteSizeLong(*((CoreML::Specification::SupportVectorClassifier **)this
                                                                              + 4));
            goto LABEL_73;
          case 402:
            uint64_t v9 = CoreML::Specification::TreeEnsembleClassifier::ByteSizeLong(*((CoreML::Specification::TreeEnsembleClassifier **)this
                                                                             + 4));
            goto LABEL_73;
          case 403:
            uint64_t v9 = CoreML::Specification::NeuralNetworkClassifier::ByteSizeLong(*((CoreML::Specification::NeuralNetworkClassifier **)this
                                                                              + 4));
            goto LABEL_73;
          case 404:
            uint64_t v9 = CoreML::Specification::KNearestNeighborsClassifier::ByteSizeLong(*((CoreML::Specification::KNearestNeighborsClassifier **)this
                                                                                  + 4));
            goto LABEL_73;
          default:
            goto LABEL_74;
        }
        goto LABEL_74;
      }
      if (v8 <= 501)
      {
        if (v8 == 500) {
          uint64_t v9 = CoreML::Specification::NeuralNetwork::ByteSizeLong(*((CoreML::Specification::NeuralNetwork **)this + 4));
        }
        else {
          uint64_t v9 = CoreML::Specification::ItemSimilarityRecommender::ByteSizeLong(*((CoreML::Specification::ItemSimilarityRecommender **)this
        }
                                                                              + 4));
      }
      else
      {
        switch(v8)
        {
          case 502:
            uint64_t v9 = CoreML::Specification::MILSpec::Program::ByteSizeLong(*((CoreML::Specification::MILSpec::Program **)this
                                                                       + 4));
            break;
          case 555:
            uint64_t v9 = CoreML::Specification::CustomModel::ByteSizeLong(*((CoreML::Specification::CustomModel **)this + 4));
            break;
          case 556:
            uint64_t v9 = CoreML::Specification::LinkedModel::ByteSizeLong(*((CoreML::Specification::LinkedModelFile ***)this + 4));
            break;
          default:
            goto LABEL_74;
        }
      }
    }
LABEL_73:
    v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    goto LABEL_74;
  }
  if (v8 <= 899)
  {
    switch(v8)
    {
      case 600:
        uint64_t v9 = CoreML::Specification::OneHotEncoder::ByteSizeLong(*((CoreML::Specification::OneHotEncoder **)this + 4));
        goto LABEL_73;
      case 601:
        uint64_t v9 = CoreML::Specification::Imputer::ByteSizeLong(*((CoreML::Specification::Imputer **)this + 4));
        goto LABEL_73;
      case 602:
        uint64_t v9 = CoreML::Specification::FeatureVectorizer::ByteSizeLong(*((CoreML::Specification::FeatureVectorizer **)this
                                                                    + 4));
        goto LABEL_73;
      case 603:
        uint64_t v9 = CoreML::Specification::DictVectorizer::ByteSizeLong(*((CoreML::Specification::DictVectorizer **)this + 4));
        goto LABEL_73;
      case 604:
        uint64_t v9 = CoreML::Specification::Scaler::ByteSizeLong(*((CoreML::Specification::Scaler **)this + 4));
        goto LABEL_73;
      case 605:
      case 608:
        goto LABEL_74;
      case 606:
        uint64_t v9 = CoreML::Specification::CategoricalMapping::ByteSizeLong(*((CoreML::Specification::CategoricalMapping **)this
                                                                     + 4));
        goto LABEL_73;
      case 607:
        uint64_t v12 = *((void *)this + 4);
        int v13 = *(_DWORD *)(v12 + 16);
        if (v13)
        {
          if (v13 < 0) {
            uint64_t v14 = 11;
          }
          else {
            uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
          }
        }
        else
        {
          uint64_t v14 = 0;
        }
        *(_DWORD *)(v12 + 2CoreML::Specification::CategoricalMapping::New(this, 0) = v14;
        goto LABEL_80;
      case 609:
        uint64_t v9 = CoreML::Specification::ArrayFeatureExtractor::ByteSizeLong(*((CoreML::Specification::ArrayFeatureExtractor **)this
                                                                        + 4));
        goto LABEL_73;
      case 610:
        uint64_t v9 = CoreML::Specification::NonMaximumSuppression::ByteSizeLong(*((CoreML::Specification::NonMaximumSuppression **)this
                                                                        + 4));
        goto LABEL_73;
      default:
        if (v8 != 560) {
          goto LABEL_74;
        }
        uint64_t v9 = CoreML::Specification::ClassConfidenceThresholding::ByteSizeLong(*((CoreML::Specification::ClassConfidenceThresholding **)this
                                                                              + 4));
        break;
    }
    goto LABEL_73;
  }
  switch(v8)
  {
    case 2000:
      uint64_t v9 = CoreML::Specification::CoreMLModels::TextClassifier::ByteSizeLong(*((CoreML::Specification::CoreMLModels::TextClassifier **)this
                                                                             + 4));
      goto LABEL_73;
    case 2001:
      uint64_t v9 = CoreML::Specification::CoreMLModels::WordTagger::ByteSizeLong(*((CoreML::Specification::CoreMLModels::WordTagger **)this
                                                                         + 4));
      goto LABEL_73;
    case 2002:
      uint64_t v9 = CoreML::Specification::CoreMLModels::VisionFeaturePrint::ByteSizeLong(*((CoreML::Specification::CoreMLModels::VisionFeaturePrint **)this
                                                                                 + 4));
      goto LABEL_73;
    case 2003:
      uint64_t v15 = *((void *)this + 4);
      if (*(_DWORD *)(v15 + 28) == 20)
      {
        *(_DWORD *)(*(void *)(v15 + 16) + 16) = 0;
        uint64_t v14 = 3;
      }
      else
      {
        uint64_t v14 = 0;
      }
      *(_DWORD *)(v15 + 24) = v14;
LABEL_80:
      uint64_t v11 = v7 + v14;
      goto LABEL_81;
    case 2004:
      uint64_t v9 = CoreML::Specification::CoreMLModels::Gazetteer::ByteSizeLong(*((CoreML::Specification::CoreMLModels::Gazetteer **)this
                                                                        + 4));
      goto LABEL_73;
    case 2005:
      uint64_t v9 = CoreML::Specification::CoreMLModels::WordEmbedding::ByteSizeLong(*((CoreML::Specification::CoreMLModels::WordEmbedding **)this
                                                                            + 4));
      goto LABEL_73;
    case 2006:
      uint64_t v11 = v7
          + CoreML::Specification::CoreMLModels::AudioFeaturePrint::ByteSizeLong(*((CoreML::Specification::CoreMLModels::AudioFeaturePrint **)this
                                                                                 + 4));
      goto LABEL_81;
    default:
      if (v8 == 900)
      {
        *(_DWORD *)(*((void *)this + 4) + 16) = 0;
        v7 += 3;
      }
      else if (v8 == 3000)
      {
        uint64_t v10 = CoreML::Specification::SerializedModel::ByteSizeLong(*((CoreML::Specification::SerializedModel **)this + 4));
        uint64_t v11 = v7 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
LABEL_81:
        uint64_t v7 = v11 + 3;
      }
      break;
  }
LABEL_74:
  *((_DWORD *)this + 1CoreML::Specification::CategoricalMapping::New(this, 0) = v7;
  return v7;
}

uint64_t CoreML::Specification::ModelDescription::ByteSizeLong(CoreML::Specification::ModelDescription *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::FeatureDescription::ByteSizeLong(*(CoreML::Specification::FeatureDescription **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::FeatureDescription::ByteSizeLong(*(CoreML::Specification::FeatureDescription **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  uint64_t v10 = *((unsigned int *)this + 18);
  uint64_t v11 = v7 + v10;
  if (v10)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = CoreML::Specification::FeatureDescription::ByteSizeLong(*(CoreML::Specification::FeatureDescription **)(*((void *)this + 10) + 8 * v12 + 8));
      v11 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      ++v12;
    }
    while (v10 != v12);
  }
  uint64_t v14 = *((unsigned int *)this + 24);
  uint64_t v15 = v11 + 2 * v14;
  if (v14)
  {
    int v16 = 0;
    do
    {
      uint64_t v17 = CoreML::Specification::FunctionDescription::ByteSizeLong(*(CoreML::Specification::FunctionDescription **)(*((void *)this + 13) + 8 * v16 + 8));
      v15 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      ++v16;
    }
    while (v14 != v16);
  }
  uint64_t v18 = *((unsigned int *)this + 30);
  uint64_t v19 = v15 + 2 * v18;
  if (v18)
  {
    int v20 = 0;
    do
    {
      uint64_t v21 = CoreML::Specification::FeatureDescription::ByteSizeLong(*(CoreML::Specification::FeatureDescription **)(*((void *)this + 16) + 8 * v20 + 8));
      v19 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      ++v20;
    }
    while (v18 != v20);
  }
  uint64_t v22 = *((void *)this + 17);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  if (*(char *)(v22 + 23) < 0)
  {
    if (!*(void *)(v22 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v22 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v19 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_23:
  uint64_t v25 = *((void *)this + 18);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  if (*(char *)(v25 + 23) < 0)
  {
    if (!*(void *)(v25 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v25 + 23))
  {
    goto LABEL_28;
  }
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v19 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_28:
  uint64_t v28 = *((void *)this + 19);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  if (*(char *)(v28 + 23) < 0)
  {
    if (!*(void *)(v28 + 8)) {
      goto LABEL_33;
    }
  }
  else if (!*(unsigned char *)(v28 + 23))
  {
    goto LABEL_33;
  }
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v19 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_33:
  if (this != (CoreML::Specification::ModelDescription *)&CoreML::Specification::_ModelDescription_default_instance_)
  {
    BOOL v31 = (CoreML::Specification::Metadata *)*((void *)this + 20);
    if (v31)
    {
      uint64_t v32 = CoreML::Specification::Metadata::ByteSizeLong(v31);
      v19 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  *((_DWORD *)this + 42) = v19;
  return v19;
}

CoreML::Specification::Pipeline *CoreML::Specification::PipelineClassifier::ByteSizeLong(CoreML::Specification::PipelineClassifier *this)
{
  if (this == (CoreML::Specification::PipelineClassifier *)&CoreML::Specification::_PipelineClassifier_default_instance_)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = (CoreML::Specification::Pipeline *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::Pipeline::ByteSizeLong(result);
      uint64_t result = (CoreML::Specification::Pipeline *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

CoreML::Specification::Pipeline *CoreML::Specification::PipelineRegressor::ByteSizeLong(CoreML::Specification::PipelineRegressor *this)
{
  if (this == (CoreML::Specification::PipelineRegressor *)&CoreML::Specification::_PipelineRegressor_default_instance_)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = (CoreML::Specification::Pipeline *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::Pipeline::ByteSizeLong(result);
      uint64_t result = (CoreML::Specification::Pipeline *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::SerializedModel::ByteSizeLong(CoreML::Specification::SerializedModel *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::FeatureDescription::ByteSizeLong(CoreML::Specification::FeatureDescription *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  if (this != (CoreML::Specification::FeatureDescription *)&CoreML::Specification::_FeatureDescription_default_instance_)
  {
    uint64_t v9 = (CoreML::Specification::FeatureType *)*((void *)this + 4);
    if (v9)
    {
      uint64_t v10 = CoreML::Specification::FeatureType::ByteSizeLong(v9);
      v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 1CoreML::Specification::CategoricalMapping::New(this, 0) = v5;
  return v5;
}

uint64_t CoreML::Specification::FunctionDescription::ByteSizeLong(CoreML::Specification::FunctionDescription *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::FeatureDescription::ByteSizeLong(*(CoreML::Specification::FeatureDescription **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if (v6)
  {
    int v8 = 0;
    do
    {
      uint64_t v9 = CoreML::Specification::FeatureDescription::ByteSizeLong(*(CoreML::Specification::FeatureDescription **)(*((void *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  uint64_t v10 = *((unsigned int *)this + 18);
  uint64_t v11 = v7 + v10;
  if (v10)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = CoreML::Specification::FeatureDescription::ByteSizeLong(*(CoreML::Specification::FeatureDescription **)(*((void *)this + 10) + 8 * v12 + 8));
      v11 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      ++v12;
    }
    while (v10 != v12);
  }
  uint64_t v14 = *((void *)this + 11);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  if (*(char *)(v14 + 23) < 0)
  {
    if (!*(void *)(v14 + 8)) {
      goto LABEL_17;
    }
  }
  else if (!*(unsigned char *)(v14 + 23))
  {
    goto LABEL_17;
  }
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  uint64_t v17 = *((void *)this + 12);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  if (*(char *)(v17 + 23) < 0)
  {
    if (!*(void *)(v17 + 8)) {
      goto LABEL_22;
    }
  }
  else if (!*(unsigned char *)(v17 + 23))
  {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v11 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_22:
  uint64_t v20 = *((void *)this + 13);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  if (*(char *)(v20 + 23) < 0)
  {
    if (!*(void *)(v20 + 8)) {
      goto LABEL_27;
    }
  }
  else if (!*(unsigned char *)(v20 + 23))
  {
    goto LABEL_27;
  }
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v11 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_27:
  *((_DWORD *)this + 28) = v11;
  return v11;
}

uint64_t CoreML::Specification::Metadata::ByteSizeLong(CoreML::Specification::Metadata *this)
{
  int v2 = (uint64_t *)*((void *)this + 5);
  uint64_t v3 = *v2;
  google::protobuf::Map<std::string,std::string>::begin(v21, v2);
  uint64_t v4 = 0;
  uint64_t v5 = 2 * v3;
  while (v21[0])
  {
    uint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(*(google::protobuf::Arena **)(v21[0] + 24), (google::protobuf::Arena *)(*(void *)(v21[0] + 24) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v6)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v6;
    }
    uint64_t v7 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::ByteSizeLong(v4);
    v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v21);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  uint64_t v8 = *((void *)this + 6);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_15;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v11 = *((void *)this + 7);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_20;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v5 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_20:
  uint64_t v14 = *((void *)this + 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  if (*(char *)(v14 + 23) < 0)
  {
    if (!*(void *)(v14 + 8)) {
      goto LABEL_25;
    }
  }
  else if (!*(unsigned char *)(v14 + 23))
  {
    goto LABEL_25;
  }
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v5 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_25:
  uint64_t v17 = *((void *)this + 9);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  if (*(char *)(v17 + 23) < 0)
  {
    if (!*(void *)(v17 + 8)) {
      goto LABEL_30;
    }
  }
  else if (!*(unsigned char *)(v17 + 23))
  {
    goto LABEL_30;
  }
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v5 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_30:
  *((_DWORD *)this + 2CoreML::Specification::CategoricalMapping::New(this, 0) = v5;
  return v5;
}

void sub_1DC0822A4(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

void *google::protobuf::Map<std::string,std::string>::begin(void *result, void *a2)
{
  unint64_t v2 = a2[3];
  unint64_t v3 = a2[1];
  if (v3 <= v2)
  {
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v4 = a2[4];
    while (1)
    {
      uint64_t v5 = *(void *)(v4 + 8 * v2);
      if (v5) {
        break;
      }
      if (v3 == ++v2)
      {
        uint64_t v5 = 0;
        unint64_t v2 = a2[1];
        goto LABEL_9;
      }
    }
    if (v5 == *(void *)(v4 + 8 * (v2 ^ 1))) {
      uint64_t v5 = *(void *)(*(void *)v5 + 32);
    }
  }
LABEL_9:
  *uint64_t result = v5;
  result[1] = a2;
  result[2] = v2;
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[4] = this;
  *uint64_t result = (google::protobuf::Arena *)&unk_1F36272F8;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::CategoricalMapping::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0) {
    int v5 = *(_DWORD *)(v4 + 8);
  }
  uint64_t v6 = (int)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6)) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  int v5 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  uint64_t v6 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v5, a3 + 1);
  uint64_t v7 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  char *v6 = 18;
  return google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v7, v6 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    unsigned int v3 = v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    unsigned int v6 = 0;
    return v6 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0) {
    int v5 = *(_DWORD *)(v4 + 8);
  }
  unsigned int v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteString(2u, v5, a2);
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MergePartialFromCodedStream(uint64_t a1, char **this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *this;
      if (*this >= this[1])
      {
        LODWORD(TagFallback) = 0;
      }
      else
      {
        unint64_t TagFallback = *v5;
        if ((*v5 & 0x80000000) == 0)
        {
          *this = v5 + 1;
          goto LABEL_6;
        }
      }
      unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)this, TagFallback);
LABEL_6:
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = *(std::string **)(a1 + 16);
      if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(this, v7);
      if (!result) {
        return result;
      }
      int v8 = *(_DWORD *)(a1 + 40) | 1;
      *(_DWORD *)(a1 + 4CoreML::Specification::CategoricalMapping::New(this, 0) = v8;
      uint64_t v9 = *this;
      if (*this < this[1] && *v9 == 18)
      {
        *this = v9 + 1;
LABEL_19:
        *(_DWORD *)(a1 + 4CoreML::Specification::CategoricalMapping::New(this, 0) = v8 | 2;
        uint64_t v10 = *(std::string **)(a1 + 24);
        if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(this, v10);
        if (!result) {
          return result;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if (*this == this[1] && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          BOOL result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback == 18)
    {
      int v8 = *(_DWORD *)(a1 + 40);
      goto LABEL_19;
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void google::protobuf::internal::ArenaStringPtr::CreateInstance()
{
}

void sub_1DC08294C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<std::string>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    unsigned int v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<std::string>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<std::string>(uint64_t result)
{
  if (result)
  {
    if (*(char *)(result + 23) < 0) {
      operator delete(*(void **)result);
    }
    JUMPOUT(0x1E0198C00);
  }
  return result;
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      unint64_t v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      unsigned int v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      BOOL result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v7 = (std::string **)&v4[1];
      if ((uint64_t *)v4[1].__r_.__value_.__l.__data_ == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      int v8 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      BOOL result = std::string::operator=(*v7, v8);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Clear(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  uint64_t v2 = *(void *)(result + 24);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::CategoricalMapping::New(this, 0) = 0;
  unint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *BOOL result = (google::protobuf::Arena *)&unk_1F3627D78;
  result[1] = v5;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::value(uint64_t a1)
{
  if (!*(void *)(a1 + 8))
  {
    int v3 = 3;
    uint64_t v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(a1 + 24);
}

void sub_1DC082D00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryLite(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F36273A0;
  if ((void *)a1[1] != a1 && !a1[4])
  {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  }
  return a1;
}

uint64_t google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(uint64_t result)
{
  if ((uint64_t *)result != &google::protobuf::internal::fixed_address_empty_string && result != 0)
  {
    if (*(char *)(result + 23) < 0) {
      operator delete(*(void **)result);
    }
    JUMPOUT(0x1E0198C00);
  }
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t CoreML::Specification::Pipeline::MergePartialFromCodedStream(CoreML::Specification::Pipeline *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (CoreML::Specification::Pipeline *)((char *)this + 40);
  unsigned int v6 = (google::protobuf::Arena **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v8) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_21;
          }
          goto LABEL_8;
        }
        uint64_t v8 = *v7;
        if (*v7 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v7 + 1;
        unint64_t v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_21;
        }
LABEL_8:
        if (v9 >> 3 != 2) {
          break;
        }
        if (v9 != 18) {
          goto LABEL_21;
        }
        uint64_t v16 = (int *)*((void *)this + 7);
        if (!v16)
        {
          int v17 = *((_DWORD *)this + 12);
          int v18 = *((_DWORD *)this + 13);
          goto LABEL_38;
        }
        int v17 = *((_DWORD *)this + 12);
        int v18 = *v16;
        if (v17 >= *v16)
        {
          if (v18 == *((_DWORD *)this + 13))
          {
LABEL_38:
            if (v17 <= v18)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v18 - v17 + 1);
              uint64_t v16 = (int *)*((void *)this + 7);
            }
            int v18 = *v16;
          }
          int *v16 = v18 + 1;
          uint64_t v25 = *(google::protobuf::Arena **)v5;
          if (!*(void *)v5) {
            operator new();
          }
          Aligned->__r_.__value_.__l.__size_ = 0;
          Aligned->__r_.__value_.__r.__words[2] = 0;
          Aligned->__r_.__value_.__r.__words[0] = 0;
          uint64_t v26 = google::protobuf::Arena::AllocateAligned(v25, 0, 24);
          void *v26 = (google::protobuf::Arena *)Aligned;
          v26[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
          uint64_t v27 = (unint64_t *)((char *)v25 + 32);
          do
            unint64_t v28 = __ldxr(v27);
          while (__stxr((unint64_t)v26, v27));
          void v26[2] = (google::protobuf::Arena *)v28;
          uint64_t v39 = *((void *)this + 7);
          uint64_t v40 = *((int *)this + 12);
          *((_DWORD *)this + 12) = v40 + 1;
          *(void *)(v39 + 8 * v40 + 8) = Aligned;
          goto LABEL_55;
        }
        *((_DWORD *)this + 12) = v17 + 1;
        Aligned = *(std::string **)&v16[2 * v17 + 2];
LABEL_55:
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, Aligned);
        if (!result) {
          return result;
        }
        uint64_t v41 = *((void *)this + 7);
        uint64_t v42 = *(unsigned int **)(v41 + 8 * *((int *)this + 12));
        if (*((char *)v42 + 23) < 0)
        {
          uint64_t v42 = *(unsigned int **)v42;
          uint64_t v43 = *(void *)(*(void *)(v41 + 8 * *((int *)this + 12)) + 8);
        }
        else
        {
          LODWORD(v43) = *((unsigned __int8 *)v42 + 23);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v42, v43, 0, (uint64_t)"CoreML.Specification.Pipeline.names"))return 0; {
      }
        }
      if (v9 >> 3 != 1 || v9 != 10) {
        break;
      }
      uint64_t v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
        goto LABEL_30;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 >= *v12)
      {
        if (v14 != *((_DWORD *)this + 7))
        {
LABEL_33:
          *uint64_t v12 = v14 + 1;
          uint64_t v21 = *v6;
          if (!*v6) {
            operator new();
          }
          CoreML::Specification::Model::Model((CoreML::Specification::Model *)v15);
          uint64_t v22 = google::protobuf::Arena::AllocateAligned(v21, 0, 24);
          void *v22 = (google::protobuf::Arena *)v15;
          v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Model>;
          uint64_t v23 = (unint64_t *)((char *)v21 + 32);
          do
            unint64_t v24 = __ldxr(v23);
          while (__stxr((unint64_t)v22, v23));
          v22[2] = (google::protobuf::Arena *)v24;
          uint64_t v29 = *((void *)this + 4);
          uint64_t v30 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v30 + 1;
          *(void *)(v29 + 8 * v30 + 8) = v15;
          goto LABEL_46;
        }
LABEL_30:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v6, v14 - v13 + 1);
          uint64_t v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_33;
      }
      *((_DWORD *)this + 6) = v13 + 1;
      uint64_t v15 = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
LABEL_46:
      BOOL v31 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v31;
        *(void *)a2 = v31 + 1;
      }
      int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v35 = *((_DWORD *)a2 + 13);
      BOOL v36 = __OFSUB__(v35--, 1);
      *((_DWORD *)a2 + 13) = v35;
      if (v35 < 0 == v36)
      {
        int v37 = v33;
        uint64_t result = CoreML::Specification::Model::MergePartialFromCodedStream((CoreML::Specification::Model *)v15, a2, v34);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v37)) {
          continue;
        }
      }
      return 0;
    }
LABEL_21:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0832E8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4065E65A88);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Model::MergePartialFromCodedStream(CoreML::Specification::Model *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = *(unsigned __int8 **)a2;
        unint64_t v6 = *((void *)a2 + 1);
        if (*(void *)a2 >= v6)
        {
          LODWORD(v8) = 0;
        }
        else
        {
          uint64_t v7 = v5 + 1;
          uint64_t v8 = *v5;
          if ((char)*v5 >= 1)
          {
            *(void *)a2 = v7;
            unint64_t v9 = v8 | 0x100000000;
            if ((v9 & 0x100000000) == 0) {
              goto LABEL_8;
            }
            goto LABEL_16;
          }
          if ((unint64_t)v7 < v6)
          {
            int v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(void *)a2 = v5 + 2;
              unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_16;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
        unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x5DC2) << 32);
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_8;
        }
LABEL_16:
        unsigned int v13 = v9 >> 3;
        if (v9 >> 3 <= 0x22B) {
          break;
        }
        if (v9 >> 3 <= 0x383)
        {
          switch(v13)
          {
            case 0x258u:
              if (v9 != 194) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 600)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 600;
                operator new();
              }
              uint64_t v15 = (CoreML::Specification::OneHotEncoder *)*((void *)this + 4);
              char v61 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v61 < 0)
              {
                int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0) {
                  return 0;
                }
              }
              else
              {
                int VarintSizeAsIntFallback = *v61;
                *(void *)a2 = v61 + 1;
              }
              int v141 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              int v143 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v143--, 1);
              *((_DWORD *)a2 + 13) = v143;
              if (v143 < 0 != v121) {
                return 0;
              }
              int v122 = v141;
              uint64_t result = CoreML::Specification::OneHotEncoder::MergePartialFromCodedStream(v15, a2, v142);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            case 0x259u:
              if (v9 != 202) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 601)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 601;
                operator new();
              }
              BOOL v31 = (CoreML::Specification::Imputer *)*((void *)this + 4);
              unsigned int v63 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v63 < 0)
              {
                int v64 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v64 < 0) {
                  return 0;
                }
              }
              else
              {
                int v64 = *v63;
                *(void *)a2 = v63 + 1;
              }
              int v144 = google::protobuf::io::CodedInputStream::PushLimit(a2, v64);
              int v146 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v146--, 1);
              *((_DWORD *)a2 + 13) = v146;
              if (v146 < 0 != v121) {
                return 0;
              }
              int v122 = v144;
              uint64_t result = CoreML::Specification::Imputer::MergePartialFromCodedStream(v31, a2, v145);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            case 0x25Au:
              if (v9 != 210) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 602)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 602;
                operator new();
              }
              uint64_t v32 = (CoreML::Specification::FeatureVectorizer *)*((void *)this + 4);
              uint64_t v65 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v65 < 0)
              {
                int v66 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v66 < 0) {
                  return 0;
                }
              }
              else
              {
                int v66 = *v65;
                *(void *)a2 = v65 + 1;
              }
              int v147 = google::protobuf::io::CodedInputStream::PushLimit(a2, v66);
              int v149 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v149--, 1);
              *((_DWORD *)a2 + 13) = v149;
              if (v149 < 0 != v121) {
                return 0;
              }
              int v122 = v147;
              uint64_t result = CoreML::Specification::FeatureVectorizer::MergePartialFromCodedStream(v32, a2, v148);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            case 0x25Bu:
              if (v9 != 218) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 603)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 603;
                operator new();
              }
              int v33 = (CoreML::Specification::DictVectorizer *)*((void *)this + 4);
              unint64_t v67 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v67 < 0)
              {
                int v68 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v68 < 0) {
                  return 0;
                }
              }
              else
              {
                int v68 = *v67;
                *(void *)a2 = v67 + 1;
              }
              int v150 = google::protobuf::io::CodedInputStream::PushLimit(a2, v68);
              int v152 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v152--, 1);
              *((_DWORD *)a2 + 13) = v152;
              if (v152 < 0 != v121) {
                return 0;
              }
              int v122 = v150;
              uint64_t result = CoreML::Specification::DictVectorizer::MergePartialFromCodedStream(v33, a2, v151);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            case 0x25Cu:
              if (v9 != 226) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 604)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 604;
                operator new();
              }
              unsigned int v34 = (CoreML::Specification::Scaler *)*((void *)this + 4);
              char v69 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v69 < 0)
              {
                int v70 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v70 < 0) {
                  return 0;
                }
              }
              else
              {
                int v70 = *v69;
                *(void *)a2 = v69 + 1;
              }
              int v153 = google::protobuf::io::CodedInputStream::PushLimit(a2, v70);
              int v155 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v155--, 1);
              *((_DWORD *)a2 + 13) = v155;
              if (v155 < 0 != v121) {
                return 0;
              }
              int v122 = v153;
              uint64_t result = CoreML::Specification::Scaler::MergePartialFromCodedStream(v34, (char **)a2, v154);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            case 0x25Du:
            case 0x260u:
              goto LABEL_8;
            case 0x25Eu:
              if (v9 != 242) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 606)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 606;
                operator new();
              }
              int v35 = (CoreML::Specification::CategoricalMapping *)*((void *)this + 4);
              v71 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v71 < 0)
              {
                int v72 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v72 < 0) {
                  return 0;
                }
              }
              else
              {
                int v72 = *v71;
                *(void *)a2 = v71 + 1;
              }
              int v156 = google::protobuf::io::CodedInputStream::PushLimit(a2, v72);
              int v158 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v158--, 1);
              *((_DWORD *)a2 + 13) = v158;
              if (v158 < 0 != v121) {
                return 0;
              }
              int v122 = v156;
              uint64_t result = CoreML::Specification::CategoricalMapping::MergePartialFromCodedStream(v35, a2, v157);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            case 0x25Fu:
              if (v9 != 250) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 607)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 607;
                operator new();
              }
              BOOL v36 = (CoreML::Specification::Normalizer *)*((void *)this + 4);
              uint64_t v73 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v73 < 0)
              {
                int v74 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v74 < 0) {
                  return 0;
                }
              }
              else
              {
                int v74 = *v73;
                *(void *)a2 = v73 + 1;
              }
              int v159 = google::protobuf::io::CodedInputStream::PushLimit(a2, v74);
              int v161 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v161--, 1);
              *((_DWORD *)a2 + 13) = v161;
              if (v161 < 0 != v121) {
                return 0;
              }
              int v122 = v159;
              uint64_t result = CoreML::Specification::Normalizer::MergePartialFromCodedStream(v36, (char **)a2, v160);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            case 0x261u:
              if (v9 != 10) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 609)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 609;
                operator new();
              }
              int v37 = (CoreML::Specification::ArrayFeatureExtractor *)*((void *)this + 4);
              uint64_t v75 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v75 < 0)
              {
                int v76 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v76 < 0) {
                  return 0;
                }
              }
              else
              {
                int v76 = *v75;
                *(void *)a2 = v75 + 1;
              }
              int v162 = google::protobuf::io::CodedInputStream::PushLimit(a2, v76);
              int v164 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v164--, 1);
              *((_DWORD *)a2 + 13) = v164;
              if (v164 < 0 != v121) {
                return 0;
              }
              int v122 = v162;
              uint64_t result = CoreML::Specification::ArrayFeatureExtractor::MergePartialFromCodedStream(v37, a2, v163);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            case 0x262u:
              if (v9 != 18) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 610)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 610;
                operator new();
              }
              unint64_t v38 = (CoreML::Specification::NonMaximumSuppression *)*((void *)this + 4);
              uint64_t v77 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v77 < 0)
              {
                int v78 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v78 < 0) {
                  return 0;
                }
              }
              else
              {
                int v78 = *v77;
                *(void *)a2 = v77 + 1;
              }
              int v165 = google::protobuf::io::CodedInputStream::PushLimit(a2, v78);
              int v167 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v167--, 1);
              *((_DWORD *)a2 + 13) = v167;
              if (v167 < 0 != v121) {
                return 0;
              }
              int v122 = v165;
              uint64_t result = CoreML::Specification::NonMaximumSuppression::MergePartialFromCodedStream(v38, a2, v166);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            default:
              if (v13 != 556)
              {
                if (v13 != 560 || v9 != 130) {
                  goto LABEL_8;
                }
                if (*((_DWORD *)this + 11) != 560)
                {
                  CoreML::Specification::Model::clear_Type((uint64_t)this);
                  *((_DWORD *)this + 11) = 560;
                  operator new();
                }
                unint64_t v24 = (CoreML::Specification::ClassConfidenceThresholding *)*((void *)this + 4);
                long long v113 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v113 < 0)
                {
                  int v114 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v114 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v114 = *v113;
                  *(void *)a2 = v113 + 1;
                }
                int v226 = google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
                int v228 = *((_DWORD *)a2 + 13);
                BOOL v121 = __OFSUB__(v228--, 1);
                *((_DWORD *)a2 + 13) = v228;
                if (v228 < 0 != v121) {
                  return 0;
                }
                int v122 = v226;
                uint64_t result = CoreML::Specification::ClassConfidenceThresholding::MergePartialFromCodedStream(v24, a2, v227);
                if (!result) {
                  return result;
                }
                goto LABEL_466;
              }
              if (v9 == 98)
              {
                if (*((_DWORD *)this + 11) != 556)
                {
                  CoreML::Specification::Model::clear_Type((uint64_t)this);
                  *((_DWORD *)this + 11) = 556;
                  operator new();
                }
                char v53 = (CoreML::Specification::LinkedModel *)*((void *)this + 4);
                long long v115 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v115 < 0)
                {
                  int v116 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v116 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v116 = *v115;
                  *(void *)a2 = v115 + 1;
                }
                int v229 = google::protobuf::io::CodedInputStream::PushLimit(a2, v116);
                int v231 = *((_DWORD *)a2 + 13);
                BOOL v121 = __OFSUB__(v231--, 1);
                *((_DWORD *)a2 + 13) = v231;
                if (v231 < 0 != v121) {
                  return 0;
                }
                int v122 = v229;
                uint64_t result = CoreML::Specification::LinkedModel::MergePartialFromCodedStream(v53, a2, v230);
                if (!result) {
                  return result;
                }
                goto LABEL_466;
              }
              break;
          }
          goto LABEL_8;
        }
        switch(v13)
        {
          case 0x7D0u:
            if (v9 != 130) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 2000)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 2000;
              operator new();
            }
            int v17 = (CoreML::Specification::CoreMLModels::TextClassifier *)*((void *)this + 4);
            uint64_t v81 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v81 < 0)
            {
              int v82 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v82 < 0) {
                return 0;
              }
            }
            else
            {
              int v82 = *v81;
              *(void *)a2 = v81 + 1;
            }
            int v177 = google::protobuf::io::CodedInputStream::PushLimit(a2, v82);
            int v179 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v179--, 1);
            *((_DWORD *)a2 + 13) = v179;
            if (v179 < 0 != v121) {
              return 0;
            }
            int v122 = v177;
            uint64_t result = CoreML::Specification::CoreMLModels::TextClassifier::MergePartialFromCodedStream(v17, a2, v178);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x7D1u:
            if (v9 != 138) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 2001)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 2001;
              operator new();
            }
            uint64_t v43 = (CoreML::Specification::CoreMLModels::WordTagger *)*((void *)this + 4);
            long long v97 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v97 < 0)
            {
              int v98 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v98 < 0) {
                return 0;
              }
            }
            else
            {
              int v98 = *v97;
              *(void *)a2 = v97 + 1;
            }
            int v202 = google::protobuf::io::CodedInputStream::PushLimit(a2, v98);
            int v204 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v204--, 1);
            *((_DWORD *)a2 + 13) = v204;
            if (v204 < 0 != v121) {
              return 0;
            }
            int v122 = v202;
            uint64_t result = CoreML::Specification::CoreMLModels::WordTagger::MergePartialFromCodedStream(v43, a2, v203);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x7D2u:
            if (v9 != 146) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 2002)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 2002;
              operator new();
            }
            unint64_t v44 = (CoreML::Specification::CoreMLModels::VisionFeaturePrint *)*((void *)this + 4);
            long long v99 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v99 < 0)
            {
              int v100 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v100 < 0) {
                return 0;
              }
            }
            else
            {
              int v100 = *v99;
              *(void *)a2 = v99 + 1;
            }
            int v205 = google::protobuf::io::CodedInputStream::PushLimit(a2, v100);
            int v207 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v207--, 1);
            *((_DWORD *)a2 + 13) = v207;
            if (v207 < 0 != v121) {
              return 0;
            }
            int v122 = v205;
            uint64_t result = CoreML::Specification::CoreMLModels::VisionFeaturePrint::MergePartialFromCodedStream(v44, a2, v206);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x7D3u:
            if (v9 != 154) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 2003)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 2003;
              operator new();
            }
            char v45 = (CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *)*((void *)this + 4);
            long long v101 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v101 < 0)
            {
              int v102 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v102 < 0) {
                return 0;
              }
            }
            else
            {
              int v102 = *v101;
              *(void *)a2 = v101 + 1;
            }
            int v208 = google::protobuf::io::CodedInputStream::PushLimit(a2, v102);
            int v210 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v210--, 1);
            *((_DWORD *)a2 + 13) = v210;
            if (v210 < 0 != v121) {
              return 0;
            }
            int v122 = v208;
            uint64_t result = CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::MergePartialFromCodedStream(v45, a2, v209);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x7D4u:
            if (v9 != 162) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 2004)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 2004;
              operator new();
            }
            uint64_t v46 = (CoreML::Specification::CoreMLModels::Gazetteer *)*((void *)this + 4);
            long long v103 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v103 < 0)
            {
              int v104 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v104 < 0) {
                return 0;
              }
            }
            else
            {
              int v104 = *v103;
              *(void *)a2 = v103 + 1;
            }
            int v211 = google::protobuf::io::CodedInputStream::PushLimit(a2, v104);
            int v213 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v213--, 1);
            *((_DWORD *)a2 + 13) = v213;
            if (v213 < 0 != v121) {
              return 0;
            }
            int v122 = v211;
            uint64_t result = CoreML::Specification::CoreMLModels::Gazetteer::MergePartialFromCodedStream(v46, a2, v212);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x7D5u:
            if (v9 != 170) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 2005)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 2005;
              operator new();
            }
            char v47 = (CoreML::Specification::CoreMLModels::WordEmbedding *)*((void *)this + 4);
            v105 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v105 < 0)
            {
              int v106 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v106 < 0) {
                return 0;
              }
            }
            else
            {
              int v106 = *v105;
              *(void *)a2 = v105 + 1;
            }
            int v214 = google::protobuf::io::CodedInputStream::PushLimit(a2, v106);
            int v216 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v216--, 1);
            *((_DWORD *)a2 + 13) = v216;
            if (v216 < 0 != v121) {
              return 0;
            }
            int v122 = v214;
            uint64_t result = CoreML::Specification::CoreMLModels::WordEmbedding::MergePartialFromCodedStream(v47, a2, v215);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x7D6u:
            if (v9 != 178) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 2006)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 2006;
              operator new();
            }
            unint64_t v48 = (CoreML::Specification::CoreMLModels::AudioFeaturePrint *)*((void *)this + 4);
            id v107 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v107 < 0)
            {
              int v108 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v108 < 0) {
                return 0;
              }
            }
            else
            {
              int v108 = *v107;
              *(void *)a2 = v107 + 1;
            }
            int v217 = google::protobuf::io::CodedInputStream::PushLimit(a2, v108);
            int v219 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v219--, 1);
            *((_DWORD *)a2 + 13) = v219;
            if (v219 < 0 != v121) {
              return 0;
            }
            int v122 = v217;
            uint64_t result = CoreML::Specification::CoreMLModels::AudioFeaturePrint::MergePartialFromCodedStream(v48, a2, v218);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          default:
            if (v13 == 900)
            {
              if (v9 != 34) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 900)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 900;
                operator new();
              }
              uint64_t v50 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v50 < 0)
              {
                int v51 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v51 < 0) {
                  return 0;
                }
              }
              else
              {
                int v51 = *v50;
                *(void *)a2 = v50 + 1;
              }
              v168 = (CoreML::Specification::Identity *)google::protobuf::io::CodedInputStream::PushLimit(a2, v51);
              int v170 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v170--, 1);
              *((_DWORD *)a2 + 13) = v170;
              if (v170 < 0 != v121) {
                return 0;
              }
              int v171 = (int)v168;
              uint64_t result = CoreML::Specification::Identity::MergePartialFromCodedStream(v168, (char **)a2, v169);
              if (!result) {
                return result;
              }
              v172 = a2;
              int v173 = v171;
LABEL_467:
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v172, v173)) {
                return 0;
              }
            }
            else
            {
              if (v13 != 3000 || v9 != 194) {
                goto LABEL_8;
              }
              if (*((_DWORD *)this + 11) != 3000)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 3000;
                operator new();
              }
              uint64_t v23 = (CoreML::Specification::SerializedModel *)*((void *)this + 4);
              id v85 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v85 < 0)
              {
                int v86 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v86 < 0) {
                  return 0;
                }
              }
              else
              {
                int v86 = *v85;
                *(void *)a2 = v85 + 1;
              }
              int v183 = google::protobuf::io::CodedInputStream::PushLimit(a2, v86);
              int v185 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v185--, 1);
              *((_DWORD *)a2 + 13) = v185;
              if (v185 < 0 != v121) {
                return 0;
              }
              int v186 = v183;
              uint64_t result = CoreML::Specification::SerializedModel::MergePartialFromCodedStream(v23, (char **)a2, v184);
              if (!result) {
                return result;
              }
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v186)) {
                return 0;
              }
            }
            break;
        }
      }
      if (v9 >> 3 > 0x18F) {
        break;
      }
      if (v9 >> 3 > 0xC8)
      {
        switch(v13)
        {
          case 0x12Cu:
            if (v9 != 98) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 300)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 300;
              operator new();
            }
            int v14 = (CoreML::Specification::GLMRegressor *)*((void *)this + 4);
            v127 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v127 < 0)
            {
              int v128 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v128 < 0) {
                return 0;
              }
            }
            else
            {
              int v128 = *v127;
              *(void *)a2 = v127 + 1;
            }
            int v241 = google::protobuf::io::CodedInputStream::PushLimit(a2, v128);
            int v243 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v243--, 1);
            *((_DWORD *)a2 + 13) = v243;
            if (v243 < 0 != v121) {
              return 0;
            }
            int v122 = v241;
            uint64_t result = CoreML::Specification::GLMRegressor::MergePartialFromCodedStream(v14, a2, v242);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x12Du:
            if (v9 != 106) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 301)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 301;
              operator new();
            }
            uint64_t v54 = (CoreML::Specification::SupportVectorRegressor *)*((void *)this + 4);
            v131 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v131 < 0)
            {
              int v132 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v132 < 0) {
                return 0;
              }
            }
            else
            {
              int v132 = *v131;
              *(void *)a2 = v131 + 1;
            }
            int v246 = google::protobuf::io::CodedInputStream::PushLimit(a2, v132);
            int v248 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v248--, 1);
            *((_DWORD *)a2 + 13) = v248;
            if (v248 < 0 != v121) {
              return 0;
            }
            int v122 = v246;
            uint64_t result = CoreML::Specification::SupportVectorRegressor::MergePartialFromCodedStream(v54, a2, v247);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x12Eu:
            if (v9 != 114) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 302)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 302;
              operator new();
            }
            uint64_t v55 = (CoreML::Specification::TreeEnsembleRegressor *)*((void *)this + 4);
            v133 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v133 < 0)
            {
              int v134 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v134 < 0) {
                return 0;
              }
            }
            else
            {
              int v134 = *v133;
              *(void *)a2 = v133 + 1;
            }
            int v232 = google::protobuf::io::CodedInputStream::PushLimit(a2, v134);
            int v234 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v234--, 1);
            *((_DWORD *)a2 + 13) = v234;
            if (v234 < 0 != v121) {
              return 0;
            }
            int v122 = v232;
            uint64_t result = CoreML::Specification::TreeEnsembleRegressor::MergePartialFromCodedStream(v55, a2, v233);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          case 0x12Fu:
            if (v9 != 122) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 303)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 303;
              operator new();
            }
            uint64_t v56 = (CoreML::Specification::NeuralNetworkRegressor *)*((void *)this + 4);
            v135 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v135 < 0)
            {
              int v136 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v136 < 0) {
                return 0;
              }
            }
            else
            {
              int v136 = *v135;
              *(void *)a2 = v135 + 1;
            }
            int v249 = google::protobuf::io::CodedInputStream::PushLimit(a2, v136);
            int v251 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v251--, 1);
            *((_DWORD *)a2 + 13) = v251;
            if (v251 < 0 != v121) {
              return 0;
            }
            int v122 = v249;
            uint64_t result = CoreML::Specification::NeuralNetworkRegressor::MergePartialFromCodedStream(v56, a2, v250);
            if (result) {
              goto LABEL_466;
            }
            return result;
          case 0x130u:
            if (v9 != 130) {
              goto LABEL_8;
            }
            if (*((_DWORD *)this + 11) != 304)
            {
              CoreML::Specification::Model::clear_Type((uint64_t)this);
              *((_DWORD *)this + 11) = 304;
              operator new();
            }
            char v57 = (CoreML::Specification::BayesianProbitRegressor *)*((void *)this + 4);
            v137 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v137 < 0)
            {
              int v138 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v138 < 0) {
                return 0;
              }
            }
            else
            {
              int v138 = *v137;
              *(void *)a2 = v137 + 1;
            }
            int v235 = google::protobuf::io::CodedInputStream::PushLimit(a2, v138);
            int v237 = *((_DWORD *)a2 + 13);
            BOOL v121 = __OFSUB__(v237--, 1);
            *((_DWORD *)a2 + 13) = v237;
            if (v237 < 0 != v121) {
              return 0;
            }
            int v122 = v235;
            uint64_t result = CoreML::Specification::BayesianProbitRegressor::MergePartialFromCodedStream(v57, a2, v236);
            if (!result) {
              return result;
            }
            goto LABEL_466;
          default:
            if (v13 == 201)
            {
              if (v9 == 74)
              {
                if (*((_DWORD *)this + 11) != 201)
                {
                  CoreML::Specification::Model::clear_Type((uint64_t)this);
                  *((_DWORD *)this + 11) = 201;
                  operator new();
                }
                uint64_t v58 = (CoreML::Specification::PipelineRegressor *)*((void *)this + 4);
                v139 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v139 < 0)
                {
                  int v140 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v140 < 0) {
                    return 0;
                  }
                }
                else
                {
                  int v140 = *v139;
                  *(void *)a2 = v139 + 1;
                }
                int v238 = google::protobuf::io::CodedInputStream::PushLimit(a2, v140);
                int v240 = *((_DWORD *)a2 + 13);
                BOOL v121 = __OFSUB__(v240--, 1);
                *((_DWORD *)a2 + 13) = v240;
                if (v240 < 0 != v121) {
                  return 0;
                }
                int v122 = v238;
                uint64_t result = CoreML::Specification::PipelineRegressor::MergePartialFromCodedStream(v58, a2, v239);
                if (!result) {
                  return result;
                }
                goto LABEL_466;
              }
            }
            else if (v13 == 202 && v9 == 82)
            {
              if (*((_DWORD *)this + 11) != 202)
              {
                CoreML::Specification::Model::clear_Type((uint64_t)this);
                *((_DWORD *)this + 11) = 202;
                operator new();
              }
              uint64_t v26 = (CoreML::Specification::Pipeline *)*((void *)this + 4);
              v129 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v129 < 0)
              {
                int v130 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v130 < 0) {
                  return 0;
                }
              }
              else
              {
                int v130 = *v129;
                *(void *)a2 = v129 + 1;
              }
              int v244 = google::protobuf::io::CodedInputStream::PushLimit(a2, v130);
              int v245 = *((_DWORD *)a2 + 13);
              BOOL v121 = __OFSUB__(v245--, 1);
              *((_DWORD *)a2 + 13) = v245;
              if (v245 < 0 != v121) {
                return 0;
              }
              int v122 = v244;
              uint64_t result = CoreML::Specification::Pipeline::MergePartialFromCodedStream(v26, a2);
              if (!result) {
                return result;
              }
              goto LABEL_466;
            }
            break;
        }
        goto LABEL_8;
      }
      if (v9 >> 3 > 9)
      {
        if (v13 != 10)
        {
          if (v13 != 200 || v9 != 66) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 11) != 200)
          {
            CoreML::Specification::Model::clear_Type((uint64_t)this);
            *((_DWORD *)this + 11) = 200;
            operator new();
          }
          uint64_t v22 = (CoreML::Specification::PipelineClassifier *)*((void *)this + 4);
          std::string::size_type v59 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v59 < 0)
          {
            int v60 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v60 < 0) {
              return 0;
            }
          }
          else
          {
            int v60 = *v59;
            *(void *)a2 = v59 + 1;
          }
          int v124 = google::protobuf::io::CodedInputStream::PushLimit(a2, v60);
          int v126 = *((_DWORD *)a2 + 13);
          BOOL v121 = __OFSUB__(v126--, 1);
          *((_DWORD *)a2 + 13) = v126;
          if (v126 < 0 != v121) {
            return 0;
          }
          int v122 = v124;
          uint64_t result = CoreML::Specification::PipelineClassifier::MergePartialFromCodedStream(v22, a2, v125);
          if (!result) {
            return result;
          }
          goto LABEL_466;
        }
        if (v9 != 80) {
          goto LABEL_8;
        }
        uint64_t v29 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v29 < 0)
        {
          Varint64Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v117 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacuint64_t k = *v29;
          *(void *)a2 = v29 + 1;
        }
        *((unsigned char *)this + 28) = Varint64Fallback != 0;
      }
      else
      {
        if (v13 != 1)
        {
          if (v13 != 2 || v9 != 18) {
            goto LABEL_8;
          }
          int v18 = (CoreML::Specification::ModelDescription *)*((void *)this + 2);
          if (!v18) {
            operator new();
          }
          uint64_t v19 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
          {
            int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v20 < 0) {
              return 0;
            }
          }
          else
          {
            int v20 = *v19;
            *(void *)a2 = v19 + 1;
          }
          int v118 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
          int v120 = *((_DWORD *)a2 + 13);
          BOOL v121 = __OFSUB__(v120--, 1);
          *((_DWORD *)a2 + 13) = v120;
          if (v120 < 0 != v121) {
            return 0;
          }
          int v122 = v118;
          uint64_t result = CoreML::Specification::ModelDescription::MergePartialFromCodedStream(v18, a2, v119);
          if (!result) {
            return result;
          }
          goto LABEL_466;
        }
        if (v9 != 8) {
          goto LABEL_8;
        }
        uint64_t v27 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v28 = 0;
        }
        else
        {
          int v28 = *v27;
          if ((*v27 & 0x80000000) == 0)
          {
            *(void *)a2 = v27 + 1;
            goto LABEL_471;
          }
        }
        Varint32Fallbacuint64_t k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v28);
        int v28 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_471:
        *((_DWORD *)this + 6) = v28;
      }
    }
    if (v9 >> 3 <= 0x1F3)
    {
      switch(v13)
      {
        case 0x190u:
          if (v9 != 130) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 11) != 400)
          {
            CoreML::Specification::Model::clear_Type((uint64_t)this);
            *((_DWORD *)this + 11) = 400;
            operator new();
          }
          uint64_t v16 = (CoreML::Specification::GLMClassifier *)*((void *)this + 4);
          uint64_t v79 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v79 < 0)
          {
            int v80 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v80 < 0) {
              return 0;
            }
          }
          else
          {
            int v80 = *v79;
            *(void *)a2 = v79 + 1;
          }
          int v174 = google::protobuf::io::CodedInputStream::PushLimit(a2, v80);
          int v176 = *((_DWORD *)a2 + 13);
          BOOL v121 = __OFSUB__(v176--, 1);
          *((_DWORD *)a2 + 13) = v176;
          if (v176 < 0 != v121) {
            return 0;
          }
          int v122 = v174;
          uint64_t result = CoreML::Specification::GLMClassifier::MergePartialFromCodedStream(v16, a2, v175);
          if (!result) {
            return result;
          }
          goto LABEL_466;
        case 0x191u:
          if (v9 != 138) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 11) != 401)
          {
            CoreML::Specification::Model::clear_Type((uint64_t)this);
            *((_DWORD *)this + 11) = 401;
            operator new();
          }
          uint64_t v39 = (CoreML::Specification::SupportVectorClassifier *)*((void *)this + 4);
          long long v89 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v89 < 0)
          {
            int v90 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v90 < 0) {
              return 0;
            }
          }
          else
          {
            int v90 = *v89;
            *(void *)a2 = v89 + 1;
          }
          int v190 = google::protobuf::io::CodedInputStream::PushLimit(a2, v90);
          int v192 = *((_DWORD *)a2 + 13);
          BOOL v121 = __OFSUB__(v192--, 1);
          *((_DWORD *)a2 + 13) = v192;
          if (v192 < 0 != v121) {
            return 0;
          }
          int v122 = v190;
          uint64_t result = CoreML::Specification::SupportVectorClassifier::MergePartialFromCodedStream(v39, a2, v191);
          if (!result) {
            return result;
          }
          goto LABEL_466;
        case 0x192u:
          if (v9 != 146) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 11) != 402)
          {
            CoreML::Specification::Model::clear_Type((uint64_t)this);
            *((_DWORD *)this + 11) = 402;
            operator new();
          }
          uint64_t v40 = (CoreML::Specification::TreeEnsembleClassifier *)*((void *)this + 4);
          int v91 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v91 < 0)
          {
            int v92 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v92 < 0) {
              return 0;
            }
          }
          else
          {
            int v92 = *v91;
            *(void *)a2 = v91 + 1;
          }
          int v193 = google::protobuf::io::CodedInputStream::PushLimit(a2, v92);
          int v195 = *((_DWORD *)a2 + 13);
          BOOL v121 = __OFSUB__(v195--, 1);
          *((_DWORD *)a2 + 13) = v195;
          if (v195 < 0 != v121) {
            return 0;
          }
          int v122 = v193;
          uint64_t result = CoreML::Specification::TreeEnsembleClassifier::MergePartialFromCodedStream(v40, a2, v194);
          if (!result) {
            return result;
          }
          goto LABEL_466;
        case 0x193u:
          if (v9 != 154) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 11) != 403)
          {
            CoreML::Specification::Model::clear_Type((uint64_t)this);
            *((_DWORD *)this + 11) = 403;
            operator new();
          }
          uint64_t v41 = (CoreML::Specification::NeuralNetworkClassifier *)*((void *)this + 4);
          long long v93 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v93 < 0)
          {
            int v94 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v94 < 0) {
              return 0;
            }
          }
          else
          {
            int v94 = *v93;
            *(void *)a2 = v93 + 1;
          }
          int v196 = google::protobuf::io::CodedInputStream::PushLimit(a2, v94);
          int v198 = *((_DWORD *)a2 + 13);
          BOOL v121 = __OFSUB__(v198--, 1);
          *((_DWORD *)a2 + 13) = v198;
          if (v198 < 0 != v121) {
            return 0;
          }
          int v122 = v196;
          uint64_t result = CoreML::Specification::NeuralNetworkClassifier::MergePartialFromCodedStream(v41, a2, v197);
          if (!result) {
            return result;
          }
          goto LABEL_466;
        case 0x194u:
          if (v9 != 162) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 11) != 404)
          {
            CoreML::Specification::Model::clear_Type((uint64_t)this);
            *((_DWORD *)this + 11) = 404;
            operator new();
          }
          uint64_t v42 = (CoreML::Specification::KNearestNeighborsClassifier *)*((void *)this + 4);
          v95 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v95 < 0)
          {
            int v96 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v96 < 0) {
              return 0;
            }
          }
          else
          {
            int v96 = *v95;
            *(void *)a2 = v95 + 1;
          }
          int v199 = google::protobuf::io::CodedInputStream::PushLimit(a2, v96);
          int v201 = *((_DWORD *)a2 + 13);
          BOOL v121 = __OFSUB__(v201--, 1);
          *((_DWORD *)a2 + 13) = v201;
          if (v201 < 0 != v121) {
            return 0;
          }
          int v122 = v199;
          uint64_t result = CoreML::Specification::KNearestNeighborsClassifier::MergePartialFromCodedStream(v42, a2, v200);
          if (!result) {
            return result;
          }
          goto LABEL_466;
        default:
          goto LABEL_8;
      }
    }
    if (v9 >> 3 <= 0x1F5)
    {
      if (v13 == 500)
      {
        if (v9 != 162) {
          goto LABEL_8;
        }
        if (*((_DWORD *)this + 11) != 500)
        {
          CoreML::Specification::Model::clear_Type((uint64_t)this);
          *((_DWORD *)this + 11) = 500;
          operator new();
        }
        char v49 = (CoreML::Specification::NeuralNetwork *)*((void *)this + 4);
        long long v109 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v109 < 0)
        {
          int v110 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v110 < 0) {
            return 0;
          }
        }
        else
        {
          int v110 = *v109;
          *(void *)a2 = v109 + 1;
        }
        int v220 = google::protobuf::io::CodedInputStream::PushLimit(a2, v110);
        int v222 = *((_DWORD *)a2 + 13);
        BOOL v121 = __OFSUB__(v222--, 1);
        *((_DWORD *)a2 + 13) = v222;
        if (v222 < 0 != v121) {
          return 0;
        }
        int v122 = v220;
        uint64_t result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v49, a2, v221);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v9 != 170) {
          goto LABEL_8;
        }
        if (*((_DWORD *)this + 11) != 501)
        {
          CoreML::Specification::Model::clear_Type((uint64_t)this);
          *((_DWORD *)this + 11) = 501;
          operator new();
        }
        uint64_t v21 = (CoreML::Specification::ItemSimilarityRecommender *)*((void *)this + 4);
        uint64_t v83 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v83 < 0)
        {
          int v84 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v84 < 0) {
            return 0;
          }
        }
        else
        {
          int v84 = *v83;
          *(void *)a2 = v83 + 1;
        }
        int v180 = google::protobuf::io::CodedInputStream::PushLimit(a2, v84);
        int v182 = *((_DWORD *)a2 + 13);
        BOOL v121 = __OFSUB__(v182--, 1);
        *((_DWORD *)a2 + 13) = v182;
        if (v182 < 0 != v121) {
          return 0;
        }
        int v122 = v180;
        uint64_t result = CoreML::Specification::ItemSimilarityRecommender::MergePartialFromCodedStream(v21, a2, v181);
        if (!result) {
          return result;
        }
      }
LABEL_466:
      v172 = a2;
      int v173 = v122;
      goto LABEL_467;
    }
    if (v13 != 502)
    {
      if (v13 != 555 || v9 != 90) {
        goto LABEL_8;
      }
      if (*((_DWORD *)this + 11) != 555)
      {
        CoreML::Specification::Model::clear_Type((uint64_t)this);
        *((_DWORD *)this + 11) = 555;
        operator new();
      }
      uint64_t v25 = (CoreML::Specification::CustomModel *)*((void *)this + 4);
      v87 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v87 < 0)
      {
        int v88 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v88 < 0) {
          return 0;
        }
      }
      else
      {
        int v88 = *v87;
        *(void *)a2 = v87 + 1;
      }
      int v187 = google::protobuf::io::CodedInputStream::PushLimit(a2, v88);
      int v189 = *((_DWORD *)a2 + 13);
      BOOL v121 = __OFSUB__(v189--, 1);
      *((_DWORD *)a2 + 13) = v189;
      if (v189 < 0 != v121) {
        return 0;
      }
      int v122 = v187;
      uint64_t result = CoreML::Specification::CustomModel::MergePartialFromCodedStream(v25, a2, v188);
      if (!result) {
        return result;
      }
      goto LABEL_466;
    }
    if (v9 == 178)
    {
      if (*((_DWORD *)this + 11) != 502)
      {
        CoreML::Specification::Model::clear_Type((uint64_t)this);
        *((_DWORD *)this + 11) = 502;
        operator new();
      }
      long long v52 = (CoreML::Specification::MILSpec::Program *)*((void *)this + 4);
      long long v111 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v111 < 0)
      {
        int v112 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v112 < 0) {
          return 0;
        }
      }
      else
      {
        int v112 = *v111;
        *(void *)a2 = v111 + 1;
      }
      int v223 = google::protobuf::io::CodedInputStream::PushLimit(a2, v112);
      int v225 = *((_DWORD *)a2 + 13);
      BOOL v121 = __OFSUB__(v225--, 1);
      *((_DWORD *)a2 + 13) = v225;
      if (v225 < 0 != v121) {
        return 0;
      }
      int v122 = v223;
      uint64_t result = CoreML::Specification::MILSpec::Program::MergePartialFromCodedStream(v52, a2, v224);
      if (!result) {
        return result;
      }
      goto LABEL_466;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC085148(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

CoreML::Specification::ModelDescription *CoreML::Specification::ModelDescription::ModelDescription(CoreML::Specification::ModelDescription *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CategoricalMapping::New(this, 0) = 0u;
  *(void *)this = &unk_1F361D7D8;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 12CoreML::Specification::CategoricalMapping::New(this, 0) = 0u;
  if (this != (CoreML::Specification::ModelDescription *)&CoreML::Specification::_ModelDescription_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
  }
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 2CoreML::Specification::CategoricalMapping::New(this, 0) = 0;
  *((_DWORD *)this + 42) = 0;
  return this;
}

void sub_1DC0854F8(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ModelDescription::MergePartialFromCodedStream(CoreML::Specification::ModelDescription *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v5 = (std::string **)((char *)this + 152);
  uint64_t v55 = (CoreML::Specification::ModelDescription *)((char *)this + 88);
  uint64_t v56 = (CoreML::Specification::ModelDescription *)((char *)this + 112);
  unint64_t v6 = (CoreML::Specification::ModelDescription *)((char *)this + 64);
  uint64_t v7 = (std::string **)((char *)this + 144);
  uint64_t v8 = (std::string **)((char *)this + 136);
  unint64_t v9 = (CoreML::Specification::ModelDescription *)((char *)this + 40);
  uint64_t v54 = (CoreML::Specification::ModelDescription *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      int v10 = *(unsigned __int8 **)a2;
      unint64_t v11 = *((void *)a2 + 1);
      if (*(void *)a2 >= v11)
      {
        LODWORD(v13) = 0;
      }
      else
      {
        uint64_t v12 = v10 + 1;
        uint64_t v13 = *v10;
        if ((char)*v10 >= 1)
        {
          *(void *)a2 = v12;
          unint64_t v14 = v13 | 0x100000000;
          if ((v14 & 0x100000000) == 0) {
            goto LABEL_9;
          }
          goto LABEL_17;
        }
        if ((unint64_t)v12 < v11)
        {
          int v15 = *v12;
          if ((v13 & ~v15) >= 0x80)
          {
            *(void *)a2 = v10 + 2;
            unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
            goto LABEL_17;
          }
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
      unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v14 & 0x100000000) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      unsigned int v18 = v14 >> 3;
      if (v14 >> 3 <= 0x31)
      {
        switch(v18)
        {
          case 0xAu:
            if (v14 != 82) {
              goto LABEL_9;
            }
            uint64_t v19 = v9;
            goto LABEL_61;
          case 0xBu:
            if (v14 != 90) {
              goto LABEL_9;
            }
            if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            }
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v8);
            if (!result) {
              return result;
            }
            uint64_t v25 = *v8;
            if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
            {
              uint64_t v25 = (std::string *)v25->__r_.__value_.__r.__words[0];
              std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
            }
            else
            {
              LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
            }
            uint64_t v39 = "CoreML.Specification.ModelDescription.predictedFeatureName";
            goto LABEL_75;
          case 0xCu:
            if (v14 != 98) {
              goto LABEL_9;
            }
            if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            }
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7);
            if (!result) {
              return result;
            }
            uint64_t v25 = *v7;
            if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
            {
              uint64_t v25 = (std::string *)v25->__r_.__value_.__r.__words[0];
              std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
            }
            else
            {
              LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
            }
            uint64_t v39 = "CoreML.Specification.ModelDescription.predictedProbabilitiesName";
            goto LABEL_75;
          case 0xDu:
            if (v14 != 106) {
              goto LABEL_9;
            }
            uint64_t v19 = v6;
            goto LABEL_61;
          case 0xEu:
          case 0xFu:
          case 0x10u:
          case 0x11u:
          case 0x12u:
          case 0x13u:
            goto LABEL_9;
          case 0x14u:
            if (v14 != 162) {
              goto LABEL_9;
            }
            uint64_t v27 = (int *)*((void *)this + 13);
            if (!v27)
            {
              int v28 = *((_DWORD *)this + 24);
              int v29 = *((_DWORD *)this + 25);
LABEL_82:
              if (v28 <= v29)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v55, v29 - v28 + 1);
                uint64_t v27 = (int *)*((void *)this + 13);
              }
              int v29 = *v27;
              goto LABEL_85;
            }
            int v28 = *((_DWORD *)this + 24);
            int v29 = *v27;
            if (v28 < *v27)
            {
              *((_DWORD *)this + 24) = v28 + 1;
              Aligned = *(google::protobuf::Arena ***)&v27[2 * v28 + 2];
              goto LABEL_90;
            }
            if (v29 == *((_DWORD *)this + 25)) {
              goto LABEL_82;
            }
LABEL_85:
            int *v27 = v29 + 1;
            uint64_t v43 = *(google::protobuf::Arena **)v55;
            if (!*(void *)v55) {
              operator new();
            }
            CoreML::Specification::FunctionDescription::FunctionDescription((CoreML::Specification::FunctionDescription *)Aligned);
            unint64_t v44 = google::protobuf::Arena::AllocateAligned(v43, 0, 24);
            CoreML::Specification::CoreMLModels::VisionFeaturePrint *v44 = (google::protobuf::Arena *)Aligned;
            v44[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FunctionDescription>;
            char v45 = (unint64_t *)((char *)v43 + 32);
            do
              unint64_t v46 = __ldxr(v45);
            while (__stxr((unint64_t)v44, v45));
            v44[2] = (google::protobuf::Arena *)v46;
            uint64_t v47 = *((void *)this + 13);
            uint64_t v48 = *((int *)this + 24);
            *((_DWORD *)this + 24) = v48 + 1;
            *(void *)(v47 + 8 * v48 + 8) = Aligned;
LABEL_90:
            char v49 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v49 < 0)
            {
              int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0) {
                return 0;
              }
            }
            else
            {
              int VarintSizeAsIntFallback = *v49;
              *(void *)a2 = v49 + 1;
            }
            int v51 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            int v53 = *((_DWORD *)a2 + 13);
            BOOL v37 = __OFSUB__(v53--, 1);
            *((_DWORD *)a2 + 13) = v53;
            if (v53 < 0 != v37) {
              return 0;
            }
            int v38 = v51;
            uint64_t result = CoreML::Specification::FunctionDescription::MergePartialFromCodedStream((CoreML::Specification::FunctionDescription *)Aligned, a2, v52);
            if (!result) {
              return result;
            }
            break;
          case 0x15u:
            if (v14 != 170) {
              goto LABEL_9;
            }
            if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            }
            uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
            if (!result) {
              return result;
            }
            uint64_t v25 = *v5;
            if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
            {
              uint64_t v25 = (std::string *)v25->__r_.__value_.__r.__words[0];
              std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
            }
            else
            {
              LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
            }
            uint64_t v39 = "CoreML.Specification.ModelDescription.defaultFunctionName";
LABEL_75:
            if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v25, size, 0, (uint64_t)v39))return 0; {
            continue;
            }
          default:
            if (v18 != 1 || v14 != 10) {
              goto LABEL_9;
            }
            uint64_t v19 = v54;
            goto LABEL_61;
        }
        goto LABEL_96;
      }
      if (v18 == 50) {
        break;
      }
      if (v18 != 100 || v14 != 34) {
        goto LABEL_9;
      }
      int v20 = (CoreML::Specification::Metadata *)*((void *)this + 20);
      if (!v20) {
        operator new();
      }
      uint64_t v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
      {
        int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v22 < 0) {
          return 0;
        }
      }
      else
      {
        int v22 = *v21;
        *(void *)a2 = v21 + 1;
      }
      int v40 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
      int v42 = *((_DWORD *)a2 + 13);
      BOOL v37 = __OFSUB__(v42--, 1);
      *((_DWORD *)a2 + 13) = v42;
      if (v42 < 0 != v37) {
        return 0;
      }
      int v38 = v40;
      uint64_t result = CoreML::Specification::Metadata::MergePartialFromCodedStream(v20, a2, v41);
      if (!result) {
        return result;
      }
LABEL_96:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v38)) {
        return 0;
      }
    }
    if (v14 == 146)
    {
      uint64_t v19 = v56;
LABEL_61:
      BOOL v31 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v19);
      uint64_t v32 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v32 < 0)
      {
        int v33 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v33 < 0) {
          return 0;
        }
      }
      else
      {
        int v33 = *v32;
        *(void *)a2 = v32 + 1;
      }
      int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
      int v36 = *((_DWORD *)a2 + 13);
      BOOL v37 = __OFSUB__(v36--, 1);
      *((_DWORD *)a2 + 13) = v36;
      if (v36 < 0 != v37) {
        return 0;
      }
      int v38 = v34;
      uint64_t result = CoreML::Specification::FeatureDescription::MergePartialFromCodedStream((CoreML::Specification::FeatureDescription *)v31, a2, v35);
      if (!result) {
        return result;
      }
      goto LABEL_96;
    }
LABEL_9:
    if (!v14 || (v14 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC085AB4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FD9EAC30);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Model::clear_Type(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 44);
  if (v2 > 559)
  {
    if (v2 > 899)
    {
      switch(v2)
      {
        case 2000:
        case 2001:
        case 2002:
        case 2003:
        case 2004:
        case 2005:
        case 2006:
          goto LABEL_10;
        default:
          if (v2 == 900 || v2 == 3000) {
            goto LABEL_10;
          }
          break;
      }
    }
    else
    {
      switch(v2)
      {
        case 600:
        case 601:
        case 602:
        case 603:
        case 604:
        case 606:
        case 607:
        case 609:
        case 610:
          goto LABEL_10;
        case 605:
        case 608:
          goto LABEL_12;
        default:
          if (v2 == 560) {
            goto LABEL_10;
          }
          break;
      }
    }
    goto LABEL_12;
  }
  if (v2 > 399)
  {
    if (v2 <= 499)
    {
      switch(v2)
      {
        case 400:
        case 401:
        case 402:
        case 403:
        case 404:
          goto LABEL_10;
        default:
          goto LABEL_12;
      }
      goto LABEL_12;
    }
    if (v2 > 502 && v2 != 555 && v2 != 556) {
      goto LABEL_12;
    }
LABEL_10:
    this = *(void *)(this + 32);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
    goto LABEL_12;
  }
  if (v2 <= 299)
  {
    if (v2 != 200 && v2 != 201 && v2 != 202) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  switch(v2)
  {
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
      goto LABEL_10;
    default:
      break;
  }
LABEL_12:
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

CoreML::Specification::PipelineClassifier *CoreML::Specification::PipelineClassifier::PipelineClassifier(CoreML::Specification::PipelineClassifier *this)
{
  *(void *)this = &unk_1F361ECA0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PipelineClassifier *)&CoreML::Specification::_PipelineClassifier_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC085D90(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PipelineClassifier::MergePartialFromCodedStream(CoreML::Specification::PipelineClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = (CoreML::Specification::Pipeline *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
      uint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v14;
        uint64_t result = CoreML::Specification::Pipeline::MergePartialFromCodedStream(v11, a2);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC085F00(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40759568C3);
  _Unwind_Resume(a1);
}

CoreML::Specification::PipelineRegressor *CoreML::Specification::PipelineRegressor::PipelineRegressor(CoreML::Specification::PipelineRegressor *this)
{
  *(void *)this = &unk_1F361E320;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PipelineRegressor *)&CoreML::Specification::_PipelineRegressor_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC085F88(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PipelineRegressor::MergePartialFromCodedStream(CoreML::Specification::PipelineRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v11 = (CoreML::Specification::Pipeline *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
      uint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v14;
        uint64_t result = CoreML::Specification::Pipeline::MergePartialFromCodedStream(v11, a2);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0860F8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40759568C3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Pipeline *CoreML::Specification::Pipeline::Pipeline(CoreML::Specification::Pipeline *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CategoricalMapping::New(this, 0) = 0u;
  *(void *)this = &unk_1F3626658;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 7) = 0;
  if (this != (CoreML::Specification::Pipeline *)&CoreML::Specification::_Pipeline_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 16) = 0;
  return this;
}

void sub_1DC08619C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::SerializedModel *CoreML::Specification::SerializedModel::SerializedModel(CoreML::Specification::SerializedModel *this)
{
  *(void *)this = &unk_1F361CBF8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SerializedModel *)&CoreML::Specification::_SerializedModel_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC086230(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::SerializedModel::MergePartialFromCodedStream(CoreML::Specification::SerializedModel *this, char **a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 24);
  int v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_24;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 18) {
          goto LABEL_24;
        }
        if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        if (!google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v4)) {
          return 0;
        }
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      uint64_t v12 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v12 = *(unsigned int **)v12;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.SerializedModel.identifier"))return 0; {
    }
      }
LABEL_24:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

unint64_t *CoreML::Specification::protobuf_Model_2eproto::InitDefaults(CoreML::Specification::protobuf_Model_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_Model_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_Model_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Model_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_Model_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Model_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  int v2 = CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults((CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto *)inited);
  int v3 = CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto::InitDefaults((CoreML::Specification::CoreMLModels::protobuf_AudioFeaturePrint_2eproto *)v2);
  char v4 = CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::InitDefaults((CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto *)v3);
  int v5 = CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults((CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto *)v4);
  uint64_t v6 = CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults((CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto *)v5);
  uint64_t v7 = CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults((CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto *)v6);
  unint64_t v8 = CoreML::Specification::protobuf_ArrayFeatureExtractor_2eproto::InitDefaults((CoreML::Specification::protobuf_ArrayFeatureExtractor_2eproto *)v7);
  unint64_t v9 = CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults((CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto *)v8);
  int v10 = CoreML::Specification::protobuf_CategoricalMapping_2eproto::InitDefaults((CoreML::Specification::protobuf_CategoricalMapping_2eproto *)v9);
  unint64_t v11 = CoreML::Specification::protobuf_CustomModel_2eproto::InitDefaults((CoreML::Specification::protobuf_CustomModel_2eproto *)v10);
  uint64_t v12 = CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults((CoreML::Specification::protobuf_DictVectorizer_2eproto *)v11);
  uint64_t v13 = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v12);
  int v14 = CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureVectorizer_2eproto *)v13);
  int v15 = CoreML::Specification::protobuf_GLMRegressor_2eproto::InitDefaults((CoreML::Specification::protobuf_GLMRegressor_2eproto *)v14);
  BOOL v16 = CoreML::Specification::protobuf_GLMClassifier_2eproto::InitDefaults((CoreML::Specification::protobuf_GLMClassifier_2eproto *)v15);
  int v17 = CoreML::Specification::protobuf_NearestNeighbors_2eproto::InitDefaults((CoreML::Specification::protobuf_NearestNeighbors_2eproto *)v16);
  unsigned int v18 = CoreML::Specification::protobuf_Identity_2eproto::InitDefaults((CoreML::Specification::protobuf_Identity_2eproto *)v17);
  uint64_t v19 = CoreML::Specification::protobuf_Imputer_2eproto::InitDefaults((CoreML::Specification::protobuf_Imputer_2eproto *)v18);
  int v20 = CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults((CoreML::Specification::MILSpec::protobuf_MIL_2eproto *)v19);
  uint64_t v21 = CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)v20);
  int v22 = CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults((CoreML::Specification::protobuf_Normalizer_2eproto *)v21);
  uint64_t v23 = CoreML::Specification::protobuf_OneHotEncoder_2eproto::InitDefaults((CoreML::Specification::protobuf_OneHotEncoder_2eproto *)v22);
  unint64_t v24 = CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults((CoreML::Specification::protobuf_Scaler_2eproto *)v23);
  uint64_t v25 = CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults((CoreML::Specification::protobuf_NonMaximumSuppression_2eproto *)v24);
  uint64_t v26 = CoreML::Specification::protobuf_SVM_2eproto::InitDefaults((CoreML::Specification::protobuf_SVM_2eproto *)v25);
  uint64_t v27 = CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults((CoreML::Specification::protobuf_TreeEnsemble_2eproto *)v26);
  int v28 = CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults((CoreML::Specification::protobuf_Parameters_2eproto *)v27);
  int v29 = CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults((CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto *)v28);
  uint64_t v30 = CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::InitDefaults((CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto *)v29);
  BOOL v31 = CoreML::Specification::protobuf_LinkedModel_2eproto::InitDefaults((CoreML::Specification::protobuf_LinkedModel_2eproto *)v30);
  CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto::InitDefaults((CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto *)v31);
  CoreML::Specification::_Pipeline_default_instance_ = (uint64_t)&unk_1F3626658;
  unk_1EC0019F8 = 0u;
  unk_1EC001A08 = 0u;
  unk_1EC001A18 = 0u;
  unk_1EC001A24 = 0u;
  byte_1EC001A38 = 1;
  qword_1EC0036B8 = 0;
  qword_1EC0036C0 = 0;
  CoreML::Specification::_PipelineClassifier_default_instance_ = (uint64_t)&unk_1F361ECA0;
  dword_1EC0036C8 = 0;
  byte_1EC0036D0 = 1;
  qword_1EC002E90 = 0;
  qword_1EC002E98 = 0;
  CoreML::Specification::_PipelineRegressor_default_instance_ = (uint64_t)&unk_1F361E320;
  dword_1EC002EA0 = 0;
  byte_1EC002EA8 = 1;
  CoreML::Specification::_FeatureDescription_default_instance_ = (uint64_t)&unk_1F361E9A8;
  unk_1EC003060 = 0;
  qword_1EC003068 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC003070 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC003078 = 0;
  dword_1EC003080 = 0;
  byte_1EC003088 = 1;
  qword_1EC004E50 = 0;
  unk_1EC004E58 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC004E60 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC004E68 = 0;
  dword_1EC004E70 = 0;
  CoreML::Specification::_Metadata_UserDefinedEntry_default_instance_ = (uint64_t)&unk_1F3627D78;
  byte_1EC004E78 = 1;
  uint64_t v32 = CoreML::Specification::Metadata::Metadata((CoreML::Specification::Metadata *)&CoreML::Specification::_Metadata_default_instance_);
  *(unsigned char *)(v32 + 88) = 1;
  CoreML::Specification::_FunctionDescription_default_instance_ = (uint64_t)&unk_1F3616648;
  double result = 0.0;
  unk_1EC001420 = 0u;
  unk_1EC001430 = 0u;
  unk_1EC001440 = 0u;
  unk_1EC001450 = 0u;
  unk_1EC001460 = 0u;
  qword_1EC001470 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC001478 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC001480 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  dword_1EC001488 = 0;
  byte_1EC001490 = 1;
  CoreML::Specification::_ModelDescription_default_instance_ = (uint64_t)&unk_1F361D7D8;
  unk_1EC002A68 = 0u;
  unk_1EC002A78 = 0u;
  unk_1EC002A88 = 0u;
  unk_1EC002A98 = 0u;
  unk_1EC002AA8 = 0u;
  unk_1EC002AB8 = 0u;
  unk_1EC002AC8 = 0u;
  unk_1EC002AD8 = 0u;
  qword_1EC002AE8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC002AF0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC002AF8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  dword_1EC002B08 = 0;
  byte_1EC002B10 = 1;
  CoreML::Specification::_SerializedModel_default_instance_ = (uint64_t)&unk_1F361CBF8;
  unk_1EC002620 = 0;
  qword_1EC002628 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC002630 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EC002638 = 0;
  byte_1EC002640 = 1;
  qword_1EC001718 = 0;
  *(uint64_t *)((char *)&qword_1EC001700 + 5) = 0;
  CoreML::Specification::_Model_default_instance_ = (uint64_t)&unk_1F3624FC8;
  *(void *)algn_1EC0016F8 = 0;
  byte_1EC001720 = 1;
  qword_1EC0036C0 = (uint64_t)&CoreML::Specification::_Pipeline_default_instance_;
  qword_1EC002E98 = (uint64_t)&CoreML::Specification::_Pipeline_default_instance_;
  qword_1EC003078 = (uint64_t)&CoreML::Specification::_FeatureType_default_instance_;
  qword_1EC004E50 = (uint64_t)&CoreML::Specification::_Metadata_UserDefinedEntry_default_instance_;
  qword_1EC002B00 = v32;
  qword_1EC001700 = (uint64_t)&CoreML::Specification::_ModelDescription_default_instance_;
  return result;
}

CoreML::Specification::Metadata *CoreML::Specification::Metadata::Metadata(CoreML::Specification::Metadata *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36265C0;
  *((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  int v2 = google::protobuf::Map<std::string,std::string>::Init((uint64_t)this + 24);
  *((_DWORD *)this + 8) = 0;
  if (this != (CoreML::Specification::Metadata *)&CoreML::Specification::_Metadata_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults((CoreML::Specification::protobuf_Model_2eproto *)v2);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 2CoreML::Specification::CategoricalMapping::New(this, 0) = 0;
  return this;
}

void sub_1DC0867B0(_Unwind_Exception *a1)
{
  google::protobuf::Map<std::string,std::string>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Model::GetCachedSize(CoreML::Specification::Model *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::Model::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 24);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  }
  if ((uint64_t *)v5 != &CoreML::Specification::_Model_default_instance_)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    if (v7) {
      this = google::protobuf::internal::WireFormatLite::WriteMessage(2, v7, a2);
    }
  }
  if (*(unsigned char *)(v5 + 28)) {
    this = google::protobuf::internal::WireFormatLite::WriteBool(10, 1u, a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 44);
  if (v8 == 200)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(200, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 201)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(201, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 202)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(202, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 300)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(300, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 301)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(301, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 302)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(302, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 303)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(303, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 304)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(304, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 400)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(400, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 401)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(401, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 402)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(402, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 403)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(403, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 404)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(404, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 500)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(500, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 501)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(501, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 502)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(502, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 555)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(555, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 556)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(556, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 560)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(560, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 600)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(600, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 601)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(601, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 602)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(602, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 603)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(603, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 604)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(604, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 606)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(606, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 607)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(607, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 609)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(609, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 610)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(610, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 900)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(900, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 2000)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2000, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 2001)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2001, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 2002)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2002, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 2003)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2003, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 2004)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2004, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 2005)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2005, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 2006)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2006, *(void *)(v5 + 32), a2);
    int v8 = *(_DWORD *)(v5 + 44);
  }
  if (v8 == 3000)
  {
    uint64_t v9 = *(void *)(v5 + 32);
    return google::protobuf::internal::WireFormatLite::WriteMessage(3000, v9, a2);
  }
  return this;
}

std::string *CoreML::Specification::Model::MergeFrom(std::string *this, const CoreML::Specification::Model *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::Model *)&CoreML::Specification::_Model_default_instance_ && v5 != 0)
  {
    uint64_t v7 = *(std::string **)(v3 + 16);
    if (!v7) {
      operator new();
    }
    if (v5) {
      int v8 = (const CoreML::Specification::ModelDescription *)*((void *)a2 + 2);
    }
    else {
      int v8 = (const CoreML::Specification::ModelDescription *)&CoreML::Specification::_ModelDescription_default_instance_;
    }
    this = CoreML::Specification::ModelDescription::MergeFrom(v7, v8);
  }
  int v9 = *((_DWORD *)a2 + 6);
  if (v9) {
    *(_DWORD *)(v3 + 24) = v9;
  }
  if (*((unsigned char *)a2 + 28)) {
    *(unsigned char *)(v3 + 28) = 1;
  }
  int v10 = *((_DWORD *)a2 + 11);
  if (v10 <= 559)
  {
    if (v10 <= 399)
    {
      if (v10 <= 299)
      {
        switch(v10)
        {
          case 200:
            if (*(_DWORD *)(v3 + 44) != 200)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 200;
              operator new();
            }
            unint64_t v44 = (const CoreML::Specification::PipelineClassifier *)*((void *)a2 + 4);
            uint64_t v81 = *(std::string **)(v3 + 32);
            return CoreML::Specification::PipelineClassifier::MergeFrom(v81, v44);
          case 201:
            if (*(_DWORD *)(v3 + 44) != 201)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 201;
              operator new();
            }
            char v45 = (const CoreML::Specification::PipelineRegressor *)*((void *)a2 + 4);
            int v82 = *(std::string **)(v3 + 32);
            return CoreML::Specification::PipelineRegressor::MergeFrom(v82, v45);
          case 202:
            if (*(_DWORD *)(v3 + 44) != 202)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 202;
              operator new();
            }
            uint64_t v25 = (const CoreML::Specification::Pipeline *)*((void *)a2 + 4);
            uint64_t v62 = *(unint64_t **)(v3 + 32);
            return (std::string *)CoreML::Specification::Pipeline::MergeFrom(v62, v25);
        }
      }
      else
      {
        switch(v10)
        {
          case 300:
            if (*(_DWORD *)(v3 + 44) != 300)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 300;
              operator new();
            }
            uint64_t v23 = (const CoreML::Specification::GLMRegressor *)*((void *)a2 + 4);
            int v60 = *(unint64_t **)(v3 + 32);
            this = (std::string *)CoreML::Specification::GLMRegressor::MergeFrom(v60, v23);
            break;
          case 301:
            if (*(_DWORD *)(v3 + 44) != 301)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 301;
              operator new();
            }
            int v38 = (const CoreML::Specification::SupportVectorRegressor *)*((void *)a2 + 4);
            uint64_t v75 = *(std::string **)(v3 + 32);
            this = CoreML::Specification::SupportVectorRegressor::MergeFrom(v75, v38);
            break;
          case 302:
            if (*(_DWORD *)(v3 + 44) != 302)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 302;
              operator new();
            }
            uint64_t v39 = (const CoreML::Specification::TreeEnsembleRegressor *)*((void *)a2 + 4);
            int v76 = *(std::string **)(v3 + 32);
            this = CoreML::Specification::TreeEnsembleRegressor::MergeFrom(v76, v39);
            break;
          case 303:
            if (*(_DWORD *)(v3 + 44) != 303)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 303;
              operator new();
            }
            int v40 = (const CoreML::Specification::NeuralNetworkRegressor *)*((void *)a2 + 4);
            uint64_t v77 = *(std::string **)(v3 + 32);
            this = CoreML::Specification::NeuralNetworkRegressor::MergeFrom(v77, v40);
            break;
          case 304:
            if (*(_DWORD *)(v3 + 44) != 304)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 304;
              operator new();
            }
            unsigned int v41 = (const CoreML::Specification::BayesianProbitRegressor *)*((void *)a2 + 4);
            int v78 = *(unint64_t **)(v3 + 32);
            this = (std::string *)CoreML::Specification::BayesianProbitRegressor::MergeFrom(v78, v41);
            break;
          default:
            return this;
        }
      }
    }
    else if (v10 > 499)
    {
      if (v10 <= 501)
      {
        if (v10 == 500)
        {
          if (*(_DWORD *)(v3 + 44) != 500)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 500;
            operator new();
          }
          unint64_t v46 = (const CoreML::Specification::NeuralNetwork *)*((void *)a2 + 4);
          id v85 = *(std::string **)(v3 + 32);
          return CoreML::Specification::NeuralNetwork::MergeFrom(v85, v46);
        }
        else
        {
          if (*(_DWORD *)(v3 + 44) != 501)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 501;
            operator new();
          }
          uint64_t v27 = (const CoreML::Specification::ItemSimilarityRecommender *)*((void *)a2 + 4);
          int v64 = *(unint64_t **)(v3 + 32);
          return (std::string *)CoreML::Specification::ItemSimilarityRecommender::MergeFrom(v64, v27);
        }
      }
      else
      {
        switch(v10)
        {
          case 502:
            if (*(_DWORD *)(v3 + 44) != 502)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 502;
              operator new();
            }
            int v42 = (const CoreML::Specification::MILSpec::Program *)*((void *)a2 + 4);
            uint64_t v79 = *(CoreML::Specification::MILSpec::Program **)(v3 + 32);
            return (std::string *)CoreML::Specification::MILSpec::Program::MergeFrom(v79, v42);
          case 555:
            if (*(_DWORD *)(v3 + 44) != 555)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 555;
              operator new();
            }
            uint64_t v43 = (const CoreML::Specification::CustomModel *)*((void *)a2 + 4);
            int v80 = *(CoreML::Specification::CustomModel **)(v3 + 32);
            return CoreML::Specification::CustomModel::MergeFrom(v80, v43);
          case 556:
            if (*(_DWORD *)(v3 + 44) != 556)
            {
              CoreML::Specification::Model::clear_Type(v3);
              *(_DWORD *)(v3 + 44) = 556;
              operator new();
            }
            unint64_t v24 = (const CoreML::Specification::LinkedModel *)*((void *)a2 + 4);
            char v61 = *(std::string **)(v3 + 32);
            return CoreML::Specification::LinkedModel::MergeFrom(v61, v24);
        }
      }
    }
    else
    {
      switch(v10)
      {
        case 400:
          if (*(_DWORD *)(v3 + 44) != 400)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 400;
            operator new();
          }
          uint64_t v21 = (const CoreML::Specification::GLMClassifier *)*((void *)a2 + 4);
          uint64_t v58 = *(std::string **)(v3 + 32);
          this = CoreML::Specification::GLMClassifier::MergeFrom(v58, v21);
          break;
        case 401:
          if (*(_DWORD *)(v3 + 44) != 401)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 401;
            operator new();
          }
          int v28 = (const CoreML::Specification::SupportVectorClassifier *)*((void *)a2 + 4);
          uint64_t v65 = *(std::string **)(v3 + 32);
          this = CoreML::Specification::SupportVectorClassifier::MergeFrom(v65, v28);
          break;
        case 402:
          if (*(_DWORD *)(v3 + 44) != 402)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 402;
            operator new();
          }
          int v29 = (const CoreML::Specification::TreeEnsembleClassifier *)*((void *)a2 + 4);
          int v66 = *(std::string **)(v3 + 32);
          this = CoreML::Specification::TreeEnsembleClassifier::MergeFrom(v66, v29);
          break;
        case 403:
          if (*(_DWORD *)(v3 + 44) != 403)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 403;
            operator new();
          }
          uint64_t v30 = (const CoreML::Specification::NeuralNetworkClassifier *)*((void *)a2 + 4);
          unint64_t v67 = *(std::string **)(v3 + 32);
          this = CoreML::Specification::NeuralNetworkClassifier::MergeFrom(v67, v30);
          break;
        case 404:
          if (*(_DWORD *)(v3 + 44) != 404)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 404;
            operator new();
          }
          BOOL v31 = (const CoreML::Specification::KNearestNeighborsClassifier *)*((void *)a2 + 4);
          int v68 = *(std::string **)(v3 + 32);
          this = CoreML::Specification::KNearestNeighborsClassifier::MergeFrom(v68, v31);
          break;
        default:
          return this;
      }
    }
  }
  else if (v10 > 899)
  {
    switch(v10)
    {
      case 2000:
        if (*(_DWORD *)(v3 + 44) != 2000)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 2000;
          operator new();
        }
        int v22 = (const CoreML::Specification::CoreMLModels::TextClassifier *)*((void *)a2 + 4);
        std::string::size_type v59 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::CoreMLModels::TextClassifier::MergeFrom(v59, v22);
        break;
      case 2001:
        if (*(_DWORD *)(v3 + 44) != 2001)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 2001;
          operator new();
        }
        uint64_t v32 = (const CoreML::Specification::CoreMLModels::WordTagger *)*((void *)a2 + 4);
        char v69 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::CoreMLModels::WordTagger::MergeFrom(v69, v32);
        break;
      case 2002:
        if (*(_DWORD *)(v3 + 44) != 2002)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 2002;
          operator new();
        }
        int v33 = (const CoreML::Specification::CoreMLModels::VisionFeaturePrint *)*((void *)a2 + 4);
        int v70 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::CoreMLModels::VisionFeaturePrint::MergeFrom(v70, v33);
        break;
      case 2003:
        if (*(_DWORD *)(v3 + 44) != 2003)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 2003;
          operator new();
        }
        int v34 = (const CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *)*((void *)a2 + 4);
        v71 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::MergeFrom(v71, v34);
        break;
      case 2004:
        if (*(_DWORD *)(v3 + 44) != 2004)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 2004;
          operator new();
        }
        unsigned int v35 = (const CoreML::Specification::CoreMLModels::Gazetteer *)*((void *)a2 + 4);
        int v72 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::CoreMLModels::Gazetteer::MergeFrom(v72, v35);
        break;
      case 2005:
        if (*(_DWORD *)(v3 + 44) != 2005)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 2005;
          operator new();
        }
        int v36 = (const CoreML::Specification::CoreMLModels::WordEmbedding *)*((void *)a2 + 4);
        uint64_t v73 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::CoreMLModels::WordEmbedding::MergeFrom(v73, v36);
        break;
      case 2006:
        if (*(_DWORD *)(v3 + 44) != 2006)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 2006;
          operator new();
        }
        BOOL v37 = (const CoreML::Specification::CoreMLModels::AudioFeaturePrint *)*((void *)a2 + 4);
        int v74 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::CoreMLModels::AudioFeaturePrint::MergeFrom(v74, v37);
        break;
      default:
        if (v10 == 900)
        {
          if (*(_DWORD *)(v3 + 44) != 900)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 900;
            operator new();
          }
          uint64_t v83 = *(void *)(*((void *)a2 + 4) + 8);
          if (v83)
          {
            int v84 = (unint64_t *)(*(void *)(v3 + 32) + 8);
            this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v84, v83 & 0xFFFFFFFFFFFFFFFELL);
          }
        }
        else if (v10 == 3000)
        {
          if (*(_DWORD *)(v3 + 44) != 3000)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 3000;
            operator new();
          }
          uint64_t v26 = (const CoreML::Specification::SerializedModel *)*((void *)a2 + 4);
          unsigned int v63 = *(std::string **)(v3 + 32);
          this = CoreML::Specification::SerializedModel::MergeFrom(v63, v26);
        }
        break;
    }
  }
  else
  {
    switch(v10)
    {
      case 600:
        if (*(_DWORD *)(v3 + 44) != 600)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 600;
          operator new();
        }
        uint64_t v12 = (const CoreML::Specification::OneHotEncoder *)*((void *)a2 + 4);
        uint64_t v48 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::OneHotEncoder::MergeFrom(v48, v12);
        break;
      case 601:
        if (*(_DWORD *)(v3 + 44) != 601)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 601;
          operator new();
        }
        uint64_t v13 = (const CoreML::Specification::Imputer *)*((void *)a2 + 4);
        char v49 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::Imputer::MergeFrom(v49, v13);
        break;
      case 602:
        if (*(_DWORD *)(v3 + 44) != 602)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 602;
          operator new();
        }
        int v14 = (const CoreML::Specification::FeatureVectorizer *)*((void *)a2 + 4);
        uint64_t v50 = *(unint64_t **)(v3 + 32);
        this = (std::string *)CoreML::Specification::FeatureVectorizer::MergeFrom(v50, v14);
        break;
      case 603:
        if (*(_DWORD *)(v3 + 44) != 603)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 603;
          operator new();
        }
        int v15 = (const CoreML::Specification::DictVectorizer *)*((void *)a2 + 4);
        int v51 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::DictVectorizer::MergeFrom(v51, v15);
        break;
      case 604:
        if (*(_DWORD *)(v3 + 44) != 604)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 604;
          operator new();
        }
        BOOL v16 = (const CoreML::Specification::Scaler *)*((void *)a2 + 4);
        unsigned int v52 = *(unint64_t **)(v3 + 32);
        this = (std::string *)CoreML::Specification::Scaler::MergeFrom(v52, v16);
        break;
      case 605:
      case 608:
        return this;
      case 606:
        if (*(_DWORD *)(v3 + 44) != 606)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 606;
          operator new();
        }
        int v17 = (const CoreML::Specification::CategoricalMapping *)*((void *)a2 + 4);
        int v53 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::CategoricalMapping::MergeFrom(v53, v17);
        break;
      case 607:
        if (*(_DWORD *)(v3 + 44) != 607)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 607;
          operator new();
        }
        uint64_t v11 = *(void *)(v3 + 32);
        uint64_t v18 = *((void *)a2 + 4);
        uint64_t v54 = *(void *)(v18 + 8);
        if (v54) {
          this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v11 + 8), v54 & 0xFFFFFFFFFFFFFFFELL);
        }
        int v55 = *(_DWORD *)(v18 + 16);
        if (v55) {
          *(_DWORD *)(v11 + 16) = v55;
        }
        break;
      case 609:
        if (*(_DWORD *)(v3 + 44) != 609)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 609;
          operator new();
        }
        uint64_t v19 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 4);
        uint64_t v56 = *(unint64_t **)(v3 + 32);
        this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v56, v19);
        break;
      case 610:
        if (*(_DWORD *)(v3 + 44) != 610)
        {
          CoreML::Specification::Model::clear_Type(v3);
          *(_DWORD *)(v3 + 44) = 610;
          operator new();
        }
        int v20 = (const CoreML::Specification::NonMaximumSuppression *)*((void *)a2 + 4);
        char v57 = *(std::string **)(v3 + 32);
        this = CoreML::Specification::NonMaximumSuppression::MergeFrom(v57, v20);
        break;
      default:
        if (v10 == 560)
        {
          if (*(_DWORD *)(v3 + 44) != 560)
          {
            CoreML::Specification::Model::clear_Type(v3);
            *(_DWORD *)(v3 + 44) = 560;
            operator new();
          }
          uint64_t v47 = (const CoreML::Specification::ClassConfidenceThresholding *)*((void *)a2 + 4);
          int v86 = *(unint64_t **)(v3 + 32);
          this = (std::string *)CoreML::Specification::ClassConfidenceThresholding::MergeFrom(v86, v47);
        }
        break;
    }
  }
  return this;
}

void sub_1DC0882B8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ModelDescription::MergeFrom(std::string *this, const CoreML::Specification::ModelDescription *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    signed int v6 = (const CoreML::Specification::FeatureDescription **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    uint64_t v11 = (const CoreML::Specification::FeatureDescription **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)((char *)v3 + 40), (std::string **)v12, v11, v10, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v13 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v10;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
    int v14 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  unsigned int v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    BOOL v16 = (const CoreML::Specification::FeatureDescription **)(*((void *)a2 + 10) + 8);
    int v17 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[2].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 18));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)((char *)v3 + 64), (std::string **)v17, v16, v15, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    signed int v18 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v15;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v18;
    uint64_t v19 = (signed int *)v3[3].__r_.__value_.__l.__size_;
    if (*v19 < v18) {
      *uint64_t v19 = v18;
    }
  }
  unsigned int v20 = *((_DWORD *)a2 + 24);
  if (v20)
  {
    uint64_t v21 = (const CoreML::Specification::FunctionDescription **)(*((void *)a2 + 13) + 8);
    int v22 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[3].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 24));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FunctionDescription>::TypeHandler>((std::string *)((char *)v3 + 88), (std::string **)v22, v21, v20, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    signed int v23 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v20;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v23;
    unint64_t v24 = (signed int *)v3[4].__r_.__value_.__l.__size_;
    if (*v24 < v23) {
      signed int *v24 = v23;
    }
  }
  unsigned int v25 = *((_DWORD *)a2 + 30);
  if (v25)
  {
    uint64_t v26 = (const CoreML::Specification::FeatureDescription **)(*((void *)a2 + 16) + 8);
    uint64_t v27 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[4].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 30));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)((char *)v3 + 112), (std::string **)v27, v26, v25, *(_DWORD *)v3[5].__r_.__value_.__l.__size_ - LODWORD(v3[5].__r_.__value_.__l.__data_));
    signed int v28 = LODWORD(v3[5].__r_.__value_.__l.__data_) + v25;
    LODWORD(v3[5].__r_.__value_.__l.__data_) = v28;
    int v29 = (signed int *)v3[5].__r_.__value_.__l.__size_;
    if (*v29 < v28) {
      signed int *v29 = v28;
    }
  }
  uint64_t v30 = *((void *)a2 + 17);
  if (*(char *)(v30 + 23) < 0)
  {
    if (!*(void *)(v30 + 8)) {
      goto LABEL_26;
    }
  }
  else if (!*(unsigned char *)(v30 + 23))
  {
    goto LABEL_26;
  }
  this = (std::string *)((char *)v3 + 136);
  BOOL v31 = (uint64_t *)v3[5].__r_.__value_.__r.__words[2];
  if (v31 != (uint64_t *)v30)
  {
    if (v31 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v30);
    }
    this = std::string::operator=((std::string *)v3[5].__r_.__value_.__r.__words[2], (const std::string *)v30);
  }
LABEL_26:
  uint64_t v32 = *((void *)a2 + 18);
  if (*(char *)(v32 + 23) < 0)
  {
    if (!*(void *)(v32 + 8)) {
      goto LABEL_34;
    }
  }
  else if (!*(unsigned char *)(v32 + 23))
  {
    goto LABEL_34;
  }
  this = v3 + 6;
  data = (uint64_t *)v3[6].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v32)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v32);
    }
    this = std::string::operator=((std::string *)v3[6].__r_.__value_.__l.__data_, (const std::string *)v32);
  }
LABEL_34:
  uint64_t v34 = *((void *)a2 + 19);
  if (*(char *)(v34 + 23) < 0)
  {
    if (!*(void *)(v34 + 8)) {
      goto LABEL_42;
    }
  }
  else if (!*(unsigned char *)(v34 + 23))
  {
    goto LABEL_42;
  }
  this = (std::string *)((char *)v3 + 152);
  unsigned int v35 = (uint64_t *)v3[6].__r_.__value_.__l.__size_;
  if (v35 != (uint64_t *)v34)
  {
    if (v35 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v34);
    }
    this = std::string::operator=((std::string *)v3[6].__r_.__value_.__l.__size_, (const std::string *)v34);
  }
LABEL_42:
  if (a2 != (const CoreML::Specification::ModelDescription *)&CoreML::Specification::_ModelDescription_default_instance_
    && *((void *)a2 + 20))
  {
    if (!v3[6].__r_.__value_.__r.__words[2]) {
      operator new();
    }
    int v36 = (const CoreML::Specification::Metadata *)*((void *)a2 + 20);
    BOOL v37 = (CoreML::Specification::Metadata *)v3[6].__r_.__value_.__r.__words[2];
    return CoreML::Specification::Metadata::MergeFrom(v37, v36);
  }
  return this;
}

void sub_1DC088958(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FB0D5B10);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::PipelineClassifier::MergeFrom(std::string *this, const CoreML::Specification::PipelineClassifier *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::PipelineClassifier *)&CoreML::Specification::_PipelineClassifier_default_instance_
    && v5 != 0)
  {
    if (!v3->__r_.__value_.__r.__words[2]) {
      operator new();
    }
    if (v5) {
      uint64_t v7 = (const CoreML::Specification::Pipeline *)*((void *)a2 + 2);
    }
    else {
      uint64_t v7 = (const CoreML::Specification::Pipeline *)&CoreML::Specification::_Pipeline_default_instance_;
    }
    signed int v8 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
    return (std::string *)CoreML::Specification::Pipeline::MergeFrom(v8, v7);
  }
  return this;
}

void sub_1DC088A38(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40759568C3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::PipelineRegressor::MergeFrom(std::string *this, const CoreML::Specification::PipelineRegressor *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::PipelineRegressor *)&CoreML::Specification::_PipelineRegressor_default_instance_
    && v5 != 0)
  {
    if (!v3->__r_.__value_.__r.__words[2]) {
      operator new();
    }
    if (v5) {
      uint64_t v7 = (const CoreML::Specification::Pipeline *)*((void *)a2 + 2);
    }
    else {
      uint64_t v7 = (const CoreML::Specification::Pipeline *)&CoreML::Specification::_Pipeline_default_instance_;
    }
    signed int v8 = (unint64_t *)v3->__r_.__value_.__r.__words[2];
    return (std::string *)CoreML::Specification::Pipeline::MergeFrom(v8, v7);
  }
  return this;
}

void sub_1DC088B18(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40759568C3);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::Pipeline::MergeFrom(unint64_t *this, const CoreML::Specification::Pipeline *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v33 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v32 = this;
    uint64_t v6 = *(int *)v3[4];
    uint64_t v7 = *((int *)v3 + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      unsigned int v10 = (CoreML::Specification::Model **)this;
      uint64_t v11 = (CoreML::Specification::Model **)(v33 + 8);
      do
      {
        signed int v13 = *v11++;
        uint64_t v12 = v13;
        int v14 = *v10++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::Model>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      unsigned int v15 = (google::protobuf::Arena *)v3[2];
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      signed int v18 = (google::protobuf::Arena ***)((char *)v32 + v17);
      uint64_t v19 = (CoreML::Specification::Model **)(v17 + v33 + 8);
      do
      {
        unsigned int v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::Model::Model((CoreML::Specification::Model *)Aligned);
        int v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        unsigned int *v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Model>;
        signed int v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::Model>::Merge(v20, (CoreML::Specification::Model *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v25;
    uint64_t v26 = (int *)v3[4];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  unsigned int v27 = *((_DWORD *)a2 + 12);
  if (v27)
  {
    signed int v28 = (const std::string **)(*((void *)a2 + 7) + 8);
    int v29 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 5), v27);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)(v3 + 5), (std::string **)v29, v28, v27, *(_DWORD *)v3[7] - *((_DWORD *)v3 + 12));
    signed int v30 = *((_DWORD *)v3 + 12) + v27;
    *((_DWORD *)v3 + 12) = v30;
    BOOL v31 = (signed int *)v3[7];
    if (*v31 < v30) {
      *BOOL v31 = v30;
    }
  }
  return this;
}

void sub_1DC088D4C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4065E65A88);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::SerializedModel::MergeFrom(std::string *this, const CoreML::Specification::SerializedModel *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    return this;
  }
  data = (std::string *)v3[1].__r_.__value_.__l.__data_;
  uint64_t v8 = (uint64_t)&v3[1];
  this = data;
  if (data != (std::string *)v7)
  {
    if (this == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v8, v7);
    }
    return std::string::operator=(this, (const std::string *)v7);
  }
  return this;
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(std::string *result, std::string **a2, const std::string **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      signed int v13 = v14;
      unsigned int v15 = *v12++;
      double result = std::string::operator=(v15, v13);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    signed int v18 = *v9;
    uint64_t v19 = &a2[a5];
    unsigned int v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      Aligned->__r_.__value_.__l.__size_ = 0;
      Aligned->__r_.__value_.__r.__words[2] = 0;
      Aligned->__r_.__value_.__r.__words[0] = 0;
      signed int v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *signed int v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
      unint64_t v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      double result = std::string::operator=(Aligned, v21);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t google::protobuf::internal::GenericTypeHandler<CoreML::Specification::Model>::Merge(CoreML::Specification::Model *a1, CoreML::Specification::Model *this)
{
  return CoreML::Specification::Model::MergeFrom(this, a1);
}

CoreML::Specification::Model *CoreML::Specification::Model::Model(CoreML::Specification::Model *this)
{
  *(void *)this = &unk_1F3624FC8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Model *)&CoreML::Specification::_Model_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 21) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_1DC089014(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::Model>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(std::string *result, std::string **a2, const CoreML::Specification::FeatureDescription **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      signed int v13 = v14;
      unsigned int v15 = *v12++;
      double result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureDescription>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    signed int v18 = *v9;
    uint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    unsigned int v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::FeatureDescription::FeatureDescription((CoreML::Specification::FeatureDescription *)Aligned);
      signed int v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *signed int v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureDescription>;
      unint64_t v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      double result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureDescription>::Merge(v21, (std::string *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1DC089170(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C400A278675);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FunctionDescription>::TypeHandler>(std::string *result, std::string **a2, const CoreML::Specification::FunctionDescription **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      signed int v13 = v14;
      unsigned int v15 = *v12++;
      double result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FunctionDescription>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    signed int v18 = *v9;
    uint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    unsigned int v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::FunctionDescription::FunctionDescription((CoreML::Specification::FunctionDescription *)Aligned);
      signed int v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *signed int v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FunctionDescription>;
      unint64_t v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      double result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FunctionDescription>::Merge(v21, (std::string *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1DC0892B8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FD9EAC30);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::Metadata::MergeFrom(CoreML::Specification::Metadata *this, const CoreML::Specification::Metadata *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double result = (std::string *)google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MergeFrom((uint64_t)this + 16, *((void **)a2 + 5));
  uint64_t v6 = *((void *)a2 + 6);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_11;
  }
  double result = (std::string *)((char *)this + 48);
  uint64_t v7 = (uint64_t *)*((void *)this + 6);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, v6);
    }
    double result = std::string::operator=(*((std::string **)this + 6), (const std::string *)v6);
  }
LABEL_11:
  uint64_t v8 = *((void *)a2 + 7);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_19;
  }
  double result = (std::string *)((char *)this + 56);
  uint64_t v9 = (uint64_t *)*((void *)this + 7);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, v8);
    }
    double result = std::string::operator=(*((std::string **)this + 7), (const std::string *)v8);
  }
LABEL_19:
  uint64_t v10 = *((void *)a2 + 8);
  if (*(char *)(v10 + 23) < 0)
  {
    if (!*(void *)(v10 + 8)) {
      goto LABEL_27;
    }
  }
  else if (!*(unsigned char *)(v10 + 23))
  {
    goto LABEL_27;
  }
  double result = (std::string *)((char *)this + 64);
  uint64_t v11 = (uint64_t *)*((void *)this + 8);
  if (v11 != (uint64_t *)v10)
  {
    if (v11 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, v10);
    }
    double result = std::string::operator=(*((std::string **)this + 8), (const std::string *)v10);
  }
LABEL_27:
  uint64_t v12 = *((void *)a2 + 9);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(void *)(v12 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v12 + 23))
  {
    return result;
  }
  int v14 = (std::string *)*((void *)this + 9);
  signed int v13 = (char *)this + 72;
  double result = v14;
  if (v14 != (std::string *)v12)
  {
    if (result == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v13, v12);
    }
    return std::string::operator=(result, (const std::string *)v12);
  }
  return result;
}

void *google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MergeFrom(uint64_t a1, void *a2)
{
  double result = google::protobuf::Map<std::string,std::string>::begin(v9, a2);
  uint64_t v4 = v9[0];
  if (v9[0])
  {
    uint64_t v5 = a1 + 8;
    do
    {
      uint64_t v6 = *(const std::string **)(v4 + 24);
      uint64_t v7 = v6 + 1;
      uint64_t v8 = google::protobuf::Map<std::string,std::string>::operator[](v5, v6);
      std::string::operator=((std::string *)v8, v7);
      double result = google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v9);
      uint64_t v4 = v9[0];
    }
    while (v9[0]);
  }
  return result;
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FunctionDescription>::Merge(const CoreML::Specification::FunctionDescription *a1, std::string *a2)
{
  return CoreML::Specification::FunctionDescription::MergeFrom(a2, a1);
}

CoreML::Specification::FunctionDescription *CoreML::Specification::FunctionDescription::FunctionDescription(CoreML::Specification::FunctionDescription *this)
{
  *(void *)this = &unk_1F3616648;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CategoricalMapping::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  if (this != (CoreML::Specification::FunctionDescription *)&CoreML::Specification::_FunctionDescription_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
  }
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 28) = 0;
  return this;
}

void sub_1DC08959C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::FunctionDescription>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3) {
          (*(void (**)(void))(*(void *)*v3 + 8))(*v3);
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *CoreML::Specification::FunctionDescription::MergeFrom(std::string *this, const CoreML::Specification::FunctionDescription *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (const CoreML::Specification::FeatureDescription **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    uint64_t v11 = (const CoreML::Specification::FeatureDescription **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)((char *)v3 + 40), (std::string **)v12, v11, v10, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v13 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v10;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
    int v14 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  unsigned int v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    BOOL v16 = (const CoreML::Specification::FeatureDescription **)(*((void *)a2 + 10) + 8);
    int v17 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[2].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 18));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)((char *)v3 + 64), (std::string **)v17, v16, v15, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    signed int v18 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v15;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v18;
    uint64_t v19 = (signed int *)v3[3].__r_.__value_.__l.__size_;
    if (*v19 < v18) {
      *uint64_t v19 = v18;
    }
  }
  uint64_t v20 = *((void *)a2 + 11);
  if (*(char *)(v20 + 23) < 0)
  {
    if (!*(void *)(v20 + 8)) {
      goto LABEL_20;
    }
  }
  else if (!*(unsigned char *)(v20 + 23))
  {
    goto LABEL_20;
  }
  this = (std::string *)((char *)v3 + 88);
  uint64_t v21 = (uint64_t *)v3[3].__r_.__value_.__r.__words[2];
  if (v21 != (uint64_t *)v20)
  {
    if (v21 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v20);
    }
    this = std::string::operator=((std::string *)v3[3].__r_.__value_.__r.__words[2], (const std::string *)v20);
  }
LABEL_20:
  uint64_t v22 = *((void *)a2 + 12);
  if (*(char *)(v22 + 23) < 0)
  {
    if (!*(void *)(v22 + 8)) {
      goto LABEL_28;
    }
  }
  else if (!*(unsigned char *)(v22 + 23))
  {
    goto LABEL_28;
  }
  this = v3 + 4;
  data = (uint64_t *)v3[4].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v22)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v22);
    }
    this = std::string::operator=((std::string *)v3[4].__r_.__value_.__l.__data_, (const std::string *)v22);
  }
LABEL_28:
  uint64_t v24 = *((void *)a2 + 13);
  if (*(char *)(v24 + 23) < 0)
  {
    if (!*(void *)(v24 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v24 + 23))
  {
    return this;
  }
  uint64_t v26 = (std::string *)v3[4].__r_.__value_.__l.__size_;
  p_std::string::size_type size = (uint64_t)&v3[4].__r_.__value_.__l.__size_;
  this = v26;
  if (v26 != (std::string *)v24)
  {
    if (this == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(p_size, v24);
    }
    return std::string::operator=(this, (const std::string *)v24);
  }
  return this;
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureDescription>::Merge(const CoreML::Specification::FeatureDescription *a1, std::string *a2)
{
  return CoreML::Specification::FeatureDescription::MergeFrom(a2, a1);
}

CoreML::Specification::FeatureDescription *CoreML::Specification::FeatureDescription::FeatureDescription(CoreML::Specification::FeatureDescription *this)
{
  *(void *)this = &unk_1F361E9A8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::FeatureDescription *)&CoreML::Specification::_FeatureDescription_default_instance_) {
    CoreML::Specification::protobuf_Model_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 1CoreML::Specification::CategoricalMapping::New(this, 0) = 0;
  return this;
}

void sub_1DC0899A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureDescription>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *CoreML::Specification::FeatureDescription::MergeFrom(std::string *this, const CoreML::Specification::FeatureDescription *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  data = (uint64_t *)v3[1].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v7);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  if (a2 != (const CoreML::Specification::FeatureDescription *)&CoreML::Specification::_FeatureDescription_default_instance_
    && *((void *)a2 + 4))
  {
    if (!v3[1].__r_.__value_.__l.__size_) {
      operator new();
    }
    uint64_t v9 = (const CoreML::Specification::FeatureType *)*((void *)a2 + 4);
    std::string::size_type size = (std::string *)v3[1].__r_.__value_.__l.__size_;
    return CoreML::Specification::FeatureType::MergeFrom(size, v9);
  }
  return this;
}

void sub_1DC089B34(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40B6FDD44FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Model::IsInitialized(CoreML::Specification::Model *this)
{
  return 1;
}

uint64_t CoreML::Specification::Model::Clear(CoreML::Specification::Model *this)
{
  uint64_t v3 = (void *)((char *)this + 16);
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *(void *)((char *)v3 + 5) = 0;
  *uint64_t v3 = 0;
  return CoreML::Specification::Model::clear_Type((uint64_t)this);
}

void CoreML::Specification::Model::New(CoreML::Specification::Model *this, google::protobuf::Arena *a2)
{
}

void sub_1DC089C20(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4065E65A88);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Model>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Model>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Model>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Model::New(CoreML::Specification::Model *this)
{
}

void *CoreML::Specification::Model::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Model");
}

void CoreML::Specification::Model::~Model(CoreML::Specification::Model *this)
{
  CoreML::Specification::Model::~Model(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F3624FC8;
  if (this != (CoreML::Specification::Model *)&CoreML::Specification::_Model_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  if (*((_DWORD *)this + 11)) {
    CoreML::Specification::Model::clear_Type((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::ModelDescription::GetCachedSize(CoreML::Specification::ModelDescription *this)
{
  return *((unsigned int *)this + 42);
}

uint64_t CoreML::Specification::ModelDescription::SerializeWithCachedSizes(CoreML::Specification::ModelDescription *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    for (int i = 0; i != v4; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*((void *)this + 4) + 8 * i + 8), a2);
  }
  int v6 = *((_DWORD *)this + 12);
  if (v6)
  {
    for (int j = 0; j != v6; ++j)
      google::protobuf::internal::WireFormatLite::WriteMessage(10, *(void *)(*((void *)this + 7) + 8 * j + 8), a2);
  }
  signed int v8 = (unsigned int *)*((void *)this + 17);
  if (*((char *)v8 + 23) < 0)
  {
    uint64_t v9 = *((void *)v8 + 1);
    if (!v9) {
      goto LABEL_13;
    }
    signed int v8 = *(unsigned int **)v8;
    goto LABEL_12;
  }
  LODWORD(v9) = *((unsigned __int8 *)v8 + 23);
  if (*((unsigned char *)v8 + 23))
  {
LABEL_12:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v8, v9, 1, (uint64_t)"CoreML.Specification.ModelDescription.predictedFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xBu, *((void *)this + 17), a2);
  }
LABEL_13:
  unsigned int v10 = (unsigned int *)*((void *)this + 18);
  if (*((char *)v10 + 23) < 0)
  {
    uint64_t v11 = *((void *)v10 + 1);
    if (!v11) {
      goto LABEL_19;
    }
    unsigned int v10 = *(unsigned int **)v10;
    goto LABEL_18;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((unsigned char *)v10 + 23))
  {
LABEL_18:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.ModelDescription.predictedProbabilitiesName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCu, *((void *)this + 18), a2);
  }
LABEL_19:
  int v12 = *((_DWORD *)this + 18);
  if (v12)
  {
    for (int k = 0; k != v12; ++k)
      google::protobuf::internal::WireFormatLite::WriteMessage(13, *(void *)(*((void *)this + 10) + 8 * k + 8), a2);
  }
  int v14 = *((_DWORD *)this + 24);
  if (v14)
  {
    for (int m = 0; m != v14; ++m)
      google::protobuf::internal::WireFormatLite::WriteMessage(20, *(void *)(*((void *)this + 13) + 8 * m + 8), a2);
  }
  uint64_t result = *((void *)this + 19);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v17 = *(void *)(result + 8);
    if (!v17) {
      goto LABEL_31;
    }
    uint64_t result = *(void *)result;
    goto LABEL_30;
  }
  LODWORD(v17) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_30:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v17, 1, (uint64_t)"CoreML.Specification.ModelDescription.defaultFunctionName");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, *((void *)this + 19), a2);
  }
LABEL_31:
  int v18 = *((_DWORD *)this + 30);
  if (v18)
  {
    for (int n = 0; n != v18; ++n)
      uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage(50, *(void *)(*((void *)this + 16) + 8 * n + 8), a2);
  }
  if (this != (CoreML::Specification::ModelDescription *)&CoreML::Specification::_ModelDescription_default_instance_)
  {
    uint64_t v20 = *((void *)this + 20);
    if (v20)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage(100, v20, a2);
    }
  }
  return result;
}

uint64_t CoreML::Specification::ModelDescription::IsInitialized(CoreML::Specification::ModelDescription *this)
{
  return 1;
}

uint64_t CoreML::Specification::ModelDescription::Clear(CoreML::Specification::ModelDescription *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (CoreML::Specification::FeatureDescription **)(*((void *)this + 4) + 8);
    do
    {
      int v4 = *v3++;
      CoreML::Specification::FeatureDescription::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 12);
  if ((int)v5 >= 1)
  {
    int v6 = (CoreML::Specification::FeatureDescription **)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v7 = *v6++;
      CoreML::Specification::FeatureDescription::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 12) = 0;
  }
  uint64_t v8 = *((unsigned int *)this + 18);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (CoreML::Specification::FeatureDescription **)(*((void *)this + 10) + 8);
    do
    {
      unsigned int v10 = *v9++;
      CoreML::Specification::FeatureDescription::Clear(v10);
      --v8;
    }
    while (v8);
    *((_DWORD *)this + 18) = 0;
  }
  uint64_t v11 = *((unsigned int *)this + 24);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*((void *)this + 13) + 8);
    do
    {
      uint64_t v13 = *v12++;
      CoreML::Specification::FunctionDescription::Clear(v13);
      --v11;
    }
    while (v11);
    *((_DWORD *)this + 24) = 0;
  }
  uint64_t v14 = *((unsigned int *)this + 30);
  if ((int)v14 >= 1)
  {
    unsigned int v15 = (CoreML::Specification::FeatureDescription **)(*((void *)this + 16) + 8);
    do
    {
      BOOL v16 = *v15++;
      CoreML::Specification::FeatureDescription::Clear(v16);
      --v14;
    }
    while (v14);
    *((_DWORD *)this + 3CoreML::Specification::Model::New(this, 0) = 0;
  }
  uint64_t v17 = *((void *)this + 17);
  if ((uint64_t *)v17 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v17 + 23) < 0)
    {
      **(unsigned char **)uint64_t v17 = 0;
      *(void *)(v17 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v17 = 0;
      *(unsigned char *)(v17 + 23) = 0;
    }
  }
  uint64_t v18 = *((void *)this + 18);
  if ((uint64_t *)v18 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v18 + 23) < 0)
    {
      **(unsigned char **)uint64_t v18 = 0;
      *(void *)(v18 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v18 = 0;
      *(unsigned char *)(v18 + 23) = 0;
    }
  }
  uint64_t v19 = *((void *)this + 19);
  if ((uint64_t *)v19 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)uint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v19 = 0;
      *(unsigned char *)(v19 + 23) = 0;
    }
  }
  uint64_t result = *((void *)this + 20);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2CoreML::Specification::Model::New(this, 0) = 0;
  return result;
}

uint64_t CoreML::Specification::FeatureDescription::Clear(CoreML::Specification::FeatureDescription *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t CoreML::Specification::FunctionDescription::Clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(unsigned int *)(this + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (CoreML::Specification::FeatureDescription **)(*(void *)(this + 32) + 8);
    do
    {
      int v4 = *v3++;
      this = CoreML::Specification::FeatureDescription::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (CoreML::Specification::FeatureDescription **)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      this = CoreML::Specification::FeatureDescription::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 72);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (CoreML::Specification::FeatureDescription **)(*(void *)(v1 + 80) + 8);
    do
    {
      unsigned int v10 = *v9++;
      this = CoreML::Specification::FeatureDescription::Clear(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 72) = 0;
  }
  uint64_t v11 = *(void *)(v1 + 88);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
    }
  }
  uint64_t v12 = *(void *)(v1 + 96);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)uint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
    }
  }
  uint64_t v13 = *(void *)(v1 + 104);
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)uint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
    }
  }
  return this;
}

void CoreML::Specification::ModelDescription::New(CoreML::Specification::ModelDescription *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08A3D0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40E043F9A7);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ModelDescription>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ModelDescription>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ModelDescription>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::ModelDescription::New(CoreML::Specification::ModelDescription *this)
{
}

void *CoreML::Specification::ModelDescription::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ModelDescription");
}

void CoreML::Specification::ModelDescription::~ModelDescription(CoreML::Specification::ModelDescription *this)
{
  CoreML::Specification::ModelDescription::~ModelDescription(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(void *)this = &unk_1F361D7D8;
  uint64_t v2 = *((void *)this + 17);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  int v4 = *((void *)this + 18);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  int v6 = *((void *)this + 19);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1E0198C00](v6, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::ModelDescription *)&CoreML::Specification::_ModelDescription_default_instance_)
  {
    uint64_t v7 = *((void *)this + 20);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 14);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 11);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::FunctionDescription::GetCachedSize(CoreML::Specification::FunctionDescription *this)
{
  return *((unsigned int *)this + 28);
}

uint64_t CoreML::Specification::FunctionDescription::SerializeWithCachedSizes(CoreML::Specification::FunctionDescription *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = (unsigned int *)*((void *)this + 11);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    int v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.FunctionDescription.name");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 11), a2);
  }
LABEL_7:
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(*((void *)this + 4) + 8 * i + 8), a2);
  }
  int v8 = *((_DWORD *)this + 12);
  if (v8)
  {
    for (int j = 0; j != v8; ++j)
      google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(*((void *)this + 7) + 8 * j + 8), a2);
  }
  unsigned int v10 = (unsigned int *)*((void *)this + 12);
  if (*((char *)v10 + 23) < 0)
  {
    uint64_t v11 = *((void *)v10 + 1);
    if (!v11) {
      goto LABEL_19;
    }
    unsigned int v10 = *(unsigned int **)v10;
    goto LABEL_18;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((unsigned char *)v10 + 23))
  {
LABEL_18:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.FunctionDescription.predictedFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4u, *((void *)this + 12), a2);
  }
LABEL_19:
  uint64_t result = *((void *)this + 13);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v13 = *(void *)(result + 8);
    if (!v13) {
      goto LABEL_25;
    }
    uint64_t result = *(void *)result;
    goto LABEL_24;
  }
  LODWORD(v13) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_24:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v13, 1, (uint64_t)"CoreML.Specification.FunctionDescription.predictedProbabilitiesName");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(5u, *((void *)this + 13), a2);
  }
LABEL_25:
  int v14 = *((_DWORD *)this + 18);
  if (v14)
  {
    for (int k = 0; k != v14; ++k)
      uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage(6, *(void *)(*((void *)this + 10) + 8 * k + 8), a2);
  }
  return result;
}

uint64_t CoreML::Specification::FunctionDescription::MergePartialFromCodedStream(CoreML::Specification::FunctionDescription *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v4 = (CoreML::Specification::FunctionDescription *)((char *)this + 64);
  uint64_t v5 = (std::string **)((char *)this + 104);
  int v6 = (std::string **)((char *)this + 96);
  uint64_t v7 = (CoreML::Specification::FunctionDescription *)((char *)this + 40);
  int v8 = (CoreML::Specification::FunctionDescription *)((char *)this + 16);
  uint64_t v9 = (std::string **)((char *)this + 88);
  while (2)
  {
    while (1)
    {
      unsigned int v10 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v11 = *v10;
      if (*v10 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v10 + 1;
      unint64_t v12 = v11 | 0x100000000;
      if ((v12 & 0x100000000) != 0) {
        goto LABEL_8;
      }
LABEL_36:
      if (v12) {
        BOOL v21 = (v12 & 7) == 4;
      }
      else {
        BOOL v21 = 1;
      }
      if (v21) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3) & 1) == 0) {
        goto LABEL_54;
      }
    }
    LODWORD(v11) = 0;
LABEL_7:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
    unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v12 & 0x100000000) == 0) {
      goto LABEL_36;
    }
LABEL_8:
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 10) {
          goto LABEL_36;
        }
        if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v9);
        if (!result) {
          return result;
        }
        unsigned int v15 = *v9;
        if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
        {
          unsigned int v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
          std::string::size_type size = (*v9)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
        }
        unsigned int v27 = "CoreML.Specification.FunctionDescription.name";
        goto LABEL_53;
      case 2u:
        if (v12 != 18) {
          goto LABEL_36;
        }
        uint64_t v17 = v8;
        goto LABEL_33;
      case 3u:
        if (v12 != 26) {
          goto LABEL_36;
        }
        uint64_t v17 = v7;
        goto LABEL_33;
      case 4u:
        if (v12 != 34) {
          goto LABEL_36;
        }
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
        if (!result) {
          return result;
        }
        unsigned int v15 = *v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          unsigned int v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
          std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        unsigned int v27 = "CoreML.Specification.FunctionDescription.predictedFeatureName";
        goto LABEL_53;
      case 5u:
        if (v12 != 42) {
          goto LABEL_36;
        }
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
        if (!result) {
          return result;
        }
        unsigned int v15 = *v5;
        if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
        {
          unsigned int v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
          std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
        }
        unsigned int v27 = "CoreML.Specification.FunctionDescription.predictedProbabilitiesName";
LABEL_53:
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v15, size, 0, (uint64_t)v27)) {
          goto LABEL_54;
        }
        continue;
      case 6u:
        if (v12 != 50) {
          goto LABEL_36;
        }
        uint64_t v17 = v4;
LABEL_33:
        uint64_t v18 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v17);
        uint64_t v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_54;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v19;
          *(void *)a2 = v19 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 13) = v24;
        if (v24 < 0 != v25) {
          goto LABEL_54;
        }
        int v26 = v22;
        uint64_t result = CoreML::Specification::FeatureDescription::MergePartialFromCodedStream((CoreML::Specification::FeatureDescription *)v18, a2, v23);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
          continue;
        }
LABEL_54:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_36;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  uint64_t v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      uint64_t v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  int *v2 = v4 + 1;
  int v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::FeatureDescription::FeatureDescription((CoreML::Specification::FeatureDescription *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  google::protobuf::internal::RepeatedPtrFieldBase *v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureDescription>;
  int v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  void v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1DC08ABF8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C400A278675);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FeatureDescription::MergePartialFromCodedStream(CoreML::Specification::FeatureDescription *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  int v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v8) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_32;
          }
          goto LABEL_8;
        }
        uint64_t v8 = *v7;
        if (*v7 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v7 + 1;
        unint64_t v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0) {
          goto LABEL_32;
        }
LABEL_8:
        unsigned int v11 = v9 >> 3;
        if (v9 >> 3 != 3) {
          break;
        }
        if (v9 != 26) {
          goto LABEL_32;
        }
        BOOL v16 = (CoreML::Specification::FeatureType *)*((void *)this + 4);
        if (!v16) {
          operator new();
        }
        uint64_t v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v17;
          *(void *)a2 = v17 + 1;
        }
        int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v22 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v22--, 1);
        *((_DWORD *)a2 + 13) = v22;
        if (v22 < 0 == v23)
        {
          int v24 = v20;
          uint64_t result = CoreML::Specification::FeatureType::MergePartialFromCodedStream(v16, a2, v21);
          if (!result) {
            return result;
          }
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v24)) {
            continue;
          }
        }
        return 0;
      }
      if (v11 != 2) {
        break;
      }
      if (v9 != 18) {
        goto LABEL_32;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
      if (!result) {
        return result;
      }
      int v14 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      BOOL v25 = "CoreML.Specification.FeatureDescription.shortDescription";
LABEL_47:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v14, size, 0, (uint64_t)v25)) {
        return 0;
      }
    }
    if (v11 == 1 && v9 == 10)
    {
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
      if (!result) {
        return result;
      }
      int v14 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
        std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      BOOL v25 = "CoreML.Specification.FeatureDescription.name";
      goto LABEL_47;
    }
LABEL_32:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC08AE78(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40B6FDD44FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FunctionDescription::IsInitialized(CoreML::Specification::FunctionDescription *this)
{
  return 1;
}

void CoreML::Specification::FunctionDescription::New(CoreML::Specification::FunctionDescription *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08AEFC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FD9EAC30);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FunctionDescription>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FunctionDescription>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FunctionDescription>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::FunctionDescription::New(CoreML::Specification::FunctionDescription *this)
{
}

void *CoreML::Specification::FunctionDescription::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FunctionDescription");
}

void CoreML::Specification::FunctionDescription::~FunctionDescription(CoreML::Specification::FunctionDescription *this)
{
  CoreML::Specification::FunctionDescription::~FunctionDescription(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  *(void *)this = &unk_1F3616648;
  uint64_t v2 = *((void *)this + 11);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  int v4 = *((void *)this + 12);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  int v6 = *((void *)this + 13);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1E0198C00](v6, 0x1012C40EC159624);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,std::string>::Init(uint64_t a1)
{
  uint64_t v2 = *(google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  google::protobuf::Map<std::string,std::string>::InnerMap::InnerMap(Aligned, v2);
  uint64_t result = google::protobuf::Arena::AllocateAligned(v2, 0, 24);
  *uint64_t result = (google::protobuf::Arena *)Aligned;
  result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<google::protobuf::Map<std::string,std::string>::InnerMap>;
  unint64_t v5 = (unint64_t *)((char *)v2 + 32);
  do
    unint64_t v6 = __ldxr(v5);
  while (__stxr((unint64_t)result, v5));
  result[2] = (google::protobuf::Arena *)v6;
  *(void *)(a1 + 16) = Aligned;
  return result;
}

void sub_1DC08B1D0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10E0C40D5F42F35);
  _Unwind_Resume(a1);
}

void *google::protobuf::Map<std::string,std::string>::~Map(void *a1)
{
  google::protobuf::Map<std::string,std::string>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,std::string>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<std::string,std::string>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        void v7[2] = v2;
        google::protobuf::Map<std::string,std::string>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

uint64_t google::protobuf::Map<std::string,std::string>::InnerMap::~InnerMap(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      do
      {
        uint64_t v4 = *(void *)(a1 + 32);
        uint64_t v5 = *(void *)(v4 + 8 * v3);
        if (v5)
        {
          if (v5 == *(void *)(v4 + 8 * (v3 ^ 1)))
          {
            uint64_t v7 = v3 + 1;
            *(void *)(v4 + 8 * (v3 + 1)) = 0;
            *(void *)(*(void *)(a1 + 32) + 8 * v3) = 0;
            uint64_t v8 = *(uint64_t **)v5;
            do
            {
              unint64_t v9 = (void **)v8[4];
              uint64_t v10 = (uint64_t *)v8[1];
              unsigned int v11 = v8;
              if (v10)
              {
                do
                {
                  unint64_t v12 = v10;
                  uint64_t v10 = (uint64_t *)*v10;
                }
                while (v10);
              }
              else
              {
                do
                {
                  unint64_t v12 = (uint64_t *)v11[2];
                  BOOL v13 = *v12 == (void)v11;
                  unsigned int v11 = v12;
                }
                while (!v13);
              }
              std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v5, v8);
              google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode(a1, v9);
              uint64_t v8 = v12;
            }
            while (v12 != (uint64_t *)(v5 + 8));
            google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree(a1, (void **)v5);
            goto LABEL_17;
          }
          *(void *)(v4 + 8 * v3) = 0;
          do
          {
            uint64_t v6 = *(void *)(v5 + 32);
            google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode(a1, (void **)v5);
            uint64_t v5 = v6;
          }
          while (v6);
        }
        uint64_t v7 = v3;
LABEL_17:
        uint64_t v3 = v7 + 1;
        unint64_t v2 = *(void *)(a1 + 8);
      }
      while (v7 + 1 < v2);
    }
    *(void *)a1 = 0;
    *(void *)(a1 + 24) = v2;
    if (!*(void *)(a1 + 40)) {
      operator delete(*(void **)(a1 + 32));
    }
  }
  return a1;
}

void google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode(uint64_t a1, void **__p)
{
  if (*((char *)__p + 23) < 0) {
    operator delete(*__p);
  }
  if (!*(void *)(a1 + 40))
  {
    operator delete(__p);
  }
}

void std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (uint64_t *)a2[1];
  if (v4)
  {
    do
    {
      uint64_t v5 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    uint64_t v6 = a2;
    do
    {
      uint64_t v5 = (uint64_t *)v6[2];
      BOOL v7 = *v5 == (void)v6;
      uint64_t v6 = v5;
    }
    while (!v7);
  }
  if (*(uint64_t **)a1 == a2) {
    *(void *)a1 = v5;
  }
  --*(void *)(a1 + 24);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(a1 + 8), a2);
  if (!*(void *)(a1 + 16))
  {
    operator delete(a2);
  }
}

__n128 google::protobuf::Map<std::string,std::string>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      if (*(char *)(v7 + 47) < 0) {
        operator delete(*(void **)(v7 + 24));
      }
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x1E0198C00](v7, 0x1012C403467C318);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(const void ***)(v6 + 32);
  if (v8) {
    goto LABEL_9;
  }
  int v29 = 0;
  if (google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    BOOL v13 = v29[1];
    if (v13)
    {
      do
      {
        int v14 = (const void ***)v13;
        BOOL v13 = (const void **)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        int v14 = *(const void ****)(v12 + 16);
        BOOL v15 = *v14 == (const void **)v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    int v29 = v14;
    if (v14 != (const void ***)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_9:
      *a3 = (uint64_t)v8;
      goto LABEL_21;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_21:
  BOOL v16 = (void *)a2[2];
  int v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  uint64_t v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_27:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_28;
  }
  BOOL v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::find<std::string *>(v21, v29 + 4);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,std::string>::InnerMap::DestroyTree((uint64_t)v16, (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_27;
  }
LABEL_28:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

BOOL google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair>::revalidate_if_necessary(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(const void ***)a1;
  uint64_t v6 = *(void *)(a1 + 16) & (*(void *)(v4 + 8) - 1);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(v4 + 32);
  uint64_t v8 = *(void *)(v7 + 8 * v6);
  if ((const void **)v8 == v5) {
    return 1;
  }
  if (v8 && v8 != *(void *)(v7 + 8 * (v6 ^ 1)))
  {
    while (1)
    {
      uint64_t v8 = *(void *)(v8 + 32);
      if (!v8) {
        break;
      }
      if ((const void **)v8 == v5) {
        return 1;
      }
    }
  }
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(v4, v5, a2, (uint64_t)&v13);
  uint64_t v9 = v14;
  *(void *)(a1 + 16) = v14;
  uint64_t v10 = *(void *)(*(void *)(a1 + 8) + 32);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  return !v11 || v11 != *(void *)(v10 + 8 * (v9 ^ 1));
}

uint64_t google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void *)(a2 + 32);
  if (v2 == a1) {
    return v3;
  }
  *(void *)(v2 + 32) = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList();
  return v2;
}

void *google::protobuf::Map<std::string,std::string>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  uint64_t v4 = std::random_device::random_device[abi:ne180100](&v12);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v11[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v11);
  long long v10 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v11, &v10);
  std::random_device::~random_device(&v12);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  if (a2) {
    Aligned = google::protobuf::Arena::AllocateAligned(a2, MEMORY[0x1E4FBA3A0], 64);
  }
  else {
    Aligned = operator new(0x40uLL);
  }
  Aligned[2] = 0u;
  Aligned[3] = 0u;
  _OWORD *Aligned = 0u;
  Aligned[1] = 0u;
  a1[3] = 8;
  a1[4] = Aligned;
  a1[1] = 8;
  return a1;
}

void sub_1DC08B918(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC08B8BCLL);
}

std::random_device *std::random_device::random_device[abi:ne180100](std::random_device *a1)
{
  std::string::basic_string[abi:ne180100]<0>(&__token, "/dev/urandom");
  std::random_device::random_device(a1, &__token);
  if (SHIBYTE(__token.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__token.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_1DC08B99C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned int *std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](unsigned int *result)
{
  unsigned int v1 = *result;
  for (uint64_t i = 1; i != 257; ++i)
  {
    unsigned int v3 = v1 / 0x1F31D;
    unsigned int v4 = 16807 * (v1 % 0x1F31D);
    v3 *= 2836;
    BOOL v5 = v4 >= v3;
    unsigned int v6 = v4 - v3;
    if (v5) {
      int v7 = 0;
    }
    else {
      int v7 = 0x7FFFFFFF;
    }
    unsigned int v1 = v7 + v6;
    result[i] = v1;
  }
  unsigned int v8 = 16807 * (v1 % 0x1F31D);
  unsigned int v9 = 2836 * (v1 / 0x1F31D);
  BOOL v5 = v8 >= v9;
  unsigned int v10 = v8 - v9;
  if (v5) {
    int v11 = 0;
  }
  else {
    int v11 = 0x7FFFFFFF;
  }
  unsigned int v12 = v11 + v10;
  *__n128 result = v12;
  result[257] = v12;
  return result;
}

uint64_t std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>(uint64_t a1, void *a2)
{
  uint64_t result = a2[1];
  uint64_t v5 = result - *a2;
  if (result != *a2)
  {
    unint64_t v6 = v5 + 1;
    if (v5 == -1)
    {
      std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__independent_bits_engine((uint64_t)v10, a1, 0x40uLL);
      return std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__eval((uint64_t)v10);
    }
    else
    {
      unint64_t v7 = __clz(v6);
      uint64_t v8 = 63;
      if (((v6 << v7) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        uint64_t v8 = 64;
      }
      std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__independent_bits_engine((uint64_t)v10, a1, v8 - v7);
      do
        unint64_t v9 = std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__eval((uint64_t)v10);
      while (v9 >= v6);
      return *a2 + v9;
    }
  }
  return result;
}

uint64_t std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__independent_bits_engine(uint64_t result, uint64_t a2, unint64_t a3)
{
  *(void *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  if (a3 % 0x1E) {
    unint64_t v3 = a3 / 0x1E + 1;
  }
  else {
    unint64_t v3 = a3 / 0x1E;
  }
  unint64_t v4 = a3 / v3;
  *(void *)(result + 16) = a3 / v3;
  *(void *)(result + 24) = v3;
  unint64_t v5 = (-1 << (a3 / v3)) & 0x7FFFFFFE;
  if (a3 / v3 >= 0x40) {
    unint64_t v5 = 0;
  }
  *(void *)(result + 4CoreML::Specification::FunctionDescription::New(this, 0) = v5;
  if ((v5 ^ 0x7FFFFFFE) > v5 / v3)
  {
    ++v3;
    unint64_t v4 = a3 / v3;
    *(void *)(result + 16) = a3 / v3;
    *(void *)(result + 24) = v3;
    if (a3 / v3 > 0x3F)
    {
      *(void *)(result + 32) = v3 - a3 + (v3 << 6);
      *(void *)(result + 4CoreML::Specification::FunctionDescription::New(this, 0) = 0;
      LOBYTE(v4) = 64;
      goto LABEL_15;
    }
    *(void *)(result + 4CoreML::Specification::FunctionDescription::New(this, 0) = (-1 << v4) & 0x7FFFFFFE;
  }
  *(void *)(result + 32) = v3 + a3 / v3 * v3 - a3;
  if (v4 >= 0x3F)
  {
LABEL_15:
    *(void *)(result + 48) = 0;
    unsigned int v6 = -1;
    *(_DWORD *)(result + 56) = 0xFFFFFFFF >> -(char)v4;
    goto LABEL_16;
  }
  *(void *)(result + 48) = 0x3FFFFFFFuLL >> v4 << (v4 + 1);
  unsigned int v6 = -1;
  unsigned int v7 = 0xFFFFFFFF >> -(char)v4;
  if (!v4) {
    unsigned int v7 = 0;
  }
  *(_DWORD *)(result + 56) = v7;
  if (v4 <= 0x1E) {
    unsigned int v6 = 0xFFFFFFFF >> ~(_BYTE)v4;
  }
LABEL_16:
  *(_DWORD *)(result + 6CoreML::Specification::FunctionDescription::New(this, 0) = v6;
  return result;
}

uint64_t std::__independent_bits_engine<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>,unsigned long>::__eval(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = *(unsigned int **)a1;
    unint64_t v5 = *(void *)(a1 + 40);
    unint64_t v6 = *(void *)(a1 + 16);
    unsigned int v7 = **(_DWORD **)a1;
    unsigned int v8 = *(_DWORD *)(*(void *)a1 + 1028);
    do
    {
      do
      {
        unint64_t v9 = (char *)v4
           + (((unint64_t)((((unint64_t)(v8 - 1) << 7) * (unsigned __int128)0x8000000201uLL) >> 64) >> 3) & 0xFFC);
        v4[257] = *((_DWORD *)v9 + 1);
        unsigned int v10 = v7 / 0x1F31D;
        unsigned int v11 = 16807 * (v7 % 0x1F31D);
        v10 *= 2836;
        BOOL v12 = v11 >= v10;
        unsigned int v13 = v11 - v10;
        if (v12) {
          int v14 = 0;
        }
        else {
          int v14 = 0x7FFFFFFF;
        }
        unsigned int v7 = v14 + v13;
        *((_DWORD *)v9 + 1) = v7;
        unsigned int v8 = v4[257];
        unint64_t v15 = v8 - 1;
      }
      while (v5 <= v15);
      uint64_t v16 = v2 << v6;
      if (v6 >= 0x40) {
        uint64_t v16 = 0;
      }
      uint64_t v2 = v16 + (*(_DWORD *)(a1 + 56) & v15);
      ++v3;
    }
    while (v3 != v1);
    unsigned int *v4 = v7;
  }
  else
  {
    uint64_t v2 = 0;
  }
  unint64_t v17 = *(void *)(a1 + 24);
  if (v1 < v17)
  {
    unint64_t v18 = *(unsigned int **)a1;
    unint64_t v19 = *(void *)(a1 + 48);
    unint64_t v20 = *(void *)(a1 + 16);
    unsigned int v21 = **(_DWORD **)a1;
    unsigned int v22 = *(_DWORD *)(*(void *)a1 + 1028);
    do
    {
      do
      {
        BOOL v23 = (char *)v18
            + (((unint64_t)((((unint64_t)(v22 - 1) << 7) * (unsigned __int128)0x8000000201uLL) >> 64) >> 3) & 0xFFC);
        v18[257] = *((_DWORD *)v23 + 1);
        unsigned int v24 = v21 / 0x1F31D;
        unsigned int v25 = 16807 * (v21 % 0x1F31D);
        v24 *= 2836;
        BOOL v12 = v25 >= v24;
        unsigned int v26 = v25 - v24;
        if (v12) {
          int v27 = 0;
        }
        else {
          int v27 = 0x7FFFFFFF;
        }
        unsigned int v21 = v27 + v26;
        *((_DWORD *)v23 + 1) = v21;
        unsigned int v22 = v18[257];
        unint64_t v28 = v22 - 1;
      }
      while (v19 <= v28);
      uint64_t v29 = v2 << (v20 + 1);
      if (v20 >= 0x3F) {
        uint64_t v29 = 0;
      }
      uint64_t v2 = v29 + (*(_DWORD *)(a1 + 60) & v28);
      ++v1;
    }
    while (v1 != v17);
    unsigned int *v18 = v21;
  }
  return v2;
}

uint64_t CoreML::Specification::Metadata::GetCachedSize(CoreML::Specification::Metadata *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::Metadata::SerializeWithCachedSizes(CoreML::Specification::Metadata *this, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t v4 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    unint64_t v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.Metadata.shortDescription");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 6), a2);
  }
LABEL_7:
  unint64_t v6 = (unsigned int *)*((void *)this + 7);
  if (*((char *)v6 + 23) < 0)
  {
    uint64_t v7 = *((void *)v6 + 1);
    if (!v7) {
      goto LABEL_13;
    }
    unint64_t v6 = *(unsigned int **)v6;
    goto LABEL_12;
  }
  LODWORD(v7) = *((unsigned __int8 *)v6 + 23);
  if (*((unsigned char *)v6 + 23))
  {
LABEL_12:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v6, v7, 1, (uint64_t)"CoreML.Specification.Metadata.versionString");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, *((void *)this + 7), a2);
  }
LABEL_13:
  unsigned int v8 = (unsigned int *)*((void *)this + 8);
  if (*((char *)v8 + 23) < 0)
  {
    uint64_t v9 = *((void *)v8 + 1);
    if (!v9) {
      goto LABEL_19;
    }
    unsigned int v8 = *(unsigned int **)v8;
    goto LABEL_18;
  }
  LODWORD(v9) = *((unsigned __int8 *)v8 + 23);
  if (*((unsigned char *)v8 + 23))
  {
LABEL_18:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v8, v9, 1, (uint64_t)"CoreML.Specification.Metadata.author");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3u, *((void *)this + 8), a2);
  }
LABEL_19:
  uint64_t result = *((void *)this + 9);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v11 = *(void *)(result + 8);
    if (!v11) {
      goto LABEL_25;
    }
    uint64_t result = *(void *)result;
    goto LABEL_24;
  }
  LODWORD(v11) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_24:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v11, 1, (uint64_t)"CoreML.Specification.Metadata.license");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(4u, *((void *)this + 9), a2);
  }
LABEL_25:
  BOOL v12 = (unint64_t *)*((void *)this + 5);
  unint64_t v13 = *v12;
  if (!*v12) {
    return result;
  }
  if (!*((unsigned char *)a2 + 26))
  {
    if (v13 < 2 || !google::protobuf::io::CodedOutputStream::default_serialization_deterministic_) {
      goto LABEL_33;
    }
LABEL_32:
    operator new[]();
  }
  if (v13 >= 2 && *((unsigned char *)a2 + 27)) {
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = (uint64_t)google::protobuf::Map<std::string,std::string>::begin(v16, v12);
  uint64_t v14 = 0;
  while (v16[0])
  {
    unint64_t v15 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(*(google::protobuf::Arena **)(v16[0] + 24), (google::protobuf::Arena *)(*(void *)(v16[0] + 24) + 24), *((google::protobuf::Arena **)this + 2));
    if ((google::protobuf::Arena **)v14 != v15)
    {
      if (v14) {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
      }
      uint64_t v14 = (uint64_t)v15;
    }
    google::protobuf::internal::WireFormatLite::WriteMessage(100, v14, a2);
    CoreML::Specification::Metadata::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream *)const::Utf8Check::Check(*(unsigned int **)(v16[0] + 24));
    uint64_t result = (uint64_t)google::protobuf::Map<std::string,std::string>::InnerMap::iterator_base<google::protobuf::Map<std::string,std::string>::KeyValuePair const>::operator++(v16);
  }
  if (v14) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  return result;
}

void sub_1DC08C0E0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  unsigned int v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    int v91 = a2 - 24;
    int v92 = a2 - 16;
    uint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                unsigned int v41 = *(void **)v95;
                int v42 = *(void **)v9;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)uint64_t v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            uint64_t v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                uint64_t v47 = v9;
                do
                {
                  char v49 = *(void **)v47;
                  uint64_t v48 = (void *)*((void *)v47 + 1);
                  uint64_t v47 = v43;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      char v49 = *(void **)&v9[v50 - 8];
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        int v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    int v51 = v9;
LABEL_80:
                    *(void *)int v51 = v48;
                  }
                  uint64_t v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                int v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                if (result)
                {
                  int v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                uint64_t v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              long long v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  uint64_t v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    uint64_t v58 = *(void **)v56;
                    int v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      int v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    int v60 = *(void **)v56;
                  }
                  char v61 = &v98[8 * v54];
                  uint64_t v62 = *(void **)v61;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      unsigned int v63 = v56;
                      *(void *)char v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      uint64_t v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        int v60 = *(void **)v56;
                        int v66 = (void *)*((void *)v56 + 1);
                        if (std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v66))
                        {
                          int v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        int v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, v62);
                      char v61 = v63;
                    }
                    while (!result);
                    *(void *)unsigned int v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              int v68 = v98;
              do
              {
                char v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                int v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    int v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    int v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v73, v77);
                    if (result) {
                      int v78 = v77;
                    }
                    else {
                      int v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)int v68 = v78;
                  int v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    uint64_t v81 = &v98[8 * v80];
                    int v82 = *(void **)v81;
                    uint64_t v83 = *(void **)v73;
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        int v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        uint64_t v81 = &v98[8 * v80];
                        int v82 = *(void **)v81;
                        uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)int v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                int v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          uint64_t v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            unint64_t v15 = *(void **)v9;
            *(void *)uint64_t v9 = *(void *)v14;
            *(void *)uint64_t v14 = v15;
          }
          --a3;
          uint64_t v16 = *(void **)v9;
          unint64_t v17 = v9;
          if (a4) {
            break;
          }
          unint64_t v17 = v9;
          if (std::less<std::string>::operator()[abi:ne180100](*((void **)v9 - 1), *(void **)v9)) {
            break;
          }
          uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v95);
          if (result)
          {
            do
            {
              BOOL v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            uint64_t v32 = v9 + 8;
            do
            {
              uint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v9);
            }
            while (!result);
          }
          uint64_t v33 = a2;
          if (v9 < a2)
          {
            uint64_t v33 = a2;
            do
            {
              uint64_t v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v34);
            }
            while ((result & 1) != 0);
          }
          unsigned int v35 = a2;
          if (v9 < v33)
          {
            int v36 = *(void **)v9;
            BOOL v37 = *(void **)v33;
            do
            {
              *(void *)uint64_t v9 = v37;
              *(void *)uint64_t v33 = v36;
              do
              {
                int v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                int v36 = v38;
              }
              while (!std::less<std::string>::operator()[abi:ne180100](v16, v38));
              do
              {
                uint64_t v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                BOOL v37 = v39;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          int v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)int v40 = v16;
        }
        do
        {
          unint64_t v18 = v17;
          unint64_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          unint64_t v19 = v20;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v20, v16));
        uint64_t v97 = a3;
        unsigned int v21 = a2;
        if (v18 == (char *)v10)
        {
          unsigned int v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            BOOL v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v23, v16));
        }
        else
        {
          do
          {
            unsigned int v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v22, v16));
        }
        unsigned int v8 = (char *)v10;
        unsigned int v24 = a2;
        if (v17 < v21)
        {
          unsigned int v25 = *(void **)v21;
          unsigned int v26 = v17;
          int v27 = v21;
          do
          {
            *(void *)unsigned int v26 = v25;
            *(void *)int v27 = v19;
            do
            {
              unint64_t v18 = v26;
              unint64_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              unint64_t v19 = v28;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v28, v16));
            do
            {
              uint64_t v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              unsigned int v25 = v29;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)unsigned int v8 = *(void *)v18;
        }
        *(void *)unint64_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        uint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v8, (void **)v18);
      uint64_t v9 = v18 + 8;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

BOOL CoreML::Specification::Metadata::SerializeWithCachedSizes(google::protobuf::io::CodedOutputStream *)const::Utf8Check::Check(unsigned int *a1)
{
  uint64_t v1 = a1;
  if (*((char *)a1 + 23) < 0)
  {
    a1 = *(unsigned int **)a1;
    uint64_t v2 = *((void *)v1 + 1);
  }
  else
  {
    LODWORD(v2) = *((unsigned __int8 *)a1 + 23);
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String(a1, v2, 1, (uint64_t)"CoreML.Specification.Metadata.UserDefinedEntry.key");
  if (*((char *)v1 + 47) < 0)
  {
    uint64_t v3 = (unsigned int *)*((void *)v1 + 3);
    uint64_t v4 = *((void *)v1 + 4);
  }
  else
  {
    uint64_t v3 = v1 + 6;
    LODWORD(v4) = *((unsigned __int8 *)v1 + 47);
  }
  return google::protobuf::internal::WireFormatLite::VerifyUtf8String(v3, v4, 1, (uint64_t)"CoreML.Specification.Metadata.UserDefinedEntry.value");
}

BOOL std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(void **a1, void **a2, void **a3)
{
  unint64_t v6 = *a2;
  uint64_t v7 = *a1;
  BOOL v8 = std::less<std::string>::operator()[abi:ne180100](*a2, *a1);
  uint64_t v9 = *a3;
  BOOL result = std::less<std::string>::operator()[abi:ne180100](*a3, v6);
  if (v8)
  {
    if (result)
    {
      *a1 = v9;
    }
    else
    {
      *a1 = v6;
      *a2 = v7;
      unint64_t v13 = *a3;
      BOOL result = std::less<std::string>::operator()[abi:ne180100](*a3, v7);
      if (!result) {
        return result;
      }
      *a2 = v13;
    }
    *a3 = v7;
  }
  else if (result)
  {
    *a2 = v9;
    *a3 = v6;
    uint64_t v11 = *a2;
    uint64_t v12 = *a1;
    BOOL result = std::less<std::string>::operator()[abi:ne180100](*a2, *a1);
    if (result)
    {
      *a1 = v11;
      *a2 = v12;
    }
  }
  return result;
}

BOOL std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(void **a1, void **a2, void **a3, void **a4)
{
  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a2, a3);
  BOOL v8 = *a4;
  uint64_t v9 = *a3;
  BOOL result = std::less<std::string>::operator()[abi:ne180100](*a4, *a3);
  if (result)
  {
    *a3 = v8;
    *a4 = v9;
    uint64_t v11 = *a3;
    uint64_t v12 = *a2;
    BOOL result = std::less<std::string>::operator()[abi:ne180100](*a3, *a2);
    if (result)
    {
      *a2 = v11;
      *a3 = v12;
      unint64_t v13 = *a2;
      uint64_t v14 = *a1;
      BOOL result = std::less<std::string>::operator()[abi:ne180100](*a2, *a1);
      if (result)
      {
        *a1 = v13;
        *a2 = v14;
      }
    }
  }
  return result;
}

BOOL std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(void **a1, void **a2, void **a3, void **a4, void **a5)
{
  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a2, a3, a4);
  unint64_t v10 = *a5;
  uint64_t v11 = *a4;
  BOOL result = std::less<std::string>::operator()[abi:ne180100](*a5, *a4);
  if (result)
  {
    *a4 = v10;
    *a5 = v11;
    unint64_t v13 = *a4;
    uint64_t v14 = *a3;
    BOOL result = std::less<std::string>::operator()[abi:ne180100](*a4, *a3);
    if (result)
    {
      *a3 = v13;
      *a4 = v14;
      unint64_t v15 = *a3;
      uint64_t v16 = *a2;
      BOOL result = std::less<std::string>::operator()[abi:ne180100](*a3, *a2);
      if (result)
      {
        *a2 = v15;
        *a3 = v16;
        unint64_t v17 = *a2;
        unint64_t v18 = *a1;
        BOOL result = std::less<std::string>::operator()[abi:ne180100](*a2, *a1);
        if (result)
        {
          *a1 = v17;
          *a2 = v18;
        }
      }
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      unint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      BOOL v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      uint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    unint64_t v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        unint64_t v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          unint64_t v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      unint64_t v17 = a1;
LABEL_12:
      void *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    BOOL v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::Metadata::MergePartialFromCodedStream(CoreML::Specification::Metadata *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (google::protobuf::Arena **)((char *)this + 16);
  BOOL v5 = (void *)((char *)this + 24);
  uint64_t v50 = (std::string **)((char *)this + 64);
  int v51 = (std::string **)((char *)this + 72);
  unint64_t v6 = (std::string **)((char *)this + 56);
  uint64_t v7 = (std::string **)((char *)this + 48);
  while (1)
  {
    while (1)
    {
      BOOL v8 = *(unsigned __int8 **)a2;
      unint64_t v9 = *((void *)a2 + 1);
      if (*(void *)a2 < v9) {
        break;
      }
      LODWORD(v11) = 0;
LABEL_116:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
      unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v12 & 0x100000000) == 0) {
        goto LABEL_117;
      }
LABEL_9:
      switch(v12 >> 3)
      {
        case 1u:
          if (v12 != 10) {
            goto LABEL_117;
          }
          if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7)) {
            return 0;
          }
          uint64_t v14 = *v7;
          if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v43 = "CoreML.Specification.Metadata.shortDescription";
          goto LABEL_97;
        case 2u:
          if (v12 != 18) {
            goto LABEL_117;
          }
          if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6)) {
            return 0;
          }
          uint64_t v14 = *v6;
          if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v43 = "CoreML.Specification.Metadata.versionString";
          goto LABEL_97;
        case 3u:
          if (v12 != 26) {
            goto LABEL_117;
          }
          if (*v50 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v50, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v50)) {
            return 0;
          }
          uint64_t v14 = *v50;
          if (SHIBYTE((*v50)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v50)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v50)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v43 = "CoreML.Specification.Metadata.author";
          goto LABEL_97;
        case 4u:
          if (v12 != 34) {
            goto LABEL_117;
          }
          if (*v51 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v51, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v51)) {
            return 0;
          }
          uint64_t v14 = *v51;
          if (SHIBYTE((*v51)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v51)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v51)->__r_.__value_.__r.__words[2]);
          }
          uint64_t v43 = "CoreML.Specification.Metadata.license";
LABEL_97:
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v14, size, 0, (uint64_t)v43)) {
            return 0;
          }
          continue;
        default:
          if (v12 >> 3 != 100 || v12 != 34) {
            goto LABEL_117;
          }
          int64_t v52 = v4;
          int64_t v53 = v5;
          memset(&__p, 0, sizeof(__p));
          uint64_t v56 = 0;
          BOOL v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            unint64_t v18 = v5;
            unint64_t v19 = v4;
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              goto LABEL_111;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v21 = *((_DWORD *)a2 + 13);
          BOOL v22 = __OFSUB__(v21--, 1);
          *((_DWORD *)a2 + 13) = v21;
          if (v21 < 0 != v22)
          {
            unint64_t v18 = v5;
            unint64_t v19 = v4;
            goto LABEL_111;
          }
          int v23 = v20;
          unint64_t v18 = v5;
          unint64_t v19 = v4;
          unsigned int v24 = *(unsigned char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v24 != 10)
          {
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            memset(&__p, 0, sizeof(__p));
LABEL_69:
            int v36 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(*v52);
            if (v56 != v36)
            {
              if (v56) {
                (*((void (**)(void))*v56 + 1))();
              }
              uint64_t v56 = v36;
            }
            BOOL v37 = (std::string *)v36[2];
            *((_DWORD *)v36 + 10) |= 1u;
            if (v37 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
              google::protobuf::internal::ArenaStringPtr::CreateInstance();
            }
            std::string::operator=(v37, &__p);
            int v34 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v56
                   + 11))(v56, a2);
            if (v34) {
              __n128 v38 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::UseKeyAndValueFromEntry((uint64_t)&v52);
            }
            if ((*((uint64_t (**)(google::protobuf::Arena **, __n128))*v56 + 5))(v56, v38)) {
              goto LABEL_78;
            }
            goto LABEL_64;
          }
          *(void *)a2 = v24 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p)) {
            goto LABEL_111;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 1) {
            goto LABEL_69;
          }
          if (**(unsigned char **)a2 != 18) {
            goto LABEL_69;
          }
          uint64_t v25 = *(void *)v53[2];
          uint64_t v55 = (std::string *)google::protobuf::Map<std::string,std::string>::operator[]((uint64_t)v53, &__p);
          if (v25 == *(void *)v53[2]) {
            goto LABEL_69;
          }
          google::protobuf::io::CodedInputStream::Skip(a2, 1u);
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v55))
          {
            google::protobuf::Map<std::string,std::string>::erase(v53, (const void **)&__p.__r_.__value_.__l.__data_);
LABEL_111:
            BOOL v45 = 0;
            int v46 = 6;
            goto LABEL_103;
          }
          if (*(void *)a2 == *((void *)a2 + 1)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            *((unsigned char *)a2 + 36) = 1;
            goto LABEL_79;
          }
          unsigned int v26 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(*v52);
          if (v56 != v26)
          {
            if (v56) {
              (*((void (**)(void))*v56 + 1))();
            }
            uint64_t v56 = v26;
          }
          int v27 = v55;
          unint64_t v28 = v26[3];
          *((_DWORD *)v26 + 10) |= 2u;
          if (v28 == (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstance();
          }
          if (*((char *)v28 + 23) < 0)
          {
            uint64_t v29 = v27;
            operator delete(*(void **)v28);
            int v27 = v29;
          }
          long long v30 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
          *((void *)v28 + 2) = *((void *)&v27->__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v28 = v30;
          *((unsigned char *)&v27->__r_.__value_.__s + 23) = 0;
          v27->__r_.__value_.__s.__data_[0] = 0;
          google::protobuf::Map<std::string,std::string>::erase(v53, (const void **)&__p.__r_.__value_.__l.__data_);
          BOOL v31 = v56;
          *((_DWORD *)v56 + 10) |= 1u;
          uint64_t v32 = v31[2];
          if (v32 == (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstance();
          }
          if (*((char *)v32 + 23) < 0) {
            operator delete(*(void **)v32);
          }
          long long v33 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *((void *)v32 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)uint64_t v32 = v33;
          *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
          __p.__r_.__value_.__s.__data_[0] = 0;
          int v34 = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v56
                 + 11))(v56, a2);
          if (v34) {
            __n128 v35 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::UseKeyAndValueFromEntry((uint64_t)&v52);
          }
          if ((*((uint64_t (**)(google::protobuf::Arena **, __n128))*v56 + 5))(v56, v35))
          {
LABEL_78:
            uint64_t v56 = 0;
            if ((v34 & 1) == 0)
            {
              BOOL v45 = 0;
              int v46 = 6;
              goto LABEL_105;
            }
            goto LABEL_79;
          }
LABEL_64:
          if (!v34) {
            goto LABEL_111;
          }
LABEL_79:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v23)) {
            goto LABEL_111;
          }
          uint64_t v39 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? (unsigned int *)&__p
              : (unsigned int *)__p.__r_.__value_.__r.__words[0];
          int v40 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? HIBYTE(__p.__r_.__value_.__r.__words[2])
              : LODWORD(__p.__r_.__value_.__r.__words[1]);
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v39, v40, 0, (uint64_t)"CoreML.Specification.Metadata.UserDefinedEntry.key"))goto LABEL_111; {
          unsigned int v41 = (unsigned int *)v55;
          }
          if (SHIBYTE(v55->__r_.__value_.__r.__words[2]) < 0)
          {
            unsigned int v41 = (unsigned int *)v55->__r_.__value_.__r.__words[0];
            std::string::size_type v42 = v55->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(v42) = HIBYTE(v55->__r_.__value_.__r.__words[2]);
          }
          BOOL v44 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(v41, v42, 0, (uint64_t)"CoreML.Specification.Metadata.UserDefinedEntry.value");
          BOOL v45 = v44;
          if (v44) {
            int v46 = 0;
          }
          else {
            int v46 = 6;
          }
LABEL_103:
          if (v56) {
            (*((void (**)(google::protobuf::Arena **))*v56 + 1))(v56);
          }
LABEL_105:
          uint64_t v4 = v19;
          BOOL v5 = v18;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (!v45 && v46) {
            return 0;
          }
          break;
      }
    }
    int v10 = v8 + 1;
    uint64_t v11 = *v8;
    if ((char)*v8 < 1)
    {
      if ((unint64_t)v10 < v9)
      {
        int v13 = *v10;
        if ((v11 & ~v13) >= 0x80)
        {
          *(void *)a2 = v8 + 2;
          unint64_t v12 = (v11 + (v13 << 7) - 128) | 0x100000000;
          goto LABEL_9;
        }
      }
      goto LABEL_116;
    }
    *(void *)a2 = v10;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_117:
    if (!v12 || (v12 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
  }
    }
}

void sub_1DC08D5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::~Parser(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

double google::protobuf::Map<std::string,std::string>::erase(void *a1, const void **a2)
{
  google::protobuf::Map<std::string,std::string>::InnerMap::FindHelper(a1[2], a2, 0, (uint64_t)&v6);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,std::string>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::FunctionDescription::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627D78;
  return result;
}

__n128 google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  uint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  uint64_t v3 = google::protobuf::Map<std::string,std::string>::operator[](*(void *)(a1 + 8), (const std::string *)(a1 + 16));
  *(void *)(a1 + 4CoreML::Specification::FunctionDescription::New(this, 0) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  uint64_t v5 = *(void *)(v4 + 24);
  if ((uint64_t *)v5 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*((char *)v3 + 23) < 0) {
    operator delete(*v3);
  }
  __n128 result = *(__n128 *)v5;
  void v3[2] = *(google::protobuf::Arena **)(v5 + 16);
  *(__n128 *)uint64_t v3 = result;
  *(unsigned char *)(v5 + 23) = 0;
  *(unsigned char *)uint64_t v5 = 0;
  return result;
}

uint64_t CoreML::Specification::Metadata::IsInitialized(CoreML::Specification::Metadata *this)
{
  return 1;
}

void CoreML::Specification::Metadata::Clear(CoreML::Specification::Metadata *this)
{
  google::protobuf::Map<std::string,std::string>::clear((void *)this + 3);
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 7);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 8);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  uint64_t v5 = *((void *)this + 9);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
}

void CoreML::Specification::Metadata::New(CoreML::Specification::Metadata *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08D93C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FB0D5B10);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Metadata>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    __n128 result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *__n128 result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Metadata>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Metadata>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Metadata::New(CoreML::Specification::Metadata *this)
{
}

void *CoreML::Specification::Metadata::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Metadata");
}

void CoreML::Specification::Metadata::~Metadata(CoreML::Specification::Metadata *this)
{
  CoreML::Specification::Metadata::~Metadata(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(void *)this = &unk_1F36265C0;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  long long v6 = *((void *)this + 8);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1E0198C00](v6, 0x1012C40EC159624);
  }
  uint64_t v7 = *((void *)this + 9);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    MEMORY[0x1E0198C00](v7, 0x1012C40EC159624);
  }
  google::protobuf::Map<std::string,std::string>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::FeatureDescription::GetCachedSize(CoreML::Specification::FeatureDescription *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::FeatureDescription::SerializeWithCachedSizes(CoreML::Specification::FeatureDescription *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (unsigned int *)*((void *)this + 2);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.FeatureDescription.name");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  uint64_t result = *((void *)this + 3);
  if ((*(char *)(result + 23) & 0x80000000) == 0)
  {
    LODWORD(v7) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (v7)
  {
    uint64_t result = *(void *)result;
LABEL_12:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.FeatureDescription.shortDescription");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, *((void *)this + 3), a2);
  }
LABEL_13:
  if (this != (CoreML::Specification::FeatureDescription *)&CoreML::Specification::_FeatureDescription_default_instance_)
  {
    uint64_t v8 = *((void *)this + 4);
    if (v8)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage(3, v8, a2);
    }
  }
  return result;
}

uint64_t CoreML::Specification::FeatureDescription::IsInitialized(CoreML::Specification::FeatureDescription *this)
{
  return 1;
}

void CoreML::Specification::FeatureDescription::New(CoreML::Specification::FeatureDescription *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08DCCC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C400A278675);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FeatureDescription>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureDescription>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureDescription>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::FeatureDescription::New(CoreML::Specification::FeatureDescription *this)
{
}

void *CoreML::Specification::FeatureDescription::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FeatureDescription");
}

void CoreML::Specification::FeatureDescription::~FeatureDescription(CoreML::Specification::FeatureDescription *this)
{
  CoreML::Specification::FeatureDescription::~FeatureDescription(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  *(void *)this = &unk_1F361E9A8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::FeatureDescription *)&CoreML::Specification::_FeatureDescription_default_instance_)
  {
    long long v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::PipelineRegressor::GetCachedSize(CoreML::Specification::PipelineRegressor *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t *CoreML::Specification::PipelineRegressor::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::_PipelineRegressor_default_instance_)
  {
    uint64_t v3 = this[2];
    if (v3) {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v3, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::PipelineRegressor::IsInitialized(CoreML::Specification::PipelineRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::PipelineRegressor::Clear(CoreML::Specification::PipelineRegressor *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  return result;
}

void CoreML::Specification::PipelineRegressor::New(CoreML::Specification::PipelineRegressor *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08DFB0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::PipelineRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::PipelineRegressor>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::PipelineRegressor>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::PipelineRegressor::New(CoreML::Specification::PipelineRegressor *this)
{
}

void *CoreML::Specification::PipelineRegressor::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PipelineRegressor");
}

void CoreML::Specification::PipelineRegressor::~PipelineRegressor(CoreML::Specification::PipelineRegressor *this)
{
  CoreML::Specification::PipelineRegressor::~PipelineRegressor(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F361E320;
  if (this != (CoreML::Specification::PipelineRegressor *)&CoreML::Specification::_PipelineRegressor_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::PipelineClassifier::GetCachedSize(CoreML::Specification::PipelineClassifier *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t *CoreML::Specification::PipelineClassifier::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::_PipelineClassifier_default_instance_)
  {
    uint64_t v3 = this[2];
    if (v3) {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v3, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::PipelineClassifier::IsInitialized(CoreML::Specification::PipelineClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::PipelineClassifier::Clear(CoreML::Specification::PipelineClassifier *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  return result;
}

void CoreML::Specification::PipelineClassifier::New(CoreML::Specification::PipelineClassifier *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08E214(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::PipelineClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::PipelineClassifier>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::PipelineClassifier>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::PipelineClassifier::New(CoreML::Specification::PipelineClassifier *this)
{
}

void *CoreML::Specification::PipelineClassifier::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PipelineClassifier");
}

void CoreML::Specification::PipelineClassifier::~PipelineClassifier(CoreML::Specification::PipelineClassifier *this)
{
  CoreML::Specification::PipelineClassifier::~PipelineClassifier(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F361ECA0;
  if (this != (CoreML::Specification::PipelineClassifier *)&CoreML::Specification::_PipelineClassifier_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SerializedModel::GetCachedSize(CoreML::Specification::SerializedModel *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::SerializedModel::SerializeWithCachedSizes(CoreML::Specification::SerializedModel *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  LODWORD(v5) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v5, 1, (uint64_t)"CoreML.Specification.SerializedModel.identifier");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  uint64_t v6 = *((void *)this + 3);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    return result;
  }
  return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2u, v6, a2);
}

uint64_t CoreML::Specification::SerializedModel::IsInitialized(CoreML::Specification::SerializedModel *this)
{
  return 1;
}

uint64_t CoreML::Specification::SerializedModel::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  uint64_t v2 = *(void *)(this + 24);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  return this;
}

void CoreML::Specification::SerializedModel::New(CoreML::Specification::SerializedModel *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08E50C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SerializedModel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SerializedModel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SerializedModel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SerializedModel::New(CoreML::Specification::SerializedModel *this)
{
}

void *CoreML::Specification::SerializedModel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SerializedModel");
}

void CoreML::Specification::SerializedModel::~SerializedModel(CoreML::Specification::SerializedModel *this)
{
  *(void *)this = &unk_1F361CBF8;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1F361CBF8;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

uint64_t CoreML::Specification::SerializedModel::SharedDtor(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *(void *)(v1 + 24);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    JUMPOUT(0x1E0198C00);
  }
  return this;
}

void google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (uint64_t *)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        uint64_t v5 = *v3;
        if (*v3)
        {
          if (*(char *)(v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          MEMORY[0x1E0198C00](v5, 0x1012C40EC159624);
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t CoreML::Specification::Pipeline::IsInitialized(CoreML::Specification::Pipeline *this)
{
  return 1;
}

uint64_t CoreML::Specification::Pipeline::Clear(CoreML::Specification::Pipeline *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (CoreML::Specification::Model **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::Model::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  return google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(result + 16) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      if (*(char *)(*(void *)v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(result + 8) = 0;
  }
  return result;
}

void CoreML::Specification::Pipeline::New(CoreML::Specification::Pipeline *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08E8EC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40759568C3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Pipeline>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Pipeline>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Pipeline>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::Pipeline::New(CoreML::Specification::Pipeline *this)
{
}

void *CoreML::Specification::Pipeline::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Pipeline");
}

void CoreML::Specification::Pipeline::~Pipeline(CoreML::Specification::Pipeline *this)
{
  CoreML::Specification::Pipeline::~Pipeline(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F3626658;
  uint64_t v2 = (void *)((char *)this + 16);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

std::string *CoreML::Specification::FeatureDescription::CopyFrom(std::string *this, std::string *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    CoreML::Specification::FeatureDescription::Clear((CoreML::Specification::FeatureDescription *)this);
    return CoreML::Specification::FeatureDescription::MergeFrom(v4, (const CoreML::Specification::FeatureDescription *)a2);
  }
  return this;
}

std::string *CoreML::Specification::Metadata::CopyFrom(std::string *this, std::string *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (CoreML::Specification::Metadata *)this;
    CoreML::Specification::Metadata::Clear((CoreML::Specification::Metadata *)this);
    return CoreML::Specification::Metadata::MergeFrom(v4, (const CoreML::Specification::Metadata *)a2);
  }
  return this;
}

std::string *CoreML::Specification::FunctionDescription::CopyFrom(std::string *this, std::string *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    CoreML::Specification::FunctionDescription::Clear((uint64_t)this);
    return CoreML::Specification::FunctionDescription::MergeFrom(v4, (const CoreML::Specification::FunctionDescription *)a2);
  }
  return this;
}

CoreML::Specification::ModelDescription *CoreML::Specification::ModelDescription::ModelDescription(CoreML::Specification::ModelDescription *this, const CoreML::Specification::ModelDescription *a2)
{
  *(void *)this = &unk_1F361D7D8;
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  unint64_t v5 = (std::string *)((char *)this + 16);
  *(_OWORD *)((char *)this + 24) = 0u;
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((void *)a2 + 4);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::ModelDescription *)((char *)this + 16), *((_DWORD *)a2 + 6));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v5, (std::string **)v8, (const CoreML::Specification::FeatureDescription **)(v7 + 8), v6, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v9 = *((_DWORD *)this + 6) + v6;
    *((_DWORD *)this + 6) = v9;
    int v10 = (signed int *)*((void *)this + 4);
    if (*v10 < v9) {
      *int v10 = v9;
    }
  }
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  unsigned int v11 = *((_DWORD *)a2 + 12);
  if (v11)
  {
    uint64_t v12 = *((void *)a2 + 7);
    int v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::ModelDescription *)((char *)this + 40), *((_DWORD *)a2 + 12));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)((char *)this + 40), (std::string **)v13, (const CoreML::Specification::FeatureDescription **)(v12 + 8), v11, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v14 = *((_DWORD *)this + 12) + v11;
    *((_DWORD *)this + 12) = v14;
    uint64_t v15 = (signed int *)*((void *)this + 7);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 1CoreML::Specification::Pipeline::New(this, 0) = 0;
  unsigned int v16 = *((_DWORD *)a2 + 18);
  if (v16)
  {
    uint64_t v17 = *((void *)a2 + 10);
    unint64_t v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::ModelDescription *)((char *)this + 64), *((_DWORD *)a2 + 18));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)((char *)this + 64), (std::string **)v18, (const CoreML::Specification::FeatureDescription **)(v17 + 8), v16, **((_DWORD **)this + 10) - *((_DWORD *)this + 18));
    signed int v19 = *((_DWORD *)this + 18) + v16;
    *((_DWORD *)this + 18) = v19;
    int v20 = (signed int *)*((void *)this + 10);
    if (*v20 < v19) {
      *int v20 = v19;
    }
  }
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  unsigned int v21 = *((_DWORD *)a2 + 24);
  if (v21)
  {
    uint64_t v22 = *((void *)a2 + 13);
    int v23 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::ModelDescription *)((char *)this + 88), *((_DWORD *)a2 + 24));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FunctionDescription>::TypeHandler>((std::string *)((char *)this + 88), (std::string **)v23, (const CoreML::Specification::FunctionDescription **)(v22 + 8), v21, **((_DWORD **)this + 13) - *((_DWORD *)this + 24));
    signed int v24 = *((_DWORD *)this + 24) + v21;
    *((_DWORD *)this + 24) = v24;
    uint64_t v25 = (signed int *)*((void *)this + 13);
    if (*v25 < v24) {
      *uint64_t v25 = v24;
    }
  }
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  unsigned int v26 = *((_DWORD *)a2 + 30);
  if (v26)
  {
    uint64_t v27 = *((void *)a2 + 16);
    unint64_t v28 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::ModelDescription *)((char *)this + 112), *((_DWORD *)a2 + 30));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((std::string *)((char *)this + 112), (std::string **)v28, (const CoreML::Specification::FeatureDescription **)(v27 + 8), v26, **((_DWORD **)this + 16) - *((_DWORD *)this + 30));
    signed int v29 = *((_DWORD *)this + 30) + v26;
    *((_DWORD *)this + 3CoreML::Specification::Pipeline::New(this, 0) = v29;
    long long v30 = (signed int *)*((void *)this + 16);
    if (*v30 < v29) {
      signed int *v30 = v29;
    }
  }
  *((_DWORD *)this + 42) = 0;
  uint64_t v31 = *((void *)a2 + 1);
  if (v31) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v31 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v32 = *((void *)a2 + 17);
  if (*(char *)(v32 + 23) < 0) {
    uint64_t v33 = *(void *)(v32 + 8);
  }
  else {
    uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
  }
  if ((uint64_t *)v32 != &google::protobuf::internal::fixed_address_empty_string && v33) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, v32);
  }
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v34 = *((void *)a2 + 18);
  if (*(char *)(v34 + 23) < 0) {
    uint64_t v35 = *(void *)(v34 + 8);
  }
  else {
    uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  }
  if ((uint64_t *)v34 != &google::protobuf::internal::fixed_address_empty_string && v35) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, v34);
  }
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v36 = *((void *)a2 + 19);
  if (*(char *)(v36 + 23) < 0) {
    uint64_t v37 = *(void *)(v36 + 8);
  }
  else {
    uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
  }
  if ((uint64_t *)v36 != &google::protobuf::internal::fixed_address_empty_string && v37) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, v36);
  }
  if (a2 != (const CoreML::Specification::ModelDescription *)&CoreML::Specification::_ModelDescription_default_instance_
    && *((void *)a2 + 20))
  {
    operator new();
  }
  *((void *)this + 2CoreML::Specification::Pipeline::New(this, 0) = 0;
  return this;
}

void sub_1DC08EFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11, void *a12)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(a11);
  MEMORY[0x1E0198C00](v16, 0x10A1C40FB0D5B10);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v15);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v14);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v13);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v12);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(a12);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(a10);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::ModelDescription::CopyFrom(std::string *this, std::string *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    CoreML::Specification::ModelDescription::Clear((CoreML::Specification::ModelDescription *)this);
    return CoreML::Specification::ModelDescription::MergeFrom(v4, (const CoreML::Specification::ModelDescription *)a2);
  }
  return this;
}

uint64_t CoreML::Specification::Identity::GetCachedSize(CoreML::Specification::Identity *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t CoreML::Specification::Identity::ByteSizeLong(CoreML::Specification::Identity *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

uint64_t CoreML::Specification::Identity::MergePartialFromCodedStream(CoreML::Specification::Identity *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

std::string *CoreML::Specification::Identity::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::Identity::IsInitialized(CoreML::Specification::Identity *this)
{
  return 1;
}

void CoreML::Specification::Identity::New(CoreML::Specification::Identity *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08F1FC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::Identity *CoreML::Specification::Identity::Identity(CoreML::Specification::Identity *this)
{
  *(void *)this = &unk_1F3626490;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Identity *)&CoreML::Specification::_Identity_default_instance_) {
    CoreML::Specification::protobuf_Identity_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC08F280(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Identity>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Identity>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Identity>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Identity_2eproto::InitDefaults(CoreML::Specification::protobuf_Identity_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_Identity_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_Identity_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Identity_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Identity_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Identity_2eproto::TableStruct *this)
{
  uint64_t result = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::_Identity_default_instance_ = (uint64_t)&unk_1F3626490;
  qword_1EC0019A8 = 0;
  dword_1EC0019B0 = 0;
  byte_1EC0019B8 = 1;
  return result;
}

void CoreML::Specification::Identity::New(CoreML::Specification::Identity *this)
{
}

void *CoreML::Specification::Identity::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Identity");
}

void CoreML::Specification::Identity::~Identity(CoreML::Specification::Identity *this)
{
  *(void *)this = &unk_1F3626490;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3626490;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::GetCachedSize(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5 = *(_DWORD *)(this + 16);
  if (v5) {
    return google::protobuf::internal::WireFormatLite::WriteEnum(1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::ByteSizeLong(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      signed int v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5) {
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::IsInitialized(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::New(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *this, google::protobuf::Arena *a2)
{
}

void sub_1DC08F69C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::VisionFeaturePrint_Scene(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *this)
{
  *(void *)this = &unk_1F361AE48;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *)&CoreML::Specification::CoreMLModels::_VisionFeaturePrint_Scene_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  return this;
}

void sub_1DC08F720(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::TableStruct *this)
{
  google::protobuf::internal::InitProtobufDefaults(this);
  qword_1EC001650 = 0;
  *(void *)&dword_1EC001658 = 0;
  CoreML::Specification::CoreMLModels::_VisionFeaturePrint_Scene_default_instance_ = (uint64_t)&unk_1F361AE48;
  byte_1EC001660 = 1;
  CoreML::Specification::CoreMLModels::_VisionFeaturePrint_Objects_default_instance_ = (uint64_t)&unk_1F361AF78;
  double result = 0.0;
  *(_OWORD *)algn_1EC0016A0 = 0u;
  *(_OWORD *)&algn_1EC0016A0[16] = 0u;
  qword_1EC0016C0 = 0;
  byte_1EC0016C8 = 1;
  CoreML::Specification::CoreMLModels::_VisionFeaturePrint_default_instance_ = (uint64_t)&unk_1F361AD18;
  unk_1EC0015F8 = 0;
  qword_1EC001608 = 0;
  byte_1EC001610 = 1;
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint::GetCachedSize(CoreML::Specification::CoreMLModels::VisionFeaturePrint *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 20)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(20, *(void *)(this + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 21)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(21, v5, a2);
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint::ByteSizeLong(CoreML::Specification::CoreMLModels::VisionFeaturePrint *this)
{
  int v2 = *((_DWORD *)this + 7);
  if (v2 == 21)
  {
    uint64_t v6 = CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::ByteSizeLong(*((CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects **)this
                                                                                       + 2));
    uint64_t result = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  else if (v2 == 20)
  {
    uint64_t v3 = *((void *)this + 2);
    int v4 = *(_DWORD *)(v3 + 16);
    if (v4)
    {
      if (v4 < 0) {
        uint64_t v5 = 11;
      }
      else {
        uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v5 = 0;
    }
    *(_DWORD *)(v3 + 2CoreML::Specification::Identity::New(this, 0) = v5;
    uint64_t result = v5 + 3;
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::ByteSizeLong(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  uint64_t v2 = 2 * v1;
  if ((int)v1 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *((_DWORD *)this + 10);
  if (v7)
  {
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
  *((_DWORD *)this + 11) = v2;
  return v2;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::VisionFeaturePrint *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 >= v6)
      {
        LODWORD(v8) = 0;
        goto LABEL_34;
      }
      int v7 = v5 + 1;
      uint64_t v8 = *v5;
      if ((char)*v5 >= 1) {
        break;
      }
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_8;
        }
      }
LABEL_34:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_35;
      }
LABEL_8:
      if (v9 >> 3 == 21)
      {
        if (v9 != 170) {
          goto LABEL_35;
        }
        if (*((_DWORD *)this + 7) != 21)
        {
          CoreML::Specification::CoreMLModels::VisionFeaturePrint::clear_VisionFeaturePrintType((uint64_t)this);
          *((_DWORD *)this + 7) = 21;
          operator new();
        }
        int v12 = (CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *)*((void *)this + 2);
        uint64_t v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v15;
          *(void *)a2 = v15 + 1;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v25 = *((_DWORD *)a2 + 13);
        BOOL v20 = __OFSUB__(v25--, 1);
        *((_DWORD *)a2 + 13) = v25;
        if (v25 < 0 != v20) {
          return 0;
        }
        int v21 = v23;
        uint64_t result = CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::MergePartialFromCodedStream(v12, a2, v24);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v9 >> 3 != 20 || v9 != 162) {
          goto LABEL_35;
        }
        if (*((_DWORD *)this + 7) != 20)
        {
          CoreML::Specification::CoreMLModels::VisionFeaturePrint::clear_VisionFeaturePrintType((uint64_t)this);
          *((_DWORD *)this + 7) = 20;
          operator new();
        }
        unsigned int v11 = (CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *)*((void *)this + 2);
        int v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v14 < 0) {
            return 0;
          }
        }
        else
        {
          int v14 = *v13;
          *(void *)a2 = v13 + 1;
        }
        int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
        int v19 = *((_DWORD *)a2 + 13);
        BOOL v20 = __OFSUB__(v19--, 1);
        *((_DWORD *)a2 + 13) = v19;
        if (v19 < 0 != v20) {
          return 0;
        }
        int v21 = v17;
        uint64_t result = CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::MergePartialFromCodedStream(v11, (char **)a2, v18);
        if (!result) {
          return result;
        }
      }
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21)) {
        return 0;
      }
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_35:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC08FD20(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C408C5061CCLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint::clear_VisionFeaturePrintType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 21 || v2 == 20)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::VisionFeaturePrint_Objects(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this)
{
  *(void *)this = &unk_1F361AF78;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *)&CoreML::Specification::CoreMLModels::_VisionFeaturePrint_Objects_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults(this);
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_1DC08FE34(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        unint64_t v6 = *(unsigned __int8 **)a2;
        unint64_t v7 = *((void *)a2 + 1);
        if (*(void *)a2 >= v7)
        {
          LODWORD(v9) = 0;
LABEL_39:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
          unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v10 & 0x100000000) == 0) {
            goto LABEL_40;
          }
          goto LABEL_9;
        }
        uint64_t v8 = v6 + 1;
        uint64_t v9 = *v6;
        if ((char)*v6 < 1)
        {
          if ((unint64_t)v8 < v7)
          {
            int v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(void *)a2 = v6 + 2;
              unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_9;
            }
          }
          goto LABEL_39;
        }
        *(void *)a2 = v8;
        unint64_t v10 = v9 | 0x100000000;
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_40;
        }
LABEL_9:
        if (v10 >> 3 != 100) {
          break;
        }
        if (v10 != 34) {
          goto LABEL_40;
        }
        uint64_t v15 = (int *)*((void *)this + 4);
        if (!v15)
        {
          int v16 = *((_DWORD *)this + 6);
          int v17 = *((_DWORD *)this + 7);
          goto LABEL_24;
        }
        int v16 = *((_DWORD *)this + 6);
        int v17 = *v15;
        if (v16 >= *v15)
        {
          if (v17 == *((_DWORD *)this + 7))
          {
LABEL_24:
            if (v16 <= v17)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v17 - v16 + 1);
              uint64_t v15 = (int *)*((void *)this + 4);
            }
            int v17 = *v15;
          }
          *uint64_t v15 = v17 + 1;
          int v19 = *(google::protobuf::Arena **)v5;
          if (!*(void *)v5) {
            operator new();
          }
          Aligned->__r_.__value_.__l.__size_ = 0;
          Aligned->__r_.__value_.__r.__words[2] = 0;
          Aligned->__r_.__value_.__r.__words[0] = 0;
          BOOL v20 = google::protobuf::Arena::AllocateAligned(v19, 0, 24);
          *BOOL v20 = (google::protobuf::Arena *)Aligned;
          v20[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
          int v21 = (unint64_t *)((char *)v19 + 32);
          do
            unint64_t v22 = __ldxr(v21);
          while (__stxr((unint64_t)v20, v21));
          void v20[2] = (google::protobuf::Arena *)v22;
          uint64_t v23 = *((void *)this + 4);
          uint64_t v24 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v24 + 1;
          *(void *)(v23 + 8 * v24 + 8) = Aligned;
          goto LABEL_32;
        }
        *((_DWORD *)this + 6) = v16 + 1;
        Aligned = *(std::string **)&v15[2 * v16 + 2];
LABEL_32:
        BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, Aligned);
        if (!result) {
          return result;
        }
        uint64_t v26 = *((void *)this + 4);
        uint64_t v27 = *(unsigned int **)(v26 + 8 * *((int *)this + 6));
        if (*((char *)v27 + 23) < 0)
        {
          uint64_t v27 = *(unsigned int **)v27;
          uint64_t v28 = *(void *)(*(void *)(v26 + 8 * *((int *)this + 6)) + 8);
        }
        else
        {
          LODWORD(v28) = *((unsigned __int8 *)v27 + 23);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v27, v28, 0, (uint64_t)"CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.output"))return 0; {
      }
        }
      if (v10 >> 3 != 1 || v10 != 8) {
        break;
      }
      int v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v14 = 0;
      }
      else
      {
        int v14 = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *(void *)a2 = v13 + 1;
          goto LABEL_48;
        }
      }
      Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
      int v14 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_48:
      *((_DWORD *)this + 1CoreML::Specification::Identity::New(this, 0) = v14;
    }
LABEL_40:
    if (v10) {
      BOOL v30 = (v10 & 7) == 4;
    }
    else {
      BOOL v30 = 1;
    }
    if (v30) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::CoreMLModels::VisionFeaturePrint::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::VisionFeaturePrint *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 == 21)
  {
    if (*(_DWORD *)(v3 + 28) != 21)
    {
      CoreML::Specification::CoreMLModels::VisionFeaturePrint::clear_VisionFeaturePrintType(v3);
      *(_DWORD *)(v3 + 28) = 21;
      operator new();
    }
    uint64_t v8 = (const CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *)*((void *)a2 + 2);
    int v11 = *(std::string **)(v3 + 16);
    return CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::MergeFrom(v11, v8);
  }
  else if (v5 == 20)
  {
    if (*(_DWORD *)(v3 + 28) != 20)
    {
      CoreML::Specification::CoreMLModels::VisionFeaturePrint::clear_VisionFeaturePrintType(v3);
      *(_DWORD *)(v3 + 28) = 20;
      operator new();
    }
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v7 = *((void *)a2 + 2);
    uint64_t v9 = *(void *)(v7 + 8);
    if (v9) {
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v9 & 0xFFFFFFFFFFFFFFFELL);
    }
    int v10 = *(_DWORD *)(v7 + 16);
    if (v10) {
      *(_DWORD *)(v6 + 16) = v10;
    }
  }
  return this;
}

void sub_1DC090270(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C408C5061CCLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (const std::string **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 10);
  if (v10) {
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v10;
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint::IsInitialized(CoreML::Specification::CoreMLModels::VisionFeaturePrint *this)
{
  return 1;
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint::New(CoreML::Specification::CoreMLModels::VisionFeaturePrint *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0903C8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::VisionFeaturePrint *CoreML::Specification::CoreMLModels::VisionFeaturePrint::VisionFeaturePrint(CoreML::Specification::CoreMLModels::VisionFeaturePrint *this)
{
  *(void *)this = &unk_1F361AD18;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::VisionFeaturePrint *)&CoreML::Specification::CoreMLModels::_VisionFeaturePrint_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_VisionFeaturePrint_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC09044C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::VisionFeaturePrint>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::VisionFeaturePrint>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::VisionFeaturePrint>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint::New(CoreML::Specification::CoreMLModels::VisionFeaturePrint *this)
{
}

void *CoreML::Specification::CoreMLModels::VisionFeaturePrint::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.VisionFeaturePrint");
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint::~VisionFeaturePrint(CoreML::Specification::CoreMLModels::VisionFeaturePrint *this)
{
  CoreML::Specification::CoreMLModels::VisionFeaturePrint::~VisionFeaturePrint(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361AD18;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::CoreMLModels::VisionFeaturePrint::clear_VisionFeaturePrintType((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::GetCachedSize(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this)
{
  return *((unsigned int *)this + 11);
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 40);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(1, v6, a2, a4);
  }
  uint64_t v7 = *(unsigned int *)(v5 + 24);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = -v7;
    uint64_t v9 = 1;
    do
    {
      int v10 = *(unsigned int **)(*(void *)(v5 + 32) + 8 * v9);
      if (*((char *)v10 + 23) < 0)
      {
        int v10 = *(unsigned int **)v10;
        uint64_t v11 = *(void *)(*(void *)(*(void *)(v5 + 32) + 8 * v9) + 8);
      }
      else
      {
        LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.output");
      this = google::protobuf::internal::WireFormatLite::WriteString(0x64u, *(void *)(*(void *)(v5 + 32) + 8 * v9++), a2);
    }
    while (v8 + v9 != 1);
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::IsInitialized(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::Clear(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this)
{
  uint64_t result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 16);
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::VisionFeaturePrint::New(this, 0) = 0;
  return result;
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::New(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0906DC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C408C5061CCLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::New(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this)
{
}

void *CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects");
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects::~VisionFeaturePrint_Objects(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Objects *this)
{
  *(void *)this = &unk_1F361AF78;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1F361AF78;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::New(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *this)
{
}

void *CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene");
}

void CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::~VisionFeaturePrint_Scene(CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene *this)
{
  *(void *)this = &unk_1F361AE48;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361AE48;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::OneHotEncoder::GetCachedSize(CoreML::Specification::OneHotEncoder *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::OneHotEncoder::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(this + 24), a2);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 2) {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(v5 + 24), a2);
  }
  if (*(unsigned char *)(v5 + 16)) {
    this = google::protobuf::internal::WireFormatLite::WriteBool(10, 1u, a2, a4);
  }
  signed int v7 = *(_DWORD *)(v5 + 20);
  if (v7)
  {
    return google::protobuf::internal::WireFormatLite::WriteEnum(11, v7, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::OneHotEncoder::ByteSizeLong(CoreML::Specification::OneHotEncoder *this)
{
  uint64_t v2 = 2 * *((unsigned __int8 *)this + 16);
  int v3 = *((_DWORD *)this + 5);
  if (v3)
  {
    if (v3 < 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v4;
  }
  int v5 = *((_DWORD *)this + 9);
  if (v5 == 2)
  {
    uint64_t v6 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 3));
    goto LABEL_10;
  }
  if (v5 == 1)
  {
    uint64_t v6 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 3));
LABEL_10:
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v2;
  return v2;
}

uint64_t CoreML::Specification::OneHotEncoder::MergePartialFromCodedStream(CoreML::Specification::OneHotEncoder *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
      }
      else
      {
        uint64_t v6 = *v5;
        if (*v5 >= 1)
        {
          *(void *)a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_29;
          }
          goto LABEL_7;
        }
      }
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_29;
      }
LABEL_7:
      unsigned int v9 = v7 >> 3;
      if (v7 >> 3 <= 9) {
        break;
      }
      if (v9 == 10)
      {
        if (v7 != 80) {
          goto LABEL_29;
        }
        uint64_t v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v22 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacint k = *v15;
          *(void *)a2 = v15 + 1;
        }
        *((unsigned char *)this + 16) = Varint64Fallback != 0;
      }
      else if (v9 == 11 && v7 == 88)
      {
        int v12 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v13 = 0;
        }
        else
        {
          int v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *(void *)a2 = v12 + 1;
            goto LABEL_56;
          }
        }
        Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v13);
        int v13 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
LABEL_56:
        *((_DWORD *)this + 5) = v13;
      }
      else
      {
LABEL_29:
        if (v7) {
          BOOL v17 = (v7 & 7) == 4;
        }
        else {
          BOOL v17 = 1;
        }
        if (v17) {
          return 1;
        }
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
      }
        }
    }
    if (v9 == 1) {
      break;
    }
    if (v9 != 2 || v7 != 18) {
      goto LABEL_29;
    }
    if (*((_DWORD *)this + 9) != 2)
    {
      CoreML::Specification::OneHotEncoder::clear_CategoryType((uint64_t)this);
      *((_DWORD *)this + 9) = 2;
      operator new();
    }
    uint64_t v11 = (CoreML::Specification::Int64Vector *)*((void *)this + 3);
    unsigned int v18 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        return 0;
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v18;
      *(void *)a2 = v18 + 1;
    }
    int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    int v25 = *((_DWORD *)a2 + 13);
    BOOL v26 = __OFSUB__(v25--, 1);
    *((_DWORD *)a2 + 13) = v25;
    if (v25 < 0 != v26) {
      return 0;
    }
    int v27 = v23;
    uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v11, a2, v24);
    if (!result) {
      return result;
    }
LABEL_52:
    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27)) {
      return 0;
    }
  }
  if (v7 != 10) {
    goto LABEL_29;
  }
  if (*((_DWORD *)this + 9) != 1)
  {
    CoreML::Specification::OneHotEncoder::clear_CategoryType((uint64_t)this);
    *((_DWORD *)this + 9) = 1;
    operator new();
  }
  int v14 = (CoreML::Specification::StringVector *)*((void *)this + 3);
  BOOL v20 = *(char **)a2;
  if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
  {
    int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v21 < 0) {
      return 0;
    }
  }
  else
  {
    int v21 = *v20;
    *(void *)a2 = v20 + 1;
  }
  int v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
  int v31 = *((_DWORD *)a2 + 13);
  BOOL v26 = __OFSUB__(v31--, 1);
  *((_DWORD *)a2 + 13) = v31;
  if (v31 < 0 == v26)
  {
    int v27 = v29;
    uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v14, (char **)a2, v30);
    if (!result) {
      return result;
    }
    goto LABEL_52;
  }
  return 0;
}

void sub_1DC090D74(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::OneHotEncoder::clear_CategoryType(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 36);
  if (v2 == 2 || v2 == 1)
  {
    this = *(void *)(this + 24);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

std::string *CoreML::Specification::OneHotEncoder::MergeFrom(std::string *this, const CoreML::Specification::OneHotEncoder *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    *(unsigned char *)(v3 + 16) = 1;
  }
  int v5 = *((_DWORD *)a2 + 5);
  if (v5) {
    *(_DWORD *)(v3 + 2CoreML::Specification::CoreMLModels::VisionFeaturePrint_Scene::New(this, 0) = v5;
  }
  int v6 = *((_DWORD *)a2 + 9);
  if (v6 == 2)
  {
    if (*(_DWORD *)(v3 + 36) != 2)
    {
      CoreML::Specification::OneHotEncoder::clear_CategoryType(v3);
      *(_DWORD *)(v3 + 36) = 2;
      operator new();
    }
    uint64_t v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 3);
    int v10 = *(unint64_t **)(v3 + 24);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v10, v8);
  }
  else if (v6 == 1)
  {
    if (*(_DWORD *)(v3 + 36) != 1)
    {
      CoreML::Specification::OneHotEncoder::clear_CategoryType(v3);
      *(_DWORD *)(v3 + 36) = 1;
      operator new();
    }
    unint64_t v7 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 3);
    unsigned int v9 = *(std::string **)(v3 + 24);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v9, v7);
  }
  return this;
}

void sub_1DC090F9C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::OneHotEncoder::IsInitialized(CoreML::Specification::OneHotEncoder *this)
{
  return 1;
}

uint64_t CoreML::Specification::OneHotEncoder::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return CoreML::Specification::OneHotEncoder::clear_CategoryType(this);
}

void CoreML::Specification::OneHotEncoder::New(CoreML::Specification::OneHotEncoder *this, google::protobuf::Arena *a2)
{
}

void sub_1DC091038(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C405CEF57A5);
  _Unwind_Resume(a1);
}

CoreML::Specification::OneHotEncoder *CoreML::Specification::OneHotEncoder::OneHotEncoder(CoreML::Specification::OneHotEncoder *this)
{
  *(void *)this = &unk_1F361BA28;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::OneHotEncoder *)&CoreML::Specification::_OneHotEncoder_default_instance_) {
    CoreML::Specification::protobuf_OneHotEncoder_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0910C0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::OneHotEncoder>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::OneHotEncoder>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::OneHotEncoder>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_OneHotEncoder_2eproto::InitDefaults(CoreML::Specification::protobuf_OneHotEncoder_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_OneHotEncoder_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_OneHotEncoder_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_OneHotEncoder_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_OneHotEncoder_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_OneHotEncoder_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  uint64_t result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  qword_1EC0020F8 = 0;
  qword_1EC0020E0 = 0;
  unk_1EC0020E8 = 0;
  CoreML::Specification::_OneHotEncoder_default_instance_ = (uint64_t)&unk_1F361BA28;
  byte_1EC002100 = 1;
  return result;
}

void CoreML::Specification::OneHotEncoder::New(CoreML::Specification::OneHotEncoder *this)
{
}

void *CoreML::Specification::OneHotEncoder::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.OneHotEncoder");
}

void CoreML::Specification::OneHotEncoder::~OneHotEncoder(CoreML::Specification::OneHotEncoder *this)
{
  CoreML::Specification::OneHotEncoder::~OneHotEncoder(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361BA28;
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::OneHotEncoder::clear_CategoryType((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::CoreMLModels::TextClassifier::GetCachedSize(CoreML::Specification::CoreMLModels::TextClassifier *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t CoreML::Specification::CoreMLModels::TextClassifier::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::TextClassifier *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6 = *((unsigned int *)this + 8);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  }
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v8 = *(void *)(result + 8);
    if (!v8) {
      goto LABEL_9;
    }
    uint64_t result = *(void *)result;
    goto LABEL_8;
  }
  LODWORD(v8) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.TextClassifier.language");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 2), a2);
  }
LABEL_9:
  uint64_t v9 = *((void *)this + 3);
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v9 + 23)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (*(void *)(v9 + 8)) {
LABEL_11:
  }
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v9, a2);
LABEL_12:
  if (*((_DWORD *)this + 13) == 200)
  {
    uint64_t v10 = *((void *)this + 5);
    return google::protobuf::internal::WireFormatLite::WriteMessage(200, v10, a2);
  }
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::TextClassifier::ByteSizeLong(CoreML::Specification::CoreMLModels::TextClassifier *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  int v9 = *((_DWORD *)this + 8);
  if (v9) {
    v5 += ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if (*((_DWORD *)this + 13) == 200)
  {
    uint64_t v10 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 5));
    v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

BOOL CoreML::Specification::CoreMLModels::TextClassifier::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::TextClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(unsigned __int8 **)a2;
      unint64_t v8 = *((void *)a2 + 1);
      if (*(void *)a2 >= v8)
      {
        LODWORD(v1CoreML::Specification::OneHotEncoder::New(this, 0) = 0;
LABEL_45:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
        unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v11 & 0x100000000) == 0) {
          goto LABEL_46;
        }
        goto LABEL_9;
      }
      int v9 = v7 + 1;
      uint64_t v10 = *v7;
      if ((char)*v7 >= 1) {
        break;
      }
      if ((unint64_t)v9 >= v8) {
        goto LABEL_45;
      }
      int v12 = *v9;
      if ((v10 & ~v12) < 0x80) {
        goto LABEL_45;
      }
      *(void *)a2 = v7 + 2;
      unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
LABEL_9:
      unsigned int v13 = v11 >> 3;
      if (v11 >> 3 > 0x63)
      {
        if (v13 == 100)
        {
          if (v11 != 34) {
            goto LABEL_46;
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5)) {
            return 0;
          }
        }
        else
        {
          if (v13 != 200 || v11 != 66) {
            goto LABEL_46;
          }
          if (*((_DWORD *)this + 13) != 200)
          {
            *((_DWORD *)this + 13) = 200;
            operator new();
          }
          BOOL v17 = (CoreML::Specification::StringVector *)*((void *)this + 5);
          BOOL v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v20;
            *(void *)a2 = v20 + 1;
          }
          int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v24 = *((_DWORD *)a2 + 13);
          BOOL v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 13) = v24;
          if (v24 < 0 != v25) {
            return 0;
          }
          int v26 = v22;
          BOOL result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v17, (char **)a2, v23);
          if (!result) {
            return result;
          }
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
            return 0;
          }
        }
      }
      else if (v13 == 1)
      {
        if (v11 != 8) {
          goto LABEL_46;
        }
        unsigned int v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v19 = 0;
          goto LABEL_53;
        }
        int v19 = *v18;
        if (*v18 < 0)
        {
LABEL_53:
          Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          *((_DWORD *)this + 8) = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
        }
        else
        {
          *((_DWORD *)this + 8) = v19;
          *(void *)a2 = v18 + 1;
        }
      }
      else
      {
        if (v13 != 10 || v11 != 82) {
          goto LABEL_46;
        }
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
        if (!result) {
          return result;
        }
        uint64_t v15 = (unsigned int *)*v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v15 = *(unsigned int **)v15;
          std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v15, size, 0, (uint64_t)"CoreML.Specification.CoreMLModels.TextClassifier.language"))return 0; {
      }
        }
    }
    *(void *)a2 = v9;
    unint64_t v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_46:
    if (!v11 || (v11 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0917C4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CoreMLModels::TextClassifier::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::TextClassifier *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  uint64_t v7 = *((void *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(void *)(v7 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v7 + 23))
  {
    goto LABEL_19;
  }
  this = v3 + 1;
  data = (uint64_t *)v3[1].__r_.__value_.__l.__data_;
  if (data != (uint64_t *)v7)
  {
    if (data == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v7);
    }
    this = std::string::operator=((std::string *)v3[1].__r_.__value_.__l.__data_, (const std::string *)v7);
  }
LABEL_19:
  int v9 = *((_DWORD *)a2 + 8);
  if (v9) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
  }
  if (*((_DWORD *)a2 + 13) == 200)
  {
    if (HIDWORD(v3[2].__r_.__value_.__r.__words[0]) != 200)
    {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = 200;
      operator new();
    }
    uint64_t v10 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 5);
    unint64_t v11 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v11, v10);
  }
  return this;
}

void sub_1DC091968(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::TextClassifier::IsInitialized(CoreML::Specification::CoreMLModels::TextClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::TextClassifier::Clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = *(void *)(this + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *(void *)(this + 24);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(_DWORD *)(this + 52) == 200)
  {
    this = *(void *)(this + 40);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::TextClassifier::New(CoreML::Specification::CoreMLModels::TextClassifier *this, google::protobuf::Arena *a2)
{
}

void sub_1DC091AA8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C43D3D65);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::TextClassifier *CoreML::Specification::CoreMLModels::TextClassifier::TextClassifier(CoreML::Specification::CoreMLModels::TextClassifier *this)
{
  *(void *)this = &unk_1F361ABE8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::TextClassifier *)&CoreML::Specification::CoreMLModels::_TextClassifier_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_1DC091B3C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::TextClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::TextClassifier>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::TextClassifier>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_TextClassifier_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  BOOL result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::CoreMLModels::_TextClassifier_default_instance_ = (uint64_t)&unk_1F361ABE8;
  unk_1EC001580 = 0;
  qword_1EC001588 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EC001590 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EC001598 = 0;
  qword_1EC0015A8 = 0;
  byte_1EC0015B0 = 1;
  return result;
}

void CoreML::Specification::CoreMLModels::TextClassifier::New(CoreML::Specification::CoreMLModels::TextClassifier *this)
{
}

void *CoreML::Specification::CoreMLModels::TextClassifier::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.TextClassifier");
}

void CoreML::Specification::CoreMLModels::TextClassifier::~TextClassifier(CoreML::Specification::CoreMLModels::TextClassifier *this)
{
  CoreML::Specification::CoreMLModels::TextClassifier::~TextClassifier(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;
  int v6;
  uint64_t v7;

  *(void *)this = &unk_1F361ABE8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  char v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((_DWORD *)this + 13);
  if (v6)
  {
    if (v6 == 200)
    {
      uint64_t v7 = *((void *)this + 5);
      if (v7) {
        (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
      }
    }
    *((_DWORD *)this + 13) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::ClassConfidenceThresholding::GetCachedSize(CoreML::Specification::ClassConfidenceThresholding *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::ClassConfidenceThresholding::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(100, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::ClassConfidenceThresholding::ByteSizeLong(CoreML::Specification::ClassConfidenceThresholding *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  uint64_t v3 = 2 * v2;
  if (v2)
  {
    int v4 = 0;
    do
    {
      unint64_t v5 = CoreML::Specification::PrecisionRecallCurve::ByteSizeLong(*(CoreML::Specification::PrecisionRecallCurve **)(*((void *)this + 4) + 8 * v4 + 8));
      v3 += (uint64_t)v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v4;
    }
    while (v2 != v4);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::TextClassifier::New(this, 0) = v3;
  return v3;
}

BOOL CoreML::Specification::ClassConfidenceThresholding::MergePartialFromCodedStream(CoreML::Specification::ClassConfidenceThresholding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (CoreML::Specification::ClassConfidenceThresholding *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(unsigned __int8 **)a2;
      unint64_t v7 = *((void *)a2 + 1);
      if (*(void *)a2 < v7) {
        break;
      }
      LODWORD(v9) = 0;
LABEL_33:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
      unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v10 & 0x100000000) == 0) {
        goto LABEL_34;
      }
LABEL_9:
      if (v10 != 34 || (v10 & 0xFFFFFFF8) != 0x320) {
        goto LABEL_34;
      }
      int v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
        goto LABEL_16;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 >= *v12)
      {
        if (v14 == *((_DWORD *)this + 7))
        {
LABEL_16:
          if (v13 <= v14)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
            int v12 = (int *)*((void *)this + 4);
          }
          int v14 = *v12;
        }
        *int v12 = v14 + 1;
        int v16 = *(google::protobuf::Arena **)v5;
        if (!*(void *)v5) {
          operator new();
        }
        CoreML::Specification::PrecisionRecallCurve::PrecisionRecallCurve((CoreML::Specification::PrecisionRecallCurve *)Aligned);
        BOOL v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        CoreML::Specification::StringVector *v17 = (google::protobuf::Arena *)Aligned;
        v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::PrecisionRecallCurve>;
        unsigned int v18 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v19 = __ldxr(v18);
        while (__stxr((unint64_t)v17, v18));
        void v17[2] = (google::protobuf::Arena *)v19;
        uint64_t v20 = *((void *)this + 4);
        uint64_t v21 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v21 + 1;
        *(void *)(v20 + 8 * v21 + 8) = Aligned;
        goto LABEL_24;
      }
      *((_DWORD *)this + 6) = v13 + 1;
      Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
LABEL_24:
      int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        BOOL result = CoreML::Specification::PrecisionRecallCurve::MergePartialFromCodedStream((CoreML::Specification::PrecisionRecallCurve *)Aligned, a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    unint64_t v8 = v6 + 1;
    uint64_t v9 = *v6;
    if ((char)*v6 < 1)
    {
      if ((unint64_t)v8 < v7)
      {
        int v11 = *v8;
        if ((v9 & ~v11) >= 0x80)
        {
          *(void *)a2 = v6 + 2;
          unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
          goto LABEL_9;
        }
      }
      goto LABEL_33;
    }
    *(void *)a2 = v8;
    unint64_t v10 = v9 | 0x100000000;
    if ((v10 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_34:
    if (!v10 || (v10 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC092164(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40668C0A6DLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::PrecisionRecallCurve>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

unint64_t *CoreML::Specification::ClassConfidenceThresholding::MergeFrom(unint64_t *this, const CoreML::Specification::ClassConfidenceThresholding *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      int v11 = (const CoreML::Specification::PrecisionRecallCurve **)(v28 + 8);
      int v12 = (std::string **)this;
      do
      {
        int v14 = *v11++;
        int v13 = v14;
        uint64_t v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::PrecisionRecallCurve>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      int v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      uint64_t v20 = (const CoreML::Specification::PrecisionRecallCurve **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::PrecisionRecallCurve::PrecisionRecallCurve((CoreML::Specification::PrecisionRecallCurve *)Aligned);
        unsigned int v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *unsigned int v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::PrecisionRecallCurve>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::PrecisionRecallCurve>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC09235C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40668C0A6DLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::PrecisionRecallCurve>::Merge(const CoreML::Specification::PrecisionRecallCurve *a1, std::string *a2)
{
  return CoreML::Specification::PrecisionRecallCurve::MergeFrom(a2, a1);
}

uint64_t CoreML::Specification::ClassConfidenceThresholding::IsInitialized(CoreML::Specification::ClassConfidenceThresholding *this)
{
  return 1;
}

uint64_t CoreML::Specification::ClassConfidenceThresholding::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    uint64_t v3 = (CoreML::Specification::PrecisionRecallCurve **)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::PrecisionRecallCurve::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

void CoreML::Specification::ClassConfidenceThresholding::New(CoreML::Specification::ClassConfidenceThresholding *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09243C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::ClassConfidenceThresholding *CoreML::Specification::ClassConfidenceThresholding::ClassConfidenceThresholding(CoreML::Specification::ClassConfidenceThresholding *this)
{
  *(void *)this = &unk_1F3623180;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::ClassConfidenceThresholding *)&CoreML::Specification::_ClassConfidenceThresholding_default_instance_) {
    CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::TextClassifier::New(this, 0) = 0;
  return this;
}

void sub_1DC0924D4(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ClassConfidenceThresholding>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ClassConfidenceThresholding>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ClassConfidenceThresholding>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto::InitDefaults(CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_ClassConfidenceThresholding_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_ClassConfidenceThresholding_default_instance_ = (uint64_t)&unk_1F3623180;
  double result = 0.0;
  unk_1EC005258 = 0u;
  unk_1EC005268 = 0u;
  dword_1EC005278 = 0;
  byte_1EC005280 = 1;
  return result;
}

void CoreML::Specification::ClassConfidenceThresholding::New(CoreML::Specification::ClassConfidenceThresholding *this)
{
}

void *CoreML::Specification::ClassConfidenceThresholding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ClassConfidenceThresholding");
}

void CoreML::Specification::ClassConfidenceThresholding::~ClassConfidenceThresholding(CoreML::Specification::ClassConfidenceThresholding *this)
{
  CoreML::Specification::ClassConfidenceThresholding::~ClassConfidenceThresholding(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3623180;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(void *a1, uint64_t a2, unsigned __int8 *a3, uint64_t *a4)
{
  uint64_t result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::BucketNumber(a2, a3);
  unint64_t v9 = result;
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(v10 + 8 * result);
  if (v11)
  {
    if (v11 != *(void *)(v10 + 8 * (result ^ 1)))
    {
      while (1)
      {
        uint64_t result = std::equal_to<std::string>::operator()[abi:ne180100]((uint64_t)&v13, (unsigned __int8 *)v11, a3);
        if (result) {
          break;
        }
        uint64_t v11 = *(void *)(v11 + 32);
        if (!v11) {
          goto LABEL_10;
        }
      }
      *a1 = v11;
      goto LABEL_12;
    }
    unint64_t v9 = result & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(void *)(v10 + 8 * (result & 0xFFFFFFFFFFFFFFFELL));
    uint64_t result = std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v12, a3);
    if (v12 + 8 != result)
    {
      if (a4) {
        *a4 = result;
      }
      *a1 = *(void *)(result + 32);
LABEL_12:
      a1[1] = a2;
      a1[2] = v9;
      goto LABEL_13;
    }
  }
LABEL_10:
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
LABEL_13:
  a1[3] = v9;
  return result;
}

uint64_t google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::BucketNumber(uint64_t a1, unsigned char *a2)
{
  if ((char)a2[23] >= 0) {
    uint64_t v2 = a2;
  }
  else {
    uint64_t v2 = *(unsigned char **)a2;
  }
  char v3 = *v2;
  if (*v2)
  {
    uint64_t v4 = 0;
    unint64_t v5 = v2 + 1;
    do
    {
      uint64_t v4 = 5 * v4 + v3;
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
  }
  else
  {
    uint64_t v4 = 0;
  }
  return (*(void *)(a1 + 8) - 1) & (*(void *)(a1 + 16) + v4);
}

uint64_t std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(uint64_t a1, void *a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 8;
  do
  {
    BOOL v6 = std::less<std::string>::operator()[abi:ne180100](*(void **)(v3 + 32), a2);
    uint64_t v7 = (uint64_t *)(v3 + 8);
    if (!v6)
    {
      uint64_t v7 = (uint64_t *)v3;
      uint64_t v5 = v3;
    }
    uint64_t v3 = *v7;
  }
  while (*v7);
  if (v5 == v2 || std::less<std::string>::operator()[abi:ne180100](a2, *(void **)(v5 + 32))) {
    return v2;
  }
  return v5;
}

uint64_t CoreML::Specification::Scaler::GetCachedSize(CoreML::Specification::Scaler *this)
{
  return *((unsigned int *)this + 15);
}

uint64_t CoreML::Specification::Scaler::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  if (*(int *)(this + 16) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      uint64_t v12 = (char *)(v11 + 8);
    }
    else {
      uint64_t v12 = 0;
    }
    this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, 8 * *(_DWORD *)(v3 + 16));
  }
  if (*(int *)(v3 + 40) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      v24[0] = 18;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, v24, 1);
      int v13 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v13 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v13;
    }
    unsigned int v14 = *(_DWORD *)(v3 + 56);
    if (v13 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v14);
    }
    else
    {
      uint64_t v15 = *((void *)a2 + 1);
      if (v14 < 0x80)
      {
        unsigned int v17 = *(_DWORD *)(v3 + 56);
        int v16 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        int v16 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v16++ = v14 | 0x80;
          unsigned int v17 = v14 >> 7;
          unsigned int v18 = v14 >> 14;
          v14 >>= 7;
        }
        while (v18);
      }
      unsigned char *v16 = v17;
      int v19 = v16 - v15 + 1;
      *((void *)a2 + 1) += v19;
      *((_DWORD *)a2 + 4) -= v19;
    }
    uint64_t v20 = *(void *)(v3 + 48);
    if (v20) {
      uint64_t v21 = (char *)(v20 + 8);
    }
    else {
      uint64_t v21 = 0;
    }
    int v22 = 8 * *(_DWORD *)(v3 + 40);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v21, v22);
  }
  return this;
}

uint64_t CoreML::Specification::Scaler::ByteSizeLong(CoreML::Specification::Scaler *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 8) = v2;
  uint64_t v4 = v3 + v2;
  uint64_t v5 = *((unsigned int *)this + 10);
  uint64_t v6 = 8 * v5;
  if (v5)
  {
    if ((v6 & 0x80000000) != 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v7;
  }
  uint64_t v8 = v4 + v6;
  *((_DWORD *)this + 14) = v6;
  *((_DWORD *)this + 15) = v8;
  return v8;
}

BOOL CoreML::Specification::Scaler::MergePartialFromCodedStream(CoreML::Specification::Scaler *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  uint64_t v6 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            uint64_t v7 = *a2;
            if (*a2 < a2[1]) {
              break;
            }
            LODWORD(v8) = 0;
LABEL_7:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v8);
            unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v9 & 0x100000000) != 0) {
              goto LABEL_8;
            }
LABEL_20:
            if (v9) {
              BOOL v15 = (v9 & 7) == 4;
            }
            else {
              BOOL v15 = 1;
            }
            if (v15) {
              return 1;
            }
            if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0; {
          }
            }
          uint64_t v8 = *v7;
          if (*v7 < 1) {
            goto LABEL_7;
          }
          *a2 = v7 + 1;
          unint64_t v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0) {
            goto LABEL_20;
          }
LABEL_8:
          if (v9 >> 3 != 2) {
            break;
          }
          if (v9 == 17)
          {
            int v16 = 18;
            unsigned int v17 = (unint64_t **)a2;
            uint64_t v18 = (uint64_t)v5;
            goto LABEL_28;
          }
          if (v9 != 18) {
            goto LABEL_20;
          }
          int v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
            if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
              return 0;
            }
          }
          else
          {
            unsigned int VarintSizeAsIntFallback = *v13;
            *a2 = v13 + 1;
          }
          if ((VarintSizeAsIntFallback & 7) != 0) {
            return 0;
          }
          int v34 = *((_DWORD *)a2 + 12);
          if (v34 == 0x7FFFFFFF) {
            int v35 = -1;
          }
          else {
            int v35 = v34 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
          }
          int v36 = *((_DWORD *)a2 + 10);
          if (v36 == 0x7FFFFFFF) {
            int v37 = -1;
          }
          else {
            int v37 = v36 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
          }
          signed int v38 = *v5;
          unsigned int v39 = VarintSizeAsIntFallback >> 3;
          if (v37 >= v35) {
            int v40 = v35;
          }
          else {
            int v40 = v37;
          }
          if (v35 == -1) {
            int v41 = v37;
          }
          else {
            int v41 = v40;
          }
          if (v41 >= (uint64_t)VarintSizeAsIntFallback)
          {
            signed int v46 = v38 + v39;
            if (VarintSizeAsIntFallback > 7)
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v38 + v39);
              uint64_t v47 = *((void *)this + 6);
              uint64_t v50 = 8 * v46 - 8 * *((int *)this + 10);
              if (v50 >= 1) {
                bzero((void *)(v47 + 8 + 8 * *((int *)this + 10)), 8 * (((unint64_t)v50 >> 3) - ((unint64_t)v50 > 7)) + 8);
              }
            }
            else
            {
              uint64_t v47 = *((void *)this + 6);
            }
            unsigned int *v5 = v46;
            uint64_t v51 = v47 + 8;
            if (!v47) {
              uint64_t v51 = 0;
            }
            if (!google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v51 + 8 * v38), VarintSizeAsIntFallback))
            {
              if ((int)*v5 >= 1)
              {
                BOOL result = 0;
                unsigned int *v5 = v38;
                return result;
              }
              return 0;
            }
          }
          else if (VarintSizeAsIntFallback >= 8)
          {
            if (v39 <= 1) {
              int v42 = 1;
            }
            else {
              int v42 = VarintSizeAsIntFallback >> 3;
            }
            do
            {
              unint64_t v52 = 0;
              uint64_t v43 = (unint64_t *)*a2;
              if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
              {
                BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v52);
                if (!result) {
                  return result;
                }
                unint64_t v44 = v52;
                signed int v38 = *v5;
              }
              else
              {
                unint64_t v44 = *v43;
                *a2 = (char *)(v43 + 1);
              }
              if (v38 == *((_DWORD *)this + 11))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v38 + 1);
                signed int v38 = *v5;
              }
              uint64_t v45 = *((void *)this + 6) + 8 * v38;
              *((_DWORD *)this + 1CoreML::Specification::ClassConfidenceThresholding::New(this, 0) = v38 + 1;
              *(void *)(v45 + 8) = v44;
              ++v38;
              --v42;
            }
            while (v42);
          }
        }
        if (v9 >> 3 != 1) {
          goto LABEL_20;
        }
        if (v9 != 9) {
          break;
        }
        int v16 = 10;
        unsigned int v17 = (unint64_t **)a2;
        uint64_t v18 = (uint64_t)v6;
LABEL_28:
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(v16, v17, v18))return 0; {
      }
        }
      if (v9 != 10) {
        goto LABEL_20;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        unsigned int v12 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v12 = *v11;
        *a2 = v11 + 1;
      }
      if ((v12 & 7) != 0) {
        return 0;
      }
      int v19 = *((_DWORD *)a2 + 12);
      int v20 = v19 == 0x7FFFFFFF
          ? -1
          : v19 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v21 = *((_DWORD *)a2 + 10);
      int v22 = v21 == 0x7FFFFFFF
          ? -1
          : v21 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v23 = *v6;
      unsigned int v24 = v12 >> 3;
      int v25 = v22 >= v20 ? v20 : v22;
      int v26 = v20 == -1 ? v22 : v25;
      if (v26 >= (uint64_t)v12) {
        break;
      }
      if (v12 >= 8)
      {
        if (v24 <= 1) {
          int v27 = 1;
        }
        else {
          int v27 = v12 >> 3;
        }
        do
        {
          unint64_t v52 = 0;
          uint64_t v28 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v52);
            if (!result) {
              return result;
            }
            unint64_t v29 = v52;
            signed int v23 = *v6;
          }
          else
          {
            unint64_t v29 = *v28;
            *a2 = (char *)(v28 + 1);
          }
          if (v23 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v6, v23 + 1);
            signed int v23 = *v6;
          }
          uint64_t v30 = *((void *)this + 3) + 8 * v23;
          *((_DWORD *)this + 4) = v23 + 1;
          *(void *)(v30 + 8) = v29;
          ++v23;
          --v27;
        }
        while (v27);
      }
    }
    signed int v32 = v23 + v24;
    if (v12 > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v6, v23 + v24);
      uint64_t v33 = *((void *)this + 3);
      uint64_t v48 = 8 * v32 - 8 * *((int *)this + 4);
      if (v48 >= 1) {
        bzero((void *)(v33 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v48 >> 3) - ((unint64_t)v48 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v33 = *((void *)this + 3);
    }
    unsigned int *v6 = v32;
    uint64_t v49 = v33 + 8;
    if (!v33) {
      uint64_t v49 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v49 + 8 * v23), v12));
  if ((int)*v6 >= 1)
  {
    BOOL result = 0;
    unsigned int *v6 = v23;
    return result;
  }
  return 0;
}

void google::protobuf::RepeatedField<double>::Reserve(unsigned int *a1, int a2)
{
  signed int v2 = a1[1];
  if (v2 < a2)
  {
    uint64_t v4 = (google::protobuf::Arena **)*((void *)a1 + 1);
    if (v4) {
      uint64_t v5 = *v4;
    }
    else {
      uint64_t v5 = 0;
    }
    int v6 = 2 * v2;
    if (v6 <= a2) {
      int v6 = a2;
    }
    if (v6 <= 4) {
      unsigned int v7 = 4;
    }
    else {
      unsigned int v7 = v6;
    }
    uint64_t v8 = 8 * v7;
    if (v5) {
      Aligned = google::protobuf::Arena::AllocateAligned(v5, MEMORY[0x1E4FBA380], v8 + 8);
    }
    else {
      Aligned = operator new(v8 + 8);
    }
    *((void *)a1 + 1) = Aligned;
    void *Aligned = v5;
    a1[1] = v7;
    uint64_t v10 = *a1;
    if ((int)v10 >= 1) {
      memcpy(Aligned + 1, v4 + 1, 8 * v10);
    }
    if (v4 && !*v4)
    {
      operator delete(v4);
    }
  }
}

BOOL google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(int a1, unint64_t **this, uint64_t a3)
{
  int v6 = *this;
  if ((int)(*((_DWORD *)this + 2) - *this) < 8)
  {
    unint64_t v21 = 0;
    BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21);
    if (!result) {
      return result;
    }
    unint64_t v7 = v21;
  }
  else
  {
    unint64_t v7 = *v6;
    *this = v6 + 1;
  }
  signed int v8 = *(_DWORD *)a3;
  if (*(_DWORD *)a3 == *(_DWORD *)(a3 + 4))
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)a3, v8 + 1);
    signed int v8 = *(_DWORD *)a3;
  }
  uint64_t v9 = *(void *)(a3 + 8);
  int v10 = v8 + 1;
  *(_DWORD *)a3 = v8 + 1;
  *(void *)(v9 + 8 * v8 + 8) = v7;
  uint64_t v11 = *this;
  int v12 = *((_DWORD *)this + 2) - *this;
  if (v12 >= 1)
  {
    signed int v13 = *(_DWORD *)(a3 + 4) - v10;
    signed int v14 = v12 / 9u;
    if ((int)(v12 / 9u) >= v13) {
      signed int v14 = *(_DWORD *)(a3 + 4) - v10;
    }
    if (v14 >= 1)
    {
      uint64_t v15 = 0;
      uint64_t v16 = v9 + 8 * v10 + 8;
      int v17 = v8 + 2;
      uint64_t v18 = ((*((_DWORD *)this + 2) - *this) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
      if (v18 >= v13) {
        LODWORD(v18) = v13;
      }
      while (*(unsigned __int8 *)v11 == a1)
      {
        uint64_t v19 = *(unint64_t *)((char *)v11 + 1);
        *(_DWORD *)a3 = v17 + v15;
        *(void *)(v16 + 8 * v15++) = v19;
        uint64_t v11 = (unint64_t *)((char *)v11 + 9);
        if (v18 == v15) {
          goto LABEL_15;
        }
      }
      signed int v14 = v15;
LABEL_15:
      if (v14 >= 1) {
        google::protobuf::io::CodedInputStream::Skip((google::protobuf::io::CodedInputStream *)this, 9 * v14);
      }
    }
  }
  return 1;
}

unint64_t *CoreML::Specification::Scaler::MergeFrom(unint64_t *this, const CoreML::Specification::Scaler *a2)
{
  uint64_t v3 = (unsigned int *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    int v8 = v3[10];
    unint64_t v7 = v3 + 10;
    google::protobuf::RepeatedField<double>::Reserve(v7, v8 + v6);
    this = (unint64_t *)memcpy((void *)(*((void *)v7 + 1) + 8 * (int)*v7 + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *v7 += *((_DWORD *)a2 + 10);
  }
  return this;
}

uint64_t CoreML::Specification::Scaler::IsInitialized(CoreML::Specification::Scaler *this)
{
  return 1;
}

uint64_t CoreML::Specification::Scaler::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 4CoreML::Specification::ClassConfidenceThresholding::New(this, 0) = 0;
  return this;
}

void CoreML::Specification::Scaler::New(CoreML::Specification::Scaler *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0933F4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C403FC4B5CDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::Scaler *CoreML::Specification::Scaler::Scaler(CoreML::Specification::Scaler *this)
{
  *(void *)this = &unk_1F36250F8;
  *((void *)this + 1) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Scaler *)&CoreML::Specification::_Scaler_default_instance_) {
    CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 15) = 0;
  return this;
}

void sub_1DC093488(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 48);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  int v5 = *(void **)(v2 + 24);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Scaler>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Scaler>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Scaler>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults(CoreML::Specification::protobuf_Scaler_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_Scaler_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Scaler_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Scaler_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Scaler_2eproto::TableStruct *this)
{
  BOOL result = google::protobuf::internal::InitProtobufDefaults(this);
  qword_1EC0018C0 = 0;
  unk_1EC0018C8 = 0;
  CoreML::Specification::_Scaler_default_instance_ = (uint64_t)&unk_1F36250F8;
  unk_1EC0018A0 = 0;
  qword_1EC0018A8 = 0;
  unk_1EC0018B0 = 0;
  dword_1EC0018D4 = 0;
  byte_1EC0018D8 = 1;
  return result;
}

void CoreML::Specification::Scaler::New(CoreML::Specification::Scaler *this)
{
}

void *CoreML::Specification::Scaler::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Scaler");
}

void CoreML::Specification::Scaler::~Scaler(CoreML::Specification::Scaler *this)
{
  CoreML::Specification::Scaler::~Scaler(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;
  void *v3;

  *(void *)this = &unk_1F36250F8;
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 3);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::Program::GetCachedSize(CoreML::Specification::MILSpec::Program *this)
{
  return *((unsigned int *)this + 24);
}

uint64_t CoreML::Specification::MILSpec::Program::SerializeWithCachedSizes(CoreML::Specification::MILSpec::Program *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v6 = *((void *)this + 11);
  if (v6) {
    google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  }
  unint64_t v7 = (unint64_t *)*((void *)this + 5);
  unint64_t v8 = *v7;
  if (*v7)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v8 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_26;
      }
    }
    else if (v8 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_26:
      operator new[]();
    }
    google::protobuf::Map<std::string,std::string>::begin(v25, v7);
    uint64_t v10 = 0;
    while (v25[0])
    {
      uint64_t v11 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v25[0] + 3), (google::protobuf::Arena *)(*((void *)v25[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
      if ((google::protobuf::Arena **)v10 != v11)
      {
        if (v10) {
          (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
        }
        uint64_t v10 = (uint64_t)v11;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v10, a2);
      int v12 = (unsigned int *)*((void *)v25[0] + 3);
      if (*((char *)v12 + 23) < 0)
      {
        int v12 = *(unsigned int **)v12;
        uint64_t v13 = *(void *)(*((void *)v25[0] + 3) + 8);
      }
      else
      {
        LODWORD(v13) = *((unsigned __int8 *)v12 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.MILSpec.Program.FunctionsEntry.key");
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v25);
    }
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
  }
  uint64_t result = *((void *)this + 10);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v16 = *(void *)(result + 8);
    if (!v16) {
      goto LABEL_33;
    }
    uint64_t result = *(void *)result;
    goto LABEL_32;
  }
  LODWORD(v16) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v16, 1, (uint64_t)"CoreML.Specification.MILSpec.Program.docString");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3u, *((void *)this + 10), a2);
  }
LABEL_33:
  int v17 = (unint64_t *)*((void *)this + 9);
  unint64_t v18 = *v17;
  if (*v17)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v18 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_56;
      }
    }
    else if (v18 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_56:
      operator new[]();
    }
    uint64_t result = (uint64_t)google::protobuf::Map<std::string,std::string>::begin(v25, v17);
    uint64_t v20 = 0;
    while (v25[0])
    {
      unint64_t v21 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v25[0] + 3), (google::protobuf::Arena *)(*((void *)v25[0] + 3) + 24), *((google::protobuf::Arena **)this + 6));
      if ((google::protobuf::Arena **)v20 != v21)
      {
        if (v20) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
        uint64_t v20 = (uint64_t)v21;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(4, v20, a2);
      int v22 = (unsigned int *)*((void *)v25[0] + 3);
      if (*((char *)v22 + 23) < 0)
      {
        int v22 = *(unsigned int **)v22;
        uint64_t v23 = *(void *)(*((void *)v25[0] + 3) + 8);
      }
      else
      {
        LODWORD(v23) = *((unsigned __int8 *)v22 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v22, v23, 1, (uint64_t)"CoreML.Specification.MILSpec.Program.AttributesEntry.key");
      uint64_t result = (uint64_t)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v25);
    }
    if (v20) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
  }
  return result;
}

void sub_1DC093C70(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  unint64_t v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    int v91 = a2 - 24;
    int v92 = a2 - 16;
    uint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                int v41 = *(void **)v95;
                int v42 = *(void **)v9;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)uint64_t v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            uint64_t v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                uint64_t v47 = v9;
                do
                {
                  uint64_t v49 = *(void **)v47;
                  uint64_t v48 = (void *)*((void *)v47 + 1);
                  uint64_t v47 = v43;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      uint64_t v49 = *(void **)&v9[v50 - 8];
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        uint64_t v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    uint64_t v51 = v9;
LABEL_80:
                    *(void *)uint64_t v51 = v48;
                  }
                  uint64_t v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                int v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                if (result)
                {
                  int v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                uint64_t v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              long long v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  uint64_t v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    uint64_t v58 = *(void **)v56;
                    int v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      int v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    int v60 = *(void **)v56;
                  }
                  char v61 = &v98[8 * v54];
                  uint64_t v62 = *(void **)v61;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      unsigned int v63 = v56;
                      *(void *)char v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      uint64_t v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        int v60 = *(void **)v56;
                        int v66 = (void *)*((void *)v56 + 1);
                        if (std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v66))
                        {
                          int v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        int v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, v62);
                      char v61 = v63;
                    }
                    while (!result);
                    *(void *)unsigned int v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              int v68 = v98;
              do
              {
                char v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                int v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    int v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    int v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v73, v77);
                    if (result) {
                      int v78 = v77;
                    }
                    else {
                      int v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)int v68 = v78;
                  int v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    uint64_t v81 = &v98[8 * v80];
                    int v82 = *(void **)v81;
                    uint64_t v83 = *(void **)v73;
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        int v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        uint64_t v81 = &v98[8 * v80];
                        int v82 = *(void **)v81;
                        uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)int v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                int v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          signed int v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            uint64_t v15 = *(void **)v9;
            *(void *)uint64_t v9 = *(void *)v14;
            *(void *)signed int v14 = v15;
          }
          --a3;
          uint64_t v16 = *(void **)v9;
          int v17 = v9;
          if (a4) {
            break;
          }
          int v17 = v9;
          if (std::less<std::string>::operator()[abi:ne180100](*((void **)v9 - 1), *(void **)v9)) {
            break;
          }
          uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v95);
          if (result)
          {
            do
            {
              int v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            signed int v32 = v9 + 8;
            do
            {
              uint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v9);
            }
            while (!result);
          }
          uint64_t v33 = a2;
          if (v9 < a2)
          {
            uint64_t v33 = a2;
            do
            {
              int v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v34);
            }
            while ((result & 1) != 0);
          }
          int v35 = a2;
          if (v9 < v33)
          {
            int v36 = *(void **)v9;
            int v37 = *(void **)v33;
            do
            {
              *(void *)uint64_t v9 = v37;
              *(void *)uint64_t v33 = v36;
              do
              {
                signed int v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                int v36 = v38;
              }
              while (!std::less<std::string>::operator()[abi:ne180100](v16, v38));
              do
              {
                unsigned int v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                int v37 = v39;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          int v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)int v40 = v16;
        }
        do
        {
          unint64_t v18 = v17;
          uint64_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          uint64_t v19 = v20;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v20, v16));
        uint64_t v97 = a3;
        unint64_t v21 = a2;
        if (v18 == (char *)v10)
        {
          unint64_t v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            uint64_t v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v23, v16));
        }
        else
        {
          do
          {
            int v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v22, v16));
        }
        unint64_t v8 = (char *)v10;
        unsigned int v24 = a2;
        if (v17 < v21)
        {
          int v25 = *(void **)v21;
          int v26 = v17;
          int v27 = v21;
          do
          {
            *(void *)int v26 = v25;
            *(void *)int v27 = v19;
            do
            {
              unint64_t v18 = v26;
              uint64_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              uint64_t v19 = v28;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v28, v16));
            do
            {
              unint64_t v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              int v25 = v29;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)unint64_t v8 = *(void *)v18;
        }
        *(void *)unint64_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        uint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const**>((void **)v8, (void **)v18);
      uint64_t v9 = v18 + 8;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

unsigned __int8 **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(unsigned __int8 **a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (unsigned __int8 *)*((void *)*a1 + 4);
  if (v3) {
    goto LABEL_2;
  }
  uint64_t v16 = 0;
  uint64_t v4 = (uint64_t)a1[1];
  uint64_t v5 = (unint64_t)a1[2] & (*(void *)(v4 + 8) - 1);
  a1[2] = (unsigned __int8 *)v5;
  uint64_t v6 = *(void *)(v4 + 32);
  uint64_t v7 = *(void *)(v6 + 8 * v5);
  if ((unsigned __int8 *)v7 == v2) {
    goto LABEL_11;
  }
  if (v7 && v7 != *(void *)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      uint64_t v7 = *(void *)(v7 + 32);
      if (!v7) {
        break;
      }
      if ((unsigned __int8 *)v7 == v2) {
        goto LABEL_11;
      }
    }
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v17, v4, v2, (uint64_t *)&v16);
  uint64_t v5 = v18;
  a1[2] = (unsigned __int8 *)v18;
  uint64_t v8 = *((void *)a1[1] + 4);
  uint64_t v9 = *(void *)(v8 + 8 * v5);
  if (!v9 || v9 != *(void *)(v8 + 8 * (v5 ^ 1)))
  {
LABEL_11:
    unint64_t v10 = v5 + 1;
LABEL_12:
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a1, v10);
    return a1;
  }
  uint64_t v12 = (uint64_t)v16;
  unint64_t v13 = (void *)v16[1];
  if (v13)
  {
    do
    {
      signed int v14 = v13;
      unint64_t v13 = (void *)*v13;
    }
    while (v13);
  }
  else
  {
    do
    {
      signed int v14 = *(void **)(v12 + 16);
      BOOL v15 = *v14 == v12;
      uint64_t v12 = (uint64_t)v14;
    }
    while (!v15);
  }
  uint64_t v16 = v14;
  if (v14 == (void *)(v9 + 8))
  {
    unint64_t v10 = v5 + 2;
    goto LABEL_12;
  }
  uint64_t v3 = (unsigned __int8 *)v14[4];
LABEL_2:
  *a1 = v3;
  return a1;
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *uint64_t result = (google::protobuf::Arena *)&unk_1F36271A8;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Scaler::New(this, 0) = 3;
  return result;
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  uint64_t v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    int v91 = a2 - 24;
    int v92 = a2 - 16;
    uint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                int v41 = *(void **)v95;
                int v42 = *(void **)v9;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)uint64_t v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            uint64_t v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                uint64_t v47 = v9;
                do
                {
                  uint64_t v49 = *(void **)v47;
                  uint64_t v48 = (void *)*((void *)v47 + 1);
                  uint64_t v47 = v43;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      uint64_t v49 = *(void **)&v9[v50 - 8];
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        uint64_t v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    uint64_t v51 = v9;
LABEL_80:
                    *(void *)uint64_t v51 = v48;
                  }
                  uint64_t v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                int v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                if (result)
                {
                  int v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                uint64_t v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              long long v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  uint64_t v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    uint64_t v58 = *(void **)v56;
                    int v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      int v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    int v60 = *(void **)v56;
                  }
                  char v61 = &v98[8 * v54];
                  uint64_t v62 = *(void **)v61;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      unsigned int v63 = v56;
                      *(void *)char v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      uint64_t v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        int v60 = *(void **)v56;
                        int v66 = (void *)*((void *)v56 + 1);
                        if (std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v66))
                        {
                          int v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        int v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, v62);
                      char v61 = v63;
                    }
                    while (!result);
                    *(void *)unsigned int v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              int v68 = v98;
              do
              {
                char v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                int v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    int v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    int v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v73, v77);
                    if (result) {
                      int v78 = v77;
                    }
                    else {
                      int v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)int v68 = v78;
                  int v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    uint64_t v81 = &v98[8 * v80];
                    int v82 = *(void **)v81;
                    uint64_t v83 = *(void **)v73;
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        int v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        uint64_t v81 = &v98[8 * v80];
                        int v82 = *(void **)v81;
                        uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)int v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                int v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          signed int v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            BOOL v15 = *(void **)v9;
            *(void *)uint64_t v9 = *(void *)v14;
            *(void *)signed int v14 = v15;
          }
          --a3;
          uint64_t v16 = *(void **)v9;
          uint64_t v17 = v9;
          if (a4) {
            break;
          }
          uint64_t v17 = v9;
          if (std::less<std::string>::operator()[abi:ne180100](*((void **)v9 - 1), *(void **)v9)) {
            break;
          }
          uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v95);
          if (result)
          {
            do
            {
              int v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            signed int v32 = v9 + 8;
            do
            {
              uint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v9);
            }
            while (!result);
          }
          uint64_t v33 = a2;
          if (v9 < a2)
          {
            uint64_t v33 = a2;
            do
            {
              int v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v34);
            }
            while ((result & 1) != 0);
          }
          int v35 = a2;
          if (v9 < v33)
          {
            int v36 = *(void **)v9;
            int v37 = *(void **)v33;
            do
            {
              *(void *)uint64_t v9 = v37;
              *(void *)uint64_t v33 = v36;
              do
              {
                signed int v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                int v36 = v38;
              }
              while (!std::less<std::string>::operator()[abi:ne180100](v16, v38));
              do
              {
                unsigned int v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                int v37 = v39;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          int v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)int v40 = v16;
        }
        do
        {
          uint64_t v18 = v17;
          uint64_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          uint64_t v19 = v20;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v20, v16));
        uint64_t v97 = a3;
        unint64_t v21 = a2;
        if (v18 == (char *)v10)
        {
          unint64_t v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            uint64_t v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v23, v16));
        }
        else
        {
          do
          {
            int v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v22, v16));
        }
        uint64_t v8 = (char *)v10;
        unsigned int v24 = a2;
        if (v17 < v21)
        {
          int v25 = *(void **)v21;
          int v26 = v17;
          int v27 = v21;
          do
          {
            *(void *)int v26 = v25;
            *(void *)int v27 = v19;
            do
            {
              uint64_t v18 = v26;
              uint64_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              uint64_t v19 = v28;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v28, v16));
            do
            {
              unint64_t v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              int v25 = v29;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)uint64_t v8 = *(void *)v18;
        }
        *(void *)uint64_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        uint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const**>((void **)v8, (void **)v18);
      uint64_t v9 = v18 + 8;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3626F08;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Scaler::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  uint64_t v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  char *v7 = 18;
  uint64_t v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *uint64_t v9 = v11;
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 40) + ((9 * (__clz(*(_DWORD *)(v4 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::MILSpec::Value *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::MILSpec::Value::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t CoreML::Specification::MILSpec::Value::ByteSizeLong(CoreML::Specification::MILSpec::Value *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if (this != (CoreML::Specification::MILSpec::Value *)&CoreML::Specification::MILSpec::_Value_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::MILSpec::TensorType **)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::MILSpec::ValueType::ByteSizeLong(v6);
      v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  int v8 = *((_DWORD *)this + 11);
  if (v8 == 5)
  {
    uint64_t v9 = CoreML::Specification::MILSpec::Value_BlobFileValue::ByteSizeLong(*((CoreML::Specification::MILSpec::Value_BlobFileValue **)this
                                                                           + 4));
    goto LABEL_15;
  }
  if (v8 == 3)
  {
    uint64_t v9 = CoreML::Specification::MILSpec::Value_ImmediateValue::ByteSizeLong(*((CoreML::Specification::MILSpec::TensorValue ***)this
                                                                            + 4));
LABEL_15:
    v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = v5;
  return v5;
}

uint64_t CoreML::Specification::MILSpec::ValueType::ByteSizeLong(CoreML::Specification::MILSpec::TensorType **this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      uint64_t v2 = CoreML::Specification::MILSpec::TensorType::ByteSizeLong(this[2]);
      goto LABEL_8;
    case 2:
      uint64_t v2 = CoreML::Specification::MILSpec::ListType::ByteSizeLong(this[2]);
      goto LABEL_8;
    case 3:
      uint64_t v2 = CoreML::Specification::MILSpec::TupleType::ByteSizeLong(this[2]);
      goto LABEL_8;
    case 4:
      uint64_t v2 = CoreML::Specification::MILSpec::DictionaryType::ByteSizeLong(this[2]);
      goto LABEL_8;
    case 5:
      uint64_t v2 = (uint64_t)CoreML::Specification::MILSpec::StateType::ByteSizeLong(this[2]);
LABEL_8:
      uint64_t result = v2 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::MILSpec::Value_ImmediateValue::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue **this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      uint64_t v2 = CoreML::Specification::MILSpec::TensorValue::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 2:
      uint64_t v2 = CoreML::Specification::MILSpec::TupleValue::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 3:
      uint64_t v2 = CoreML::Specification::MILSpec::ListValue::ByteSizeLong(this[2]);
      goto LABEL_7;
    case 4:
      uint64_t v2 = CoreML::Specification::MILSpec::DictionaryValue::ByteSizeLong(this[2]);
LABEL_7:
      uint64_t result = v2 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::MILSpec::Value_BlobFileValue::ByteSizeLong(CoreML::Specification::MILSpec::Value_BlobFileValue *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  if (v5) {
    v4 += ((9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::TensorValue::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue *this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      uint64_t v2 = (unsigned int *)*((void *)this + 2);
      uint64_t v3 = v2[4];
      uint64_t v4 = 4 * v3;
      if (v3) {
        goto LABEL_7;
      }
      goto LABEL_3;
    case 2:
      uint64_t v7 = CoreML::Specification::MILSpec::TensorValue_RepeatedInts::ByteSizeLong(*((CoreML::Specification::MILSpec::TensorValue_RepeatedInts **)this
                                                                                  + 2));
      goto LABEL_14;
    case 3:
      uint64_t v2 = (unsigned int *)*((void *)this + 2);
      uint64_t v4 = v2[4];
      if (v4) {
        goto LABEL_7;
      }
      goto LABEL_3;
    case 4:
      uint64_t v7 = CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::ByteSizeLong(*((CoreML::Specification::MILSpec::TensorValue_RepeatedStrings **)this
                                                                                     + 2));
      goto LABEL_14;
    case 5:
      uint64_t v7 = CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::ByteSizeLong(*((CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)this
                                                                                      + 2));
      goto LABEL_14;
    case 6:
      uint64_t v2 = (unsigned int *)*((void *)this + 2);
      uint64_t v8 = v2[4];
      uint64_t v4 = 8 * v8;
      if (v8)
      {
LABEL_7:
        if ((v4 & 0x80000000) != 0) {
          uint64_t v5 = 11;
        }
        else {
          uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
LABEL_3:
        uint64_t v5 = 0;
      }
      uint64_t v10 = v5 + v4;
      unsigned char v2[8] = v4;
      v2[9] = v10;
      uint64_t v9 = v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_17;
    case 7:
      uint64_t v7 = CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::ByteSizeLong(*((CoreML::Specification::MILSpec::TensorValue_RepeatedBytes **)this
                                                                                   + 2));
LABEL_14:
      uint64_t v9 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
LABEL_17:
      uint64_t result = v9 + 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::MILSpec::TupleValue::ByteSizeLong(CoreML::Specification::MILSpec::TupleValue *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::MILSpec::Value::ByteSizeLong(*(CoreML::Specification::MILSpec::Value **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::ListValue::ByteSizeLong(CoreML::Specification::MILSpec::ListValue *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::MILSpec::Value::ByteSizeLong(*(CoreML::Specification::MILSpec::Value **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue::ByteSizeLong(CoreML::Specification::MILSpec::DictionaryValue *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::ByteSizeLong(*(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::ByteSizeLong(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this)
{
  if (this == (CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *)&CoreML::Specification::MILSpec::_DictionaryValue_KeyValuePair_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    int v2 = (CoreML::Specification::MILSpec::Value *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::MILSpec::Value::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::MILSpec::Value *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::MILSpec::Value::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedInts::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue_RepeatedInts *this)
{
  uint64_t v2 = google::protobuf::internal::WireFormatLite::Int32Size(*((_DWORD *)this + 4), *((void *)this + 3));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  uint64_t result = v4 + v2;
  *((_DWORD *)this + 8) = v3;
  *((_DWORD *)this + 9) = result;
  return result;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *((unsigned int *)this + 6);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*((void *)this + 4) + 8);
    uint64_t v3 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = v3;
  return v3;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    uint64_t v2 = 0;
LABEL_8:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  uint64_t v3 = (uint64_t *)(*((void *)this + 3) + 8);
  do
  {
    uint64_t v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2) {
    goto LABEL_8;
  }
  if ((v2 & 0x80000000) != 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  *((_DWORD *)this + 6) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::TensorType::ByteSizeLong(CoreML::Specification::MILSpec::TensorType *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
      v4 += CoreML::Specification::MILSpec::Dimension::ByteSizeLong(*(CoreML::Specification::MILSpec::Dimension **)(*((void *)this + 4) + 8 * v3++ + 8))
          + 1;
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = (void *)*((void *)this + 8);
  uint64_t v6 = *(unsigned int *)v5;
  google::protobuf::Map<std::string,std::string>::begin(v15, v5);
  uint64_t v7 = 0;
  uint64_t v8 = v6 + v4;
  while (v15[0])
  {
    uint64_t v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v15[0] + 3), (google::protobuf::Arena *)(*((void *)v15[0] + 3) + 24), *((google::protobuf::Arena **)this + 5));
    if (v7 != v9)
    {
      if (v7) {
        (*((void (**)(google::protobuf::Arena **))*v7 + 1))(v7);
      }
      uint64_t v7 = v9;
    }
    uint64_t v10 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v7);
    v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v15);
  }
  if (v7) {
    (*((void (**)(google::protobuf::Arena **))*v7 + 1))(v7);
  }
  uint64_t v11 = *((void *)this + 9);
  if (v11) {
    v8 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  int v12 = *((_DWORD *)this + 20);
  if (v12)
  {
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v8 += v13;
  }
  *((_DWORD *)this + 21) = v8;
  return v8;
}

void sub_1DC095C6C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::MILSpec::ListType::ByteSizeLong(CoreML::Specification::MILSpec::ListType *this)
{
  if (this == (CoreML::Specification::MILSpec::ListType *)&CoreML::Specification::MILSpec::_ListType_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    int v2 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::MILSpec::ValueType::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::MILSpec::Dimension *)*((void *)this + 3);
    if (v5) {
      v4 += CoreML::Specification::MILSpec::Dimension::ByteSizeLong(v5) + 2;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::TupleType::ByteSizeLong(CoreML::Specification::MILSpec::TupleType *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::MILSpec::ValueType::ByteSizeLong(*(CoreML::Specification::MILSpec::ValueType **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::DictionaryType::ByteSizeLong(CoreML::Specification::MILSpec::DictionaryType *this)
{
  if (this == (CoreML::Specification::MILSpec::DictionaryType *)&CoreML::Specification::MILSpec::_DictionaryType_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    int v2 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::MILSpec::ValueType::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = CoreML::Specification::MILSpec::ValueType::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

CoreML::Specification::MILSpec::ValueType *CoreML::Specification::MILSpec::StateType::ByteSizeLong(CoreML::Specification::MILSpec::StateType *this)
{
  if (this == (CoreML::Specification::MILSpec::StateType *)&CoreML::Specification::MILSpec::_StateType_default_instance_)
  {
    uint64_t result = 0;
  }
  else
  {
    uint64_t result = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 2);
    if (result)
    {
      uint64_t v3 = CoreML::Specification::MILSpec::ValueType::ByteSizeLong(result);
      uint64_t result = (CoreML::Specification::MILSpec::ValueType *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

unint64_t CoreML::Specification::MILSpec::Dimension::ByteSizeLong(CoreML::Specification::MILSpec::Dimension *this)
{
  int v1 = *((_DWORD *)this + 7);
  if (v1 == 2)
  {
    uint64_t v4 = *((void *)this + 2);
    unint64_t v3 = 2 * *(unsigned __int8 *)(v4 + 16);
    *(_DWORD *)(v4 + 2CoreML::Specification::Scaler::New(this, 0) = v3;
  }
  else
  {
    if (v1 != 1)
    {
      unint64_t v5 = 0;
      goto LABEL_9;
    }
    uint64_t v2 = *((void *)this + 2);
    unint64_t v3 = *(void *)(v2 + 16);
    if (v3) {
      unint64_t v3 = ((9 * (__clz(v3 | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    *(_DWORD *)(v2 + 24) = v3;
  }
  unint64_t v5 = v3 + 2;
LABEL_9:
  *((_DWORD *)this + 6) = v5;
  return v5;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::Scaler::New(this, 0) = v9;
        uint64_t v10 = *(char **)this;
        if (*(void *)this < *((void *)this + 1) && *v10 == 18)
        {
          *(void *)this = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::Scaler::New(this, 0) = v9 | 2;
      Aligned = *(google::protobuf::Arena ***)(a1 + 24);
      if (!Aligned)
      {
        int v12 = *(google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::MILSpec::Value::Value((CoreML::Specification::MILSpec::Value *)Aligned);
        uint64_t v13 = google::protobuf::Arena::AllocateAligned(v12, 0, 24);
        *uint64_t v13 = (google::protobuf::Arena *)Aligned;
        v13[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Value>;
        signed int v14 = (unint64_t *)((char *)v12 + 32);
        do
          unint64_t v15 = __ldxr(v14);
        while (__stxr((unint64_t)v13, v14));
        void v13[2] = (google::protobuf::Arena *)v15;
        *(void *)(a1 + 24) = Aligned;
      }
      uint64_t v16 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1) || *v16 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v16;
        *(void *)this = v16 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
      int v20 = *((_DWORD *)this + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)this + 13) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      uint64_t result = CoreML::Specification::MILSpec::Value::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Value *)Aligned, this, v19);
      if (!result) {
        return result;
      }
      uint64_t result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v22);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_1DC096190(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::Value *CoreML::Specification::MILSpec::Value::Value(CoreML::Specification::MILSpec::Value *this)
{
  *(void *)this = &unk_1F3625EA0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::Value *)&CoreML::Specification::MILSpec::_Value_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_1DC096220(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Value::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Value *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (std::string **)((char *)this + 16);
  while (2)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) != 0) {
        goto LABEL_8;
      }
LABEL_27:
      if (v8) {
        BOOL v18 = (v8 & 7) == 4;
      }
      else {
        BOOL v18 = 1;
      }
      if (v18) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
        goto LABEL_56;
      }
    }
    LODWORD(v7) = 0;
LABEL_7:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
    unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0) {
      goto LABEL_27;
    }
LABEL_8:
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_27;
        }
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
        if (!result) {
          return result;
        }
        uint64_t v11 = (unsigned int *)*v5;
        if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v11 = *(unsigned int **)v11;
          std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, size, 0, (uint64_t)"CoreML.Specification.MILSpec.Value.docString"))goto LABEL_56; {
        continue;
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_27;
        }
        uint64_t v13 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 3);
        if (!v13) {
          operator new();
        }
        signed int v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v14;
          *(void *)a2 = v14 + 1;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v25 = *((_DWORD *)a2 + 13);
        BOOL v26 = __OFSUB__(v25--, 1);
        *((_DWORD *)a2 + 13) = v25;
        if (v25 < 0 != v26) {
          goto LABEL_56;
        }
        int v27 = v23;
        uint64_t result = CoreML::Specification::MILSpec::ValueType::MergePartialFromCodedStream(v13, a2, v24);
        if (!result) {
          return result;
        }
        goto LABEL_52;
      case 3u:
        if (v8 != 26) {
          goto LABEL_27;
        }
        if (*((_DWORD *)this + 11) != 3)
        {
          CoreML::Specification::MILSpec::Value::clear_value((uint64_t)this);
          *((_DWORD *)this + 11) = 3;
          operator new();
        }
        uint64_t v16 = (CoreML::Specification::MILSpec::Value_ImmediateValue *)*((void *)this + 4);
        unsigned int v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v20 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v20 = *v19;
          *(void *)a2 = v19 + 1;
        }
        int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
        int v30 = *((_DWORD *)a2 + 13);
        BOOL v26 = __OFSUB__(v30--, 1);
        *((_DWORD *)a2 + 13) = v30;
        if (v30 < 0 != v26) {
          goto LABEL_56;
        }
        int v27 = v28;
        uint64_t result = CoreML::Specification::MILSpec::Value_ImmediateValue::MergePartialFromCodedStream(v16, a2, v29);
        if (!result) {
          return result;
        }
        goto LABEL_52;
      case 5u:
        if (v8 != 42) {
          goto LABEL_27;
        }
        if (*((_DWORD *)this + 11) != 5)
        {
          CoreML::Specification::MILSpec::Value::clear_value((uint64_t)this);
          *((_DWORD *)this + 11) = 5;
          operator new();
        }
        uint64_t v17 = (CoreML::Specification::MILSpec::Value_BlobFileValue *)*((void *)this + 4);
        BOOL v21 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
        {
          int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v22 < 0) {
            goto LABEL_56;
          }
        }
        else
        {
          int v22 = *v21;
          *(void *)a2 = v21 + 1;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
        int v33 = *((_DWORD *)a2 + 13);
        BOOL v26 = __OFSUB__(v33--, 1);
        *((_DWORD *)a2 + 13) = v33;
        if (v33 < 0 != v26) {
          goto LABEL_56;
        }
        int v27 = v31;
        uint64_t result = CoreML::Specification::MILSpec::Value_BlobFileValue::MergePartialFromCodedStream(v17, (char **)a2, v32);
        if (!result) {
          return result;
        }
LABEL_52:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27)) {
          continue;
        }
LABEL_56:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_27;
    }
    return result;
  }
}

void sub_1DC0965B4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::ValueType *CoreML::Specification::MILSpec::ValueType::ValueType(CoreML::Specification::MILSpec::ValueType *this)
{
  *(void *)this = &unk_1F36263F8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::ValueType *)&CoreML::Specification::MILSpec::_ValueType_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC096664(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::ValueType::MergePartialFromCodedStream(CoreML::Specification::MILSpec::ValueType *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_23:
      if (v7) {
        BOOL v14 = (v7 & 7) == 4;
      }
      else {
        BOOL v14 = 1;
      }
      if (v14) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
        goto LABEL_69;
      }
    }
    LODWORD(v6) = 0;
LABEL_6:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_23;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 1)
        {
          CoreML::Specification::MILSpec::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 1;
          operator new();
        }
        int v9 = (CoreML::Specification::MILSpec::TensorType *)*((void *)this + 2);
        uint64_t v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_69;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v17;
          *(void *)a2 = v17 + 1;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v33 = *((_DWORD *)a2 + 13);
        BOOL v28 = __OFSUB__(v33--, 1);
        *((_DWORD *)a2 + 13) = v33;
        if (v33 < 0 != v28) {
          goto LABEL_69;
        }
        int v29 = v31;
        uint64_t result = CoreML::Specification::MILSpec::TensorType::MergePartialFromCodedStream(v9, a2, v32);
        if (!result) {
          return result;
        }
        goto LABEL_68;
      case 2u:
        if (v7 != 18) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::MILSpec::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        uint64_t v11 = (CoreML::Specification::MILSpec::ListType *)*((void *)this + 2);
        unsigned int v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v20 < 0) {
            goto LABEL_69;
          }
        }
        else
        {
          int v20 = *v19;
          *(void *)a2 = v19 + 1;
        }
        int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
        int v36 = *((_DWORD *)a2 + 13);
        BOOL v28 = __OFSUB__(v36--, 1);
        *((_DWORD *)a2 + 13) = v36;
        if (v36 < 0 != v28) {
          goto LABEL_69;
        }
        int v29 = v34;
        uint64_t result = CoreML::Specification::MILSpec::ListType::MergePartialFromCodedStream(v11, a2, v35);
        if (!result) {
          return result;
        }
        goto LABEL_68;
      case 3u:
        if (v7 != 26) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 3)
        {
          CoreML::Specification::MILSpec::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 3;
          operator new();
        }
        int v12 = (CoreML::Specification::MILSpec::TupleType *)*((void *)this + 2);
        BOOL v21 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
        {
          int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v22 < 0) {
            goto LABEL_69;
          }
        }
        else
        {
          int v22 = *v21;
          *(void *)a2 = v21 + 1;
        }
        int v37 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
        int v39 = *((_DWORD *)a2 + 13);
        BOOL v28 = __OFSUB__(v39--, 1);
        *((_DWORD *)a2 + 13) = v39;
        if (v39 < 0 != v28) {
          goto LABEL_69;
        }
        int v29 = v37;
        uint64_t result = CoreML::Specification::MILSpec::TupleType::MergePartialFromCodedStream(v12, a2, v38);
        if (!result) {
          return result;
        }
        goto LABEL_68;
      case 4u:
        if (v7 != 34) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 4)
        {
          CoreML::Specification::MILSpec::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 4;
          operator new();
        }
        uint64_t v13 = (CoreML::Specification::MILSpec::DictionaryType *)*((void *)this + 2);
        int v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
        {
          int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v24 < 0) {
            goto LABEL_69;
          }
        }
        else
        {
          int v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        int v40 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
        int v42 = *((_DWORD *)a2 + 13);
        BOOL v28 = __OFSUB__(v42--, 1);
        *((_DWORD *)a2 + 13) = v42;
        if (v42 < 0 != v28) {
          goto LABEL_69;
        }
        int v29 = v40;
        uint64_t result = CoreML::Specification::MILSpec::DictionaryType::MergePartialFromCodedStream(v13, a2, v41);
        if (!result) {
          return result;
        }
LABEL_68:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29)) {
          continue;
        }
LABEL_69:
        uint64_t result = 0;
        break;
      case 5u:
        if (v7 != 42) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 5)
        {
          CoreML::Specification::MILSpec::ValueType::clear_type((uint64_t)this);
          *((_DWORD *)this + 7) = 5;
          operator new();
        }
        uint64_t v10 = (CoreML::Specification::MILSpec::StateType *)*((void *)this + 2);
        unint64_t v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v16 < 0) {
            goto LABEL_69;
          }
        }
        else
        {
          int v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
        int v27 = *((_DWORD *)a2 + 13);
        BOOL v28 = __OFSUB__(v27--, 1);
        *((_DWORD *)a2 + 13) = v27;
        if (v27 < 0 != v28) {
          goto LABEL_69;
        }
        int v29 = v25;
        uint64_t result = CoreML::Specification::MILSpec::StateType::MergePartialFromCodedStream(v10, a2, v26);
        if (!result) {
          return result;
        }
        goto LABEL_68;
      default:
        goto LABEL_23;
    }
    return result;
  }
}

void sub_1DC096B10(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4012099E73);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Value::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 44);
  if (v2 == 5 || v2 == 3)
  {
    this = *(void *)(this + 32);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

CoreML::Specification::MILSpec::Value_ImmediateValue *CoreML::Specification::MILSpec::Value_ImmediateValue::Value_ImmediateValue(CoreML::Specification::MILSpec::Value_ImmediateValue *this)
{
  *(void *)this = &unk_1F3625780;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::Value_ImmediateValue *)&CoreML::Specification::MILSpec::_Value_ImmediateValue_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC096C4C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Value_ImmediateValue::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Value_ImmediateValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_20:
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
        goto LABEL_58;
      }
    }
    LODWORD(v6) = 0;
LABEL_6:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_20;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 1)
        {
          CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 1;
          operator new();
        }
        int v9 = (CoreML::Specification::MILSpec::TensorValue *)*((void *)this + 2);
        BOOL v14 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v14;
          *(void *)a2 = v14 + 1;
        }
        int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 13) = v24;
        if (v24 < 0 != v25) {
          goto LABEL_58;
        }
        int v26 = v22;
        uint64_t result = CoreML::Specification::MILSpec::TensorValue::MergePartialFromCodedStream(v9, a2, v23);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 2u:
        if (v7 != 18) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        uint64_t v10 = (CoreML::Specification::MILSpec::TupleValue *)*((void *)this + 2);
        int v16 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
        {
          int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v17 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v17 = *v16;
          *(void *)a2 = v16 + 1;
        }
        int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
        int v30 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v30--, 1);
        *((_DWORD *)a2 + 13) = v30;
        if (v30 < 0 != v25) {
          goto LABEL_58;
        }
        int v26 = v28;
        uint64_t result = CoreML::Specification::MILSpec::TupleValue::MergePartialFromCodedStream(v10, a2, v29);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 3u:
        if (v7 != 26) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 3)
        {
          CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 3;
          operator new();
        }
        uint64_t v11 = (CoreML::Specification::MILSpec::ListValue *)*((void *)this + 2);
        BOOL v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v19 = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
        int v33 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v33--, 1);
        *((_DWORD *)a2 + 13) = v33;
        if (v33 < 0 != v25) {
          goto LABEL_58;
        }
        int v26 = v31;
        uint64_t result = CoreML::Specification::MILSpec::ListValue::MergePartialFromCodedStream(v11, a2, v32);
        if (!result) {
          return result;
        }
        goto LABEL_57;
      case 4u:
        if (v7 != 34) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 4)
        {
          CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 4;
          operator new();
        }
        int v12 = (CoreML::Specification::MILSpec::DictionaryValue *)*((void *)this + 2);
        int v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v21 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v21 = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
        int v36 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v36--, 1);
        *((_DWORD *)a2 + 13) = v36;
        if (v36 < 0 != v25) {
          goto LABEL_58;
        }
        int v26 = v34;
        uint64_t result = CoreML::Specification::MILSpec::DictionaryValue::MergePartialFromCodedStream(v12, a2, v35);
        if (!result) {
          return result;
        }
LABEL_57:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26)) {
          continue;
        }
LABEL_58:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_20;
    }
    return result;
  }
}

void sub_1DC097038(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::Value_BlobFileValue *CoreML::Specification::MILSpec::Value_BlobFileValue::Value_BlobFileValue(CoreML::Specification::MILSpec::Value_BlobFileValue *this)
{
  *(void *)this = &unk_1F36256E8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::Value_BlobFileValue *)&CoreML::Specification::MILSpec::_Value_BlobFileValue_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0970F4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::MILSpec::Value_BlobFileValue::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Value_BlobFileValue *this, char **a2, unsigned int a3)
{
  unint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_23;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_23;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 16) {
          goto LABEL_23;
        }
        BOOL v14 = *a2;
        if (*a2 >= a2[1] || *v14 < 0)
        {
          *((void *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          *((void *)this + 3) = *v14;
          *a2 = v14 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v5);
      if (!result) {
        return result;
      }
      int v12 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        int v12 = *(unsigned int **)v12;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.MILSpec.Value.BlobFileValue.fileName"))return 0; {
    }
      }
LABEL_23:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

unint64_t *CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(CoreML::Specification::MILSpec::protobuf_MIL_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::MILSpec::protobuf_MIL_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

void CoreML::Specification::MILSpec::protobuf_MIL_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::MILSpec::protobuf_MIL_2eproto::TableStruct *this)
{
  qword_1EC0063A8 = 0;
  unk_1EC0063B0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC0063B8 = 0;
  unk_1EC0063C0 = 0;
  dword_1EC0063C8 = 0;
  CoreML::Specification::MILSpec::_Program_FunctionsEntry_default_instance_ = (uint64_t)&unk_1F3627CD0;
  byte_1EC0063D0 = 1;
  qword_1EC0063E0 = 0;
  unk_1EC0063E8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC0063F0 = 0;
  unk_1EC0063F8 = 0;
  dword_1EC006400 = 0;
  CoreML::Specification::MILSpec::_Program_AttributesEntry_default_instance_ = (uint64_t)&unk_1F3627B80;
  byte_1EC006408 = 1;
  CoreML::Specification::MILSpec::Program::Program((CoreML::Specification::MILSpec::Program *)&CoreML::Specification::MILSpec::_Program_default_instance_);
}

void CoreML::Specification::MILSpec::Program::Program(CoreML::Specification::MILSpec::Program *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3625F38;
  *((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  operator new();
}

void sub_1DC097B74(_Unwind_Exception *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map(v3);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::Function *CoreML::Specification::MILSpec::Function::Function(CoreML::Specification::MILSpec::Function *this)
{
  *(void *)this = &unk_1F3626068;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Scaler::New(this, 0) = 0u;
  *((_DWORD *)this + 14) = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::Init((uint64_t)this + 48);
  *((void *)this + 1CoreML::Specification::Scaler::New(this, 0) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 22) = 0;
  int v2 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::Init((uint64_t)this + 80);
  *((_DWORD *)this + 22) = 0;
  if (this != (CoreML::Specification::MILSpec::Function *)&CoreML::Specification::MILSpec::_Function_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults((CoreML::Specification::MILSpec::protobuf_MIL_2eproto *)v2);
  }
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 28) = 0;
  return this;
}

void sub_1DC097C78(_Unwind_Exception *a1)
{
  unint64_t v5 = v4;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map(v5);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::~Map(v3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)(v2 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::Block *CoreML::Specification::MILSpec::Block::Block(CoreML::Specification::MILSpec::Block *this)
{
  *(void *)this = &unk_1F3625E08;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Scaler::New(this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_DWORD *)this + 26) = 0;
  uint64_t v2 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::Init((uint64_t)this + 96);
  *((_DWORD *)this + 26) = 0;
  if (this != (CoreML::Specification::MILSpec::Block *)&CoreML::Specification::MILSpec::_Block_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults((CoreML::Specification::MILSpec::protobuf_MIL_2eproto *)v2);
  }
  *((_DWORD *)this + 3CoreML::Specification::Scaler::New(this, 0) = 0;
  return this;
}

void sub_1DC097D54(_Unwind_Exception *a1)
{
  unint64_t v5 = v4;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)(v2 + 64));
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)(v2 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::MILSpec::Operation::Operation(CoreML::Specification::MILSpec::Operation *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36262C8;
  *((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  operator new();
}

void sub_1DC097E80(_Unwind_Exception *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3 + 3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::TensorType *CoreML::Specification::MILSpec::TensorType::TensorType(CoreML::Specification::MILSpec::TensorType *this)
{
  *(void *)this = &unk_1F36252C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::Scaler::New(this, 0) = 0u;
  *((_DWORD *)this + 14) = 0;
  uint64_t v2 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::Init((uint64_t)this + 48);
  *((_DWORD *)this + 14) = 0;
  if (this != (CoreML::Specification::MILSpec::TensorType *)&CoreML::Specification::MILSpec::_TensorType_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults((CoreML::Specification::MILSpec::protobuf_MIL_2eproto *)v2);
  }
  *((void *)this + 9) = 0;
  *((void *)this + 1CoreML::Specification::Scaler::New(this, 0) = 0;
  return this;
}

void sub_1DC097F74(_Unwind_Exception *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map(v3);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)(v2 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue::GetCachedSize(CoreML::Specification::MILSpec::DictionaryValue *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue::MergePartialFromCodedStream(CoreML::Specification::MILSpec::DictionaryValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (CoreML::Specification::MILSpec::DictionaryValue *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          int v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *int v12 = v14 + 1;
      char v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::DictionaryValue_KeyValuePair((CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *)Aligned);
      int v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      char *v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>;
      BOOL v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      void v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        uint64_t result = CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::MergePartialFromCodedStream((CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *)Aligned, a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC098248(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::MergePartialFromCodedStream(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      uint64_t v10 = (CoreML::Specification::MILSpec::Value *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      uint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v14;
        uint64_t result = CoreML::Specification::MILSpec::Value::MergePartialFromCodedStream(v10, a2);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      uint64_t v10 = (CoreML::Specification::MILSpec::Value *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC09840C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::DictionaryValue_KeyValuePair(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this)
{
  *(void *)this = &unk_1F3625CD8;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *)&CoreML::Specification::MILSpec::_DictionaryValue_KeyValuePair_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC098498(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

unint64_t *CoreML::Specification::MILSpec::DictionaryValue::MergeFrom(unint64_t *this, const CoreML::Specification::MILSpec::DictionaryValue *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (const CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair **)(v28 + 8);
      int v12 = (std::string **)this;
      do
      {
        int v14 = *v11++;
        int v13 = v14;
        int v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      BOOL v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      uint64_t v20 = (const CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::DictionaryValue_KeyValuePair((CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *)Aligned);
        unsigned int v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *unsigned int v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC098680(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>::Merge(const CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *a1, std::string *a2)
{
  return CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *)&CoreML::Specification::MILSpec::_DictionaryValue_KeyValuePair_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (CoreML::Specification::MILSpec::Value *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::Value::MergeFrom(v5, *((const CoreML::Specification::MILSpec::Value **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::MILSpec::Value *)*((void *)a2 + 3);
      data = (CoreML::Specification::MILSpec::Value *)v3[1].__r_.__value_.__l.__data_;
      return (std::string *)CoreML::Specification::MILSpec::Value::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_1DC0987B8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::Value::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::Value *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  if (a2 != (const CoreML::Specification::MILSpec::Value *)&CoreML::Specification::MILSpec::_Value_default_instance_
    && *((void *)a2 + 3))
  {
    data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
    if (!data) {
      operator new();
    }
    this = (std::string *)CoreML::Specification::MILSpec::ValueType::MergeFrom(data, *((const CoreML::Specification::MILSpec::ValueType **)a2 + 3));
  }
  int v8 = *((_DWORD *)a2 + 11);
  if (v8 == 5)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[2]) != 5)
    {
      CoreML::Specification::MILSpec::Value::clear_value((uint64_t)v3);
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = 5;
      operator new();
    }
    uint64_t v10 = (const CoreML::Specification::MILSpec::Value_BlobFileValue *)*((void *)a2 + 4);
    std::string::size_type size = (std::string *)v3[1].__r_.__value_.__l.__size_;
    return CoreML::Specification::MILSpec::Value_BlobFileValue::MergeFrom(size, v10);
  }
  else if (v8 == 3)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[2]) != 3)
    {
      CoreML::Specification::MILSpec::Value::clear_value((uint64_t)v3);
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = 3;
      operator new();
    }
    int v9 = (const CoreML::Specification::MILSpec::Value_ImmediateValue *)*((void *)a2 + 4);
    uint64_t v11 = v3[1].__r_.__value_.__l.__size_;
    return (std::string *)CoreML::Specification::MILSpec::Value_ImmediateValue::MergeFrom(v11, v9);
  }
  return this;
}

void sub_1DC0989FC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::MILSpec::ValueType::MergeFrom(unint64_t *this, const CoreML::Specification::MILSpec::ValueType *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        CoreML::Specification::MILSpec::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 1;
        operator new();
      }
      int v8 = (const CoreML::Specification::MILSpec::TensorType *)*((void *)a2 + 2);
      int v13 = *(CoreML::Specification::MILSpec::TensorType **)(v3 + 16);
      this = (unint64_t *)CoreML::Specification::MILSpec::TensorType::MergeFrom(v13, v8);
      break;
    case 2:
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        CoreML::Specification::MILSpec::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 2;
        operator new();
      }
      int v9 = (const CoreML::Specification::MILSpec::ListType *)*((void *)a2 + 2);
      int v14 = *(std::string **)(v3 + 16);
      this = (unint64_t *)CoreML::Specification::MILSpec::ListType::MergeFrom(v14, v9);
      break;
    case 3:
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        CoreML::Specification::MILSpec::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 3;
        operator new();
      }
      uint64_t v5 = (const CoreML::Specification::MILSpec::TupleType *)*((void *)a2 + 2);
      uint64_t v10 = *(unint64_t **)(v3 + 16);
      this = CoreML::Specification::MILSpec::TupleType::MergeFrom(v10, v5);
      break;
    case 4:
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        CoreML::Specification::MILSpec::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 4;
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::MILSpec::DictionaryType *)*((void *)a2 + 2);
      uint64_t v11 = *(std::string **)(v3 + 16);
      this = (unint64_t *)CoreML::Specification::MILSpec::DictionaryType::MergeFrom(v11, v6);
      break;
    case 5:
      if (*(_DWORD *)(v3 + 28) != 5)
      {
        CoreML::Specification::MILSpec::ValueType::clear_type(v3);
        *(_DWORD *)(v3 + 28) = 5;
        operator new();
      }
      uint64_t v7 = (const CoreML::Specification::MILSpec::StateType *)*((void *)a2 + 2);
      int v12 = *(std::string **)(v3 + 16);
      this = (unint64_t *)CoreML::Specification::MILSpec::StateType::MergeFrom(v12, v7);
      break;
    default:
      return this;
  }
  return this;
}

void sub_1DC098D64(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Value_ImmediateValue::MergeFrom(uint64_t this, const CoreML::Specification::MILSpec::Value_ImmediateValue *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (uint64_t)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(this + 8), v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 1;
        operator new();
      }
      uint64_t v7 = (const CoreML::Specification::MILSpec::TensorValue *)*((void *)a2 + 2);
      uint64_t v10 = *(std::string **)(v3 + 16);
      this = (uint64_t)CoreML::Specification::MILSpec::TensorValue::MergeFrom(v10, v7);
      break;
    case 2:
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 2;
        operator new();
      }
      uint64_t v5 = (const CoreML::Specification::MILSpec::TupleValue *)*((void *)a2 + 2);
      uint64_t v8 = *(void *)(v3 + 16);
      goto LABEL_18;
    case 3:
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 3;
        operator new();
      }
      uint64_t v5 = (const CoreML::Specification::MILSpec::TupleValue *)*((void *)a2 + 2);
      uint64_t v8 = *(void *)(v3 + 16);
LABEL_18:
      this = CoreML::Specification::MILSpec::TupleValue::MergeFrom(v8, v5);
      break;
    case 4:
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 4;
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::MILSpec::DictionaryValue *)*((void *)a2 + 2);
      int v9 = *(unint64_t **)(v3 + 16);
      this = (uint64_t)CoreML::Specification::MILSpec::DictionaryValue::MergeFrom(v9, v6);
      break;
    default:
      return this;
  }
  return this;
}

void sub_1DC09907C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::Value_BlobFileValue::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::Value_BlobFileValue *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  std::string::size_type v7 = *((void *)a2 + 3);
  if (v7) {
    v3[1].__r_.__value_.__r.__words[0] = v7;
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 28))
  {
    case 1:
    case 2:
    case 3:
    case 4:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::MILSpec::TensorValue *CoreML::Specification::MILSpec::TensorValue::TensorValue(CoreML::Specification::MILSpec::TensorValue *this)
{
  *(void *)this = &unk_1F36253F0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::TensorValue *)&CoreML::Specification::MILSpec::_TensorValue_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC099250(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::TensorValue::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::TensorValue *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        CoreML::Specification::MILSpec::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 1;
        operator new();
      }
      uint64_t v5 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((void *)a2 + 2);
      uint64_t v10 = *(unint64_t **)(v3 + 16);
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(v10, v5);
    case 2:
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        CoreML::Specification::MILSpec::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 2;
        operator new();
      }
      uint64_t v5 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((void *)a2 + 2);
      uint64_t v10 = *(unint64_t **)(v3 + 16);
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(v10, v5);
    case 3:
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        CoreML::Specification::MILSpec::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 3;
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedBools *)*((void *)a2 + 2);
      uint64_t v11 = *(unint64_t **)(v3 + 16);
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedBools::MergeFrom(v11, v6);
    case 4:
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        CoreML::Specification::MILSpec::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 4;
        operator new();
      }
      std::string::size_type v7 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 2);
      int v12 = *(std::string **)(v3 + 16);
      return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v12, v7);
    case 5:
      if (*(_DWORD *)(v3 + 28) != 5)
      {
        CoreML::Specification::MILSpec::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 5;
        operator new();
      }
      uint64_t v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 2);
      int v13 = *(unint64_t **)(v3 + 16);
      goto LABEL_39;
    case 6:
      if (*(_DWORD *)(v3 + 28) != 6)
      {
        CoreML::Specification::MILSpec::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 6;
        operator new();
      }
      uint64_t v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 2);
      int v13 = *(unint64_t **)(v3 + 16);
LABEL_39:
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v13, v8);
      break;
    case 7:
      if (*(_DWORD *)(v3 + 28) != 7)
      {
        CoreML::Specification::MILSpec::TensorValue::clear_value(v3);
        *(_DWORD *)(v3 + 28) = 7;
        operator new();
      }
      int v9 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *)*((void *)a2 + 2);
      int v14 = *(std::string **)(v3 + 16);
      this = CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::MergeFrom(v14, v9);
      break;
    default:
      return this;
  }
  return this;
}

void sub_1DC0996A8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::TupleValue *CoreML::Specification::MILSpec::TupleValue::TupleValue(CoreML::Specification::MILSpec::TupleValue *this)
{
  *(void *)this = &unk_1F3625358;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::MILSpec::TupleValue *)&CoreML::Specification::MILSpec::_TupleValue_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = 0;
  return this;
}

void sub_1DC099794(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::TupleValue::MergeFrom(uint64_t this, const CoreML::Specification::MILSpec::TupleValue *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (uint64_t)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(this + 8), v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::MILSpec::Value **)(*((void *)a2 + 4) + 8);
    std::string::size_type v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 16), v5);
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::Value>::TypeHandler>(v3 + 16, (CoreML::Specification::MILSpec::Value **)v7, v6, v5, **(_DWORD **)(v3 + 32) - *(_DWORD *)(v3 + 24));
    signed int v8 = *(_DWORD *)(v3 + 24) + v5;
    *(_DWORD *)(v3 + 24) = v8;
    int v9 = *(signed int **)(v3 + 32);
    if (*v9 < v8) {
      *int v9 = v8;
    }
  }
  return this;
}

CoreML::Specification::MILSpec::ListValue *CoreML::Specification::MILSpec::ListValue::ListValue(CoreML::Specification::MILSpec::ListValue *this)
{
  *(void *)this = &unk_1F3626230;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::MILSpec::ListValue *)&CoreML::Specification::MILSpec::_ListValue_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = 0;
  return this;
}

void sub_1DC0998CC(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::DictionaryValue *CoreML::Specification::MILSpec::DictionaryValue::DictionaryValue(CoreML::Specification::MILSpec::DictionaryValue *this)
{
  *(void *)this = &unk_1F36255B8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::MILSpec::DictionaryValue *)&CoreML::Specification::MILSpec::_DictionaryValue_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = 0;
  return this;
}

void sub_1DC099960(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::Value>::TypeHandler>(uint64_t result, CoreML::Specification::MILSpec::Value **a2, CoreML::Specification::MILSpec::Value **a3, unsigned int a4, unsigned int a5)
{
  int v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    int v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      int v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Value>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    uint64_t v20 = &a3[a5];
    do
    {
      uint64_t v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::MILSpec::Value::Value((CoreML::Specification::MILSpec::Value *)Aligned);
      unsigned int v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *unsigned int v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Value>;
      int v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Value>::Merge(v21, (CoreML::Specification::MILSpec::Value *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1DC099AA4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Value>::Merge(CoreML::Specification::MILSpec::Value *a1, CoreML::Specification::MILSpec::Value *this)
{
  return CoreML::Specification::MILSpec::Value::MergeFrom(this, a1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 28))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::TensorValue_RepeatedFloats(CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3625A78;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)&CoreML::Specification::MILSpec::_TensorValue_RepeatedFloats_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC099BE0(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom(unint64_t *this, const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    int v7 = *((_DWORD *)v3 + 4);
    uint64_t v6 = (unsigned int *)(v3 + 2);
    google::protobuf::RepeatedField<int>::Reserve(v6, v7 + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v6 + 1) + 4 * (int)*v6 + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    *v6 += *((_DWORD *)a2 + 4);
  }
  return this;
}

CoreML::Specification::MILSpec::TensorValue_RepeatedInts *CoreML::Specification::MILSpec::TensorValue_RepeatedInts::TensorValue_RepeatedInts(CoreML::Specification::MILSpec::TensorValue_RepeatedInts *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3625818;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::MILSpec::TensorValue_RepeatedInts *)&CoreML::Specification::MILSpec::_TensorValue_RepeatedInts_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC099CF8(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::TensorValue_RepeatedBools *CoreML::Specification::MILSpec::TensorValue_RepeatedBools::TensorValue_RepeatedBools(CoreML::Specification::MILSpec::TensorValue_RepeatedBools *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36258B0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::MILSpec::TensorValue_RepeatedBools *)&CoreML::Specification::MILSpec::_TensorValue_RepeatedBools_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC099D8C(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::MILSpec::TensorValue_RepeatedBools::MergeFrom(unint64_t *this, const CoreML::Specification::MILSpec::TensorValue_RepeatedBools *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    int v7 = *((_DWORD *)v3 + 4);
    uint64_t v6 = (unsigned int *)(v3 + 2);
    google::protobuf::RepeatedField<BOOL>::Reserve(v6, v7 + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v6 + 1) + (int)*v6 + 8), (const void *)(*((void *)a2 + 3) + 8), *((int *)a2 + 4));
    *v6 += *((_DWORD *)a2 + 4);
  }
  return this;
}

CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::TensorValue_RepeatedStrings(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this)
{
  *(void *)this = &unk_1F3625C40;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)&CoreML::Specification::MILSpec::_TensorValue_RepeatedStrings_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = 0;
  return this;
}

void sub_1DC099EA4(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (const std::string **)(*((void *)a2 + 4) + 8);
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::TensorValue_RepeatedLongInts(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3625D70;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&CoreML::Specification::MILSpec::_TensorValue_RepeatedLongInts_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC099FD0(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(unint64_t *this, const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    int v7 = *((_DWORD *)v3 + 4);
    uint64_t v6 = (unsigned int *)(v3 + 2);
    google::protobuf::RepeatedField<double>::Reserve(v6, v7 + v5);
    this = (unint64_t *)memcpy((void *)(*((void *)v6 + 1) + 8 * (int)*v6 + 8), (const void *)(*((void *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *v6 += *((_DWORD *)a2 + 4);
  }
  return this;
}

CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::TensorValue_RepeatedDoubles(CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F3625BA8;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *)&CoreML::Specification::MILSpec::_TensorValue_RepeatedDoubles_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC09A0E8(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::TensorValue_RepeatedBytes(CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *this)
{
  *(void *)this = &unk_1F3625948;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *)&CoreML::Specification::MILSpec::_TensorValue_RepeatedBytes_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC09A17C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    return this;
  }
  int v7 = (std::string *)v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t)&v3->__r_.__value_.__r.__words[2];
  this = v7;
  if (v7 != (std::string *)v5)
  {
    if (this == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, v5);
    }
    return std::string::operator=(this, (const std::string *)v5);
  }
  return this;
}

void google::protobuf::RepeatedField<BOOL>::Reserve(unsigned int *a1, int a2)
{
  signed int v2 = a1[1];
  if (v2 < a2)
  {
    uint64_t v4 = (google::protobuf::Arena **)*((void *)a1 + 1);
    if (v4) {
      uint64_t v5 = *v4;
    }
    else {
      uint64_t v5 = 0;
    }
    int v6 = 2 * v2;
    if (v6 <= a2) {
      int v6 = a2;
    }
    if (v6 <= 4) {
      int v7 = 4;
    }
    else {
      int v7 = v6;
    }
    if (v5) {
      Aligned = google::protobuf::Arena::AllocateAligned(v5, MEMORY[0x1E4FBA380], (v7 + 8));
    }
    else {
      Aligned = operator new((v7 + 8));
    }
    *((void *)a1 + 1) = Aligned;
    void *Aligned = v5;
    a1[1] = v7;
    size_t v9 = *a1;
    if ((int)v9 >= 1) {
      memcpy(Aligned + 1, v4 + 1, v9);
    }
    if (v4 && !*v4)
    {
      operator delete(v4);
    }
  }
}

uint64_t CoreML::Specification::MILSpec::ValueType::clear_type(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 28))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void *CoreML::Specification::MILSpec::TensorType::MergeFrom(CoreML::Specification::MILSpec::TensorType *this, const CoreML::Specification::MILSpec::TensorType *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v31 = *((void *)a2 + 4);
    int v30 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::MILSpec::TensorType *)((char *)this + 16), v5);
    uint64_t v6 = **((int **)this + 4);
    uint64_t v7 = *((int *)this + 6);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (std::string **)v30;
      uint64_t v11 = (CoreML::Specification::MILSpec::Dimension **)(v31 + 8);
      do
      {
        int v13 = *v11++;
        int v12 = v13;
        int v14 = *v10++;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Dimension>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = (google::protobuf::Arena *)*((void *)this + 2);
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      uint64_t v18 = (google::protobuf::Arena ***)((char *)v30 + v17);
      unint64_t v19 = (CoreML::Specification::MILSpec::Dimension **)(v17 + v31 + 8);
      do
      {
        uint64_t v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::MILSpec::Dimension::Dimension((CoreML::Specification::MILSpec::Dimension *)Aligned);
        int v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        char *v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Dimension>;
        unsigned int v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Dimension>::Merge(v20, (std::string *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v25;
    int v26 = (int *)*((void *)this + 4);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  uint64_t result = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 40, (uint64_t)a2 + 40);
  uint64_t v28 = *((void *)a2 + 9);
  if (v28) {
    *((void *)this + 9) = v28;
  }
  int v29 = *((_DWORD *)a2 + 20);
  if (v29) {
    *((_DWORD *)this + 2CoreML::Specification::Scaler::New(this, 0) = v29;
  }
  return result;
}

void sub_1DC09A57C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::ListType *CoreML::Specification::MILSpec::ListType::ListType(CoreML::Specification::MILSpec::ListType *this)
{
  *(void *)this = &unk_1F3626100;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::ListType *)&CoreML::Specification::MILSpec::_ListType_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC09A604(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::ListType::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::ListType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::MILSpec::ListType *)&CoreML::Specification::MILSpec::_ListType_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (CoreML::Specification::MILSpec::ValueType *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::ValueType::MergeFrom(v5, *((const CoreML::Specification::MILSpec::ValueType **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::MILSpec::Dimension *)*((void *)a2 + 3);
      data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      return CoreML::Specification::MILSpec::Dimension::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_1DC09A724(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::TupleType *CoreML::Specification::MILSpec::TupleType::TupleType(CoreML::Specification::MILSpec::TupleType *this)
{
  *(void *)this = &unk_1F3626360;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::MILSpec::TupleType *)&CoreML::Specification::MILSpec::_TupleType_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::Scaler::New(this, 0) = 0;
  return this;
}

void sub_1DC09A7C0(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::MILSpec::TupleType::MergeFrom(unint64_t *this, const CoreML::Specification::MILSpec::TupleType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (CoreML::Specification::MILSpec::ValueType **)(v28 + 8);
      int v12 = (CoreML::Specification::MILSpec::ValueType **)this;
      do
      {
        int v14 = *v11++;
        int v13 = v14;
        int v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::ValueType>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      int v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      uint64_t v20 = (CoreML::Specification::MILSpec::ValueType **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::MILSpec::ValueType::ValueType((CoreML::Specification::MILSpec::ValueType *)Aligned);
        unsigned int v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *unsigned int v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::ValueType>;
        unint64_t v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::ValueType>::Merge(v21, (CoreML::Specification::MILSpec::ValueType *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC09A98C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::DictionaryType *CoreML::Specification::MILSpec::DictionaryType::DictionaryType(CoreML::Specification::MILSpec::DictionaryType *this)
{
  *(void *)this = &unk_1F3625488;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::DictionaryType *)&CoreML::Specification::MILSpec::_DictionaryType_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC09AA14(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::DictionaryType::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::DictionaryType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::MILSpec::DictionaryType *)&CoreML::Specification::MILSpec::_DictionaryType_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      int v5 = (CoreML::Specification::MILSpec::ValueType *)v3->__r_.__value_.__r.__words[2];
      if (!v5) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::ValueType::MergeFrom(v5, *((const CoreML::Specification::MILSpec::ValueType **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      if (!v3[1].__r_.__value_.__r.__words[0]) {
        operator new();
      }
      uint64_t v6 = (const CoreML::Specification::MILSpec::ValueType *)*((void *)a2 + 3);
      data = (CoreML::Specification::MILSpec::ValueType *)v3[1].__r_.__value_.__l.__data_;
      return (std::string *)CoreML::Specification::MILSpec::ValueType::MergeFrom(data, v6);
    }
  }
  return this;
}

void sub_1DC09AB2C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::StateType *CoreML::Specification::MILSpec::StateType::StateType(CoreML::Specification::MILSpec::StateType *this)
{
  *(void *)this = &unk_1F36166E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::StateType *)&CoreML::Specification::MILSpec::_StateType_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC09ABB8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::StateType::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::StateType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (a2 != (const CoreML::Specification::MILSpec::StateType *)&CoreML::Specification::MILSpec::_StateType_default_instance_
    && v5 != 0)
  {
    if (!v3->__r_.__value_.__r.__words[2]) {
      operator new();
    }
    if (v5) {
      uint64_t v7 = (const CoreML::Specification::MILSpec::ValueType *)*((void *)a2 + 2);
    }
    else {
      uint64_t v7 = (const CoreML::Specification::MILSpec::ValueType *)&CoreML::Specification::MILSpec::_ValueType_default_instance_;
    }
    uint64_t v8 = (CoreML::Specification::MILSpec::ValueType *)v3->__r_.__value_.__r.__words[2];
    return (std::string *)CoreML::Specification::MILSpec::ValueType::MergeFrom(v8, v7);
  }
  return this;
}

void sub_1DC09AC88(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::ValueType>::Merge(CoreML::Specification::MILSpec::ValueType *a1, CoreML::Specification::MILSpec::ValueType *this)
{
  return CoreML::Specification::MILSpec::ValueType::MergeFrom(this, a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::ValueType>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::MILSpec::Dimension *CoreML::Specification::MILSpec::Dimension::Dimension(CoreML::Specification::MILSpec::Dimension *this)
{
  *(void *)this = &unk_1F3626198;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::Dimension *)&CoreML::Specification::MILSpec::_Dimension_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC09AD40(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::Dimension::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::Dimension *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 == 2)
  {
    if (*(_DWORD *)(v3 + 28) != 2)
    {
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 2;
      operator new();
    }
    uint64_t v7 = *(void *)(v3 + 16);
    uint64_t v9 = *((void *)a2 + 2);
    uint64_t v12 = *(void *)(v9 + 8);
    if (v12) {
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v7 + 8), v12 & 0xFFFFFFFFFFFFFFFELL);
    }
    if (*(unsigned char *)(v9 + 16)) {
      *(unsigned char *)(v7 + 16) = 1;
    }
  }
  else if (v5 == 1)
  {
    if (*(_DWORD *)(v3 + 28) != 1)
    {
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 1;
      operator new();
    }
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v8 = *((void *)a2 + 2);
    uint64_t v10 = *(void *)(v8 + 8);
    if (v10) {
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v6 + 8), v10 & 0xFFFFFFFFFFFFFFFELL);
    }
    uint64_t v11 = *(void *)(v8 + 16);
    if (v11) {
      *(void *)(v6 + 16) = v11;
    }
  }
  return this;
}

void sub_1DC09AEC0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Dimension::clear_dimension(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 2 || v2 == 1)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::MILSpec::Dimension_ConstantDimension *CoreML::Specification::MILSpec::Dimension_ConstantDimension::Dimension_ConstantDimension(CoreML::Specification::MILSpec::Dimension_ConstantDimension *this)
{
  *(void *)this = &unk_1F3625B10;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::Dimension_ConstantDimension *)&CoreML::Specification::MILSpec::_Dimension_ConstantDimension_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC09AFC0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::Dimension_UnknownDimension *CoreML::Specification::MILSpec::Dimension_UnknownDimension::Dimension_UnknownDimension(CoreML::Specification::MILSpec::Dimension_UnknownDimension *this)
{
  *(void *)this = &unk_1F36259E0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::Dimension_UnknownDimension *)&CoreML::Specification::MILSpec::_Dimension_UnknownDimension_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1DC09B038(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom(uint64_t a1, uint64_t a2)
{
  uint64_t result = google::protobuf::Map<std::string,std::string>::begin(v10, *(void **)(a2 + 24));
  uint64_t v4 = v10[0];
  if (v10[0])
  {
    uint64_t v5 = a1 + 8;
    do
    {
      uint64_t v6 = *((void *)v4 + 3);
      uint64_t v7 = (const CoreML::Specification::MILSpec::Value *)(v6 + 24);
      uint64_t v8 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::operator[](v5, v6);
      if (v7 != (const CoreML::Specification::MILSpec::Value *)v8)
      {
        uint64_t v9 = (CoreML::Specification::MILSpec::Value *)v8;
        CoreML::Specification::MILSpec::Value::Clear((CoreML::Specification::MILSpec::Value *)v8);
        CoreML::Specification::MILSpec::Value::MergeFrom(v9, v7);
      }
      uint64_t result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v10);
      uint64_t v4 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::operator[](uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v24 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v26[0];
  if (v26[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v20 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v20, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v25[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v21 = 0;
    unint64_t v22 = ((5 * v8) >> 2) + 1;
    do
      ++v21;
    while (v22 << v21 < v9);
    uint64_t v20 = v7 >> v21 <= 8 ? 8 : v7 >> v21;
    if (v20 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v26[3];
LABEL_11:
  uint64_t v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  int v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v24;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v25, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v25[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 72);
    int v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    _OWORD v16[2] = 0;
    google::protobuf::Arena *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    uint64_t v18 = *(google::protobuf::Arena **)a1;
    CoreML::Specification::MILSpec::Value::Value((CoreML::Specification::MILSpec::Value *)(v16 + 3));
    google::protobuf::Arena::OwnDestructor<CoreML::Specification::MILSpec::Value>((google::protobuf::Arena **)v18, (google::protobuf::Arena *)(v16 + 3));
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1DC09B33C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1E0198C00](v14, 0x10B2C40CC7398DALL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Value::Clear(CoreML::Specification::MILSpec::Value *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  return CoreML::Specification::MILSpec::Value::clear_value((uint64_t)this);
}

google::protobuf::Arena **google::protobuf::Arena::OwnDestructor<CoreML::Specification::MILSpec::Value>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Value>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  unint64_t v5 = a3;
  unint64_t v7 = result;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(v8 + 8 * a3);
  if (!v9)
  {
    a4[4] = 0;
    *(void *)(v8 + 8 * a3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a3 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a3);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 32);
    }
    while (v11);
    if (v10 < 8)
    {
      a4[4] = v9;
      *(void *)(v8 + 8 * a3) = a4;
LABEL_11:
      uint64_t *v7 = (uint64_t)v4;
      v7[1] = a2;
      void v7[2] = v5;
      return result;
    }
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::TreeConvert(a2, a3);
    v4[4] = 0;
    uint64_t v14 = *(void *)(*(void *)(a2 + 32) + 8 * v5);
    long long v15 = v4;
    uint64_t result = std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v14, v4, (uint64_t *)&v15);
    v5 &= ~1uLL;
    uint64_t v4 = (void *)result[4];
LABEL_8:
    unint64_t v12 = *(void *)(a2 + 24);
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    *(void *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  a4[4] = 0;
  uint64_t v13 = *(void *)(v8 + 8 * a3);
  long long v15 = a4;
  uint64_t result = std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(v13, a4, (uint64_t *)&v15);
  uint64_t *v7 = result[4];
  v7[1] = a2;
  void v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

uint64_t *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(google::protobuf::Arena **)(a1 + 40);
  if (v4) {
    Aligned = google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x1E4FBA3A0], 32);
  }
  else {
    Aligned = operator new(0x20uLL);
  }
  uint64_t v6 = (uint64_t)Aligned;
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v7 = v11;
  uint64_t v12 = 0;
  uint64_t v9 = &v10;
  uint64_t v10 = 0;
  Aligned[1] = 0;
  Aligned[2] = v7;
  Aligned[3] = 0;
  void *Aligned = Aligned + 1;
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&v9, 0);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, v6);
  uint64_t result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, v6);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(void *)(*(void *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

uint64_t *std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(uint64_t a1, void *a2, uint64_t *a3)
{
  unint64_t v5 = (uint64_t **)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::string *>>::__find_equal<std::string *>(a1, &v9, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    uint64_t v6 = (uint64_t *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(a1 + 16));
    void v6[4] = *a3;
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)a1, v9, v7, v6);
  }
  return v6;
}

void *std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::string *>>::__find_equal<std::string *>(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = v4;
        uint64_t v8 = (void *)v4[4];
        if (!std::less<std::string>::operator()[abi:ne180100](a3, v8)) {
          break;
        }
        uint64_t v4 = (void *)*v7;
        unint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v8, a3)) {
        break;
      }
      unint64_t v5 = v7 + 1;
      uint64_t v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(google::protobuf::Arena *a1)
{
  if (a1) {
    return google::protobuf::Arena::AllocateAligned(a1, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    return (google::protobuf::Arena **)operator new(0x28uLL);
  }
}

uint64_t *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::CopyListToTree(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)result[a2];
  if (v3)
  {
    do
    {
      uint64_t v6 = v3;
      uint64_t result = std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::string *>>::__emplace_unique_key_args<std::string *,std::string *>(a3, v3, (uint64_t *)&v6);
      unint64_t v5 = (void *)v3[4];
      v3[4] = 0;
      uint64_t v3 = v5;
    }
    while (v5);
  }
  return result;
}

void google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize(uint64_t a1, uint64_t a2, size_t a3)
{
  unint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2;
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(*(google::protobuf::Arena **)(a1 + 40), a2, a3);
  bzero(v7, 8 * a2);
  unint64_t v8 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a1 + 8);
  *(void *)(a1 + 32) = v7;
  while (v8 < v5)
  {
    uint64_t v9 = v6[v8];
    if (v9)
    {
      if (v9 == v6[v8 ^ 1])
      {
        uint64_t v12 = *(void **)v9;
        do
        {
          uint64_t v13 = (unsigned char *)v12[4];
          uint64_t v14 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::BucketNumber(a1, v13);
          google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v18, a1, v14, v13);
          long long v15 = (void *)v12[1];
          if (v15)
          {
            do
            {
              int v16 = v15;
              long long v15 = (void *)*v15;
            }
            while (v15);
          }
          else
          {
            do
            {
              int v16 = (void *)v12[2];
              BOOL v17 = *v16 == (void)v12;
              uint64_t v12 = v16;
            }
            while (!v17);
          }
          uint64_t v12 = v16;
        }
        while (v16 != (void *)(v9 + 8));
        ++v8;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(*(void *)(a1 + 40), (void **)v9);
      }
      else
      {
        do
        {
          uint64_t v10 = *(void *)(v9 + 32);
          uint64_t v11 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::BucketNumber(a1, (unsigned char *)v9);
          google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v18, a1, v11, (void *)v9);
          uint64_t v9 = v10;
        }
        while (v10);
      }
    }
    ++v8;
  }
  if (!*(void *)(a1 + 40))
  {
    operator delete(v6);
  }
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(google::protobuf::Arena *a1, uint64_t a2, size_t __sz)
{
  if (a1) {
    return google::protobuf::Arena::AllocateAligned(a1, MEMORY[0x1E4FBA3A0], 8 * a2);
  }
  else {
    return (google::protobuf::Arena **)operator new(8 * a2);
  }
}

void google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(uint64_t a1, void **a2)
{
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)a2, a2[1]);
  if (!a1)
  {
    operator delete(a2);
  }
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Dimension>::Merge(CoreML::Specification::MILSpec::Dimension *a1, std::string *this)
{
  return CoreML::Specification::MILSpec::Dimension::MergeFrom(this, a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Dimension>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue::IsInitialized(CoreML::Specification::MILSpec::DictionaryValue *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    uint64_t v3 = (CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair **)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::Clear(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

void CoreML::Specification::MILSpec::DictionaryValue::New(CoreML::Specification::MILSpec::DictionaryValue *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09BB00(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::DictionaryValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::DictionaryValue>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::DictionaryValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::DictionaryValue::New(CoreML::Specification::MILSpec::DictionaryValue *this)
{
}

void *CoreML::Specification::MILSpec::DictionaryValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.DictionaryValue");
}

void CoreML::Specification::MILSpec::DictionaryValue::~DictionaryValue(CoreML::Specification::MILSpec::DictionaryValue *this)
{
  CoreML::Specification::MILSpec::DictionaryValue::~DictionaryValue(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F36255B8;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::GetCachedSize(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t *CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::MILSpec::_DictionaryValue_KeyValuePair_default_instance_)
  {
    uint64_t v3 = this;
    uint64_t v4 = this[2];
    if (v4) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
    }
    uint64_t v5 = v3[3];
    if (v5)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::IsInitialized(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::New(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09BD2C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::New(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this)
{
}

void *CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.DictionaryValue.KeyValuePair");
}

void CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::~DictionaryValue_KeyValuePair(CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *this)
{
  CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair::~DictionaryValue_KeyValuePair(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;

  *(void *)this = &unk_1F3625CD8;
  if (this != (CoreML::Specification::MILSpec::DictionaryValue_KeyValuePair *)&CoreML::Specification::MILSpec::_DictionaryValue_KeyValuePair_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::ListValue::GetCachedSize(CoreML::Specification::MILSpec::ListValue *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::MILSpec::ListValue::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::ListValue::MergePartialFromCodedStream(CoreML::Specification::MILSpec::ListValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (CoreML::Specification::MILSpec::ListValue *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::Value>::TypeHandler>(v4);
      uint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v14;
        uint64_t result = CoreML::Specification::MILSpec::Value::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Value *)v11, a2);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::Value>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  int v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      int v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  int *v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::MILSpec::Value::Value((CoreML::Specification::MILSpec::Value *)Aligned);
  unint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  void *v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Value>;
  unint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  void v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1DC09C1A8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::ListValue::IsInitialized(CoreML::Specification::MILSpec::ListValue *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::ListValue::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    int v3 = (CoreML::Specification::MILSpec::Value **)(*(void *)(this + 32) + 8);
    do
    {
      int v4 = *v3++;
      this = CoreML::Specification::MILSpec::Value::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

void CoreML::Specification::MILSpec::ListValue::New(CoreML::Specification::MILSpec::ListValue *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09C27C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::ListValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::ListValue>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::ListValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::ListValue::New(CoreML::Specification::MILSpec::ListValue *this)
{
}

void *CoreML::Specification::MILSpec::ListValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.ListValue");
}

void CoreML::Specification::MILSpec::ListValue::~ListValue(CoreML::Specification::MILSpec::ListValue *this)
{
  CoreML::Specification::MILSpec::ListValue::~ListValue(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3626230;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TupleValue::GetCachedSize(CoreML::Specification::MILSpec::TupleValue *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::MILSpec::TupleValue::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TupleValue::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TupleValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (CoreML::Specification::MILSpec::TupleValue *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::Value>::TypeHandler>(v4);
      uint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v14;
        uint64_t result = CoreML::Specification::MILSpec::Value::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Value *)v11, a2);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

uint64_t CoreML::Specification::MILSpec::TupleValue::IsInitialized(CoreML::Specification::MILSpec::TupleValue *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TupleValue::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    int v3 = (CoreML::Specification::MILSpec::Value **)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::MILSpec::Value::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

void CoreML::Specification::MILSpec::TupleValue::New(CoreML::Specification::MILSpec::TupleValue *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09C61C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TupleValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TupleValue>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TupleValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TupleValue::New(CoreML::Specification::MILSpec::TupleValue *this)
{
}

void *CoreML::Specification::MILSpec::TupleValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TupleValue");
}

void CoreML::Specification::MILSpec::TupleValue::~TupleValue(CoreML::Specification::MILSpec::TupleValue *this)
{
  CoreML::Specification::MILSpec::TupleValue::~TupleValue(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3625358;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue::GetCachedSize(CoreML::Specification::MILSpec::TensorValue *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::MILSpec::TensorValue::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(this + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 2)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 3)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 4)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(4, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 5)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(5, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 6)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(6, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 7)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(7, v5, a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorValue::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_29:
      if (v7) {
        BOOL v16 = (v7 & 7) == 4;
      }
      else {
        BOOL v16 = 1;
      }
      if (v16) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
        goto LABEL_91;
      }
    }
    LODWORD(v6) = 0;
LABEL_6:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_29;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 1)
        {
          CoreML::Specification::MILSpec::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 1;
          operator new();
        }
        unint64_t v9 = (CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((void *)this + 2);
        int v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v17;
          *(void *)a2 = v17 + 1;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v33 = *((_DWORD *)a2 + 13);
        BOOL v34 = __OFSUB__(v33--, 1);
        *((_DWORD *)a2 + 13) = v33;
        if (v33 < 0 != v34) {
          goto LABEL_91;
        }
        int v35 = v31;
        uint64_t result = CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergePartialFromCodedStream(v9, (char **)a2, v32);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 2u:
        if (v7 != 18) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::MILSpec::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        uint64_t v10 = (CoreML::Specification::MILSpec::TensorValue_RepeatedInts *)*((void *)this + 2);
        unint64_t v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v20 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v20 = *v19;
          *(void *)a2 = v19 + 1;
        }
        int v37 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
        int v39 = *((_DWORD *)a2 + 13);
        BOOL v34 = __OFSUB__(v39--, 1);
        *((_DWORD *)a2 + 13) = v39;
        if (v39 < 0 != v34) {
          goto LABEL_91;
        }
        int v35 = v37;
        uint64_t result = CoreML::Specification::MILSpec::TensorValue_RepeatedInts::MergePartialFromCodedStream(v10, a2, v38);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 3u:
        if (v7 != 26) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 3)
        {
          CoreML::Specification::MILSpec::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 3;
          operator new();
        }
        uint64_t v11 = (CoreML::Specification::MILSpec::TensorValue_RepeatedBools *)*((void *)this + 2);
        char v21 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
        {
          int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v22 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v22 = *v21;
          *(void *)a2 = v21 + 1;
        }
        int v40 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
        int v42 = *((_DWORD *)a2 + 13);
        BOOL v34 = __OFSUB__(v42--, 1);
        *((_DWORD *)a2 + 13) = v42;
        if (v42 < 0 != v34) {
          goto LABEL_91;
        }
        int v35 = v40;
        uint64_t result = CoreML::Specification::MILSpec::TensorValue_RepeatedBools::MergePartialFromCodedStream(v11, a2, v41);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 4u:
        if (v7 != 34) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 4)
        {
          CoreML::Specification::MILSpec::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 4;
          operator new();
        }
        uint64_t v12 = (CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)this + 2);
        unsigned int v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
        {
          int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v24 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        int v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
        int v45 = *((_DWORD *)a2 + 13);
        BOOL v34 = __OFSUB__(v45--, 1);
        *((_DWORD *)a2 + 13) = v45;
        if (v45 < 0 != v34) {
          goto LABEL_91;
        }
        int v35 = v43;
        uint64_t result = CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergePartialFromCodedStream(v12, (char **)a2, v44);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 5u:
        if (v7 != 42) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 5)
        {
          CoreML::Specification::MILSpec::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 5;
          operator new();
        }
        uint64_t v13 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)this + 2);
        unint64_t v25 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v25 < 0)
        {
          int v26 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v26 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v26 = *v25;
          *(void *)a2 = v25 + 1;
        }
        int v46 = google::protobuf::io::CodedInputStream::PushLimit(a2, v26);
        int v48 = *((_DWORD *)a2 + 13);
        BOOL v34 = __OFSUB__(v48--, 1);
        *((_DWORD *)a2 + 13) = v48;
        if (v48 < 0 != v34) {
          goto LABEL_91;
        }
        int v35 = v46;
        uint64_t result = CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergePartialFromCodedStream(v13, a2, v47);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 6u:
        if (v7 != 50) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 6)
        {
          CoreML::Specification::MILSpec::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 6;
          operator new();
        }
        int v14 = (CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *)*((void *)this + 2);
        BOOL v27 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v27 < 0)
        {
          int v28 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v28 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v28 = *v27;
          *(void *)a2 = v27 + 1;
        }
        int v49 = google::protobuf::io::CodedInputStream::PushLimit(a2, v28);
        int v51 = *((_DWORD *)a2 + 13);
        BOOL v34 = __OFSUB__(v51--, 1);
        *((_DWORD *)a2 + 13) = v51;
        if (v51 < 0 != v34) {
          goto LABEL_91;
        }
        int v35 = v49;
        uint64_t result = CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::MergePartialFromCodedStream(v14, (char **)a2, v50);
        if (!result) {
          return result;
        }
        goto LABEL_90;
      case 7u:
        if (v7 != 58) {
          goto LABEL_29;
        }
        if (*((_DWORD *)this + 7) != 7)
        {
          CoreML::Specification::MILSpec::TensorValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 7;
          operator new();
        }
        int v15 = (CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *)*((void *)this + 2);
        int v29 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v29 < 0)
        {
          int v30 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v30 < 0) {
            goto LABEL_91;
          }
        }
        else
        {
          int v30 = *v29;
          *(void *)a2 = v29 + 1;
        }
        int v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, v30);
        int v54 = *((_DWORD *)a2 + 13);
        BOOL v34 = __OFSUB__(v54--, 1);
        *((_DWORD *)a2 + 13) = v54;
        if (v54 < 0 != v34) {
          goto LABEL_91;
        }
        int v35 = v52;
        uint64_t result = CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::MergePartialFromCodedStream(v15, (char **)a2, v53);
        if (!result) {
          return result;
        }
LABEL_90:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v35)) {
          continue;
        }
LABEL_91:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_29;
    }
    return result;
  }
}

void sub_1DC09CE7C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 13) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 2;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 2;
        }
        do
        {
          unsigned int v30 = 0;
          int v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result) {
              return result;
            }
            unsigned int v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unsigned int v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    unsigned int *v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    unsigned int *v5 = v17;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedInts::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorValue_RepeatedInts *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (signed int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v6 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v7) = 0;
    }
    else
    {
      uint64_t v7 = *v6;
      if (*v6 >= 1)
      {
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
    unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0) {
      break;
    }
LABEL_8:
    if ((v8 & 0xFFFFFFF8) != 8) {
      break;
    }
    if (v8 == 8)
    {
      if (google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(google::protobuf::internal::WireFormatLite::FieldType)5>(10, a2, v5))continue; {
      return 0;
      }
    }
    if (v8 != 10) {
      break;
    }
    uint64_t v10 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
    {
      int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0) {
        return 0;
      }
    }
    else
    {
      int VarintSizeAsIntFallback = *v10;
      *(void *)a2 = v10 + 1;
    }
    int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    while (1)
    {
      int v14 = *((_DWORD *)a2 + 10);
      uint64_t v15 = *((int *)a2 + 11);
      unint64_t v16 = *((void *)a2 + 1);
      int v17 = *((_DWORD *)a2 + 6);
      if (v14 == 0x7FFFFFFF) {
        break;
      }
      unsigned int v18 = *(char **)a2;
      if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
        break;
      }
      if ((unint64_t)v18 >= v16)
      {
        int v19 = 0;
      }
      else
      {
        int v19 = *v18;
        if ((*v18 & 0x80000000) == 0)
        {
          *(void *)a2 = v18 + 1;
          goto LABEL_31;
        }
      }
      Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
      int v19 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_31:
      signed int v21 = *((_DWORD *)this + 4);
      if (v21 == *((_DWORD *)this + 5))
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v5, v21 + 1);
        signed int v21 = *v5;
      }
      uint64_t v22 = *((void *)this + 3);
      *((_DWORD *)this + 4) = v21 + 1;
      *(_DWORD *)(v22 + 4 * v21 + 8) = v19;
    }
    *((_DWORD *)a2 + 1CoreML::Specification::MILSpec::TupleValue::New(this, 0) = v13;
    uint64_t v23 = v16 + v15;
    *((void *)a2 + 1) = v23;
    int v24 = *((_DWORD *)a2 + 12);
    if (v24 >= v13) {
      int v24 = v13;
    }
    BOOL v25 = __OFSUB__(v17, v24);
    int v26 = v17 - v24;
    if ((v26 < 0) ^ v25 | (v26 == 0)) {
      int v26 = 0;
    }
    else {
      *((void *)a2 + 1) = v23 - v26;
    }
    *((_DWORD *)a2 + 11) = v26;
    *((unsigned char *)a2 + 36) = 0;
  }
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (v12) {
    return 1;
  }
  if (google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3)) {
    goto LABEL_2;
  }
  return 0;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBools::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorValue_RepeatedBools *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        uint64_t v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          unsigned int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v20 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacint k = *v18;
            *(void *)a2 = v18 + 1;
          }
          BOOL v21 = Varint64Fallback != 0;
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(unsigned char *)(v23 + v22 + 8) = v21;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::MILSpec::TupleValue::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

BOOL CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (google::protobuf::Arena **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
        goto LABEL_23;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 >= *v12)
      {
        if (v14 != *((_DWORD *)this + 7))
        {
LABEL_26:
          *BOOL v12 = v14 + 1;
          unint64_t v16 = *v5;
          if (!*v5) {
            operator new();
          }
          Aligned->__r_.__value_.__l.__size_ = 0;
          Aligned->__r_.__value_.__r.__words[2] = 0;
          Aligned->__r_.__value_.__r.__words[0] = 0;
          int v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          char *v17 = (google::protobuf::Arena *)Aligned;
          v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
          unsigned int v18 = (unint64_t *)((char *)v16 + 32);
          do
            unint64_t v19 = __ldxr(v18);
          while (__stxr((unint64_t)v17, v18));
          void v17[2] = (google::protobuf::Arena *)v19;
          uint64_t v20 = *((void *)this + 4);
          uint64_t v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(void *)(v20 + 8 * v21 + 8) = Aligned;
          goto LABEL_31;
        }
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v5, v14 - v13 + 1);
          BOOL v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      *((_DWORD *)this + 6) = v13 + 1;
      Aligned = *(std::string **)&v12[2 * v13 + 2];
LABEL_31:
      BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, Aligned);
      if (!result) {
        return result;
      }
      uint64_t v23 = *((void *)this + 4);
      uint64_t v24 = *(unsigned int **)(v23 + 8 * *((int *)this + 6));
      if (*((char *)v24 + 23) < 0)
      {
        uint64_t v24 = *(unsigned int **)v24;
        uint64_t v25 = *(void *)(*(void *)(v23 + 8 * *((int *)this + 6)) + 8);
      }
      else
      {
        LODWORD(v25) = *((unsigned __int8 *)v24 + 23);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v24, v25, 0, (uint64_t)"CoreML.Specification.MILSpec.TensorValue.RepeatedStrings.values"))return 0; {
    }
      }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, a2, (uint64_t)v5) & 1) == 0)return 0; {
      }
        }
      else
      {
        if (v8 != 10) {
          break;
        }
        uint64_t v10 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v10;
          *(void *)a2 = v10 + 1;
        }
        int v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          int v14 = *((_DWORD *)a2 + 10);
          uint64_t v15 = *((int *)a2 + 11);
          unint64_t v16 = *((void *)a2 + 1);
          int v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF) {
            break;
          }
          unsigned int v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(void *)a2) < 1) {
            break;
          }
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0) {
              return 0;
            }
            unint64_t v19 = Varint64Fallback;
          }
          else
          {
            unint64_t v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          signed int v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            signed int v22 = *v5;
          }
          uint64_t v23 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(void *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 1CoreML::Specification::MILSpec::TupleValue::New(this, 0) = v13;
        uint64_t v24 = v16 + v15;
        *((void *)a2 + 1) = v16 + v15;
        int v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13) {
          int v25 = v13;
        }
        BOOL v26 = __OFSUB__(v17, v25);
        int v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0)) {
          int v27 = 0;
        }
        else {
          *((void *)a2 + 1) = v24 - v27;
        }
        *((_DWORD *)a2 + 11) = v27;
        *((unsigned char *)a2 + 36) = 0;
      }
    }
    if (v8) {
      BOOL v12 = (v8 & 7) == 4;
    }
    else {
      BOOL v12 = 1;
    }
    if (v12) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

BOOL CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      uint64_t v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 3;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v30 = 0;
          signed int v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result) {
              return result;
            }
            unint64_t v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unint64_t v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(void *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    unsigned int *v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    unsigned int *v5 = v17;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *this, char **a2, unsigned int a3)
{
  int v4 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_7;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      if (!google::protobuf::internal::WireFormatLite::ReadBytes(a2, *v4)) {
        return 0;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(int a1, google::protobuf::io::CodedInputStream *this, uint64_t a3)
{
  uint64_t v6 = *(char **)this;
  if (*(void *)this >= *((void *)this + 1) || *v6 < 0)
  {
    Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
    if ((v9 & 1) == 0) {
      return 0;
    }
    unint64_t v7 = Varint64Fallback;
  }
  else
  {
    unint64_t v7 = *v6;
    *(void *)this = v6 + 1;
  }
  signed int v11 = *(_DWORD *)a3;
  int v12 = *(_DWORD *)(a3 + 4);
  if (*(_DWORD *)a3 == v12)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)a3, v11 + 1);
    signed int v11 = *(_DWORD *)a3;
    int v12 = *(_DWORD *)(a3 + 4);
  }
  uint64_t v13 = *(void *)(a3 + 8);
  signed int v14 = v11 + 1;
  *(_DWORD *)a3 = v11 + 1;
  *(void *)(v13 + 8 * v11 + 8) = v7;
  if (v12 - (v11 + 1) >= 1)
  {
    int v15 = v12 - v11;
    do
    {
      int v16 = *(char **)this;
      unint64_t v17 = *((void *)this + 1);
      if (*(void *)this >= v17 || *v16 != a1) {
        break;
      }
      *(void *)this = v16 + 1;
      if ((unint64_t)(v16 + 1) >= v17 || v16[1] < 0)
      {
        unint64_t v18 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
        if ((v19 & 1) == 0) {
          return 0;
        }
        uint64_t v13 = *(void *)(a3 + 8);
        signed int v14 = *(_DWORD *)a3;
      }
      else
      {
        unint64_t v18 = v16[1];
        *(void *)this = v16 + 2;
      }
      uint64_t v20 = v13 + 8 * v14++;
      *(_DWORD *)a3 = v14;
      *(void *)(v20 + 8) = v18;
      --v15;
    }
    while (v15 > 1);
  }
  return 1;
}

uint64_t google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(int a1, google::protobuf::io::CodedInputStream *this, uint64_t a3)
{
  uint64_t v6 = *(char **)this;
  if (*(void *)this >= *((void *)this + 1) || *v6 < 0)
  {
    Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    Varint64Fallbacint k = *v6;
    *(void *)this = v6 + 1;
  }
  BOOL v10 = Varint64Fallback != 0;
  signed int v11 = *(_DWORD *)a3;
  int v12 = *(_DWORD *)(a3 + 4);
  if (*(_DWORD *)a3 == v12)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)a3, v11 + 1);
    signed int v11 = *(_DWORD *)a3;
    int v12 = *(_DWORD *)(a3 + 4);
  }
  uint64_t v13 = *(void *)(a3 + 8);
  signed int v14 = v11 + 1;
  *(_DWORD *)a3 = v11 + 1;
  *(unsigned char *)(v13 + v11 + 8) = v10;
  if (v12 - (v11 + 1) >= 1)
  {
    int v15 = v12 - v11;
    do
    {
      int v16 = *(char **)this;
      unint64_t v17 = *((void *)this + 1);
      if (*(void *)this >= v17 || *v16 != a1) {
        break;
      }
      *(void *)this = v16 + 1;
      if ((unint64_t)(v16 + 1) >= v17 || v16[1] < 0)
      {
        unint64_t v18 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
        if ((v19 & 1) == 0) {
          return 0;
        }
        uint64_t v13 = *(void *)(a3 + 8);
        signed int v14 = *(_DWORD *)a3;
      }
      else
      {
        unint64_t v18 = v16[1];
        *(void *)this = v16 + 2;
      }
      uint64_t v20 = v13 + v14++;
      *(_DWORD *)a3 = v14;
      *(unsigned char *)(v20 + 8) = v18 != 0;
      --v15;
    }
    while (v15 > 1);
  }
  return 1;
}

uint64_t google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(google::protobuf::internal::WireFormatLite::FieldType)5>(int a1, google::protobuf::io::CodedInputStream *this, signed int *a3)
{
  uint64_t v6 = *(char **)this;
  if (*(void *)this >= *((void *)this + 1))
  {
    int v7 = 0;
  }
  else
  {
    int v7 = *v6;
    if ((*v6 & 0x80000000) == 0)
    {
      *(void *)this = v6 + 1;
      goto LABEL_6;
    }
  }
  Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
  int v7 = Varint32Fallback;
  if (Varint32Fallback < 0) {
    return 0;
  }
LABEL_6:
  signed int v9 = *a3;
  if (*a3 == a3[1])
  {
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a3, v9 + 1);
    signed int v9 = *a3;
  }
  uint64_t v10 = *((void *)a3 + 1);
  *a3 = v9 + 1;
  *(_DWORD *)(v10 + 4 * v9 + 8) = v7;
  int v11 = a3[1] - *a3;
  if (v11 >= 1)
  {
    int v12 = v11 + 1;
    while (1)
    {
      uint64_t v13 = *(char **)this;
      unint64_t v14 = *((void *)this + 1);
      if (*(void *)this >= v14 || *v13 != a1) {
        return 1;
      }
      int v15 = v13 + 1;
      *(void *)this = v13 + 1;
      if ((unint64_t)(v13 + 1) >= v14) {
        break;
      }
      int v16 = *v15;
      if (*v15 < 0) {
        goto LABEL_16;
      }
      *(void *)this = v13 + 2;
LABEL_18:
      uint64_t v18 = *a3;
      *a3 = v18 + 1;
      *(_DWORD *)(v10 + 4 * v18 + 8) = v16;
      if (--v12 <= 1) {
        return 1;
      }
    }
    int v16 = 0;
LABEL_16:
    uint64_t v17 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
    if (v17 < 0) {
      return 0;
    }
    int v16 = v17;
    uint64_t v10 = *((void *)a3 + 1);
    goto LABEL_18;
  }
  return 1;
}

BOOL google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(int a1, unsigned int **this, uint64_t a3)
{
  uint64_t v6 = *this;
  if ((int)(*((_DWORD *)this + 2) - *this) < 4)
  {
    unsigned int v21 = 0;
    BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21);
    if (!result) {
      return result;
    }
    unsigned int v7 = v21;
  }
  else
  {
    unsigned int v7 = *v6;
    *this = v6 + 1;
  }
  signed int v8 = *(_DWORD *)a3;
  if (*(_DWORD *)a3 == *(_DWORD *)(a3 + 4))
  {
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a3, v8 + 1);
    signed int v8 = *(_DWORD *)a3;
  }
  uint64_t v9 = *(void *)(a3 + 8);
  int v10 = v8 + 1;
  *(_DWORD *)a3 = v8 + 1;
  *(_DWORD *)(v9 + 4 * v8 + 8) = v7;
  int v11 = *this;
  int v12 = *((_DWORD *)this + 2) - *this;
  if (v12 >= 1)
  {
    signed int v13 = *(_DWORD *)(a3 + 4) - v10;
    signed int v14 = v12 / 5u;
    if ((int)(v12 / 5u) >= v13) {
      signed int v14 = *(_DWORD *)(a3 + 4) - v10;
    }
    if (v14 >= 1)
    {
      uint64_t v15 = 0;
      uint64_t v16 = v9 + 4 * v10 + 8;
      int v17 = v8 + 2;
      uint64_t v18 = ((*((_DWORD *)this + 2) - *this) * (unsigned __int128)0x3333333333333334uLL) >> 64;
      if (v18 >= v13) {
        LODWORD(v18) = v13;
      }
      while (*(unsigned __int8 *)v11 == a1)
      {
        int v19 = *(unsigned int *)((char *)v11 + 1);
        *(_DWORD *)a3 = v17 + v15;
        *(_DWORD *)(v16 + 4 * v15++) = v19;
        int v11 = (unsigned int *)((char *)v11 + 5);
        if (v18 == v15) {
          goto LABEL_15;
        }
      }
      signed int v14 = v15;
LABEL_15:
      if (v14 >= 1) {
        google::protobuf::io::CodedInputStream::Skip((google::protobuf::io::CodedInputStream *)this, 5 * v14);
      }
    }
  }
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TensorValue::IsInitialized(CoreML::Specification::MILSpec::TensorValue *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::TensorValue::New(CoreML::Specification::MILSpec::TensorValue *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09E364(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorValue::New(CoreML::Specification::MILSpec::TensorValue *this)
{
}

void *CoreML::Specification::MILSpec::TensorValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorValue");
}

void CoreML::Specification::MILSpec::TensorValue::~TensorValue(CoreML::Specification::MILSpec::TensorValue *this)
{
  CoreML::Specification::MILSpec::TensorValue::~TensorValue(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F36253F0;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::MILSpec::TensorValue::clear_value((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::GetCachedSize(CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = *(void *)(this + 16);
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v3 + 23)) {
      return this;
    }
    return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1u, v3, a2);
  }
  if (*(void *)(v3 + 8)) {
    return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(1u, v3, a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::IsInitialized(CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  return this;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::New(CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09E58C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorValue_RepeatedBytes>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedBytes>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedBytes>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::New(CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *this)
{
}

void *CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorValue.RepeatedBytes");
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedBytes::~TensorValue_RepeatedBytes(CoreML::Specification::MILSpec::TensorValue_RepeatedBytes *this)
{
  *(void *)this = &unk_1F3625948;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3625948;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::GetCachedSize(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v2 = *(unsigned int *)(this + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = -v2;
    uint64_t v6 = 1;
    do
    {
      unsigned int v7 = *(unsigned int **)(*(void *)(v4 + 32) + 8 * v6);
      if (*((char *)v7 + 23) < 0)
      {
        unsigned int v7 = *(unsigned int **)v7;
        uint64_t v8 = *(void *)(*(void *)(*(void *)(v4 + 32) + 8 * v6) + 8);
      }
      else
      {
        LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.MILSpec.TensorValue.RepeatedStrings.values");
      this = google::protobuf::internal::WireFormatLite::WriteString(1u, *(void *)(*(void *)(v4 + 32) + 8 * v6++), a2);
    }
    while (v5 + v6 != 1);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::IsInitialized(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::Clear(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this)
{
  return google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 16);
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::New(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09E81C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorValue_RepeatedStrings>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedStrings>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedStrings>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::New(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this)
{
}

void *CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorValue.RepeatedStrings");
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::~TensorValue_RepeatedStrings(CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *this)
{
  *(void *)this = &unk_1F3625C40;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t *v1;

  *(void *)this = &unk_1F3625C40;
  uint64_t v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBools::GetCachedSize(CoreML::Specification::MILSpec::TensorValue_RepeatedBools *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBools::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      int v12 = (char *)(v11 + 8);
    }
    else {
      int v12 = 0;
    }
    int v13 = *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBools::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue_RepeatedBools *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  if (v1)
  {
    if ((v1 & 0x80000000) != 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 + v1;
  *((_DWORD *)this + 8) = v1;
  *((_DWORD *)this + 9) = v3;
  return v3;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBools::IsInitialized(CoreML::Specification::MILSpec::TensorValue_RepeatedBools *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedBools::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedBools::New(CoreML::Specification::MILSpec::TensorValue_RepeatedBools *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09EB90(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorValue_RepeatedBools>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedBools>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedBools>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedBools::New(CoreML::Specification::MILSpec::TensorValue_RepeatedBools *this)
{
}

void *CoreML::Specification::MILSpec::TensorValue_RepeatedBools::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorValue.RepeatedBools");
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedBools::~TensorValue_RepeatedBools(CoreML::Specification::MILSpec::TensorValue_RepeatedBools *this)
{
  CoreML::Specification::MILSpec::TensorValue_RepeatedBools::~TensorValue_RepeatedBools(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F36258B0;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::GetCachedSize(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            unint64_t v16 = *(void *)(*(void *)(v3 + 24) + 8 * i + 8);
            uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          *uint64_t v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::IsInitialized(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::New(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09EEF4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::New(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this)
{
}

void *CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorValue.RepeatedLongInts");
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::~TensorValue_RepeatedLongInts(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this)
{
  CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::~TensorValue_RepeatedLongInts(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F3625D70;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedInts::GetCachedSize(CoreML::Specification::MILSpec::TensorValue_RepeatedInts *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedInts::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(int *)(*(void *)(v3 + 24) + 4 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          uint64_t v14 = *((void *)a2 + 1);
          if (v13 < 0x80)
          {
            LODWORD(v16) = *(_DWORD *)(*(void *)(v3 + 24) + 4 * i + 8);
            uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              unint64_t v16 = v13 >> 7;
              unint64_t v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          *uint64_t v15 = v16;
          int v18 = v15 - v14 + 1;
          *((void *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedInts::IsInitialized(CoreML::Specification::MILSpec::TensorValue_RepeatedInts *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedInts::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedInts::New(CoreML::Specification::MILSpec::TensorValue_RepeatedInts *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09F258(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorValue_RepeatedInts>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedInts>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedInts>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedInts::New(CoreML::Specification::MILSpec::TensorValue_RepeatedInts *this)
{
}

void *CoreML::Specification::MILSpec::TensorValue_RepeatedInts::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorValue.RepeatedInts");
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedInts::~TensorValue_RepeatedInts(CoreML::Specification::MILSpec::TensorValue_RepeatedInts *this)
{
  CoreML::Specification::MILSpec::TensorValue_RepeatedInts::~TensorValue_RepeatedInts(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F3625818;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::GetCachedSize(CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      int v12 = (char *)(v11 + 8);
    }
    else {
      int v12 = 0;
    }
    int v13 = 8 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::IsInitialized(CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::New(CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09F5A4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::New(CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *this)
{
}

void *CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorValue.RepeatedDoubles");
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::~TensorValue_RepeatedDoubles(CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles *this)
{
  CoreML::Specification::MILSpec::TensorValue_RepeatedDoubles::~TensorValue_RepeatedDoubles(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F3625BA8;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::GetCachedSize(CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unsigned int v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      int v12 = (char *)(v11 + 8);
    }
    else {
      int v12 = 0;
    }
    int v13 = 4 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::ByteSizeLong(CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 4 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::IsInitialized(CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::New(CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09F8F0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorValue_RepeatedFloats>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedFloats>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorValue_RepeatedFloats>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::New(CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *this)
{
}

void *CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorValue.RepeatedFloats");
}

void CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::~TensorValue_RepeatedFloats(CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *this)
{
  CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::~TensorValue_RepeatedFloats(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F3625A78;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::Value::GetCachedSize(CoreML::Specification::MILSpec::Value *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::MILSpec::Value::SerializeWithCachedSizes(CoreML::Specification::MILSpec::Value *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t result = *((void *)this + 2);
  if ((*(char *)(result + 23) & 0x80000000) == 0)
  {
    LODWORD(v5) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(result + 8);
  if (v5)
  {
    uint64_t result = *(void *)result;
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v5, 1, (uint64_t)"CoreML.Specification.MILSpec.Value.docString");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  if (this != (CoreML::Specification::MILSpec::Value *)&CoreML::Specification::MILSpec::_Value_default_instance_)
  {
    uint64_t v6 = *((void *)this + 3);
    if (v6) {
      uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
    }
  }
  int v7 = *((_DWORD *)this + 11);
  if (v7 == 3)
  {
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage(3, *((void *)this + 4), a2);
    int v7 = *((_DWORD *)this + 11);
  }
  if (v7 == 5)
  {
    uint64_t v8 = *((void *)this + 4);
    return google::protobuf::internal::WireFormatLite::WriteMessage(5, v8, a2);
  }
  return result;
}

uint64_t CoreML::Specification::MILSpec::Value::IsInitialized(CoreML::Specification::MILSpec::Value *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::Value::New(CoreML::Specification::MILSpec::Value *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09FB90(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Value>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Value>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Value>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Value::New(CoreML::Specification::MILSpec::Value *this)
{
}

void *CoreML::Specification::MILSpec::Value::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Value");
}

void CoreML::Specification::MILSpec::Value::~Value(CoreML::Specification::MILSpec::Value *this)
{
  CoreML::Specification::MILSpec::Value::~Value(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;

  *(void *)this = &unk_1F3625EA0;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::MILSpec::Value *)&CoreML::Specification::MILSpec::_Value_default_instance_)
  {
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  if (*((_DWORD *)this + 11)) {
    CoreML::Specification::MILSpec::Value::clear_value((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::Value_ImmediateValue::GetCachedSize(CoreML::Specification::MILSpec::Value_ImmediateValue *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::MILSpec::Value_ImmediateValue::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(this + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 2)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 3)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 4)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(4, v5, a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::Value_ImmediateValue::IsInitialized(CoreML::Specification::MILSpec::Value_ImmediateValue *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::Value_ImmediateValue::New(CoreML::Specification::MILSpec::Value_ImmediateValue *this, google::protobuf::Arena *a2)
{
}

void sub_1DC09FE80(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Value_ImmediateValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Value_ImmediateValue>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Value_ImmediateValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Value_ImmediateValue::New(CoreML::Specification::MILSpec::Value_ImmediateValue *this)
{
}

void *CoreML::Specification::MILSpec::Value_ImmediateValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Value.ImmediateValue");
}

void CoreML::Specification::MILSpec::Value_ImmediateValue::~Value_ImmediateValue(CoreML::Specification::MILSpec::Value_ImmediateValue *this)
{
  CoreML::Specification::MILSpec::Value_ImmediateValue::~Value_ImmediateValue(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3625780;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::MILSpec::Value_ImmediateValue::clear_value((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::Dimension::GetCachedSize(CoreML::Specification::MILSpec::Dimension *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::MILSpec::Dimension::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(this + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 2)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::Dimension::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Dimension *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_18;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_18;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_18;
      }
      if (*((_DWORD *)this + 7) != 2)
      {
        CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 2;
        operator new();
      }
      uint64_t v11 = (CoreML::Specification::MILSpec::Dimension_UnknownDimension *)*((void *)this + 2);
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v25 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v25--, 1);
      *((_DWORD *)a2 + 13) = v25;
      if (v25 < 0 != v20) {
        return 0;
      }
      int v21 = v23;
      uint64_t result = CoreML::Specification::MILSpec::Dimension_UnknownDimension::MergePartialFromCodedStream(v11, (char **)a2, v24);
      if (!result) {
        return result;
      }
LABEL_39:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21)) {
        return 0;
      }
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      if (*((_DWORD *)this + 7) != 1)
      {
        CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 1;
        operator new();
      }
      int v10 = (CoreML::Specification::MILSpec::Dimension_ConstantDimension *)*((void *)this + 2);
      int v13 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
      {
        int v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v14 < 0) {
          return 0;
        }
      }
      else
      {
        int v14 = *v13;
        *(void *)a2 = v13 + 1;
      }
      int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
      int v19 = *((_DWORD *)a2 + 13);
      BOOL v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 13) = v19;
      if (v19 < 0 != v20) {
        return 0;
      }
      int v21 = v17;
      uint64_t result = CoreML::Specification::MILSpec::Dimension_ConstantDimension::MergePartialFromCodedStream(v10, (char **)a2, v18);
      if (!result) {
        return result;
      }
      goto LABEL_39;
    }
LABEL_18:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0A0298(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Dimension_ConstantDimension::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Dimension_ConstantDimension *this, char **a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((void *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        *((void *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreML::Specification::MILSpec::Dimension_UnknownDimension::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Dimension_UnknownDimension *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        Varint64Fallbacint k = *v11;
        *a2 = v11 + 1;
      }
      *((unsigned char *)this + 16) = Varint64Fallback != 0;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::MILSpec::Dimension::IsInitialized(CoreML::Specification::MILSpec::Dimension *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::Dimension::New(CoreML::Specification::MILSpec::Dimension *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A051C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Dimension>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Dimension>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Dimension>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Dimension::New(CoreML::Specification::MILSpec::Dimension *this)
{
}

void *CoreML::Specification::MILSpec::Dimension::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Dimension");
}

void CoreML::Specification::MILSpec::Dimension::~Dimension(CoreML::Specification::MILSpec::Dimension *this)
{
  CoreML::Specification::MILSpec::Dimension::~Dimension(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3626198;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::Dimension_UnknownDimension::GetCachedSize(CoreML::Specification::MILSpec::Dimension_UnknownDimension *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t CoreML::Specification::MILSpec::Dimension_UnknownDimension::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::Dimension_UnknownDimension::ByteSizeLong(CoreML::Specification::MILSpec::Dimension_UnknownDimension *this)
{
  uint64_t v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

std::string *CoreML::Specification::MILSpec::Dimension_UnknownDimension::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((unsigned char *)a2 + 16)) {
    v3->__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::Dimension_UnknownDimension::IsInitialized(CoreML::Specification::MILSpec::Dimension_UnknownDimension *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::Dimension_UnknownDimension::Clear(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::MILSpec::Dimension_UnknownDimension::New(CoreML::Specification::MILSpec::Dimension_UnknownDimension *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A075C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Dimension_UnknownDimension>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Dimension_UnknownDimension>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Dimension_UnknownDimension>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Dimension_UnknownDimension::New(CoreML::Specification::MILSpec::Dimension_UnknownDimension *this)
{
}

void *CoreML::Specification::MILSpec::Dimension_UnknownDimension::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Dimension.UnknownDimension");
}

void CoreML::Specification::MILSpec::Dimension_UnknownDimension::~Dimension_UnknownDimension(CoreML::Specification::MILSpec::Dimension_UnknownDimension *this)
{
  *(void *)this = &unk_1F36259E0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F36259E0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::Dimension_ConstantDimension::GetCachedSize(CoreML::Specification::MILSpec::Dimension_ConstantDimension *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::MILSpec::Dimension_ConstantDimension::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  unint64_t v5 = *(void *)(this + 16);
  if (v5) {
    return google::protobuf::internal::WireFormatLite::WriteUInt64(1, v5, a2, a4);
  }
  return this;
}

unint64_t CoreML::Specification::MILSpec::Dimension_ConstantDimension::ByteSizeLong(CoreML::Specification::MILSpec::Dimension_ConstantDimension *this)
{
  unint64_t v1 = *((void *)this + 2);
  if (v1) {
    unint64_t v1 = ((9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

std::string *CoreML::Specification::MILSpec::Dimension_ConstantDimension::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  std::string::size_type v5 = *((void *)a2 + 2);
  if (v5) {
    v3->__r_.__value_.__r.__words[2] = v5;
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::Dimension_ConstantDimension::IsInitialized(CoreML::Specification::MILSpec::Dimension_ConstantDimension *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::Dimension_ConstantDimension::Clear(uint64_t this)
{
  *(void *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::MILSpec::Dimension_ConstantDimension::New(CoreML::Specification::MILSpec::Dimension_ConstantDimension *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A09C0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Dimension_ConstantDimension>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Dimension_ConstantDimension>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Dimension_ConstantDimension>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Dimension_ConstantDimension::New(CoreML::Specification::MILSpec::Dimension_ConstantDimension *this)
{
}

void *CoreML::Specification::MILSpec::Dimension_ConstantDimension::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Dimension.ConstantDimension");
}

void CoreML::Specification::MILSpec::Dimension_ConstantDimension::~Dimension_ConstantDimension(CoreML::Specification::MILSpec::Dimension_ConstantDimension *this)
{
  *(void *)this = &unk_1F3625B10;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3625B10;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::StateType::GetCachedSize(CoreML::Specification::MILSpec::StateType *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t *CoreML::Specification::MILSpec::StateType::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::MILSpec::_StateType_default_instance_)
  {
    uint64_t v3 = this[2];
    if (v3) {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v3, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::StateType::MergePartialFromCodedStream(CoreML::Specification::MILSpec::StateType *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v11 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 2);
      if (!v11) {
        operator new();
      }
      char v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v12 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v12;
        *(void *)a2 = v12 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v14;
        uint64_t result = CoreML::Specification::MILSpec::ValueType::MergePartialFromCodedStream(v11, a2);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0A0CB8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::StateType::IsInitialized(CoreML::Specification::MILSpec::StateType *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::StateType::Clear(CoreML::Specification::MILSpec::StateType *this)
{
  uint64_t result = *((void *)this + 2);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 2) = 0;
  return result;
}

void CoreML::Specification::MILSpec::StateType::New(CoreML::Specification::MILSpec::StateType *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A0D8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::StateType>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::StateType>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::StateType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::StateType::New(CoreML::Specification::MILSpec::StateType *this)
{
}

void *CoreML::Specification::MILSpec::StateType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.StateType");
}

void CoreML::Specification::MILSpec::StateType::~StateType(CoreML::Specification::MILSpec::StateType *this)
{
  CoreML::Specification::MILSpec::StateType::~StateType(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F36166E0;
  if (this != (CoreML::Specification::MILSpec::StateType *)&CoreML::Specification::MILSpec::_StateType_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::DictionaryType::GetCachedSize(CoreML::Specification::MILSpec::DictionaryType *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t *CoreML::Specification::MILSpec::DictionaryType::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::MILSpec::_DictionaryType_default_instance_)
  {
    uint64_t v3 = this;
    uint64_t v4 = this[2];
    if (v4) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
    }
    uint64_t v5 = v3[3];
    if (v5)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::DictionaryType::MergePartialFromCodedStream(CoreML::Specification::MILSpec::DictionaryType *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_21;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_21;
      }
      BOOL v10 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
LABEL_18:
      uint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      int v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = v14;
        uint64_t result = CoreML::Specification::MILSpec::ValueType::MergePartialFromCodedStream(v10, a2);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      BOOL v10 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0A112C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::DictionaryType::IsInitialized(CoreML::Specification::MILSpec::DictionaryType *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::DictionaryType::Clear(CoreML::Specification::MILSpec::DictionaryType *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

void CoreML::Specification::MILSpec::DictionaryType::New(CoreML::Specification::MILSpec::DictionaryType *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A1234(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::DictionaryType>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::DictionaryType>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::DictionaryType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::DictionaryType::New(CoreML::Specification::MILSpec::DictionaryType *this)
{
}

void *CoreML::Specification::MILSpec::DictionaryType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.DictionaryType");
}

void CoreML::Specification::MILSpec::DictionaryType::~DictionaryType(CoreML::Specification::MILSpec::DictionaryType *this)
{
  CoreML::Specification::MILSpec::DictionaryType::~DictionaryType(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;

  *(void *)this = &unk_1F3625488;
  if (this != (CoreML::Specification::MILSpec::DictionaryType *)&CoreML::Specification::MILSpec::_DictionaryType_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::ListType::GetCachedSize(CoreML::Specification::MILSpec::ListType *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t *CoreML::Specification::MILSpec::ListType::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  if (this != &CoreML::Specification::MILSpec::_ListType_default_instance_)
  {
    uint64_t v3 = this;
    uint64_t v4 = this[2];
    if (v4) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
    }
    uint64_t v5 = v3[3];
    if (v5)
    {
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v5, a2);
    }
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::ListType::MergePartialFromCodedStream(CoreML::Specification::MILSpec::ListType *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_24;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_24;
      }
LABEL_7:
      if (v7 >> 3 != 2) {
        break;
      }
      if (v7 != 18) {
        goto LABEL_24;
      }
      char v13 = (CoreML::Specification::MILSpec::Dimension *)*((void *)this + 3);
      if (!v13) {
        operator new();
      }
      int v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v14;
        *(void *)a2 = v14 + 1;
      }
      int v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v24 = *((_DWORD *)a2 + 13);
      BOOL v19 = __OFSUB__(v24--, 1);
      *((_DWORD *)a2 + 13) = v24;
      if (v24 < 0 != v19) {
        return 0;
      }
      int v20 = v22;
      uint64_t result = CoreML::Specification::MILSpec::Dimension::MergePartialFromCodedStream(v13, a2, v23);
      if (!result) {
        return result;
      }
LABEL_37:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20)) {
        return 0;
      }
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      BOOL v10 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 2);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        int v12 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v12 < 0) {
          return 0;
        }
      }
      else
      {
        int v12 = *v11;
        *(void *)a2 = v11 + 1;
      }
      int v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v12);
      int v18 = *((_DWORD *)a2 + 13);
      BOOL v19 = __OFSUB__(v18--, 1);
      *((_DWORD *)a2 + 13) = v18;
      if (v18 < 0 != v19) {
        return 0;
      }
      int v20 = v17;
      uint64_t result = CoreML::Specification::MILSpec::ValueType::MergePartialFromCodedStream(v10, a2);
      if (!result) {
        return result;
      }
      goto LABEL_37;
    }
LABEL_24:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0A1660(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::ListType::IsInitialized(CoreML::Specification::MILSpec::ListType *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::ListType::Clear(CoreML::Specification::MILSpec::ListType *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *((void *)this + 2) = 0;
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

void CoreML::Specification::MILSpec::ListType::New(CoreML::Specification::MILSpec::ListType *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A1768(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::ListType>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::ListType>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::ListType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::ListType::New(CoreML::Specification::MILSpec::ListType *this)
{
}

void *CoreML::Specification::MILSpec::ListType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.ListType");
}

void CoreML::Specification::MILSpec::ListType::~ListType(CoreML::Specification::MILSpec::ListType *this)
{
  CoreML::Specification::MILSpec::ListType::~ListType(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;

  *(void *)this = &unk_1F3626100;
  if (this != (CoreML::Specification::MILSpec::ListType *)&CoreML::Specification::MILSpec::_ListType_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::TupleType::GetCachedSize(CoreML::Specification::MILSpec::TupleType *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::MILSpec::TupleType::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TupleType::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TupleType *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unint64_t v5 = (CoreML::Specification::MILSpec::TupleType *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      int v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          int v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *int v12 = v14 + 1;
      BOOL v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::MILSpec::ValueType::ValueType((CoreML::Specification::MILSpec::ValueType *)Aligned);
      int v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      char *v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::ValueType>;
      int v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      void v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v25 = *((_DWORD *)a2 + 13);
      BOOL v26 = __OFSUB__(v25--, 1);
      *((_DWORD *)a2 + 13) = v25;
      if (v25 < 0 == v26)
      {
        int v27 = v24;
        uint64_t result = CoreML::Specification::MILSpec::ValueType::MergePartialFromCodedStream((CoreML::Specification::MILSpec::ValueType *)Aligned, a2);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0A1BBC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::TupleType::IsInitialized(CoreML::Specification::MILSpec::TupleType *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::TupleType::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    uint64_t v3 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::MILSpec::ValueType::clear_type(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

void CoreML::Specification::MILSpec::TupleType::New(CoreML::Specification::MILSpec::TupleType *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A1C90(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TupleType>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TupleType>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TupleType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TupleType::New(CoreML::Specification::MILSpec::TupleType *this)
{
}

void *CoreML::Specification::MILSpec::TupleType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TupleType");
}

void CoreML::Specification::MILSpec::TupleType::~TupleType(CoreML::Specification::MILSpec::TupleType *this)
{
  CoreML::Specification::MILSpec::TupleType::~TupleType(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3626360;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::Init(uint64_t a1)
{
  uint64_t v2 = *(google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InnerMap(Aligned, v2);
  uint64_t result = google::protobuf::Arena::AllocateAligned(v2, 0, 24);
  *uint64_t result = (google::protobuf::Arena *)Aligned;
  result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap>;
  unint64_t v5 = (unint64_t *)((char *)v2 + 32);
  do
    unint64_t v6 = __ldxr(v5);
  while (__stxr((unint64_t)result, v5));
  result[2] = (google::protobuf::Arena *)v6;
  *(void *)(a1 + 16) = Aligned;
  return result;
}

void sub_1DC0A1E90(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10E0C40D5F42F35);
  _Unwind_Resume(a1);
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map(void *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        void v7[2] = v2;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

uint64_t google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::~InnerMap(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    unint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      uint64_t v3 = 0;
      do
      {
        uint64_t v4 = *(void *)(a1 + 32);
        uint64_t v5 = *(void *)(v4 + 8 * v3);
        if (v5)
        {
          if (v5 == *(void *)(v4 + 8 * (v3 ^ 1)))
          {
            uint64_t v7 = v3 + 1;
            *(void *)(v4 + 8 * (v3 + 1)) = 0;
            *(void *)(*(void *)(a1 + 32) + 8 * v3) = 0;
            unint64_t v8 = *(uint64_t **)v5;
            do
            {
              unsigned int v9 = (void **)v8[4];
              BOOL v10 = (uint64_t *)v8[1];
              uint64_t v11 = v8;
              if (v10)
              {
                do
                {
                  int v12 = v10;
                  BOOL v10 = (uint64_t *)*v10;
                }
                while (v10);
              }
              else
              {
                do
                {
                  int v12 = (uint64_t *)v11[2];
                  BOOL v13 = *v12 == (void)v11;
                  uint64_t v11 = v12;
                }
                while (!v13);
              }
              std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v5, v8);
              google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode(a1, v9);
              unint64_t v8 = v12;
            }
            while (v12 != (uint64_t *)(v5 + 8));
            google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(*(void *)(a1 + 40), (void **)v5);
            goto LABEL_17;
          }
          *(void *)(v4 + 8 * v3) = 0;
          do
          {
            uint64_t v6 = *(void *)(v5 + 32);
            google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode(a1, (void **)v5);
            uint64_t v5 = v6;
          }
          while (v6);
        }
        uint64_t v7 = v3;
LABEL_17:
        uint64_t v3 = v7 + 1;
        unint64_t v2 = *(void *)(a1 + 8);
      }
      while (v7 + 1 < v2);
    }
    *(void *)a1 = 0;
    *(void *)(a1 + 24) = v2;
    if (!*(void *)(a1 + 40)) {
      operator delete(*(void **)(a1 + 32));
    }
  }
  return a1;
}

__n128 google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      CoreML::Specification::MILSpec::Value::~Value((CoreML::Specification::MILSpec::Value *)(v7 + 24));
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x1E0198C00](v7, 0x10B2C40CC7398DALL);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 32);
  if (v8) {
    goto LABEL_7;
  }
  uint64_t v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    BOOL v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        int v14 = v13;
        BOOL v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        int v14 = *(void **)(v12 + 16);
        BOOL v15 = *v14 == v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    uint64_t v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  BOOL v16 = (void *)a2[2];
  uint64_t v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  unint64_t v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  unsigned int v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (void *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        void v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

BOOL google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(unsigned __int8 **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16) & (*(void *)(v3 + 8) - 1);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v6 + 8 * v5);
  if ((unsigned __int8 *)v7 == v4) {
    return 1;
  }
  if (v7 && v7 != *(void *)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      uint64_t v7 = *(void *)(v7 + 32);
      if (!v7) {
        break;
      }
      if ((unsigned __int8 *)v7 == v4) {
        return 1;
      }
    }
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v13, v3, v4, a2);
  uint64_t v9 = v14;
  *(void *)(a1 + 16) = v14;
  uint64_t v10 = *(void *)(*(void *)(a1 + 8) + 32);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  return !v11 || v11 != *(void *)(v10 + 8 * (v9 ^ 1));
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(void *result, unint64_t a2)
{
  *__n128 result = 0;
  uint64_t v2 = result[1];
  unint64_t v3 = *(void *)(v2 + 8);
  if (v3 <= a2)
  {
LABEL_6:
    result[2] = a2;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 32);
    while (1)
    {
      uint64_t v5 = *(void *)(v4 + 8 * a2);
      if (v5) {
        break;
      }
      if (v3 == ++a2)
      {
        a2 = v3;
        goto LABEL_6;
      }
    }
    uint64_t v6 = *(void *)(v4 + 8 * (a2 ^ 1));
    result[2] = a2;
    if (v5 == v6) {
      *__n128 result = *(void *)(*(void *)v5 + 32);
    }
    else {
      *__n128 result = v5;
    }
  }
  return result;
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  uint64_t v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  uint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0A24D0(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0A248CLL);
}

uint64_t CoreML::Specification::MILSpec::TensorType::GetCachedSize(CoreML::Specification::MILSpec::TensorType *this)
{
  return *((unsigned int *)this + 21);
}

uint64_t CoreML::Specification::MILSpec::TensorType::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  signed int v6 = *(_DWORD *)(this + 80);
  if (v6) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(1, v6, a2, a4);
  }
  unint64_t v7 = *(void *)(v5 + 72);
  if (v7) {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  }
  int v8 = *(_DWORD *)(v5 + 24);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2);
  }
  uint64_t v10 = *(unint64_t **)(v5 + 64);
  unint64_t v11 = *v10;
  if (*v10)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v11 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_31;
      }
    }
    else if (v11 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_31:
      operator new[]();
    }
    this = (uint64_t)google::protobuf::Map<std::string,std::string>::begin(v18, v10);
    uint64_t v13 = 0;
    while (v18[0])
    {
      uint64_t v14 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v18[0] + 3), (google::protobuf::Arena *)(*((void *)v18[0] + 3) + 24), *(google::protobuf::Arena **)(v5 + 40));
      if ((google::protobuf::Arena **)v13 != v14)
      {
        if (v13) {
          (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
        }
        uint64_t v13 = (uint64_t)v14;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(4, v13, a2);
      BOOL v15 = (unsigned int *)*((void *)v18[0] + 3);
      if (*((char *)v15 + 23) < 0)
      {
        BOOL v15 = *(unsigned int **)v15;
        uint64_t v16 = *(void *)(*((void *)v18[0] + 3) + 8);
      }
      else
      {
        LODWORD(v16) = *((unsigned __int8 *)v15 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v15, v16, 1, (uint64_t)"CoreML.Specification.MILSpec.TensorType.AttributesEntry.key");
      this = (uint64_t)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v18);
    }
    if (v13) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
  }
  return this;
}

void sub_1DC0A281C(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::TensorType::MergePartialFromCodedStream(CoreML::Specification::MILSpec::TensorType *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 40;
  signed int v6 = (char *)this + 48;
  unint64_t v7 = (CoreML::Specification::MILSpec::TensorType *)((char *)this + 16);
  while (1)
  {
    int v8 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1)) {
      break;
    }
    uint64_t v9 = *v8;
    if (*v8 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v8 + 1;
    unint64_t v10 = v9 | 0x100000000;
    if ((v10 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_25:
    if (v10) {
      BOOL v22 = (v10 & 7) == 4;
    }
    else {
      BOOL v22 = 1;
    }
    if (v22) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3))goto LABEL_76; {
LABEL_30:
    }
    int v23 = 0;
LABEL_31:
    if (v23) {
      goto LABEL_76;
    }
  }
  LODWORD(v9) = 0;
LABEL_7:
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
  unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v10 & 0x100000000) == 0) {
    goto LABEL_25;
  }
LABEL_8:
  switch(v10 >> 3)
  {
    case 1u:
      if (v10 != 8) {
        goto LABEL_25;
      }
      uint64_t v12 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v13 = 0;
      }
      else
      {
        int v13 = *v12;
        if ((*v12 & 0x80000000) == 0)
        {
          *(void *)a2 = v12 + 1;
          goto LABEL_75;
        }
      }
      Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v13);
      int v13 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        goto LABEL_76;
      }
LABEL_75:
      *((_DWORD *)this + 2CoreML::Specification::MILSpec::TupleType::New(this, 0) = v13;
      goto LABEL_30;
    case 2u:
      if (v10 != 16) {
        goto LABEL_25;
      }
      uint64_t v14 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
      {
        Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v24 & 1) == 0) {
          goto LABEL_76;
        }
      }
      else
      {
        Varint64Fallbacint k = *v14;
        *(void *)a2 = v14 + 1;
      }
      *((void *)this + 9) = Varint64Fallback;
      goto LABEL_30;
    case 3u:
      if (v10 != 26) {
        goto LABEL_25;
      }
      uint64_t v16 = (int *)*((void *)this + 4);
      if (!v16)
      {
        int v17 = *((_DWORD *)this + 6);
        int v18 = *((_DWORD *)this + 7);
LABEL_56:
        if (v17 <= v18)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v7, v18 - v17 + 1);
          uint64_t v16 = (int *)*((void *)this + 4);
        }
        int v18 = *v16;
        goto LABEL_59;
      }
      int v17 = *((_DWORD *)this + 6);
      int v18 = *v16;
      if (v17 < *v16)
      {
        *((_DWORD *)this + 6) = v17 + 1;
        Aligned = *(google::protobuf::Arena ***)&v16[2 * v17 + 2];
        goto LABEL_64;
      }
      if (v18 == *((_DWORD *)this + 7)) {
        goto LABEL_56;
      }
LABEL_59:
      int *v16 = v18 + 1;
      int v33 = *(google::protobuf::Arena **)v7;
      if (!*(void *)v7) {
        operator new();
      }
      CoreML::Specification::MILSpec::Dimension::Dimension((CoreML::Specification::MILSpec::Dimension *)Aligned);
      BOOL v34 = google::protobuf::Arena::AllocateAligned(v33, 0, 24);
      void *v34 = (google::protobuf::Arena *)Aligned;
      v34[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Dimension>;
      int v35 = (unint64_t *)((char *)v33 + 32);
      do
        unint64_t v36 = __ldxr(v35);
      while (__stxr((unint64_t)v34, v35));
      v34[2] = (google::protobuf::Arena *)v36;
      uint64_t v37 = *((void *)this + 4);
      uint64_t v38 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v38 + 1;
      *(void *)(v37 + 8 * v38 + 8) = Aligned;
LABEL_64:
      int v39 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v39 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_76;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v39;
        *(void *)a2 = v39 + 1;
      }
      int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v43 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v43--, 1);
      *((_DWORD *)a2 + 13) = v43;
      if (v43 < 0 == v27)
      {
        int v44 = v41;
        if (CoreML::Specification::MILSpec::Dimension::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Dimension *)Aligned, a2, v42))
        {
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v44)) {
            goto LABEL_30;
          }
        }
      }
LABEL_76:
      uint64_t result = 0;
      break;
    case 4u:
      if (v10 != 34) {
        goto LABEL_25;
      }
      v47[0] = v5;
      v47[1] = v6;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      std::string __p = 0;
      uint64_t v51 = 0;
      uint64_t v20 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
      {
        int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v21 < 0) {
          goto LABEL_72;
        }
      }
      else
      {
        int v21 = *v20;
        *(void *)a2 = v20 + 1;
      }
      int v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 != v27
        || (int v28 = v25,
            !google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::MergePartialFromCodedStream((uint64_t)v47, a2))|| !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28))
      {
LABEL_72:
        BOOL v32 = 0;
        int v23 = 6;
        goto LABEL_48;
      }
      if (v50 >= 0) {
        p_p = (unsigned int *)&__p;
      }
      else {
        p_p = (unsigned int *)__p;
      }
      if (v50 >= 0) {
        int v30 = HIBYTE(v50);
      }
      else {
        int v30 = v49;
      }
      BOOL v31 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v30, 0, (uint64_t)"CoreML.Specification.MILSpec.TensorType.AttributesEntry.key");
      BOOL v32 = v31;
      if (v31) {
        int v23 = 0;
      }
      else {
        int v23 = 6;
      }
LABEL_48:
      if (v51) {
        (*(void (**)(uint64_t))(*(void *)v51 + 8))(v51);
      }
      if (SHIBYTE(v50) < 0) {
        operator delete(__p);
      }
      if (!v32) {
        goto LABEL_31;
      }
      goto LABEL_30;
    default:
      goto LABEL_25;
  }
  return result;
}

void sub_1DC0A2CEC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this)
{
  uint64_t v4 = *(unsigned char **)this;
  if (*(void *)this >= *((void *)this + 1) || *v4 != 10)
  {
    unint64_t v10 = (void **)(a1 + 16);
    if (*(char *)(a1 + 39) < 0) {
      operator delete(*v10);
    }
    *unint64_t v10 = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    goto LABEL_13;
  }
  *(void *)this = v4 + 1;
  if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, (std::string *)(a1 + 16))) {
    return 0;
  }
  if ((int)(*((_DWORD *)this + 2) - *(void *)this) < 1 {
    || **(unsigned char **)this != 18
  }
    || (uint64_t v5 = *(void *)(a1 + 8),
        uint64_t v6 = **(void **)(v5 + 16),
        *(void *)(a1 + 4CoreML::Specification::MILSpec::TupleType::New(this, 0) = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::operator[](v5, a1 + 16), v6 == **(void **)(*(void *)(a1 + 8) + 16)))
  {
LABEL_13:
    unint64_t v11 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
    uint64_t v12 = *(google::protobuf::Arena ***)(a1 + 48);
    if (v12 != v11)
    {
      if (v12) {
        (*((void (**)(google::protobuf::Arena **))*v12 + 1))(v12);
      }
      *(void *)(a1 + 48) = v11;
    }
    int v13 = (std::string *)v11[2];
    *((_DWORD *)v11 + 10) |= 1u;
    if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstance();
    }
    std::string::operator=(v13, (const std::string *)(a1 + 16));
    uint64_t v14 = (*(uint64_t (**)(void, google::protobuf::io::CodedInputStream *))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), this);
    if (v14) {
      google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::UseKeyAndValueFromEntry(a1);
    }
    if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
      *(void *)(a1 + 48) = 0;
    }
    return v14;
  }
  google::protobuf::io::CodedInputStream::Skip(this, 1u);
  unint64_t v7 = *(CoreML::Specification::MILSpec::Value **)(a1 + 40);
  int v8 = *(char **)this;
  if (*(void *)this >= *((void *)this + 1) || *v8 < 0)
  {
    int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
    if (VarintSizeAsIntFallback < 0)
    {
LABEL_31:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::erase(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
      return 0;
    }
  }
  else
  {
    int VarintSizeAsIntFallback = *v8;
    *(void *)this = v8 + 1;
  }
  int v15 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
  int v16 = *((_DWORD *)this + 13);
  BOOL v17 = __OFSUB__(v16--, 1);
  *((_DWORD *)this + 13) = v16;
  if (v16 < 0 != v17) {
    goto LABEL_31;
  }
  int v18 = v15;
  if (!CoreML::Specification::MILSpec::Value::MergePartialFromCodedStream(v7, this)
    || !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v18))
  {
    goto LABEL_31;
  }
  if (*(void *)this == *((void *)this + 1)
    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
  {
    *((_DWORD *)this + 8) = 0;
    uint64_t v14 = 1;
    *((unsigned char *)this + 36) = 1;
    return v14;
  }
  return google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::ReadBeyondKeyValuePair(a1, (uint64_t)this);
}

double google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
  uint64_t v5 = *(google::protobuf::Arena ***)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*((void (**)(google::protobuf::Arena **))*v5 + 1))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  long long v6 = *(CoreML::Specification::MILSpec::Value **)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (google::protobuf::Arena **)v4[3];
  if (!Aligned)
  {
    int v8 = v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::MILSpec::Value::Value((CoreML::Specification::MILSpec::Value *)Aligned);
    uint64_t v9 = google::protobuf::Arena::AllocateAligned(v8, 0, 24);
    *uint64_t v9 = (google::protobuf::Arena *)Aligned;
    v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Value>;
    unint64_t v10 = (unint64_t *)((char *)v8 + 32);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr((unint64_t)v9, v10));
    std::string v9[2] = (google::protobuf::Arena *)v11;
    v4[3] = (google::protobuf::Arena *)Aligned;
  }
  CoreML::Specification::MILSpec::Value::Swap((uint64_t)Aligned, v6);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::erase(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v12 = *(void *)(a1 + 48);
  *(_DWORD *)(v12 + 40) |= 1u;
  uint64_t v13 = *(void *)(v12 + 16);
  if ((uint64_t *)v13 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v13 + 23) < 0) {
    operator delete(*(void **)v13);
  }
  long long v14 = *(_OWORD *)(a1 + 16);
  *(void *)(v13 + 16) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v13 = v14;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v15 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v15) {
    google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
    *(void *)(a1 + 48) = 0;
  }
  return v15;
}

void sub_1DC0A325C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::TupleType::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627B80;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  uint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  unint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::MILSpec::TupleType::New(this, 0) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(google::protobuf::Arena ***)(v4 + 24);
  if (!Aligned)
  {
    long long v6 = *(google::protobuf::Arena **)(v4 + 32);
    if (!v6) {
      operator new();
    }
    CoreML::Specification::MILSpec::Value::Value((CoreML::Specification::MILSpec::Value *)Aligned);
    uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
    CoreML::Specification::MILSpec::Value *v7 = (google::protobuf::Arena *)Aligned;
    v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Value>;
    int v8 = (unint64_t *)((char *)v6 + 32);
    do
      unint64_t v9 = __ldxr(v8);
    while (__stxr((unint64_t)v7, v8));
    void v7[2] = (google::protobuf::Arena *)v9;
    *(void *)(v4 + 24) = Aligned;
    unint64_t v3 = *(google::protobuf::Arena ***)(a1 + 40);
  }
  return CoreML::Specification::MILSpec::Value::Swap((uint64_t)v3, (CoreML::Specification::MILSpec::Value *)Aligned);
}

void sub_1DC0A3424(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Value::Swap(uint64_t this, CoreML::Specification::MILSpec::Value *a2)
{
  if (a2 != (CoreML::Specification::MILSpec::Value *)this)
  {
    uint64_t v2 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    uint64_t v4 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 4CoreML::Specification::MILSpec::TupleType::New(this, 0) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 1CoreML::Specification::MILSpec::TupleType::New(this, 0) = v4;
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::TensorType::IsInitialized(CoreML::Specification::MILSpec::TensorType *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::TensorType::Clear(CoreML::Specification::MILSpec::TensorType *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::clear((void *)this + 6);
  *((_DWORD *)this + 2CoreML::Specification::MILSpec::TupleType::New(this, 0) = 0;
  *((void *)this + 9) = 0;
}

void CoreML::Specification::MILSpec::TensorType::New(CoreML::Specification::MILSpec::TensorType *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A3564(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4012099E73);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::TensorType>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorType>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::TensorType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::TensorType::New(CoreML::Specification::MILSpec::TensorType *this)
{
}

void *CoreML::Specification::MILSpec::TensorType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.TensorType");
}

void CoreML::Specification::MILSpec::TensorType::~TensorType(CoreML::Specification::MILSpec::TensorType *this)
{
  CoreML::Specification::MILSpec::TensorType::~TensorType(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F36252C0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map((void *)this + 6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::ValueType::GetCachedSize(CoreML::Specification::MILSpec::ValueType *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::MILSpec::ValueType::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(this + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 2)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(2, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 3)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 4)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(4, *(void *)(v3 + 16), a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 5)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(5, v5, a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::ValueType::IsInitialized(CoreML::Specification::MILSpec::ValueType *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::ValueType::New(CoreML::Specification::MILSpec::ValueType *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A37F0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::ValueType>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::ValueType>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::ValueType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::ValueType::New(CoreML::Specification::MILSpec::ValueType *this)
{
}

void *CoreML::Specification::MILSpec::ValueType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.ValueType");
}

void CoreML::Specification::MILSpec::ValueType::~ValueType(CoreML::Specification::MILSpec::ValueType *this)
{
  CoreML::Specification::MILSpec::ValueType::~ValueType(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F36263F8;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::MILSpec::ValueType::clear_type((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::NamedValueType::GetCachedSize(CoreML::Specification::MILSpec::NamedValueType *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::MILSpec::NamedValueType::SerializeWithCachedSizes(CoreML::Specification::MILSpec::NamedValueType *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t result = *((void *)this + 2);
  if ((*(char *)(result + 23) & 0x80000000) == 0)
  {
    LODWORD(v5) = *(unsigned __int8 *)(result + 23);
    if (!*(unsigned char *)(result + 23)) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(result + 8);
  if (v5)
  {
    uint64_t result = *(void *)result;
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v5, 1, (uint64_t)"CoreML.Specification.MILSpec.NamedValueType.name");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  if (this != (CoreML::Specification::MILSpec::NamedValueType *)&CoreML::Specification::MILSpec::_NamedValueType_default_instance_)
  {
    uint64_t v6 = *((void *)this + 3);
    if (v6)
    {
      return google::protobuf::internal::WireFormatLite::WriteMessage(2, v6, a2);
    }
  }
  return result;
}

uint64_t CoreML::Specification::MILSpec::NamedValueType::ByteSizeLong(CoreML::Specification::MILSpec::NamedValueType *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if (this != (CoreML::Specification::MILSpec::NamedValueType *)&CoreML::Specification::MILSpec::_NamedValueType_default_instance_)
  {
    uint64_t v6 = (CoreML::Specification::MILSpec::TensorType **)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = CoreML::Specification::MILSpec::ValueType::ByteSizeLong(v6);
      v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v5;
  return v5;
}

uint64_t CoreML::Specification::MILSpec::NamedValueType::MergePartialFromCodedStream(CoreML::Specification::MILSpec::NamedValueType *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_25;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_25;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 18) {
          goto LABEL_25;
        }
        long long v14 = (CoreML::Specification::MILSpec::ValueType *)*((void *)this + 3);
        if (!v14) {
          operator new();
        }
        uint64_t v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v15;
          *(void *)a2 = v15 + 1;
        }
        int v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v20 = *((_DWORD *)a2 + 13);
        BOOL v21 = __OFSUB__(v20--, 1);
        *((_DWORD *)a2 + 13) = v20;
        if (v20 < 0 == v21)
        {
          int v22 = v18;
          uint64_t result = CoreML::Specification::MILSpec::ValueType::MergePartialFromCodedStream(v14, a2, v19);
          if (!result) {
            return result;
          }
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22)) {
            continue;
          }
        }
        return 0;
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
      if (!result) {
        return result;
      }
      uint64_t v12 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v12 = *(unsigned int **)v12;
        std::string::size_type size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, size, 0, (uint64_t)"CoreML.Specification.MILSpec.NamedValueType.name"))return 0; {
    }
      }
LABEL_25:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0A3CA0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MILSpec::NamedValueType::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::NamedValueType *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_11;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_11;
  }
  this = (std::string *)&v3->__r_.__value_.__r.__words[2];
  uint64_t v6 = (uint64_t *)v3->__r_.__value_.__r.__words[2];
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this, v5);
    }
    this = std::string::operator=((std::string *)v3->__r_.__value_.__r.__words[2], (const std::string *)v5);
  }
LABEL_11:
  if (a2 != (const CoreML::Specification::MILSpec::NamedValueType *)&CoreML::Specification::MILSpec::_NamedValueType_default_instance_
    && *((void *)a2 + 3))
  {
    if (!v3[1].__r_.__value_.__r.__words[0]) {
      operator new();
    }
    uint64_t v7 = (const CoreML::Specification::MILSpec::ValueType *)*((void *)a2 + 3);
    data = (unint64_t *)v3[1].__r_.__value_.__l.__data_;
    return (std::string *)CoreML::Specification::MILSpec::ValueType::MergeFrom(data, v7);
  }
  return this;
}

void sub_1DC0A3DD4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::NamedValueType::IsInitialized(CoreML::Specification::MILSpec::NamedValueType *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::NamedValueType::Clear(CoreML::Specification::MILSpec::NamedValueType *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

void CoreML::Specification::MILSpec::NamedValueType::New(CoreML::Specification::MILSpec::NamedValueType *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A3ED8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::NamedValueType *CoreML::Specification::MILSpec::NamedValueType::NamedValueType(CoreML::Specification::MILSpec::NamedValueType *this)
{
  *(void *)this = &unk_1F3625520;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::NamedValueType *)&CoreML::Specification::MILSpec::_NamedValueType_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0A3F68(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::NamedValueType>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::NamedValueType>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::NamedValueType>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::NamedValueType::New(CoreML::Specification::MILSpec::NamedValueType *this)
{
}

void *CoreML::Specification::MILSpec::NamedValueType::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.NamedValueType");
}

void CoreML::Specification::MILSpec::NamedValueType::~NamedValueType(CoreML::Specification::MILSpec::NamedValueType *this)
{
  CoreML::Specification::MILSpec::NamedValueType::~NamedValueType(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;

  *(void *)this = &unk_1F3625520;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::MILSpec::NamedValueType *)&CoreML::Specification::MILSpec::_NamedValueType_default_instance_)
  {
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::~Map(void *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        void v7[2] = v2;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

__n128 google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      CoreML::Specification::MILSpec::Argument::~Argument((CoreML::Specification::MILSpec::Argument *)(v7 + 24));
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x1E0198C00](v7, 0x10B2C40C743746ALL);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 32);
  if (v8) {
    goto LABEL_7;
  }
  uint64_t v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    uint64_t v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        long long v14 = v13;
        uint64_t v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        long long v14 = *(void **)(v12 + 16);
        BOOL v15 = *v14 == v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    uint64_t v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  int v16 = (void *)a2[2];
  uint64_t v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  unsigned int v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  int v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (void *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        void v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

void CoreML::Specification::MILSpec::Argument::~Argument(CoreML::Specification::MILSpec::Argument *this)
{
  *(void *)this = &unk_1F3625FD0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::MILSpec::Argument::~Argument(this);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  uint64_t v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  unint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)unint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0A4548(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0A4504);
}

uint64_t CoreML::Specification::MILSpec::Operation::GetCachedSize(CoreML::Specification::MILSpec::Operation *this)
{
  return *((unsigned int *)this + 34);
}

uint64_t CoreML::Specification::MILSpec::Operation::SerializeWithCachedSizes(CoreML::Specification::MILSpec::Operation *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t result = *((void *)this + 16);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  LODWORD(v5) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v5, 1, (uint64_t)"CoreML.Specification.MILSpec.Operation.type");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 16), a2);
  }
LABEL_7:
  unsigned int v6 = (unint64_t *)*((void *)this + 5);
  unint64_t v7 = *v6;
  if (*v6)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v7 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_30;
      }
    }
    else if (v7 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_30:
      operator new[]();
    }
    uint64_t result = (uint64_t)google::protobuf::Map<std::string,std::string>::begin(v26, v6);
    uint64_t v9 = 0;
    while (v26[0])
    {
      uint64_t v10 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v26[0] + 3), (google::protobuf::Arena *)(*((void *)v26[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
      if ((google::protobuf::Arena **)v9 != v10)
      {
        if (v9) {
          (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        }
        uint64_t v9 = (uint64_t)v10;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(2, v9, a2);
      long long v11 = (unsigned int *)*((void *)v26[0] + 3);
      if (*((char *)v11 + 23) < 0)
      {
        long long v11 = *(unsigned int **)v11;
        uint64_t v12 = *(void *)(*((void *)v26[0] + 3) + 8);
      }
      else
      {
        LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.MILSpec.Operation.InputsEntry.key");
      uint64_t result = (uint64_t)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v26);
    }
    if (v9) {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  int v14 = *((_DWORD *)this + 14);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
      uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(*((void *)this + 8) + 8 * i + 8), a2);
  }
  int v16 = *((_DWORD *)this + 20);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
      uint64_t result = google::protobuf::internal::WireFormatLite::WriteMessage(4, *(void *)(*((void *)this + 11) + 8 * j + 8), a2);
  }
  unint64_t v18 = (unint64_t *)*((void *)this + 15);
  unint64_t v19 = *v18;
  if (*v18)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v19 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_60;
      }
    }
    else if (v19 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_60:
      operator new[]();
    }
    uint64_t result = (uint64_t)google::protobuf::Map<std::string,std::string>::begin(v26, v18);
    uint64_t v21 = 0;
    while (v26[0])
    {
      uint64_t v22 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v26[0] + 3), (google::protobuf::Arena *)(*((void *)v26[0] + 3) + 24), *((google::protobuf::Arena **)this + 12));
      if ((google::protobuf::Arena **)v21 != v22)
      {
        if (v21) {
          (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
        }
        uint64_t v21 = (uint64_t)v22;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(5, v21, a2);
      int v23 = (unsigned int *)*((void *)v26[0] + 3);
      if (*((char *)v23 + 23) < 0)
      {
        int v23 = *(unsigned int **)v23;
        uint64_t v24 = *(void *)(*((void *)v26[0] + 3) + 8);
      }
      else
      {
        LODWORD(v24) = *((unsigned __int8 *)v23 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v23, v24, 1, (uint64_t)"CoreML.Specification.MILSpec.Operation.AttributesEntry.key");
      uint64_t result = (uint64_t)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v26);
    }
    if (v21) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
  }
  return result;
}

void sub_1DC0A4B58(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  size_t v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    int v91 = a2 - 24;
    int v92 = a2 - 16;
    uint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                int v41 = *(void **)v95;
                unsigned int v42 = *(void **)v9;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)uint64_t v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            int v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                unsigned int v47 = v9;
                do
                {
                  uint64_t v49 = *(void **)v47;
                  int v48 = (void *)*((void *)v47 + 1);
                  unsigned int v47 = v43;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      uint64_t v49 = *(void **)&v9[v50 - 8];
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        uint64_t v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    uint64_t v51 = v9;
LABEL_80:
                    *(void *)uint64_t v51 = v48;
                  }
                  int v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                int v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                if (result)
                {
                  int v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                int v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              long long v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  uint64_t v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    uint64_t v58 = *(void **)v56;
                    int v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      int v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    int v60 = *(void **)v56;
                  }
                  char v61 = &v98[8 * v54];
                  uint64_t v62 = *(void **)v61;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      unsigned int v63 = v56;
                      *(void *)char v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      uint64_t v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        int v60 = *(void **)v56;
                        int v66 = (void *)*((void *)v56 + 1);
                        if (std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v66))
                        {
                          int v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        int v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, v62);
                      char v61 = v63;
                    }
                    while (!result);
                    *(void *)unsigned int v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              int v68 = v98;
              do
              {
                char v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                int v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    int v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    int v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v73, v77);
                    if (result) {
                      int v78 = v77;
                    }
                    else {
                      int v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)int v68 = v78;
                  int v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    uint64_t v81 = &v98[8 * v80];
                    int v82 = *(void **)v81;
                    uint64_t v83 = *(void **)v73;
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        int v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        uint64_t v81 = &v98[8 * v80];
                        int v82 = *(void **)v81;
                        uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)int v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                int v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          int v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            BOOL v15 = *(void **)v9;
            *(void *)uint64_t v9 = *(void *)v14;
            *(void *)int v14 = v15;
          }
          --a3;
          int v16 = *(void **)v9;
          BOOL v17 = v9;
          if (a4) {
            break;
          }
          BOOL v17 = v9;
          if (std::less<std::string>::operator()[abi:ne180100](*((void **)v9 - 1), *(void **)v9)) {
            break;
          }
          uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v95);
          if (result)
          {
            do
            {
              BOOL v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            BOOL v32 = v9 + 8;
            do
            {
              uint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v9);
            }
            while (!result);
          }
          int v33 = a2;
          if (v9 < a2)
          {
            int v33 = a2;
            do
            {
              BOOL v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v34);
            }
            while ((result & 1) != 0);
          }
          int v35 = a2;
          if (v9 < v33)
          {
            unint64_t v36 = *(void **)v9;
            uint64_t v37 = *(void **)v33;
            do
            {
              *(void *)uint64_t v9 = v37;
              *(void *)int v33 = v36;
              do
              {
                uint64_t v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                unint64_t v36 = v38;
              }
              while (!std::less<std::string>::operator()[abi:ne180100](v16, v38));
              do
              {
                int v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                uint64_t v37 = v39;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          int v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)int v40 = v16;
        }
        do
        {
          unint64_t v18 = v17;
          uint64_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          unint64_t v19 = v20;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v20, v16));
        uint64_t v97 = a3;
        uint64_t v21 = a2;
        if (v18 == (char *)v10)
        {
          uint64_t v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            int v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v23, v16));
        }
        else
        {
          do
          {
            uint64_t v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v22, v16));
        }
        size_t v8 = (char *)v10;
        uint64_t v24 = a2;
        if (v17 < v21)
        {
          unint64_t v25 = *(void **)v21;
          uint64_t v26 = v17;
          __n128 v27 = v21;
          do
          {
            *(void *)uint64_t v26 = v25;
            *(void *)__n128 v27 = v19;
            do
            {
              unint64_t v18 = v26;
              unint64_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              unint64_t v19 = v28;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v28, v16));
            do
            {
              uint64_t v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              unint64_t v25 = v29;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)size_t v8 = *(void *)v18;
        }
        *(void *)unint64_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        uint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const**>((void **)v8, (void **)v18);
      uint64_t v9 = v18 + 8;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3627058;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  unsigned int v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  unint64_t v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  char *v7 = 18;
  uint64_t v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *uint64_t v9 = v11;
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 40) + ((9 * (__clz(*(_DWORD *)(v4 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::MILSpec::Argument *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::MILSpec::Argument::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t CoreML::Specification::MILSpec::Argument::ByteSizeLong(CoreML::Specification::MILSpec::Argument *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::MILSpec::Argument_Binding::ByteSizeLong(*(CoreML::Specification::MILSpec::Argument_Binding **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::MILSpec::Argument_Binding::ByteSizeLong(CoreML::Specification::MILSpec::Argument_Binding *this)
{
  int v2 = *((_DWORD *)this + 7);
  if (v2 == 2)
  {
    uint64_t v7 = CoreML::Specification::MILSpec::Value::ByteSizeLong(*((CoreML::Specification::MILSpec::Value **)this + 2));
    uint64_t v6 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
  }
  else
  {
    if (v2 != 1)
    {
      uint64_t result = 0;
      goto LABEL_9;
    }
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
  }
  uint64_t result = v6 + 1;
LABEL_9:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = v9;
        unsigned int v10 = *(char **)this;
        if (*(void *)this < *((void *)this + 1) && *v10 == 18)
        {
          *(void *)this = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = v9 | 2;
      Aligned = *(google::protobuf::Arena ***)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::MILSpec::Argument::Argument((CoreML::Specification::MILSpec::Argument *)Aligned);
        unint64_t v13 = google::protobuf::Arena::AllocateAligned(v12, 0, 24);
        *unint64_t v13 = (google::protobuf::Arena *)Aligned;
        v13[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument>;
        int v14 = (unint64_t *)((char *)v12 + 32);
        do
          unint64_t v15 = __ldxr(v14);
        while (__stxr((unint64_t)v13, v14));
        void v13[2] = (google::protobuf::Arena *)v15;
        *(void *)(a1 + 24) = Aligned;
      }
      int v16 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1) || *v16 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v16;
        *(void *)this = v16 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
      int v20 = *((_DWORD *)this + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)this + 13) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      uint64_t result = CoreML::Specification::MILSpec::Argument::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Argument *)Aligned, this, v19);
      if (!result) {
        return result;
      }
      uint64_t result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v22);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_1DC0A5B70(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::MILSpec::Argument *CoreML::Specification::MILSpec::Argument::Argument(CoreML::Specification::MILSpec::Argument *this)
{
  *(void *)this = &unk_1F3625FD0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::MILSpec::Argument *)&CoreML::Specification::MILSpec::_Argument_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = 0;
  return this;
}

void sub_1DC0A5C08(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Argument::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Argument *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::MILSpec::Argument *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      unsigned int v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          unsigned int v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *unsigned int v12 = v14 + 1;
      int v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::MILSpec::Argument_Binding::Argument_Binding((CoreML::Specification::MILSpec::Argument_Binding *)Aligned);
      BOOL v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      char *v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument_Binding>;
      int v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      void v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        uint64_t result = CoreML::Specification::MILSpec::Argument_Binding::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Argument_Binding *)Aligned, a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0A5E68(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Argument_Binding::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Argument_Binding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_8;
        }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *(void *)a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_8:
        if (v8 >> 3 != 2) {
          break;
        }
        if (v8 != 18) {
          goto LABEL_20;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::MILSpec::Argument_Binding::clear_binding((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        unsigned int v11 = *v5;
        int v18 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v18;
          *(void *)a2 = v18 + 1;
        }
        int v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v22 = *((_DWORD *)a2 + 13);
        BOOL v23 = __OFSUB__(v22--, 1);
        *((_DWORD *)a2 + 13) = v22;
        if (v22 < 0 == v23)
        {
          int v24 = v20;
          uint64_t result = CoreML::Specification::MILSpec::Value::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Value *)v11, a2, v21);
          if (!result) {
            return result;
          }
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v24)) {
            continue;
          }
        }
        return 0;
      }
      if (v8 >> 3 != 1 || v8 != 10) {
        break;
      }
      if (*((_DWORD *)this + 7) != 1)
      {
        CoreML::Specification::MILSpec::Argument_Binding::clear_binding((uint64_t)this);
        *((_DWORD *)this + 7) = 1;
        *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_27:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_27;
      }
      uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
      if (!result) {
        return result;
      }
      int v14 = *((_DWORD *)this + 7);
      unint64_t v15 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
      if (v14 == 1) {
        unint64_t v15 = *v5;
      }
      if (SHIBYTE(v15->__r_.__value_.__r.__words[2]) < 0) {
        unint64_t v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
      }
      int v16 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
      if (v14 == 1) {
        int v16 = *v5;
      }
      if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0) {
        std::string::size_type size = v16->__r_.__value_.__l.__size_;
      }
      else {
        LODWORD(size) = HIBYTE(v16->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v15, size, 0, (uint64_t)"CoreML.Specification.MILSpec.Argument.Binding.name"))return 0; {
    }
      }
LABEL_20:
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0A60E8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Argument_Binding::clear_binding(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 2)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  else if (v2 == 1)
  {
    uint64_t v3 = *(void *)(this + 16);
    if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string && v3 != 0)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      this = MEMORY[0x1E0198C00](v3, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::MILSpec::Argument_Binding *CoreML::Specification::MILSpec::Argument_Binding::Argument_Binding(CoreML::Specification::MILSpec::Argument_Binding *this)
{
  *(void *)this = &unk_1F3625650;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::MILSpec::Argument_Binding *)&CoreML::Specification::MILSpec::_Argument_Binding_default_instance_) {
    CoreML::Specification::MILSpec::protobuf_MIL_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC0A6214(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument_Binding>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      uint64_t v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::MILSpec::Argument::Argument((CoreML::Specification::MILSpec::Argument *)Aligned);
        int v9 = google::protobuf::Arena::AllocateAligned(size, 0, 24);
        *int v9 = (google::protobuf::Arena *)Aligned;
        v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument>;
        unsigned int v10 = (unint64_t *)((char *)size + 32);
        do
          unint64_t v11 = __ldxr(v10);
        while (__stxr((unint64_t)v9, v10));
        std::string v9[2] = (google::protobuf::Arena *)v11;
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      unsigned int v12 = (const CoreML::Specification::MILSpec::Argument *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      uint64_t result = (std::string *)CoreML::Specification::MILSpec::Argument::MergeFrom((unint64_t *)v4[1].__r_.__value_.__l.__data_, v12);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_1DC0A6400(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::MILSpec::Argument::MergeFrom(unint64_t *this, const CoreML::Specification::MILSpec::Argument *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    uint64_t v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      unint64_t v11 = (const CoreML::Specification::MILSpec::Argument_Binding **)(v28 + 8);
      unsigned int v12 = (std::string **)this;
      do
      {
        int v14 = *v11++;
        int v13 = v14;
        unint64_t v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Argument_Binding>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      int v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      int v20 = (const CoreML::Specification::MILSpec::Argument_Binding **)(v18 + v28 + 8);
      do
      {
        unsigned int v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::MILSpec::Argument_Binding::Argument_Binding((CoreML::Specification::MILSpec::Argument_Binding *)Aligned);
        BOOL v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *BOOL v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument_Binding>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Argument_Binding>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC0A65D0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Argument_Binding>::Merge(const CoreML::Specification::MILSpec::Argument_Binding *a1, std::string *a2)
{
  return CoreML::Specification::MILSpec::Argument_Binding::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::MILSpec::Argument_Binding::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::Argument_Binding *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 != 2)
  {
    if (v5 != 1) {
      return this;
    }
    uint64_t v6 = (const std::string *)*((void *)a2 + 2);
    if (*(_DWORD *)(v3 + 28) == 1)
    {
      uint64_t v7 = *(std::string **)(v3 + 16);
      if (v7 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        return std::string::operator=(v7, v6);
      }
    }
    else
    {
      CoreML::Specification::MILSpec::Argument_Binding::clear_binding(v3);
      *(_DWORD *)(v3 + 28) = 1;
      *(void *)(v3 + 16) = &google::protobuf::internal::fixed_address_empty_string;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v3 + 16, (uint64_t)v6);
  }
  if (*(_DWORD *)(v3 + 28) != 2)
  {
    CoreML::Specification::MILSpec::Argument_Binding::clear_binding(v3);
    *(_DWORD *)(v3 + 28) = 2;
    operator new();
  }
  uint64_t v8 = (const CoreML::Specification::MILSpec::Value *)*((void *)a2 + 2);
  int v9 = *(std::string **)(v3 + 16);
  return CoreML::Specification::MILSpec::Value::MergeFrom(v9, v8);
}

void sub_1DC0A6770(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *(void *)(result + 24);
  if (v3)
  {
    uint64_t v4 = *(unsigned int *)(v3 + 24);
    if ((int)v4 >= 1)
    {
      int v5 = (uint64_t *)(*(void *)(v3 + 32) + 8);
      do
      {
        uint64_t v6 = *v5++;
        uint64_t result = CoreML::Specification::MILSpec::Argument_Binding::clear_binding(v6);
        --v4;
      }
      while (v4);
      *(_DWORD *)(v3 + 24) = 0;
    }
  }
  *(_DWORD *)(v1 + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = 0;
  int v5 = *(google::protobuf::Arena **)(a1 + 8);
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3627C28;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3627100;
  if ((void *)a1[1] != a1 && !a1[4])
  {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::value(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    int v5 = 3;
    uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v7 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(void *)(v2 + 24);
  if (*(void *)(a1 + 24)) {
    return *(void *)(a1 + 24);
  }
  else {
    return v3;
  }
}

void sub_1DC0A6A98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Argument> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      int v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      uint64_t v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      int v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    unsigned int v12 = *v9;
    int v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        int v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          int v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      int v17 = a1;
LABEL_12:
      void *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    uint64_t v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::MILSpec::Operation::ByteSizeLong(CoreML::Specification::MILSpec::Operation *this)
{
  uint64_t v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v25, v2);
  uint64_t v4 = 0;
  while (v25[0])
  {
    int v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v25[0] + 3), (google::protobuf::Arena *)(*((void *)v25[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    uint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v25);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  uint64_t v7 = *((unsigned int *)this + 14);
  uint64_t v8 = v3 + v7;
  if (v7)
  {
    int v9 = 0;
    do
    {
      uint64_t v10 = CoreML::Specification::MILSpec::NamedValueType::ByteSizeLong(*(CoreML::Specification::MILSpec::NamedValueType **)(*((void *)this + 8) + 8 * v9 + 8));
      v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      ++v9;
    }
    while (v7 != v9);
  }
  uint64_t v11 = *((unsigned int *)this + 20);
  uint64_t v12 = v8 + v11;
  if (v11)
  {
    int v13 = 0;
    do
    {
      uint64_t v14 = CoreML::Specification::MILSpec::Block::ByteSizeLong(*(CoreML::Specification::MILSpec::Block **)(*((void *)this + 11) + 8 * v13 + 8));
      v12 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      ++v13;
    }
    while (v11 != v13);
  }
  uint64_t v15 = (void *)*((void *)this + 15);
  uint64_t v16 = *(unsigned int *)v15;
  google::protobuf::Map<std::string,std::string>::begin(v25, v15);
  int v17 = 0;
  uint64_t v18 = v16 + v12;
  while (v25[0])
  {
    unint64_t v19 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v25[0] + 3), (google::protobuf::Arena *)(*((void *)v25[0] + 3) + 24), *((google::protobuf::Arena **)this + 12));
    if (v17 != v19)
    {
      if (v17) {
        (*((void (**)(google::protobuf::Arena **))*v17 + 1))(v17);
      }
      int v17 = v19;
    }
    uint64_t v20 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v17);
    v18 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v25);
  }
  if (v17) {
    (*((void (**)(google::protobuf::Arena **))*v17 + 1))(v17);
  }
  uint64_t v21 = *((void *)this + 16);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(void *)(v21 + 8)) {
      goto LABEL_30;
    }
  }
  else if (!*(unsigned char *)(v21 + 23))
  {
    goto LABEL_30;
  }
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_30:
  *((_DWORD *)this + 34) = v18;
  return v18;
}

void sub_1DC0A6F64(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::MILSpec::Block::ByteSizeLong(CoreML::Specification::MILSpec::Block *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::MILSpec::NamedValueType::ByteSizeLong(*(CoreML::Specification::MILSpec::NamedValueType **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v4 + v6;
  if ((int)v6 >= 1)
  {
    uint64_t v8 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v9 = *v8++;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      --v6;
    }
    while (v6);
  }
  uint64_t v12 = *((unsigned int *)this + 18);
  uint64_t v13 = v7 + v12;
  if (v12)
  {
    int v14 = 0;
    do
    {
      uint64_t v15 = CoreML::Specification::MILSpec::Operation::ByteSizeLong(*(CoreML::Specification::MILSpec::Operation **)(*((void *)this + 10) + 8 * v14 + 8));
      v13 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      ++v14;
    }
    while (v12 != v14);
  }
  uint64_t v16 = (void *)*((void *)this + 14);
  uint64_t v17 = *(unsigned int *)v16;
  google::protobuf::Map<std::string,std::string>::begin(v23, v16);
  uint64_t v18 = 0;
  uint64_t v19 = v17 + v13;
  while (v23[0])
  {
    uint64_t v20 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v23[0] + 3), (google::protobuf::Arena *)(*((void *)v23[0] + 3) + 24), *((google::protobuf::Arena **)this + 11));
    if (v18 != v20)
    {
      if (v18) {
        (*((void (**)(google::protobuf::Arena **))*v18 + 1))(v18);
      }
      uint64_t v18 = v20;
    }
    uint64_t v21 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v18);
    v19 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v23);
  }
  if (v18) {
    (*((void (**)(google::protobuf::Arena **))*v18 + 1))(v18);
  }
  *((_DWORD *)this + 3CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = v19;
  return v19;
}

void sub_1DC0A719C(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::MILSpec::Operation::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Operation *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v72 = (void *)((char *)this + 104);
  uint64_t v73 = (google::protobuf::Arena **)((char *)this + 96);
  uint64_t v71 = (CoreML::Specification::MILSpec::Operation *)((char *)this + 72);
  uint64_t v5 = (CoreML::Specification::MILSpec::Operation *)((char *)this + 48);
  uint64_t v6 = (google::protobuf::Arena **)((char *)this + 16);
  uint64_t v7 = (void *)((char *)this + 24);
  uint64_t v8 = (std::string **)((char *)this + 128);
  while (1)
  {
    uint64_t v9 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1)) {
      break;
    }
    uint64_t v10 = *v9;
    if (*v9 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v9 + 1;
    unint64_t v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_31:
    if (v11) {
      BOOL v26 = (v11 & 7) == 4;
    }
    else {
      BOOL v26 = 1;
    }
    if (v26) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3))goto LABEL_130; {
LABEL_36:
    }
    int v27 = 0;
LABEL_37:
    if (v27) {
      goto LABEL_130;
    }
  }
  LODWORD(v1CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = 0;
LABEL_7:
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
  unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v11 & 0x100000000) == 0) {
    goto LABEL_31;
  }
LABEL_8:
  switch(v11 >> 3)
  {
    case 1u:
      if (v11 != 10) {
        goto LABEL_31;
      }
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
      if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v8)) {
        goto LABEL_130;
      }
      uint64_t v13 = (unsigned int *)*v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v13 = *(unsigned int **)v13;
        std::string::size_type size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, size, 0, (uint64_t)"CoreML.Specification.MILSpec.Operation.type"))goto LABEL_130; {
      goto LABEL_36;
      }
    case 2u:
      if (v11 != 18) {
        goto LABEL_31;
      }
      uint64_t v74 = v6;
      uint64_t v75 = v7;
      memset(&__p, 0, sizeof(__p));
      int v78 = 0;
      int v24 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v24 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          goto LABEL_126;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v24;
        *(void *)a2 = v24 + 1;
      }
      int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v42 = *((_DWORD *)a2 + 13);
      BOOL v30 = __OFSUB__(v42--, 1);
      *((_DWORD *)a2 + 13) = v42;
      if (v42 < 0 != v30) {
        goto LABEL_126;
      }
      int v43 = v41;
      int v44 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1) && *v44 == 10)
      {
        *(void *)a2 = v44 + 1;
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p)) {
          goto LABEL_126;
        }
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 18)
        {
          uint64_t v45 = *(void *)v75[2];
          uint64_t v77 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::operator[]((uint64_t)v75, (uint64_t)&__p);
          if (v45 != *(void *)v75[2])
          {
            google::protobuf::io::CodedInputStream::Skip(a2, 1u);
            uint64_t v46 = (CoreML::Specification::MILSpec::Argument *)v77;
            unsigned int v47 = *(char **)a2;
            if (*(void *)a2 >= *((void *)a2 + 1) || *v47 < 0)
            {
              int v48 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v48 < 0) {
                goto LABEL_125;
              }
            }
            else
            {
              int v48 = *v47;
              *(void *)a2 = v47 + 1;
            }
            int v64 = google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
            int v66 = *((_DWORD *)a2 + 13);
            BOOL v30 = __OFSUB__(v66--, 1);
            *((_DWORD *)a2 + 13) = v66;
            if (v66 < 0 != v30
              || (int v67 = v64,
                  !CoreML::Specification::MILSpec::Argument::MergePartialFromCodedStream(v46, a2, v65))
              || !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v67))
            {
LABEL_125:
              google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::erase(v75, (unsigned __int8 *)&__p);
              goto LABEL_126;
            }
            if (*(void *)a2 == *((void *)a2 + 1)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              *((unsigned char *)a2 + 36) = 1;
              goto LABEL_108;
            }
            int BeyondKeyValuePair = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>>::ReadBeyondKeyValuePair((uint64_t)&v74, (uint64_t)a2);
            goto LABEL_107;
          }
        }
      }
      else
      {
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        memset(&__p, 0, sizeof(__p));
      }
      uint64_t v49 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*v74);
      if (v78 != v49)
      {
        if (v78) {
          (*((void (**)(void))*v78 + 1))();
        }
        int v78 = v49;
      }
      uint64_t v50 = (std::string *)v49[2];
      *((_DWORD *)v49 + 10) |= 1u;
      if (v50 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      std::string::operator=(v50, &__p);
      int BeyondKeyValuePair = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v78
                            + 11))(v78, a2);
      if (BeyondKeyValuePair) {
        google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>>::UseKeyAndValueFromEntry((uint64_t)&v74);
      }
      if ((*((uint64_t (**)(google::protobuf::Arena **))*v78 + 5))(v78))
      {
        int v78 = 0;
        if ((BeyondKeyValuePair & 1) == 0)
        {
          BOOL v52 = 0;
          int v27 = 6;
          goto LABEL_121;
        }
        goto LABEL_108;
      }
LABEL_107:
      if (!BeyondKeyValuePair) {
        goto LABEL_126;
      }
LABEL_108:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v43)) {
        goto LABEL_126;
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = (unsigned int *)&__p;
      }
      else {
        p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v69 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        int v69 = __p.__r_.__value_.__r.__words[1];
      }
      BOOL v34 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v69, 0, (uint64_t)"CoreML.Specification.MILSpec.Operation.InputsEntry.key");
LABEL_116:
      BOOL v52 = v34;
      if (v34) {
        int v27 = 0;
      }
      else {
        int v27 = 6;
      }
LABEL_119:
      if (v78) {
        (*((void (**)(google::protobuf::Arena **))*v78 + 1))(v78);
      }
LABEL_121:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (!v52) {
        goto LABEL_37;
      }
      goto LABEL_36;
    case 3u:
      if (v11 != 26) {
        goto LABEL_31;
      }
      uint64_t v17 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::NamedValueType>::TypeHandler>(v5);
      uint64_t v18 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
      {
        int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v19 < 0) {
          goto LABEL_130;
        }
      }
      else
      {
        int v19 = *v18;
        *(void *)a2 = v18 + 1;
      }
      int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
      int v37 = *((_DWORD *)a2 + 13);
      BOOL v30 = __OFSUB__(v37--, 1);
      *((_DWORD *)a2 + 13) = v37;
      if (v37 < 0 != v30) {
        goto LABEL_130;
      }
      int v38 = v35;
      if (!CoreML::Specification::MILSpec::NamedValueType::MergePartialFromCodedStream((CoreML::Specification::MILSpec::NamedValueType *)v17, a2, v36))goto LABEL_130; {
      int v39 = a2;
      }
      int v40 = v38;
      goto LABEL_99;
    case 4u:
      if (v11 != 34) {
        goto LABEL_31;
      }
      uint64_t v20 = (int *)*((void *)this + 11);
      if (!v20)
      {
        int v21 = *((_DWORD *)this + 20);
        int v22 = *((_DWORD *)this + 21);
LABEL_84:
        if (v21 <= v22)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v71, v22 - v21 + 1);
          uint64_t v20 = (int *)*((void *)this + 11);
        }
        int v22 = *v20;
        goto LABEL_87;
      }
      int v21 = *((_DWORD *)this + 20);
      int v22 = *v20;
      if (v21 < *v20)
      {
        *((_DWORD *)this + 2CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = v21 + 1;
        Aligned = *(google::protobuf::Arena ***)&v20[2 * v21 + 2];
        goto LABEL_92;
      }
      if (v22 == *((_DWORD *)this + 21)) {
        goto LABEL_84;
      }
LABEL_87:
      *uint64_t v20 = v22 + 1;
      int64_t v53 = *(google::protobuf::Arena **)v71;
      if (!*(void *)v71) {
        operator new();
      }
      CoreML::Specification::MILSpec::Block::Block((CoreML::Specification::MILSpec::Block *)Aligned);
      int64_t v54 = google::protobuf::Arena::AllocateAligned(v53, 0, 24);
      google::protobuf::internal::RepeatedPtrFieldBase *v54 = (google::protobuf::Arena *)Aligned;
      v54[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Block>;
      uint64_t v55 = (unint64_t *)((char *)v53 + 32);
      do
        unint64_t v56 = __ldxr(v55);
      while (__stxr((unint64_t)v54, v55));
      v54[2] = (google::protobuf::Arena *)v56;
      uint64_t v57 = *((void *)this + 11);
      uint64_t v58 = *((int *)this + 20);
      *((_DWORD *)this + 2CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = v58 + 1;
      *(void *)(v57 + 8 * v58 + 8) = Aligned;
LABEL_92:
      BOOL v59 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v59 < 0)
      {
        int v60 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v60 < 0) {
          goto LABEL_130;
        }
      }
      else
      {
        int v60 = *v59;
        *(void *)a2 = v59 + 1;
      }
      int v61 = google::protobuf::io::CodedInputStream::PushLimit(a2, v60);
      int v62 = *((_DWORD *)a2 + 13);
      BOOL v30 = __OFSUB__(v62--, 1);
      *((_DWORD *)a2 + 13) = v62;
      if (v62 < 0 == v30)
      {
        int v63 = v61;
        if (CoreML::Specification::MILSpec::Block::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Block *)Aligned, a2))
        {
          int v39 = a2;
          int v40 = v63;
LABEL_99:
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v39, v40)) {
            goto LABEL_36;
          }
        }
      }
LABEL_130:
      uint64_t result = 0;
      break;
    case 5u:
      if (v11 != 42) {
        goto LABEL_31;
      }
      uint64_t v74 = v73;
      uint64_t v75 = v72;
      memset(&__p, 0, sizeof(__p));
      int v78 = 0;
      uint64_t v15 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
      {
        int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v16 < 0) {
          goto LABEL_126;
        }
      }
      else
      {
        int v16 = *v15;
        *(void *)a2 = v15 + 1;
      }
      int v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
      int v29 = *((_DWORD *)a2 + 13);
      BOOL v30 = __OFSUB__(v29--, 1);
      *((_DWORD *)a2 + 13) = v29;
      if (v29 < 0 != v30
        || (int v31 = v28,
            !google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::MergePartialFromCodedStream((uint64_t)&v74, a2))|| !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v31))
      {
LABEL_126:
        BOOL v52 = 0;
        int v27 = 6;
        goto LABEL_119;
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        BOOL v32 = (unsigned int *)&__p;
      }
      else {
        BOOL v32 = (unsigned int *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v33 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        int v33 = __p.__r_.__value_.__r.__words[1];
      }
      BOOL v34 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(v32, v33, 0, (uint64_t)"CoreML.Specification.MILSpec.Operation.AttributesEntry.key");
      goto LABEL_116;
    default:
      goto LABEL_31;
  }
  return result;
}

void sub_1DC0A79C0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::NamedValueType>::TypeHandler>(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  int v2 = (int *)*((void *)this + 2);
  if (!v2)
  {
    int v3 = *((_DWORD *)this + 2);
    int v4 = *((_DWORD *)this + 3);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v4 - v3 + 1);
      int v2 = (int *)*((void *)this + 2);
    }
    int v4 = *v2;
    goto LABEL_9;
  }
  int v3 = *((_DWORD *)this + 2);
  int v4 = *v2;
  if (v3 < *v2)
  {
    *((_DWORD *)this + 2) = v3 + 1;
    return *(google::protobuf::Arena ***)&v2[2 * v3 + 2];
  }
  if (v4 == *((_DWORD *)this + 3)) {
    goto LABEL_6;
  }
LABEL_9:
  int *v2 = v4 + 1;
  uint64_t v6 = *(google::protobuf::Arena **)this;
  if (!*(void *)this) {
    operator new();
  }
  CoreML::Specification::MILSpec::NamedValueType::NamedValueType((CoreML::Specification::MILSpec::NamedValueType *)Aligned);
  uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
  void *v7 = (google::protobuf::Arena *)Aligned;
  v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::NamedValueType>;
  uint64_t v8 = (unint64_t *)((char *)v6 + 32);
  do
    unint64_t v9 = __ldxr(v8);
  while (__stxr((unint64_t)v7, v8));
  void v7[2] = (google::protobuf::Arena *)v9;
  uint64_t v10 = *((void *)this + 2);
  uint64_t v11 = *((int *)this + 2);
  *((_DWORD *)this + 2) = v11 + 1;
  *(void *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1DC0A7B44(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Block::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Block *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (char *)this + 88;
  uint64_t v6 = (char *)this + 96;
  uint64_t v7 = (CoreML::Specification::MILSpec::Block *)((char *)this + 64);
  uint64_t v8 = (CoreML::Specification::MILSpec::Block *)((char *)this + 40);
  unint64_t v9 = (CoreML::Specification::MILSpec::Block *)((char *)this + 16);
  while (1)
  {
    uint64_t v10 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1)) {
      break;
    }
    uint64_t v11 = *v10;
    if (*v10 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v10 + 1;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) == 0) {
      goto LABEL_25;
    }
LABEL_8:
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 10) {
          goto LABEL_25;
        }
        int v14 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::NamedValueType>::TypeHandler>(v9);
        uint64_t v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v15;
          *(void *)a2 = v15 + 1;
        }
        int v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v31 = *((_DWORD *)a2 + 13);
        BOOL v32 = __OFSUB__(v31--, 1);
        *((_DWORD *)a2 + 13) = v31;
        if (v31 < 0 != v32) {
          return 0;
        }
        int v33 = v29;
        if (!CoreML::Specification::MILSpec::NamedValueType::MergePartialFromCodedStream((CoreML::Specification::MILSpec::NamedValueType *)v14, a2, v30))return 0; {
        goto LABEL_79;
        }
      case 2u:
        if (v12 != 18) {
          goto LABEL_25;
        }
        uint64_t v23 = (int *)*((void *)this + 7);
        if (!v23)
        {
          int v24 = *((_DWORD *)this + 12);
          int v25 = *((_DWORD *)this + 13);
LABEL_65:
          if (v24 <= v25)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v8, v25 - v24 + 1);
            uint64_t v23 = (int *)*((void *)this + 7);
          }
          int v25 = *v23;
          goto LABEL_68;
        }
        int v24 = *((_DWORD *)this + 12);
        int v25 = *v23;
        if (v24 < *v23)
        {
          *((_DWORD *)this + 12) = v24 + 1;
          Aligned = *(std::string **)&v23[2 * v24 + 2];
          goto LABEL_82;
        }
        if (v25 == *((_DWORD *)this + 13)) {
          goto LABEL_65;
        }
LABEL_68:
        *uint64_t v23 = v25 + 1;
        int v42 = *(google::protobuf::Arena **)v8;
        if (!*(void *)v8) {
          operator new();
        }
        Aligned->__r_.__value_.__l.__size_ = 0;
        Aligned->__r_.__value_.__r.__words[2] = 0;
        Aligned->__r_.__value_.__r.__words[0] = 0;
        int v43 = google::protobuf::Arena::AllocateAligned(v42, 0, 24);
        char *v43 = (google::protobuf::Arena *)Aligned;
        v43[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
        int v44 = (unint64_t *)((char *)v42 + 32);
        do
          unint64_t v45 = __ldxr(v44);
        while (__stxr((unint64_t)v43, v44));
        v43[2] = (google::protobuf::Arena *)v45;
        uint64_t v51 = *((void *)this + 7);
        uint64_t v52 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v52 + 1;
        *(void *)(v51 + 8 * v52 + 8) = Aligned;
LABEL_82:
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, Aligned)) {
          return 0;
        }
        uint64_t v53 = *((void *)this + 7);
        int64_t v54 = *(unsigned int **)(v53 + 8 * *((int *)this + 12));
        if (*((char *)v54 + 23) < 0)
        {
          int64_t v54 = *(unsigned int **)v54;
          uint64_t v55 = *(void *)(*(void *)(v53 + 8 * *((int *)this + 12)) + 8);
        }
        else
        {
          LODWORD(v55) = *((unsigned __int8 *)v54 + 23);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v54, v55, 0, (uint64_t)"CoreML.Specification.MILSpec.Block.outputs"))return 0; {
        break;
        }
      case 3u:
        if (v12 != 26) {
          goto LABEL_25;
        }
        uint64_t v17 = (int *)*((void *)this + 10);
        if (!v17)
        {
          int v18 = *((_DWORD *)this + 18);
          int v19 = *((_DWORD *)this + 19);
          goto LABEL_59;
        }
        int v18 = *((_DWORD *)this + 18);
        int v19 = *v17;
        if (v18 >= *v17)
        {
          if (v19 == *((_DWORD *)this + 19))
          {
LABEL_59:
            if (v18 <= v19)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v7, v19 - v18 + 1);
              uint64_t v17 = (int *)*((void *)this + 10);
            }
            int v19 = *v17;
          }
          int *v17 = v19 + 1;
          if (*(void *)v7)
          {
            CoreML::Specification::MILSpec::Operation::Operation((CoreML::Specification::MILSpec::Operation *)v41);
          }
          operator new();
        }
        *((_DWORD *)this + 18) = v18 + 1;
        uint64_t v20 = *(CoreML::Specification::MILSpec::Operation **)&v17[2 * v18 + 2];
        uint64_t v46 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v46 < 0)
        {
          int v47 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v47 < 0) {
            return 0;
          }
        }
        else
        {
          int v47 = *v46;
          *(void *)a2 = v46 + 1;
        }
        int v48 = google::protobuf::io::CodedInputStream::PushLimit(a2, v47);
        int v50 = *((_DWORD *)a2 + 13);
        BOOL v32 = __OFSUB__(v50--, 1);
        *((_DWORD *)a2 + 13) = v50;
        if (v50 < 0 != v32) {
          return 0;
        }
        int v33 = v48;
        if (!CoreML::Specification::MILSpec::Operation::MergePartialFromCodedStream(v20, a2, v49)) {
          return 0;
        }
LABEL_79:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v33)) {
          return 0;
        }
        break;
      case 4u:
        if (v12 != 34) {
          goto LABEL_25;
        }
        v57[0] = v5;
        v57[1] = v6;
        uint64_t v59 = 0;
        uint64_t v60 = 0;
        std::string __p = 0;
        uint64_t v61 = 0;
        int v21 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
        {
          int v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v22 < 0) {
            goto LABEL_88;
          }
        }
        else
        {
          int v22 = *v21;
          *(void *)a2 = v21 + 1;
        }
        int v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
        int v35 = *((_DWORD *)a2 + 13);
        BOOL v32 = __OFSUB__(v35--, 1);
        *((_DWORD *)a2 + 13) = v35;
        if (v35 < 0 != v32
          || (int v36 = v34,
              !google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::MergePartialFromCodedStream((uint64_t)v57, a2))|| !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v36))
        {
LABEL_88:
          BOOL v40 = 0;
          int v28 = 6;
          goto LABEL_50;
        }
        if (v60 >= 0) {
          p_p = (unsigned int *)&__p;
        }
        else {
          p_p = (unsigned int *)__p;
        }
        if (v60 >= 0) {
          int v38 = HIBYTE(v60);
        }
        else {
          int v38 = v59;
        }
        BOOL v39 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v38, 0, (uint64_t)"CoreML.Specification.MILSpec.Block.AttributesEntry.key");
        BOOL v40 = v39;
        if (v39) {
          int v28 = 0;
        }
        else {
          int v28 = 6;
        }
LABEL_50:
        if (v61) {
          (*(void (**)(uint64_t))(*(void *)v61 + 8))(v61);
        }
        if (SHIBYTE(v60) < 0) {
          operator delete(__p);
        }
        if (!v40) {
          goto LABEL_31;
        }
        break;
      default:
        goto LABEL_25;
    }
LABEL_30:
    int v28 = 0;
LABEL_31:
    if (v28) {
      return 0;
    }
  }
  LODWORD(v11) = 0;
LABEL_7:
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
  unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v12 & 0x100000000) != 0) {
    goto LABEL_8;
  }
LABEL_25:
  if (v12) {
    BOOL v27 = (v12 & 7) == 4;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27)
  {
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
    goto LABEL_30;
    }
  }
  return 1;
}

void sub_1DC0A8100(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40B3FB24A3);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Operation>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Block>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::NamedValueType>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::operator[](uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v24 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v26[0];
  if (v26[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v20 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v20, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v25[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v21 = 0;
    unint64_t v22 = ((5 * v8) >> 2) + 1;
    do
      ++v21;
    while (v22 << v21 < v9);
    uint64_t v20 = v7 >> v21 <= 8 ? 8 : v7 >> v21;
    if (v20 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v26[3];
LABEL_11:
  unint64_t v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  int v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v24;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v25, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v25[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    int v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 72);
    uint64_t v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    _OWORD v16[2] = 0;
    void *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    int v18 = *(google::protobuf::Arena **)a1;
    CoreML::Specification::MILSpec::Argument::Argument((CoreML::Specification::MILSpec::Argument *)(v16 + 3));
    google::protobuf::Arena::OwnDestructor<CoreML::Specification::MILSpec::Argument>((google::protobuf::Arena **)v18, (google::protobuf::Arena *)(v16 + 3));
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1DC0A841C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1E0198C00](v14, 0x10B2C40C743746ALL);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
  uint64_t v5 = *(google::protobuf::Arena ***)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*((void (**)(google::protobuf::Arena **))*v5 + 1))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  long long v6 = *(CoreML::Specification::MILSpec::Argument **)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (google::protobuf::Arena **)v4[3];
  if (!Aligned)
  {
    unint64_t v8 = v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::MILSpec::Argument::Argument((CoreML::Specification::MILSpec::Argument *)Aligned);
    unint64_t v9 = google::protobuf::Arena::AllocateAligned(v8, 0, 24);
    *unint64_t v9 = (google::protobuf::Arena *)Aligned;
    v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument>;
    uint64_t v10 = (unint64_t *)((char *)v8 + 32);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr((unint64_t)v9, v10));
    std::string v9[2] = (google::protobuf::Arena *)v11;
    v4[3] = (google::protobuf::Arena *)Aligned;
  }
  CoreML::Specification::MILSpec::Argument::Swap((uint64_t)Aligned, v6);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::erase(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v12 = *(void *)(a1 + 48);
  *(_DWORD *)(v12 + 40) |= 1u;
  uint64_t v13 = *(void *)(v12 + 16);
  if ((uint64_t *)v13 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v13 + 23) < 0) {
    operator delete(*(void **)v13);
  }
  long long v14 = *(_OWORD *)(a1 + 16);
  *(void *)(v13 + 16) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v13 = v14;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v15 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v15) {
    google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
    *(void *)(a1 + 48) = 0;
  }
  return v15;
}

void sub_1DC0A86D8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627C28;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  int v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  int v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(google::protobuf::Arena ***)(v4 + 24);
  if (!Aligned)
  {
    long long v6 = *(google::protobuf::Arena **)(v4 + 32);
    if (!v6) {
      operator new();
    }
    CoreML::Specification::MILSpec::Argument::Argument((CoreML::Specification::MILSpec::Argument *)Aligned);
    uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
    google::protobuf::internal::RepeatedPtrFieldBase *v7 = (google::protobuf::Arena *)Aligned;
    v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument>;
    unint64_t v8 = (unint64_t *)((char *)v6 + 32);
    do
      unint64_t v9 = __ldxr(v8);
    while (__stxr((unint64_t)v7, v8));
    void v7[2] = (google::protobuf::Arena *)v9;
    *(void *)(v4 + 24) = Aligned;
    int v3 = *(google::protobuf::Arena ***)(a1 + 40);
  }
  return CoreML::Specification::MILSpec::Argument::Swap((uint64_t)v3, (CoreML::Specification::MILSpec::Argument *)Aligned);
}

void sub_1DC0A88A0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Argument::Swap(uint64_t this, CoreML::Specification::MILSpec::Argument *a2)
{
  if (a2 != (CoreML::Specification::MILSpec::Argument *)this)
  {
    uint64_t v2 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 4CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 1CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = v2;
  }
  return this;
}

google::protobuf::Arena **google::protobuf::Arena::OwnDestructor<CoreML::Specification::MILSpec::Argument>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Argument>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

std::string *CoreML::Specification::MILSpec::Operation::MergeFrom(std::string *this, const CoreML::Specification::MILSpec::Operation *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::Map<std::string,std::string>::begin(v46, *((void **)a2 + 5));
  for (int i = v46[0]; v46[0]; int i = v46[0])
  {
    uint64_t v6 = *((void *)i + 3);
    uint64_t v7 = (const CoreML::Specification::MILSpec::Argument *)(v6 + 24);
    unint64_t v8 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::operator[]((uint64_t)&this[1], v6);
    if (v7 != (const CoreML::Specification::MILSpec::Argument *)v8)
    {
      unint64_t v9 = v8;
      uint64_t v10 = *((unsigned int *)v8 + 6);
      if ((int)v10 >= 1)
      {
        unint64_t v11 = (uint64_t *)((char *)v8[4] + 8);
        do
        {
          uint64_t v12 = *v11++;
          CoreML::Specification::MILSpec::Argument_Binding::clear_binding(v12);
          --v10;
        }
        while (v10);
        *((_DWORD *)v9 + 6) = 0;
      }
      CoreML::Specification::MILSpec::Argument::MergeFrom((unint64_t *)v9, v7);
    }
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v46);
  }
  unsigned int v13 = *((_DWORD *)a2 + 14);
  if (v13)
  {
    long long v14 = (CoreML::Specification::MILSpec::NamedValueType **)(*((void *)a2 + 8) + 8);
    uint64_t v15 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&this[2], *((_DWORD *)a2 + 14));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::NamedValueType>::TypeHandler>(this + 2, (std::string **)v15, v14, v13, *(_DWORD *)this[2].__r_.__value_.__r.__words[2] - LODWORD(this[2].__r_.__value_.__r.__words[1]));
    signed int v16 = LODWORD(this[2].__r_.__value_.__r.__words[1]) + v13;
    LODWORD(this[2].__r_.__value_.__r.__words[1]) = v16;
    uint64_t v17 = (signed int *)this[2].__r_.__value_.__r.__words[2];
    if (*v17 < v16) {
      signed int *v17 = v16;
    }
  }
  int v18 = *((_DWORD *)a2 + 20);
  if (v18)
  {
    uint64_t v45 = *((void *)a2 + 11);
    int v44 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&this[3], v18);
    uint64_t v19 = *(int *)this[3].__r_.__value_.__r.__words[2];
    uint64_t v20 = SLODWORD(this[3].__r_.__value_.__r.__words[1]);
    int v21 = v19 - v20;
    if ((int)v19 - (int)v20 >= v18) {
      uint64_t v22 = v18;
    }
    else {
      uint64_t v22 = v21;
    }
    if ((int)v22 >= 1)
    {
      uint64_t v23 = (CoreML::Specification::MILSpec::Block **)v44;
      std::string::size_type v24 = (const CoreML::Specification::MILSpec::Block **)(v45 + 8);
      do
      {
        BOOL v26 = *v24++;
        int v25 = v26;
        BOOL v27 = *v23++;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Block>::Merge(v25, v27);
        --v22;
      }
      while (v22);
    }
    if (v21 < v18)
    {
      data = (google::protobuf::Arena *)this[3].__r_.__value_.__l.__data_;
      int v29 = v20 + v18 - v19;
      uint64_t v30 = 8 * v19 - 8 * v20;
      int v31 = (google::protobuf::Arena ***)((char *)v44 + v30);
      BOOL v32 = (const CoreML::Specification::MILSpec::Block **)(v30 + v45 + 8);
      do
      {
        int v33 = *v32;
        if (!data) {
          operator new();
        }
        CoreML::Specification::MILSpec::Block::Block((CoreML::Specification::MILSpec::Block *)Aligned);
        int v35 = google::protobuf::Arena::AllocateAligned(data, 0, 24);
        *int v35 = (google::protobuf::Arena *)Aligned;
        v35[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Block>;
        int v36 = (unint64_t *)((char *)data + 32);
        do
          unint64_t v37 = __ldxr(v36);
        while (__stxr((unint64_t)v35, v36));
        v35[2] = (google::protobuf::Arena *)v37;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Block>::Merge(v33, (CoreML::Specification::MILSpec::Block *)Aligned);
        *v31++ = Aligned;
        ++v32;
        --v29;
      }
      while (v29);
    }
    int v38 = LODWORD(this[3].__r_.__value_.__r.__words[1]) + v18;
    LODWORD(this[3].__r_.__value_.__r.__words[1]) = v38;
    BOOL v39 = (int *)this[3].__r_.__value_.__r.__words[2];
    if (*v39 < v38) {
      int *v39 = v38;
    }
  }
  double result = (std::string *)google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)&this[4], (uint64_t)a2 + 96);
  uint64_t v41 = *((void *)a2 + 16);
  if (*(char *)(v41 + 23) < 0)
  {
    if (!*(void *)(v41 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v41 + 23))
  {
    return result;
  }
  std::string::size_type size = (std::string *)this[5].__r_.__value_.__l.__size_;
  int v42 = &this[5].__r_.__value_.__s.__data_[8];
  double result = size;
  if (size != (std::string *)v41)
  {
    if (result == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v42, v41);
    }
    return std::string::operator=(result, (const std::string *)v41);
  }
  return result;
}

void sub_1DC0A8CA4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::NamedValueType>::TypeHandler>(std::string *result, std::string **a2, CoreML::Specification::MILSpec::NamedValueType **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      long long v14 = *v11++;
      unsigned int v13 = v14;
      uint64_t v15 = *v12++;
      double result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::NamedValueType>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    int v18 = *v9;
    uint64_t v19 = (google::protobuf::Arena ***)&a2[a5];
    uint64_t v20 = &a3[a5];
    do
    {
      int v21 = *v20;
      if (!v18) {
        operator new();
      }
      CoreML::Specification::MILSpec::NamedValueType::NamedValueType((CoreML::Specification::MILSpec::NamedValueType *)Aligned);
      uint64_t v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
      *uint64_t v23 = (google::protobuf::Arena *)Aligned;
      v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::NamedValueType>;
      std::string::size_type v24 = (unint64_t *)((char *)v18 + 32);
      do
        unint64_t v25 = __ldxr(v24);
      while (__stxr((unint64_t)v23, v24));
      v23[2] = (google::protobuf::Arena *)v25;
      double result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::NamedValueType>::Merge(v21, (std::string *)Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1DC0A8DEC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Block>::Merge(const CoreML::Specification::MILSpec::Block *a1, CoreML::Specification::MILSpec::Block *a2)
{
  return CoreML::Specification::MILSpec::Block::MergeFrom(a2, a1);
}

void *CoreML::Specification::MILSpec::Block::MergeFrom(CoreML::Specification::MILSpec::Block *this, const CoreML::Specification::MILSpec::Block *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::MILSpec::NamedValueType **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::MILSpec::Block *)((char *)this + 16), *((_DWORD *)a2 + 6));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::NamedValueType>::TypeHandler>((std::string *)((char *)this + 16), (std::string **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    unint64_t v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *unint64_t v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    unint64_t v11 = (const std::string **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::MILSpec::Block *)((char *)this + 40), *((_DWORD *)a2 + 12));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)((char *)this + 40), (std::string **)v12, v11, v10, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v13 = *((_DWORD *)this + 12) + v10;
    *((_DWORD *)this + 12) = v13;
    long long v14 = (signed int *)*((void *)this + 7);
    if (*v14 < v13) {
      *long long v14 = v13;
    }
  }
  int v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    uint64_t v29 = *((void *)a2 + 10);
    int v28 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::MILSpec::Block *)((char *)this + 64), v15);
    int v16 = **((_DWORD **)this + 10) - *((_DWORD *)this + 18);
    if (v16 >= v15) {
      uint64_t v17 = v15;
    }
    else {
      uint64_t v17 = v16;
    }
    if ((int)v17 >= 1)
    {
      int v18 = (std::string **)v28;
      uint64_t v19 = (CoreML::Specification::MILSpec::Operation **)(v29 + 8);
      do
      {
        int v21 = *v19++;
        uint64_t v20 = v21;
        uint64_t v22 = *v18++;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Operation>::Merge(v20, v22);
        --v17;
      }
      while (v17);
    }
    if (v16 < v15)
    {
      uint64_t v23 = (google::protobuf::Arena *)*((void *)this + 8);
      if (v23)
      {
        CoreML::Specification::MILSpec::Operation::Operation((CoreML::Specification::MILSpec::Operation *)Aligned);
      }
      operator new();
    }
    int v25 = *((_DWORD *)this + 18) + v15;
    *((_DWORD *)this + 18) = v25;
    BOOL v26 = (int *)*((void *)this + 10);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  return google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 88, (uint64_t)a2 + 88);
}

void sub_1DC0A90AC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40B3FB24A3);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::Operation>::Merge(CoreML::Specification::MILSpec::Operation *a1, std::string *this)
{
  return CoreML::Specification::MILSpec::Operation::MergeFrom(this, a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::MILSpec::NamedValueType>::Merge(CoreML::Specification::MILSpec::NamedValueType *a1, std::string *this)
{
  return CoreML::Specification::MILSpec::NamedValueType::MergeFrom(this, a1);
}

uint64_t CoreML::Specification::MILSpec::Operation::IsInitialized(CoreML::Specification::MILSpec::Operation *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::Operation::Clear(CoreML::Specification::MILSpec::Operation *this)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::clear((void *)this + 3);
  uint64_t v2 = *((unsigned int *)this + 14);
  if ((int)v2 >= 1)
  {
    int v3 = (CoreML::Specification::MILSpec::NamedValueType **)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::MILSpec::NamedValueType::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 20);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (CoreML::Specification::MILSpec::Block **)(*((void *)this + 11) + 8);
    do
    {
      uint64_t v7 = *v6++;
      CoreML::Specification::MILSpec::Block::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 2CoreML::Specification::MILSpec::NamedValueType::New(this, 0) = 0;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::clear((void *)this + 13);
  uint64_t v8 = *((void *)this + 16);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)uint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
}

void CoreML::Specification::MILSpec::Block::Clear(CoreML::Specification::MILSpec::Block *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (CoreML::Specification::MILSpec::NamedValueType **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::MILSpec::NamedValueType::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 40);
  uint64_t v5 = *((unsigned int *)this + 18);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (CoreML::Specification::MILSpec::Operation **)(*((void *)this + 10) + 8);
    do
    {
      uint64_t v7 = *v6++;
      CoreML::Specification::MILSpec::Operation::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 18) = 0;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::clear((void *)this + 12);
}

void CoreML::Specification::MILSpec::Operation::New(CoreML::Specification::MILSpec::Operation *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A929C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40B3FB24A3);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Operation>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Operation>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Operation>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Operation::New(CoreML::Specification::MILSpec::Operation *this)
{
}

void *CoreML::Specification::MILSpec::Operation::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Operation");
}

void CoreML::Specification::MILSpec::Operation::~Operation(CoreML::Specification::MILSpec::Operation *this)
{
  CoreML::Specification::MILSpec::Operation::~Operation(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F36262C8;
  uint64_t v2 = *((void *)this + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map((void *)this + 13);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 9);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 6);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Argument>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Argument,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t CoreML::Specification::MILSpec::Argument::GetCachedSize(CoreML::Specification::MILSpec::Argument *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::MILSpec::Argument::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  int v2 = *(_DWORD *)(this + 24);
  if (v2)
  {
    uint64_t v4 = this;
    for (int i = 0; i != v2; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v4 + 32) + 8 * i + 8), a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::Argument::IsInitialized(CoreML::Specification::MILSpec::Argument *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::Argument::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = this;
    int v3 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = CoreML::Specification::MILSpec::Argument_Binding::clear_binding(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 24) = 0;
  }
  return this;
}

void CoreML::Specification::MILSpec::Argument::New(CoreML::Specification::MILSpec::Argument *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A959C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Argument>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    int v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Argument>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Argument>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Argument::New(CoreML::Specification::MILSpec::Argument *this)
{
}

void *CoreML::Specification::MILSpec::Argument::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Argument");
}

uint64_t CoreML::Specification::MILSpec::Argument_Binding::GetCachedSize(CoreML::Specification::MILSpec::Argument_Binding *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::MILSpec::Argument_Binding::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4 == 1)
  {
    unint64_t v5 = *(unsigned int **)(this + 16);
    if (*((char *)v5 + 23) < 0)
    {
      unint64_t v5 = *(unsigned int **)v5;
      uint64_t v6 = *(void *)(*(void *)(v3 + 16) + 8);
    }
    else
    {
      LODWORD(v6) = *((unsigned __int8 *)v5 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v5, v6, 1, (uint64_t)"CoreML.Specification.MILSpec.Argument.Binding.name");
    if (*(_DWORD *)(v3 + 28) == 1) {
      uint64_t v7 = *(uint64_t **)(v3 + 16);
    }
    else {
      uint64_t v7 = &google::protobuf::internal::fixed_address_empty_string;
    }
    this = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, (uint64_t)v7, a2);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if (v4 == 2)
  {
    uint64_t v8 = *(void *)(v3 + 16);
    return google::protobuf::internal::WireFormatLite::WriteMessage(2, v8, a2);
  }
  return this;
}

uint64_t CoreML::Specification::MILSpec::Argument_Binding::IsInitialized(CoreML::Specification::MILSpec::Argument_Binding *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::Argument_Binding::New(CoreML::Specification::MILSpec::Argument_Binding *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A97BC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Argument_Binding>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Argument_Binding>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Argument_Binding>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Argument_Binding::New(CoreML::Specification::MILSpec::Argument_Binding *this)
{
}

void *CoreML::Specification::MILSpec::Argument_Binding::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Argument.Binding");
}

void CoreML::Specification::MILSpec::Argument_Binding::~Argument_Binding(CoreML::Specification::MILSpec::Argument_Binding *this)
{
  CoreML::Specification::MILSpec::Argument_Binding::~Argument_Binding(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3625650;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::MILSpec::Argument_Binding::clear_binding((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::MILSpec::Block::GetCachedSize(CoreML::Specification::MILSpec::Block *this)
{
  return *((unsigned int *)this + 30);
}

uint64_t CoreML::Specification::MILSpec::Block::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    for (int i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v3 + 32) + 8 * i + 8), a2);
  }
  uint64_t v6 = *(unsigned int *)(v3 + 48);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = -v6;
    uint64_t v8 = 1;
    do
    {
      unint64_t v9 = *(unsigned int **)(*(void *)(v3 + 56) + 8 * v8);
      if (*((char *)v9 + 23) < 0)
      {
        unint64_t v9 = *(unsigned int **)v9;
        uint64_t v10 = *(void *)(*(void *)(*(void *)(v3 + 56) + 8 * v8) + 8);
      }
      else
      {
        LODWORD(v1CoreML::Specification::MILSpec::Argument_Binding::New(this, 0) = *((unsigned __int8 *)v9 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.MILSpec.Block.outputs");
      this = google::protobuf::internal::WireFormatLite::WriteString(2u, *(void *)(*(void *)(v3 + 56) + 8 * v8++), a2);
    }
    while (v7 + v8 != 1);
  }
  int v11 = *(_DWORD *)(v3 + 72);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(3, *(void *)(*(void *)(v3 + 80) + 8 * j + 8), a2);
  }
  signed int v13 = *(unint64_t **)(v3 + 112);
  unint64_t v14 = *v13;
  if (*v13)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v14 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_36;
      }
    }
    else if (v14 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_36:
      operator new[]();
    }
    this = (uint64_t)google::protobuf::Map<std::string,std::string>::begin(v21, v13);
    uint64_t v16 = 0;
    while (v21[0])
    {
      uint64_t v17 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v21[0] + 3), (google::protobuf::Arena *)(*((void *)v21[0] + 3) + 24), *(google::protobuf::Arena **)(v3 + 88));
      if ((google::protobuf::Arena **)v16 != v17)
      {
        if (v16) {
          (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
        }
        uint64_t v16 = (uint64_t)v17;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(4, v16, a2);
      int v18 = (unsigned int *)*((void *)v21[0] + 3);
      if (*((char *)v18 + 23) < 0)
      {
        int v18 = *(unsigned int **)v18;
        uint64_t v19 = *(void *)(*((void *)v21[0] + 3) + 8);
      }
      else
      {
        LODWORD(v19) = *((unsigned __int8 *)v18 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v18, v19, 1, (uint64_t)"CoreML.Specification.MILSpec.Block.AttributesEntry.key");
      this = (uint64_t)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v21);
    }
    if (v16) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
  }
  return this;
}

void sub_1DC0A9CA8(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MILSpec::Block::IsInitialized(CoreML::Specification::MILSpec::Block *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::Block::New(CoreML::Specification::MILSpec::Block *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0A9D8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Block>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Block>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Block>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Block::New(CoreML::Specification::MILSpec::Block *this)
{
}

void *CoreML::Specification::MILSpec::Block::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Block");
}

void CoreML::Specification::MILSpec::Block::~Block(CoreML::Specification::MILSpec::Block *this)
{
  CoreML::Specification::MILSpec::Block::~Block(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3625E08;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map((void *)this + 12);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((void *)this + 5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::Init(uint64_t a1)
{
  uint64_t v2 = *(google::protobuf::Arena **)a1;
  if (!*(void *)a1) {
    operator new();
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::InnerMap::InnerMap(Aligned, v2);
  double result = google::protobuf::Arena::AllocateAligned(v2, 0, 24);
  *double result = (google::protobuf::Arena *)Aligned;
  result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::InnerMap>;
  unint64_t v5 = (unint64_t *)((char *)v2 + 32);
  do
    unint64_t v6 = __ldxr(v5);
  while (__stxr((unint64_t)result, v5));
  result[2] = (google::protobuf::Arena *)v6;
  *(void *)(a1 + 16) = Aligned;
  return result;
}

void sub_1DC0A9FA8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10E0C40D5F42F35);
  _Unwind_Resume(a1);
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::~Map(void *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        void v7[2] = v2;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

__n128 google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      CoreML::Specification::MILSpec::Block::~Block((CoreML::Specification::MILSpec::Block *)(v7 + 24));
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x1E0198C00](v7, 0x10B2C4008C62E43);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 32);
  if (v8) {
    goto LABEL_7;
  }
  uint64_t v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    signed int v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        unint64_t v14 = v13;
        signed int v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        unint64_t v14 = *(void **)(v12 + 16);
        BOOL v15 = *v14 == v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    uint64_t v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  uint64_t v16 = (void *)a2[2];
  uint64_t v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  uint64_t v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  uint64_t v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (void *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        void v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  int v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  unint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)unint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0AA3A8(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0AA364);
}

uint64_t CoreML::Specification::MILSpec::Function::GetCachedSize(CoreML::Specification::MILSpec::Function *this)
{
  return *((unsigned int *)this + 28);
}

uint64_t CoreML::Specification::MILSpec::Function::SerializeWithCachedSizes(CoreML::Specification::MILSpec::Function *this, google::protobuf::io::CodedOutputStream *a2)
{
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    for (int i = 0; i != v4; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*((void *)this + 4) + 8 * i + 8), a2);
  }
  uint64_t result = *((void *)this + 13);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      goto LABEL_10;
    }
    uint64_t result = *(void *)result;
    goto LABEL_9;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_9:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.MILSpec.Function.opset");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, *((void *)this + 13), a2);
  }
LABEL_10:
  size_t v8 = (unint64_t *)*((void *)this + 8);
  unint64_t v9 = *v8;
  if (*v8)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v9 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_33;
      }
    }
    else if (v9 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_33:
      operator new[]();
    }
    uint64_t result = (uint64_t)google::protobuf::Map<std::string,std::string>::begin(v24, v8);
    uint64_t v11 = 0;
    while (v24[0])
    {
      uint64_t v12 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v24[0] + 3), (google::protobuf::Arena *)(*((void *)v24[0] + 3) + 24), *((google::protobuf::Arena **)this + 5));
      if ((google::protobuf::Arena **)v11 != v12)
      {
        if (v11) {
          (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
        }
        uint64_t v11 = (uint64_t)v12;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(3, v11, a2);
      std::random_device v13 = (unsigned int *)*((void *)v24[0] + 3);
      if (*((char *)v13 + 23) < 0)
      {
        std::random_device v13 = *(unsigned int **)v13;
        uint64_t v14 = *(void *)(*((void *)v24[0] + 3) + 8);
      }
      else
      {
        LODWORD(v14) = *((unsigned __int8 *)v13 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, v14, 1, (uint64_t)"CoreML.Specification.MILSpec.Function.BlockSpecializationsEntry.key");
      uint64_t result = (uint64_t)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v24);
    }
    if (v11) {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  uint64_t v16 = (unint64_t *)*((void *)this + 12);
  unint64_t v17 = *v16;
  if (*v16)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v17 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_57;
      }
    }
    else if (v17 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_57:
      operator new[]();
    }
    uint64_t result = (uint64_t)google::protobuf::Map<std::string,std::string>::begin(v24, v16);
    uint64_t v19 = 0;
    while (v24[0])
    {
      uint64_t v20 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v24[0] + 3), (google::protobuf::Arena *)(*((void *)v24[0] + 3) + 24), *((google::protobuf::Arena **)this + 9));
      if ((google::protobuf::Arena **)v19 != v20)
      {
        if (v19) {
          (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
        }
        uint64_t v19 = (uint64_t)v20;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(4, v19, a2);
      uint64_t v21 = (unsigned int *)*((void *)v24[0] + 3);
      if (*((char *)v21 + 23) < 0)
      {
        uint64_t v21 = *(unsigned int **)v21;
        uint64_t v22 = *(void *)(*((void *)v24[0] + 3) + 8);
      }
      else
      {
        LODWORD(v22) = *((unsigned __int8 *)v21 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v21, v22, 1, (uint64_t)"CoreML.Specification.MILSpec.Function.AttributesEntry.key");
      uint64_t result = (uint64_t)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v24);
    }
    if (v19) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
  }
  return result;
}

void sub_1DC0AA98C(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  size_t v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    int v91 = a2 - 24;
    int v92 = a2 - 16;
    unint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                uint64_t v41 = *(void **)v95;
                int v42 = *(void **)v9;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)unint64_t v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            int v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                int v47 = v9;
                do
                {
                  unsigned int v49 = *(void **)v47;
                  int v48 = (void *)*((void *)v47 + 1);
                  int v47 = v43;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      unsigned int v49 = *(void **)&v9[v50 - 8];
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        uint64_t v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    uint64_t v51 = v9;
LABEL_80:
                    *(void *)uint64_t v51 = v48;
                  }
                  int v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                int v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                if (result)
                {
                  int v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                int v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              long long v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  unint64_t v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    uint64_t v58 = *(void **)v56;
                    uint64_t v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      uint64_t v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void **)v56;
                  }
                  uint64_t v61 = &v98[8 * v54];
                  int v62 = *(void **)v61;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      int v63 = v56;
                      *(void *)uint64_t v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      unint64_t v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        uint64_t v60 = *(void **)v56;
                        int v66 = (void *)*((void *)v56 + 1);
                        if (std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v66))
                        {
                          uint64_t v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        uint64_t v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, v62);
                      uint64_t v61 = v63;
                    }
                    while (!result);
                    *(void *)int v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              int v68 = v98;
              do
              {
                int v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                int v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    int v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    int v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v73, v77);
                    if (result) {
                      int v78 = v77;
                    }
                    else {
                      int v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)int v68 = v78;
                  int v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    uint64_t v81 = &v98[8 * v80];
                    int v82 = *(void **)v81;
                    uint64_t v83 = *(void **)v73;
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        int v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        uint64_t v81 = &v98[8 * v80];
                        int v82 = *(void **)v81;
                        uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)int v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                int v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          uint64_t v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            BOOL v15 = *(void **)v9;
            *(void *)unint64_t v9 = *(void *)v14;
            *(void *)uint64_t v14 = v15;
          }
          --a3;
          uint64_t v16 = *(void **)v9;
          unint64_t v17 = v9;
          if (a4) {
            break;
          }
          unint64_t v17 = v9;
          if (std::less<std::string>::operator()[abi:ne180100](*((void **)v9 - 1), *(void **)v9)) {
            break;
          }
          uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v95);
          if (result)
          {
            do
            {
              int v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            BOOL v32 = v9 + 8;
            do
            {
              unint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v9);
            }
            while (!result);
          }
          int v33 = a2;
          if (v9 < a2)
          {
            int v33 = a2;
            do
            {
              int v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v34);
            }
            while ((result & 1) != 0);
          }
          int v35 = a2;
          if (v9 < v33)
          {
            int v36 = *(void **)v9;
            unint64_t v37 = *(void **)v33;
            do
            {
              *(void *)unint64_t v9 = v37;
              *(void *)int v33 = v36;
              do
              {
                int v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                int v36 = v38;
              }
              while (!std::less<std::string>::operator()[abi:ne180100](v16, v38));
              do
              {
                BOOL v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                unint64_t v37 = v39;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          BOOL v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)BOOL v40 = v16;
        }
        do
        {
          unint64_t v18 = v17;
          uint64_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          uint64_t v19 = v20;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v20, v16));
        uint64_t v97 = a3;
        uint64_t v21 = a2;
        if (v18 == (char *)v10)
        {
          uint64_t v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            uint64_t v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v23, v16));
        }
        else
        {
          do
          {
            uint64_t v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v22, v16));
        }
        size_t v8 = (char *)v10;
        std::string::size_type v24 = a2;
        if (v17 < v21)
        {
          unint64_t v25 = *(void **)v21;
          uint64_t v26 = v17;
          __n128 v27 = v21;
          do
          {
            *(void *)uint64_t v26 = v25;
            *(void *)__n128 v27 = v19;
            do
            {
              unint64_t v18 = v26;
              unint64_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              uint64_t v19 = v28;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v28, v16));
            do
            {
              uint64_t v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              unint64_t v25 = v29;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)size_t v8 = *(void *)v18;
        }
        *(void *)unint64_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        unint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const**>((void **)v8, (void **)v18);
      unint64_t v9 = v18 + 8;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3626DB8;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::Block::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  unsigned int v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  uint64_t v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  char *v7 = 18;
  unint64_t v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *unint64_t v9 = v11;
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 120) + ((9 * (__clz(*(_DWORD *)(v4 + 120) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::MILSpec::Block *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::MILSpec::Block::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::MILSpec::Block::New(this, 0) = v9;
        unsigned int v10 = *(char **)this;
        if (*(void *)this < *((void *)this + 1) && *v10 == 18)
        {
          *(void *)this = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::MILSpec::Block::New(this, 0) = v9 | 2;
      Aligned = *(google::protobuf::Arena ***)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::MILSpec::Block::Block((CoreML::Specification::MILSpec::Block *)Aligned);
        unint64_t v13 = google::protobuf::Arena::AllocateAligned(v12, 0, 24);
        *unint64_t v13 = (google::protobuf::Arena *)Aligned;
        v13[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Block>;
        uint64_t v14 = (unint64_t *)((char *)v12 + 32);
        do
          unint64_t v15 = __ldxr(v14);
        while (__stxr((unint64_t)v13, v14));
        void v13[2] = (google::protobuf::Arena *)v15;
        *(void *)(a1 + 24) = Aligned;
      }
      uint64_t v16 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1) || *v16 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v16;
        *(void *)this = v16 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
      int v20 = *((_DWORD *)this + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)this + 13) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      uint64_t result = CoreML::Specification::MILSpec::Block::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Block *)Aligned, this, v19);
      if (!result) {
        return result;
      }
      uint64_t result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v22);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_1DC0AB880(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::CheckTypeAndMergeFrom(char *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      uint64_t v5 = (std::string **)(result + 16);
      if (*((uint64_t **)result + 2) == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = (char *)std::string::operator=(*v5, v6);
      *((_DWORD *)v4 + 10) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!*((void *)v4 + 3))
      {
        uint64_t v7 = (google::protobuf::Arena *)*((void *)v4 + 4);
        if (!v7) {
          operator new();
        }
        CoreML::Specification::MILSpec::Block::Block((CoreML::Specification::MILSpec::Block *)Aligned);
        int v9 = google::protobuf::Arena::AllocateAligned(v7, 0, 24);
        *int v9 = (google::protobuf::Arena *)Aligned;
        v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Block>;
        unsigned int v10 = (unint64_t *)((char *)v7 + 32);
        do
          unint64_t v11 = __ldxr(v10);
        while (__stxr((unint64_t)v9, v10));
        std::string v9[2] = (google::protobuf::Arena *)v11;
        *((void *)v4 + 3) = Aligned;
      }
      unsigned int v12 = (const CoreML::Specification::MILSpec::Block *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      uint64_t result = (char *)CoreML::Specification::MILSpec::Block::MergeFrom(*((CoreML::Specification::MILSpec::Block **)v4 + 3), v12);
      *((_DWORD *)v4 + 10) |= 2u;
    }
  }
  return result;
}

void sub_1DC0ABA34(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::IsInitialized()
{
  return 1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *(CoreML::Specification::MILSpec::Block **)(a1 + 24);
  if (v3) {
    CoreML::Specification::MILSpec::Block::Clear(v3);
  }
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::Block::New(this, 0) = 0;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3627AD8;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3626E60;
  if ((void *)a1[1] != a1 && !a1[4])
  {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::value(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    int v5 = 3;
    uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v7 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(void *)(v2 + 24);
  if (*(void *)(a1 + 24)) {
    return *(void *)(a1 + 24);
  }
  else {
    return v3;
  }
}

void sub_1DC0ABD30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Block> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      int v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      int v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      int v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    unsigned int v12 = *v9;
    unint64_t v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        unint64_t v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          unint64_t v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      unint64_t v17 = a1;
LABEL_12:
      void *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    int v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::MILSpec::Function::ByteSizeLong(CoreML::Specification::MILSpec::Function *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::MILSpec::NamedValueType::ByteSizeLong(*(CoreML::Specification::MILSpec::NamedValueType **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v6 = (void *)*((void *)this + 8);
  uint64_t v7 = *(unsigned int *)v6;
  google::protobuf::Map<std::string,std::string>::begin(v22, v6);
  int v8 = 0;
  uint64_t v9 = v7 + v4;
  while (v22[0])
  {
    int v10 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v22[0] + 3), (google::protobuf::Arena *)(*((void *)v22[0] + 3) + 24), *((google::protobuf::Arena **)this + 5));
    if (v8 != v10)
    {
      if (v8) {
        (*((void (**)(google::protobuf::Arena **))*v8 + 1))(v8);
      }
      int v8 = v10;
    }
    uint64_t v11 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v8);
    v9 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v22);
  }
  if (v8) {
    (*((void (**)(google::protobuf::Arena **))*v8 + 1))(v8);
  }
  unsigned int v12 = (void *)*((void *)this + 12);
  uint64_t v13 = *(unsigned int *)v12;
  google::protobuf::Map<std::string,std::string>::begin(v22, v12);
  uint64_t v14 = 0;
  uint64_t v15 = v13 + v9;
  while (v22[0])
  {
    BOOL v16 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v22[0] + 3), (google::protobuf::Arena *)(*((void *)v22[0] + 3) + 24), *((google::protobuf::Arena **)this + 9));
    if (v14 != v16)
    {
      if (v14) {
        (*((void (**)(google::protobuf::Arena **))*v14 + 1))(v14);
      }
      uint64_t v14 = v16;
    }
    uint64_t v17 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v14);
    v15 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v22);
  }
  if (v14) {
    (*((void (**)(google::protobuf::Arena **))*v14 + 1))(v14);
  }
  uint64_t v18 = *((void *)this + 13);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(void *)(v18 + 8)) {
      goto LABEL_29;
    }
  }
  else if (!*(unsigned char *)(v18 + 23))
  {
    goto LABEL_29;
  }
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_29:
  *((_DWORD *)this + 28) = v15;
  return v15;
}

void sub_1DC0AC1BC(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::MILSpec::Function::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Function *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int64_t v54 = (google::protobuf::Arena **)((char *)this + 72);
  uint64_t v4 = (void *)((char *)this + 80);
  uint64_t v5 = (google::protobuf::Arena **)((char *)this + 40);
  uint64_t v6 = (void *)((char *)this + 48);
  uint64_t v7 = (std::string **)((char *)this + 104);
  int v8 = (CoreML::Specification::MILSpec::Function *)((char *)this + 16);
  while (1)
  {
    uint64_t v9 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1))
    {
      LODWORD(v1CoreML::Specification::MILSpec::Block::New(this, 0) = 0;
    }
    else
    {
      uint64_t v10 = *v9;
      if (*v9 >= 1)
      {
        *(void *)a2 = v9 + 1;
        unint64_t v11 = v10 | 0x100000000;
        if ((v11 & 0x100000000) != 0) {
          goto LABEL_8;
        }
        goto LABEL_27;
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
    unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v11 & 0x100000000) != 0)
    {
LABEL_8:
      switch(v11 >> 3)
      {
        case 1u:
          if (v11 != 10) {
            break;
          }
          uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::NamedValueType>::TypeHandler>(v8);
          uint64_t v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v14;
            *(void *)a2 = v14 + 1;
          }
          int v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v45 = *((_DWORD *)a2 + 13);
          BOOL v26 = __OFSUB__(v45--, 1);
          *((_DWORD *)a2 + 13) = v45;
          if (v45 < 0 == v26)
          {
            int v46 = v43;
            if (CoreML::Specification::MILSpec::NamedValueType::MergePartialFromCodedStream((CoreML::Specification::MILSpec::NamedValueType *)v13, a2, v44))
            {
              if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v46)) {
                goto LABEL_32;
              }
            }
          }
          return 0;
        case 2u:
          if (v11 != 18) {
            break;
          }
          if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7)) {
            return 0;
          }
          uint64_t v20 = (unsigned int *)*v7;
          if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v20 = *(unsigned int **)v20;
            std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
          }
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v20, size, 0, (uint64_t)"CoreML.Specification.MILSpec.Function.opset"))return 0; {
          goto LABEL_32;
          }
        case 3u:
          if (v11 != 26) {
            break;
          }
          uint64_t v55 = v5;
          unint64_t v56 = v6;
          memset(&__p, 0, sizeof(__p));
          BOOL v59 = 0;
          BOOL v16 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v16 < 0)
          {
            int v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v17 < 0) {
              goto LABEL_104;
            }
          }
          else
          {
            int v17 = *v16;
            *(void *)a2 = v16 + 1;
          }
          int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
          int v25 = *((_DWORD *)a2 + 13);
          BOOL v26 = __OFSUB__(v25--, 1);
          *((_DWORD *)a2 + 13) = v25;
          if (v25 < 0 != v26) {
            goto LABEL_104;
          }
          int v27 = v24;
          unint64_t v28 = *(char **)a2;
          if (*(void *)a2 < *((void *)a2 + 1) && *v28 == 10)
          {
            *(void *)a2 = v28 + 1;
            if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p)) {
              goto LABEL_104;
            }
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 18)
            {
              uint64_t v29 = *(void *)v56[2];
              uint64_t v58 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::operator[]((uint64_t)v56, (uint64_t)&__p);
              if (v29 != *(void *)v56[2])
              {
                google::protobuf::io::CodedInputStream::Skip(a2, 1u);
                BOOL v30 = (CoreML::Specification::MILSpec::Block *)v58;
                int v31 = *(char **)a2;
                if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
                {
                  int v32 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v32 < 0) {
                    goto LABEL_103;
                  }
                }
                else
                {
                  int v32 = *v31;
                  *(void *)a2 = v31 + 1;
                }
                int v47 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
                int v49 = *((_DWORD *)a2 + 13);
                BOOL v26 = __OFSUB__(v49--, 1);
                *((_DWORD *)a2 + 13) = v49;
                if (v49 < 0 != v26
                  || (int v50 = v47,
                      !CoreML::Specification::MILSpec::Block::MergePartialFromCodedStream(v30, a2, v48))
                  || !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v50))
                {
LABEL_103:
                  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::erase(v56, (unsigned __int8 *)&__p);
                  goto LABEL_104;
                }
                if (*(void *)a2 == *((void *)a2 + 1)
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  *((unsigned char *)a2 + 36) = 1;
                  goto LABEL_86;
                }
                int BeyondKeyValuePair = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>>::ReadBeyondKeyValuePair((uint64_t)&v55, (uint64_t)a2);
                goto LABEL_85;
              }
            }
          }
          else
          {
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            memset(&__p, 0, sizeof(__p));
          }
          int v33 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*v55);
          if (v59 != v33)
          {
            if (v59) {
              (*((void (**)(void))*v59 + 1))();
            }
            BOOL v59 = v33;
          }
          int v34 = (std::string *)v33[2];
          *((_DWORD *)v33 + 10) |= 1u;
          if (v34 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstance();
          }
          std::string::operator=(v34, &__p);
          int BeyondKeyValuePair = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v59
                                + 11))(v59, a2);
          if (BeyondKeyValuePair) {
            google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>>::UseKeyAndValueFromEntry((uint64_t)&v55);
          }
          if ((*((uint64_t (**)(google::protobuf::Arena **))*v59 + 5))(v59))
          {
            BOOL v59 = 0;
            if ((BeyondKeyValuePair & 1) == 0)
            {
              BOOL v36 = 0;
              int v23 = 6;
              goto LABEL_99;
            }
            goto LABEL_86;
          }
LABEL_85:
          if (!BeyondKeyValuePair) {
            goto LABEL_104;
          }
LABEL_86:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27)) {
            goto LABEL_104;
          }
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_p = (unsigned int *)&__p;
          }
          else {
            p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
          }
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v52 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          }
          else {
            int v52 = __p.__r_.__value_.__r.__words[1];
          }
          BOOL v42 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v52, 0, (uint64_t)"CoreML.Specification.MILSpec.Function.BlockSpecializationsEntry.key");
LABEL_94:
          BOOL v36 = v42;
          if (v42) {
            int v23 = 0;
          }
          else {
            int v23 = 6;
          }
LABEL_97:
          if (v59) {
            (*((void (**)(google::protobuf::Arena **))*v59 + 1))(v59);
          }
LABEL_99:
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (!v36) {
            goto LABEL_33;
          }
          goto LABEL_32;
        case 4u:
          if (v11 != 34) {
            break;
          }
          uint64_t v55 = v54;
          unint64_t v56 = v4;
          memset(&__p, 0, sizeof(__p));
          BOOL v59 = 0;
          uint64_t v18 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v18 < 0)
          {
            int v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v19 < 0) {
              goto LABEL_104;
            }
          }
          else
          {
            int v19 = *v18;
            *(void *)a2 = v18 + 1;
          }
          int v37 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
          int v38 = *((_DWORD *)a2 + 13);
          BOOL v26 = __OFSUB__(v38--, 1);
          *((_DWORD *)a2 + 13) = v38;
          if (v38 < 0 != v26
            || (int v39 = v37,
                !google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::MergePartialFromCodedStream((uint64_t)&v55, a2))|| !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v39))
          {
LABEL_104:
            BOOL v36 = 0;
            int v23 = 6;
            goto LABEL_97;
          }
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            BOOL v40 = (unsigned int *)&__p;
          }
          else {
            BOOL v40 = (unsigned int *)__p.__r_.__value_.__r.__words[0];
          }
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v41 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          }
          else {
            int v41 = __p.__r_.__value_.__r.__words[1];
          }
          BOOL v42 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(v40, v41, 0, (uint64_t)"CoreML.Specification.MILSpec.Function.AttributesEntry.key");
          goto LABEL_94;
        default:
          break;
      }
    }
LABEL_27:
    if (!v11 || (v11 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3))return 0; {
LABEL_32:
    }
    int v23 = 0;
LABEL_33:
    if (v23) {
      return 0;
    }
  }
}

void sub_1DC0AC858(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::operator[](uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v24 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v26[0];
  if (v26[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v20 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v20, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v25[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v21 = 0;
    unint64_t v22 = ((5 * v8) >> 2) + 1;
    do
      ++v21;
    while (v22 << v21 < v9);
    uint64_t v20 = v7 >> v21 <= 8 ? 8 : v7 >> v21;
    if (v20 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v26[3];
LABEL_11:
  unsigned int v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  uint64_t v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v24;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v25, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v25[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  BOOL v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    BOOL v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 152);
    int v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    _OWORD v16[2] = 0;
    char *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    uint64_t v18 = *(google::protobuf::Arena **)a1;
    CoreML::Specification::MILSpec::Block::Block((CoreML::Specification::MILSpec::Block *)(v16 + 3));
    google::protobuf::Arena::OwnDestructor<CoreML::Specification::MILSpec::Block>((google::protobuf::Arena **)v18, (google::protobuf::Arena *)(v16 + 3));
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1DC0ACAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1E0198C00](v14, 0x10B2C4008C62E43);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
  uint64_t v5 = *(google::protobuf::Arena ***)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*((void (**)(google::protobuf::Arena **))*v5 + 1))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  long long v6 = *(CoreML::Specification::MILSpec::Block **)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (google::protobuf::Arena **)v4[3];
  if (!Aligned)
  {
    unint64_t v8 = v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::MILSpec::Block::Block((CoreML::Specification::MILSpec::Block *)Aligned);
    unint64_t v9 = google::protobuf::Arena::AllocateAligned(v8, 0, 24);
    *unint64_t v9 = (google::protobuf::Arena *)Aligned;
    v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Block>;
    uint64_t v10 = (unint64_t *)((char *)v8 + 32);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr((unint64_t)v9, v10));
    std::string v9[2] = (google::protobuf::Arena *)v11;
    v4[3] = (google::protobuf::Arena *)Aligned;
  }
  if (v6 != (CoreML::Specification::MILSpec::Block *)Aligned) {
    CoreML::Specification::MILSpec::Block::InternalSwap((CoreML::Specification::MILSpec::Block *)Aligned, v6);
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::erase(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v12 = *(void *)(a1 + 48);
  *(_DWORD *)(v12 + 40) |= 1u;
  uint64_t v13 = *(void *)(v12 + 16);
  if ((uint64_t *)v13 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v13 + 23) < 0) {
    operator delete(*(void **)v13);
  }
  long long v14 = *(_OWORD *)(a1 + 16);
  *(void *)(v13 + 16) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v13 = v14;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v15 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v15) {
    google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
    *(void *)(a1 + 48) = 0;
  }
  return v15;
}

void sub_1DC0ACDBC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::Block::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627AD8;
  return result;
}

unsigned __int8 **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  int v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  double result = (unsigned __int8 **)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::MILSpec::Block::New(this, 0) = result;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(google::protobuf::Arena ***)(v4 + 24);
  if (!Aligned)
  {
    long long v6 = *(google::protobuf::Arena **)(v4 + 32);
    if (!v6) {
      operator new();
    }
    CoreML::Specification::MILSpec::Block::Block((CoreML::Specification::MILSpec::Block *)Aligned);
    uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
    void *v7 = (google::protobuf::Arena *)Aligned;
    v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Block>;
    unint64_t v8 = (unint64_t *)((char *)v6 + 32);
    do
      unint64_t v9 = __ldxr(v8);
    while (__stxr((unint64_t)v7, v8));
    void v7[2] = (google::protobuf::Arena *)v9;
    *(void *)(v4 + 24) = Aligned;
    double result = *(unsigned __int8 ***)(a1 + 40);
  }
  if (Aligned != (google::protobuf::Arena **)result)
  {
    return CoreML::Specification::MILSpec::Block::InternalSwap((CoreML::Specification::MILSpec::Block *)result, (CoreML::Specification::MILSpec::Block *)Aligned);
  }
  return result;
}

void sub_1DC0ACF9C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4058FDD882);
  _Unwind_Resume(a1);
}

unsigned __int8 **CoreML::Specification::MILSpec::Block::InternalSwap(CoreML::Specification::MILSpec::Block *this, CoreML::Specification::MILSpec::Block *a2)
{
  uint64_t v4 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v4;
  LODWORD(v4) = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v4;
  LODWORD(v4) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v4;
  uint64_t v5 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v5;
  LODWORD(v5) = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v5;
  LODWORD(v5) = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v5;
  uint64_t v6 = *((void *)this + 10);
  *((void *)this + 1CoreML::Specification::MILSpec::Block::New(this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1CoreML::Specification::MILSpec::Block::New(this, 0) = v6;
  LODWORD(v6) = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v6;
  LODWORD(v6) = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v6;
  double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::swap((unsigned __int8 **)this + 12, (uint64_t)a2 + 96);
  int v8 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 3CoreML::Specification::MILSpec::Block::New(this, 0) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 3CoreML::Specification::MILSpec::Block::New(this, 0) = v8;
  return result;
}

unsigned __int8 **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::swap(unsigned __int8 **result, uint64_t a2)
{
  int v3 = result;
  if (*result == *(unsigned __int8 **)a2)
  {
    int v4 = *((_DWORD *)result + 2);
    *((_DWORD *)result + 2) = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a2 + 8) = v4;
    uint64_t v5 = result[2];
    result[2] = *(unsigned __int8 **)(a2 + 16);
    *(void *)(a2 + 16) = v5;
  }
  else
  {
    uint64_t v6 = 0;
    int v7 = *((_DWORD *)result + 2);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::Init((uint64_t)&v6);
    google::protobuf::Map<std::string,std::string>::begin(&v9, v3[2]);
    memset(v8, 0, sizeof(v8));
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::insert<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::const_iterator>(&v6, &v9, v8);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::operator=(v3, a2);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::operator=((unsigned __int8 **)a2, (uint64_t)&v6);
    return (unsigned __int8 **)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map(&v6);
  }
  return result;
}

void sub_1DC0AD148(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map((uint64_t *)va);
  _Unwind_Resume(a1);
}

unsigned __int8 **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::operator=(unsigned __int8 **a1, uint64_t a2)
{
  if (a1 != (unsigned __int8 **)a2)
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::clear(a1);
    google::protobuf::Map<std::string,std::string>::begin(&v6, *(void **)(a2 + 16));
    memset(v5, 0, sizeof(v5));
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::insert<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::const_iterator>(a1, &v6, v5);
  }
  return a1;
}

unsigned __int8 **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::insert<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::const_iterator>(unsigned __int8 **result, long long *a2, void *a3)
{
  long long v10 = *a2;
  uint64_t v11 = *((void *)a2 + 2);
  uint64_t v3 = v10;
  if ((void)v10 != *a3)
  {
    uint64_t v5 = (uint64_t)result;
    do
    {
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v12, *(void *)(v5 + 16), *(unsigned __int8 **)(v3 + 24), 0);
      if (!v12[0])
      {
        uint64_t v6 = *(void *)(v10 + 24);
        int v7 = (const CoreML::Specification::MILSpec::Value *)(v6 + 24);
        int v8 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::operator[](v5, v6);
        if (v7 != (const CoreML::Specification::MILSpec::Value *)v8)
        {
          long long v9 = (std::string *)v8;
          CoreML::Specification::MILSpec::Value::Clear((CoreML::Specification::MILSpec::Value *)v8);
          CoreML::Specification::MILSpec::Value::MergeFrom(v9, v7);
        }
      }
      double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++((unsigned __int8 **)&v10);
      uint64_t v3 = v10;
    }
    while ((void)v10 != *a3);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::Arena::OwnDestructor<CoreML::Specification::MILSpec::Block>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Block>;
    int v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

std::string *CoreML::Specification::MILSpec::Function::MergeFrom(CoreML::Specification::MILSpec::Function *this, const CoreML::Specification::MILSpec::Function *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (CoreML::Specification::MILSpec::NamedValueType **)(*((void *)a2 + 4) + 8);
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::MILSpec::Function *)((char *)this + 16), *((_DWORD *)a2 + 6));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::MILSpec::NamedValueType>::TypeHandler>((std::string *)((char *)this + 16), (std::string **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    long long v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *long long v9 = v8;
    }
  }
  google::protobuf::Map<std::string,std::string>::begin(v19, *((void **)a2 + 8));
  for (int i = v19[0]; v19[0]; int i = v19[0])
  {
    uint64_t v11 = *((void *)i + 3);
    uint64_t v12 = (const CoreML::Specification::MILSpec::Block *)(v11 + 24);
    uint64_t v13 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::operator[]((uint64_t)this + 48, v11);
    if (v12 != (const CoreML::Specification::MILSpec::Block *)v13)
    {
      long long v14 = (CoreML::Specification::MILSpec::Block *)v13;
      CoreML::Specification::MILSpec::Block::Clear((CoreML::Specification::MILSpec::Block *)v13);
      CoreML::Specification::MILSpec::Block::MergeFrom(v14, v12);
    }
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v19);
  }
  double result = (std::string *)google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 72, (uint64_t)a2 + 72);
  uint64_t v16 = *((void *)a2 + 13);
  if (*(char *)(v16 + 23) < 0)
  {
    if (!*(void *)(v16 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v16 + 23))
  {
    return result;
  }
  uint64_t v18 = (std::string *)*((void *)this + 13);
  int v17 = (char *)this + 104;
  double result = v18;
  if (v18 != (std::string *)v16)
  {
    if (result == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v17, v16);
    }
    return std::string::operator=(result, (const std::string *)v16);
  }
  return result;
}

uint64_t CoreML::Specification::MILSpec::Function::IsInitialized(CoreML::Specification::MILSpec::Function *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::Function::Clear(CoreML::Specification::MILSpec::Function *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (CoreML::Specification::MILSpec::NamedValueType **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      CoreML::Specification::MILSpec::NamedValueType::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::clear((void *)this + 6);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::clear((void *)this + 10);
  uint64_t v5 = *((void *)this + 13);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
}

void CoreML::Specification::MILSpec::Function::New(CoreML::Specification::MILSpec::Function *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0AD56C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Function>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Function>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Function>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Function::New(CoreML::Specification::MILSpec::Function *this)
{
}

void *CoreML::Specification::MILSpec::Function::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Function");
}

void CoreML::Specification::MILSpec::Function::~Function(CoreML::Specification::MILSpec::Function *this)
{
  CoreML::Specification::MILSpec::Function::~Function(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F3626068;
  uint64_t v2 = *((void *)this + 13);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map((void *)this + 10);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::~Map((void *)this + 6);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Block,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::~Map(void *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::clear(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        void v7[2] = v2;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        uint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

__n128 google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      CoreML::Specification::MILSpec::Function::~Function((CoreML::Specification::MILSpec::Function *)(v7 + 24));
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x1E0198C00](v7, 0x10B2C40A53FFCBDLL);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 32);
  if (v8) {
    goto LABEL_7;
  }
  uint64_t v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    uint64_t v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        long long v14 = v13;
        uint64_t v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        long long v14 = *(void **)(v12 + 16);
        BOOL v15 = *v14 == v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    uint64_t v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  uint64_t v16 = (void *)a2[2];
  uint64_t v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  int v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  int v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (void *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        void v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

void *google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  uint64_t v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  unint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)unint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0ADB28(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0ADAE4);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::value(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    int v5 = 3;
    unsigned int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v7 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(void *)(v2 + 24);
  if (*(void *)(a1 + 24)) {
    return *(void *)(a1 + 24);
  }
  else {
    return v3;
  }
}

void sub_1DC0ADBE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      int v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      unsigned int v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      __n128 result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::MILSpec::Value::Value((CoreML::Specification::MILSpec::Value *)Aligned);
        unint64_t v9 = google::protobuf::Arena::AllocateAligned(size, 0, 24);
        *unint64_t v9 = (google::protobuf::Arena *)Aligned;
        v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Value>;
        uint64_t v10 = (unint64_t *)((char *)size + 32);
        do
          unint64_t v11 = __ldxr(v10);
        while (__stxr((unint64_t)v9, v10));
        std::string v9[2] = (google::protobuf::Arena *)v11;
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      uint64_t v12 = (const CoreML::Specification::MILSpec::Value *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      __n128 result = CoreML::Specification::MILSpec::Value::MergeFrom((std::string *)v4[1].__r_.__value_.__l.__data_, v12);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_1DC0ADD9C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40000F1E19);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::IsInitialized()
{
  return 1;
}

CoreML::Specification::MILSpec::Value *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  __n128 result = *(CoreML::Specification::MILSpec::Value **)(a1 + 24);
  if (result) {
    __n128 result = (CoreML::Specification::MILSpec::Value *)CoreML::Specification::MILSpec::Value::Clear(result);
  }
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::Function::New(this, 0) = 0;
  int v5 = *(google::protobuf::Arena **)(a1 + 8);
  *__n128 result = (google::protobuf::Arena *)&unk_1F3627B80;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3626FB0;
  if ((void *)a1[1] != a1 && !a1[4])
  {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::value(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    int v5 = 3;
    unsigned int v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v7 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(void *)(v2 + 24);
  if (*(void *)(a1 + 24)) {
    return *(void *)(a1 + 24);
  }
  else {
    return v3;
  }
}

void sub_1DC0AE0D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  unsigned int v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  int v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  char *v7 = 18;
  unint64_t v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *unint64_t v9 = v11;
  std::random_device v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 112) + ((9 * (__clz(*(_DWORD *)(v4 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::MILSpec::Function *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::MILSpec::Function::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::MILSpec::Function::New(this, 0) = v9;
        unsigned int v10 = *(char **)this;
        if (*(void *)this < *((void *)this + 1) && *v10 == 18)
        {
          *(void *)this = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::MILSpec::Function::New(this, 0) = v9 | 2;
      Aligned = *(google::protobuf::Arena ***)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::MILSpec::Function::Function((CoreML::Specification::MILSpec::Function *)Aligned);
        std::random_device v13 = google::protobuf::Arena::AllocateAligned(v12, 0, 24);
        *std::random_device v13 = (google::protobuf::Arena *)Aligned;
        v13[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Function>;
        long long v14 = (unint64_t *)((char *)v12 + 32);
        do
          unint64_t v15 = __ldxr(v14);
        while (__stxr((unint64_t)v13, v14));
        void v13[2] = (google::protobuf::Arena *)v15;
        *(void *)(a1 + 24) = Aligned;
      }
      uint64_t v16 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1) || *v16 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v16;
        *(void *)this = v16 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
      int v20 = *((_DWORD *)this + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)this + 13) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      uint64_t result = CoreML::Specification::MILSpec::Function::MergePartialFromCodedStream((CoreML::Specification::MILSpec::Function *)Aligned, this, v19);
      if (!result) {
        return result;
      }
      uint64_t result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v22);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_1DC0AE6F4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Function>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      uint64_t v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::MILSpec::Function::Function((CoreML::Specification::MILSpec::Function *)Aligned);
        int v9 = google::protobuf::Arena::AllocateAligned(size, 0, 24);
        *int v9 = (google::protobuf::Arena *)Aligned;
        v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Function>;
        unsigned int v10 = (unint64_t *)((char *)size + 32);
        do
          unint64_t v11 = __ldxr(v10);
        while (__stxr((unint64_t)v9, v10));
        std::string v9[2] = (google::protobuf::Arena *)v11;
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      unsigned int v12 = (const CoreML::Specification::MILSpec::Function *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      uint64_t result = CoreML::Specification::MILSpec::Function::MergeFrom((CoreML::Specification::MILSpec::Function *)v4[1].__r_.__value_.__l.__data_, v12);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_1DC0AE8CC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::IsInitialized()
{
  return 1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *(CoreML::Specification::MILSpec::Function **)(a1 + 24);
  if (v3) {
    CoreML::Specification::MILSpec::Function::Clear(v3);
  }
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::Function::New(this, 0) = 0;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3627CD0;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3627250;
  if ((void *)a1[1] != a1 && !a1[4])
  {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

uint64_t CoreML::Specification::MILSpec::Value_BlobFileValue::GetCachedSize(CoreML::Specification::MILSpec::Value_BlobFileValue *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::MILSpec::Value_BlobFileValue::SerializeWithCachedSizes(CoreML::Specification::MILSpec::Value_BlobFileValue *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result = *((void *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t result = *(void *)result;
    goto LABEL_6;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.MILSpec.Value.BlobFileValue.fileName");
    uint64_t result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((void *)this + 2), a2);
  }
LABEL_7:
  unint64_t v8 = *((void *)this + 3);
  if (v8)
  {
    return google::protobuf::internal::WireFormatLite::WriteUInt64(2, v8, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::MILSpec::Value_BlobFileValue::IsInitialized(CoreML::Specification::MILSpec::Value_BlobFileValue *this)
{
  return 1;
}

uint64_t CoreML::Specification::MILSpec::Value_BlobFileValue::Clear(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  *(void *)(this + 24) = 0;
  return this;
}

void CoreML::Specification::MILSpec::Value_BlobFileValue::New(CoreML::Specification::MILSpec::Value_BlobFileValue *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0AECAC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Value_BlobFileValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Value_BlobFileValue>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Value_BlobFileValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Value_BlobFileValue::New(CoreML::Specification::MILSpec::Value_BlobFileValue *this)
{
}

void *CoreML::Specification::MILSpec::Value_BlobFileValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Value.BlobFileValue");
}

void CoreML::Specification::MILSpec::Value_BlobFileValue::~Value_BlobFileValue(CoreML::Specification::MILSpec::Value_BlobFileValue *this)
{
  *(void *)this = &unk_1F36256E8;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F36256E8;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((void *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Value>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Value> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      unint64_t v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      int v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    unsigned int v12 = *v9;
    std::random_device v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        std::random_device v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          BOOL v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      BOOL v17 = a1;
LABEL_12:
      void *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    unint64_t v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::MILSpec::Function> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      unint64_t v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      int v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    unsigned int v12 = *v9;
    std::random_device v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        std::random_device v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          BOOL v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      BOOL v17 = a1;
LABEL_12:
      void *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    unint64_t v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::MILSpec::Program::ByteSizeLong(CoreML::Specification::MILSpec::Program *this)
{
  uint64_t v2 = (void *)*((void *)this + 5);
  uint64_t v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v18, v2);
  uint64_t v4 = 0;
  while (v18[0])
  {
    unint64_t v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v18[0] + 3), (google::protobuf::Arena *)(*((void *)v18[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v5)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v5;
    }
    uint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v18);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  uint64_t v7 = (void *)*((void *)this + 9);
  uint64_t v8 = *(unsigned int *)v7;
  google::protobuf::Map<std::string,std::string>::begin(v18, v7);
  int v9 = 0;
  uint64_t v10 = v8 + v3;
  while (v18[0])
  {
    uint64_t v11 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v18[0] + 3), (google::protobuf::Arena *)(*((void *)v18[0] + 3) + 24), *((google::protobuf::Arena **)this + 6));
    if (v9 != v11)
    {
      if (v9) {
        (*((void (**)(google::protobuf::Arena **))*v9 + 1))(v9);
      }
      int v9 = v11;
    }
    uint64_t v12 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v9);
    v10 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v18);
  }
  if (v9) {
    (*((void (**)(google::protobuf::Arena **))*v9 + 1))(v9);
  }
  uint64_t v13 = *((void *)this + 10);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  uint64_t v16 = *((void *)this + 11);
  if (v16) {
    v10 += ((9 * (__clz(v16 | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 24) = v10;
  return v10;
}

void sub_1DC0AF474(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::MILSpec::Program::MergePartialFromCodedStream(CoreML::Specification::MILSpec::Program *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  int v50 = (google::protobuf::Arena **)((char *)this + 48);
  unint64_t v5 = (void *)((char *)this + 56);
  uint64_t v6 = (std::string **)((char *)this + 80);
  uint64_t v7 = (google::protobuf::Arena **)((char *)this + 16);
  uint64_t v8 = (void *)((char *)this + 24);
  while (1)
  {
    int v9 = *(char **)a2;
    if (*(void *)a2 >= *((void *)a2 + 1)) {
      break;
    }
    uint64_t v10 = *v9;
    if (*v9 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v9 + 1;
    unint64_t v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) == 0) {
      goto LABEL_27;
    }
LABEL_8:
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 8) {
          goto LABEL_27;
        }
        uint64_t v13 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v30 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          Varint64Fallbacint k = *v13;
          *(void *)a2 = v13 + 1;
        }
        *((void *)this + 11) = Varint64Fallback;
        break;
      case 2u:
        if (v11 != 18) {
          goto LABEL_27;
        }
        uint64_t v51 = v7;
        int v52 = v8;
        memset(&__p, 0, sizeof(__p));
        uint64_t v55 = 0;
        unsigned int v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_101;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v19;
          *(void *)a2 = v19 + 1;
        }
        int v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v32 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v32--, 1);
        *((_DWORD *)a2 + 13) = v32;
        if (v32 < 0 != v25) {
          goto LABEL_101;
        }
        int v33 = v31;
        int v34 = *(char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v34 == 10)
        {
          *(void *)a2 = v34 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p)) {
            goto LABEL_101;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 18)
          {
            uint64_t v35 = *(void *)v52[2];
            int64_t v54 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::operator[]((uint64_t)v52, (uint64_t)&__p);
            if (v35 != *(void *)v52[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              BOOL v36 = (CoreML::Specification::MILSpec::Function *)v54;
              int v37 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v37 < 0)
              {
                int v38 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v38 < 0) {
                  goto LABEL_100;
                }
              }
              else
              {
                int v38 = *v37;
                *(void *)a2 = v37 + 1;
              }
              int v43 = google::protobuf::io::CodedInputStream::PushLimit(a2, v38);
              int v45 = *((_DWORD *)a2 + 13);
              BOOL v25 = __OFSUB__(v45--, 1);
              *((_DWORD *)a2 + 13) = v45;
              if (v45 < 0 != v25
                || (int v46 = v43,
                    !CoreML::Specification::MILSpec::Function::MergePartialFromCodedStream(v36, a2, v44))
                || !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v46))
              {
LABEL_100:
                google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::erase(v52, (unsigned __int8 *)&__p);
                goto LABEL_101;
              }
              if (*(void *)a2 == *((void *)a2 + 1)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                *((unsigned char *)a2 + 36) = 1;
                goto LABEL_83;
              }
              int BeyondKeyValuePair = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>>::ReadBeyondKeyValuePair((uint64_t)&v51, (uint64_t)a2);
              goto LABEL_82;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        int v39 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*v51);
        if (v55 != v39)
        {
          if (v55) {
            (*((void (**)(void))*v55 + 1))();
          }
          uint64_t v55 = v39;
        }
        BOOL v40 = (std::string *)v39[2];
        *((_DWORD *)v39 + 10) |= 1u;
        if (v40 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=(v40, &__p);
        int BeyondKeyValuePair = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v55
                              + 11))(v55, a2);
        if (BeyondKeyValuePair) {
          google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>>::UseKeyAndValueFromEntry((uint64_t)&v51);
        }
        if ((*((uint64_t (**)(google::protobuf::Arena **))*v55 + 5))(v55))
        {
          uint64_t v55 = 0;
          if ((BeyondKeyValuePair & 1) == 0)
          {
            BOOL v42 = 0;
            int v22 = 6;
            goto LABEL_96;
          }
          goto LABEL_83;
        }
LABEL_82:
        if (!BeyondKeyValuePair) {
          goto LABEL_101;
        }
LABEL_83:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v33)) {
          goto LABEL_101;
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = (unsigned int *)&__p;
        }
        else {
          p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v48 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          int v48 = __p.__r_.__value_.__r.__words[1];
        }
        BOOL v29 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v48, 0, (uint64_t)"CoreML.Specification.MILSpec.Program.FunctionsEntry.key");
LABEL_91:
        BOOL v42 = v29;
        if (v29) {
          int v22 = 0;
        }
        else {
          int v22 = 6;
        }
LABEL_94:
        if (v55) {
          (*((void (**)(google::protobuf::Arena **))*v55 + 1))(v55);
        }
LABEL_96:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (!v42) {
          goto LABEL_33;
        }
        break;
      case 3u:
        if (v11 != 26) {
          goto LABEL_27;
        }
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6)) {
          return 0;
        }
        uint64_t v15 = (unsigned int *)*v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v15 = *(unsigned int **)v15;
          std::string::size_type size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v15, size, 0, (uint64_t)"CoreML.Specification.MILSpec.Program.docString"))return 0; {
        break;
        }
      case 4u:
        if (v11 != 34) {
          goto LABEL_27;
        }
        uint64_t v51 = v50;
        int v52 = v5;
        memset(&__p, 0, sizeof(__p));
        uint64_t v55 = 0;
        BOOL v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v18 < 0) {
            goto LABEL_101;
          }
        }
        else
        {
          int v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        int v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, v18);
        int v24 = *((_DWORD *)a2 + 13);
        BOOL v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 13) = v24;
        if (v24 < 0 != v25
          || (int v26 = v23,
              !google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>>::MergePartialFromCodedStream((uint64_t)&v51, a2))|| !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26))
        {
LABEL_101:
          BOOL v42 = 0;
          int v22 = 6;
          goto LABEL_94;
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          __n128 v27 = (unsigned int *)&__p;
        }
        else {
          __n128 v27 = (unsigned int *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v28 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          int v28 = __p.__r_.__value_.__r.__words[1];
        }
        BOOL v29 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(v27, v28, 0, (uint64_t)"CoreML.Specification.MILSpec.Program.AttributesEntry.key");
        goto LABEL_91;
      default:
        goto LABEL_27;
    }
LABEL_32:
    int v22 = 0;
LABEL_33:
    if (v22) {
      return 0;
    }
  }
  LODWORD(v1CoreML::Specification::MILSpec::Value_BlobFileValue::New(this, 0) = 0;
LABEL_7:
  unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
  unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v11 & 0x100000000) != 0) {
    goto LABEL_8;
  }
LABEL_27:
  if (v11) {
    BOOL v21 = (v11 & 7) == 4;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21)
  {
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3))return 0; {
    goto LABEL_32;
    }
  }
  return 1;
}

void sub_1DC0AFAC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::operator[](uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v24 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v26[0];
  if (v26[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v20 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v20, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v25[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v21 = 0;
    unint64_t v22 = ((5 * v8) >> 2) + 1;
    do
      ++v21;
    while (v22 << v21 < v9);
    uint64_t v20 = v7 >> v21 <= 8 ? 8 : v7 >> v21;
    if (v20 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v26[3];
LABEL_11:
  uint64_t v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  uint64_t v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v24;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v25, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v25[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    uint64_t v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 144);
    BOOL v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    _OWORD v16[2] = 0;
    char *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    int v18 = *(google::protobuf::Arena **)a1;
    CoreML::Specification::MILSpec::Function::Function((CoreML::Specification::MILSpec::Function *)(v16 + 3));
    google::protobuf::Arena::OwnDestructor<CoreML::Specification::MILSpec::Function>((google::protobuf::Arena **)v18, (google::protobuf::Arena *)(v16 + 3));
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1DC0AFD68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1E0198C00](v14, 0x10B2C40A53FFCBDLL);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
  uint64_t v5 = *(google::protobuf::Arena ***)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*((void (**)(google::protobuf::Arena **))*v5 + 1))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  long long v6 = *(CoreML::Specification::MILSpec::Function **)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (google::protobuf::Arena **)v4[3];
  if (!Aligned)
  {
    unint64_t v8 = v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::MILSpec::Function::Function((CoreML::Specification::MILSpec::Function *)Aligned);
    unint64_t v9 = google::protobuf::Arena::AllocateAligned(v8, 0, 24);
    *unint64_t v9 = (google::protobuf::Arena *)Aligned;
    v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Function>;
    uint64_t v10 = (unint64_t *)((char *)v8 + 32);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr((unint64_t)v9, v10));
    std::string v9[2] = (google::protobuf::Arena *)v11;
    v4[3] = (google::protobuf::Arena *)Aligned;
  }
  if (v6 != (CoreML::Specification::MILSpec::Function *)Aligned) {
    CoreML::Specification::MILSpec::Function::InternalSwap((CoreML::Specification::MILSpec::Function *)Aligned, v6);
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::erase(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v12 = *(void *)(a1 + 48);
  *(_DWORD *)(v12 + 40) |= 1u;
  uint64_t v13 = *(void *)(v12 + 16);
  if ((uint64_t *)v13 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v13 + 23) < 0) {
    operator delete(*(void **)v13);
  }
  long long v14 = *(_OWORD *)(a1 + 16);
  *(void *)(v13 + 16) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v13 = v14;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v15 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v15) {
    google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48))) {
    *(void *)(a1 + 48) = 0;
  }
  return v15;
}

void sub_1DC0B002C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::MILSpec::Value_BlobFileValue::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627CD0;
  return result;
}

unsigned __int8 **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Function,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  uint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  double result = (unsigned __int8 **)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::MILSpec::Value_BlobFileValue::New(this, 0) = result;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(google::protobuf::Arena ***)(v4 + 24);
  if (!Aligned)
  {
    long long v6 = *(google::protobuf::Arena **)(v4 + 32);
    if (!v6) {
      operator new();
    }
    CoreML::Specification::MILSpec::Function::Function((CoreML::Specification::MILSpec::Function *)Aligned);
    uint64_t v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
    void *v7 = (google::protobuf::Arena *)Aligned;
    v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Function>;
    unint64_t v8 = (unint64_t *)((char *)v6 + 32);
    do
      unint64_t v9 = __ldxr(v8);
    while (__stxr((unint64_t)v7, v8));
    void v7[2] = (google::protobuf::Arena *)v9;
    *(void *)(v4 + 24) = Aligned;
    double result = *(unsigned __int8 ***)(a1 + 40);
  }
  if (Aligned != (google::protobuf::Arena **)result)
  {
    return CoreML::Specification::MILSpec::Function::InternalSwap((CoreML::Specification::MILSpec::Function *)result, (CoreML::Specification::MILSpec::Function *)Aligned);
  }
  return result;
}

void sub_1DC0B020C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40408AB1BCLL);
  _Unwind_Resume(a1);
}

unsigned __int8 **CoreML::Specification::MILSpec::Function::InternalSwap(CoreML::Specification::MILSpec::Function *this, CoreML::Specification::MILSpec::Function *a2)
{
  uint64_t v4 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v4;
  long long v6 = (unsigned __int8 **)((char *)this + 48);
  uint64_t v5 = *((void *)this + 6);
  int v7 = *((_DWORD *)this + 6);
  unint64_t v9 = (unsigned __int8 **)((char *)a2 + 48);
  uint64_t v8 = *((void *)a2 + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v7;
  int v10 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v10;
  if (v5 == v8)
  {
    int v11 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v11;
    uint64_t v12 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v12;
  }
  else
  {
    uint64_t v15 = 0;
    int v16 = *((_DWORD *)this + 14);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::Init((uint64_t)&v15);
    google::protobuf::Map<std::string,std::string>::begin(&v18, *((void **)this + 8));
    memset(v17, 0, sizeof(v17));
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::insert<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::const_iterator>(&v15, &v18, v17);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::operator=(v6, (uint64_t)v9);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::operator=(v9, (uint64_t)&v15);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::~Map(&v15);
  }
  double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::swap((unsigned __int8 **)this + 10, (uint64_t)a2 + 80);
  uint64_t v14 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v14;
  LODWORD(v14) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v14;
  return result;
}

void sub_1DC0B0354(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::~Map((uint64_t *)va);
  _Unwind_Resume(a1);
}

unsigned __int8 **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::operator=(unsigned __int8 **a1, uint64_t a2)
{
  if (a1 != (unsigned __int8 **)a2)
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::clear(a1);
    google::protobuf::Map<std::string,std::string>::begin(&v6, *(void **)(a2 + 16));
    memset(v5, 0, sizeof(v5));
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::insert<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::const_iterator>(a1, &v6, v5);
  }
  return a1;
}

unsigned __int8 **google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::insert<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::const_iterator>(unsigned __int8 **result, long long *a2, void *a3)
{
  long long v10 = *a2;
  uint64_t v11 = *((void *)a2 + 2);
  uint64_t v3 = v10;
  if ((void)v10 != *a3)
  {
    uint64_t v5 = (uint64_t)result;
    do
    {
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v12, *(void *)(v5 + 16), *(unsigned __int8 **)(v3 + 24), 0);
      if (!v12[0])
      {
        uint64_t v6 = *(void *)(v10 + 24);
        int v7 = (const CoreML::Specification::MILSpec::Block *)(v6 + 24);
        uint64_t v8 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Block>::operator[](v5, v6);
        if (v7 != (const CoreML::Specification::MILSpec::Block *)v8)
        {
          unint64_t v9 = (CoreML::Specification::MILSpec::Block *)v8;
          CoreML::Specification::MILSpec::Block::Clear((CoreML::Specification::MILSpec::Block *)v8);
          CoreML::Specification::MILSpec::Block::MergeFrom(v9, v7);
        }
      }
      double result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++((unsigned __int8 **)&v10);
      uint64_t v3 = v10;
    }
    while ((void)v10 != *a3);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::Arena::OwnDestructor<CoreML::Specification::MILSpec::Function>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::MILSpec::Function>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

void *CoreML::Specification::MILSpec::Program::MergeFrom(CoreML::Specification::MILSpec::Program *this, const CoreML::Specification::MILSpec::Program *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::Map<std::string,std::string>::begin(v14, *((void **)a2 + 5));
  for (int i = v14[0]; v14[0]; int i = v14[0])
  {
    uint64_t v6 = *((void *)i + 3);
    int v7 = (const CoreML::Specification::MILSpec::Function *)(v6 + 24);
    uint64_t v8 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::operator[]((uint64_t)this + 24, v6);
    if (v7 != (const CoreML::Specification::MILSpec::Function *)v8)
    {
      unint64_t v9 = (CoreML::Specification::MILSpec::Function *)v8;
      CoreML::Specification::MILSpec::Function::Clear((CoreML::Specification::MILSpec::Function *)v8);
      CoreML::Specification::MILSpec::Function::MergeFrom(v9, v7);
    }
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v14);
  }
  double result = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::MILSpec::Value,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergeFrom((uint64_t)this + 48, (uint64_t)a2 + 48);
  uint64_t v11 = *((void *)a2 + 10);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_15;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_15;
  }
  double result = (char *)this + 80;
  uint64_t v12 = (uint64_t *)*((void *)this + 10);
  if (v12 != (uint64_t *)v11)
  {
    if (v12 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, v11);
    }
    double result = std::string::operator=(*((std::string **)this + 10), (const std::string *)v11);
  }
LABEL_15:
  uint64_t v13 = *((void *)a2 + 11);
  if (v13) {
    *((void *)this + 11) = v13;
  }
  return result;
}

uint64_t CoreML::Specification::MILSpec::Program::IsInitialized(CoreML::Specification::MILSpec::Program *this)
{
  return 1;
}

void CoreML::Specification::MILSpec::Program::Clear(CoreML::Specification::MILSpec::Program *this)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::clear((void *)this + 3);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::clear((void *)this + 7);
  uint64_t v2 = *((void *)this + 10);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  *((void *)this + 11) = 0;
}

void CoreML::Specification::MILSpec::Program::New(CoreML::Specification::MILSpec::Program *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B06B4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40FAC9F822);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MILSpec::Program>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Program>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MILSpec::Program>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::MILSpec::Program::New(CoreML::Specification::MILSpec::Program *this)
{
}

void *CoreML::Specification::MILSpec::Program::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MILSpec.Program");
}

void CoreML::Specification::MILSpec::Program::~Program(CoreML::Specification::MILSpec::Program *this)
{
  CoreML::Specification::MILSpec::Program::~Program(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F3625F38;
  uint64_t v2 = *((void *)this + 10);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::~Map((void *)this + 7);
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *a1, CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *this)
{
  return CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((unint64_t *)this, a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::GLMClassifier_DoubleArray>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::GetCachedSize(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::ByteSizeLong(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

std::string *CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::IsInitialized(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *this)
{
  return 1;
}

void CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B098C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::SoundAnalysisPreprocessing_Vggish(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *this)
{
  *(void *)this = &unk_1F361B010;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *)&CoreML::Specification::CoreMLModels::_SoundAnalysisPreprocessing_Vggish_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC0B0A10(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::TableStruct *this)
{
  double result = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::CoreMLModels::_SoundAnalysisPreprocessing_Vggish_default_instance_ = (uint64_t)&unk_1F361B010;
  qword_1EC0016D8 = 0;
  dword_1EC0016E0 = 0;
  byte_1EC0016E8 = 1;
  CoreML::Specification::CoreMLModels::_SoundAnalysisPreprocessing_default_instance_ = (uint64_t)&unk_1F361AEE0;
  *(void *)algn_1EC001670 = 0;
  qword_1EC001680 = 0;
  byte_1EC001688 = 1;
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::GetCachedSize(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(_DWORD *)(this + 28) == 20) {
    return google::protobuf::internal::WireFormatLite::WriteMessage(20, *(void *)(this + 16), a2);
  }
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::ByteSizeLong(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *this)
{
  if (*((_DWORD *)this + 7) == 20)
  {
    *(_DWORD *)(*((void *)this + 2) + 16) = 0;
    uint64_t v1 = 3;
  }
  else
  {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unint64_t v5 = *(unsigned __int8 **)a2;
      unint64_t v6 = *((void *)a2 + 1);
      if (*(void *)a2 < v6) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_21:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_22;
      }
LABEL_8:
      if (v9 != 162 || (v9 & 0xFFFFFFF8) != 0xA0) {
        goto LABEL_22;
      }
      if (*((_DWORD *)this + 7) != 20)
      {
        *((_DWORD *)this + 7) = 20;
        operator new();
      }
      uint64_t v11 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v11 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v11;
        *(void *)a2 = v11 + 1;
      }
      uint64_t v13 = (CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *)google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v15 = *((_DWORD *)a2 + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        int v17 = (int)v13;
        uint64_t result = CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::MergePartialFromCodedStream(v13, (char **)a2, v14);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17)) {
          continue;
        }
      }
      return 0;
    }
    uint64_t v7 = v5 + 1;
    uint64_t v8 = *v5;
    if ((char)*v5 < 1)
    {
      if ((unint64_t)v7 < v6)
      {
        int v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(void *)a2 = v5 + 2;
          unint64_t v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_8;
        }
      }
      goto LABEL_21;
    }
    *(void *)a2 = v7;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_8;
    }
LABEL_22:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0B0D8C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::MergeFrom(std::string *this, const CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (*((_DWORD *)a2 + 7) == 20)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[0]) != 20)
    {
      HIDWORD(v3[1].__r_.__value_.__r.__words[0]) = 20;
      operator new();
    }
    uint64_t v5 = *(void *)(*((void *)a2 + 2) + 8);
    if (v5)
    {
      unint64_t v6 = (unint64_t *)(v3->__r_.__value_.__r.__words[2] + 8);
      return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v6, v5 & 0xFFFFFFFFFFFFFFFELL);
    }
  }
  return this;
}

void sub_1DC0B0E90(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::IsInitialized(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *this)
{
  return 1;
}

uint64_t CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)(this + 28) == 20)
  {
    this = *(void *)(this + 16);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

void CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::New(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B0F6C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::SoundAnalysisPreprocessing(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *this)
{
  *(void *)this = &unk_1F361AEE0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *)&CoreML::Specification::CoreMLModels::_SoundAnalysisPreprocessing_default_instance_) {
    CoreML::Specification::CoreMLModels::protobuf_SoundAnalysisPreprocessing_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC0B0FF0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::New(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *this)
{
}

void *CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing");
}

void CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::~SoundAnalysisPreprocessing(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing *this)
{
  CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing::~SoundAnalysisPreprocessing(this);
  JUMPOUT(0x1E0198C00);
}

{
  int v2;
  uint64_t v3;

  *(void *)this = &unk_1F361AEE0;
  uint64_t v2 = *((_DWORD *)this + 7);
  if (v2)
  {
    if (v2 == 20)
    {
      uint64_t v3 = *((void *)this + 2);
      if (v3) {
        (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
      }
    }
    *((_DWORD *)this + 7) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *this)
{
}

void *CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish");
}

void CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::~SoundAnalysisPreprocessing_Vggish(CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish *this)
{
  *(void *)this = &unk_1F361B010;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F361B010;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::GLMClassifier_DoubleArray::GetCachedSize(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::GLMClassifier_DoubleArray::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      uint64_t v12 = (char *)(v11 + 8);
    }
    else {
      uint64_t v12 = 0;
    }
    int v13 = 8 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}

uint64_t CoreML::Specification::GLMClassifier_DoubleArray::ByteSizeLong(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
  uint64_t v1 = *((unsigned int *)this + 4);
  uint64_t v2 = 8 * v1;
  if (v1)
  {
    if ((v2 & 0x80000000) != 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

BOOL CoreML::Specification::GLMClassifier_DoubleArray::MergePartialFromCodedStream(CoreML::Specification::GLMClassifier_DoubleArray *this, char **a2, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 3;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v30 = 0;
          unint64_t v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result) {
              return result;
            }
            unint64_t v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unint64_t v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(void *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    unsigned int *v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    unsigned int *v5 = v17;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::GLMClassifier_DoubleArray::IsInitialized(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
  return 1;
}

uint64_t CoreML::Specification::GLMClassifier_DoubleArray::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

void CoreML::Specification::GLMClassifier_DoubleArray::New(CoreML::Specification::GLMClassifier_DoubleArray *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B1714(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::GLMClassifier_DoubleArray *CoreML::Specification::GLMClassifier_DoubleArray::GLMClassifier_DoubleArray(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F36223D8;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::GLMClassifier_DoubleArray *)&CoreML::Specification::_GLMClassifier_DoubleArray_default_instance_) {
    CoreML::Specification::protobuf_GLMClassifier_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0B17A4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::GLMClassifier_DoubleArray>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::GLMClassifier_DoubleArray>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::GLMClassifier_DoubleArray>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_GLMClassifier_2eproto::InitDefaults(CoreML::Specification::protobuf_GLMClassifier_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_GLMClassifier_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_GLMClassifier_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_GLMClassifier_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_GLMClassifier_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_GLMClassifier_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_GLMClassifier_DoubleArray_default_instance_ = (uint64_t)&unk_1F36223D8;
  *(void *)algn_1EC004C98 = 0;
  qword_1EC004CA0 = 0;
  unk_1EC004CA8 = 0;
  dword_1EC004CB4 = 0;
  byte_1EC004CB8 = 1;
  CoreML::Specification::_GLMClassifier_default_instance_ = (uint64_t)&unk_1F361B8F8;
  double result = 0.0;
  unk_1EC002010 = 0u;
  unk_1EC002020 = 0u;
  unk_1EC002030 = 0u;
  unk_1EC002044 = 0;
  qword_1EC002058 = 0;
  byte_1EC002060 = 1;
  return result;
}

uint64_t CoreML::Specification::GLMClassifier::GetCachedSize(CoreML::Specification::GLMClassifier *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::GLMClassifier::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage(1, *(void *)(*(void *)(v5 + 32) + 8 * i + 8), a2);
  }
  if (*(int *)(v5 + 40) > 0)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 18;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v8 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v8 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v8;
    }
    unsigned int v9 = *(_DWORD *)(v5 + 56);
    if (v8 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v9);
    }
    else
    {
      uint64_t v10 = *((void *)a2 + 1);
      if (v9 < 0x80)
      {
        unsigned int v12 = *(_DWORD *)(v5 + 56);
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v11++ = v9 | 0x80;
          unsigned int v12 = v9 >> 7;
          unsigned int v13 = v9 >> 14;
          v9 >>= 7;
        }
        while (v13);
      }
      unsigned char *v11 = v12;
      int v14 = v11 - v10 + 1;
      *((void *)a2 + 1) += v14;
      *((_DWORD *)a2 + 4) -= v14;
    }
    uint64_t v15 = *(void *)(v5 + 48);
    if (v15) {
      int v16 = (char *)(v15 + 8);
    }
    else {
      int v16 = 0;
    }
    this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, v16, 8 * *(_DWORD *)(v5 + 40));
  }
  signed int v17 = *(_DWORD *)(v5 + 60);
  if (v17) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(3, v17, a2, a4);
  }
  signed int v18 = *(_DWORD *)(v5 + 64);
  if (v18) {
    this = google::protobuf::internal::WireFormatLite::WriteEnum(4, v18, a2, a4);
  }
  int v19 = *(_DWORD *)(v5 + 84);
  if (v19 == 100)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(100, *(void *)(v5 + 72), a2);
    int v19 = *(_DWORD *)(v5 + 84);
  }
  if (v19 == 101)
  {
    uint64_t v20 = *(void *)(v5 + 72);
    return google::protobuf::internal::WireFormatLite::WriteMessage(101, v20, a2);
  }
  return this;
}

uint64_t CoreML::Specification::GLMClassifier::ByteSizeLong(CoreML::Specification::GLMClassifier *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((void *)this + 4);
    uint64_t v5 = *((unsigned int *)this + 6);
    do
    {
      int v6 = *(unsigned int **)(v4 + 8 * v3 + 8);
      uint64_t v7 = v6[4];
      uint64_t v8 = 8 * v7;
      if (v7)
      {
        if ((v8 & 0x80000000) != 0) {
          uint64_t v9 = 11;
        }
        else {
          uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v9 = 0;
      }
      uint64_t v10 = v9 + v8;
      unsigned char v6[8] = v8;
      v6[9] = v10;
      v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v11 = *((unsigned int *)this + 10);
  uint64_t v12 = 8 * v11;
  if (v11)
  {
    if ((v12 & 0x80000000) != 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v13;
  }
  *((_DWORD *)this + 14) = v12;
  uint64_t v14 = v5 + v12;
  int v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v14 += v16;
  }
  int v17 = *((_DWORD *)this + 16);
  if (v17)
  {
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v14 += v18;
  }
  int v19 = *((_DWORD *)this + 21);
  if (v19 == 101)
  {
    uint64_t v20 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 9));
    goto LABEL_30;
  }
  if (v19 == 100)
  {
    uint64_t v20 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 9));
LABEL_30:
    v14 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 2CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = v14;
  return v14;
}

uint64_t CoreML::Specification::GLMClassifier::MergePartialFromCodedStream(CoreML::Specification::GLMClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 40);
  int v6 = (CoreML::Specification::GLMClassifier *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    uint64_t v7 = *(unsigned __int8 **)a2;
    unint64_t v8 = *((void *)a2 + 1);
    if (*(void *)a2 >= v8)
    {
      LODWORD(v1CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = 0;
      goto LABEL_107;
    }
    uint64_t v9 = v7 + 1;
    uint64_t v10 = *v7;
    if ((char)*v7 >= 1)
    {
      *(void *)a2 = v9;
      unint64_t v11 = v10 | 0x100000000;
      if ((v11 & 0x100000000) != 0) {
        goto LABEL_9;
      }
      goto LABEL_108;
    }
    if ((unint64_t)v9 < v8)
    {
      int v12 = *v9;
      if ((v10 & ~v12) >= 0x80) {
        break;
      }
    }
LABEL_107:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
    unint64_t v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_108:
    if (v11) {
      BOOL v67 = (v11 & 7) == 4;
    }
    else {
      BOOL v67 = 1;
    }
    if (v67) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0) {
      return 0;
    }
  }
  *(void *)a2 = v7 + 2;
  unint64_t v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
LABEL_9:
  unsigned int v13 = v11 >> 3;
  switch(v11 >> 3)
  {
    case 1u:
      if (v11 != 10) {
        goto LABEL_108;
      }
      uint64_t v14 = (int *)*((void *)this + 4);
      if (!v14)
      {
        int v15 = *((_DWORD *)this + 6);
        int v16 = *((_DWORD *)this + 7);
LABEL_55:
        if (v15 <= v16)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v6, v16 - v15 + 1);
          uint64_t v14 = (int *)*((void *)this + 4);
        }
        int v16 = *v14;
        goto LABEL_58;
      }
      int v15 = *((_DWORD *)this + 6);
      int v16 = *v14;
      if (v15 < *v14)
      {
        *((_DWORD *)this + 6) = v15 + 1;
        Aligned = *(google::protobuf::Arena ***)&v14[2 * v15 + 2];
        goto LABEL_63;
      }
      if (v16 == *((_DWORD *)this + 7)) {
        goto LABEL_55;
      }
LABEL_58:
      *uint64_t v14 = v16 + 1;
      int v39 = *(google::protobuf::Arena **)v6;
      if (!*(void *)v6) {
        operator new();
      }
      CoreML::Specification::GLMClassifier_DoubleArray::GLMClassifier_DoubleArray((CoreML::Specification::GLMClassifier_DoubleArray *)Aligned);
      BOOL v40 = google::protobuf::Arena::AllocateAligned(v39, 0, 24);
      *BOOL v40 = (google::protobuf::Arena *)Aligned;
      v40[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::GLMClassifier_DoubleArray>;
      int v41 = (unint64_t *)((char *)v39 + 32);
      do
        unint64_t v42 = __ldxr(v41);
      while (__stxr((unint64_t)v40, v41));
      v40[2] = (google::protobuf::Arena *)v42;
      uint64_t v43 = *((void *)this + 4);
      uint64_t v44 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v44 + 1;
      *(void *)(v43 + 8 * v44 + 8) = Aligned;
LABEL_63:
      int v45 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v45;
        *(void *)a2 = v45 + 1;
      }
      int v47 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v49 = *((_DWORD *)a2 + 13);
      BOOL v33 = __OFSUB__(v49--, 1);
      *((_DWORD *)a2 + 13) = v49;
      if (v49 < 0 != v33) {
        return 0;
      }
      int v34 = v47;
      uint64_t result = CoreML::Specification::GLMClassifier_DoubleArray::MergePartialFromCodedStream((CoreML::Specification::GLMClassifier_DoubleArray *)Aligned, (char **)a2, v48);
      if (result) {
        goto LABEL_69;
      }
      return result;
    case 2u:
      if (v11 == 17)
      {
        if (google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(18, (unint64_t **)a2, (uint64_t)v5))
        {
          goto LABEL_2;
        }
        return 0;
      }
      if (v11 != 18) {
        goto LABEL_108;
      }
      int v19 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
      {
        unsigned int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v20 & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int v20 = *v19;
        *(void *)a2 = v19 + 1;
      }
      if ((v20 & 7) != 0) {
        return 0;
      }
      int v50 = *((_DWORD *)a2 + 12);
      if (v50 == 0x7FFFFFFF) {
        int v51 = -1;
      }
      else {
        int v51 = v50 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      }
      int v52 = *((_DWORD *)a2 + 10);
      if (v52 == 0x7FFFFFFF) {
        int v53 = -1;
      }
      else {
        int v53 = v52 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      }
      signed int v54 = *v5;
      unsigned int v55 = v20 >> 3;
      if (v53 >= v51) {
        int v56 = v51;
      }
      else {
        int v56 = v53;
      }
      if (v51 == -1) {
        int v57 = v53;
      }
      else {
        int v57 = v56;
      }
      if (v57 < (uint64_t)v20)
      {
        if (v20 < 8) {
          goto LABEL_2;
        }
        if (v55 <= 1) {
          int v58 = 1;
        }
        else {
          int v58 = v20 >> 3;
        }
        while (1)
        {
          unint64_t v70 = 0;
          BOOL v59 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v70);
            if (!result) {
              return result;
            }
            unint64_t v60 = v70;
            signed int v54 = *v5;
          }
          else
          {
            unint64_t v60 = *v59;
            *(void *)a2 = v59 + 1;
          }
          if (v54 == *((_DWORD *)this + 11))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v54 + 1);
            signed int v54 = *v5;
          }
          uint64_t v61 = *((void *)this + 6) + 8 * v54;
          *((_DWORD *)this + 1CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = v54 + 1;
          *(void *)(v61 + 8) = v60;
          ++v54;
          if (!--v58) {
            goto LABEL_2;
          }
        }
      }
      signed int v62 = v54 + v55;
      if (v20 > 7)
      {
        google::protobuf::RepeatedField<double>::Reserve(v5, v54 + v55);
        uint64_t v63 = *((void *)this + 6);
        uint64_t v64 = 8 * v62 - 8 * *((int *)this + 10);
        if (v64 >= 1) {
          bzero((void *)(v63 + 8 + 8 * *((int *)this + 10)), 8 * (((unint64_t)v64 >> 3) - ((unint64_t)v64 > 7)) + 8);
        }
      }
      else
      {
        uint64_t v63 = *((void *)this + 6);
      }
      unsigned int *v5 = v62;
      uint64_t v65 = v63 + 8;
      if (!v63) {
        uint64_t v65 = 0;
      }
      if (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v65 + 8 * v54), v20)) {
        goto LABEL_2;
      }
      if ((int)*v5 < 1) {
        return 0;
      }
      uint64_t result = 0;
      unsigned int *v5 = v54;
      return result;
    case 3u:
      if (v11 != 24) {
        goto LABEL_108;
      }
      int v21 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v22 = 0;
      }
      else
      {
        int v22 = *v21;
        if ((*v21 & 0x80000000) == 0)
        {
          *(void *)a2 = v21 + 1;
LABEL_116:
          *((_DWORD *)this + 15) = v22;
          goto LABEL_2;
        }
      }
      Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v22);
      int v22 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
      goto LABEL_116;
    case 4u:
      if (v11 != 32) {
        goto LABEL_108;
      }
      unint64_t v23 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        int v24 = 0;
      }
      else
      {
        int v24 = *v23;
        if ((*v23 & 0x80000000) == 0)
        {
          *(void *)a2 = v23 + 1;
          goto LABEL_119;
        }
      }
      uint64_t v69 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
      int v24 = v69;
      if (v69 < 0) {
        return 0;
      }
LABEL_119:
      *((_DWORD *)this + 16) = v24;
      goto LABEL_2;
    default:
      if (v13 == 100)
      {
        if (v11 != 34) {
          goto LABEL_108;
        }
        if (*((_DWORD *)this + 21) != 100)
        {
          CoreML::Specification::GLMClassifier::clear_ClassLabels((uint64_t)this);
          *((_DWORD *)this + 21) = 100;
          operator new();
        }
        BOOL v25 = (CoreML::Specification::StringVector *)*((void *)this + 9);
        uint64_t v28 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v28 < 0)
        {
          int v29 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v29 < 0) {
            return 0;
          }
        }
        else
        {
          int v29 = *v28;
          *(void *)a2 = v28 + 1;
        }
        int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29);
        int v38 = *((_DWORD *)a2 + 13);
        BOOL v33 = __OFSUB__(v38--, 1);
        *((_DWORD *)a2 + 13) = v38;
        if (v38 < 0 != v33) {
          return 0;
        }
        int v34 = v36;
        uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v25, (char **)a2, v37);
        if (!result) {
          return result;
        }
      }
      else
      {
        if (v13 != 101 || v11 != 42) {
          goto LABEL_108;
        }
        if (*((_DWORD *)this + 21) != 101)
        {
          CoreML::Specification::GLMClassifier::clear_ClassLabels((uint64_t)this);
          *((_DWORD *)this + 21) = 101;
          operator new();
        }
        uint64_t v18 = (CoreML::Specification::Int64Vector *)*((void *)this + 9);
        signed int v26 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
        {
          int v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v27 < 0) {
            return 0;
          }
        }
        else
        {
          int v27 = *v26;
          *(void *)a2 = v26 + 1;
        }
        int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
        int v32 = *((_DWORD *)a2 + 13);
        BOOL v33 = __OFSUB__(v32--, 1);
        *((_DWORD *)a2 + 13) = v32;
        if (v32 < 0 != v33) {
          return 0;
        }
        int v34 = v30;
        uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v18, a2, v31);
        if (!result) {
          return result;
        }
      }
LABEL_69:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v34)) {
        return 0;
      }
      goto LABEL_2;
  }
}

void sub_1DC0B23E0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GLMClassifier::clear_ClassLabels(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 84);
  if (v2 == 101 || v2 == 100)
  {
    this = *(void *)(this + 72);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 84) = 0;
  return this;
}

std::string *CoreML::Specification::GLMClassifier::MergeFrom(std::string *this, const CoreML::Specification::GLMClassifier *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v36 = *((void *)a2 + 4);
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 16), v5);
    uint64_t v35 = this;
    uint64_t v6 = **(int **)(v3 + 32);
    uint64_t v7 = *(int *)(v3 + 24);
    int v8 = v6 - v7;
    if ((int)v6 - (int)v7 >= v5) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v8;
    }
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)this;
      unint64_t v11 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v36 + 8);
      do
      {
        unsigned int v13 = *v11++;
        int v12 = v13;
        uint64_t v14 = *v10++;
        this = (std::string *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v12, v14);
        --v9;
      }
      while (v9);
    }
    if (v8 < v5)
    {
      int v15 = *(google::protobuf::Arena **)(v3 + 16);
      int v16 = v7 + v5 - v6;
      uint64_t v17 = 8 * v6 - 8 * v7;
      uint64_t v18 = (google::protobuf::Arena ***)((char *)v35 + v17);
      int v19 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v17 + v36 + 8);
      do
      {
        unsigned int v20 = *v19;
        if (!v15) {
          operator new();
        }
        CoreML::Specification::GLMClassifier_DoubleArray::GLMClassifier_DoubleArray((CoreML::Specification::GLMClassifier_DoubleArray *)Aligned);
        int v22 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        unint64_t *v22 = (google::protobuf::Arena *)Aligned;
        v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::GLMClassifier_DoubleArray>;
        unint64_t v23 = (unint64_t *)((char *)v15 + 32);
        do
          unint64_t v24 = __ldxr(v23);
        while (__stxr((unint64_t)v22, v23));
        v22[2] = (google::protobuf::Arena *)v24;
        this = (std::string *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v20, (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)Aligned);
        *v18++ = Aligned;
        ++v19;
        --v16;
      }
      while (v16);
    }
    int v25 = *(_DWORD *)(v3 + 24) + v5;
    *(_DWORD *)(v3 + 24) = v25;
    signed int v26 = *(int **)(v3 + 32);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  int v27 = *((_DWORD *)a2 + 10);
  if (v27)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 40), *(_DWORD *)(v3 + 40) + v27);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 48) + 8 * *(int *)(v3 + 40) + 8), (const void *)(*((void *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *(_DWORD *)(v3 + 40) += *((_DWORD *)a2 + 10);
  }
  int v28 = *((_DWORD *)a2 + 15);
  if (v28) {
    *(_DWORD *)(v3 + 6CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = v28;
  }
  int v29 = *((_DWORD *)a2 + 16);
  if (v29) {
    *(_DWORD *)(v3 + 64) = v29;
  }
  int v30 = *((_DWORD *)a2 + 21);
  if (v30 == 101)
  {
    if (*(_DWORD *)(v3 + 84) != 101)
    {
      CoreML::Specification::GLMClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 84) = 101;
      operator new();
    }
    int v34 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 9);
    int v32 = *(unint64_t **)(v3 + 72);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v32, v34);
  }
  else if (v30 == 100)
  {
    if (*(_DWORD *)(v3 + 84) != 100)
    {
      CoreML::Specification::GLMClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 84) = 100;
      operator new();
    }
    BOOL v33 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 9);
    unsigned int v31 = *(std::string **)(v3 + 72);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v31, v33);
  }
  return this;
}

void sub_1DC0B27F4(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GLMClassifier::IsInitialized(CoreML::Specification::GLMClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::GLMClassifier::Clear(uint64_t this)
{
  uint64_t v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    int v2 = (uint64_t *)(*(void *)(this + 32) + 8);
    do
    {
      uint64_t v3 = *v2++;
      *(_DWORD *)(v3 + 16) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 4CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = 0;
  *(void *)(this + 6CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = 0;
  return CoreML::Specification::GLMClassifier::clear_ClassLabels(this);
}

void CoreML::Specification::GLMClassifier::New(CoreML::Specification::GLMClassifier *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B28C8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40D1CF0537);
  _Unwind_Resume(a1);
}

CoreML::Specification::GLMClassifier *CoreML::Specification::GLMClassifier::GLMClassifier(CoreML::Specification::GLMClassifier *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F361B8F8;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = 0u;
  if (this != (CoreML::Specification::GLMClassifier *)&CoreML::Specification::_GLMClassifier_default_instance_) {
    CoreML::Specification::protobuf_GLMClassifier_2eproto::InitDefaults(this);
  }
  *(void *)((char *)this + 6CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = 0;
  *((void *)this + 1CoreML::Specification::CoreMLModels::SoundAnalysisPreprocessing_Vggish::New(this, 0) = 0;
  return this;
}

void sub_1DC0B2968(_Unwind_Exception *a1)
{
  int v5 = *(void **)(v2 + 48);
  if (v5)
  {
    if (!*v5) {
      operator delete(v5);
    }
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::GLMClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::GLMClassifier>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::GLMClassifier>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::GLMClassifier::New(CoreML::Specification::GLMClassifier *this)
{
}

void *CoreML::Specification::GLMClassifier::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GLMClassifier");
}

void CoreML::Specification::GLMClassifier::~GLMClassifier(CoreML::Specification::GLMClassifier *this)
{
  CoreML::Specification::GLMClassifier::~GLMClassifier(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F361B8F8;
  if (*((_DWORD *)this + 21)) {
    CoreML::Specification::GLMClassifier::clear_ClassLabels((uint64_t)this);
  }
  uint64_t v2 = (void *)*((void *)this + 6);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void CoreML::Specification::GLMClassifier_DoubleArray::New(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
}

void *CoreML::Specification::GLMClassifier_DoubleArray::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.GLMClassifier.DoubleArray");
}

void CoreML::Specification::GLMClassifier_DoubleArray::~GLMClassifier_DoubleArray(CoreML::Specification::GLMClassifier_DoubleArray *this)
{
  CoreML::Specification::GLMClassifier_DoubleArray::~GLMClassifier_DoubleArray(this);
  JUMPOUT(0x1E0198C00);
}

{
  void *v2;

  *(void *)this = &unk_1F36223D8;
  uint64_t v2 = (void *)*((void *)this + 3);
  if (v2 && !*v2) {
    operator delete(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Imputer::GetCachedSize(CoreML::Specification::Imputer *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::Imputer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 2)
  {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(2, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 3)
  {
    uint64_t v7 = *(unsigned int **)(v5 + 16);
    if (*((char *)v7 + 23) < 0)
    {
      uint64_t v7 = *(unsigned int **)v7;
      uint64_t v8 = *(void *)(*(void *)(v5 + 16) + 8);
    }
    else
    {
      LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.Imputer.imputedStringValue");
    if (*(_DWORD *)(v5 + 36) == 3) {
      uint64_t v9 = *(uint64_t **)(v5 + 16);
    }
    else {
      uint64_t v9 = &google::protobuf::internal::fixed_address_empty_string;
    }
    this = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3u, (uint64_t)v9, a2);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 4)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(4, *(void *)(v5 + 16), a2);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 5)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(5, *(void *)(v5 + 16), a2);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 6)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(6, *(void *)(v5 + 16), a2);
    int v6 = *(_DWORD *)(v5 + 36);
  }
  if (v6 == 7) {
    this = google::protobuf::internal::WireFormatLite::WriteMessage(7, *(void *)(v5 + 16), a2);
  }
  int v10 = *(_DWORD *)(v5 + 40);
  if (v10 == 11)
  {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0xB, a2, *(double *)(v5 + 24), a3);
    int v10 = *(_DWORD *)(v5 + 40);
  }
  if (v10 == 12)
  {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(12, *(void *)(v5 + 24), a2, a4);
    int v10 = *(_DWORD *)(v5 + 40);
  }
  if (v10 == 13)
  {
    unint64_t v11 = *(unsigned int **)(v5 + 24);
    if (*((char *)v11 + 23) < 0)
    {
      unint64_t v11 = *(unsigned int **)v11;
      uint64_t v12 = *(void *)(*(void *)(v5 + 24) + 8);
    }
    else
    {
      LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.Imputer.replaceStringValue");
    if (*(_DWORD *)(v5 + 40) == 13) {
      unsigned int v13 = *(uint64_t **)(v5 + 24);
    }
    else {
      unsigned int v13 = &google::protobuf::internal::fixed_address_empty_string;
    }
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xDu, (uint64_t)v13, a2);
  }
  return this;
}

uint64_t CoreML::Specification::Imputer::ByteSizeLong(CoreML::Specification::Imputer *this)
{
  switch(*((_DWORD *)this + 9))
  {
    case 1:
      uint64_t v2 = 9;
      break;
    case 2:
      unint64_t v3 = (9 * (__clz(*((void *)this + 2) | 1) ^ 0x3F) + 73) >> 6;
      goto LABEL_18;
    case 3:
      uint64_t v4 = *((void *)this + 2);
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      unint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_18;
    case 4:
      uint64_t v7 = (unsigned int *)*((void *)this + 2);
      uint64_t v8 = v7[4];
      uint64_t v9 = 8 * v8;
      if (v8)
      {
        if ((v9 & 0x80000000) != 0) {
          uint64_t v10 = 11;
        }
        else {
          uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v10 = 0;
      }
      uint64_t v12 = v10 + v9;
      unsigned char v7[8] = v9;
      v7[9] = v12;
      unint64_t v3 = v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_18;
    case 5:
      uint64_t v11 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 2));
      goto LABEL_14;
    case 6:
      uint64_t v11 = CoreML::Specification::StringToDoubleMap::ByteSizeLong(*((CoreML::Specification::StringToDoubleMap **)this
                                                                   + 2));
      goto LABEL_14;
    case 7:
      uint64_t v11 = CoreML::Specification::Int64ToDoubleMap::ByteSizeLong(*((CoreML::Specification::Int64ToDoubleMap **)this + 2));
LABEL_14:
      unint64_t v3 = v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
LABEL_18:
      uint64_t v2 = v3 + 1;
      break;
    default:
      uint64_t v2 = 0;
      break;
  }
  int v13 = *((_DWORD *)this + 10);
  switch(v13)
  {
    case 13:
      uint64_t v15 = *((void *)this + 3);
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v17 = *(void *)(v15 + 8);
      if ((v16 & 0x80u) == 0) {
        uint64_t v17 = v16;
      }
      uint64_t v18 = v2 + v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_28;
    case 12:
      uint64_t v18 = v2 + ((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6);
LABEL_28:
      uint64_t result = v18 + 1;
      break;
    case 11:
      uint64_t result = v2 + 9;
      break;
    default:
      uint64_t result = v2;
      break;
  }
  *((_DWORD *)this + 8) = result;
  return result;
}

uint64_t CoreML::Specification::Imputer::MergePartialFromCodedStream(CoreML::Specification::Imputer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v8) = 0;
LABEL_7:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      unint64_t v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v9 & 0x100000000) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 9) {
            goto LABEL_8;
          }
          CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
          unint64_t v56 = 0;
          uint64_t v12 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v56);
            if (!result) {
              return result;
            }
            unint64_t v13 = v56;
          }
          else
          {
            unint64_t v13 = *v12;
            *(void *)a2 = v12 + 1;
          }
          *((void *)this + 2) = v13;
          *((_DWORD *)this + 9) = 1;
          continue;
        case 2u:
          if (v9 != 16) {
            goto LABEL_8;
          }
          CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
          uint64_t v14 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v14 < 0)
          {
            Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v39 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacint k = *v14;
            *(void *)a2 = v14 + 1;
          }
          *((void *)this + 2) = Varint64Fallback;
          *((_DWORD *)this + 9) = 2;
          continue;
        case 3u:
          if (v9 != 26) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 3)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 3;
            *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_52:
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_52;
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v6);
          if (!result) {
            return result;
          }
          int v25 = *((_DWORD *)this + 9);
          signed int v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v25 == 3) {
            signed int v26 = *v6;
          }
          if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
            signed int v26 = (std::string *)v26->__r_.__value_.__r.__words[0];
          }
          int v27 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v25 == 3) {
            int v27 = *v6;
          }
          if (SHIBYTE(v27->__r_.__value_.__r.__words[2]) < 0) {
            std::string::size_type size = v27->__r_.__value_.__l.__size_;
          }
          else {
            LODWORD(size) = HIBYTE(v27->__r_.__value_.__r.__words[2]);
          }
          unsigned int v55 = "CoreML.Specification.Imputer.imputedStringValue";
          goto LABEL_114;
        case 4u:
          if (v9 != 34) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 4)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 4;
            operator new();
          }
          uint64_t v16 = *v6;
          int v29 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v29 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v29;
            *(void *)a2 = v29 + 1;
          }
          int v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v43 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v43--, 1);
          *((_DWORD *)a2 + 13) = v43;
          if (v43 < 0 != v44) {
            return 0;
          }
          int v45 = v41;
          uint64_t result = CoreML::Specification::DoubleVector::MergePartialFromCodedStream((CoreML::Specification::DoubleVector *)v16, (char **)a2, v42);
          if (!result) {
            return result;
          }
          goto LABEL_108;
        case 5u:
          if (v9 != 42) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 5)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 5;
            operator new();
          }
          uint64_t v17 = *v6;
          unsigned int v31 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
          {
            int v32 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v32 < 0) {
              return 0;
            }
          }
          else
          {
            int v32 = *v31;
            *(void *)a2 = v31 + 1;
          }
          int v46 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
          int v48 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v48--, 1);
          *((_DWORD *)a2 + 13) = v48;
          if (v48 < 0 != v44) {
            return 0;
          }
          int v45 = v46;
          uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream((CoreML::Specification::Int64Vector *)v17, a2, v47);
          if (!result) {
            return result;
          }
          goto LABEL_108;
        case 6u:
          if (v9 != 50) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 6)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 6;
            operator new();
          }
          uint64_t v18 = *v6;
          BOOL v33 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v33 < 0)
          {
            int v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v34 < 0) {
              return 0;
            }
          }
          else
          {
            int v34 = *v33;
            *(void *)a2 = v33 + 1;
          }
          int v49 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
          int v51 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v51--, 1);
          *((_DWORD *)a2 + 13) = v51;
          if (v51 < 0 != v44) {
            return 0;
          }
          int v45 = v49;
          uint64_t result = CoreML::Specification::StringToDoubleMap::MergePartialFromCodedStream((CoreML::Specification::StringToDoubleMap *)v18, a2, v50);
          if (!result) {
            return result;
          }
          goto LABEL_108;
        case 7u:
          if (v9 != 58) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 9) != 7)
          {
            CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
            *((_DWORD *)this + 9) = 7;
            operator new();
          }
          int v19 = *v6;
          uint64_t v35 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
          {
            int v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v36 < 0) {
              return 0;
            }
          }
          else
          {
            int v36 = *v35;
            *(void *)a2 = v35 + 1;
          }
          int v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
          int v54 = *((_DWORD *)a2 + 13);
          BOOL v44 = __OFSUB__(v54--, 1);
          *((_DWORD *)a2 + 13) = v54;
          if (v54 < 0 != v44) {
            return 0;
          }
          int v45 = v52;
          uint64_t result = CoreML::Specification::Int64ToDoubleMap::MergePartialFromCodedStream((CoreML::Specification::Int64ToDoubleMap *)v19, a2, v53);
          if (!result) {
            return result;
          }
LABEL_108:
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v45)) {
            continue;
          }
          return 0;
        case 0xBu:
          if (v9 != 89) {
            goto LABEL_8;
          }
          CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
          unint64_t v56 = 0;
          unsigned int v20 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v56);
            if (!result) {
              return result;
            }
            unint64_t v21 = v56;
          }
          else
          {
            unint64_t v21 = *v20;
            *(void *)a2 = v20 + 1;
          }
          *((void *)this + 3) = v21;
          *((_DWORD *)this + 1CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 11;
          break;
        case 0xCu:
          if (v9 != 96) {
            goto LABEL_8;
          }
          CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
          int v22 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
          {
            unint64_t v23 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v40 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v23 = *v22;
            *(void *)a2 = v22 + 1;
          }
          *((void *)this + 3) = v23;
          *((_DWORD *)this + 1CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 12;
          continue;
        case 0xDu:
          if (v9 != 106) {
            goto LABEL_8;
          }
          if (*((_DWORD *)this + 10) != 13)
          {
            CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
            *((_DWORD *)this + 1CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 13;
            *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_79:
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_79;
          }
          uint64_t result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
          if (!result) {
            return result;
          }
          int v37 = *((_DWORD *)this + 10);
          signed int v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v37 == 13) {
            signed int v26 = *v5;
          }
          if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
            signed int v26 = (std::string *)v26->__r_.__value_.__r.__words[0];
          }
          int v38 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
          if (v37 == 13) {
            int v38 = *v5;
          }
          if (SHIBYTE(v38->__r_.__value_.__r.__words[2]) < 0) {
            std::string::size_type size = v38->__r_.__value_.__l.__size_;
          }
          else {
            LODWORD(size) = HIBYTE(v38->__r_.__value_.__r.__words[2]);
          }
          unsigned int v55 = "CoreML.Specification.Imputer.replaceStringValue";
LABEL_114:
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v26, size, 0, (uint64_t)v55)) {
            return 0;
          }
          continue;
        default:
          goto LABEL_8;
      }
    }
    uint64_t v8 = *v7;
    if (*v7 < 1) {
      goto LABEL_7;
    }
    *(void *)a2 = v7 + 1;
    unint64_t v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0) {
      goto LABEL_14;
    }
LABEL_8:
    if (!v9 || (v9 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0B3644(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Imputer::clear_ImputedValue(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 36))
  {
    case 3:
      uint64_t v2 = *(void *)(this + 16);
      if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
      {
        if (*(char *)(v2 + 23) < 0) {
          operator delete(*(void **)v2);
        }
        this = MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
      }
      break;
    case 4:
    case 5:
    case 6:
    case 7:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreML::Specification::Imputer::clear_ReplaceValue(uint64_t this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)(this + 40) == 13)
  {
    uint64_t v2 = *(void *)(this + 24);
    if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      this = MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 4CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 0;
  return this;
}

std::string *CoreML::Specification::Imputer::MergeFrom(std::string *this, const CoreML::Specification::Imputer *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 9))
  {
    case 1:
      uint64_t v5 = *((void *)a2 + 2);
      if (*(_DWORD *)(v3 + 36) != 1)
      {
        this = (std::string *)CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 1;
      }
      *(void *)(v3 + 16) = v5;
      goto LABEL_27;
    case 2:
      uint64_t v6 = *((void *)a2 + 2);
      if (*(_DWORD *)(v3 + 36) != 2)
      {
        this = (std::string *)CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 2;
      }
      *(void *)(v3 + 16) = v6;
      goto LABEL_27;
    case 3:
      uint64_t v7 = *((void *)a2 + 2);
      if (*(_DWORD *)(v3 + 36) != 3)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 3;
        *(void *)(v3 + 16) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_22:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v3 + 16, v7);
      }
      uint64_t v8 = *(std::string **)(v3 + 16);
      if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_22;
      }
      this = std::string::operator=(v8, *((const std::string **)a2 + 2));
LABEL_27:
      int v9 = *((_DWORD *)a2 + 10);
      if (v9 != 13)
      {
        if (v9 == 12)
        {
          uint64_t v13 = *((void *)a2 + 3);
          if (*(_DWORD *)(v3 + 40) != 12)
          {
            this = (std::string *)CoreML::Specification::Imputer::clear_ReplaceValue(v3);
            *(_DWORD *)(v3 + 4CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 12;
          }
          *(void *)(v3 + 24) = v13;
        }
        else if (v9 == 11)
        {
          uint64_t v10 = *((void *)a2 + 3);
          if (*(_DWORD *)(v3 + 40) != 11)
          {
            this = (std::string *)CoreML::Specification::Imputer::clear_ReplaceValue(v3);
            *(_DWORD *)(v3 + 4CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 11;
          }
          *(void *)(v3 + 24) = v10;
        }
        return this;
      }
      uint64_t v11 = (const std::string *)*((void *)a2 + 3);
      if (*(_DWORD *)(v3 + 40) != 13)
      {
        CoreML::Specification::Imputer::clear_ReplaceValue(v3);
        *(_DWORD *)(v3 + 4CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 13;
        *(void *)(v3 + 24) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_43:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v3 + 24, (uint64_t)v11);
      }
      uint64_t v12 = *(std::string **)(v3 + 24);
      if (v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_43;
      }
      return std::string::operator=(v12, v11);
    case 4:
      if (*(_DWORD *)(v3 + 36) != 4)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 4;
        operator new();
      }
      goto LABEL_14;
    case 5:
      if (*(_DWORD *)(v3 + 36) != 5)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 5;
        operator new();
      }
LABEL_14:
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(*(unint64_t **)(v3 + 16), *((const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)a2 + 2));
      goto LABEL_27;
    case 6:
      if (*(_DWORD *)(v3 + 36) != 6)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 6;
        operator new();
      }
      this = (std::string *)CoreML::Specification::StringToDoubleMap::MergeFrom(*(CoreML::Specification::StringToDoubleMap **)(v3 + 16), *((const CoreML::Specification::StringToDoubleMap **)a2 + 2));
      goto LABEL_27;
    case 7:
      if (*(_DWORD *)(v3 + 36) != 7)
      {
        CoreML::Specification::Imputer::clear_ImputedValue(v3);
        *(_DWORD *)(v3 + 36) = 7;
        operator new();
      }
      this = (std::string *)CoreML::Specification::Int64ToDoubleMap::MergeFrom(*(CoreML::Specification::Int64ToDoubleMap **)(v3 + 16), *((const CoreML::Specification::Int64ToDoubleMap **)a2 + 2));
      goto LABEL_27;
    default:
      goto LABEL_27;
  }
}

void sub_1DC0B3BF0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Imputer::IsInitialized(CoreML::Specification::Imputer *this)
{
  return 1;
}

uint64_t CoreML::Specification::Imputer::Clear(CoreML::Specification::Imputer *this)
{
  CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
  return CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
}

void CoreML::Specification::Imputer::New(CoreML::Specification::Imputer *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B3CE0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40D8CFA532);
  _Unwind_Resume(a1);
}

CoreML::Specification::Imputer *CoreML::Specification::Imputer::Imputer(CoreML::Specification::Imputer *this)
{
  *(void *)this = &unk_1F3625228;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Imputer *)&CoreML::Specification::_Imputer_default_instance_) {
    CoreML::Specification::protobuf_Imputer_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::GLMClassifier_DoubleArray::New(this, 0) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0B3D68(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Imputer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Imputer>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Imputer>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Imputer_2eproto::InitDefaults(CoreML::Specification::protobuf_Imputer_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_Imputer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_Imputer_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Imputer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Imputer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Imputer_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  uint64_t result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_Imputer_default_instance_ = (uint64_t)&unk_1F3625228;
  unk_1EC001920 = 0;
  dword_1EC001940 = 0;
  qword_1EC001938 = 0;
  byte_1EC001948 = 1;
  return result;
}

void CoreML::Specification::Imputer::New(CoreML::Specification::Imputer *this)
{
}

void *CoreML::Specification::Imputer::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Imputer");
}

void CoreML::Specification::Imputer::~Imputer(CoreML::Specification::Imputer *this)
{
  CoreML::Specification::Imputer::~Imputer(this);
  JUMPOUT(0x1E0198C00);
}

{
  *(void *)this = &unk_1F3625228;
  if (*((_DWORD *)this + 9)) {
    CoreML::Specification::Imputer::clear_ImputedValue((uint64_t)this);
  }
  if (*((_DWORD *)this + 10)) {
    CoreML::Specification::Imputer::clear_ReplaceValue((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::GetCachedSize(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6 == 10)
  {
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0xA, a2, *(double *)(this + 16), a3);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 20)
  {
    uint64_t v7 = *(unsigned int **)(v5 + 16);
    if (*((char *)v7 + 23) < 0)
    {
      uint64_t v7 = *(unsigned int **)v7;
      uint64_t v8 = *(void *)(*(void *)(v5 + 16) + 8);
    }
    else
    {
      LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.CustomModel.CustomModelParamValue.stringValue");
    if (*(_DWORD *)(v5 + 28) == 20) {
      int v9 = *(uint64_t **)(v5 + 16);
    }
    else {
      int v9 = &google::protobuf::internal::fixed_address_empty_string;
    }
    this = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, (uint64_t)v9, a2);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 30)
  {
    this = google::protobuf::internal::WireFormatLite::WriteInt32(30, *(_DWORD *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 40)
  {
    this = google::protobuf::internal::WireFormatLite::WriteInt64(40, *(void *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 50)
  {
    this = google::protobuf::internal::WireFormatLite::WriteBool(50, *(unsigned __int8 *)(v5 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 60)
  {
    uint64_t v10 = *(void *)(v5 + 16);
    return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x3Cu, v10, a2);
  }
  return this;
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::ByteSizeLong(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  uint64_t v1 = 0;
  int v2 = *((_DWORD *)this + 7);
  if (v2 <= 39)
  {
    if (v2 == 10)
    {
      uint64_t v1 = 9;
      goto LABEL_18;
    }
    if (v2 != 20)
    {
      if (v2 == 30)
      {
        int v3 = *((_DWORD *)this + 4);
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
        if (v3 >= 0) {
          uint64_t v1 = v4;
        }
        else {
          uint64_t v1 = 12;
        }
      }
      goto LABEL_18;
    }
    goto LABEL_11;
  }
  switch(v2)
  {
    case '(':
      unint64_t v8 = (9 * (__clz(*((void *)this + 2) | 1) ^ 0x3F) + 73) >> 6;
LABEL_16:
      uint64_t v1 = v8 + 2;
      break;
    case '2':
      uint64_t v1 = 3;
      break;
    case '<':
LABEL_11:
      uint64_t v5 = *((void *)this + 2);
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      unint64_t v8 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_16;
  }
LABEL_18:
  *((_DWORD *)this + 6) = v1;
  return v1;
}

BOOL CoreML::Specification::CustomModel_CustomModelParamValue::MergePartialFromCodedStream(CoreML::Specification::CustomModel_CustomModelParamValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (std::string **)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = *(unsigned __int8 **)a2;
        unint64_t v7 = *((void *)a2 + 1);
        if (*(void *)a2 >= v7)
        {
          LODWORD(v9) = 0;
        }
        else
        {
          unint64_t v8 = v6 + 1;
          uint64_t v9 = *v6;
          if ((char)*v6 >= 1)
          {
            *(void *)a2 = v8;
            unint64_t v10 = v9 | 0x100000000;
            if ((v10 & 0x100000000) == 0) {
              goto LABEL_9;
            }
            goto LABEL_17;
          }
          if ((unint64_t)v8 < v7)
          {
            int v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(void *)a2 = v6 + 2;
              unint64_t v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
        unint64_t v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v10 & 0x100000000) == 0) {
          goto LABEL_9;
        }
LABEL_17:
        unsigned int v14 = v10 >> 3;
        if (v10 >> 3 <= 0x27) {
          break;
        }
        if (v14 == 40)
        {
          if (v10 != 64) {
            goto LABEL_9;
          }
          CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
          int v19 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
          {
            Varint64Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            Varint64Fallbacint k = *v19;
            *(void *)a2 = v19 + 1;
          }
          void *v5 = (std::string *)Varint64Fallback;
          goto LABEL_73;
        }
        if (v14 == 50)
        {
          if (v10 != 144) {
            goto LABEL_9;
          }
          CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
          unint64_t v21 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v21 < 0)
          {
            unint64_t v22 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0) {
              return 0;
            }
          }
          else
          {
            unint64_t v22 = *v21;
            *(void *)a2 = v21 + 1;
          }
          *(unsigned char *)uint64_t v5 = v22 != 0;
LABEL_73:
          *((_DWORD *)this + 7) = v14;
        }
        else
        {
          if (v14 != 60 || v10 != 226) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 7) != 60)
          {
            CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
            *((_DWORD *)this + 7) = 60;
            *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_49:
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            goto LABEL_49;
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5)) {
            return 0;
          }
        }
      }
      if (v14 == 10)
      {
        if (v10 != 81) {
          goto LABEL_9;
        }
        CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
        unint64_t v31 = 0;
        uint64_t v17 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v31);
          if (!result) {
            return result;
          }
          unint64_t v18 = v31;
        }
        else
        {
          unint64_t v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        void *v5 = (std::string *)v18;
        goto LABEL_73;
      }
      if (v14 == 20) {
        break;
      }
      if (v14 == 30 && v10 == 240)
      {
        CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
        uint64_t v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1))
        {
          int v16 = 0;
        }
        else
        {
          int v16 = *v15;
          if ((*v15 & 0x80000000) == 0)
          {
            *(void *)a2 = v15 + 1;
LABEL_72:
            *(_DWORD *)uint64_t v5 = v16;
            goto LABEL_73;
          }
        }
        Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
        int v16 = Varint32Fallback;
        if (Varint32Fallback < 0) {
          return 0;
        }
        goto LABEL_72;
      }
LABEL_9:
      if (v10) {
        BOOL v12 = (v10 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0) {
        return 0;
      }
    }
    if (v10 != 162) {
      goto LABEL_9;
    }
    if (*((_DWORD *)this + 7) != 20)
    {
      CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
      *((_DWORD *)this + 7) = 20;
      *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_53:
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
    }
    if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_53;
    }
    BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v5);
    if (!result) {
      return result;
    }
    int v24 = *((_DWORD *)this + 7);
    int v25 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      int v25 = *v5;
    }
    if (SHIBYTE(v25->__r_.__value_.__r.__words[2]) < 0) {
      int v25 = (std::string *)v25->__r_.__value_.__r.__words[0];
    }
    signed int v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    if (v24 == 20) {
      signed int v26 = *v5;
    }
    if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = v26->__r_.__value_.__l.__size_;
    }
    else {
      LODWORD(size) = HIBYTE(v26->__r_.__value_.__r.__words[2]);
    }
  }
  while (google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v25, size, 0, (uint64_t)"CoreML.Specification.CustomModel.CustomModelParamValue.stringValue"));
  return 0;
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 28);
  if (v2 == 60 || v2 == 20)
  {
    uint64_t v3 = *(void *)(this + 16);
    if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string && v3 != 0)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      this = MEMORY[0x1E0198C00](v3, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

std::string *CoreML::Specification::CustomModel_CustomModelParamValue::MergeFrom(std::string *this, const CoreML::Specification::CustomModel_CustomModelParamValue *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 7);
  if (v5 > 39)
  {
    switch(v5)
    {
      case '(':
        uint64_t v10 = *((void *)a2 + 2);
        if (*(_DWORD *)(v3 + 28) != 40)
        {
          this = (std::string *)CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 40;
        }
        *(void *)(v3 + 16) = v10;
        break;
      case '2':
        char v12 = *((unsigned char *)a2 + 16);
        if (*(_DWORD *)(v3 + 28) != 50)
        {
          this = (std::string *)CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
          *(_DWORD *)(v3 + 28) = 50;
        }
        *(unsigned char *)(v3 + 16) = v12;
        break;
      case '<':
        unint64_t v7 = (const std::string *)*((void *)a2 + 2);
        if (*(_DWORD *)(v3 + 28) == 60) {
          goto LABEL_22;
        }
        CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
        int v8 = 60;
        goto LABEL_31;
      default:
        return this;
    }
  }
  else
  {
    if (v5 != 10)
    {
      if (v5 != 20)
      {
        if (v5 == 30)
        {
          int v6 = *((_DWORD *)a2 + 4);
          if (*(_DWORD *)(v3 + 28) != 30)
          {
            this = (std::string *)CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
            *(_DWORD *)(v3 + 28) = 30;
          }
          *(_DWORD *)(v3 + 16) = v6;
        }
        return this;
      }
      unint64_t v7 = (const std::string *)*((void *)a2 + 2);
      if (*(_DWORD *)(v3 + 28) == 20)
      {
LABEL_22:
        int v11 = *(std::string **)(v3 + 16);
        if (v11 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          return std::string::operator=(v11, v7);
        }
LABEL_32:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v3 + 16, (uint64_t)v7);
      }
      CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
      int v8 = 20;
LABEL_31:
      *(_DWORD *)(v3 + 28) = v8;
      *(void *)(v3 + 16) = &google::protobuf::internal::fixed_address_empty_string;
      goto LABEL_32;
    }
    uint64_t v9 = *((void *)a2 + 2);
    if (*(_DWORD *)(v3 + 28) != 10)
    {
      this = (std::string *)CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(v3);
      *(_DWORD *)(v3 + 28) = 10;
    }
    *(void *)(v3 + 16) = v9;
  }
  return this;
}

uint64_t CoreML::Specification::CustomModel_CustomModelParamValue::IsInitialized(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  return 1;
}

void CoreML::Specification::CustomModel_CustomModelParamValue::New(CoreML::Specification::CustomModel_CustomModelParamValue *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B47E0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CustomModel_CustomModelParamValue *CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  *(void *)this = &unk_1F3624778;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::CustomModel_CustomModelParamValue *)&CoreML::Specification::_CustomModel_CustomModelParamValue_default_instance_) {
    CoreML::Specification::protobuf_CustomModel_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC0B4864(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CustomModel_CustomModelParamValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomModel_CustomModelParamValue>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_CustomModel_2eproto::InitDefaults(CoreML::Specification::protobuf_CustomModel_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_CustomModel_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_CustomModel_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_CustomModel_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

void CoreML::Specification::protobuf_CustomModel_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_CustomModel_2eproto::TableStruct *this)
{
  CoreML::Specification::_CustomModel_CustomModelParamValue_default_instance_ = (uint64_t)&unk_1F3624778;
  unk_1EC005A68 = 0;
  qword_1EC005A78 = 0;
  byte_1EC005A80 = 1;
  qword_1EC005290 = 0;
  unk_1EC005298 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EC0052A0 = 0;
  unk_1EC0052A8 = 0;
  dword_1EC0052B0 = 0;
  CoreML::Specification::_CustomModel_ParametersEntry_default_instance_ = (uint64_t)&unk_1F3627988;
  byte_1EC0052B8 = 1;
  CoreML::Specification::CustomModel::CustomModel((CoreML::Specification::CustomModel *)&CoreML::Specification::_CustomModel_default_instance_);
}

void CoreML::Specification::CustomModel::CustomModel(CoreML::Specification::CustomModel *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361A4C8;
  *((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  operator new();
}

void sub_1DC0B4AD0(_Unwind_Exception *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::~Map(void *a1)
{
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::clear(a1);
  if (!*a1)
  {
    uint64_t v2 = a1[2];
    if (v2)
    {
      uint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x1E0198C00](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::clear(void *a1)
{
  unint64_t v1 = (void *)a1[2];
  unint64_t v2 = v1[3];
  unint64_t v3 = v1[1];
  if (v3 > v2)
  {
    uint64_t v5 = v1[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return;
      }
    }
    if (v6 != *(void *)(v5 + 8 * (v2 ^ 1)) || (uint64_t v6 = *(void *)(*(void *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        void v7[2] = v2;
        google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase((uint64_t)v8, a1, v7);
        uint64_t v6 = v8[0];
        unint64_t v1 = (void *)v8[1];
        unint64_t v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

__n128 google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  if (!*a2)
  {
    uint64_t v7 = *(void *)(v6 + 24);
    if (v7)
    {
      CoreML::Specification::CustomModel_CustomModelParamValue::~CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)(v7 + 24));
      if (*(char *)(v7 + 23) < 0) {
        operator delete(*(void **)v7);
      }
      MEMORY[0x1E0198C00](v7, 0x10B2C4015637A22);
      uint64_t v6 = *a3;
    }
  }
  __n128 v27 = *(__n128 *)a3;
  unint64_t v28 = a3[2];
  uint64_t v8 = *(void *)(v6 + 32);
  if (v8) {
    goto LABEL_7;
  }
  char v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    unint64_t v9 = a3[2] + 1;
  }
  else
  {
    uint64_t v10 = a3[2];
    uint64_t v11 = *(void *)(*(void *)(a3[1] + 32) + 8 * v10);
    uint64_t v12 = (uint64_t)v29;
    uint64_t v13 = (void *)v29[1];
    if (v13)
    {
      do
      {
        unsigned int v14 = v13;
        uint64_t v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        unsigned int v14 = *(void **)(v12 + 16);
        BOOL v15 = *v14 == v12;
        uint64_t v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    char v29 = v14;
    if (v14 != (void *)(v11 + 8))
    {
      uint64_t v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    unint64_t v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  int v16 = (void *)a2[2];
  char v29 = 0;
  BOOL v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  unint64_t v18 = v28;
  int v19 = (void **)v27.n128_u64[0];
  uint64_t v20 = v16[4];
  uint64_t v21 = *(void *)(v20 + 8 * v28);
  if (v17)
  {
    uint64_t v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(void *)(v20 + 8 * v28));
LABEL_25:
    *(void *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  unint64_t v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (void *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23) {
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  }
  if (!*(void *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (void **)v21);
    uint64_t v22 = 0;
    *(void *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    unint64_t v25 = v16[1];
    if (v18 < v25)
    {
      uint64_t v26 = v16[4];
      do
      {
        if (*(void *)(v26 + 8 * v18)) {
          break;
        }
        void v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  __n128 result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = a3[2];
  return result;
}

void CoreML::Specification::CustomModel_CustomModelParamValue::~CustomModel_CustomModelParamValue(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
  *(void *)this = &unk_1F3624778;
  if (*((_DWORD *)this + 7)) {
    CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  CoreML::Specification::CustomModel_CustomModelParamValue::~CustomModel_CustomModelParamValue(this);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::InnerMap::InnerMap(void *a1, google::protobuf::Arena *a2)
{
  *a1 = 0;
  char v4 = std::random_device::random_device[abi:ne180100](&v13);
  unsigned int v5 = MEMORY[0x1E0198A40](v4);
  unsigned int v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1) {
    unsigned int v6 = 1;
  }
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  long long v11 = xmmword_1DC160E40;
  uint64_t v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  unint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)unint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1DC0B4F48(void *a1)
{
  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1DC0B4F04);
}

uint64_t CoreML::Specification::CustomModel::GetCachedSize(CoreML::Specification::CustomModel *this)
{
  return *((unsigned int *)this + 16);
}

uint64_t CoreML::Specification::CustomModel::SerializeWithCachedSizes(CoreML::Specification::CustomModel *this, google::protobuf::io::CodedOutputStream *a2)
{
  char v4 = (unsigned int *)*((void *)this + 6);
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v5 = *((void *)v4 + 1);
    if (!v5) {
      goto LABEL_7;
    }
    char v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((unsigned char *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.CustomModel.className");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((void *)this + 6), a2);
  }
LABEL_7:
  unsigned int v6 = (unint64_t *)*((void *)this + 5);
  unint64_t v7 = *v6;
  if (*v6)
  {
    if (*((unsigned char *)a2 + 26))
    {
      if (v7 >= 2 && *((unsigned char *)a2 + 27) != 0) {
        goto LABEL_30;
      }
    }
    else if (v7 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
    {
LABEL_30:
      operator new[]();
    }
    google::protobuf::Map<std::string,std::string>::begin(v16, v6);
    uint64_t v9 = 0;
    while (v16[0])
    {
      uint64_t v10 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v16[0] + 3), (google::protobuf::Arena *)(*((void *)v16[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
      if ((google::protobuf::Arena **)v9 != v10)
      {
        if (v9) {
          (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        }
        uint64_t v9 = (uint64_t)v10;
      }
      google::protobuf::internal::WireFormatLite::WriteMessage(30, v9, a2);
      long long v11 = (unsigned int *)*((void *)v16[0] + 3);
      if (*((char *)v11 + 23) < 0)
      {
        long long v11 = *(unsigned int **)v11;
        uint64_t v12 = *(void *)(*((void *)v16[0] + 3) + 8);
      }
      else
      {
        LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.CustomModel.ParametersEntry.key");
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v16);
    }
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  uint64_t result = *((void *)this + 7);
  if (*(char *)(result + 23) < 0)
  {
    uint64_t v15 = *(void *)(result + 8);
    if (!v15) {
      return result;
    }
    uint64_t result = *(void *)result;
    goto LABEL_36;
  }
  LODWORD(v15) = *(unsigned __int8 *)(result + 23);
  if (*(unsigned char *)(result + 23))
  {
LABEL_36:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v15, 1, (uint64_t)"CoreML.Specification.CustomModel.description");
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x28u, *((void *)this + 7), a2);
  }
  return result;
}

void sub_1DC0B52C0(_Unwind_Exception *a1)
{
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  MEMORY[0x1E0198BE0](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  size_t v8 = (char *)result;
  while (2)
  {
    v95 = a2 - 8;
    int v91 = a2 - 24;
    int v92 = a2 - 16;
    uint64_t v9 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v10 = (unint64_t)v9;
          uint64_t v11 = a2 - v9;
          uint64_t v12 = (a2 - v9) >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                int v41 = *(void **)v95;
                unsigned int v42 = *(void **)v9;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v95, *(void **)v9);
                if (result)
                {
                  *(void *)uint64_t v9 = v41;
                  *(void *)v95 = v42;
                }
                break;
              case 3:
                uint64_t result = std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v95);
                break;
              case 4:
                uint64_t result = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v95);
                break;
              case 5:
                uint64_t result = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v9 + 1, (void **)v9 + 2, (void **)v9 + 3, (void **)v95);
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            int v43 = v9 + 8;
            BOOL v45 = v9 == a2 || v43 == a2;
            if (a4)
            {
              if (!v45)
              {
                uint64_t v46 = 0;
                unsigned int v47 = v9;
                do
                {
                  int v49 = *(void **)v47;
                  int v48 = (void *)*((void *)v47 + 1);
                  unsigned int v47 = v43;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                  if (result)
                  {
                    uint64_t v50 = v46;
                    while (1)
                    {
                      *(void *)&v9[v50 + 8] = v49;
                      if (!v50) {
                        break;
                      }
                      int v49 = *(void **)&v9[v50 - 8];
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v48, v49);
                      v50 -= 8;
                      if ((result & 1) == 0)
                      {
                        int v51 = &v9[v50 + 8];
                        goto LABEL_80;
                      }
                    }
                    int v51 = v9;
LABEL_80:
                    *(void *)int v51 = v48;
                  }
                  int v43 = v47 + 8;
                  v46 += 8;
                }
                while (v47 + 8 != a2);
              }
            }
            else if (!v45)
            {
              do
              {
                v87 = *(void **)v10;
                int v86 = *(void **)(v10 + 8);
                unint64_t v10 = (unint64_t)v43;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                if (result)
                {
                  int v88 = (void *)v10;
                  do
                  {
                    void *v88 = v87;
                    v87 = (void *)*(v88 - 2);
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](v86, v87);
                    --v88;
                  }
                  while ((result & 1) != 0);
                  void *v88 = v86;
                }
                int v43 = (char *)(v10 + 8);
              }
              while ((char *)(v10 + 8) != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v9 != a2)
            {
              int v98 = v9;
              int64_t v52 = (unint64_t)(v12 - 2) >> 1;
              int64_t v53 = v52;
              long long v89 = a2;
              uint64_t v90 = a2 - v9;
              do
              {
                int64_t v54 = v53;
                if (v11 >= 16 && v52 >= v53)
                {
                  uint64_t v55 = (2 * v53) | 1;
                  unint64_t v56 = &v98[8 * v55];
                  uint64_t v57 = 2 * v53 + 2;
                  int64_t v96 = v53;
                  if (v57 < v12)
                  {
                    int v58 = *(void **)v56;
                    unint64_t v60 = (void *)*((void *)v56 + 1);
                    BOOL v59 = std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v60);
                    if (v59) {
                      v56 += 8;
                    }
                    else {
                      unint64_t v60 = v58;
                    }
                    if (v59) {
                      uint64_t v55 = v57;
                    }
                  }
                  else
                  {
                    unint64_t v60 = *(void **)v56;
                  }
                  uint64_t v61 = &v98[8 * v54];
                  signed int v62 = *(void **)v61;
                  uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, *(void **)v61);
                  uint64_t v11 = v90;
                  if ((result & 1) == 0)
                  {
                    do
                    {
                      uint64_t v63 = v56;
                      *(void *)uint64_t v61 = v60;
                      if (v52 < v55) {
                        break;
                      }
                      uint64_t v64 = (2 * v55) | 1;
                      unint64_t v56 = &v98[8 * v64];
                      uint64_t v65 = 2 * v55 + 2;
                      if (v65 < v12)
                      {
                        unint64_t v60 = *(void **)v56;
                        int v66 = (void *)*((void *)v56 + 1);
                        if (std::less<std::string>::operator()[abi:ne180100](*(void **)v56, v66))
                        {
                          unint64_t v60 = v66;
                          v56 += 8;
                          uint64_t v55 = v65;
                        }
                        else
                        {
                          uint64_t v55 = v64;
                        }
                      }
                      else
                      {
                        unint64_t v60 = *(void **)v56;
                        uint64_t v55 = (2 * v55) | 1;
                      }
                      uint64_t result = std::less<std::string>::operator()[abi:ne180100](v60, v62);
                      uint64_t v61 = v63;
                    }
                    while (!result);
                    *(void *)uint64_t v63 = v62;
                    a2 = v89;
                    uint64_t v11 = v90;
                    int64_t v54 = v96;
                  }
                }
                int64_t v53 = v54 - 1;
              }
              while (v54);
              uint64_t v67 = (unint64_t)v11 >> 3;
              int v68 = v98;
              do
              {
                uint64_t v69 = a2;
                uint64_t v70 = 0;
                uint64_t v71 = v67 - 2;
                int v94 = *(void **)v68;
                if (v67 < 2) {
                  uint64_t v71 = v67 - 1;
                }
                uint64_t v72 = v71 >> 1;
                do
                {
                  uint64_t v73 = &v68[8 * v70 + 8];
                  uint64_t v74 = (2 * v70) | 1;
                  uint64_t v75 = 2 * v70 + 2;
                  if (v75 >= v67)
                  {
                    int v78 = *(void **)v73;
                    uint64_t v70 = (2 * v70) | 1;
                  }
                  else
                  {
                    int v76 = *(void **)v73;
                    uint64_t v77 = *(void **)&v68[8 * v70 + 16];
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v73, v77);
                    if (result) {
                      int v78 = v77;
                    }
                    else {
                      int v78 = v76;
                    }
                    if (result)
                    {
                      v73 += 8;
                      uint64_t v70 = v75;
                    }
                    else
                    {
                      uint64_t v70 = v74;
                    }
                  }
                  *(void *)int v68 = v78;
                  int v68 = v73;
                }
                while (v70 <= v72);
                a2 = v69 - 8;
                if (v73 == v69 - 8)
                {
                  *(void *)uint64_t v73 = v94;
                }
                else
                {
                  *(void *)uint64_t v73 = *(void *)a2;
                  *(void *)a2 = v94;
                  uint64_t v79 = v73 - v98 + 8;
                  if (v79 >= 9)
                  {
                    unint64_t v80 = (unint64_t)((v79 >> 3) - 2) >> 1;
                    uint64_t v81 = &v98[8 * v80];
                    int v82 = *(void **)v81;
                    uint64_t v83 = *(void **)v73;
                    uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, *(void **)v73);
                    if (result)
                    {
                      do
                      {
                        int v84 = v81;
                        *(void *)uint64_t v73 = v82;
                        if (!v80) {
                          break;
                        }
                        unint64_t v80 = (v80 - 1) >> 1;
                        uint64_t v81 = &v98[8 * v80];
                        int v82 = *(void **)v81;
                        uint64_t result = std::less<std::string>::operator()[abi:ne180100](*(void **)v81, v83);
                        uint64_t v73 = v84;
                      }
                      while ((result & 1) != 0);
                      *(void *)int v84 = v83;
                    }
                  }
                }
                BOOL v85 = v67-- <= 2;
                int v68 = v98;
              }
              while (!v85);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          unsigned int v14 = &v9[8 * ((unint64_t)v12 >> 1)];
          if ((unint64_t)v11 < 0x401)
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14, (void **)v9, (void **)v95);
          }
          else
          {
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9, (void **)v14, (void **)v95);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 1, (void **)v14 - 1, (void **)v92);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v9 + 2, (void **)&v9[8 * v13 + 8], (void **)v91);
            std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((void **)v14 - 1, (void **)v14, (void **)&v9[8 * v13 + 8]);
            uint64_t v15 = *(void **)v9;
            *(void *)uint64_t v9 = *(void *)v14;
            *(void *)unsigned int v14 = v15;
          }
          --a3;
          int v16 = *(void **)v9;
          BOOL v17 = v9;
          if (a4) {
            break;
          }
          BOOL v17 = v9;
          if (std::less<std::string>::operator()[abi:ne180100](*((void **)v9 - 1), *(void **)v9)) {
            break;
          }
          uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v95);
          if (result)
          {
            do
            {
              unint64_t v31 = (void *)*((void *)v9 + 1);
              v9 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v31);
            }
            while ((result & 1) == 0);
          }
          else
          {
            int v32 = v9 + 8;
            do
            {
              uint64_t v9 = v32;
              if (v32 >= a2) {
                break;
              }
              v32 += 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, *(void **)v9);
            }
            while (!result);
          }
          BOOL v33 = a2;
          if (v9 < a2)
          {
            BOOL v33 = a2;
            do
            {
              int v34 = (void *)*((void *)v33 - 1);
              v33 -= 8;
              uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v34);
            }
            while ((result & 1) != 0);
          }
          uint64_t v35 = a2;
          if (v9 < v33)
          {
            int v36 = *(void **)v9;
            int v37 = *(void **)v33;
            do
            {
              *(void *)uint64_t v9 = v37;
              *(void *)BOOL v33 = v36;
              do
              {
                int v38 = (void *)*((void *)v9 + 1);
                v9 += 8;
                int v36 = v38;
              }
              while (!std::less<std::string>::operator()[abi:ne180100](v16, v38));
              do
              {
                char v39 = (void *)*((void *)v33 - 1);
                v33 -= 8;
                int v37 = v39;
                uint64_t result = std::less<std::string>::operator()[abi:ne180100](v16, v39);
              }
              while ((result & 1) != 0);
            }
            while (v9 < v33);
          }
          char v40 = v9 - 8;
          BOOL v4 = (unint64_t)(v9 - 8) >= v10;
          BOOL v5 = v9 - 8 == (char *)v10;
          a2 = v35;
          if (v9 - 8 != (char *)v10) {
            *(void *)unint64_t v10 = *(void *)v40;
          }
          a4 = 0;
          *(void *)char v40 = v16;
        }
        do
        {
          unint64_t v18 = v17;
          uint64_t v20 = (void *)*((void *)v17 + 1);
          v17 += 8;
          int v19 = v20;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v20, v16));
        uint64_t v97 = a3;
        uint64_t v21 = a2;
        if (v18 == (char *)v10)
        {
          uint64_t v21 = a2;
          do
          {
            if (v17 >= v21) {
              break;
            }
            unint64_t v23 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v23, v16));
        }
        else
        {
          do
          {
            uint64_t v22 = (void *)*((void *)v21 - 1);
            v21 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v22, v16));
        }
        size_t v8 = (char *)v10;
        int v24 = a2;
        if (v17 < v21)
        {
          unint64_t v25 = *(void **)v21;
          uint64_t v26 = v17;
          __n128 v27 = v21;
          do
          {
            *(void *)uint64_t v26 = v25;
            *(void *)__n128 v27 = v19;
            do
            {
              unint64_t v18 = v26;
              unint64_t v28 = (void *)*((void *)v26 + 1);
              v26 += 8;
              int v19 = v28;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v28, v16));
            do
            {
              char v29 = (void *)*((void *)v27 - 1);
              v27 -= 8;
              unint64_t v25 = v29;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v29, v16));
          }
          while (v26 < v27);
        }
        if (v18 != v8) {
          *(void *)size_t v8 = *(void *)v18;
        }
        *(void *)unint64_t v18 = v16;
        BOOL v4 = v17 >= v21;
        a2 = v24;
        a3 = v97;
        if (v4) {
          break;
        }
LABEL_31:
        uint64_t result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**,false>(v8, v18, v97, a4 & 1);
        a4 = 0;
        uint64_t v9 = v18 + 8;
      }
      BOOL v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**>((void **)v8, (void **)v18);
      uint64_t v9 = v18 + 8;
      uint64_t result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**>((void **)v18 + 1, (void **)v24);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_31;
      }
    }
    a2 = v18;
    if (!v30) {
      continue;
    }
    return result;
  }
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(google::protobuf::Arena *a1, google::protobuf::Arena *a2, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3626B18;
  result[6] = a1;
  result[7] = a2;
  *((_DWORD *)result + 1CoreML::Specification::Imputer::New(this, 0) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(void *)(a1 + 56);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  unsigned int v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  *a3 = 10;
  unint64_t v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  char *v7 = 18;
  uint64_t v9 = v7 + 1;
  unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      unsigned int v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *uint64_t v9 = v11;
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, unsigned char *))(*(void *)v8 + 128);
  return v13(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 24) + ((9 * (__clz(*(_DWORD *)(v4 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2 = a1[10];
  if (v2)
  {
    uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 136))(a1);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0) {
      int v8 = *(_DWORD *)(v7 + 8);
    }
    uint64_t v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v6 = 0;
    return v6 + v3;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (CoreML::Specification::CustomModel_CustomModelParamValue *)(*(uint64_t (**)(_DWORD *))(*(void *)a1 + 144))(a1);
  uint64_t v5 = CoreML::Specification::CustomModel_CustomModelParamValue::ByteSizeLong(v4);
  uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *(char **)this;
        if (*(void *)this >= *((void *)this + 1))
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          unint64_t TagFallback = *v5;
          if ((*v5 & 0x80000000) == 0)
          {
            *(void *)this = v5 + 1;
            goto LABEL_6;
          }
        }
        unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(this, TagFallback);
LABEL_6:
        if (TagFallback != 10) {
          break;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v7 = *(std::string **)(a1 + 16);
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        BOOL result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)this, v7);
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 4CoreML::Specification::Imputer::New(this, 0) = v9;
        unsigned int v10 = *(char **)this;
        if (*(void *)this < *((void *)this + 1) && *v10 == 18)
        {
          *(void *)this = v10 + 1;
          goto LABEL_19;
        }
      }
      if (TagFallback != 18) {
        break;
      }
      int v9 = *(_DWORD *)(a1 + 40);
LABEL_19:
      *(_DWORD *)(a1 + 4CoreML::Specification::Imputer::New(this, 0) = v9 | 2;
      Aligned = *(google::protobuf::Arena ***)(a1 + 24);
      if (!Aligned)
      {
        unsigned int v12 = *(google::protobuf::Arena **)(a1 + 32);
        if (!v12) {
          operator new();
        }
        CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned);
        unint64_t v13 = google::protobuf::Arena::AllocateAligned(v12, 0, 24);
        *unint64_t v13 = (google::protobuf::Arena *)Aligned;
        v13[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
        unsigned int v14 = (unint64_t *)((char *)v12 + 32);
        do
          unint64_t v15 = __ldxr(v14);
        while (__stxr((unint64_t)v13, v14));
        void v13[2] = (google::protobuf::Arena *)v15;
        *(void *)(a1 + 24) = Aligned;
      }
      int v16 = *(char **)this;
      if (*(void *)this >= *((void *)this + 1) || *v16 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(this);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v16;
        *(void *)this = v16 + 1;
      }
      int v18 = google::protobuf::io::CodedInputStream::PushLimit(this, VarintSizeAsIntFallback);
      int v20 = *((_DWORD *)this + 13);
      BOOL v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)this + 13) = v20;
      if (v20 < 0 != v21) {
        return 0;
      }
      int v22 = v18;
      BOOL result = CoreML::Specification::CustomModel_CustomModelParamValue::MergePartialFromCodedStream((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned, this, v19);
      if (!result) {
        return result;
      }
      BOOL result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(this, v22);
      if (!result) {
        return result;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*(void *)this == *((void *)this + 1)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        BOOL result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(this, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_1DC0B61AC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

std::string *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::CheckTypeAndMergeFrom(std::string *result, _DWORD *a2)
{
  int v2 = a2[10];
  if (v2)
  {
    uint64_t v4 = result;
    if (v2)
    {
      uint64_t v5 = (std::string **)&result->__r_.__value_.__r.__words[2];
      if ((uint64_t *)result->__r_.__value_.__r.__words[2] == &google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      uint64_t v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstance();
      }
      BOOL result = std::string::operator=(*v5, v6);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 1u;
      int v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!v4[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = (google::protobuf::Arena *)v4[1].__r_.__value_.__l.__size_;
        if (!size) {
          operator new();
        }
        CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned);
        int v9 = google::protobuf::Arena::AllocateAligned(size, 0, 24);
        *int v9 = (google::protobuf::Arena *)Aligned;
        v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
        unsigned int v10 = (unint64_t *)((char *)size + 32);
        do
          unint64_t v11 = __ldxr(v10);
        while (__stxr((unint64_t)v9, v10));
        std::string v9[2] = (google::protobuf::Arena *)v11;
        v4[1].__r_.__value_.__r.__words[0] = (std::string::size_type)Aligned;
      }
      unsigned int v12 = (const CoreML::Specification::CustomModel_CustomModelParamValue *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 144))(a2);
      BOOL result = CoreML::Specification::CustomModel_CustomModelParamValue::MergeFrom((std::string *)v4[1].__r_.__value_.__l.__data_, v12);
      LODWORD(v4[1].__r_.__value_.__r.__words[2]) |= 2u;
    }
  }
  return result;
}

void sub_1DC0B6384(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::IsInitialized()
{
  return 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    uint64_t result = CoreML::Specification::CustomModel_CustomModelParamValue::clear_value(result);
  }
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetArena(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::Imputer::New(this, 0) = 0;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 8);
  *uint64_t result = (google::protobuf::Arena *)&unk_1F3627988;
  result[1] = v5;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New()
{
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1DC167C33);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  *a1 = &unk_1F3626BC0;
  if ((void *)a1[1] != a1 && !a1[4])
  {
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  return a1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::value(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2)
  {
    int v5 = 3;
    uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    int v7 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v2 = *(void *)(a1 + 8);
  }
  uint64_t v3 = *(void *)(v2 + 24);
  if (*(void *)(a1 + 24)) {
    return *(void *)(a1 + 24);
  }
  else {
    return v3;
  }
}

void sub_1DC0B6680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::key(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const*> &,google::protobuf::MapPair<std::string,CoreML::Specification::CustomModel_CustomModelParamValue> const**>(void **a1, void **a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      int v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      int v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      int v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    unsigned int v12 = *v9;
    unint64_t v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(void **)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        unint64_t v13 = *(void **)((char *)a1 + v14 - 16);
        BOOL v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          BOOL v17 = (void **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      BOOL v17 = a1;
LABEL_12:
      void *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    int v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t CoreML::Specification::CustomModel::ByteSizeLong(CoreML::Specification::CustomModel *this)
{
  uint64_t v2 = (uint64_t *)*((void *)this + 5);
  uint64_t v3 = *v2;
  google::protobuf::Map<std::string,std::string>::begin(v15, v2);
  uint64_t v4 = 0;
  uint64_t v5 = 2 * v3;
  while (v15[0])
  {
    uint64_t v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((google::protobuf::Arena **)v15[0] + 3), (google::protobuf::Arena *)(*((void *)v15[0] + 3) + 24), *((google::protobuf::Arena **)this + 2));
    if (v4 != v6)
    {
      if (v4) {
        (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
      }
      uint64_t v4 = v6;
    }
    uint64_t v7 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v4);
    v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v15);
  }
  if (v4) {
    (*((void (**)(google::protobuf::Arena **))*v4 + 1))(v4);
  }
  uint64_t v8 = *((void *)this + 6);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_15;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v11 = *((void *)this + 7);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_20;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v5 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_20:
  *((_DWORD *)this + 16) = v5;
  return v5;
}

void sub_1DC0B6A44(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::CustomModel::MergePartialFromCodedStream(CoreML::Specification::CustomModel *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v4 = (std::string **)((char *)this + 56);
  uint64_t v5 = (google::protobuf::Arena **)((char *)this + 16);
  uint64_t v6 = (void *)((char *)this + 24);
  uint64_t v7 = (std::string **)((char *)this + 48);
  while (1)
  {
    while (1)
    {
      uint64_t v8 = *(unsigned __int8 **)a2;
      unint64_t v9 = *((void *)a2 + 1);
      if (*(void *)a2 >= v9)
      {
        LODWORD(v11) = 0;
LABEL_86:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
        unint64_t v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v12 & 0x100000000) == 0) {
          goto LABEL_87;
        }
        goto LABEL_9;
      }
      uint64_t v10 = v8 + 1;
      uint64_t v11 = *v8;
      if ((char)*v8 >= 1) {
        break;
      }
      if ((unint64_t)v10 >= v9) {
        goto LABEL_86;
      }
      int v13 = *v10;
      if ((v11 & ~v13) < 0x80) {
        goto LABEL_86;
      }
      *(void *)a2 = v8 + 2;
      unint64_t v12 = (v11 + (v13 << 7) - 128) | 0x100000000;
LABEL_9:
      unsigned int v14 = v12 >> 3;
      if (v12 >> 3 == 40)
      {
        if (v12 != 66) {
          goto LABEL_87;
        }
        if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v4)) {
          return 0;
        }
        uint64_t v15 = *v4;
        if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
          std::string::size_type size = (*v4)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
        }
        int v34 = "CoreML.Specification.CustomModel.description";
LABEL_57:
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v15, size, 0, (uint64_t)v34)) {
          return 0;
        }
      }
      else
      {
        if (v14 != 30)
        {
          if (v14 != 10 || v12 != 82) {
            goto LABEL_87;
          }
          if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, *v7)) {
            return 0;
          }
          uint64_t v15 = *v7;
          if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v15 = (std::string *)v15->__r_.__value_.__r.__words[0];
            std::string::size_type size = (*v7)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
          }
          int v34 = "CoreML.Specification.CustomModel.className";
          goto LABEL_57;
        }
        if (v12 != 242) {
          goto LABEL_87;
        }
        BOOL v45 = v5;
        uint64_t v46 = v6;
        memset(&__p, 0, sizeof(__p));
        int v49 = 0;
        BOOL v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_84;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v17;
          *(void *)a2 = v17 + 1;
        }
        int v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v20 = *((_DWORD *)a2 + 13);
        BOOL v21 = __OFSUB__(v20--, 1);
        *((_DWORD *)a2 + 13) = v20;
        if (v20 < 0 != v21) {
          goto LABEL_84;
        }
        int v22 = v19;
        unint64_t v23 = *(unsigned char **)a2;
        if (*(void *)a2 < *((void *)a2 + 1) && *v23 == 10)
        {
          *(void *)a2 = v23 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p)) {
            goto LABEL_84;
          }
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) >= 1 && **(unsigned char **)a2 == 18)
          {
            uint64_t v24 = *(void *)v46[2];
            int v48 = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::operator[]((uint64_t)v46, (uint64_t)&__p);
            if (v24 != *(void *)v46[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              unint64_t v25 = (CoreML::Specification::CustomModel_CustomModelParamValue *)v48;
              uint64_t v26 = *(char **)a2;
              if (*(void *)a2 >= *((void *)a2 + 1) || *v26 < 0)
              {
                int v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if ((v27 & 0x80000000) == 0) {
                  goto LABEL_60;
                }
              }
              else
              {
                int v27 = *v26;
                *(void *)a2 = v26 + 1;
LABEL_60:
                int v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
                int v37 = *((_DWORD *)a2 + 13);
                BOOL v21 = __OFSUB__(v37--, 1);
                *((_DWORD *)a2 + 13) = v37;
                if (v37 < 0 == v21)
                {
                  int v38 = v35;
                  if (CoreML::Specification::CustomModel_CustomModelParamValue::MergePartialFromCodedStream(v25, a2, v36)&& google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v38))
                  {
                    if (*(void *)a2 == *((void *)a2 + 1)
                      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      *((unsigned char *)a2 + 36) = 1;
                      goto LABEL_66;
                    }
                    int BeyondKeyValuePair = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::ReadBeyondKeyValuePair((uint64_t)&v45, (uint64_t)a2);
LABEL_65:
                    if (BeyondKeyValuePair)
                    {
LABEL_66:
                      if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22))
                      {
                        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          p_p = (unsigned int *)&__p;
                        }
                        else {
                          p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                        }
                        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          int v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                        }
                        else {
                          int v40 = __p.__r_.__value_.__r.__words[1];
                        }
                        BOOL v41 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v40, 0, (uint64_t)"CoreML.Specification.CustomModel.ParametersEntry.key");
                        BOOL v32 = v41;
                        if (v41) {
                          int v33 = 0;
                        }
                        else {
                          int v33 = 6;
                        }
LABEL_76:
                        if (v49) {
                          (*((void (**)(google::protobuf::Arena **))*v49 + 1))(v49);
                        }
                        goto LABEL_78;
                      }
                    }
LABEL_84:
                    BOOL v32 = 0;
                    int v33 = 6;
                    goto LABEL_76;
                  }
                }
              }
              google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase(v46, (unsigned __int8 *)&__p);
              goto LABEL_84;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          memset(&__p, 0, sizeof(__p));
        }
        unint64_t v28 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*v45);
        if (v49 != v28)
        {
          if (v49) {
            (*((void (**)(void))*v49 + 1))();
          }
          int v49 = v28;
        }
        char v29 = (std::string *)v28[2];
        *((_DWORD *)v28 + 10) |= 1u;
        if (v29 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstance();
        }
        std::string::operator=(v29, &__p);
        int BeyondKeyValuePair = (*((uint64_t (**)(google::protobuf::Arena **, google::protobuf::io::CodedInputStream *))*v49
                              + 11))(v49, a2);
        if (BeyondKeyValuePair) {
          v31.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::UseKeyAndValueFromEntry((uint64_t)&v45);
        }
        if (!(*((uint64_t (**)(google::protobuf::Arena **, __n128))*v49 + 5))(v49, v31)) {
          goto LABEL_65;
        }
        int v49 = 0;
        if (BeyondKeyValuePair) {
          goto LABEL_66;
        }
        BOOL v32 = 0;
        int v33 = 6;
LABEL_78:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (!v32 && v33) {
          return 0;
        }
      }
    }
    *(void *)a2 = v10;
    unint64_t v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0) {
      goto LABEL_9;
    }
LABEL_87:
    if (!v12 || (v12 & 7) == 4) {
      return 1;
    }
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3))return 0; {
  }
    }
}

void sub_1DC0B6FF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,std::string,std::string,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<std::string,std::string>>::~Parser((uint64_t)va);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::operator[](uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  std::string::size_type v24 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  uint64_t v6 = v26[0];
  if (v26[0]) {
    goto LABEL_18;
  }
  unint64_t v7 = v4[1];
  unint64_t v8 = *v4 + 1;
  unint64_t v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      uint64_t v20 = 2 * v7;
LABEL_33:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v20, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      uint64_t v11 = v25[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    char v21 = 0;
    unint64_t v22 = ((5 * v8) >> 2) + 1;
    do
      ++v21;
    while (v22 << v21 < v9);
    uint64_t v20 = v7 >> v21 <= 8 ? 8 : v7 >> v21;
    if (v20 != v7) {
      goto LABEL_33;
    }
  }
  uint64_t v11 = v26[3];
LABEL_11:
  unint64_t v12 = (google::protobuf::Arena *)v4[5];
  if (v12) {
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E4FBA3A0], 40);
  }
  else {
    Aligned = (std::string *)operator new(0x28uLL);
  }
  unsigned int v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v24;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v25, (uint64_t)v4, v11, v14);
  ++*v4;
  uint64_t v6 = v25[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  BOOL v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (!*(void *)a1) {
      operator new();
    }
    BOOL v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E4FBA3A0], 56);
    BOOL v17 = *(google::protobuf::Arena **)a1;
    v16[1] = 0;
    _OWORD v16[2] = 0;
    char *v16 = 0;
    google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
    int v18 = *(google::protobuf::Arena **)a1;
    CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)(v16 + 3));
    google::protobuf::Arena::OwnDestructor<CoreML::Specification::CustomModel_CustomModelParamValue>((google::protobuf::Arena **)v18, (google::protobuf::Arena *)(v16 + 3));
    std::string::operator=((std::string *)v16, (const std::string *)a2);
    *(void *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1DC0B7274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  MEMORY[0x1E0198C00](v14, 0x10B2C4015637A22);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase(void *a1, unsigned __int8 *a2)
{
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  double result = *(double *)&v6;
  if ((void)v6)
  {
    long long v4 = v6;
    uint64_t v5 = v7;
    *(void *)&double result = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  long long v4 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
  uint64_t v5 = *(google::protobuf::Arena ***)(a1 + 48);
  if (v5 != v4)
  {
    if (v5) {
      (*((void (**)(google::protobuf::Arena **))*v5 + 1))(v5);
    }
    *(void *)(a1 + 48) = v4;
  }
  uint64_t v6 = *(void *)(a1 + 40);
  *((_DWORD *)v4 + 10) |= 2u;
  Aligned = (google::protobuf::Arena **)v4[3];
  if (!Aligned)
  {
    unint64_t v8 = v4[4];
    if (!v8) {
      operator new();
    }
    CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned);
    unint64_t v9 = google::protobuf::Arena::AllocateAligned(v8, 0, 24);
    *unint64_t v9 = (google::protobuf::Arena *)Aligned;
    v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
    uint64_t v10 = (unint64_t *)((char *)v8 + 32);
    do
      unint64_t v11 = __ldxr(v10);
    while (__stxr((unint64_t)v9, v10));
    std::string v9[2] = (google::protobuf::Arena *)v11;
    v4[3] = (google::protobuf::Arena *)Aligned;
  }
  if ((google::protobuf::Arena **)v6 != Aligned)
  {
    unint64_t v12 = Aligned[2];
    Aligned[2] = *(google::protobuf::Arena **)(v6 + 16);
    *(void *)(v6 + 16) = v12;
    int v13 = *((_DWORD *)Aligned + 7);
    *((_DWORD *)Aligned + 7) = *(_DWORD *)(v6 + 28);
    *(_DWORD *)(v6 + 28) = v13;
    int v14 = *((_DWORD *)Aligned + 6);
    *((_DWORD *)Aligned + 6) = *(_DWORD *)(v6 + 24);
    *(_DWORD *)(v6 + 24) = v14;
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::erase(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  uint64_t v15 = *(void *)(a1 + 48);
  *(_DWORD *)(v15 + 40) |= 1u;
  uint64_t v16 = *(void *)(v15 + 16);
  if ((uint64_t *)v16 == &google::protobuf::internal::fixed_address_empty_string) {
    google::protobuf::internal::ArenaStringPtr::CreateInstance();
  }
  if (*(char *)(v16 + 23) < 0) {
    operator delete(*(void **)v16);
  }
  long long v17 = *(_OWORD *)(a1 + 16);
  *(void *)(v16 + 16) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v16 = v17;
  *(unsigned char *)(a1 + 39) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v18 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 48) + 88))(*(void *)(a1 + 48), a2);
  if (v18) {
    v19.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::UseKeyAndValueFromEntry(a1);
  }
  if ((*(uint64_t (**)(void, __n128))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48), v19)) {
    *(void *)(a1 + 48) = 0;
  }
  return v18;
}

void sub_1DC0B755C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  result[1] = 0;
  result[2] = (google::protobuf::Arena *)&google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  result[4] = this;
  *((_DWORD *)result + 1CoreML::Specification::Imputer::New(this, 0) = 0;
  *double result = (google::protobuf::Arena *)&unk_1F3627988;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  uint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  uint64_t v3 = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::operator[](*(void *)(a1 + 8), a1 + 16);
  *(void *)(a1 + 4CoreML::Specification::Imputer::New(this, 0) = v3;
  uint64_t v5 = *(void *)(a1 + 48);
  *(_DWORD *)(v5 + 40) |= 2u;
  Aligned = *(google::protobuf::Arena ***)(v5 + 24);
  if (!Aligned)
  {
    uint64_t v7 = *(google::protobuf::Arena **)(v5 + 32);
    if (!v7) {
      operator new();
    }
    CoreML::Specification::CustomModel_CustomModelParamValue::CustomModel_CustomModelParamValue((CoreML::Specification::CustomModel_CustomModelParamValue *)Aligned);
    unint64_t v8 = google::protobuf::Arena::AllocateAligned(v7, 0, 24);
    *unint64_t v8 = (google::protobuf::Arena *)Aligned;
    v8[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
    unint64_t v9 = (unint64_t *)((char *)v7 + 32);
    do
      unint64_t v10 = __ldxr(v9);
    while (__stxr((unint64_t)v8, v9));
    std::string v8[2] = (google::protobuf::Arena *)v10;
    *(void *)(v5 + 24) = Aligned;
    uint64_t v3 = *(google::protobuf::Arena ***)(a1 + 40);
  }
  if (Aligned != v3)
  {
    double result = *((double *)v3 + 2);
    void v3[2] = Aligned[2];
    *((double *)Aligned + 2) = result;
    int v11 = *((_DWORD *)v3 + 7);
    *((_DWORD *)v3 + 7) = *((_DWORD *)Aligned + 7);
    *((_DWORD *)Aligned + 7) = v11;
    int v12 = *((_DWORD *)v3 + 6);
    *((_DWORD *)v3 + 6) = *((_DWORD *)Aligned + 6);
    *((_DWORD *)Aligned + 6) = v12;
  }
  return result;
}

void sub_1DC0B7748(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::OwnDestructor<CoreML::Specification::CustomModel_CustomModelParamValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomModel_CustomModelParamValue>;
    long long v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

std::string *CoreML::Specification::CustomModel::MergeFrom(CoreML::Specification::CustomModel *this, const CoreML::Specification::CustomModel *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double result = (std::string *)google::protobuf::Map<std::string,std::string>::begin(v16, *((void **)a2 + 5));
  for (int i = v16[0]; v16[0]; int i = v16[0])
  {
    uint64_t v7 = *((void *)i + 3);
    unint64_t v8 = (const CoreML::Specification::CustomModel_CustomModelParamValue *)(v7 + 24);
    unint64_t v9 = google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::operator[]((uint64_t)this + 24, v7);
    if (v8 != (const CoreML::Specification::CustomModel_CustomModelParamValue *)v9)
    {
      unint64_t v10 = (std::string *)v9;
      CoreML::Specification::CustomModel_CustomModelParamValue::clear_value((uint64_t)v9);
      CoreML::Specification::CustomModel_CustomModelParamValue::MergeFrom(v10, v8);
    }
    double result = (std::string *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v16);
  }
  uint64_t v11 = *((void *)a2 + 6);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_15;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_15;
  }
  double result = (std::string *)((char *)this + 48);
  int v12 = (uint64_t *)*((void *)this + 6);
  if (v12 != (uint64_t *)v11)
  {
    if (v12 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)result, v11);
    }
    double result = std::string::operator=(*((std::string **)this + 6), (const std::string *)v11);
  }
LABEL_15:
  uint64_t v13 = *((void *)a2 + 7);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      return result;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    return result;
  }
  uint64_t v15 = (std::string *)*((void *)this + 7);
  int v14 = (char *)this + 56;
  double result = v15;
  if (v15 != (std::string *)v13)
  {
    if (result == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v14, v13);
    }
    return std::string::operator=(result, (const std::string *)v13);
  }
  return result;
}

uint64_t CoreML::Specification::CustomModel::IsInitialized(CoreML::Specification::CustomModel *this)
{
  return 1;
}

void CoreML::Specification::CustomModel::Clear(CoreML::Specification::CustomModel *this)
{
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::clear((void *)this + 3);
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 7);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
}

void CoreML::Specification::CustomModel::New(CoreML::Specification::CustomModel *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B7A34(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C405C383CC1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CustomModel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomModel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CustomModel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::CustomModel::New(CoreML::Specification::CustomModel *this)
{
}

void *CoreML::Specification::CustomModel::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CustomModel");
}

void CoreML::Specification::CustomModel::~CustomModel(CoreML::Specification::CustomModel *this)
{
  CoreML::Specification::CustomModel::~CustomModel(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v4;

  *(void *)this = &unk_1F361A4C8;
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1E0198C00](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1E0198C00](v4, 0x1012C40EC159624);
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomModel_CustomModelParamValue>::~Map((void *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryLite(void *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomModel_CustomModelParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1E0198C00);
}

void CoreML::Specification::CustomModel_CustomModelParamValue::New(CoreML::Specification::CustomModel_CustomModelParamValue *this)
{
}

void *CoreML::Specification::CustomModel_CustomModelParamValue::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CustomModel.CustomModelParamValue");
}

uint64_t CoreML::Specification::LinearKernel::GetCachedSize(CoreML::Specification::LinearKernel *this)
{
  return *((unsigned int *)this + 4);
}

uint64_t CoreML::Specification::LinearKernel::ByteSizeLong(CoreML::Specification::LinearKernel *this)
{
  *((_DWORD *)this + 4) = 0;
  return 0;
}

uint64_t CoreML::Specification::LinearKernel::MergePartialFromCodedStream(CoreML::Specification::LinearKernel *this, char **a2, unsigned int a3)
{
  do
  {
    uint64_t v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      unint64_t TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    unint64_t TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if (TagFallback) {
      BOOL v6 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v6 = 1;
    }
    uint64_t v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

std::string *CoreML::Specification::LinearKernel::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  uint64_t v2 = *((void *)a2 + 1);
  if (v2) {
    return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v2 & 0xFFFFFFFFFFFFFFFELL);
  }
  return this;
}

uint64_t CoreML::Specification::LinearKernel::IsInitialized(CoreML::Specification::LinearKernel *this)
{
  return 1;
}

void CoreML::Specification::LinearKernel::New(CoreML::Specification::LinearKernel *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0B7DA0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::LinearKernel *CoreML::Specification::LinearKernel::LinearKernel(CoreML::Specification::LinearKernel *this)
{
  *(void *)this = &unk_1F361B270;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::LinearKernel *)&CoreML::Specification::_LinearKernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1DC0B7E24(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::LinearKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    double result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *double result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::LinearKernel>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::LinearKernel>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(CoreML::Specification::protobuf_SVM_2eproto *this)
{
  unint64_t v1 = atomic_load(&CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &unk_1F36280C0;
    v3[1] = CoreML::Specification::protobuf_SVM_2eproto::TableStruct::InitDefaultsImpl;
    char v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_SVM_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_SVM_2eproto::TableStruct *this)
{
  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_LinearKernel_default_instance_ = (uint64_t)&unk_1F361B270;
  qword_1EC001DE8 = 0;
  dword_1EC001DF0 = 0;
  byte_1EC001DF8 = 1;
  qword_1EC001AC0 = 0;
  qword_1EC001AC8 = 0;
  CoreML::Specification::_RBFKernel_default_instance_ = (uint64_t)&unk_1F3626820;
  dword_1EC001AD0 = 0;
  byte_1EC001AD8 = 1;
  CoreML::Specification::_PolyKernel_default_instance_ = (uint64_t)&unk_1F361A398;
  double result = 0.0;
  *(_OWORD *)algn_1EC001B60 = 0u;
  *(_OWORD *)&algn_1EC001B60[16] = 0u;
  byte_1EC001B80 = 1;
  CoreML::Specification::_SigmoidKernel_default_instance_ = (uint64_t)&unk_1F361BAC0;
  unk_1EC002120 = 0;
  qword_1EC002128 = 0;
  unk_1EC002130 = 0;
  dword_1EC002138 = 0;
  byte_1EC002140 = 1;
  CoreML::Specification::_Kernel_default_instance_ = (uint64_t)&unk_1F3625060;
  unk_1EC001858 = 0;
  qword_1EC001868 = 0;
  byte_1EC001870 = 1;
  CoreML::Specification::_SparseNode_default_instance_ = (uint64_t)&unk_1F361A430;
  unk_1EC001B90 = 0;
  qword_1EC001B98 = 0;
  unk_1EC001BA0 = 0;
  byte_1EC001BA8 = 1;
  CoreML::Specification::_SparseVector_default_instance_ = (uint64_t)&unk_1F361B438;
  *(_OWORD *)algn_1EC001E60 = 0u;
  *(_OWORD *)&algn_1EC001E60[16] = 0u;
  dword_1EC001E80 = 0;
  byte_1EC001E88 = 1;
  CoreML::Specification::_SparseSupportVectors_default_instance_ = (uint64_t)&unk_1F3620168;
  unk_1EC003DA8 = 0u;
  unk_1EC003DB8 = 0u;
  dword_1EC003DC8 = 0;
  byte_1EC003DD0 = 1;
  CoreML::Specification::_DenseVector_default_instance_ = (uint64_t)&unk_1F361A560;
  *(void *)algn_1EC001C08 = 0;
  qword_1EC001C10 = 0;
  unk_1EC001C18 = 0;
  dword_1EC001C24 = 0;
  byte_1EC001C28 = 1;
  CoreML::Specification::_DenseSupportVectors_default_instance_ = (uint64_t)&unk_1F361F328;
  dword_1EC003930 = 0;
  unk_1EC003920 = 0u;
  unk_1EC003910 = 0u;
  byte_1EC003938 = 1;
  CoreML::Specification::_Coefficients_default_instance_ = (uint64_t)&unk_1F361AA20;
  *(void *)algn_1EC001D38 = 0;
  qword_1EC001D40 = 0;
  unk_1EC001D48 = 0;
  dword_1EC001D54 = 0;
  byte_1EC001D58 = 1;
  CoreML::Specification::_SupportVectorRegressor_default_instance_ = (uint64_t)&unk_1F3621468;
  qword_1EC004560 = 0;
  xmmword_1EC004548 = 0u;
  *(_OWORD *)algn_1EC004538 = 0u;
  byte_1EC004568 = 1;
  qword_1EC0049B0 = 0;
  unk_1EC0049B8 = 0;
  qword_1EC0049C8 = 0;
  unk_1EC0049D0 = 0;
  CoreML::Specification::_SupportVectorClassifier_default_instance_ = (uint64_t)&unk_1F3621CB8;
  unk_1EC004960 = 0;
  qword_1EC004968 = 0;
  unk_1EC004970 = 0;
  qword_1EC0049A0 = 0;
  unk_1EC004990 = 0u;
  unk_1EC004980 = 0u;
  dword_1EC004A00 = 0;
  qword_1EC0049F8 = 0;
  byte_1EC004A08 = 1;
  qword_1EC004540 = (uint64_t)&CoreML::Specification::_Kernel_default_instance_;
  *(void *)&xmmword_1EC004548 = &CoreML::Specification::_Coefficients_default_instance_;
  qword_1EC0049E0 = (uint64_t)&CoreML::Specification::_Kernel_default_instance_;
  return result;
}

uint64_t CoreML::Specification::SupportVectorClassifier::GetCachedSize(CoreML::Specification::SupportVectorClassifier *this)
{
  return *((unsigned int *)this + 40);
}

uint64_t *CoreML::Specification::SupportVectorClassifier::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3 = this;
  if (this != &CoreML::Specification::_SupportVectorClassifier_default_instance_)
  {
    uint64_t v4 = this[17];
    if (v4) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v4, a2);
    }
  }
  if (*((int *)v3 + 4) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 18;
      this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v5 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 18;
      int v5 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v5;
    }
    unsigned int v6 = *((_DWORD *)v3 + 8);
    if (v5 < 5)
    {
      this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v6);
    }
    else
    {
      uint64_t v7 = *((void *)a2 + 1);
      if (v6 < 0x80)
      {
        unsigned int v9 = *((_DWORD *)v3 + 8);
        unint64_t v8 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        unint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v8++ = v6 | 0x80;
          unsigned int v9 = v6 >> 7;
          unsigned int v10 = v6 >> 14;
          v6 >>= 7;
        }
        while (v10);
      }
      *unint64_t v8 = v9;
      int v11 = v8 - v7 + 1;
      *((void *)a2 + 1) += v11;
      *((_DWORD *)a2 + 4) -= v11;
    }
    uint64_t v12 = *((unsigned int *)v3 + 4);
    if ((int)v12 >= 1)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        unint64_t v14 = *(int *)(v3[3] + 4 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v14);
        }
        else
        {
          uint64_t v15 = *((void *)a2 + 1);
          if (v14 < 0x80)
          {
            LODWORD(v17) = *(_DWORD *)(v3[3] + 4 * i + 8);
            uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
          }
          else
          {
            uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
            do
            {
              *v16++ = v14 | 0x80;
              unint64_t v17 = v14 >> 7;
              unint64_t v18 = v14 >> 14;
              v14 >>= 7;
            }
            while (v18);
          }
          unsigned char *v16 = v17;
          int v19 = v16 - v15 + 1;
          *((void *)a2 + 1) += v19;
          *((_DWORD *)a2 + 4) -= v19;
        }
      }
    }
  }
  int v20 = *((_DWORD *)v3 + 41);
  if (v20 == 3)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v3[18], a2);
    int v20 = *((_DWORD *)v3 + 41);
  }
  if (v20 == 4) {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(4, v3[18], a2);
  }
  int v21 = *((_DWORD *)v3 + 12);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(5, *(void *)(v3[7] + 8 * j + 8), a2);
  }
  if (*((int *)v3 + 16) > 0)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 50;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v23 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 50;
      int v23 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v23;
    }
    unsigned int v24 = *((_DWORD *)v3 + 20);
    if (v23 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v24);
    }
    else
    {
      uint64_t v25 = *((void *)a2 + 1);
      if (v24 < 0x80)
      {
        unsigned int v27 = *((_DWORD *)v3 + 20);
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v26++ = v24 | 0x80;
          unsigned int v27 = v24 >> 7;
          unsigned int v28 = v24 >> 14;
          v24 >>= 7;
        }
        while (v28);
      }
      unsigned char *v26 = v27;
      int v29 = v26 - v25 + 1;
      *((void *)a2 + 1) += v29;
      *((_DWORD *)a2 + 4) -= v29;
    }
    uint64_t v30 = v3[9];
    if (v30) {
      __n128 v31 = (char *)(v30 + 8);
    }
    else {
      __n128 v31 = 0;
    }
    this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteRaw(a2, v31, 8 * *((_DWORD *)v3 + 16));
  }
  if (*((int *)v3 + 22) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 58;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v32 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 58;
      int v32 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v32;
    }
    unsigned int v33 = *((_DWORD *)v3 + 26);
    if (v32 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v33);
    }
    else
    {
      uint64_t v34 = *((void *)a2 + 1);
      if (v33 < 0x80)
      {
        unsigned int v36 = *((_DWORD *)v3 + 26);
        int v35 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        int v35 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v35++ = v33 | 0x80;
          unsigned int v36 = v33 >> 7;
          unsigned int v37 = v33 >> 14;
          v33 >>= 7;
        }
        while (v37);
      }
      *int v35 = v36;
      int v38 = v35 - v34 + 1;
      *((void *)a2 + 1) += v38;
      *((_DWORD *)a2 + 4) -= v38;
    }
    uint64_t v39 = v3[12];
    if (v39) {
      int v40 = (char *)(v39 + 8);
    }
    else {
      int v40 = 0;
    }
    this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteRaw(a2, v40, 8 * *((_DWORD *)v3 + 22));
  }
  if (*((int *)v3 + 28) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 66;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v41 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 66;
      int v41 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v41;
    }
    unsigned int v42 = *((_DWORD *)v3 + 32);
    if (v41 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v42);
    }
    else
    {
      uint64_t v43 = *((void *)a2 + 1);
      if (v42 < 0x80)
      {
        unsigned int v45 = *((_DWORD *)v3 + 32);
        BOOL v44 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        BOOL v44 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v44++ = v42 | 0x80;
          unsigned int v45 = v42 >> 7;
          unsigned int v46 = v42 >> 14;
          v42 >>= 7;
        }
        while (v46);
      }
      unsigned char *v44 = v45;
      int v47 = v44 - v43 + 1;
      *((void *)a2 + 1) += v47;
      *((_DWORD *)a2 + 4) -= v47;
    }
    uint64_t v48 = v3[15];
    if (v48) {
      int v49 = (char *)(v48 + 8);
    }
    else {
      int v49 = 0;
    }
    this = (uint64_t *)google::protobuf::io::CodedOutputStream::WriteRaw(a2, v49, 8 * *((_DWORD *)v3 + 28));
  }
  int v50 = *((_DWORD *)v3 + 42);
  if (v50 == 100)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(100, v3[19], a2);
    int v50 = *((_DWORD *)v3 + 42);
  }
  if (v50 == 101)
  {
    uint64_t v51 = v3[19];
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(101, v51, a2);
  }
  return this;
}

uint64_t CoreML::Specification::SupportVectorClassifier::ByteSizeLong(CoreML::Specification::SupportVectorClassifier *this)
{
  uint64_t v2 = google::protobuf::internal::WireFormatLite::Int32Size(*((_DWORD *)this + 4), *((void *)this + 3));
  if (v2)
  {
    uint64_t v3 = 11;
    uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v2 >= 0) {
      uint64_t v3 = v4;
    }
    int v5 = v2;
  }
  else
  {
    int v5 = 0;
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 8) = v5;
  uint64_t v6 = *((unsigned int *)this + 12);
  uint64_t v7 = v3 + v6 + v2;
  if (v6)
  {
    int v8 = 0;
    uint64_t v9 = *((void *)this + 7);
    do
    {
      unsigned int v10 = *(unsigned int **)(v9 + 8 * v8 + 8);
      uint64_t v11 = v10[4];
      uint64_t v12 = 8 * v11;
      if (v11)
      {
        if ((v12 & 0x80000000) != 0) {
          uint64_t v13 = 11;
        }
        else {
          uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v13 = 0;
      }
      uint64_t v14 = v13 + v12;
      unsigned char v10[8] = v12;
      v10[9] = v14;
      v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while (v6 != v8);
  }
  uint64_t v15 = *((unsigned int *)this + 16);
  uint64_t v16 = 8 * v15;
  uint64_t v17 = 11;
  uint64_t v18 = ((9 * (__clz((8 * v15) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x10000000) == 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v17 + v7;
  if (v15) {
    uint64_t v7 = v19;
  }
  *((_DWORD *)this + 2CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v16;
  uint64_t v20 = v7 + v16;
  uint64_t v21 = *((unsigned int *)this + 22);
  uint64_t v22 = 8 * v21;
  uint64_t v23 = 11;
  uint64_t v24 = ((9 * (__clz((8 * v21) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v21 & 0x10000000) == 0) {
    uint64_t v23 = v24;
  }
  uint64_t v25 = v23 + v20;
  if (v21) {
    uint64_t v20 = v25;
  }
  *((_DWORD *)this + 26) = v22;
  uint64_t v26 = v20 + v22;
  uint64_t v27 = *((unsigned int *)this + 28);
  uint64_t v28 = 8 * v27;
  uint64_t v29 = 11;
  uint64_t v30 = ((9 * (__clz((8 * v27) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x10000000) == 0) {
    uint64_t v29 = v30;
  }
  uint64_t v31 = v29 + v26;
  if (v27) {
    uint64_t v26 = v31;
  }
  *((_DWORD *)this + 32) = v28;
  uint64_t v32 = v26 + v28;
  if (this != (CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_)
  {
    unsigned int v33 = (CoreML::Specification::Kernel *)*((void *)this + 17);
    if (v33)
    {
      uint64_t v34 = CoreML::Specification::Kernel::ByteSizeLong(v33);
      v32 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  int v35 = *((_DWORD *)this + 41);
  if (v35 == 4)
  {
    uint64_t v36 = CoreML::Specification::DenseSupportVectors::ByteSizeLong(*((CoreML::Specification::DenseSupportVectors **)this
                                                                   + 18));
  }
  else
  {
    if (v35 != 3) {
      goto LABEL_34;
    }
    uint64_t v36 = CoreML::Specification::SparseSupportVectors::ByteSizeLong(*((CoreML::Specification::SparseSupportVectors **)this
                                                                    + 18));
  }
  v32 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_34:
  int v37 = *((_DWORD *)this + 42);
  if (v37 == 101)
  {
    uint64_t v38 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 19));
    goto LABEL_38;
  }
  if (v37 == 100)
  {
    uint64_t v38 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 19));
LABEL_38:
    v32 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 4CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v32;
  return v32;
}

uint64_t CoreML::Specification::Kernel::ByteSizeLong(CoreML::Specification::Kernel *this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      *(_DWORD *)(*((void *)this + 2) + 16) = 0;
      uint64_t result = 2;
      break;
    case 2:
      uint64_t v3 = *((void *)this + 2);
      uint64_t v4 = 9;
      if (*(double *)(v3 + 16) == 0.0) {
        uint64_t v4 = 0;
      }
      *(_DWORD *)(v3 + 24) = v4;
      uint64_t result = v4 | 2;
      break;
    case 3:
      uint64_t v5 = CoreML::Specification::PolyKernel::ByteSizeLong(*((CoreML::Specification::PolyKernel **)this + 2));
      uint64_t v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_13;
    case 4:
      uint64_t v7 = *((void *)this + 2);
      uint64_t v8 = 9;
      if (*(double *)(v7 + 16) == 0.0) {
        uint64_t v8 = 0;
      }
      if (*(double *)(v7 + 24) != 0.0) {
        v8 += 9;
      }
      *(_DWORD *)(v7 + 32) = v8;
      uint64_t v6 = v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
LABEL_13:
      uint64_t result = v6 + 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::SparseSupportVectors::ByteSizeLong(CoreML::Specification::SparseSupportVectors *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::SparseVector::ByteSizeLong(*(CoreML::Specification::SparseVector **)(*((void *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::DenseSupportVectors::ByteSizeLong(CoreML::Specification::DenseSupportVectors *this)
{
  int v1 = *((_DWORD *)this + 6);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = *((void *)this + 4);
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = *(unsigned int **)(v3 + 8 * v2 + 8);
      uint64_t v6 = v5[4];
      uint64_t v7 = 8 * v6;
      if (v6)
      {
        if ((v7 & 0x80000000) != 0) {
          uint64_t v8 = 11;
        }
        else {
          uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v8 = 0;
      }
      uint64_t v9 = v8 + v7;
      char v5[8] = v7;
      v5[9] = v9;
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::SparseVector::ByteSizeLong(CoreML::Specification::SparseVector *this)
{
  int v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = *((unsigned int *)this + 6);
    do
    {
      uint64_t v5 = CoreML::Specification::SparseNode::ByteSizeLong(*(CoreML::Specification::SparseNode **)(*((void *)this + 4)
                                                                                                 + 8 * v3
                                                                                                 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v4;
  return v4;
}

uint64_t CoreML::Specification::SparseNode::ByteSizeLong(CoreML::Specification::SparseNode *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  int v2 = *((_DWORD *)this + 6);
  uint64_t v3 = 11;
  uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v2 >= 0) {
    uint64_t v3 = v4;
  }
  uint64_t v5 = v3 + v1;
  if (v2) {
    uint64_t v1 = v5;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

uint64_t CoreML::Specification::PolyKernel::ByteSizeLong(CoreML::Specification::PolyKernel *this)
{
  uint64_t v1 = 9;
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  if (*((double *)this + 3) != 0.0) {
    v1 += 9;
  }
  int v2 = *((_DWORD *)this + 8);
  uint64_t v3 = 11;
  uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v2 >= 0) {
    uint64_t v3 = v4;
  }
  uint64_t v5 = v3 + v1;
  if (v2) {
    uint64_t v1 = v5;
  }
  *((_DWORD *)this + 9) = v1;
  return v1;
}

uint64_t CoreML::Specification::SupportVectorClassifier::MergePartialFromCodedStream(CoreML::Specification::SupportVectorClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 112);
  uint64_t v6 = (unsigned int *)((char *)this + 88);
  uint64_t v7 = (unsigned int *)((char *)this + 64);
  uint64_t v8 = (CoreML::Specification::SupportVectorClassifier *)((char *)this + 40);
  uint64_t v9 = (signed int *)((char *)this + 16);
  unsigned int v148 = (signed int *)((char *)this + 16);
LABEL_2:
  while (2)
  {
    unsigned int v10 = *(unsigned __int8 **)a2;
    unint64_t v11 = *((void *)a2 + 1);
    if (*(void *)a2 >= v11)
    {
      LODWORD(v13) = 0;
    }
    else
    {
      uint64_t v12 = v10 + 1;
      uint64_t v13 = *v10;
      if ((char)*v10 >= 1)
      {
        *(void *)a2 = v12;
        unint64_t v14 = v13 | 0x100000000;
        if ((v14 & 0x100000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_17;
      }
      if ((unint64_t)v12 < v11)
      {
        int v15 = *v12;
        if ((v13 & ~v15) >= 0x80)
        {
          *(void *)a2 = v10 + 2;
          unint64_t v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
    }
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
    unint64_t v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v14 & 0x100000000) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    unsigned int v18 = v14 >> 3;
    switch(v14 >> 3)
    {
      case 1u:
        if (v14 != 10) {
          goto LABEL_9;
        }
        uint64_t v19 = (CoreML::Specification::Kernel *)*((void *)this + 17);
        if (!v19) {
          operator new();
        }
        uint64_t v20 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            return 0;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v20;
          *(void *)a2 = v20 + 1;
        }
        int v49 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v51 = *((_DWORD *)a2 + 13);
        BOOL v52 = __OFSUB__(v51--, 1);
        *((_DWORD *)a2 + 13) = v51;
        if (v51 < 0 != v52) {
          return 0;
        }
        int v53 = v49;
        uint64_t result = CoreML::Specification::Kernel::MergePartialFromCodedStream(v19, a2, v50);
        if (result) {
          goto LABEL_121;
        }
        return result;
      case 2u:
        if (v14 == 16)
        {
          if (google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<int,(google::protobuf::internal::WireFormatLite::FieldType)5>(18, a2, v9))continue; {
          return 0;
          }
        }
        if (v14 != 18) {
          goto LABEL_9;
        }
        uint64_t v23 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v23 < 0)
        {
          int v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v24 < 0) {
            return 0;
          }
        }
        else
        {
          int v24 = *v23;
          *(void *)a2 = v23 + 1;
        }
        int v78 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
        while (1)
        {
          int v79 = *((_DWORD *)a2 + 10);
          uint64_t v80 = *((int *)a2 + 11);
          unint64_t v81 = *((void *)a2 + 1);
          int v82 = *((_DWORD *)a2 + 6);
          if (v79 == 0x7FFFFFFF || (uint64_t v83 = *(char **)a2, (int)(v79 - v82 + v80 + v81 - *(void *)a2) < 1))
          {
            *((_DWORD *)a2 + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = v78;
            uint64_t v88 = v81 + v80;
            *((void *)a2 + 1) = v88;
            int v89 = *((_DWORD *)a2 + 12);
            if (v89 >= v78) {
              int v89 = v78;
            }
            BOOL v52 = __OFSUB__(v82, v89);
            int v90 = v82 - v89;
            if ((v90 < 0) ^ v52 | (v90 == 0)) {
              int v90 = 0;
            }
            else {
              *((void *)a2 + 1) = v88 - v90;
            }
            *((_DWORD *)a2 + 11) = v90;
            *((unsigned char *)a2 + 36) = 0;
            goto LABEL_2;
          }
          if ((unint64_t)v83 >= v81)
          {
            int v84 = 0;
          }
          else
          {
            int v84 = *v83;
            if ((*v83 & 0x80000000) == 0)
            {
              *(void *)a2 = v83 + 1;
              goto LABEL_132;
            }
          }
          Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v84);
          int v84 = Varint32Fallback;
          if (Varint32Fallback < 0) {
            return 0;
          }
LABEL_132:
          signed int v86 = *((_DWORD *)this + 4);
          if (v86 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v9, v86 + 1);
            signed int v86 = *v9;
          }
          uint64_t v87 = *((void *)this + 3);
          *((_DWORD *)this + 4) = v86 + 1;
          *(_DWORD *)(v87 + 4 * v86 + 8) = v84;
        }
      case 3u:
        if (v14 != 26) {
          goto LABEL_9;
        }
        if (*((_DWORD *)this + 41) != 3)
        {
          CoreML::Specification::SupportVectorClassifier::clear_supportVectors((uint64_t)this);
          *((_DWORD *)this + 41) = 3;
          operator new();
        }
        uint64_t v25 = (CoreML::Specification::SparseSupportVectors *)*((void *)this + 18);
        uint64_t v43 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v43 < 0)
        {
          int v44 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v44 < 0) {
            return 0;
          }
        }
        else
        {
          int v44 = *v43;
          *(void *)a2 = v43 + 1;
        }
        int v58 = google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
        int v60 = *((_DWORD *)a2 + 13);
        BOOL v52 = __OFSUB__(v60--, 1);
        *((_DWORD *)a2 + 13) = v60;
        if (v60 < 0 != v52) {
          return 0;
        }
        int v53 = v58;
        uint64_t result = CoreML::Specification::SparseSupportVectors::MergePartialFromCodedStream(v25, a2, v59);
        if (!result) {
          return result;
        }
        goto LABEL_121;
      case 4u:
        if (v14 != 34) {
          goto LABEL_9;
        }
        if (*((_DWORD *)this + 41) != 4)
        {
          CoreML::Specification::SupportVectorClassifier::clear_supportVectors((uint64_t)this);
          *((_DWORD *)this + 41) = 4;
          operator new();
        }
        uint64_t v26 = (CoreML::Specification::DenseSupportVectors *)*((void *)this + 18);
        unsigned int v45 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v45 < 0)
        {
          int v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v46 < 0) {
            return 0;
          }
        }
        else
        {
          int v46 = *v45;
          *(void *)a2 = v45 + 1;
        }
        int v61 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
        int v63 = *((_DWORD *)a2 + 13);
        BOOL v52 = __OFSUB__(v63--, 1);
        *((_DWORD *)a2 + 13) = v63;
        if (v63 < 0 != v52) {
          return 0;
        }
        int v53 = v61;
        uint64_t result = CoreML::Specification::DenseSupportVectors::MergePartialFromCodedStream(v26, a2, v62);
        if (!result) {
          return result;
        }
        goto LABEL_121;
      case 5u:
        if (v14 != 42) {
          goto LABEL_9;
        }
        uint64_t v27 = (int *)*((void *)this + 7);
        if (!v27)
        {
          int v28 = *((_DWORD *)this + 12);
          int v29 = *((_DWORD *)this + 13);
LABEL_107:
          if (v28 <= v29)
          {
            google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v8, v29 - v28 + 1);
            uint64_t v27 = (int *)*((void *)this + 7);
          }
          int v29 = *v27;
          goto LABEL_110;
        }
        int v28 = *((_DWORD *)this + 12);
        int v29 = *v27;
        if (v28 < *v27)
        {
          *((_DWORD *)this + 12) = v28 + 1;
          Aligned = *(google::protobuf::Arena ***)&v27[2 * v28 + 2];
          goto LABEL_115;
        }
        if (v29 == *((_DWORD *)this + 13)) {
          goto LABEL_107;
        }
LABEL_110:
        int *v27 = v29 + 1;
        uint64_t v67 = *(google::protobuf::Arena **)v8;
        if (!*(void *)v8) {
          operator new();
        }
        CoreML::Specification::Coefficients::Coefficients((CoreML::Specification::Coefficients *)Aligned);
        int v68 = google::protobuf::Arena::AllocateAligned(v67, 0, 24);
        char *v68 = (google::protobuf::Arena *)Aligned;
        v68[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Coefficients>;
        uint64_t v69 = (unint64_t *)((char *)v67 + 32);
        do
          unint64_t v70 = __ldxr(v69);
        while (__stxr((unint64_t)v68, v69));
        v68[2] = (google::protobuf::Arena *)v70;
        uint64_t v71 = *((void *)this + 7);
        uint64_t v72 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v72 + 1;
        *(void *)(v71 + 8 * v72 + 8) = Aligned;
LABEL_115:
        uint64_t v73 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v73 < 0)
        {
          int v74 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v74 < 0) {
            return 0;
          }
        }
        else
        {
          int v74 = *v73;
          *(void *)a2 = v73 + 1;
        }
        int v75 = google::protobuf::io::CodedInputStream::PushLimit(a2, v74);
        int v77 = *((_DWORD *)a2 + 13);
        BOOL v52 = __OFSUB__(v77--, 1);
        *((_DWORD *)a2 + 13) = v77;
        if (v77 < 0 != v52) {
          return 0;
        }
        int v53 = v75;
        uint64_t result = CoreML::Specification::Coefficients::MergePartialFromCodedStream((CoreML::Specification::Coefficients *)Aligned, (char **)a2, v76);
        if (!result) {
          return result;
        }
        goto LABEL_121;
      case 6u:
        if (v14 == 49)
        {
          int v38 = 50;
          uint64_t v39 = (unint64_t **)a2;
          uint64_t v40 = (uint64_t)v7;
          goto LABEL_67;
        }
        if (v14 != 50) {
          goto LABEL_9;
        }
        uint64_t v31 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v31 < 0)
        {
          unsigned int v32 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if ((v32 & 0x80000000) != 0) {
            return 0;
          }
        }
        else
        {
          unsigned int v32 = *v31;
          *(void *)a2 = v31 + 1;
        }
        if ((v32 & 7) != 0) {
          return 0;
        }
        int v91 = *((_DWORD *)a2 + 12);
        if (v91 == 0x7FFFFFFF) {
          int v92 = -1;
        }
        else {
          int v92 = v91 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        int v93 = *((_DWORD *)a2 + 10);
        if (v93 == 0x7FFFFFFF) {
          int v94 = -1;
        }
        else {
          int v94 = v93 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        signed int v95 = *v7;
        unsigned int v96 = v32 >> 3;
        if (v94 >= v92) {
          int v97 = v92;
        }
        else {
          int v97 = v94;
        }
        if (v92 == -1) {
          int v98 = v94;
        }
        else {
          int v98 = v97;
        }
        if (v98 >= (uint64_t)v32)
        {
          long long v103 = v6;
          int v104 = v5;
          v105 = v8;
          signed int v106 = v95 + v96;
          if (v32 > 7)
          {
            google::protobuf::RepeatedField<double>::Reserve(v7, v95 + v96);
            uint64_t v107 = *((void *)this + 9);
            uint64_t v142 = 8 * v106 - 8 * *((int *)this + 16);
            if (v142 >= 1) {
              bzero((void *)(v107 + 8 + 8 * *((int *)this + 16)), 8 * (((unint64_t)v142 >> 3) - ((unint64_t)v142 > 7)) + 8);
            }
          }
          else
          {
            uint64_t v107 = *((void *)this + 9);
          }
          unsigned int *v7 = v106;
          uint64_t v143 = v107 + 8;
          if (!v107) {
            uint64_t v143 = 0;
          }
          uint64_t v8 = v105;
          uint64_t v5 = v104;
          uint64_t v6 = v103;
          uint64_t v9 = v148;
          if (!google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v143 + 8 * v95), v32))
          {
            if ((int)*v7 < 1) {
              return 0;
            }
            uint64_t result = 0;
            unsigned int *v7 = v95;
            return result;
          }
        }
        else if (v32 >= 8)
        {
          if (v96 <= 1) {
            int v99 = 1;
          }
          else {
            int v99 = v32 >> 3;
          }
          do
          {
            unint64_t v149 = 0;
            int v100 = *(unint64_t **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
            {
              uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v149);
              if (!result) {
                return result;
              }
              unint64_t v101 = v149;
              signed int v95 = *v7;
            }
            else
            {
              unint64_t v101 = *v100;
              *(void *)a2 = v100 + 1;
            }
            if (v95 == *((_DWORD *)this + 17))
            {
              google::protobuf::RepeatedField<double>::Reserve(v7, v95 + 1);
              signed int v95 = *v7;
            }
            uint64_t v102 = *((void *)this + 9) + 8 * v95;
            *((_DWORD *)this + 16) = v95 + 1;
            *(void *)(v102 + 8) = v101;
            ++v95;
            --v99;
          }
          while (v99);
        }
        continue;
      case 7u:
        if (v14 == 57)
        {
          int v38 = 58;
          uint64_t v39 = (unint64_t **)a2;
          uint64_t v40 = (uint64_t)v6;
          goto LABEL_67;
        }
        if (v14 != 58) {
          goto LABEL_9;
        }
        unsigned int v33 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v33 < 0)
        {
          unsigned int v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if ((v34 & 0x80000000) != 0) {
            return 0;
          }
        }
        else
        {
          unsigned int v34 = *v33;
          *(void *)a2 = v33 + 1;
        }
        if ((v34 & 7) != 0) {
          return 0;
        }
        int v108 = *((_DWORD *)a2 + 12);
        if (v108 == 0x7FFFFFFF) {
          int v109 = -1;
        }
        else {
          int v109 = v108 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        int v110 = *((_DWORD *)a2 + 10);
        if (v110 == 0x7FFFFFFF) {
          int v111 = -1;
        }
        else {
          int v111 = v110 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        signed int v112 = *v6;
        unsigned int v113 = v34 >> 3;
        if (v111 >= v109) {
          int v114 = v109;
        }
        else {
          int v114 = v111;
        }
        if (v109 == -1) {
          int v115 = v111;
        }
        else {
          int v115 = v114;
        }
        if (v115 >= (uint64_t)v34)
        {
          int v120 = v7;
          BOOL v121 = v5;
          int v122 = v8;
          signed int v123 = v112 + v113;
          if (v34 > 7)
          {
            google::protobuf::RepeatedField<double>::Reserve(v6, v112 + v113);
            uint64_t v124 = *((void *)this + 12);
            uint64_t v144 = 8 * v123 - 8 * *((int *)this + 22);
            if (v144 >= 1) {
              bzero((void *)(v124 + 8 + 8 * *((int *)this + 22)), 8 * (((unint64_t)v144 >> 3) - ((unint64_t)v144 > 7)) + 8);
            }
          }
          else
          {
            uint64_t v124 = *((void *)this + 12);
          }
          unsigned int *v6 = v123;
          uint64_t v145 = v124 + 8;
          if (!v124) {
            uint64_t v145 = 0;
          }
          uint64_t v8 = v122;
          uint64_t v5 = v121;
          uint64_t v7 = v120;
          uint64_t v9 = v148;
          if (!google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v145 + 8 * v112), v34))
          {
            if ((int)*v6 < 1) {
              return 0;
            }
            uint64_t result = 0;
            unsigned int *v6 = v112;
            return result;
          }
        }
        else if (v34 >= 8)
        {
          if (v113 <= 1) {
            int v116 = 1;
          }
          else {
            int v116 = v34 >> 3;
          }
          do
          {
            unint64_t v149 = 0;
            char v117 = *(unint64_t **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
            {
              uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v149);
              if (!result) {
                return result;
              }
              unint64_t v118 = v149;
              signed int v112 = *v6;
            }
            else
            {
              unint64_t v118 = *v117;
              *(void *)a2 = v117 + 1;
            }
            if (v112 == *((_DWORD *)this + 23))
            {
              google::protobuf::RepeatedField<double>::Reserve(v6, v112 + 1);
              signed int v112 = *v6;
            }
            uint64_t v119 = *((void *)this + 12) + 8 * v112;
            *((_DWORD *)this + 22) = v112 + 1;
            *(void *)(v119 + 8) = v118;
            ++v112;
            --v116;
          }
          while (v116);
        }
        continue;
      case 8u:
        if (v14 == 65)
        {
          int v38 = 66;
          uint64_t v39 = (unint64_t **)a2;
          uint64_t v40 = (uint64_t)v5;
LABEL_67:
          if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(v38, v39, v40))return 0; {
          continue;
          }
        }
        if (v14 != 66)
        {
LABEL_9:
          if (v14) {
            BOOL v16 = (v14 & 7) == 4;
          }
          else {
            BOOL v16 = 1;
          }
          if (v16) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        int v35 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v35 < 0)
        {
          unsigned int v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if ((v36 & 0x80000000) != 0) {
            return 0;
          }
        }
        else
        {
          unsigned int v36 = *v35;
          *(void *)a2 = v35 + 1;
        }
        if ((v36 & 7) != 0) {
          return 0;
        }
        int v125 = *((_DWORD *)a2 + 12);
        if (v125 == 0x7FFFFFFF) {
          int v126 = -1;
        }
        else {
          int v126 = v125 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        int v127 = *((_DWORD *)a2 + 10);
        if (v127 == 0x7FFFFFFF) {
          int v128 = -1;
        }
        else {
          int v128 = v127 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
        }
        signed int v129 = *v5;
        unsigned int v130 = v36 >> 3;
        if (v128 >= v126) {
          int v131 = v126;
        }
        else {
          int v131 = v128;
        }
        if (v126 == -1) {
          int v132 = v128;
        }
        else {
          int v132 = v131;
        }
        if (v132 < (uint64_t)v36)
        {
          if (v36 >= 8)
          {
            if (v130 <= 1) {
              int v133 = 1;
            }
            else {
              int v133 = v36 >> 3;
            }
            do
            {
              unint64_t v149 = 0;
              int v134 = *(unint64_t **)a2;
              if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
              {
                uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v149);
                if (!result) {
                  return result;
                }
                unint64_t v135 = v149;
                signed int v129 = *v5;
              }
              else
              {
                unint64_t v135 = *v134;
                *(void *)a2 = v134 + 1;
              }
              if (v129 == *((_DWORD *)this + 29))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v129 + 1);
                signed int v129 = *v5;
              }
              uint64_t v136 = *((void *)this + 15) + 8 * v129;
              *((_DWORD *)this + 28) = v129 + 1;
              *(void *)(v136 + 8) = v135;
              ++v129;
              --v133;
            }
            while (v133);
          }
          continue;
        }
        v137 = v7;
        int v138 = v6;
        v139 = v8;
        signed int v140 = v129 + v130;
        if (v36 > 7)
        {
          google::protobuf::RepeatedField<double>::Reserve(v5, v129 + v130);
          uint64_t v141 = *((void *)this + 15);
          uint64_t v146 = 8 * v140 - 8 * *((int *)this + 28);
          if (v146 >= 1) {
            bzero((void *)(v141 + 8 + 8 * *((int *)this + 28)), 8 * (((unint64_t)v146 >> 3) - ((unint64_t)v146 > 7)) + 8);
          }
        }
        else
        {
          uint64_t v141 = *((void *)this + 15);
        }
        unsigned int *v5 = v140;
        uint64_t v147 = v141 + 8;
        if (!v141) {
          uint64_t v147 = 0;
        }
        uint64_t v8 = v139;
        uint64_t v6 = v138;
        uint64_t v7 = v137;
        uint64_t v9 = v148;
        if (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v147 + 8 * v129), v36)) {
          continue;
        }
        if ((int)*v5 >= 1)
        {
          uint64_t result = 0;
          unsigned int *v5 = v129;
          return result;
        }
        return 0;
      default:
        if (v18 == 100)
        {
          if (v14 != 34) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 42) != 100)
          {
            CoreML::Specification::SupportVectorClassifier::clear_ClassLabels((uint64_t)this);
            *((_DWORD *)this + 42) = 100;
            operator new();
          }
          int v37 = (CoreML::Specification::StringVector *)*((void *)this + 19);
          int v47 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v47 < 0)
          {
            int v48 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v48 < 0) {
              return 0;
            }
          }
          else
          {
            int v48 = *v47;
            *(void *)a2 = v47 + 1;
          }
          int v64 = google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
          int v66 = *((_DWORD *)a2 + 13);
          BOOL v52 = __OFSUB__(v66--, 1);
          *((_DWORD *)a2 + 13) = v66;
          if (v66 < 0 != v52) {
            return 0;
          }
          int v53 = v64;
          uint64_t result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v37, (char **)a2, v65);
          if (!result) {
            return result;
          }
        }
        else
        {
          if (v18 != 101 || v14 != 42) {
            goto LABEL_9;
          }
          if (*((_DWORD *)this + 42) != 101)
          {
            CoreML::Specification::SupportVectorClassifier::clear_ClassLabels((uint64_t)this);
            *((_DWORD *)this + 42) = 101;
            operator new();
          }
          uint64_t v22 = (CoreML::Specification::Int64Vector *)*((void *)this + 19);
          int v41 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v41 < 0)
          {
            int v42 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v42 < 0) {
              return 0;
            }
          }
          else
          {
            int v42 = *v41;
            *(void *)a2 = v41 + 1;
          }
          int v55 = google::protobuf::io::CodedInputStream::PushLimit(a2, v42);
          int v57 = *((_DWORD *)a2 + 13);
          BOOL v52 = __OFSUB__(v57--, 1);
          *((_DWORD *)a2 + 13) = v57;
          if (v57 < 0 != v52) {
            return 0;
          }
          int v53 = v55;
          uint64_t result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v22, a2, v56);
          if (!result) {
            return result;
          }
        }
LABEL_121:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v53)) {
          return 0;
        }
        continue;
    }
  }
}

void sub_1DC0B9BA8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Kernel *CoreML::Specification::Kernel::Kernel(CoreML::Specification::Kernel *this)
{
  *(void *)this = &unk_1F3625060;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::Kernel *)&CoreML::Specification::_Kernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC0B9C80(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Kernel::MergePartialFromCodedStream(CoreML::Specification::Kernel *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (2)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1)) {
        break;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *(void *)a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0) {
        goto LABEL_7;
      }
LABEL_23:
      if (v7) {
        BOOL v14 = (v7 & 7) == 4;
      }
      else {
        BOOL v14 = 1;
      }
      if (v14) {
        return 1;
      }
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
        goto LABEL_58;
      }
    }
    LODWORD(v6) = 0;
LABEL_6:
    unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
    unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_23;
    }
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 1)
        {
          CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
          *((_DWORD *)this + 7) = 1;
          operator new();
        }
        uint64_t v9 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v9 < 0)
        {
          int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int VarintSizeAsIntFallback = *v9;
          *(void *)a2 = v9 + 1;
        }
        uint64_t v21 = (CoreML::Specification::LinearKernel *)google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        int v23 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v23--, 1);
        *((_DWORD *)a2 + 13) = v23;
        if (v23 < 0 != v24) {
          goto LABEL_58;
        }
        int v25 = (int)v21;
        uint64_t result = CoreML::Specification::LinearKernel::MergePartialFromCodedStream(v21, (char **)a2, v22);
        if (!result) {
          return result;
        }
        uint64_t v27 = a2;
        int v28 = v25;
        goto LABEL_57;
      case 2u:
        if (v7 != 18) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 2)
        {
          CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
          *((_DWORD *)this + 7) = 2;
          operator new();
        }
        unint64_t v11 = (CoreML::Specification::RBFKernel *)*((void *)this + 2);
        int v15 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
        {
          int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v16 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v16 = *v15;
          *(void *)a2 = v15 + 1;
        }
        int v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
        int v31 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v31--, 1);
        *((_DWORD *)a2 + 13) = v31;
        if (v31 < 0 != v24) {
          goto LABEL_58;
        }
        int v32 = v29;
        uint64_t result = CoreML::Specification::RBFKernel::MergePartialFromCodedStream(v11, (char **)a2, v30);
        if (!result) {
          return result;
        }
        goto LABEL_56;
      case 3u:
        if (v7 != 26) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 3)
        {
          CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
          *((_DWORD *)this + 7) = 3;
          operator new();
        }
        uint64_t v12 = (CoreML::Specification::PolyKernel *)*((void *)this + 2);
        uint64_t v17 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v17 < 0)
        {
          int v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v18 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v18 = *v17;
          *(void *)a2 = v17 + 1;
        }
        int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v18);
        int v35 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v35--, 1);
        *((_DWORD *)a2 + 13) = v35;
        if (v35 < 0 != v24) {
          goto LABEL_58;
        }
        int v32 = v33;
        uint64_t result = CoreML::Specification::PolyKernel::MergePartialFromCodedStream(v12, (char **)a2, v34);
        if (!result) {
          return result;
        }
        goto LABEL_56;
      case 4u:
        if (v7 != 34) {
          goto LABEL_23;
        }
        if (*((_DWORD *)this + 7) != 4)
        {
          CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
          *((_DWORD *)this + 7) = 4;
          operator new();
        }
        uint64_t v13 = (CoreML::Specification::SigmoidKernel *)*((void *)this + 2);
        uint64_t v19 = *(char **)a2;
        if (*(void *)a2 >= *((void *)a2 + 1) || *v19 < 0)
        {
          int v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v20 < 0) {
            goto LABEL_58;
          }
        }
        else
        {
          int v20 = *v19;
          *(void *)a2 = v19 + 1;
        }
        int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
        int v38 = *((_DWORD *)a2 + 13);
        BOOL v24 = __OFSUB__(v38--, 1);
        *((_DWORD *)a2 + 13) = v38;
        if (v38 < 0 != v24) {
          goto LABEL_58;
        }
        int v32 = v36;
        uint64_t result = CoreML::Specification::SigmoidKernel::MergePartialFromCodedStream(v13, (char **)a2, v37);
        if (!result) {
          return result;
        }
LABEL_56:
        uint64_t v27 = a2;
        int v28 = v32;
LABEL_57:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v27, v28)) {
          continue;
        }
LABEL_58:
        uint64_t result = 0;
        break;
      default:
        goto LABEL_23;
    }
    return result;
  }
}

void sub_1DC0BA068(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SupportVectorClassifier::clear_supportVectors(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 164);
  if (v2 == 4 || v2 == 3)
  {
    this = *(void *)(this + 144);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 164) = 0;
  return this;
}

CoreML::Specification::SparseSupportVectors *CoreML::Specification::SparseSupportVectors::SparseSupportVectors(CoreML::Specification::SparseSupportVectors *this)
{
  *(void *)this = &unk_1F3620168;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::SparseSupportVectors *)&CoreML::Specification::_SparseSupportVectors_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0;
  return this;
}

void sub_1DC0BA1B0(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::SparseSupportVectors::MergePartialFromCodedStream(CoreML::Specification::SparseSupportVectors *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::SparseSupportVectors *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          uint64_t v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *uint64_t v12 = v14 + 1;
      int v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::SparseVector::SparseVector((CoreML::Specification::SparseVector *)Aligned);
      uint64_t v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      char *v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseVector>;
      int v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      void v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      unsigned int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        BOOL result = CoreML::Specification::SparseVector::MergePartialFromCodedStream((CoreML::Specification::SparseVector *)Aligned, a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0BA410(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::DenseSupportVectors *CoreML::Specification::DenseSupportVectors::DenseSupportVectors(CoreML::Specification::DenseSupportVectors *this)
{
  *(void *)this = &unk_1F361F328;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::DenseSupportVectors *)&CoreML::Specification::_DenseSupportVectors_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0;
  return this;
}

void sub_1DC0BA4A8(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::DenseSupportVectors::MergePartialFromCodedStream(CoreML::Specification::DenseSupportVectors *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::DenseSupportVectors *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      uint64_t v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          uint64_t v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *uint64_t v12 = v14 + 1;
      int v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::DenseVector::DenseVector((CoreML::Specification::DenseVector *)Aligned);
      uint64_t v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      char *v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::DenseVector>;
      int v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      void v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      unsigned int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        BOOL result = CoreML::Specification::DenseVector::MergePartialFromCodedStream((CoreML::Specification::DenseVector *)Aligned, (char **)a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0BA708(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::Coefficients::MergePartialFromCodedStream(CoreML::Specification::Coefficients *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 3;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v30 = 0;
          unsigned int v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result) {
              return result;
            }
            unint64_t v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unint64_t v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(void *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    unsigned int *v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    unsigned int *v5 = v17;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::SupportVectorClassifier::clear_ClassLabels(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 168);
  if (v2 == 101 || v2 == 100)
  {
    this = *(void *)(this + 152);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 168) = 0;
  return this;
}

CoreML::Specification::Coefficients *CoreML::Specification::Coefficients::Coefficients(CoreML::Specification::Coefficients *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361AA20;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::Coefficients *)&CoreML::Specification::_Coefficients_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0BAAF8(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::Coefficients>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

BOOL CoreML::Specification::DenseVector::MergePartialFromCodedStream(CoreML::Specification::DenseVector *this, char **a2, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = *a2;
          if (*a2 < a2[1]) {
            break;
          }
          LODWORD(v7) = 0;
LABEL_7:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0) {
            goto LABEL_8;
          }
LABEL_14:
          if (v8) {
            BOOL v12 = (v8 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12) {
            return 1;
          }
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0; {
        }
          }
        uint64_t v7 = *v6;
        if (*v6 < 1) {
          goto LABEL_7;
        }
        *a2 = v6 + 1;
        unint64_t v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0) {
          goto LABEL_14;
        }
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8) {
          goto LABEL_14;
        }
        if (v8 != 9) {
          break;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0; {
      }
        }
      if (v8 != 10) {
        goto LABEL_14;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        unsigned int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0) {
          return 0;
        }
      }
      else
      {
        unsigned int VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0) {
        return 0;
      }
      int v13 = *((_DWORD *)a2 + 12);
      int v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      int v15 = *((_DWORD *)a2 + 10);
      int v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      signed int v17 = *v5;
      unsigned int v18 = VarintSizeAsIntFallback >> 3;
      int v19 = v16 >= v14 ? v14 : v16;
      int v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback) {
        break;
      }
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1) {
          int v21 = 1;
        }
        else {
          int v21 = VarintSizeAsIntFallback >> 3;
        }
        do
        {
          unint64_t v30 = 0;
          unsigned int v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result) {
              return result;
            }
            unint64_t v23 = v30;
            signed int v17 = *v5;
          }
          else
          {
            unint64_t v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            signed int v17 = *v5;
          }
          uint64_t v24 = *((void *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(void *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    signed int v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      uint64_t v27 = *((void *)this + 3);
      uint64_t v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1) {
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
      }
    }
    else
    {
      uint64_t v27 = *((void *)this + 3);
    }
    unsigned int *v5 = v26;
    uint64_t v29 = v27 + 8;
    if (!v27) {
      uint64_t v29 = 0;
    }
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    BOOL result = 0;
    unsigned int *v5 = v17;
    return result;
  }
  return 0;
}

CoreML::Specification::DenseVector *CoreML::Specification::DenseVector::DenseVector(CoreML::Specification::DenseVector *this)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1F361A560;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (this != (CoreML::Specification::DenseVector *)&CoreML::Specification::_DenseVector_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1DC0BAEAC(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (v4)
  {
    if (!*v4) {
      operator delete(v4);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::DenseVector>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

BOOL CoreML::Specification::SparseVector::MergePartialFromCodedStream(CoreML::Specification::SparseVector *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  uint64_t v5 = (CoreML::Specification::SparseVector *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        unint64_t v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_8;
      }
      uint64_t v7 = *v6;
      if (*v6 < 1) {
        goto LABEL_7;
      }
      *(void *)a2 = v6 + 1;
      unint64_t v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0) {
        break;
      }
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8) {
        break;
      }
      BOOL v12 = (int *)*((void *)this + 4);
      if (!v12)
      {
        int v13 = *((_DWORD *)this + 6);
        int v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          BOOL v12 = (int *)*((void *)this + 4);
        }
        int v14 = *v12;
        goto LABEL_26;
      }
      int v13 = *((_DWORD *)this + 6);
      int v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(google::protobuf::Arena ***)&v12[2 * v13 + 2];
        goto LABEL_31;
      }
      if (v14 == *((_DWORD *)this + 7)) {
        goto LABEL_23;
      }
LABEL_26:
      *BOOL v12 = v14 + 1;
      int v16 = *(google::protobuf::Arena **)v5;
      if (!*(void *)v5) {
        operator new();
      }
      CoreML::Specification::SparseNode::SparseNode((CoreML::Specification::SparseNode *)Aligned);
      signed int v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
      char *v17 = (google::protobuf::Arena *)Aligned;
      v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseNode>;
      unsigned int v18 = (unint64_t *)((char *)v16 + 32);
      do
        unint64_t v19 = __ldxr(v18);
      while (__stxr((unint64_t)v17, v18));
      void v17[2] = (google::protobuf::Arena *)v19;
      uint64_t v20 = *((void *)this + 4);
      uint64_t v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(void *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_31:
      unsigned int v22 = *(char **)a2;
      if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
      {
        int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0) {
          return 0;
        }
      }
      else
      {
        int VarintSizeAsIntFallback = *v22;
        *(void *)a2 = v22 + 1;
      }
      int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      int v26 = *((_DWORD *)a2 + 13);
      BOOL v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        int v28 = v24;
        BOOL result = CoreML::Specification::SparseNode::MergePartialFromCodedStream((CoreML::Specification::SparseNode *)Aligned, (char **)a2, v25);
        if (!result) {
          return result;
        }
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
          continue;
        }
      }
      return 0;
    }
    if (!v8 || (v8 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0BB138(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::SparseNode::MergePartialFromCodedStream(CoreML::Specification::SparseNode *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v17 = 0;
        BOOL v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v17);
          if (!result) {
            return result;
          }
          unint64_t v13 = v17;
        }
        else
        {
          unint64_t v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((void *)this + 2) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8) {
        break;
      }
      unsigned int v10 = *a2;
      if (*a2 >= a2[1])
      {
        int v11 = 0;
      }
      else
      {
        int v11 = *v10;
        if ((*v10 & 0x80000000) == 0)
        {
          *a2 = v10 + 1;
          goto LABEL_28;
        }
      }
      Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v11);
      int v11 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_28:
      *((_DWORD *)this + 6) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SparseNode *CoreML::Specification::SparseNode::SparseNode(CoreML::Specification::SparseNode *this)
{
  *(void *)this = &unk_1F361A430;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SparseNode *)&CoreML::Specification::_SparseNode_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return this;
}

void sub_1DC0BB310(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseNode>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

CoreML::Specification::SparseVector *CoreML::Specification::SparseVector::SparseVector(CoreML::Specification::SparseVector *this)
{
  *(void *)this = &unk_1F361B438;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::SparseVector *)&CoreML::Specification::_SparseVector_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((_DWORD *)this + 1CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0;
  return this;
}

void sub_1DC0BB3BC(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseVector>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t CoreML::Specification::Kernel::clear_kernel(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 28))
  {
    case 1:
    case 2:
    case 3:
    case 4:
      this = *(void *)(this + 16);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::RBFKernel *CoreML::Specification::RBFKernel::RBFKernel(CoreML::Specification::RBFKernel *this)
{
  *(void *)this = &unk_1F3626820;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::RBFKernel *)&CoreML::Specification::_RBFKernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1DC0BB4F4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RBFKernel::MergePartialFromCodedStream(CoreML::Specification::RBFKernel *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      uint64_t v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0) {
          break;
        }
        goto LABEL_7;
      }
      uint64_t v6 = *v5;
      if (*v5 < 1) {
        goto LABEL_6;
      }
      *a2 = v5 + 1;
      unint64_t v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0) {
        break;
      }
LABEL_7:
      if (v7 != 9 || (v7 & 0xFFFFFFF8) != 8) {
        break;
      }
      unint64_t v14 = 0;
      BOOL v12 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v14);
        if (!result) {
          return result;
        }
        unint64_t v13 = v14;
      }
      else
      {
        unint64_t v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((void *)this + 2) = v13;
    }
    if (v7) {
      BOOL v10 = (v7 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    BOOL result = v10;
    if (v10) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PolyKernel *CoreML::Specification::PolyKernel::PolyKernel(CoreML::Specification::PolyKernel *this)
{
  *(void *)this = &unk_1F361A398;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::PolyKernel *)&CoreML::Specification::_PolyKernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return this;
}

void sub_1DC0BB668(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::PolyKernel::MergePartialFromCodedStream(CoreML::Specification::PolyKernel *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0) {
              goto LABEL_25;
            }
            goto LABEL_7;
          }
          uint64_t v6 = *v5;
          if (*v5 < 1) {
            goto LABEL_6;
          }
          *a2 = v5 + 1;
          unint64_t v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_25;
          }
LABEL_7:
          unsigned int v9 = v7 >> 3;
          if (v7 >> 3 != 3) {
            break;
          }
          if (v7 != 25) {
            goto LABEL_25;
          }
          unint64_t v20 = 0;
          unint64_t v13 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v20);
            if (!result) {
              return result;
            }
            unint64_t v14 = v20;
          }
          else
          {
            unint64_t v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((void *)this + 3) = v14;
        }
        if (v9 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_25;
        }
        unint64_t v20 = 0;
        int v15 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v20);
          if (!result) {
            return result;
          }
          unint64_t v16 = v20;
        }
        else
        {
          unint64_t v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((void *)this + 2) = v16;
      }
      if (v9 != 1 || v7 != 8) {
        break;
      }
      int v11 = *a2;
      if (*a2 >= a2[1])
      {
        int v12 = 0;
      }
      else
      {
        int v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_33;
        }
      }
      Varint32Fallbacint k = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      int v12 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_33:
      *((_DWORD *)this + 8) = v12;
    }
LABEL_25:
    if (v7) {
      BOOL v17 = (v7 & 7) == 4;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17) {
      return 1;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SigmoidKernel *CoreML::Specification::SigmoidKernel::SigmoidKernel(CoreML::Specification::SigmoidKernel *this)
{
  *(void *)this = &unk_1F361BAC0;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SigmoidKernel *)&CoreML::Specification::_SigmoidKernel_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1DC0BB888(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::SigmoidKernel::MergePartialFromCodedStream(CoreML::Specification::SigmoidKernel *this, char **a2, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0) {
            goto LABEL_20;
          }
          goto LABEL_7;
        }
        uint64_t v6 = *v5;
        if (*v5 < 1) {
          goto LABEL_6;
        }
        *a2 = v5 + 1;
        unint64_t v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0) {
          goto LABEL_20;
        }
LABEL_7:
        if (v7 >> 3 != 2) {
          break;
        }
        if (v7 != 17) {
          goto LABEL_20;
        }
        unint64_t v16 = 0;
        int v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result) {
            return result;
          }
          unint64_t v13 = v16;
        }
        else
        {
          unint64_t v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((void *)this + 3) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 9) {
        break;
      }
      unint64_t v16 = 0;
      BOOL v10 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        BOOL result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
        if (!result) {
          return result;
        }
        unint64_t v11 = v16;
      }
      else
      {
        unint64_t v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((void *)this + 2) = v11;
    }
LABEL_20:
    if (v7) {
      BOOL v14 = (v7 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    BOOL result = v14;
    if (v14) {
      return result;
    }
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

std::string *CoreML::Specification::SupportVectorClassifier::MergeFrom(std::string *this, const CoreML::Specification::SupportVectorClassifier *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(v3 + 16), *(_DWORD *)(v3 + 16) + v5);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 24) + 4 * *(int *)(v3 + 16) + 8), (const void *)(*((void *)a2 + 3) + 8), 4 * *((int *)a2 + 4));
    *(_DWORD *)(v3 + 16) += *((_DWORD *)a2 + 4);
  }
  int v6 = *((_DWORD *)a2 + 12);
  if (v6)
  {
    uint64_t v39 = *((void *)a2 + 7);
    this = (std::string *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 40), v6);
    int v38 = this;
    uint64_t v7 = **(int **)(v3 + 56);
    uint64_t v8 = *(int *)(v3 + 48);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v6) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      unint64_t v11 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)this;
      int v12 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v39 + 8);
      do
      {
        BOOL v14 = *v12++;
        unint64_t v13 = v14;
        int v15 = *v11++;
        this = (std::string *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v6)
    {
      unint64_t v16 = *(google::protobuf::Arena **)(v3 + 40);
      int v17 = v8 + v6 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v38 + v18);
      unint64_t v20 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v18 + v39 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::Coefficients::Coefficients((CoreML::Specification::Coefficients *)Aligned);
        unint64_t v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *unint64_t v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Coefficients>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (std::string *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v21, (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *(_DWORD *)(v3 + 48) + v6;
    *(_DWORD *)(v3 + 48) = v26;
    BOOL v27 = *(int **)(v3 + 56);
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  int v28 = *((_DWORD *)a2 + 16);
  if (v28)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 64), *(_DWORD *)(v3 + 64) + v28);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 72) + 8 * *(int *)(v3 + 64) + 8), (const void *)(*((void *)a2 + 9) + 8), 8 * *((int *)a2 + 16));
    *(_DWORD *)(v3 + 64) += *((_DWORD *)a2 + 16);
  }
  int v29 = *((_DWORD *)a2 + 22);
  if (v29)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 88), *(_DWORD *)(v3 + 88) + v29);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 96) + 8 * *(int *)(v3 + 88) + 8), (const void *)(*((void *)a2 + 12) + 8), 8 * *((int *)a2 + 22));
    *(_DWORD *)(v3 + 88) += *((_DWORD *)a2 + 22);
  }
  int v30 = *((_DWORD *)a2 + 28);
  if (v30)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 112), *(_DWORD *)(v3 + 112) + v30);
    this = (std::string *)memcpy((void *)(*(void *)(v3 + 120) + 8 * *(int *)(v3 + 112) + 8), (const void *)(*((void *)a2 + 15) + 8), 8 * *((int *)a2 + 28));
    *(_DWORD *)(v3 + 112) += *((_DWORD *)a2 + 28);
  }
  if (a2 != (const CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_
    && *((void *)a2 + 17))
  {
    int v31 = *(std::string **)(v3 + 136);
    if (!v31) {
      operator new();
    }
    this = CoreML::Specification::Kernel::MergeFrom(v31, *((const CoreML::Specification::Kernel **)a2 + 17));
  }
  int v32 = *((_DWORD *)a2 + 41);
  if (v32 == 4)
  {
    if (*(_DWORD *)(v3 + 164) != 4)
    {
      CoreML::Specification::SupportVectorClassifier::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 164) = 4;
      operator new();
    }
    this = (std::string *)CoreML::Specification::DenseSupportVectors::MergeFrom(*(unint64_t **)(v3 + 144), *((const CoreML::Specification::DenseSupportVectors **)a2 + 18));
  }
  else if (v32 == 3)
  {
    if (*(_DWORD *)(v3 + 164) != 3)
    {
      CoreML::Specification::SupportVectorClassifier::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 164) = 3;
      operator new();
    }
    this = (std::string *)CoreML::Specification::SparseSupportVectors::MergeFrom(*(unint64_t **)(v3 + 144), *((const CoreML::Specification::SparseSupportVectors **)a2 + 18));
  }
  int v33 = *((_DWORD *)a2 + 42);
  if (v33 == 101)
  {
    if (*(_DWORD *)(v3 + 168) != 101)
    {
      CoreML::Specification::SupportVectorClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 168) = 101;
      operator new();
    }
    unsigned int v37 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((void *)a2 + 19);
    int v35 = *(unint64_t **)(v3 + 152);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v35, v37);
  }
  else if (v33 == 100)
  {
    if (*(_DWORD *)(v3 + 168) != 100)
    {
      CoreML::Specification::SupportVectorClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 168) = 100;
      operator new();
    }
    int v36 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((void *)a2 + 19);
    unsigned int v34 = *(std::string **)(v3 + 152);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom(v34, v36);
  }
  return this;
}

void sub_1DC0BBF80(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::Kernel::MergeFrom(std::string *this, const CoreML::Specification::Kernel *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 1;
        operator new();
      }
      uint64_t v11 = *(void *)(*((void *)a2 + 2) + 8);
      if (v11)
      {
        int v12 = (unint64_t *)(*(void *)(v3 + 16) + 8);
        this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v12, v11 & 0xFFFFFFFFFFFFFFFELL);
      }
      break;
    case 2:
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 2;
        operator new();
      }
      uint64_t v5 = *(void *)(v3 + 16);
      uint64_t v8 = *((void *)a2 + 2);
      uint64_t v13 = *(void *)(v8 + 8);
      if (v13) {
        this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)(v5 + 8), v13 & 0xFFFFFFFFFFFFFFFELL);
      }
      double v14 = *(double *)(v8 + 16);
      if (v14 != 0.0) {
        *(double *)(v5 + 16) = v14;
      }
      break;
    case 3:
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 3;
        operator new();
      }
      int v6 = (const CoreML::Specification::PolyKernel *)*((void *)a2 + 2);
      int v9 = *(std::string **)(v3 + 16);
      this = CoreML::Specification::PolyKernel::MergeFrom(v9, v6);
      break;
    case 4:
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 4;
        operator new();
      }
      uint64_t v7 = (const CoreML::Specification::SigmoidKernel *)*((void *)a2 + 2);
      uint64_t v10 = *(std::string **)(v3 + 16);
      this = CoreML::Specification::SigmoidKernel::MergeFrom(v10, v7);
      break;
    default:
      return this;
  }
  return this;
}

void sub_1DC0BC28C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::SparseSupportVectors::MergeFrom(unint64_t *this, const CoreML::Specification::SparseSupportVectors *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    int v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (const CoreML::Specification::SparseVector **)(v28 + 8);
      int v12 = (unint64_t **)this;
      do
      {
        double v14 = *v11++;
        uint64_t v13 = v14;
        int v15 = *v12++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      unint64_t v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      unint64_t v20 = (const CoreML::Specification::SparseVector **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::SparseVector::SparseVector((CoreML::Specification::SparseVector *)Aligned);
        unint64_t v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *unint64_t v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseVector>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(v21, (unint64_t *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC0BC4A8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

unint64_t *CoreML::Specification::DenseSupportVectors::MergeFrom(unint64_t *this, const CoreML::Specification::DenseSupportVectors *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    int v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v28 + 8);
      int v12 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)this;
      do
      {
        double v14 = *v11++;
        uint64_t v13 = v14;
        int v15 = *v12++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      unint64_t v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      unint64_t v20 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::DenseVector::DenseVector((CoreML::Specification::DenseVector *)Aligned);
        unint64_t v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *unint64_t v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::DenseVector>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v21, (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC0BC678(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

unint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(const CoreML::Specification::SparseVector *a1, unint64_t *a2)
{
  return CoreML::Specification::SparseVector::MergeFrom(a2, a1);
}

unint64_t *CoreML::Specification::SparseVector::MergeFrom(unint64_t *this, const CoreML::Specification::SparseVector *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v28 = *((void *)a2 + 4);
    this = (unint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    int v6 = this;
    uint64_t v7 = *(int *)v3[4];
    uint64_t v8 = *((int *)v3 + 6);
    int v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v9;
    }
    if ((int)v10 >= 1)
    {
      uint64_t v11 = (const CoreML::Specification::SparseNode **)(v28 + 8);
      int v12 = (std::string **)this;
      do
      {
        double v14 = *v11++;
        uint64_t v13 = v14;
        int v15 = *v12++;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      unint64_t v16 = (google::protobuf::Arena *)v3[2];
      int v17 = v8 + v5 - v7;
      uint64_t v18 = 8 * v7 - 8 * v8;
      unint64_t v19 = (google::protobuf::Arena ***)((char *)v6 + v18);
      unint64_t v20 = (const CoreML::Specification::SparseNode **)(v18 + v28 + 8);
      do
      {
        uint64_t v21 = *v20;
        if (!v16) {
          operator new();
        }
        CoreML::Specification::SparseNode::SparseNode((CoreML::Specification::SparseNode *)Aligned);
        unint64_t v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *unint64_t v23 = (google::protobuf::Arena *)Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseNode>;
        int v24 = (unint64_t *)((char *)v16 + 32);
        do
          unint64_t v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
        this = (unint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    int v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    BOOL v27 = (int *)v3[4];
    if (*v27 < v26) {
      int *v27 = v26;
    }
  }
  return this;
}

void sub_1DC0BC858(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(const CoreML::Specification::SparseNode *a1, std::string *a2)
{
  return CoreML::Specification::SparseNode::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::SparseNode::MergeFrom(std::string *this, const CoreML::Specification::SparseNode *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6) {
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v6;
  }
  return this;
}

std::string *CoreML::Specification::PolyKernel::MergeFrom(std::string *this, const CoreML::Specification::PolyKernel *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  double v6 = *((double *)a2 + 3);
  if (v6 != 0.0) {
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  int v7 = *((_DWORD *)a2 + 8);
  if (v7) {
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
  }
  return this;
}

std::string *CoreML::Specification::SigmoidKernel::MergeFrom(std::string *this, const CoreML::Specification::SigmoidKernel *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  double v5 = *((double *)a2 + 2);
  if (v5 != 0.0) {
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  }
  double v6 = *((double *)a2 + 3);
  if (v6 != 0.0) {
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

uint64_t CoreML::Specification::SupportVectorClassifier::IsInitialized(CoreML::Specification::SupportVectorClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::SupportVectorClassifier::Clear(CoreML::Specification::SupportVectorClassifier *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t v2 = *((unsigned int *)this + 12);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v4 = *v3++;
      *(_DWORD *)(v4 + 16) = 0;
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 12) = 0;
  }
  *((_DWORD *)this + 16) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_DWORD *)this + 28) = 0;
  uint64_t v5 = *((void *)this + 17);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 17) = 0;
  CoreML::Specification::SupportVectorClassifier::clear_supportVectors((uint64_t)this);
  return CoreML::Specification::SupportVectorClassifier::clear_ClassLabels((uint64_t)this);
}

void CoreML::Specification::SupportVectorClassifier::New(CoreML::Specification::SupportVectorClassifier *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BCA9C(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4069FFF750);
  _Unwind_Resume(a1);
}

CoreML::Specification::SupportVectorClassifier *CoreML::Specification::SupportVectorClassifier::SupportVectorClassifier(CoreML::Specification::SupportVectorClassifier *this)
{
  *((void *)this + 1) = 0;
  *(_OWORD *)((char *)this + 4CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0u;
  *(void *)this = &unk_1F3621CB8;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  if (this != (CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 17) = 0;
  *((_DWORD *)this + 42) = 0;
  *((void *)this + 2CoreML::Specification::CustomModel_CustomModelParamValue::New(this, 0) = 0;
  return this;
}

void sub_1DC0BCB50(_Unwind_Exception *a1)
{
  uint64_t v5 = (void *)v2[15];
  if (v5 && !*v5) {
    operator delete(v5);
  }
  double v6 = (void *)v2[12];
  if (v6 && !*v6) {
    operator delete(v6);
  }
  int v7 = (void *)v2[9];
  if (v7 && !*v7) {
    operator delete(v7);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  uint64_t v8 = (void *)v2[3];
  if (v8)
  {
    if (!*v8) {
      operator delete(v8);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SupportVectorClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    BOOL result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *BOOL result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorClassifier>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorClassifier>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SupportVectorClassifier::New(CoreML::Specification::SupportVectorClassifier *this)
{
}

void *CoreML::Specification::SupportVectorClassifier::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SupportVectorClassifier");
}

void CoreML::Specification::SupportVectorClassifier::~SupportVectorClassifier(CoreML::Specification::SupportVectorClassifier *this)
{
  CoreML::Specification::SupportVectorClassifier::~SupportVectorClassifier(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  *(void *)this = &unk_1F3621CB8;
  if (this != (CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_)
  {
    uint64_t v2 = *((void *)this + 17);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  if (*((_DWORD *)this + 41)) {
    CoreML::Specification::SupportVectorClassifier::clear_supportVectors((uint64_t)this);
  }
  if (*((_DWORD *)this + 42)) {
    CoreML::Specification::SupportVectorClassifier::clear_ClassLabels((uint64_t)this);
  }
  uint64_t v3 = (void *)*((void *)this + 15);
  if (v3 && !*v3) {
    operator delete(v3);
  }
  uint64_t v4 = (void *)*((void *)this + 12);
  if (v4 && !*v4) {
    operator delete(v4);
  }
  unint64_t v5 = (void *)*((void *)this + 9);
  if (v5 && !*v5) {
    operator delete(v5);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((void *)this + 5);
  double v6 = (void *)*((void *)this + 3);
  if (v6 && !*v6) {
    operator delete(v6);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::SupportVectorRegressor::GetCachedSize(CoreML::Specification::SupportVectorRegressor *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t *CoreML::Specification::SupportVectorRegressor::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  if (this != &CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    uint64_t v5 = this[2];
    if (v5) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(1, v5, a2);
    }
  }
  int v6 = *((_DWORD *)v4 + 13);
  if (v6 == 2)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(2, v4[5], a2);
    int v6 = *((_DWORD *)v4 + 13);
  }
  if (v6 == 3) {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(3, v4[5], a2);
  }
  if (v4 != &CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    uint64_t v7 = v4[3];
    if (v7) {
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage(4, v7, a2);
    }
  }
  double v8 = *((double *)v4 + 4);
  if (v8 != 0.0)
  {
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)5, a2, v8, a3);
  }
  return this;
}

uint64_t CoreML::Specification::SupportVectorRegressor::ByteSizeLong(CoreML::Specification::SupportVectorRegressor *this)
{
  if (this == (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v2 = (CoreML::Specification::Kernel *)*((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = CoreML::Specification::Kernel::ByteSizeLong(v2);
      uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v4 = 0;
    }
    uint64_t v5 = (unsigned int *)*((void *)this + 3);
    if (v5)
    {
      uint64_t v6 = v5[4];
      uint64_t v7 = 8 * v6;
      if (v6)
      {
        if ((v7 & 0x80000000) != 0) {
          uint64_t v8 = 11;
        }
        else {
          uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
      }
      else
      {
        uint64_t v8 = 0;
      }
      uint64_t v9 = v8 + v7;
      char v5[8] = v7;
      v5[9] = v9;
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((double *)this + 4) == 0.0) {
    uint64_t v10 = v4;
  }
  else {
    uint64_t v10 = v4 + 9;
  }
  int v11 = *((_DWORD *)this + 13);
  if (v11 == 3)
  {
    uint64_t v12 = CoreML::Specification::DenseSupportVectors::ByteSizeLong(*((CoreML::Specification::DenseSupportVectors **)this
                                                                   + 5));
    goto LABEL_20;
  }
  if (v11 == 2)
  {
    uint64_t v12 = CoreML::Specification::SparseSupportVectors::ByteSizeLong(*((CoreML::Specification::SparseSupportVectors **)this
                                                                    + 5));
LABEL_20:
    v10 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 12) = v10;
  return v10;
}

uint64_t CoreML::Specification::SupportVectorRegressor::MergePartialFromCodedStream(CoreML::Specification::SupportVectorRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = *(char **)a2;
      if (*(void *)a2 < *((void *)a2 + 1)) {
        break;
      }
      LODWORD(v6) = 0;
LABEL_6:
      unsigned int TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      unint64_t v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0) {
        goto LABEL_30;
      }
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_30;
          }
          uint64_t v9 = (CoreML::Specification::Kernel *)*((void *)this + 2);
          if (!v9) {
            operator new();
          }
          uint64_t v10 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v10 < 0)
          {
            int VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0) {
              return 0;
            }
          }
          else
          {
            int VarintSizeAsIntFallback = *v10;
            *(void *)a2 = v10 + 1;
          }
          int v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          int v26 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 13) = v26;
          if (v26 < 0 != v27) {
            return 0;
          }
          int v28 = v24;
          uint64_t result = CoreML::Specification::Kernel::MergePartialFromCodedStream(v9, a2, v25);
          if (!result) {
            return result;
          }
          goto LABEL_59;
        case 2u:
          if (v7 != 18) {
            goto LABEL_30;
          }
          if (*((_DWORD *)this + 13) != 2)
          {
            CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
            *((_DWORD *)this + 13) = 2;
            operator new();
          }
          uint64_t v12 = (CoreML::Specification::SparseSupportVectors *)*((void *)this + 5);
          unint64_t v20 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v20 < 0)
          {
            int v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v21 < 0) {
              return 0;
            }
          }
          else
          {
            int v21 = *v20;
            *(void *)a2 = v20 + 1;
          }
          int v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
          int v35 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v35--, 1);
          *((_DWORD *)a2 + 13) = v35;
          if (v35 < 0 != v27) {
            return 0;
          }
          int v28 = v33;
          uint64_t result = CoreML::Specification::SparseSupportVectors::MergePartialFromCodedStream(v12, a2, v34);
          if (!result) {
            return result;
          }
          goto LABEL_59;
        case 3u:
          if (v7 != 26) {
            goto LABEL_30;
          }
          if (*((_DWORD *)this + 13) != 3)
          {
            CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
            *((_DWORD *)this + 13) = 3;
            operator new();
          }
          uint64_t v13 = (CoreML::Specification::DenseSupportVectors *)*((void *)this + 5);
          unsigned int v22 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v22 < 0)
          {
            int v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v23 < 0) {
              return 0;
            }
          }
          else
          {
            int v23 = *v22;
            *(void *)a2 = v22 + 1;
          }
          int v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
          int v38 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v38--, 1);
          *((_DWORD *)a2 + 13) = v38;
          if (v38 < 0 != v27) {
            return 0;
          }
          int v28 = v36;
          uint64_t result = CoreML::Specification::DenseSupportVectors::MergePartialFromCodedStream(v13, a2, v37);
          if (!result) {
            return result;
          }
LABEL_59:
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28)) {
            continue;
          }
          return 0;
        case 4u:
          if (v7 != 34) {
            goto LABEL_30;
          }
          double v14 = (CoreML::Specification::Coefficients *)*((void *)this + 3);
          if (!v14) {
            operator new();
          }
          int v15 = *(char **)a2;
          if (*(void *)a2 >= *((void *)a2 + 1) || *v15 < 0)
          {
            int v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0) {
              return 0;
            }
          }
          else
          {
            int v16 = *v15;
            *(void *)a2 = v15 + 1;
          }
          int v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          int v32 = *((_DWORD *)a2 + 13);
          BOOL v27 = __OFSUB__(v32--, 1);
          *((_DWORD *)a2 + 13) = v32;
          if (v32 < 0 != v27) {
            return 0;
          }
          int v28 = v30;
          uint64_t result = CoreML::Specification::Coefficients::MergePartialFromCodedStream(v14, (char **)a2, v31);
          if (!result) {
            return result;
          }
          goto LABEL_59;
        case 5u:
          if (v7 != 41) {
            goto LABEL_30;
          }
          unint64_t v39 = 0;
          int v17 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(void *)a2) < 8)
          {
            uint64_t result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v39);
            if (!result) {
              return result;
            }
            unint64_t v18 = v39;
          }
          else
          {
            unint64_t v18 = *v17;
            *(void *)a2 = v17 + 1;
          }
          *((void *)this + 4) = v18;
          break;
        default:
          goto LABEL_30;
      }
    }
    uint64_t v6 = *v5;
    if (*v5 < 1) {
      goto LABEL_6;
    }
    *(void *)a2 = v5 + 1;
    unint64_t v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_7;
    }
LABEL_30:
    if (!v7 || (v7 & 7) == 4) {
      return 1;
    }
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0) {
      return 0;
    }
  }
}

void sub_1DC0BD3B0(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SupportVectorRegressor::clear_supportVectors(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 52);
  if (v2 == 3 || v2 == 2)
  {
    this = *(void *)(this + 40);
    if (this) {
      this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

std::string *CoreML::Specification::SupportVectorRegressor::MergeFrom(std::string *this, const CoreML::Specification::SupportVectorRegressor *a2)
{
  uint64_t v3 = (uint64_t)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a2 != (const CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    if (*((void *)a2 + 2))
    {
      uint64_t v5 = *(std::string **)(v3 + 16);
      if (!v5) {
        operator new();
      }
      this = CoreML::Specification::Kernel::MergeFrom(v5, *((const CoreML::Specification::Kernel **)a2 + 2));
    }
    if (*((void *)a2 + 3))
    {
      uint64_t v6 = *(unint64_t **)(v3 + 24);
      if (!v6) {
        operator new();
      }
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v6, *((const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)a2 + 3));
    }
  }
  double v7 = *((double *)a2 + 4);
  if (v7 != 0.0) {
    *(double *)(v3 + 32) = v7;
  }
  int v8 = *((_DWORD *)a2 + 13);
  if (v8 == 3)
  {
    if (*(_DWORD *)(v3 + 52) != 3)
    {
      CoreML::Specification::SupportVectorRegressor::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 52) = 3;
      operator new();
    }
    uint64_t v10 = (const CoreML::Specification::DenseSupportVectors *)*((void *)a2 + 5);
    uint64_t v12 = *(unint64_t **)(v3 + 40);
    return (std::string *)CoreML::Specification::DenseSupportVectors::MergeFrom(v12, v10);
  }
  else if (v8 == 2)
  {
    if (*(_DWORD *)(v3 + 52) != 2)
    {
      CoreML::Specification::SupportVectorRegressor::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 52) = 2;
      operator new();
    }
    uint64_t v9 = (const CoreML::Specification::SparseSupportVectors *)*((void *)a2 + 5);
    int v11 = *(unint64_t **)(v3 + 40);
    return (std::string *)CoreML::Specification::SparseSupportVectors::MergeFrom(v11, v9);
  }
  return this;
}

void sub_1DC0BD6A8(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SupportVectorRegressor::IsInitialized(CoreML::Specification::SupportVectorRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::SupportVectorRegressor::Clear(CoreML::Specification::SupportVectorRegressor *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 3);
  *((void *)this + 2) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  return CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
}

void CoreML::Specification::SupportVectorRegressor::New(CoreML::Specification::SupportVectorRegressor *this, google::protobuf::Arena *a2)
{
}

void sub_1DC0BD7EC(_Unwind_Exception *a1)
{
  MEMORY[0x1E0198C00](v1, 0x10A1C4034009599);
  _Unwind_Resume(a1);
}

CoreML::Specification::SupportVectorRegressor *CoreML::Specification::SupportVectorRegressor::SupportVectorRegressor(CoreML::Specification::SupportVectorRegressor *this)
{
  *(void *)this = &unk_1F3621468;
  *((void *)this + 1) = 0;
  if (this != (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_) {
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  }
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_1DC0BD878(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SupportVectorRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *uint64_t result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorRegressor>;
    uint64_t v4 = (unint64_t *)(v3 + 4);
    do
      unint64_t v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorRegressor>(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void CoreML::Specification::SupportVectorRegressor::New(CoreML::Specification::SupportVectorRegressor *this)
{
}

void *CoreML::Specification::SupportVectorRegressor::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SupportVectorRegressor");
}

void CoreML::Specification::SupportVectorRegressor::~SupportVectorRegressor(CoreML::Specification::SupportVectorRegressor *this)
{
  CoreML::Specification::SupportVectorRegressor::~SupportVectorRegressor(this);
  JUMPOUT(0x1E0198C00);
}

{
  uint64_t v2;
  uint64_t v3;

  *(void *)this = &unk_1F3621468;
  if (this != (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  if (*((_DWORD *)this + 13)) {
    CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t CoreML::Specification::Coefficients::GetCachedSize(CoreML::Specification::Coefficients *this)
{
  return *((unsigned int *)this + 9);
}

uint64_t CoreML::Specification::Coefficients::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      int v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(unsigned char *)(*((void *)a2 + 1))++ = 10;
      int v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    unsigned int v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 1);
      if (v5 < 0x80)
      {
        unsigned int v8 = *(_DWORD *)(v3 + 32);
        double v7 = (unsigned char *)*((void *)a2 + 1);
      }
      else
      {
        double v7 = (unsigned char *)*((void *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          unsigned int v8 = v5 >> 7;
          unsigned int v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      unsigned char *v7 = v8;
      int v10 = v7 - v6 + 1;
      *((void *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    uint64_t v11 = *(void *)(v3 + 24);
    if (v11) {
      uint64_t v12 = (char *)(v11 + 8);
    }
    else {
      uint64_t v12 = 0;
    }
    int v13 = 8 * *(_DWORD *)(v3 + 16);
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, v13);
  }
  return this;
}