id sub_1C285AD80@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;

  return sub_1C285AD14(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C285AD9C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v3 = *a1;

  return SharingEntryProfileInformation.init(sharingEntry:)(v3, a2);
}

uint64_t sub_1C285ADD8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C285AAD4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C285AE2C()
{
  if (!qword_1EA310CC8)
  {
    uint64_t v0 = MEMORY[0x1E4FBB320];
    sub_1C27D9A54(255, &qword_1EBB75580, (uint64_t)&qword_1EBB75690, MEMORY[0x1E4FBB320], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
    sub_1C27D8E3C(255, &qword_1EA310C90, MEMORY[0x1E4FBB718]);
    sub_1C27D9AD0(&qword_1EBB75578, &qword_1EBB75580, (uint64_t)&qword_1EBB75690, v0);
    unint64_t v1 = sub_1C28CCF10();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA310CC8);
    }
  }
}

uint64_t sub_1C285AF28()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C285AF60@<X0>(unint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C285A720(a1, *(uint64_t (**)(id))(v2 + 16), a2);
}

uint64_t HKSummarySharingEntryStore.fetchIncomingAcceptedEntryDateAccepted(for:)(void *a1)
{
  sub_1C285A9E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  uint64_t v21 = v3;
  MEMORY[0x1F4188790](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1C27BBE08;
  sub_1C285AAD4(0, &qword_1EA310CD8, (void (*)(uint64_t))sub_1C27BBE08);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v6);
  v9 = (char *)&v20 - v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  id v11 = a1;
  uint64_t v12 = HKSummarySharingEntryStore.fetchFirstEntry(matching:)((uint64_t)sub_1C285C808, v10);
  swift_release();
  uint64_t v25 = v12;
  *(void *)(swift_allocObject() + 16) = v11;
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1C27D9A54(0, &qword_1EA310C88, (uint64_t)&qword_1EA310C90, MEMORY[0x1E4FBB718], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
  sub_1C27D1C9C(0, &qword_1EBB756D0);
  sub_1C27D9AD0(&qword_1EA310C98, &qword_1EA310C88, (uint64_t)&qword_1EA310C90, v13);
  id v14 = v11;
  sub_1C28CD390();
  swift_release();
  sub_1C27BF0D0(&qword_1EA310CB8, (void (*)(uint64_t))sub_1C285A9E8);
  uint64_t v15 = v20;
  uint64_t v16 = sub_1C28CD300();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v15);
  uint64_t v25 = v16;
  sub_1C27D9A54(0, &qword_1EA310CA8, (uint64_t)&qword_1EBB756D0, 0x1E4F2B5D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D1C9C);
  sub_1C27BBE08();
  sub_1C285AB7C();
  sub_1C28CD330();
  swift_release();
  sub_1C285ADD8(&qword_1EA310CE0, &qword_1EA310CD8, (void (*)(uint64_t))v22);
  uint64_t v17 = v23;
  uint64_t v18 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v17);
  return v18;
}

uint64_t sub_1C285B328@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_dateAccepted);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C28CC430();

    uint64_t v5 = sub_1C28CC450();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1C28CC450();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

uint64_t HKSummarySharingEntryStore.updateNotificationStatus(to:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C28CC4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v11 = (v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v10, v8, v5);
  *(void *)(v12 + v11) = a1;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  sub_1C285BD28();
  swift_allocObject();
  v15[1] = sub_1C28CD250();
  sub_1C27BF0D0(&qword_1EA310CF0, (void (*)(uint64_t))sub_1C285BD28);
  uint64_t v13 = sub_1C28CD300();
  swift_release();
  return v13;
}

uint64_t sub_1C285B5FC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1C285B634(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v10 = sub_1C28CC4B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  v54 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_1C28CCE10();
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v53 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  swift_beginAccess();
  uint64_t v20 = (void *)MEMORY[0x1C8760AB0](a3 + 16);
  swift_retain();
  if (v20)
  {
    uint64_t v50 = v19;
    id v51 = v20;
    sub_1C28CCDC0();
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v21(v15, a4, v10);
    v22 = sub_1C28CCE00();
    os_log_type_t v23 = sub_1C28CDCD0();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      int v46 = v24;
      uint64_t v26 = v25;
      uint64_t v47 = swift_slowAlloc();
      uint64_t aBlock = v47;
      *(_DWORD *)uint64_t v26 = 136315394;
      os_log_t v45 = v22;
      uint64_t v27 = sub_1C28CE830();
      uint64_t v49 = a4;
      uint64_t v57 = sub_1C27D36AC(v27, v28, &aBlock);
      v48 = v21;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      sub_1C27BF0D0(&qword_1EBB76FC0, MEMORY[0x1E4F27990]);
      uint64_t v29 = sub_1C28CE610();
      uint64_t v57 = sub_1C27D36AC(v29, v30, &aBlock);
      uint64_t v21 = v48;
      a4 = v49;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
      v22 = v45;
      _os_log_impl(&dword_1C27B7000, v45, (os_log_type_t)v46, "%s Updating notification state for entry with UUID %{public}s", (uint8_t *)v26, 0x16u);
      uint64_t v31 = v47;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v31, -1, -1);
      MEMORY[0x1C87609B0](v26, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v53);
    v34 = (void *)sub_1C28CC470();
    uint64_t v35 = a4;
    v36 = v54;
    v21(v54, v35, v10);
    unint64_t v37 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v38 = (v12 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v39 + v37, v36, v10);
    v40 = (uint64_t (**)(uint64_t, char))(v39 + v38);
    v41 = (uint64_t (*)(uint64_t, char))v50;
    *v40 = sub_1C285BEA8;
    v40[1] = v41;
    *(void *)(v39 + ((v38 + 23) & 0xFFFFFFFFFFFFFFF8)) = v56;
    v62 = sub_1C285C644;
    uint64_t v63 = v39;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v59 = 1107296256;
    v60 = sub_1C289A718;
    v61 = &block_descriptor_6;
    v42 = _Block_copy(&aBlock);
    swift_release();
    id v43 = v51;
    objc_msgSend(v51, sel_updateNotificationStatusWithUUID_notificationStatus_completion_, v34, v55, v42);
    _Block_release(v42);
  }
  else
  {
    swift_release();
    sub_1C285BEE8();
    v32 = (void *)swift_allocError();
    void *v33 = 1;
    uint64_t aBlock = (uint64_t)v32;
    LOBYTE(v59) = 1;
    a1(&aBlock);
  }
}

uint64_t sub_1C285BB8C()
{
  uint64_t v1 = sub_1C28CC4B0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1C285BC6C(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C28CC4B0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1C285B634(a1, a2, v8, v2 + v6, v9, v10);
}

void sub_1C285BD28()
{
  if (!qword_1EA310CE8)
  {
    sub_1C27C7060();
    unint64_t v0 = sub_1C28CD240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310CE8);
    }
  }
}

void **assignWithTake for SummarySharingEntryStoreError(void **a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for SummarySharingEntryStoreError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SummarySharingEntryStoreError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySharingEntryStoreError()
{
  return &type metadata for SummarySharingEntryStoreError;
}

uint64_t sub_1C285BEA8(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

unint64_t sub_1C285BEE8()
{
  unint64_t result = qword_1EA310CF8;
  if (!qword_1EA310CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310CF8);
  }
  return result;
}

void sub_1C285BF3C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void, void), uint64_t a5, uint64_t a6)
{
  uint64_t v55 = a6;
  uint64_t v56 = a5;
  uint64_t v10 = sub_1C28CC4B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = sub_1C28CCE10();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  os_log_type_t v23 = (char *)&v51 - v22;
  uint64_t v57 = v24;
  uint64_t v58 = v21;
  if (a2)
  {
    id v25 = a2;
    sub_1C28CCDC0();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a3, v10);
    id v26 = a2;
    id v27 = a2;
    unint64_t v28 = sub_1C28CCE00();
    os_log_type_t v29 = sub_1C28CDCB0();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v60 = v53;
      *(_DWORD *)uint64_t v31 = 136315650;
      LODWORD(v52) = v30;
      uint64_t v32 = sub_1C28CE830();
      uint64_t v59 = sub_1C27D36AC(v32, v33, &v60);
      v54 = a4;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      sub_1C27BF0D0(&qword_1EBB76FC0, MEMORY[0x1E4F27990]);
      uint64_t v34 = sub_1C28CE610();
      uint64_t v59 = sub_1C27D36AC(v34, v35, &v60);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      *(_WORD *)(v31 + 22) = 2082;
      uint64_t v59 = (uint64_t)a2;
      id v36 = a2;
      sub_1C27C7060();
      uint64_t v37 = sub_1C28CD760();
      uint64_t v59 = sub_1C27D36AC(v37, v38, &v60);
      a4 = v54;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v28, (os_log_type_t)v52, "[%s] Error updating notification state for entry with UUID %{public}s: %{public}s", (uint8_t *)v31, 0x20u);
      uint64_t v39 = v53;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v39, -1, -1);
      MEMORY[0x1C87609B0](v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
    id v50 = a2;
    a4(a2, 1);
  }
  else
  {
    uint64_t v53 = a1;
    sub_1C28CCDC0();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, a3, v10);
    v40 = sub_1C28CCE00();
    uint64_t v41 = sub_1C28CDCD0();
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      uint64_t v42 = swift_slowAlloc();
      v54 = a4;
      uint64_t v43 = v42;
      uint64_t v52 = swift_slowAlloc();
      uint64_t v60 = v52;
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v44 = sub_1C28CE830();
      uint64_t v59 = sub_1C27D36AC(v44, v45, &v60);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      sub_1C27BF0D0(&qword_1EBB76FC0, MEMORY[0x1E4F27990]);
      uint64_t v46 = sub_1C28CE610();
      uint64_t v59 = sub_1C27D36AC(v46, v47, &v60);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      _os_log_impl(&dword_1C27B7000, v40, (os_log_type_t)v41, "%s Successfully updated notification state for entry with UUID %{public}s.", (uint8_t *)v43, 0x16u);
      uint64_t v48 = v52;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v48, -1, -1);
      uint64_t v49 = v43;
      a4 = v54;
      MEMORY[0x1C87609B0](v49, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v23, v58);
    a4(v53 & 1, 0);
  }
}

uint64_t sub_1C285C594()
{
  uint64_t v1 = sub_1C28CC4B0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

void sub_1C285C644(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1C28CC4B0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void (**)(void, void))(v2 + v7);
  uint64_t v9 = *(void *)(v2 + v7 + 8);
  uint64_t v10 = *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_1C285BF3C(a1, a2, v2 + v6, v8, v9, v10);
}

void *sub_1C285C700(unint64_t a1, uint64_t (*a2)(id))
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1C28CE3B0())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C875F6E0](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      unint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if (a2(v6))
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1C285C828@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1C285AD80(a1, a2);
}

uint64_t sub_1C285C840()
{
  uint64_t v0 = swift_allocObject();
  sub_1C27C4DA4();
  return v0;
}

uint64_t Promise.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t Promise.init(_:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1C285C8C4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t Promise.deinit()
{
  swift_release();
  return v0;
}

uint64_t Promise.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C285C944()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Promise()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Promise(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Promise);
}

uint64_t dispatch thunk of Promise.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Promise.fulfill(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_1C285C9F4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_1C285CAA0()
{
  sub_1C285C9F4();

  return swift_deallocClassInstance();
}

uint64_t sub_1C285CAF8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C285CB30()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1C285CBF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v12 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v12 < v7)
    {
      unint64_t v13 = *(void *)(v24 + 8 * v12);
      ++v9;
      if (v13) {
        goto LABEL_22;
      }
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v24 + 8 * v9);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v9 = v12 + 2;
      if (v12 + 2 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v24 + 8 * v9);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v9 = v12 + 3;
      if (v12 + 3 >= v7) {
        return swift_release();
      }
      unint64_t v13 = *(void *)(v24 + 8 * v9);
      if (v13)
      {
LABEL_22:
        unint64_t v6 = (v13 - 1) & v13;
        for (unint64_t i = __clz(__rbit64(v13)) + (v9 << 6); ; unint64_t i = v10 | (v9 << 6))
        {
          uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
          uint64_t v16 = *v15;
          uint64_t v17 = v15[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v18 = sub_1C27D3320(v16, v17);
          char v20 = v19;
          swift_bridgeObjectRelease();
          if (v20)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v22 = *a2;
            uint64_t v25 = *a2;
            *a2 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1C28763F0();
              uint64_t v22 = v25;
            }
            swift_bridgeObjectRelease();
            os_log_type_t v23 = *(void **)(*(void *)(v22 + 56) + 8 * v18);
            sub_1C28BDEA4(v18, v22);
            *a2 = v22;
            swift_bridgeObjectRelease();

            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v10 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v14 = v12 + 4;
      if (v14 < v7)
      {
        unint64_t v13 = *(void *)(v24 + 8 * v14);
        if (v13)
        {
          int64_t v9 = v14;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v9 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_30;
          }
          if (v9 >= v7) {
            return swift_release();
          }
          unint64_t v13 = *(void *)(v24 + 8 * v9);
          ++v14;
          if (v13) {
            goto LABEL_22;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C285CE34()
{
  return HKImproveHealthAndActivityAnalyticsAllowed();
}

uint64_t AnalyticsIHAGatedFieldsProviding.isImproveHealthAndActivityAllowed.getter()
{
  return HKImproveHealthAndActivityAnalyticsAllowed();
}

uint64_t sub_1C285CE64()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = *(void *)(*(void *)(v1 + 48) + 8 * v6);
    uint64_t v8 = (uint64_t *)(*(void *)(v1 + 56) + 16 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v7;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    v11(&v19, v20);
    swift_bridgeObjectRelease();
    return v19;
  }
  unint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          unint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            unint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            unint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              unint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  unint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

void sub_1C285CFEC()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    int64_t v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          unint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            unint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            unint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              unint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  unint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

id sub_1C285D180@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  id v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();

  return v4;
}

uint64_t dispatch thunk of AnalyticsDictionaryProviding.keyValuePairs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnalyticsIHAGatedFieldsProviding.isImproveHealthAndActivityAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnalyticsIHAGatedFieldsProviding.IHAgatedKeys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static AnalyticsEventProviding.eventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t NSOperation.addCompletion(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t (*)())objc_msgSend(v2, sel_completionBlock);
  if (v5)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    uint64_t v5 = sub_1C285D47C;
  }
  else
  {
    uint64_t v6 = 0;
  }
  sub_1C27C4380((uint64_t)v5);
  sub_1C27C0290((uint64_t)v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v5;
  v7[3] = v6;
  v7[4] = a1;
  v7[5] = a2;
  v10[4] = sub_1C285D3FC;
  v10[5] = v7;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_1C27BC934;
  v10[3] = &block_descriptor_8;
  uint64_t v8 = _Block_copy(v10);
  sub_1C27C4380((uint64_t)v5);
  swift_retain();
  sub_1C27C4380((uint64_t)sub_1C285D3FC);
  swift_release();
  objc_msgSend(v2, sel_setCompletionBlock_, v8);
  _Block_release(v8);
  swift_release();
  return sub_1C27C0290((uint64_t)v5);
}

uint64_t sub_1C285D3B4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C285D3FC()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 32);
  if (v1) {
    v1();
  }
  return v2();
}

uint64_t sub_1C285D444()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1C285D47C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id PluginAdvertisableFeatureSourceContext.healthStore.getter()
{
  return *v0;
}

id PluginAdvertisableFeatureSourceContext.queue.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t PluginAdvertisableFeatureSourceContext.includeFeaturesMadeAvailableByBuddy.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PluginAdvertisableFeatureSourceContext.countryProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C27CE8A4(v1 + 24, a1);
}

BOOL static PluginAdvertisableFeatureSourceContext.DeviceSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PluginAdvertisableFeatureSourceContext.DeviceSource.hash(into:)()
{
  return sub_1C28CE710();
}

uint64_t PluginAdvertisableFeatureSourceContext.DeviceSource.hashValue.getter()
{
  return sub_1C28CE740();
}

void PluginAdvertisableFeatureSourceContext.activeDeviceSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

void PluginAdvertisableFeatureSourceContext.presentationLocation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 65);
}

uint64_t PluginAdvertisableFeatureSourceContext.init(healthStore:queue:includeFeaturesMadeAvailableByBuddy:countryProvider:activeDeviceSource:presentationLocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, long long *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v8 = *a5;
  char v9 = *a6;
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3;
  uint64_t result = sub_1C27CAE60(a4, a7 + 24);
  *(unsigned char *)(a7 + 64) = v8;
  *(unsigned char *)(a7 + 65) = v9;
  return result;
}

unint64_t sub_1C285D5A4()
{
  unint64_t result = qword_1EA310D00;
  if (!qword_1EA310D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310D00);
  }
  return result;
}

uint64_t dispatch thunk of PluginAdvertisableFeatureCountryProvider.currentCountry()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for PluginAdvertisableFeatureSourceContext(id *a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 3));
}

uint64_t initializeWithCopy for PluginAdvertisableFeatureSourceContext(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a1 + 24;
  uint64_t v7 = a2 + 24;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  id v11 = v4;
  id v12 = v5;
  v10(v6, v7, v9);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  return a1;
}

uint64_t assignWithCopy for PluginAdvertisableFeatureSourceContext(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  long long v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  return a1;
}

__n128 __swift_memcpy66_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PluginAdvertisableFeatureSourceContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginAdvertisableFeatureSourceContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 66)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginAdvertisableFeatureSourceContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 66) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 66) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginAdvertisableFeatureSourceContext()
{
  return &type metadata for PluginAdvertisableFeatureSourceContext;
}

unsigned char *storeEnumTagSinglePayload for PluginAdvertisableFeatureSourceContext.DeviceSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C285D998);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginAdvertisableFeatureSourceContext.DeviceSource()
{
  return &type metadata for PluginAdvertisableFeatureSourceContext.DeviceSource;
}

uint64_t dispatch thunk of PluginAdvertisableFeatureSourceProviding.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PluginAdvertisableFeatureSourceProviding.determineAdvertisableFeatures(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

id HKObjectType.objectType.getter()
{
  return v0;
}

uint64_t dispatch thunk of ObjectTypeConvertable.objectType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C285DA14()
{
  return sub_1C2860628();
}

uint64_t sub_1C285DA24()
{
  return sub_1C28CD790();
}

uint64_t sub_1C285DA34()
{
  return sub_1C2860698();
}

uint64_t sub_1C285DA44@<X0>(BOOL *a1@<X8>)
{
  return sub_1C28606F0(a1);
}

uint64_t sub_1C285DA50()
{
  return 1635017060;
}

uint64_t sub_1C285DA60@<X0>(BOOL *a1@<X8>)
{
  return sub_1C2860770(a1);
}

uint64_t sub_1C285DA6C(uint64_t a1)
{
  unint64_t v2 = sub_1C286243C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C285DAA8(uint64_t a1)
{
  unint64_t v2 = sub_1C286243C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static AppStoreDataProvider.EditorialItemsList.== infix(_:_:)(void *a1, uint64_t *a2)
{
  return sub_1C285EBEC(a1, a2, sub_1C2862128);
}

uint64_t AppStoreDataProvider.EditorialItemsList.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EA310D08, (uint64_t (*)(void))sub_1C286243C, (uint64_t)&_s18EditorialItemsListV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C286243C();
  sub_1C28CE800();
  v10[3] = v8;
  sub_1C2865A0C(0, &qword_1EBB73E70, (uint64_t)&type metadata for AppStoreDataProvider.EditorialItem, MEMORY[0x1E4FBB320]);
  sub_1C28624E4(&qword_1EA310D10, (void (*)(void))sub_1C2862490);
  sub_1C28CE590();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.EditorialItemsList.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v12 = a2;
  sub_1C2865D90(0, &qword_1EBB73EC8, (uint64_t (*)(void))sub_1C286243C, (uint64_t)&_s18EditorialItemsListV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C286243C();
  sub_1C28CE7F0();
  if (!v2)
  {
    id v9 = v12;
    sub_1C2865A0C(0, &qword_1EBB73E70, (uint64_t)&type metadata for AppStoreDataProvider.EditorialItem, MEMORY[0x1E4FBB320]);
    sub_1C28624E4(&qword_1EBB73E78, (void (*)(void))sub_1C2862574);
    sub_1C28CE4D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    void *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C285DEF0(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C285F074(a1, a2, a3, a4, sub_1C2862128);
}

uint64_t sub_1C285DF08@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AppStoreDataProvider.EditorialItemsList.init(from:)(a1, a2);
}

uint64_t sub_1C285DF20(void *a1)
{
  return AppStoreDataProvider.EditorialItemsList.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.EditorialItem.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppStoreDataProvider.EditorialItem.relationship.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_1C28625C8(v2);
}

uint64_t sub_1C285DF74(char *a1, char *a2)
{
  return sub_1C27F2E20(*a1, *a2);
}

uint64_t sub_1C285DF80()
{
  return sub_1C28CE740();
}

uint64_t sub_1C285E004()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C285E074()
{
  return sub_1C28CE740();
}

uint64_t sub_1C285E0F4@<X0>(char *a1@<X8>)
{
  return sub_1C285F348(a1);
}

void sub_1C285E100(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 0x6E6F6974616C6572;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xED00007370696873;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C285E140()
{
  if (*v0) {
    return 0x6E6F6974616C6572;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1C285E17C@<X0>(char *a1@<X8>)
{
  return sub_1C285F41C(a1);
}

uint64_t sub_1C285E188(uint64_t a1)
{
  unint64_t v2 = sub_1C28645F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C285E1C4(uint64_t a1)
{
  unint64_t v2 = sub_1C28645F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppStoreDataProvider.EditorialItem.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EA310D20, (uint64_t (*)(void))sub_1C28645F0, (uint64_t)&_s13EditorialItemV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v11 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28645F0();
  sub_1C28CE800();
  char v15 = 0;
  uint64_t v8 = v12;
  sub_1C28CE560();
  if (!v8)
  {
    uint64_t v13 = v11;
    char v14 = 1;
    sub_1C2864644();
    sub_1C28CE590();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.EditorialItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v16[0] = a2;
  sub_1C2865D90(0, &qword_1EBB73EB8, (uint64_t (*)(void))sub_1C28645F0, (uint64_t)&_s13EditorialItemV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v16 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28645F0();
  sub_1C28CE7F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = (uint64_t *)v16[0];
  char v18 = 0;
  uint64_t v11 = sub_1C28CE4A0();
  uint64_t v13 = v12;
  char v17 = 1;
  sub_1C2864698();
  swift_bridgeObjectRetain();
  sub_1C28CE4D0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v14 = v16[1];
  swift_bridgeObjectRetain();
  sub_1C28625C8(v14);
  swift_bridgeObjectRelease();
  *uint64_t v10 = v11;
  v10[1] = v13;
  v10[2] = v14;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1C28646EC(v14);
}

uint64_t sub_1C285E630@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppStoreDataProvider.EditorialItem.init(from:)(a1, a2);
}

uint64_t sub_1C285E648(void *a1)
{
  return AppStoreDataProvider.EditorialItem.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.Relationship.cardContent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return sub_1C28625D8(v2);
}

uint64_t sub_1C285E66C()
{
  return sub_1C2860628();
}

uint64_t sub_1C285E690()
{
  return sub_1C28CD790();
}

uint64_t sub_1C285E6B4()
{
  return sub_1C2860698();
}

uint64_t sub_1C285E6D8@<X0>(BOOL *a1@<X8>)
{
  return sub_1C28606F0(a1);
}

void sub_1C285E6E4(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1C285E70C()
{
  return 0x6E6F632D64726163;
}

uint64_t sub_1C285E730@<X0>(BOOL *a1@<X8>)
{
  return sub_1C2860770(a1);
}

uint64_t sub_1C285E73C(uint64_t a1)
{
  unint64_t v2 = sub_1C286470C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C285E778(uint64_t a1)
{
  unint64_t v2 = sub_1C286470C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppStoreDataProvider.Relationship.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EA310D30, (uint64_t (*)(void))sub_1C286470C, (uint64_t)&_s12RelationshipV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C286470C();
  sub_1C28CE800();
  v10[3] = v8;
  sub_1C2864760();
  sub_1C28CE590();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.Relationship.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  sub_1C2865D90(0, &qword_1EBB73EB0, (uint64_t (*)(void))sub_1C286470C, (uint64_t)&_s12RelationshipV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C286470C();
  sub_1C28CE7F0();
  if (!v2)
  {
    uint64_t v9 = v12;
    sub_1C28647B4();
    sub_1C28CE4D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    void *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C285EAF8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AppStoreDataProvider.Relationship.init(from:)(a1, a2);
}

uint64_t sub_1C285EB10(void *a1)
{
  return AppStoreDataProvider.Relationship.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.CardContent.cardItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C285EB30@<X0>(BOOL *a1@<X8>)
{
  return sub_1C28606F0(a1);
}

void sub_1C285EB3C(void *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1C285EB50@<X0>(BOOL *a1@<X8>)
{
  return sub_1C2860770(a1);
}

uint64_t sub_1C285EB5C(uint64_t a1)
{
  unint64_t v2 = sub_1C2864808();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C285EB98(uint64_t a1)
{
  unint64_t v2 = sub_1C2864808();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static AppStoreDataProvider.CardContent.== infix(_:_:)(void *a1, uint64_t *a2)
{
  return sub_1C285EBEC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C28625E8);
}

uint64_t sub_1C285EBEC(void *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = swift_bridgeObjectRetain();
      LOBYTE(a3) = a3(v5, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a3) {
        return 1;
      }
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t AppStoreDataProvider.CardContent.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EA310D40, (uint64_t (*)(void))sub_1C2864808, (uint64_t)&_s11CardContentV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2864808();
  sub_1C28CE800();
  v10[3] = v8;
  sub_1C2865A0C(0, &qword_1EBB73E80, (uint64_t)&type metadata for AppStoreDataProvider.CardItem, MEMORY[0x1E4FBB320]);
  sub_1C28648B0(&qword_1EA310D48, (void (*)(void))sub_1C286485C);
  sub_1C28CE590();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.CardContent.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  sub_1C2865D90(0, &qword_1EBB73EA8, (uint64_t (*)(void))sub_1C2864808, (uint64_t)&_s11CardContentV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2864808();
  sub_1C28CE7F0();
  if (!v2)
  {
    uint64_t v9 = v12;
    sub_1C2865A0C(0, &qword_1EBB73E80, (uint64_t)&type metadata for AppStoreDataProvider.CardItem, MEMORY[0x1E4FBB320]);
    sub_1C28648B0(&qword_1EBB73E88, (void (*)(void))sub_1C2864940);
    sub_1C28CE4D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    void *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C285F05C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C285F074(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C28625E8);
}

uint64_t sub_1C285F074(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  if (*a1)
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = swift_bridgeObjectRetain();
      LOBYTE(a5) = a5(v7, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a5) {
        return 1;
      }
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1C285F0F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AppStoreDataProvider.CardContent.init(from:)(a1, a2);
}

uint64_t sub_1C285F108(void *a1)
{
  return AppStoreDataProvider.CardContent.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.CardItem.storeIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *AppStoreDataProvider.CardItem.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C28655D4(v1 + 16, (uint64_t)v4, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  sub_1C28655D4((uint64_t)v4, a1, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  return sub_1C2869FFC(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
}

uint64_t sub_1C285F1D4(char *a1, char *a2)
{
  return sub_1C27F2ADC(*a1, *a2);
}

uint64_t sub_1C285F1E0()
{
  return sub_1C28CE740();
}

uint64_t sub_1C285F25C()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C285F2C4()
{
  return sub_1C28CE740();
}

uint64_t sub_1C285F33C@<X0>(char *a1@<X8>)
{
  return sub_1C285F348(a1);
}

uint64_t sub_1C285F348@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C28CE460();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C285F3A4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (*v1) {
    uint64_t v2 = 0x7475626972747461;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000007365;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C285F3DC()
{
  if (*v0) {
    return 0x7475626972747461;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1C285F410@<X0>(char *a1@<X8>)
{
  return sub_1C285F41C(a1);
}

uint64_t sub_1C285F41C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C28CE460();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C285F47C(uint64_t a1)
{
  unint64_t v2 = sub_1C2864FD4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C285F4B8(uint64_t a1)
{
  unint64_t v2 = sub_1C2864FD4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppStoreDataProvider.CardItem.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EA310D60, (uint64_t (*)(void))sub_1C2864FD4, (uint64_t)&_s8CardItemV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v10 - v6;
  v10[1] = *v1;
  sub_1C28655D4((uint64_t)(v1 + 2), (uint64_t)v12, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2864FD4();
  sub_1C28CE800();
  v11[0] = 0;
  uint64_t v8 = v10[2];
  sub_1C28CE560();
  if (!v8)
  {
    sub_1C28655D4((uint64_t)v12, (uint64_t)v11, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    v12[215] = 1;
    sub_1C2865028();
    sub_1C28CE590();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.CardItem.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1C2865D90(0, &qword_1EBB73ED0, (uint64_t (*)(void))sub_1C2864FD4, (uint64_t)&_s8CardItemV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v22 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2864FD4();
  sub_1C28CE7F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  LOBYTE(v26[0]) = 0;
  uint64_t v9 = v22;
  uint64_t v10 = sub_1C28CE4A0();
  uint64_t v12 = v11;
  *(void *)&long long v28 = v10;
  *((void *)&v28 + 1) = v11;
  char v30 = 1;
  sub_1C286507C();
  swift_bridgeObjectRetain();
  sub_1C28CE4D0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
  sub_1C28655D4((uint64_t)&v27, (uint64_t)v23, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  sub_1C28655D4((uint64_t)v23, (uint64_t)v29, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  *(void *)&long long v24 = v10;
  *((void *)&v24 + 1) = v12;
  sub_1C28655D4((uint64_t)v23, (uint64_t)v25, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  sub_1C28650D0((uint64_t)&v24);
  swift_bridgeObjectRelease();
  long long v13 = v25[10];
  uint64_t v14 = v21;
  v21[10] = v25[9];
  v14[11] = v13;
  v14[12] = v25[11];
  long long v15 = v25[6];
  v14[6] = v25[5];
  v14[7] = v15;
  long long v16 = v25[8];
  v14[8] = v25[7];
  v14[9] = v16;
  long long v17 = v25[2];
  v14[2] = v25[1];
  v14[3] = v17;
  long long v18 = v25[4];
  v14[4] = v25[3];
  v14[5] = v18;
  long long v19 = v25[0];
  *uint64_t v14 = v24;
  v14[1] = v19;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v26[10] = v29[9];
  v26[11] = v29[10];
  v26[12] = v29[11];
  v26[6] = v29[5];
  v26[7] = v29[6];
  v26[8] = v29[7];
  v26[9] = v29[8];
  v26[2] = v29[1];
  v26[3] = v29[2];
  v26[4] = v29[3];
  v26[5] = v29[4];
  v26[0] = v28;
  v26[1] = v29[0];
  return sub_1C28651C4((uint64_t)v26);
}

uint64_t sub_1C285FA54@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.CardItem.init(from:)(a1, a2);
}

uint64_t sub_1C285FA6C(void *a1)
{
  return AppStoreDataProvider.CardItem.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.Attributes.artistName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *AppStoreDataProvider.Attributes.platform.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C28655D4(v1 + 16, (uint64_t)v4, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1C28655D4((uint64_t)v4, a1, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  return sub_1C2869E34(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
}

uint64_t AppStoreDataProvider.Attributes.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C285FB68(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C27F2EC8(*a1, *a2);
}

uint64_t sub_1C285FB74()
{
  return sub_1C28CE740();
}

uint64_t sub_1C285FC18()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C285FCA8()
{
  return sub_1C28CE740();
}

uint64_t sub_1C285FD48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C2869A10();
  *a1 = result;
  return result;
}

void sub_1C285FD78(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA0000000000656DLL;
  unint64_t v4 = 0x80000001C28DAE00;
  unint64_t v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    unint64_t v5 = 1701667182;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x614E747369747261;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C285FDD8()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 1701667182;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x614E747369747261;
  }
}

uint64_t sub_1C285FE34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C2869A10();
  *a1 = result;
  return result;
}

uint64_t sub_1C285FE5C(uint64_t a1)
{
  unint64_t v2 = sub_1C2865654();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C285FE98(uint64_t a1)
{
  unint64_t v2 = sub_1C2865654();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppStoreDataProvider.Attributes.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EA310D78, (uint64_t (*)(void))sub_1C2865654, (uint64_t)&_s10AttributesV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  v11[3] = *v1;
  sub_1C28655D4((uint64_t)(v1 + 2), (uint64_t)v13, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  uint64_t v8 = v1[22];
  v11[1] = v1[23];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2865654();
  sub_1C28CE800();
  v12[0] = 0;
  uint64_t v9 = v11[4];
  sub_1C28CE560();
  if (!v9)
  {
    sub_1C28655D4((uint64_t)v13, (uint64_t)v12, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    v13[183] = 1;
    sub_1C28656A8();
    sub_1C28CE590();
    v12[0] = 2;
    sub_1C28CE560();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.Attributes.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v28 = a2;
  sub_1C2865D90(0, &qword_1EBB73EA0, (uint64_t (*)(void))sub_1C2865654, (uint64_t)&_s10AttributesV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = a1[3];
  os_log_type_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1C2865654();
  sub_1C28CE7F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  }
  uint64_t v10 = v6;
  LOBYTE(v33[0]) = 0;
  uint64_t v11 = sub_1C28CE4A0();
  uint64_t v13 = v12;
  *(void *)&long long v36 = v11;
  *((void *)&v36 + 1) = v12;
  char v40 = 1;
  uint64_t v14 = v11;
  sub_1C28656FC();
  swift_bridgeObjectRetain();
  sub_1C28CE4D0();
  uint64_t v27 = v14;
  sub_1C28655D4((uint64_t)&v35, (uint64_t)v34, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1C28655D4((uint64_t)v34, (uint64_t)v37, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  char v39 = 2;
  sub_1C2869E34(v34, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
  uint64_t v15 = sub_1C28CE4A0();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  *(void *)&long long v38 = v15;
  *((void *)&v38 + 1) = v17;
  *(void *)&long long v30 = v27;
  *((void *)&v30 + 1) = v13;
  sub_1C28655D4((uint64_t)v34, (uint64_t)v31, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  *(void *)&long long v32 = v15;
  *((void *)&v32 + 1) = v17;
  sub_1C2865750((uint64_t)&v30);
  sub_1C2869E34(v34, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C28653EC);
  swift_bridgeObjectRelease();
  long long v18 = v31[8];
  long long v19 = v28;
  v28[8] = v31[7];
  v19[9] = v18;
  long long v20 = v32;
  v19[10] = v31[9];
  v19[11] = v20;
  long long v21 = v31[4];
  v19[4] = v31[3];
  v19[5] = v21;
  long long v22 = v31[6];
  v19[6] = v31[5];
  v19[7] = v22;
  long long v23 = v31[0];
  *long long v19 = v30;
  v19[1] = v23;
  long long v24 = v31[2];
  v19[2] = v31[1];
  v19[3] = v24;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  v33[8] = v37[7];
  v33[9] = v37[8];
  v33[10] = v37[9];
  v33[11] = v38;
  v33[4] = v37[3];
  v33[5] = v37[4];
  v33[6] = v37[5];
  v33[7] = v37[6];
  v33[0] = v36;
  v33[1] = v37[0];
  v33[2] = v37[1];
  v33[3] = v37[2];
  return sub_1C2865830((uint64_t)v33);
}

uint64_t sub_1C2860564@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1C286057C(void *a1)
{
  return AppStoreDataProvider.Attributes.encode(to:)(a1);
}

void *AppStoreDataProvider.Platform.iOS.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C28655D4(v1, (uint64_t)v4, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  sub_1C28655D4((uint64_t)v4, a1, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  return sub_1C2869E34(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
}

uint64_t sub_1C2860618()
{
  return sub_1C2860628();
}

uint64_t sub_1C2860628()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2860678()
{
  return sub_1C28CD790();
}

uint64_t sub_1C2860688()
{
  return sub_1C2860698();
}

uint64_t sub_1C2860698()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28606E4@<X0>(BOOL *a1@<X8>)
{
  return sub_1C28606F0(a1);
}

uint64_t sub_1C28606F0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C28CE460();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C2860740(void *a1@<X8>)
{
  *a1 = 7565161;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1C2860754()
{
  return 7565161;
}

uint64_t sub_1C2860764@<X0>(BOOL *a1@<X8>)
{
  return sub_1C2860770(a1);
}

uint64_t sub_1C2860770@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C28CE460();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C28607C4(uint64_t a1)
{
  unint64_t v2 = sub_1C2865910();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2860800(uint64_t a1)
{
  unint64_t v2 = sub_1C2865910();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppStoreDataProvider.Platform.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EA310D90, (uint64_t (*)(void))sub_1C2865910, (uint64_t)&_s8PlatformV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1C28655D4(v1, (uint64_t)v11, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2865910();
  sub_1C28CE800();
  sub_1C28655D4((uint64_t)v11, (uint64_t)&v10, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  sub_1C2865964();
  sub_1C28CE590();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.Platform.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v20 = a2;
  sub_1C2865D90(0, &qword_1EBB73ED8, (uint64_t (*)(void))sub_1C2865910, (uint64_t)&_s8PlatformV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v17[-v6 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2865910();
  sub_1C28CE7F0();
  if (!v2)
  {
    uint64_t v8 = v16;
    uint64_t v9 = v20;
    sub_1C28659B8();
    sub_1C28CE4D0();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v7, v5);
    sub_1C28655D4((uint64_t)v19, (uint64_t)v17, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1C28655D4((uint64_t)v17, (uint64_t)v18, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    long long v10 = v18[7];
    v9[6] = v18[6];
    v9[7] = v10;
    long long v11 = v18[9];
    v9[8] = v18[8];
    v9[9] = v11;
    long long v12 = v18[3];
    v9[2] = v18[2];
    v9[3] = v12;
    long long v13 = v18[5];
    v9[4] = v18[4];
    v9[5] = v13;
    long long v14 = v18[1];
    _OWORD *v9 = v18[0];
    v9[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C2860C38@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.Platform.init(from:)(a1, a2);
}

uint64_t sub_1C2860C50(void *a1)
{
  return AppStoreDataProvider.Platform.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.iOSAttributes.subtitle.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppStoreDataProvider.iOSAttributes.bundleId.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *AppStoreDataProvider.iOSAttributes.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C28655D4(v1 + 32, (uint64_t)v4, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  sub_1C28655D4((uint64_t)v4, a1, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  return sub_1C2865A58(v4);
}

uint64_t sub_1C2860D3C()
{
  uint64_t v1 = 0x6449656C646E7562;
  if (*v0 != 1) {
    uint64_t v1 = 0x6B726F77747261;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974627573;
  }
}

uint64_t sub_1C2860D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2869A5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2860DC0(uint64_t a1)
{
  unint64_t v2 = sub_1C2865AB4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2860DFC(uint64_t a1)
{
  unint64_t v2 = sub_1C2865AB4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppStoreDataProvider.iOSAttributes.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EA310DA8, (uint64_t (*)(void))sub_1C2865AB4, (uint64_t)&_s13iOSAttributesV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *v1;
  v11[2] = v1[2];
  v11[3] = v8;
  v11[1] = v1[3];
  sub_1C28655D4((uint64_t)(v1 + 4), (uint64_t)v13, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2865AB4();
  sub_1C28CE800();
  v12[0] = 0;
  uint64_t v9 = v11[4];
  sub_1C28CE560();
  if (!v9)
  {
    v12[0] = 1;
    sub_1C28CE560();
    sub_1C28655D4((uint64_t)v13, (uint64_t)v12, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    v13[151] = 2;
    sub_1C2865B08();
    sub_1C28CE590();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *AppStoreDataProvider.iOSAttributes.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v28 = a2;
  sub_1C2865D90(0, &qword_1EBB73EC0, (uint64_t (*)(void))sub_1C2865AB4, (uint64_t)&_s13iOSAttributesV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = a1[3];
  os_log_type_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1C2865AB4();
  sub_1C28CE7F0();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  }
  uint64_t v10 = v6;
  LOBYTE(v34[0]) = 0;
  uint64_t v11 = sub_1C28CE4A0();
  uint64_t v13 = v12;
  *(void *)&long long v36 = v11;
  *((void *)&v36 + 1) = v12;
  LOBYTE(v34[0]) = 1;
  uint64_t v14 = v11;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C28CE4A0();
  uint64_t v17 = v16;
  uint64_t v26 = v15;
  uint64_t v27 = v14;
  *(void *)&long long v37 = v15;
  *((void *)&v37 + 1) = v16;
  char v39 = 2;
  sub_1C2865B5C();
  swift_bridgeObjectRetain();
  sub_1C28CE4D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  sub_1C28655D4((uint64_t)&v35, (uint64_t)v30, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  sub_1C28655D4((uint64_t)v30, (uint64_t)v38, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  *(void *)&long long v31 = v27;
  *((void *)&v31 + 1) = v13;
  *(void *)&long long v32 = v26;
  *((void *)&v32 + 1) = v17;
  sub_1C28655D4((uint64_t)v30, (uint64_t)v33, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  sub_1C2865BB0(&v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v18 = v33[5];
  long long v20 = v28;
  uint64_t v19 = (uint64_t)v29;
  v28[6] = v33[4];
  v20[7] = v18;
  long long v21 = v33[7];
  v20[8] = v33[6];
  v20[9] = v21;
  long long v22 = v33[1];
  v20[2] = v33[0];
  v20[3] = v22;
  long long v23 = v33[3];
  v20[4] = v33[2];
  v20[5] = v23;
  long long v24 = v32;
  *long long v20 = v31;
  v20[1] = v24;
  __swift_destroy_boxed_opaque_existential_1Tm(v19);
  v34[6] = v38[4];
  v34[7] = v38[5];
  v34[8] = v38[6];
  v34[9] = v38[7];
  v34[2] = v38[0];
  v34[3] = v38[1];
  v34[4] = v38[2];
  v34[5] = v38[3];
  v34[0] = v36;
  v34[1] = v37;
  return sub_1C2865C78(v34);
}

void *sub_1C28613F4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.iOSAttributes.init(from:)(a1, a2);
}

uint64_t sub_1C286140C(void *a1)
{
  return AppStoreDataProvider.iOSAttributes.encode(to:)(a1);
}

uint64_t sub_1C2861424(unsigned __int8 *a1, char *a2)
{
  return sub_1C27F2B7C(*a1, *a2);
}

uint64_t sub_1C2861430()
{
  return sub_1C28894C4();
}

uint64_t sub_1C286143C()
{
  return sub_1C289AD44();
}

uint64_t sub_1C2861444()
{
  return sub_1C28894C4();
}

uint64_t sub_1C286144C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C2869BB4();
  *a1 = result;
  return result;
}

void sub_1C286147C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6874646977;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x746867696568;
      goto LABEL_3;
    case 2:
      *a1 = 7107189;
      a1[1] = 0xE300000000000000;
      return;
    case 3:
      *a1 = 0x726F6C6F436762;
      a1[1] = 0xE700000000000000;
      return;
    case 4:
      *a1 = 0x6F6C6F4374786574;
      a1[1] = 0xEA00000000003172;
      return;
    case 5:
      unint64_t v4 = 0xEA00000000003272;
      goto LABEL_10;
    case 6:
      unint64_t v4 = 0xEA00000000003372;
      goto LABEL_10;
    case 7:
      unint64_t v4 = 0xEA00000000003472;
LABEL_10:
      *a1 = 0x6F6C6F4374786574;
      a1[1] = v4;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C286157C()
{
  uint64_t result = 0x6874646977;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746867696568;
      break;
    case 2:
      uint64_t result = 7107189;
      break;
    case 3:
      uint64_t result = 0x726F6C6F436762;
      break;
    case 4:
      uint64_t result = 0x6F6C6F4374786574;
      break;
    case 5:
      uint64_t result = 0x6F6C6F4374786574;
      break;
    case 6:
      uint64_t result = 0x6F6C6F4374786574;
      break;
    case 7:
      uint64_t result = 0x6F6C6F4374786574;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2861688@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C2869BB4();
  *a1 = result;
  return result;
}

void sub_1C28616B0(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1C28616BC(uint64_t a1)
{
  unint64_t v2 = sub_1C2865D3C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28616F8(uint64_t a1)
{
  unint64_t v2 = sub_1C2865D3C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AppStoreDataProvider.Artwork.encode(to:)(void *a1)
{
  sub_1C2865D90(0, &qword_1EBB768D8, (uint64_t (*)(void))sub_1C2865D3C, (uint64_t)&_s7ArtworkV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v16 - v6;
  uint64_t v18 = *(void *)(v1 + 16);
  int v17 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  v16[11] = *(void *)(v1 + 40);
  v16[12] = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  v16[9] = *(void *)(v1 + 56);
  v16[10] = v9;
  uint64_t v10 = *(void *)(v1 + 72);
  v16[7] = *(void *)(v1 + 64);
  v16[8] = v10;
  uint64_t v11 = *(void *)(v1 + 80);
  v16[5] = *(void *)(v1 + 88);
  v16[6] = v11;
  uint64_t v12 = *(void *)(v1 + 96);
  v16[3] = *(void *)(v1 + 104);
  v16[4] = v12;
  uint64_t v13 = *(void *)(v1 + 112);
  v16[1] = *(void *)(v1 + 120);
  void v16[2] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2865D3C();
  sub_1C28CE800();
  char v27 = 0;
  uint64_t v14 = v19;
  sub_1C28CE580();
  if (!v14)
  {
    char v26 = 1;
    sub_1C28CE580();
    char v25 = 2;
    sub_1C28CE560();
    char v24 = 3;
    sub_1C28CE560();
    char v23 = 4;
    sub_1C28CE560();
    char v22 = 5;
    sub_1C28CE560();
    char v21 = 6;
    sub_1C28CE560();
    char v20 = 7;
    sub_1C28CE560();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.Artwork.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v52 = a2;
  sub_1C2865D90(0, &qword_1EBB768D0, (uint64_t (*)(void))sub_1C2865D3C, (uint64_t)&_s7ArtworkV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v53 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v42 - v6;
  uint64_t v8 = a1[3];
  v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1C2865D3C();
  sub_1C28CE7F0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
    return v5;
  }
  else
  {
    uint64_t v9 = v5;
    LOBYTE(v62) = 0;
    uint64_t v10 = v53;
    uint64_t v11 = v7;
    uint64_t v12 = sub_1C28CE4C0();
    char v14 = v13;
    char v84 = v13 & 1;
    LOBYTE(v62) = 1;
    uint64_t v50 = sub_1C28CE4C0();
    char v82 = v15 & 1;
    LOBYTE(v62) = 2;
    int v16 = v15;
    uint64_t v17 = sub_1C28CE4A0();
    int v48 = v16;
    uint64_t v49 = v17;
    LOBYTE(v62) = 3;
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C28CE4A0();
    uint64_t v51 = v19;
    uint64_t v47 = v20;
    LOBYTE(v62) = 4;
    uint64_t v22 = v21;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1C28CE4A0();
    uint64_t v46 = v23;
    LOBYTE(v62) = 5;
    swift_bridgeObjectRetain();
    *(void *)&long long v44 = sub_1C28CE4A0();
    *((void *)&v44 + 1) = v24;
    uint64_t v25 = v46;
    LOBYTE(v62) = 6;
    swift_bridgeObjectRetain();
    *(void *)&long long v43 = sub_1C28CE4A0();
    *((void *)&v43 + 1) = v26;
    char v80 = 7;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C28CE4A0();
    long long v28 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v42 = v27;
    os_log_type_t v29 = v11;
    uint64_t v31 = v30;
    v28(v29, v10);
    uint64_t v53 = v12;
    *(void *)&long long v54 = v12;
    BYTE8(v54) = v14 & 1;
    uint64_t v32 = v51;
    *(void *)&long long v55 = v50;
    BYTE8(v55) = v48 & 1;
    *(void *)&long long v56 = v49;
    *((void *)&v56 + 1) = v51;
    *(void *)&long long v57 = v47;
    *((void *)&v57 + 1) = v22;
    uint64_t v33 = v22;
    uint64_t v34 = *((void *)&v44 + 1);
    *(void *)&long long v58 = v45;
    *((void *)&v58 + 1) = v25;
    uint64_t v35 = *((void *)&v43 + 1);
    long long v59 = v44;
    long long v60 = v43;
    *(void *)&long long v61 = v42;
    *((void *)&v61 + 1) = v31;
    sub_1C2865DF8((uint64_t)&v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v36 = v59;
    long long v37 = v52;
    v52[4] = v58;
    v37[5] = v36;
    long long v38 = v61;
    v37[6] = v60;
    v37[7] = v38;
    long long v39 = v55;
    *long long v37 = v54;
    v37[1] = v39;
    long long v40 = v57;
    v37[2] = v56;
    v37[3] = v40;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v85);
    uint64_t v62 = v53;
    char v63 = v84;
    *(_DWORD *)v64 = *(_DWORD *)v83;
    *(_DWORD *)&v64[3] = *(_DWORD *)&v83[3];
    uint64_t v65 = v50;
    char v66 = v82;
    *(_DWORD *)v67 = *(_DWORD *)v81;
    *(_DWORD *)&v67[3] = *(_DWORD *)&v81[3];
    uint64_t v68 = v49;
    uint64_t v69 = v32;
    uint64_t v70 = v47;
    uint64_t v71 = v33;
    uint64_t v72 = v45;
    uint64_t v73 = v25;
    uint64_t v74 = v44;
    uint64_t v75 = v34;
    uint64_t v76 = v43;
    uint64_t v77 = v35;
    uint64_t v78 = v42;
    uint64_t v79 = v31;
    return sub_1C2865E70((uint64_t)&v62);
  }
}

uint64_t sub_1C2862030@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.Artwork.init(from:)(a1, a2);
}

uint64_t sub_1C2862048(void *a1)
{
  return AppStoreDataProvider.Artwork.encode(to:)(a1);
}

uint64_t sub_1C2862060(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1C28CE640(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1C28CE640() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C2862128(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (uint64_t *)(a2 + 48);
  for (unint64_t i = (uint64_t *)(a1 + 48); ; i += 3)
  {
    uint64_t v6 = *(i - 1);
    uint64_t v5 = *i;
    uint64_t v7 = *(v3 - 1);
    uint64_t v8 = *v3;
    if (v6)
    {
      if (!v7) {
        return 0;
      }
      BOOL v9 = *(i - 2) == *(v3 - 2) && v6 == v7;
      if (!v9 && (sub_1C28CE640() & 1) == 0) {
        return 0;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v5 == 2)
    {
      if (v8 == 2) {
        goto LABEL_6;
      }
      swift_bridgeObjectRetain();
      sub_1C28625C8(2);
      swift_bridgeObjectRetain();
      sub_1C28625C8(v8);
LABEL_31:
      sub_1C28625C8(v8);
      sub_1C28646EC(v5);
      uint64_t v13 = v8;
LABEL_34:
      sub_1C28646EC(v13);
      swift_bridgeObjectRelease();
      sub_1C28646EC(v8);
      goto LABEL_35;
    }
    if (v8 == 2)
    {
      sub_1C28625C8(v5);
      sub_1C28625C8(v5);
      swift_bridgeObjectRetain();
      sub_1C28625C8(v5);
      swift_bridgeObjectRetain();
      sub_1C28625C8(2);
      sub_1C28646FC(v5);
      goto LABEL_31;
    }
    if (v5 != 1) {
      break;
    }
    sub_1C28625C8(1);
    if (v8 != 1)
    {
      sub_1C28625C8(1);
      swift_bridgeObjectRetain();
      sub_1C28625C8(1);
      swift_bridgeObjectRetain();
      sub_1C28625C8(v8);
LABEL_33:
      sub_1C28625D8(v8);
      sub_1C28646FC(v5);
      sub_1C28646FC(v8);
      sub_1C28646FC(v5);
      uint64_t v13 = v5;
      goto LABEL_34;
    }
LABEL_6:
    v3 += 3;
    if (!--v2) {
      return 1;
    }
  }
  if (v8 == 1)
  {
    sub_1C28625C8(v5);
    sub_1C28625D8(v5);
    sub_1C28625C8(v5);
    sub_1C28625D8(v5);
    swift_bridgeObjectRetain();
    sub_1C28625C8(v5);
    swift_bridgeObjectRetain();
    sub_1C28625C8(1);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (!v5)
  {
    sub_1C28625C8(0);
    if (v8) {
      return 0;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1C28625C8(v5);
    sub_1C28625D8(v5);
    sub_1C28625C8(v5);
    sub_1C28625D8(v5);
    swift_bridgeObjectRetain();
    sub_1C28625C8(v5);
    swift_bridgeObjectRetain();
    sub_1C28625C8(v8);
    sub_1C28625C8(v8);
    uint64_t v10 = swift_bridgeObjectRetain();
    char v11 = sub_1C28625E8(v10);
    swift_bridgeObjectRelease();
    sub_1C28646EC(v8);
    swift_bridgeObjectRelease();
    sub_1C28646FC(v5);
    sub_1C28646FC(v5);
    sub_1C28646EC(v5);
    swift_bridgeObjectRelease();
    sub_1C28646EC(v8);
    swift_bridgeObjectRelease();
    sub_1C28646EC(v5);
    if ((v11 & 1) == 0) {
      return 0;
    }
    goto LABEL_6;
  }
  sub_1C28625C8(v5);
  swift_bridgeObjectRetain();
  sub_1C28625C8(v5);
  swift_bridgeObjectRelease();
LABEL_35:
  swift_bridgeObjectRelease();
  sub_1C28646EC(v5);
  return 0;
}

unint64_t sub_1C286243C()
{
  unint64_t result = qword_1EBB73D88;
  if (!qword_1EBB73D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D88);
  }
  return result;
}

unint64_t sub_1C2862490()
{
  unint64_t result = qword_1EA310D18;
  if (!qword_1EA310D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310D18);
  }
  return result;
}

uint64_t sub_1C28624E4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2865A0C(255, &qword_1EBB73E70, (uint64_t)&type metadata for AppStoreDataProvider.EditorialItem, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2862574()
{
  unint64_t result = qword_1EBB73D60;
  if (!qword_1EBB73D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D60);
  }
  return result;
}

uint64_t sub_1C28625C8(uint64_t result)
{
  if (result != 2) {
    return sub_1C28625D8(result);
  }
  return result;
}

uint64_t sub_1C28625D8(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C28625E8(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1F4188790](a1);
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3 != *(void *)(v2 + 16)) {
    return 0;
  }
  if (!v3 || v1 == v2) {
    return 1;
  }
  uint64_t v4 = (long long *)(v1 + 32);
  uint64_t v5 = (long long *)(v2 + 32);
  for (uint64_t i = v3 - 1; ; --i)
  {
    long long v7 = v4[11];
    v88[9] = v4[10];
    v88[10] = v7;
    v88[11] = v4[12];
    long long v8 = v4[7];
    v88[5] = v4[6];
    v88[6] = v8;
    long long v9 = v4[8];
    v88[8] = v4[9];
    v88[7] = v9;
    long long v10 = v4[3];
    v88[1] = v4[2];
    v88[2] = v10;
    long long v11 = v4[4];
    v88[4] = v4[5];
    v88[3] = v11;
    long long v12 = *v4;
    v88[0] = v4[1];
    long long v87 = v12;
    long long v13 = v12;
    long long v14 = v5[11];
    v90[9] = v5[10];
    v90[10] = v14;
    v90[11] = v5[12];
    long long v15 = v5[7];
    v90[5] = v5[6];
    v90[6] = v15;
    long long v16 = v5[8];
    v90[8] = v5[9];
    v90[7] = v16;
    long long v17 = v5[3];
    v90[1] = v5[2];
    v90[2] = v17;
    long long v18 = v5[4];
    v90[4] = v5[5];
    v90[3] = v18;
    long long v19 = *v5;
    v90[0] = v5[1];
    long long v89 = v19;
    if (*((void *)&v13 + 1))
    {
      if (!*((void *)&v19 + 1)
        || v13 != __PAIR128__(*((unint64_t *)&v19 + 1), v89) && (sub_1C28CE640() & 1) == 0)
      {
        return 0;
      }
    }
    else if (*((void *)&v19 + 1))
    {
      return 0;
    }
    sub_1C28655D4((uint64_t)v88, (uint64_t)v86, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    if (sub_1C2869EA0((uint64_t)v86) == 1)
    {
      sub_1C28655D4((uint64_t)v90, (uint64_t)&v73, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      if (sub_1C2869EA0((uint64_t)&v73) == 1)
      {
        if (!i) {
          return 1;
        }
        goto LABEL_56;
      }
      sub_1C28650D0((uint64_t)&v87);
      sub_1C28650D0((uint64_t)&v89);
LABEL_61:
      sub_1C28655D4((uint64_t)v88, (uint64_t)&v73, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1C28655D4((uint64_t)v90, (uint64_t)&v85, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1C2869FFC(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
      sub_1C2869EC4((uint64_t)&v73);
      goto LABEL_72;
    }
    sub_1C28655D4((uint64_t)v88, (uint64_t)&v69, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    sub_1C28655D4((uint64_t)v90, (uint64_t)v72, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    if (sub_1C2869EA0((uint64_t)v72) == 1)
    {
      long long v81 = v70[7];
      long long v82 = v70[8];
      long long v83 = v70[9];
      long long v84 = v71;
      long long v77 = v70[3];
      long long v78 = v70[4];
      long long v79 = v70[5];
      long long v80 = v70[6];
      long long v73 = v69;
      long long v74 = v70[0];
      long long v75 = v70[1];
      long long v76 = v70[2];
      sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
      sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
      sub_1C28650D0((uint64_t)&v87);
      sub_1C28650D0((uint64_t)&v89);
      sub_1C2865830((uint64_t)&v73);
      goto LABEL_61;
    }
    sub_1C28655D4((uint64_t)v90, (uint64_t)&v64, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    uint64_t v21 = *((void *)&v69 + 1);
    uint64_t v20 = v69;
    sub_1C28655D4((uint64_t)v70, (uint64_t)v68, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    long long v30 = v71;
    if (v21)
    {
      if (!v65 || (v20 != v64 || v21 != v65) && (sub_1C28CE640() & 1) == 0)
      {
LABEL_58:
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C28650D0((uint64_t)&v87);
        sub_1C28650D0((uint64_t)&v89);
        goto LABEL_71;
      }
    }
    else if (v65)
    {
      goto LABEL_58;
    }
    sub_1C28655D4((uint64_t)v68, (uint64_t)v63, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    if (sub_1C2869D08((uint64_t)v63) != 1) {
      break;
    }
    sub_1C28655D4((uint64_t)v66, (uint64_t)&v73, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    int v22 = sub_1C2869D08((uint64_t)&v73);
    sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
    sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
    sub_1C28650D0((uint64_t)&v87);
    sub_1C28650D0((uint64_t)&v89);
    if (v22 != 1) {
      goto LABEL_64;
    }
LABEL_49:
    if (*((void *)&v30 + 1))
    {
      if (!*((void *)&v67 + 1) || v30 != v67 && (sub_1C28CE640() & 1) == 0) {
        goto LABEL_71;
      }
    }
    else if (*((void *)&v67 + 1))
    {
      goto LABEL_71;
    }
    *(void *)&long long v73 = v20;
    *((void *)&v73 + 1) = v21;
    sub_1C28655D4((uint64_t)v68, (uint64_t)&v74, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    long long v84 = v30;
    sub_1C2865830((uint64_t)&v73);
    sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C28652B8);
    sub_1C28651C4((uint64_t)&v89);
    sub_1C28651C4((uint64_t)&v87);
    if (!i) {
      return 1;
    }
LABEL_56:
    v5 += 13;
    v4 += 13;
  }
  sub_1C28655D4((uint64_t)v68, (uint64_t)v61, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1C28655D4((uint64_t)v66, (uint64_t)v62, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  if (sub_1C2869D08((uint64_t)v62) != 1)
  {
    sub_1C28655D4((uint64_t)v66, (uint64_t)v58, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    sub_1C28655D4((uint64_t)v61, (uint64_t)v59, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1C28655D4((uint64_t)v59, (uint64_t)v60, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    if (sub_1C2869EA0((uint64_t)v60) == 1)
    {
      sub_1C28655D4((uint64_t)v58, (uint64_t)&v73, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      int v23 = sub_1C2869EA0((uint64_t)&v73);
      sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
      if (v23 != 1)
      {
        uint64_t v27 = v20;
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C28650D0((uint64_t)&v87);
        sub_1C28650D0((uint64_t)&v89);
LABEL_67:
        sub_1C28655D4((uint64_t)v59, (uint64_t)&v73, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
        sub_1C28655D4((uint64_t)v58, (uint64_t)&v83, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
        sub_1C2869E34(v58, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
        sub_1C2869D24((uint64_t)&v73, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1C2865440);
        sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C28653EC);
        uint64_t v20 = v27;
        goto LABEL_71;
      }
      sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
      sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
      sub_1C28650D0((uint64_t)&v87);
      sub_1C28650D0((uint64_t)&v89);
    }
    else
    {
      sub_1C28655D4((uint64_t)v59, (uint64_t)&v54, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      sub_1C28655D4((uint64_t)v58, (uint64_t)v57, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      if (sub_1C2869EA0((uint64_t)v57) == 1)
      {
        uint64_t v27 = v20;
        long long v79 = v56[4];
        long long v80 = v56[5];
        long long v81 = v56[6];
        long long v82 = v56[7];
        long long v75 = v56[0];
        long long v76 = v56[1];
        long long v77 = v56[2];
        long long v78 = v56[3];
        long long v73 = v54;
        long long v74 = v55;
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
        sub_1C28650D0((uint64_t)&v87);
        sub_1C28650D0((uint64_t)&v89);
        sub_1C2865C78(&v73);
        goto LABEL_67;
      }
      sub_1C28655D4((uint64_t)v58, (uint64_t)&v50, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      long long v24 = v54;
      long long v25 = v55;
      sub_1C28655D4((uint64_t)v56, (uint64_t)v53, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      if (*((void *)&v24 + 1))
      {
        if (!*((void *)&v50 + 1) || v24 != v50 && (sub_1C28CE640() & 1) == 0)
        {
LABEL_62:
          sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
          sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
          sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
          sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
          sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
          sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
          sub_1C28650D0((uint64_t)&v87);
          sub_1C28650D0((uint64_t)&v89);
LABEL_70:
          long long v73 = v24;
          long long v74 = v25;
          sub_1C28655D4((uint64_t)v53, (uint64_t)&v75, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
          sub_1C2865C78(&v73);
          sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
          sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
          sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C28653EC);
          goto LABEL_71;
        }
      }
      else if (*((void *)&v50 + 1))
      {
        goto LABEL_62;
      }
      if (*((void *)&v25 + 1))
      {
        if (!*((void *)&v51 + 1) || v25 != v51 && (sub_1C28CE640() & 1) == 0) {
          goto LABEL_62;
        }
      }
      else if (*((void *)&v51 + 1))
      {
        goto LABEL_62;
      }
      sub_1C28655D4((uint64_t)v53, (uint64_t)v49, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      if (sub_1C2869C00((uint64_t)v49) == 1)
      {
        sub_1C28655D4((uint64_t)v52, (uint64_t)&v73, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
        int v28 = sub_1C2869C00((uint64_t)&v73);
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
        sub_1C28650D0((uint64_t)&v87);
        sub_1C28650D0((uint64_t)&v89);
        if (v28 != 1) {
          goto LABEL_69;
        }
      }
      else
      {
        sub_1C28655D4((uint64_t)v53, (uint64_t)&v41, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
        sub_1C28655D4((uint64_t)v52, (uint64_t)&v73, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
        if (sub_1C2869C00((uint64_t)&v73) == 1)
        {
          long long v37 = v45;
          long long v38 = v46;
          long long v39 = v47;
          long long v40 = v48;
          long long v33 = v41;
          long long v34 = v42;
          long long v35 = v43;
          long long v36 = v44;
          sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
          sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
          sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
          sub_1C2865A58(v53);
          sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
          sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
          sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
          sub_1C28650D0((uint64_t)&v87);
          sub_1C28650D0((uint64_t)&v89);
          sub_1C2865A58(v53);
          sub_1C2865E70((uint64_t)&v33);
LABEL_69:
          sub_1C28655D4((uint64_t)v53, (uint64_t)&v73, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
          sub_1C28655D4((uint64_t)v52, (uint64_t)&v81, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
          sub_1C2865A58(v52);
          sub_1C2869C24((uint64_t *)&v73);
          goto LABEL_70;
        }
        sub_1C28655D4((uint64_t)v52, (uint64_t)v32, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
        v31[4] = v32[4];
        v31[5] = v32[5];
        v31[6] = v32[6];
        v31[7] = v32[7];
        v31[0] = v32[0];
        v31[1] = v32[1];
        v31[2] = v32[2];
        v31[3] = v32[3];
        BOOL v29 = _s16HealthExperience20AppStoreDataProviderC7ArtworkV2eeoiySbAE_AEtFZ_0((uint64_t)&v41, (uint64_t)v31);
        long long v37 = v45;
        long long v38 = v46;
        long long v39 = v47;
        long long v40 = v48;
        long long v33 = v41;
        long long v34 = v42;
        long long v35 = v43;
        long long v36 = v44;
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
        sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
        sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
        sub_1C28650D0((uint64_t)&v87);
        sub_1C28650D0((uint64_t)&v89);
        sub_1C2865A58(v53);
        sub_1C2865E70((uint64_t)&v33);
        if (!v29) {
          goto LABEL_70;
        }
      }
      long long v73 = v24;
      long long v74 = v25;
      sub_1C28655D4((uint64_t)v53, (uint64_t)&v75, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1C2865C78(&v73);
      sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
      sub_1C2869E34(v59, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
      sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C28653EC);
    }
    goto LABEL_49;
  }
  long long v79 = v61[6];
  long long v80 = v61[7];
  long long v81 = v61[8];
  long long v82 = v61[9];
  long long v75 = v61[2];
  long long v76 = v61[3];
  long long v77 = v61[4];
  long long v78 = v61[5];
  long long v73 = v61[0];
  long long v74 = v61[1];
  sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
  sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
  sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
  sub_1C2869E34(v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
  sub_1C28650D0((uint64_t)&v87);
  sub_1C28650D0((uint64_t)&v89);
  sub_1C2869E34(&v73, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
LABEL_64:
  sub_1C28655D4((uint64_t)v68, (uint64_t)&v73, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1C28655D4((uint64_t)v66, (uint64_t)&v83, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1C2869E34(v66, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
  sub_1C2869D24((uint64_t)&v73, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1C28653EC);
LABEL_71:
  *(void *)&long long v73 = v20;
  *((void *)&v73 + 1) = v21;
  sub_1C28655D4((uint64_t)v68, (uint64_t)&v74, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  long long v84 = v30;
  sub_1C2865830((uint64_t)&v73);
  sub_1C2869FFC(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C28652B8);
LABEL_72:
  sub_1C28651C4((uint64_t)&v89);
  sub_1C28651C4((uint64_t)&v87);
  return 0;
}

BOOL _s16HealthExperience20AppStoreDataProviderC7ArtworkV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v69 = *(void *)(a1 + 80);
  uint64_t v70 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 104);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 120);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v19 = *(void *)(a2 + 48);
  uint64_t v18 = *(void *)(a2 + 56);
  uint64_t v21 = *(void *)(a2 + 64);
  uint64_t v20 = *(void *)(a2 + 72);
  uint64_t v23 = *(void *)(a2 + 80);
  uint64_t v22 = *(void *)(a2 + 88);
  uint64_t v24 = *(void *)(a2 + 104);
  uint64_t v68 = *(void *)(a2 + 96);
  uint64_t v26 = *(void *)(a2 + 112);
  uint64_t v25 = *(void *)(a2 + 120);
  if (v4)
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 == *(void *)a2) {
      char v27 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v27 = 1;
    }
    if (v27) {
      return 0;
    }
  }
  if (v6)
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (v5 == *(void *)(a2 + 16)) {
      char v28 = *(unsigned char *)(a2 + 24);
    }
    else {
      char v28 = 1;
    }
    if (v28) {
      return 0;
    }
  }
  if (!v8)
  {
    if (v17) {
      return 0;
    }
    goto LABEL_22;
  }
  if (!v17) {
    return 0;
  }
  if (v7 == *(void *)(a2 + 32) && v8 == v17) {
    goto LABEL_22;
  }
  uint64_t v64 = *(void *)(a2 + 120);
  uint64_t v66 = v15;
  uint64_t v60 = *(void *)(a2 + 112);
  uint64_t v61 = v16;
  uint64_t v59 = v13;
  uint64_t v62 = v14;
  char v29 = sub_1C28CE640();
  uint64_t v13 = v59;
  uint64_t v14 = v62;
  uint64_t v25 = v64;
  uint64_t v26 = v60;
  uint64_t v16 = v61;
  uint64_t v15 = v66;
  char v30 = v29;
  BOOL result = 0;
  if (v30)
  {
LABEL_22:
    if (v11)
    {
      if (!v18) {
        return 0;
      }
      if (v9 != v19 || v11 != v18)
      {
        uint64_t v65 = v25;
        uint64_t v67 = v15;
        uint64_t v32 = v16;
        uint64_t v33 = v26;
        uint64_t v34 = v13;
        uint64_t v63 = v14;
        char v35 = sub_1C28CE640();
        uint64_t v14 = v63;
        uint64_t v25 = v65;
        uint64_t v13 = v34;
        uint64_t v26 = v33;
        uint64_t v16 = v32;
        uint64_t v15 = v67;
        char v36 = v35;
        BOOL result = 0;
        if ((v36 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v12)
    {
      if (!v20) {
        return 0;
      }
      if (v10 != v21 || v12 != v20)
      {
        uint64_t v37 = v25;
        uint64_t v38 = v15;
        uint64_t v39 = v16;
        uint64_t v40 = v26;
        uint64_t v41 = v13;
        uint64_t v42 = v14;
        char v43 = sub_1C28CE640();
        uint64_t v14 = v42;
        uint64_t v13 = v41;
        uint64_t v26 = v40;
        uint64_t v25 = v37;
        uint64_t v16 = v39;
        uint64_t v15 = v38;
        char v44 = v43;
        BOOL result = 0;
        if ((v44 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v70)
    {
      if (!v22) {
        return 0;
      }
      if (v69 != v23 || v70 != v22)
      {
        uint64_t v45 = v25;
        uint64_t v46 = v15;
        uint64_t v47 = v16;
        uint64_t v48 = v26;
        uint64_t v49 = v13;
        uint64_t v50 = v14;
        char v51 = sub_1C28CE640();
        uint64_t v14 = v50;
        uint64_t v13 = v49;
        uint64_t v26 = v48;
        uint64_t v25 = v45;
        uint64_t v16 = v47;
        uint64_t v15 = v46;
        char v52 = v51;
        BOOL result = 0;
        if ((v52 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v14)
    {
      if (!v24) {
        return 0;
      }
      if (v13 != v68 || v14 != v24)
      {
        uint64_t v53 = v25;
        uint64_t v54 = v15;
        uint64_t v55 = v16;
        uint64_t v56 = v26;
        char v57 = sub_1C28CE640();
        uint64_t v26 = v56;
        uint64_t v25 = v53;
        uint64_t v16 = v55;
        uint64_t v15 = v54;
        char v58 = v57;
        BOOL result = 0;
        if ((v58 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v24)
    {
      return 0;
    }
    if (v16) {
      return v25 && (v15 == v26 && v16 == v25 || (sub_1C28CE640() & 1) != 0);
    }
    return !v25;
  }
  return result;
}

BOOL _s16HealthExperience20AppStoreDataProviderC13iOSAttributesV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  sub_1C28655D4((uint64_t)(a1 + 4), (uint64_t)v39, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = (uint64_t)(a2 + 4);
  uint64_t v11 = a2[2];
  uint64_t v10 = a2[3];
  sub_1C28655D4(v9, (uint64_t)v40, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  if (!v4)
  {
    if (v7) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v7) {
    return 0;
  }
  BOOL v12 = v3 == v8 && v4 == v7;
  if (v12 || (v13 = sub_1C28CE640(), BOOL result = 0, (v13 & 1) != 0))
  {
LABEL_10:
    if (v6)
    {
      if (!v10) {
        return 0;
      }
      if (v5 != v11 || v6 != v10)
      {
        char v15 = sub_1C28CE640();
        BOOL result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    sub_1C28655D4((uint64_t)v39, (uint64_t)v38, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    if (sub_1C2869C00((uint64_t)v38) == 1)
    {
      sub_1C28655D4((uint64_t)v40, (uint64_t)v36, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      if (sub_1C2869C00((uint64_t)v36) == 1) {
        return 1;
      }
      goto LABEL_22;
    }
    sub_1C28655D4((uint64_t)v39, (uint64_t)&v28, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    sub_1C28655D4((uint64_t)v40, (uint64_t)v36, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    if (sub_1C2869C00((uint64_t)v36) == 1)
    {
      long long v22 = v32;
      long long v23 = v33;
      long long v24 = v34;
      long long v25 = v35;
      long long v18 = v28;
      long long v19 = v29;
      long long v20 = v30;
      long long v21 = v31;
      sub_1C28655D4((uint64_t)v39, (uint64_t)v26, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1C28655D4((uint64_t)v39, (uint64_t)v27, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1C2865DF8((uint64_t)v27);
      sub_1C2865DF8((uint64_t)v26);
      sub_1C2865E70((uint64_t)&v18);
LABEL_22:
      sub_1C28655D4((uint64_t)v39, (uint64_t)v36, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1C28655D4((uint64_t)v40, (uint64_t)&v37, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1C2865A58(v40);
      sub_1C2869C24(v36);
      return 0;
    }
    sub_1C28655D4((uint64_t)v40, (uint64_t)&v18, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    v17[4] = v22;
    v17[5] = v23;
    v17[6] = v24;
    v17[7] = v25;
    v17[0] = v18;
    v17[1] = v19;
    v17[2] = v20;
    v17[3] = v21;
    BOOL v16 = _s16HealthExperience20AppStoreDataProviderC7ArtworkV2eeoiySbAE_AEtFZ_0((uint64_t)&v28, (uint64_t)v17);
    v26[4] = v32;
    v26[5] = v33;
    v26[6] = v34;
    v26[7] = v35;
    v26[0] = v28;
    v26[1] = v29;
    v26[2] = v30;
    v26[3] = v31;
    sub_1C28655D4((uint64_t)v39, (uint64_t)v27, &qword_1EA310DA0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    sub_1C2865DF8((uint64_t)v27);
    sub_1C2865E70((uint64_t)v26);
    return v16;
  }
  return result;
}

BOOL _s16HealthExperience20AppStoreDataProviderC8PlatformV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C28655D4(a1, (uint64_t)v30, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  sub_1C28655D4(a2, (uint64_t)v31, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  sub_1C28655D4((uint64_t)v30, (uint64_t)v32, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  if (sub_1C2869EA0((uint64_t)v32) != 1)
  {
    sub_1C28655D4((uint64_t)v30, (uint64_t)&v18, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1C28655D4((uint64_t)v31, (uint64_t)v28, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    if (sub_1C2869EA0((uint64_t)v28) != 1)
    {
      sub_1C28655D4((uint64_t)v31, (uint64_t)&v6, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      v5[6] = v12;
      v5[7] = v13;
      v5[8] = v14;
      v5[9] = v15;
      v5[2] = v8;
      v5[3] = v9;
      v5[4] = v10;
      v5[5] = v11;
      v5[0] = v6;
      v5[1] = v7;
      sub_1C28655D4((uint64_t)v30, (uint64_t)v16, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      sub_1C2869E34(v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
      sub_1C2865BB0(v16);
      BOOL v3 = _s16HealthExperience20AppStoreDataProviderC13iOSAttributesV2eeoiySbAE_AEtFZ_0((uint64_t *)&v18, (uint64_t *)v5);
      v17[6] = v24;
      v17[7] = v25;
      _OWORD v17[8] = v26;
      v17[9] = v27;
      v17[2] = v20;
      v17[3] = v21;
      v17[4] = v22;
      v17[5] = v23;
      v17[0] = v18;
      v17[1] = v19;
      sub_1C2865C78(v17);
      sub_1C2869E34(v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
      return v3;
    }
    long long v12 = v24;
    long long v13 = v25;
    long long v14 = v26;
    long long v15 = v27;
    long long v8 = v20;
    long long v9 = v21;
    long long v10 = v22;
    long long v11 = v23;
    long long v6 = v18;
    long long v7 = v19;
    sub_1C28655D4((uint64_t)v30, (uint64_t)v16, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1C28655D4((uint64_t)v30, (uint64_t)v17, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1C2865BB0(v17);
    sub_1C2865BB0(v16);
    sub_1C2865C78(&v6);
    goto LABEL_6;
  }
  sub_1C28655D4((uint64_t)v31, (uint64_t)v28, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  if (sub_1C2869EA0((uint64_t)v28) != 1)
  {
LABEL_6:
    sub_1C28655D4((uint64_t)v30, (uint64_t)v28, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1C28655D4((uint64_t)v31, (uint64_t)&v29, &qword_1EA310D88, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1C2869E34(v31, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
    sub_1C2869D24((uint64_t)v28, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1C2865440);
    return 0;
  }
  return 1;
}

uint64_t _s16HealthExperience20AppStoreDataProviderC10AttributesV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  sub_1C28655D4((uint64_t)(a1 + 2), (uint64_t)v42, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  uint64_t v6 = a1[22];
  uint64_t v7 = a1[23];
  uint64_t v9 = *a2;
  uint64_t v8 = a2[1];
  sub_1C28655D4((uint64_t)(a2 + 2), (uint64_t)v43, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  uint64_t v11 = a2[22];
  uint64_t v10 = a2[23];
  if (!v5)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v8) {
    return 0;
  }
  BOOL v12 = v4 == v9 && v5 == v8;
  if (v12 || (v13 = sub_1C28CE640(), uint64_t result = 0, (v13 & 1) != 0))
  {
LABEL_10:
    sub_1C28655D4((uint64_t)v42, (uint64_t)v41, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    if (sub_1C2869D08((uint64_t)v41) == 1)
    {
      sub_1C28655D4((uint64_t)v43, (uint64_t)v39, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      if (sub_1C2869D08((uint64_t)v39) == 1)
      {
LABEL_17:
        if (v7)
        {
          if (v10 && (v6 == v11 && v7 == v10 || (sub_1C28CE640() & 1) != 0)) {
            return 1;
          }
        }
        else if (!v10)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_1C28655D4((uint64_t)v42, (uint64_t)&v29, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      sub_1C28655D4((uint64_t)v43, (uint64_t)v39, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      if (sub_1C2869D08((uint64_t)v39) != 1)
      {
        sub_1C28655D4((uint64_t)v43, (uint64_t)&v17, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
        v16[6] = v23;
        v16[7] = v24;
        v16[8] = v25;
        v16[9] = v26;
        void v16[2] = v19;
        v16[3] = v20;
        v16[4] = v21;
        v16[5] = v22;
        v16[0] = v17;
        v16[1] = v18;
        sub_1C28655D4((uint64_t)v42, (uint64_t)v27, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
        sub_1C2869E34(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
        sub_1C2869E34(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
        BOOL v15 = _s16HealthExperience20AppStoreDataProviderC8PlatformV2eeoiySbAE_AEtFZ_0((uint64_t)&v29, (uint64_t)v16);
        v28[6] = v35;
        v28[7] = v36;
        v28[8] = v37;
        v28[9] = v38;
        v28[2] = v31;
        v28[3] = v32;
        v28[4] = v33;
        v28[5] = v34;
        v28[0] = v29;
        v28[1] = v30;
        sub_1C2869E34(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
        sub_1C2869E34(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C28653EC);
        if (!v15) {
          return 0;
        }
        goto LABEL_17;
      }
      long long v23 = v35;
      long long v24 = v36;
      long long v25 = v37;
      long long v26 = v38;
      long long v19 = v31;
      long long v20 = v32;
      long long v21 = v33;
      long long v22 = v34;
      long long v17 = v29;
      long long v18 = v30;
      sub_1C28655D4((uint64_t)v42, (uint64_t)v27, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      sub_1C28655D4((uint64_t)v42, (uint64_t)v28, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      sub_1C2869E34(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
      sub_1C2869E34(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864B1C);
      sub_1C2869E34(&v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2865440);
    }
    sub_1C28655D4((uint64_t)v42, (uint64_t)v39, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    sub_1C28655D4((uint64_t)v43, (uint64_t)&v40, &qword_1EA310D70, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    sub_1C2869E34(v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864AC8);
    sub_1C2869D24((uint64_t)v39, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))sub_1C28653EC);
    return 0;
  }
  return result;
}

uint64_t _s16HealthExperience20AppStoreDataProviderC12RelationshipV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*a1 == 1)
  {
    if (v3 == 1) {
      return 1;
    }
    goto LABEL_6;
  }
  if (v3 == 1)
  {
    swift_bridgeObjectRetain();
LABEL_6:
    sub_1C28625D8(v3);
    sub_1C28646FC(v2);
    sub_1C28646FC(v3);
    return 0;
  }
  if (v2)
  {
    uint64_t v5 = *a1;
    if (v3)
    {
      sub_1C28625D8(v5);
      sub_1C28625D8(v2);
      sub_1C28625D8(v3);
      uint64_t v6 = swift_bridgeObjectRetain();
      char v7 = sub_1C28625E8(v6);
      swift_bridgeObjectRelease();
      sub_1C28646FC(v3);
      swift_bridgeObjectRelease();
      sub_1C28646FC(v2);
      if (v7) {
        return 1;
      }
    }
    else
    {
      sub_1C28625D8(v5);
      swift_bridgeObjectRelease();
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

BOOL _s16HealthExperience20AppStoreDataProviderC13EditorialItemV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  if (!v3)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v7 = *a1 == *a2 && v3 == v5;
  if (v7 || (v8 = sub_1C28CE640(), BOOL result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    if (v4 == 2)
    {
      if (v6 == 2) {
        return 1;
      }
      goto LABEL_15;
    }
    uint64_t v12 = v4;
    if (v6 == 2)
    {
      sub_1C28625D8(v4);
      sub_1C28625D8(v4);
      sub_1C28646FC(v4);
LABEL_15:
      sub_1C28625C8(v6);
      sub_1C28646EC(v4);
      sub_1C28646EC(v6);
      return 0;
    }
    uint64_t v11 = v6;
    sub_1C28625C8(v4);
    sub_1C28625D8(v4);
    char v10 = _s16HealthExperience20AppStoreDataProviderC12RelationshipV2eeoiySbAE_AEtFZ_0(&v12, &v11);
    sub_1C28646FC(v12);
    sub_1C28646EC(v4);
    return (v10 & 1) != 0;
  }
  return result;
}

unint64_t sub_1C28645F0()
{
  unint64_t result = qword_1EBB73D48;
  if (!qword_1EBB73D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D48);
  }
  return result;
}

unint64_t sub_1C2864644()
{
  unint64_t result = qword_1EA310D28;
  if (!qword_1EA310D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310D28);
  }
  return result;
}

unint64_t sub_1C2864698()
{
  unint64_t result = qword_1EBB73D40;
  if (!qword_1EBB73D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D40);
  }
  return result;
}

uint64_t sub_1C28646EC(uint64_t result)
{
  if (result != 2) {
    return sub_1C28646FC(result);
  }
  return result;
}

uint64_t sub_1C28646FC(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1C286470C()
{
  unint64_t result = qword_1EBB73D28;
  if (!qword_1EBB73D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D28);
  }
  return result;
}

unint64_t sub_1C2864760()
{
  unint64_t result = qword_1EA310D38;
  if (!qword_1EA310D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310D38);
  }
  return result;
}

unint64_t sub_1C28647B4()
{
  unint64_t result = qword_1EBB73D20;
  if (!qword_1EBB73D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D20);
  }
  return result;
}

unint64_t sub_1C2864808()
{
  unint64_t result = qword_1EBB73D08;
  if (!qword_1EBB73D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D08);
  }
  return result;
}

unint64_t sub_1C286485C()
{
  unint64_t result = qword_1EA310D50;
  if (!qword_1EA310D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310D50);
  }
  return result;
}

uint64_t sub_1C28648B0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2865A0C(255, &qword_1EBB73E80, (uint64_t)&type metadata for AppStoreDataProvider.CardItem, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2864940()
{
  unint64_t result = qword_1EBB73DD0;
  if (!qword_1EBB73DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DD0);
  }
  return result;
}

uint64_t sub_1C2864994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1C2864AC8(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C2864AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 2)
  {
    sub_1C2864B1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  }
}

void sub_1C2864B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2864C28(a5, a6, a7, a8, a9, a10);
  }
}

uint64_t sub_1C2864C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

BOOL _s16HealthExperience20AppStoreDataProviderC8CardItemV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  sub_1C28655D4((uint64_t)(a1 + 2), (uint64_t)v41, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  sub_1C28655D4((uint64_t)(a2 + 2), (uint64_t)v42, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v7 = v3 == v6 && v4 == v5;
  if (v7 || (v8 = sub_1C28CE640(), BOOL result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    sub_1C28655D4((uint64_t)v41, (uint64_t)v40, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    if (sub_1C2869EA0((uint64_t)v40) == 1)
    {
      sub_1C28655D4((uint64_t)v42, (uint64_t)v38, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      if (sub_1C2869EA0((uint64_t)v38) == 1) {
        return 1;
      }
      goto LABEL_15;
    }
    sub_1C28655D4((uint64_t)v41, (uint64_t)&v26, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    sub_1C28655D4((uint64_t)v42, (uint64_t)v38, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    if (sub_1C2869EA0((uint64_t)v38) == 1)
    {
      long long v20 = v34;
      long long v21 = v35;
      long long v22 = v36;
      long long v23 = v37;
      long long v16 = v30;
      long long v17 = v31;
      long long v18 = v32;
      long long v19 = v33;
      long long v12 = v26;
      long long v13 = v27;
      long long v14 = v28;
      long long v15 = v29;
      sub_1C28655D4((uint64_t)v41, (uint64_t)v24, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1C28655D4((uint64_t)v41, (uint64_t)v25, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1C2865750((uint64_t)v25);
      sub_1C2865750((uint64_t)v24);
      sub_1C2865830((uint64_t)&v12);
LABEL_15:
      sub_1C28655D4((uint64_t)v41, (uint64_t)v38, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1C28655D4((uint64_t)v42, (uint64_t)&v39, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1C2869FFC(v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
      sub_1C2869EC4((uint64_t)v38);
      return 0;
    }
    sub_1C28655D4((uint64_t)v42, (uint64_t)&v12, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    v11[8] = v20;
    v11[9] = v21;
    v11[10] = v22;
    v11[11] = v23;
    v11[4] = v16;
    void v11[5] = v17;
    v11[6] = v18;
    v11[7] = v19;
    v11[0] = v12;
    v11[1] = v13;
    v11[2] = v14;
    v11[3] = v15;
    sub_1C28655D4((uint64_t)v41, (uint64_t)v24, &qword_1EA310D58, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    sub_1C2869FFC(v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C2864994);
    sub_1C2865750((uint64_t)v24);
    char v10 = _s16HealthExperience20AppStoreDataProviderC10AttributesV2eeoiySbAE_AEtFZ_0((uint64_t *)&v26, (uint64_t *)v11);
    v25[8] = v34;
    v25[9] = v35;
    v25[10] = v36;
    v25[11] = v37;
    v25[4] = v30;
    v25[5] = v31;
    v25[6] = v32;
    v25[7] = v33;
    v25[0] = v26;
    v25[1] = v27;
    v25[2] = v28;
    v25[3] = v29;
    sub_1C2865830((uint64_t)v25);
    sub_1C2869FFC(v41, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1C28652B8);
    return (v10 & 1) != 0;
  }
  return result;
}

unint64_t sub_1C2864FD4()
{
  unint64_t result = qword_1EBB73DB8;
  if (!qword_1EBB73DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DB8);
  }
  return result;
}

unint64_t sub_1C2865028()
{
  unint64_t result = qword_1EA310D68;
  if (!qword_1EA310D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310D68);
  }
  return result;
}

unint64_t sub_1C286507C()
{
  unint64_t result = qword_1EBB73D00;
  if (!qword_1EBB73D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D00);
  }
  return result;
}

uint64_t sub_1C28650D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  long long v10 = *(_OWORD *)(a1 + 96);
  long long v11 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRetain();
  sub_1C2864994(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1C28651C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  long long v10 = *(_OWORD *)(a1 + 96);
  long long v11 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  sub_1C28652B8(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1C28652B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1C28653EC(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C28653EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 2)
  {
    sub_1C2865440(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  }
}

void sub_1C2865440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C286554C(a5, a6, a7, a8, a9, a10);
  }
}

uint64_t sub_1C286554C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C28655D4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C2865A0C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C2865654()
{
  unint64_t result = qword_1EBB73CE8;
  if (!qword_1EBB73CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73CE8);
  }
  return result;
}

unint64_t sub_1C28656A8()
{
  unint64_t result = qword_1EA310D80;
  if (!qword_1EA310D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310D80);
  }
  return result;
}

unint64_t sub_1C28656FC()
{
  unint64_t result = qword_1EBB73DF0;
  if (!qword_1EBB73DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DF0);
  }
  return result;
}

uint64_t sub_1C2865750(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  long long v9 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRetain();
  sub_1C2864AC8(v11, v10, v2, v3, v4, v5, v6, v7, v9, *((uint64_t *)&v9 + 1));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C2865830(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  long long v9 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  sub_1C28653EC(v11, v10, v2, v3, v4, v5, v6, v7, v9, *((uint64_t *)&v9 + 1));
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1C2865910()
{
  unint64_t result = qword_1EBB73DD8;
  if (!qword_1EBB73DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DD8);
  }
  return result;
}

unint64_t sub_1C2865964()
{
  unint64_t result = qword_1EA310D98;
  if (!qword_1EA310D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310D98);
  }
  return result;
}

unint64_t sub_1C28659B8()
{
  unint64_t result = qword_1EBB73D80;
  if (!qword_1EBB73D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D80);
  }
  return result;
}

void sub_1C2865A0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t *sub_1C2865A58(uint64_t *a1)
{
  return a1;
}

unint64_t sub_1C2865AB4()
{
  unint64_t result = qword_1EBB73D68;
  if (!qword_1EBB73D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D68);
  }
  return result;
}

unint64_t sub_1C2865B08()
{
  unint64_t result = qword_1EA310DB0;
  if (!qword_1EA310DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DB0);
  }
  return result;
}

unint64_t sub_1C2865B5C()
{
  unint64_t result = qword_1EBB73DB0;
  if (!qword_1EBB73DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DB0);
  }
  return result;
}

void *sub_1C2865BB0(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[4];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2864C28(v8, v7, v2, v3, v4, v5);
  return a1;
}

void *sub_1C2865C78(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[4];
  uint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C286554C(v8, v7, v2, v3, v4, v5);
  return a1;
}

unint64_t sub_1C2865D3C()
{
  unint64_t result = qword_1EBB768B8;
  if (!qword_1EBB768B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB768B8);
  }
  return result;
}

void sub_1C2865D90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C2865DF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2865E70(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.EditorialItemsList()
{
  return &type metadata for AppStoreDataProvider.EditorialItemsList;
}

uint64_t _s13EditorialItemVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 16);
  if ((unint64_t)(result - 1) >= 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s13EditorialItemVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  if (v4 == 1)
  {
    uint64_t v5 = 1;
  }
  else
  {
    if (v4 != 2)
    {
      a1[2] = v4;
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v5 = 2;
  }
  a1[2] = v5;
  return a1;
}

void *_s13EditorialItemVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a1[2];
  uint64_t v6 = a2[2];
  if (v5 != 2)
  {
    if (v6 == 2)
    {
      sub_1C28660C8(a1 + 2);
    }
    else
    {
      if (v5 == 1)
      {
        if (v6 != 1) {
          goto LABEL_10;
        }
LABEL_9:
        uint64_t v7 = 1;
        goto LABEL_14;
      }
      if (v6 != 1)
      {
        *uint64_t v4 = v6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_1C286609C((uint64_t)(a1 + 2));
    }
    uint64_t v7 = a2[2];
    goto LABEL_14;
  }
  if (v6 == 1) {
    goto LABEL_9;
  }
  if (v6 == 2)
  {
    uint64_t v7 = 2;
LABEL_14:
    *uint64_t v4 = v7;
    return a1;
  }
LABEL_10:
  *uint64_t v4 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C286609C(uint64_t a1)
{
  return a1;
}

void *sub_1C28660C8(void *a1)
{
  if (*a1 != 1) {
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *_s13EditorialItemVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + 2;
  uint64_t v5 = a1[2];
  uint64_t v7 = a2[2];
  if (v5 != 2)
  {
    if (v7 == 2)
    {
      sub_1C28660C8(a1 + 2);
      uint64_t v7 = 2;
    }
    else if (v5 != 1)
    {
      if (v7 != 1)
      {
        *uint64_t v6 = v7;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_1C286609C((uint64_t)(a1 + 2));
      uint64_t v7 = 1;
    }
  }
  *uint64_t v6 = v7;
  return a1;
}

uint64_t _s13EditorialItemVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13EditorialItemVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.EditorialItem()
{
  return &type metadata for AppStoreDataProvider.EditorialItem;
}

uint64_t *_s12RelationshipVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (*a2 != 1) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

uint64_t _s12RelationshipVwxx(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *_s12RelationshipVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  if (v3 == 1)
  {
    if (v4 != 1)
    {
      *a1 = v4;
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v5 = 1;
  }
  else
  {
    if (v4 != 1)
    {
      *a1 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C286609C((uint64_t)a1);
    uint64_t v5 = *a2;
  }
  *a1 = v5;
  return a1;
}

uint64_t *_s12RelationshipVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (*a1 != 1)
  {
    if (v3 != 1)
    {
      *a1 = v3;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C286609C((uint64_t)a1);
    uint64_t v3 = 1;
  }
  *a1 = v3;
  return a1;
}

uint64_t _s12RelationshipVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t _s12RelationshipVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.Relationship()
{
  return &type metadata for AppStoreDataProvider.Relationship;
}

void *_s11CardContentVwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11CardContentVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s11CardContentVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s11CardContentVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.CardContent()
{
  return &type metadata for AppStoreDataProvider.CardContent;
}

uint64_t _s8CardItemVwxx(void *a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = a1[3];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    if ((unint64_t)(a1[5] - 1) >= 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[13] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8CardItemVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v6;
    long long v7 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v7;
    long long v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v8;
    long long v9 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v9;
    long long v10 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v10;
    long long v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    uint64_t v12 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v12 == 1 || v12 == 2)
    {
      long long v13 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v13;
      long long v14 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v14;
      long long v15 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v15;
      long long v16 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v16;
      long long v17 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v17;
    }
    else
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v12;
      uint64_t v18 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v18;
      long long v19 = (_OWORD *)(a1 + 64);
      long long v20 = (_OWORD *)(a2 + 64);
      uint64_t v21 = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21 == 1)
      {
        long long v22 = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 144) = v22;
        long long v23 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v23;
        long long v24 = *(_OWORD *)(a2 + 80);
        *long long v19 = *v20;
        *(_OWORD *)(a1 + 80) = v24;
        long long v25 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v25;
      }
      else
      {
        *(void *)long long v19 = *(void *)v20;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = v21;
        uint64_t v26 = *(void *)(a2 + 120);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = v26;
        uint64_t v27 = *(void *)(a2 + 136);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = v27;
        uint64_t v28 = *(void *)(a2 + 152);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = v28;
        uint64_t v29 = *(void *)(a2 + 168);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = v29;
        uint64_t v30 = *(void *)(a2 + 184);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    uint64_t v31 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v31;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s8CardItemVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (long long *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) != 1)
  {
    if (v6 == 1)
    {
      sub_1C2866E40(a1 + 16);
      long long v16 = *(_OWORD *)(a2 + 64);
      long long v18 = *v5;
      long long v17 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v16;
      *uint64_t v4 = v18;
      *(_OWORD *)(a1 + 32) = v17;
      long long v19 = *(_OWORD *)(a2 + 128);
      long long v21 = *(_OWORD *)(a2 + 80);
      long long v20 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v19;
      *(_OWORD *)(a1 + 80) = v21;
      *(_OWORD *)(a1 + 96) = v20;
      long long v22 = *(_OWORD *)(a2 + 192);
      long long v24 = *(_OWORD *)(a2 + 144);
      long long v23 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v22;
      *(_OWORD *)(a1 + 144) = v24;
      *(_OWORD *)(a1 + 160) = v23;
      return a1;
    }
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v33 = (_OWORD *)(a1 + 32);
    long long v34 = (_OWORD *)(a2 + 32);
    uint64_t v35 = *(void *)(a1 + 40);
    uint64_t v36 = *(void *)(a2 + 40);
    if (v35 == 2)
    {
      if (v36 == 1 || v36 == 2) {
        goto LABEL_13;
      }
LABEL_20:
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v53 = (_OWORD *)(a1 + 64);
      uint64_t v54 = (long long *)(a2 + 64);
      uint64_t v55 = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 == 1)
      {
        long long v56 = *v54;
        long long v57 = *(_OWORD *)(a2 + 80);
        long long v58 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v58;
        *uint64_t v53 = v56;
        *(_OWORD *)(a1 + 80) = v57;
        long long v59 = *(_OWORD *)(a2 + 128);
        long long v60 = *(_OWORD *)(a2 + 144);
        long long v61 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v61;
        *(_OWORD *)(a1 + 128) = v59;
        *(_OWORD *)(a1 + 144) = v60;
        goto LABEL_28;
      }
      uint64_t v71 = *(void *)v54;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)uint64_t v53 = v71;
LABEL_27:
      uint64_t v72 = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 80) = v72;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    if (v36 == 2)
    {
      sub_1C2866E10(a1 + 32);
    }
    else
    {
      if (v35 == 1)
      {
        if (v36 == 1)
        {
LABEL_13:
          long long v37 = *(_OWORD *)(a2 + 48);
          _OWORD *v33 = *v34;
          *(_OWORD *)(a1 + 48) = v37;
          long long v38 = *(_OWORD *)(a2 + 64);
          long long v39 = *(_OWORD *)(a2 + 80);
          long long v40 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v40;
          *(_OWORD *)(a1 + 64) = v38;
          *(_OWORD *)(a1 + 80) = v39;
          long long v41 = *(_OWORD *)(a2 + 128);
          long long v42 = *(_OWORD *)(a2 + 144);
          long long v43 = *(_OWORD *)(a2 + 176);
          *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
          *(_OWORD *)(a1 + 176) = v43;
          *(_OWORD *)(a1 + 128) = v41;
          *(_OWORD *)(a1 + 144) = v42;
LABEL_28:
          *(void *)(a1 + 192) = *(void *)(a2 + 192);
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return a1;
        }
        goto LABEL_20;
      }
      if (v36 != 1)
      {
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        long long v74 = (_OWORD *)(a1 + 64);
        long long v75 = (long long *)(a2 + 64);
        uint64_t v76 = *(void *)(a2 + 104);
        if (*(void *)(a1 + 104) != 1)
        {
          if (v76 == 1)
          {
            sub_1C2866DB0(a1 + 64);
            long long v83 = *(_OWORD *)(a2 + 112);
            long long v85 = *v75;
            long long v84 = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v83;
            *long long v74 = v85;
            *(_OWORD *)(a1 + 80) = v84;
            long long v86 = *(_OWORD *)(a2 + 176);
            long long v88 = *(_OWORD *)(a2 + 128);
            long long v87 = *(_OWORD *)(a2 + 144);
            *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
            *(_OWORD *)(a1 + 176) = v86;
            *(_OWORD *)(a1 + 128) = v88;
            *(_OWORD *)(a1 + 144) = v87;
          }
          else
          {
            uint64_t v90 = *(void *)v75;
            *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
            *(void *)long long v74 = v90;
            uint64_t v91 = *(void *)(a2 + 80);
            *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
            *(void *)(a1 + 80) = v91;
            *(void *)(a1 + 96) = *(void *)(a2 + 96);
            *(void *)(a1 + 104) = *(void *)(a2 + 104);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(a1 + 112) = *(void *)(a2 + 112);
            *(void *)(a1 + 120) = *(void *)(a2 + 120);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(a1 + 144) = *(void *)(a2 + 144);
            *(void *)(a1 + 152) = *(void *)(a2 + 152);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(a1 + 160) = *(void *)(a2 + 160);
            *(void *)(a1 + 168) = *(void *)(a2 + 168);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(a1 + 176) = *(void *)(a2 + 176);
            *(void *)(a1 + 184) = *(void *)(a2 + 184);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          goto LABEL_28;
        }
        if (v76 == 1)
        {
          long long v77 = *v75;
          long long v78 = *(_OWORD *)(a2 + 80);
          long long v79 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v79;
          *long long v74 = v77;
          *(_OWORD *)(a1 + 80) = v78;
          long long v80 = *(_OWORD *)(a2 + 128);
          long long v81 = *(_OWORD *)(a2 + 144);
          long long v82 = *(_OWORD *)(a2 + 176);
          *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
          *(_OWORD *)(a1 + 176) = v82;
          *(_OWORD *)(a1 + 128) = v80;
          *(_OWORD *)(a1 + 144) = v81;
          goto LABEL_28;
        }
        uint64_t v89 = *(void *)v75;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)long long v74 = v89;
        goto LABEL_27;
      }
      sub_1C2866DE0(a1 + 32);
    }
    long long v64 = *(_OWORD *)(a2 + 48);
    _OWORD *v33 = *v34;
    *(_OWORD *)(a1 + 48) = v64;
    long long v65 = *(_OWORD *)(a2 + 112);
    long long v67 = *(_OWORD *)(a2 + 64);
    long long v66 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v65;
    *(_OWORD *)(a1 + 64) = v67;
    *(_OWORD *)(a1 + 80) = v66;
    long long v68 = *(_OWORD *)(a2 + 176);
    long long v70 = *(_OWORD *)(a2 + 128);
    long long v69 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v68;
    *(_OWORD *)(a1 + 128) = v70;
    *(_OWORD *)(a1 + 144) = v69;
    goto LABEL_28;
  }
  if (v6 == 1)
  {
    long long v7 = *v5;
    long long v8 = *(_OWORD *)(a2 + 32);
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    *uint64_t v4 = v7;
    *(_OWORD *)(a1 + 32) = v8;
    long long v10 = *(_OWORD *)(a2 + 80);
    long long v11 = *(_OWORD *)(a2 + 96);
    long long v12 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v12;
    *(_OWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 96) = v11;
    long long v13 = *(_OWORD *)(a2 + 144);
    long long v14 = *(_OWORD *)(a2 + 160);
    long long v15 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v15;
    *(_OWORD *)(a1 + 144) = v13;
    *(_OWORD *)(a1 + 160) = v14;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v25 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v25 == 1 || v25 == 2)
    {
      long long v26 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v26;
      long long v27 = *(_OWORD *)(a2 + 64);
      long long v28 = *(_OWORD *)(a2 + 80);
      long long v29 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v29;
      *(_OWORD *)(a1 + 64) = v27;
      *(_OWORD *)(a1 + 80) = v28;
      long long v30 = *(_OWORD *)(a2 + 128);
      long long v31 = *(_OWORD *)(a2 + 144);
      long long v32 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v32;
      *(_OWORD *)(a1 + 128) = v30;
      *(_OWORD *)(a1 + 144) = v31;
    }
    else
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      char v44 = (_OWORD *)(a1 + 64);
      uint64_t v45 = (long long *)(a2 + 64);
      uint64_t v46 = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46 == 1)
      {
        long long v47 = *v45;
        long long v48 = *(_OWORD *)(a2 + 80);
        long long v49 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v49;
        *char v44 = v47;
        *(_OWORD *)(a1 + 80) = v48;
        long long v50 = *(_OWORD *)(a2 + 128);
        long long v51 = *(_OWORD *)(a2 + 144);
        long long v52 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v52;
        *(_OWORD *)(a1 + 128) = v50;
        *(_OWORD *)(a1 + 144) = v51;
      }
      else
      {
        uint64_t v62 = *(void *)v45;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)char v44 = v62;
        uint64_t v63 = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        *(void *)(a1 + 80) = v63;
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C2866DB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2866DE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2866E10(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2866E40(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t _s8CardItemVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24) == 1) {
    goto LABEL_4;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  if (v5 != 1)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(a1 + 40);
    if (v12 != 2)
    {
      uint64_t v13 = *(void *)(a2 + 40);
      if (v13 == 2)
      {
        sub_1C2866E10(a1 + 32);
      }
      else if (v12 != 1)
      {
        if (v13 != 1)
        {
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v13;
          swift_bridgeObjectRelease();
          uint64_t v21 = *(void *)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v21;
          swift_bridgeObjectRelease();
          long long v22 = (void *)(a1 + 64);
          long long v23 = (void *)(a2 + 64);
          if (*(void *)(a1 + 104) != 1)
          {
            uint64_t v24 = *(void *)(a2 + 104);
            if (v24 != 1)
            {
              void *v22 = *v23;
              *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
              *(void *)(a1 + 80) = *(void *)(a2 + 80);
              *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
              *(void *)(a1 + 96) = *(void *)(a2 + 96);
              *(void *)(a1 + 104) = v24;
              swift_bridgeObjectRelease();
              uint64_t v29 = *(void *)(a2 + 120);
              *(void *)(a1 + 112) = *(void *)(a2 + 112);
              *(void *)(a1 + 120) = v29;
              swift_bridgeObjectRelease();
              uint64_t v30 = *(void *)(a2 + 136);
              *(void *)(a1 + 128) = *(void *)(a2 + 128);
              *(void *)(a1 + 136) = v30;
              swift_bridgeObjectRelease();
              uint64_t v31 = *(void *)(a2 + 152);
              *(void *)(a1 + 144) = *(void *)(a2 + 144);
              *(void *)(a1 + 152) = v31;
              swift_bridgeObjectRelease();
              uint64_t v32 = *(void *)(a2 + 168);
              *(void *)(a1 + 160) = *(void *)(a2 + 160);
              *(void *)(a1 + 168) = v32;
              swift_bridgeObjectRelease();
              uint64_t v33 = *(void *)(a2 + 184);
              *(void *)(a1 + 176) = *(void *)(a2 + 176);
              *(void *)(a1 + 184) = v33;
              swift_bridgeObjectRelease();
              goto LABEL_12;
            }
            sub_1C2866DB0(a1 + 64);
          }
          long long v25 = *(_OWORD *)(a2 + 144);
          *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
          *(_OWORD *)(a1 + 144) = v25;
          long long v26 = *(_OWORD *)(a2 + 176);
          *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
          *(_OWORD *)(a1 + 176) = v26;
          long long v27 = *(_OWORD *)(a2 + 80);
          *(_OWORD *)long long v22 = *(_OWORD *)v23;
          *(_OWORD *)(a1 + 80) = v27;
          long long v28 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v28;
LABEL_12:
          uint64_t v19 = *(void *)(a2 + 200);
          *(void *)(a1 + 192) = *(void *)(a2 + 192);
          *(void *)(a1 + 200) = v19;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1C2866DE0(a1 + 32);
      }
    }
    long long v14 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v14;
    long long v15 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v15;
    long long v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v16;
    long long v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v17;
    long long v18 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v18;
    goto LABEL_12;
  }
  sub_1C2866E40(a1 + 16);
LABEL_4:
  long long v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  long long v7 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  long long v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  return a1;
}

uint64_t _s8CardItemVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 208)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s8CardItemVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 208) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.CardItem()
{
  return &type metadata for AppStoreDataProvider.CardItem;
}

uint64_t _s10AttributesVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(void *)(a1 + 24) - 1) >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s10AttributesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 == 1 || v6 == 2)
  {
    long long v7 = v5[7];
    *(_OWORD *)(a1 + 112) = v5[6];
    *(_OWORD *)(a1 + 128) = v7;
    long long v8 = v5[9];
    *(_OWORD *)(a1 + 144) = v5[8];
    *(_OWORD *)(a1 + 160) = v8;
    long long v9 = v5[3];
    *(_OWORD *)(a1 + 48) = v5[2];
    *(_OWORD *)(a1 + 64) = v9;
    long long v10 = v5[5];
    *(_OWORD *)(a1 + 80) = v5[4];
    *(_OWORD *)(a1 + 96) = v10;
    long long v11 = v5[1];
    *(_OWORD *)(a1 + 16) = *v5;
    *(_OWORD *)(a1 + 32) = v11;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v12 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v12;
    uint64_t v13 = (_OWORD *)(a1 + 48);
    long long v14 = (_OWORD *)(a2 + 48);
    uint64_t v15 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      long long v16 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v16;
      long long v17 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v17;
      long long v18 = *(_OWORD *)(a2 + 64);
      *uint64_t v13 = *v14;
      *(_OWORD *)(a1 + 64) = v18;
      long long v19 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v19;
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v15;
      uint64_t v20 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v20;
      uint64_t v21 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v21;
      uint64_t v22 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v22;
      uint64_t v23 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v23;
      uint64_t v24 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v25 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10AttributesVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 24);
  if (v6 == 2)
  {
    if (v7 == 1 || v7 == 2) {
      goto LABEL_4;
    }
LABEL_9:
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    uint64_t v15 = (_OWORD *)(a1 + 48);
    long long v16 = (long long *)(a2 + 48);
    uint64_t v17 = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      long long v18 = *v16;
      long long v19 = *(_OWORD *)(a2 + 64);
      long long v20 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v20;
      *uint64_t v15 = v18;
      *(_OWORD *)(a1 + 64) = v19;
      long long v21 = *(_OWORD *)(a2 + 112);
      long long v22 = *(_OWORD *)(a2 + 128);
      long long v23 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v23;
      *(_OWORD *)(a1 + 112) = v21;
      *(_OWORD *)(a1 + 128) = v22;
      goto LABEL_16;
    }
    uint64_t v31 = *(void *)v16;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)uint64_t v15 = v31;
LABEL_15:
    uint64_t v32 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 64) = v32;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  if (v7 == 2)
  {
    sub_1C2866E10(a1 + 16);
LABEL_13:
    long long v24 = *(_OWORD *)(a2 + 32);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 32) = v24;
    long long v25 = *(_OWORD *)(a2 + 96);
    long long v27 = *(_OWORD *)(a2 + 48);
    long long v26 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v25;
    *(_OWORD *)(a1 + 48) = v27;
    *(_OWORD *)(a1 + 64) = v26;
    long long v28 = *(_OWORD *)(a2 + 160);
    long long v30 = *(_OWORD *)(a2 + 112);
    long long v29 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v28;
    *(_OWORD *)(a1 + 112) = v30;
    *(_OWORD *)(a1 + 128) = v29;
    goto LABEL_16;
  }
  if (v6 == 1)
  {
    if (v7 == 1)
    {
LABEL_4:
      long long v8 = *(_OWORD *)(a2 + 32);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 32) = v8;
      long long v9 = *(_OWORD *)(a2 + 48);
      long long v10 = *(_OWORD *)(a2 + 64);
      long long v11 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v11;
      *(_OWORD *)(a1 + 48) = v9;
      *(_OWORD *)(a1 + 64) = v10;
      long long v12 = *(_OWORD *)(a2 + 112);
      long long v13 = *(_OWORD *)(a2 + 128);
      long long v14 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v14;
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 128) = v13;
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  if (v7 == 1)
  {
    sub_1C2866DE0(a1 + 16);
    goto LABEL_13;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v34 = (_OWORD *)(a1 + 48);
  uint64_t v35 = (long long *)(a2 + 48);
  uint64_t v36 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88) == 1)
  {
    if (v36 == 1)
    {
      long long v37 = *v35;
      long long v38 = *(_OWORD *)(a2 + 64);
      long long v39 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v39;
      _OWORD *v34 = v37;
      *(_OWORD *)(a1 + 64) = v38;
      long long v40 = *(_OWORD *)(a2 + 112);
      long long v41 = *(_OWORD *)(a2 + 128);
      long long v42 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v42;
      *(_OWORD *)(a1 + 112) = v40;
      *(_OWORD *)(a1 + 128) = v41;
      goto LABEL_16;
    }
    uint64_t v49 = *(void *)v35;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)long long v34 = v49;
    goto LABEL_15;
  }
  if (v36 == 1)
  {
    sub_1C2866DB0(a1 + 48);
    long long v43 = *(_OWORD *)(a2 + 96);
    long long v45 = *v35;
    long long v44 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v43;
    _OWORD *v34 = v45;
    *(_OWORD *)(a1 + 64) = v44;
    long long v46 = *(_OWORD *)(a2 + 160);
    long long v48 = *(_OWORD *)(a2 + 112);
    long long v47 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v46;
    *(_OWORD *)(a1 + 112) = v48;
    *(_OWORD *)(a1 + 128) = v47;
  }
  else
  {
    uint64_t v50 = *(void *)v35;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)long long v34 = v50;
    uint64_t v51 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 64) = v51;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t _s10AttributesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 24);
  if (v5 == 2) {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6 == 2)
  {
    sub_1C2866E10(a1 + 16);
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v7;
    long long v8 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v8;
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    long long v10 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v10;
    long long v11 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v11;
    goto LABEL_8;
  }
  if (v5 == 1) {
    goto LABEL_7;
  }
  if (v6 == 1)
  {
    sub_1C2866DE0(a1 + 16);
    goto LABEL_7;
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)(a1 + 48);
  long long v16 = (void *)(a2 + 48);
  if (*(void *)(a1 + 88) != 1)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    if (v17 != 1)
    {
      *uint64_t v15 = *v16;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v17;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v24;
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v25;
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C2866DB0(a1 + 48);
  }
  long long v18 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v18;
  long long v19 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v19;
  long long v20 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 64) = v20;
  long long v21 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v21;
LABEL_8:
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10AttributesVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 192)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s10AttributesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.Attributes()
{
  return &type metadata for AppStoreDataProvider.Attributes;
}

uint64_t _s8PlatformVwxx(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + 72);
    if (result != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t _s8PlatformVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v5;
    long long v6 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    long long v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v10 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v10;
    long long v11 = (_OWORD *)(a1 + 32);
    uint64_t v12 = (_OWORD *)(a2 + 32);
    uint64_t v13 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 == 1)
    {
      long long v14 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v14;
      long long v15 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v15;
      long long v16 = *(_OWORD *)(a2 + 48);
      *long long v11 = *v12;
      *(_OWORD *)(a1 + 48) = v16;
      long long v17 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v17;
    }
    else
    {
      *(void *)long long v11 = *(void *)v12;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v13;
      uint64_t v18 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v18;
      uint64_t v19 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v19;
      uint64_t v20 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v20;
      uint64_t v21 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v21;
      uint64_t v22 = *(void *)(a2 + 144);
      uint64_t v23 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = v22;
      *(void *)(a1 + 152) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s8PlatformVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      long long v6 = *(_OWORD *)(a2 + 32);
      long long v7 = *(_OWORD *)(a2 + 48);
      long long v8 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v8;
      *(_OWORD *)(a1 + 32) = v6;
      *(_OWORD *)(a1 + 48) = v7;
      long long v9 = *(_OWORD *)(a2 + 96);
      long long v10 = *(_OWORD *)(a2 + 112);
      long long v11 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v11;
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 112) = v10;
      return a1;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v19 = (_OWORD *)(a1 + 32);
    uint64_t v20 = (long long *)(a2 + 32);
    uint64_t v21 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21 == 1)
    {
      long long v22 = *v20;
      long long v23 = *(_OWORD *)(a2 + 48);
      long long v24 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v24;
      *uint64_t v19 = v22;
      *(_OWORD *)(a1 + 48) = v23;
      long long v25 = *(_OWORD *)(a2 + 96);
      long long v26 = *(_OWORD *)(a2 + 112);
      long long v27 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v27;
      *(_OWORD *)(a1 + 96) = v25;
      *(_OWORD *)(a1 + 112) = v26;
      return a1;
    }
    uint64_t v37 = *(void *)v20;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)uint64_t v19 = v37;
LABEL_15:
    uint64_t v45 = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 48) = v45;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v4 == 1)
  {
    sub_1C2866DE0(a1);
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 80);
    long long v15 = *(_OWORD *)(a2 + 32);
    long long v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 32) = v15;
    *(_OWORD *)(a1 + 48) = v14;
    long long v16 = *(_OWORD *)(a2 + 144);
    long long v18 = *(_OWORD *)(a2 + 96);
    long long v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 96) = v18;
    *(_OWORD *)(a1 + 112) = v17;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v28 = (_OWORD *)(a1 + 32);
  long long v29 = (long long *)(a2 + 32);
  uint64_t v30 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v30 == 1)
    {
      long long v31 = *v29;
      long long v32 = *(_OWORD *)(a2 + 48);
      long long v33 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v33;
      *long long v28 = v31;
      *(_OWORD *)(a1 + 48) = v32;
      long long v34 = *(_OWORD *)(a2 + 96);
      long long v35 = *(_OWORD *)(a2 + 112);
      long long v36 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v36;
      *(_OWORD *)(a1 + 96) = v34;
      *(_OWORD *)(a1 + 112) = v35;
      return a1;
    }
    uint64_t v44 = *(void *)v29;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)long long v28 = v44;
    goto LABEL_15;
  }
  if (v30 == 1)
  {
    sub_1C2866DB0(a1 + 32);
    long long v38 = *(_OWORD *)(a2 + 80);
    long long v40 = *v29;
    long long v39 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v38;
    *long long v28 = v40;
    *(_OWORD *)(a1 + 48) = v39;
    long long v41 = *(_OWORD *)(a2 + 144);
    long long v43 = *(_OWORD *)(a2 + 96);
    long long v42 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v41;
    *(_OWORD *)(a1 + 96) = v43;
    *(_OWORD *)(a1 + 112) = v42;
  }
  else
  {
    uint64_t v46 = *(void *)v29;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)long long v28 = v46;
    uint64_t v47 = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 48) = v47;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t _s8PlatformVwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4 == 1)
  {
    sub_1C2866DE0(a1);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v5;
    long long v6 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    long long v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v10;
  swift_bridgeObjectRelease();
  long long v11 = (void *)(a1 + 32);
  long long v12 = (void *)(a2 + 32);
  if (*(void *)(a1 + 72) != 1)
  {
    uint64_t v13 = *(void *)(a2 + 72);
    if (v13 != 1)
    {
      *long long v11 = *v12;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v13;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v22;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C2866DB0(a1 + 32);
  }
  long long v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  long long v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)long long v11 = *(_OWORD *)v12;
  *(_OWORD *)(a1 + 48) = v16;
  long long v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  return a1;
}

uint64_t _s8PlatformVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 160)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t _s8PlatformVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 160) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.Platform()
{
  return &type metadata for AppStoreDataProvider.Platform;
}

uint64_t _s13iOSAttributesVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 72);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13iOSAttributesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  int v6 = (_OWORD *)(a1 + 32);
  uint64_t v7 = a2 + 32;
  uint64_t v8 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    long long v9 = *(_OWORD *)(v7 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(v7 + 64);
    *(_OWORD *)(a1 + 112) = v9;
    long long v10 = *(_OWORD *)(v7 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(v7 + 96);
    *(_OWORD *)(a1 + 144) = v10;
    long long v11 = *(_OWORD *)(v7 + 16);
    *int v6 = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 48) = v11;
    long long v12 = *(_OWORD *)(v7 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v7 + 32);
    *(_OWORD *)(a1 + 80) = v12;
  }
  else
  {
    *(void *)int v6 = *(void *)v7;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(v7 + 8);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    uint64_t v13 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v13;
    uint64_t v14 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v14;
    uint64_t v15 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v15;
    uint64_t v16 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v16;
    uint64_t v17 = *(void *)(a2 + 144);
    uint64_t v18 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v17;
    *(void *)(a1 + 152) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s13iOSAttributesVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (long long *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *v5;
      long long v8 = *(_OWORD *)(a2 + 48);
      long long v9 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v9;
      *uint64_t v4 = v7;
      *(_OWORD *)(a1 + 48) = v8;
      long long v10 = *(_OWORD *)(a2 + 96);
      long long v11 = *(_OWORD *)(a2 + 112);
      long long v12 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 96) = v10;
      *(_OWORD *)(a1 + 112) = v11;
    }
    else
    {
      uint64_t v19 = *(void *)v5;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)uint64_t v4 = v19;
      uint64_t v20 = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 48) = v20;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1C2866DB0(a1 + 32);
    long long v13 = *(_OWORD *)(a2 + 80);
    long long v15 = *v5;
    long long v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *uint64_t v4 = v15;
    *(_OWORD *)(a1 + 48) = v14;
    long long v16 = *(_OWORD *)(a2 + 144);
    long long v18 = *(_OWORD *)(a2 + 96);
    long long v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 96) = v18;
    *(_OWORD *)(a1 + 112) = v17;
  }
  else
  {
    uint64_t v21 = *(void *)v5;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)uint64_t v4 = v21;
    uint64_t v22 = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)(a1 + 48) = v22;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t _s13iOSAttributesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(a1 + 32);
  long long v7 = (void *)(a2 + 32);
  if (*(void *)(a1 + 72) != 1)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    if (v8 != 1)
    {
      *uint64_t v6 = *v7;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C2866DB0(a1 + 32);
  }
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
  *(_OWORD *)(a1 + 48) = v11;
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
  return a1;
}

uint64_t _s13iOSAttributesVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 160)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13iOSAttributesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 160) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.iOSAttributes()
{
  return &type metadata for AppStoreDataProvider.iOSAttributes;
}

uint64_t _s7ArtworkVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s7ArtworkVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7ArtworkVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = a2[14];
  *(void *)(a1 + 120) = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t _s7ArtworkVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7ArtworkVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s7ArtworkVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.Artwork()
{
  return &type metadata for AppStoreDataProvider.Artwork;
}

uint64_t _s7ArtworkV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s7ArtworkV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2868D58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7ArtworkV10CodingKeysOMa()
{
  return &_s7ArtworkV10CodingKeysON;
}

ValueMetadata *_s13iOSAttributesV10CodingKeysOMa()
{
  return &_s13iOSAttributesV10CodingKeysON;
}

ValueMetadata *_s8PlatformV10CodingKeysOMa()
{
  return &_s8PlatformV10CodingKeysON;
}

unsigned char *_s13iOSAttributesV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2868E84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10AttributesV10CodingKeysOMa()
{
  return &_s10AttributesV10CodingKeysON;
}

ValueMetadata *_s8CardItemV10CodingKeysOMa()
{
  return &_s8CardItemV10CodingKeysON;
}

ValueMetadata *_s11CardContentV10CodingKeysOMa()
{
  return &_s11CardContentV10CodingKeysON;
}

ValueMetadata *_s12RelationshipV10CodingKeysOMa()
{
  return &_s12RelationshipV10CodingKeysON;
}

unsigned char *_s8CardItemV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2868FBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13EditorialItemV10CodingKeysOMa()
{
  return &_s13EditorialItemV10CodingKeysON;
}

unsigned char *_s8PlatformV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2869090);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s18EditorialItemsListV10CodingKeysOMa()
{
  return &_s18EditorialItemsListV10CodingKeysON;
}

unint64_t sub_1C28690CC()
{
  unint64_t result = qword_1EA310DB8;
  if (!qword_1EA310DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DB8);
  }
  return result;
}

unint64_t sub_1C2869124()
{
  unint64_t result = qword_1EA310DC0;
  if (!qword_1EA310DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DC0);
  }
  return result;
}

unint64_t sub_1C286917C()
{
  unint64_t result = qword_1EA310DC8;
  if (!qword_1EA310DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DC8);
  }
  return result;
}

unint64_t sub_1C28691D4()
{
  unint64_t result = qword_1EA310DD0;
  if (!qword_1EA310DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DD0);
  }
  return result;
}

unint64_t sub_1C286922C()
{
  unint64_t result = qword_1EA310DD8;
  if (!qword_1EA310DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DD8);
  }
  return result;
}

unint64_t sub_1C2869284()
{
  unint64_t result = qword_1EA310DE0;
  if (!qword_1EA310DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DE0);
  }
  return result;
}

unint64_t sub_1C28692DC()
{
  unint64_t result = qword_1EA310DE8;
  if (!qword_1EA310DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DE8);
  }
  return result;
}

unint64_t sub_1C2869334()
{
  unint64_t result = qword_1EA310DF0;
  if (!qword_1EA310DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310DF0);
  }
  return result;
}

unint64_t sub_1C286938C()
{
  unint64_t result = qword_1EA310DF8[0];
  if (!qword_1EA310DF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA310DF8);
  }
  return result;
}

unint64_t sub_1C28693E4()
{
  unint64_t result = qword_1EBB768C8;
  if (!qword_1EBB768C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB768C8);
  }
  return result;
}

unint64_t sub_1C286943C()
{
  unint64_t result = qword_1EBB768C0;
  if (!qword_1EBB768C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB768C0);
  }
  return result;
}

unint64_t sub_1C2869494()
{
  unint64_t result = qword_1EBB73D78;
  if (!qword_1EBB73D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D78);
  }
  return result;
}

unint64_t sub_1C28694EC()
{
  unint64_t result = qword_1EBB73D70;
  if (!qword_1EBB73D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D70);
  }
  return result;
}

unint64_t sub_1C2869544()
{
  unint64_t result = qword_1EBB73DE8;
  if (!qword_1EBB73DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DE8);
  }
  return result;
}

unint64_t sub_1C286959C()
{
  unint64_t result = qword_1EBB73DE0;
  if (!qword_1EBB73DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DE0);
  }
  return result;
}

unint64_t sub_1C28695F4()
{
  unint64_t result = qword_1EBB73CF8;
  if (!qword_1EBB73CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73CF8);
  }
  return result;
}

unint64_t sub_1C286964C()
{
  unint64_t result = qword_1EBB73CF0;
  if (!qword_1EBB73CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73CF0);
  }
  return result;
}

unint64_t sub_1C28696A4()
{
  unint64_t result = qword_1EBB73DC8;
  if (!qword_1EBB73DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DC8);
  }
  return result;
}

unint64_t sub_1C28696FC()
{
  unint64_t result = qword_1EBB73DC0;
  if (!qword_1EBB73DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DC0);
  }
  return result;
}

unint64_t sub_1C2869754()
{
  unint64_t result = qword_1EBB73D18;
  if (!qword_1EBB73D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D18);
  }
  return result;
}

unint64_t sub_1C28697AC()
{
  unint64_t result = qword_1EBB73D10;
  if (!qword_1EBB73D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D10);
  }
  return result;
}

unint64_t sub_1C2869804()
{
  unint64_t result = qword_1EBB73D38;
  if (!qword_1EBB73D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D38);
  }
  return result;
}

unint64_t sub_1C286985C()
{
  unint64_t result = qword_1EBB73D30;
  if (!qword_1EBB73D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D30);
  }
  return result;
}

unint64_t sub_1C28698B4()
{
  unint64_t result = qword_1EBB73D58;
  if (!qword_1EBB73D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D58);
  }
  return result;
}

unint64_t sub_1C286990C()
{
  unint64_t result = qword_1EBB73D50;
  if (!qword_1EBB73D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D50);
  }
  return result;
}

unint64_t sub_1C2869964()
{
  unint64_t result = qword_1EBB73D98;
  if (!qword_1EBB73D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D98);
  }
  return result;
}

unint64_t sub_1C28699BC()
{
  unint64_t result = qword_1EBB73D90;
  if (!qword_1EBB73D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73D90);
  }
  return result;
}

uint64_t sub_1C2869A10()
{
  unint64_t v0 = sub_1C28CE460();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C2869A5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C2869BB4()
{
  unint64_t v0 = sub_1C28CE460();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C2869C00(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t *sub_1C2869C24(uint64_t *a1)
{
  uint64_t v2 = a1[17];
  uint64_t v8 = a1[16];
  uint64_t v3 = a1[18];
  uint64_t v4 = a1[19];
  uint64_t v5 = a1[20];
  uint64_t v6 = a1[21];
  sub_1C286554C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_1C286554C(v8, v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_1C2869D08(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 - 1) & ~(((int)v1 - 1) >> 31);
}

uint64_t sub_1C2869D24(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 176);
  uint64_t v18 = *(void *)(a1 + 168);
  uint64_t v19 = *(void *)(a1 + 160);
  uint64_t v5 = *(void *)(a1 + 184);
  uint64_t v6 = *(void *)(a1 + 192);
  uint64_t v7 = *(void *)(a1 + 200);
  uint64_t v8 = *(void *)(a1 + 208);
  uint64_t v9 = *(void *)(a1 + 216);
  long long v17 = *(_OWORD *)(a1 + 224);
  long long v15 = *(_OWORD *)(a1 + 256);
  long long v16 = *(_OWORD *)(a1 + 240);
  long long v13 = *(_OWORD *)(a1 + 288);
  long long v14 = *(_OWORD *)(a1 + 272);
  uint64_t v10 = *(void *)(a1 + 304);
  uint64_t v11 = *(void *)(a1 + 312);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152));
  a2(v19, v18, v4, v5, v6, v7, v8, v9, v17, *((void *)&v17 + 1), v16, *((void *)&v16 + 1), v15, *((void *)&v15 + 1), v14, *((void *)&v14 + 1), v13, *((void *)&v13 + 1), v10,
    v11);
  return a1;
}

void *sub_1C2869E34(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19]);
  return a1;
}

uint64_t sub_1C2869EA0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C2869EC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 200);
  uint64_t v12 = *(void *)(a1 + 192);
  uint64_t v3 = *(void *)(a1 + 208);
  uint64_t v4 = *(void *)(a1 + 216);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v6 = *(void *)(a1 + 232);
  uint64_t v7 = *(void *)(a1 + 240);
  uint64_t v8 = *(void *)(a1 + 248);
  long long v11 = *(_OWORD *)(a1 + 256);
  long long v10 = *(_OWORD *)(a1 + 272);
  sub_1C28652B8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88));
  sub_1C28652B8(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

void *sub_1C2869FFC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

id sub_1C286A090()
{
  unint64_t v0 = (void *)sub_1C286A684();

  return v0;
}

uint64_t SampleQuery.__allocating_init(resultsHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SampleQuery.init(resultsHandler:)(a1, a2);
  return v4;
}

void *SampleQuery.init(resultsHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  v2[2] = 0;
  uint64_t v7 = *(void *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 88);
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  long long v11 = (void *)swift_allocObject();
  v11[2] = v7;
  v11[3] = v8;
  v11[4] = v10;
  void v11[5] = a1;
  v11[6] = a2;
  id v12 = objc_allocWithZone(MEMORY[0x1E4F2B440]);
  v17[4] = sub_1C286A70C;
  v17[5] = v11;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1C286A5DC;
  v17[3] = &block_descriptor_9;
  long long v13 = _Block_copy(v17);
  swift_retain();
  swift_retain();
  id v14 = objc_msgSend(v12, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v9, 0, 0, 0, v13);

  _Block_release(v13);
  swift_release();
  swift_release();
  swift_release();
  long long v15 = (void *)v3[2];
  v3[2] = v14;

  return v3;
}

uint64_t sub_1C286A2D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    if (a2)
    {
      sub_1C286A7F4();
      swift_getAssociatedTypeWitness();
      uint64_t v10 = sub_1C28CE450();
      if (v10)
      {
        a5(v9, v10, 0);
        swift_release();
        return swift_bridgeObjectRelease();
      }
      type metadata accessor for SampleQuery.QueryError();
      swift_getWitnessTable();
      uint64_t v14 = swift_allocError();
      unint64_t v15 = 0xD000000000000017;
      long long v16 = "Unexpected sample class";
    }
    else
    {
      if (a3)
      {
        id v11 = a3;
        a5(v9, (uint64_t)a3, 1);
        id v12 = a3;
LABEL_10:

        return swift_release();
      }
      type metadata accessor for SampleQuery.QueryError();
      swift_getWitnessTable();
      uint64_t v14 = swift_allocError();
      unint64_t v15 = 0xD000000000000025;
      long long v16 = "Encountered nil results and nil error";
    }
    *long long v13 = v15;
    v13[1] = (unint64_t)(v16 - 32) | 0x8000000000000000;
    a5(v9, v14, 1);
    id v12 = (void *)v14;
    goto LABEL_10;
  }
  return result;
}

uint64_t SampleQuery.deinit()
{
  return v0;
}

uint64_t SampleQuery.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1C286A520()
{
  uint64_t v0 = (void *)sub_1C286A684();

  return v0;
}

void HKHealthStore.execute(query:)(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  id v4 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  objc_msgSend(v1, sel_executeQuery_, v4);
}

uint64_t sub_1C286A5DC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C286A7F4();
    uint64_t v5 = sub_1C28CD920();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C286A684()
{
  uint64_t result = *(void *)(v0 + 16);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C286A694()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C286A6CC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C286A70C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C286A2D0(a1, a2, a3, *(void *)(v3 + 32), *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40));
}

uint64_t dispatch thunk of Queryable.query.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C286A730()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SampleQuery()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SampleQuery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SampleQuery);
}

uint64_t dispatch thunk of SampleQuery.query.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of SampleQuery.__allocating_init(resultsHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t type metadata accessor for SampleQuery.QueryError()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1C286A7F4()
{
  unint64_t result = qword_1EA310F00;
  if (!qword_1EA310F00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA310F00);
  }
  return result;
}

double static Double.healthNotificationInstructionExpirationTimeInterval.getter()
{
  return 691200.0;
}

uint64_t sub_1C286A844()
{
  uint64_t result = sub_1C28CD730();
  qword_1EA310F08 = result;
  unk_1EA310F10 = v1;
  return result;
}

uint64_t static HKNotificationSyncStore.healthSharingManagementNotificationSyncClientIdentifier.getter()
{
  if (qword_1EA30FCB8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA310F08;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t HKNotificationSyncStore.sendNotificationInstructionPublisher(notificationInstruction:)(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C286B528(0, &qword_1EA310F18, (void (*)(uint64_t))sub_1C286AA8C, (void (*)(void))sub_1C286AAF8);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v14 - v7;
  id v9 = (void *)swift_allocObject();
  v9[2] = v1;
  v9[3] = a1;
  v9[4] = ObjectType;
  sub_1C286AA8C();
  sub_1C286AAF8();
  id v10 = v1;
  id v11 = a1;
  sub_1C28CD260();
  sub_1C286AC04(&qword_1EA310F20, &qword_1EA310F18, (void (*)(uint64_t))sub_1C286AA8C, (void (*)(void))sub_1C286AAF8);
  uint64_t v12 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

void sub_1C286AA8C()
{
  if (!qword_1EBB76AF8)
  {
    sub_1C27C7060();
    unint64_t v0 = sub_1C28CD240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76AF8);
    }
  }
}

uint64_t sub_1C286AAF8()
{
  return sub_1C286B688((unint64_t *)&unk_1EBB76D40, (void (*)(uint64_t))sub_1C286AA8C);
}

uint64_t sub_1C286AB18@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1C286AA8C();
  swift_allocObject();
  id v9 = a1;
  id v10 = a2;
  uint64_t result = sub_1C28CD250();
  *a4 = result;
  return result;
}

uint64_t sub_1C286ABB8()
{
  return swift_deallocObject();
}

uint64_t sub_1C286ABF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C286AB18(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1C286AC04(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C286B528(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C286AC54(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  id v11 = (void *)swift_allocObject();
  v11[2] = a4;
  v11[3] = sub_1C286BEB4;
  v11[4] = v10;
  void v11[5] = a5;
  v14[4] = sub_1C286BF00;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1C289A718;
  v14[3] = &block_descriptor_24;
  uint64_t v12 = _Block_copy(v14);
  swift_retain();
  id v13 = a4;
  swift_release();
  objc_msgSend(a3, sel_sendNotificationInstruction_completion_, v13, v12);
  _Block_release(v12);
}

void sub_1C286AD84(int a1, void *a2, void *a3, void (*a4)(void, void))
{
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v57 - v13;
  if (a2)
  {
    id v15 = a2;
    sub_1C28CCDC0();
    id v16 = a3;
    id v17 = a2;
    id v18 = v16;
    id v19 = a2;
    uint64_t v20 = sub_1C28CCE00();
    os_log_type_t v21 = sub_1C28CDCB0();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      int v60 = v22;
      uint64_t v24 = v23;
      uint64_t v61 = swift_slowAlloc();
      long long v65 = (void *)v61;
      *(_DWORD *)uint64_t v24 = 136446722;
      uint64_t v62 = v8;
      uint64_t v25 = sub_1C28CE830();
      uint64_t v63 = a4;
      uint64_t v64 = sub_1C27D36AC(v25, v26, (uint64_t *)&v65);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      id v27 = v18;
      id v28 = objc_msgSend(v27, sel_description);
      uint64_t v29 = sub_1C28CD730();
      os_log_t v58 = v20;
      uint64_t v59 = v9;
      uint64_t v30 = v29;
      unint64_t v32 = v31;

      uint64_t v64 = sub_1C27D36AC(v30, v32, (uint64_t *)&v65);
      sub_1C28CDF90();

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2082;
      uint64_t v64 = (uint64_t)a2;
      id v33 = a2;
      sub_1C27C7060();
      uint64_t v34 = sub_1C28CD760();
      uint64_t v64 = sub_1C27D36AC(v34, v35, (uint64_t *)&v65);
      a4 = v63;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      os_log_t v36 = v58;
      _os_log_impl(&dword_1C27B7000, v58, (os_log_type_t)v60, "%{public}s Unable to send instruction %s. %{public}s", (uint8_t *)v24, 0x20u);
      uint64_t v37 = v61;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v37, -1, -1);
      MEMORY[0x1C87609B0](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v62);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    id v54 = a2;
    a4(a2, 1);
  }
  else
  {
    sub_1C28CCDC0();
    id v38 = a3;
    long long v39 = sub_1C28CCE00();
    os_log_type_t v40 = sub_1C28CDCD0();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      int v60 = v41;
      uint64_t v43 = v42;
      uint64_t v61 = swift_slowAlloc();
      long long v65 = (void *)v61;
      *(_DWORD *)uint64_t v43 = 136446722;
      uint64_t v62 = v8;
      uint64_t v44 = sub_1C28CE830();
      uint64_t v63 = a4;
      uint64_t v64 = sub_1C27D36AC(v44, v45, (uint64_t *)&v65);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v59 = v43 + 14;
      id v46 = v38;
      id v47 = objc_msgSend(v46, sel_description);
      uint64_t v48 = sub_1C28CD730();
      LODWORD(v58) = a1;
      uint64_t v49 = v9;
      uint64_t v50 = v48;
      unint64_t v52 = v51;

      a4 = v63;
      uint64_t v64 = sub_1C27D36AC(v50, v52, (uint64_t *)&v65);
      sub_1C28CDF90();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 1024;
      LODWORD(v64) = v58 & 1;
      sub_1C28CDF90();
      _os_log_impl(&dword_1C27B7000, v39, (os_log_type_t)v60, "%{public}s Sent instruction %s successfully: %{BOOL}d", (uint8_t *)v43, 0x1Cu);
      uint64_t v53 = v61;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v53, -1, -1);
      MEMORY[0x1C87609B0](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v62);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    sub_1C27C7060();
    sub_1C28CE7C0();
    uint64_t v55 = v65;
    char v56 = v66;
    a4(v65, v66);
    sub_1C286BF0C(v55, v56);
  }
}

uint64_t HKNotificationSyncStore.fetchNotificationHoldInstructions()()
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C286B528(0, &qword_1EA310F28, (void (*)(uint64_t))sub_1C286B598, (void (*)(void))sub_1C286B668);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v0;
  *(void *)(v7 + 24) = ObjectType;
  sub_1C286B598();
  sub_1C286B668();
  id v8 = v0;
  sub_1C28CD260();
  sub_1C286AC04((unint64_t *)&unk_1EA310F40, &qword_1EA310F28, (void (*)(uint64_t))sub_1C286B598, (void (*)(void))sub_1C286B668);
  uint64_t v9 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

void sub_1C286B528(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C28CD270();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C286B598()
{
  if (!qword_1EA310F30)
  {
    sub_1C286B608();
    sub_1C27C7060();
    unint64_t v0 = sub_1C28CD240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310F30);
    }
  }
}

void sub_1C286B608()
{
  if (!qword_1EBB76D78)
  {
    unint64_t v0 = sub_1C28CDB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76D78);
    }
  }
}

uint64_t sub_1C286B668()
{
  return sub_1C286B688(&qword_1EA310F38, (void (*)(uint64_t))sub_1C286B598);
}

uint64_t sub_1C286B688(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C286B6DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C286B598();
  swift_allocObject();
  id v7 = a1;
  uint64_t result = sub_1C28CD250();
  *a3 = result;
  return result;
}

uint64_t sub_1C286B768()
{
  return swift_deallocObject();
}

uint64_t sub_1C286B7A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C286B6DC(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1C286B7A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = sub_1C285BEA8;
  v9[3] = v8;
  v9[4] = a4;
  v11[4] = sub_1C286BDC4;
  void v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1C286BDD0;
  v11[3] = &block_descriptor_10;
  uint64_t v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_getNotificationHoldInstructionsWithCompletion_, v10);
  _Block_release(v10);
}

void sub_1C286B8C8(uint64_t a1, uint64_t a2)
{
  sub_1C286B7A8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1C286B8D0(uint64_t *a1, void *a2, void (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v37 - v13;
  if (a2)
  {
    id v15 = a2;
    sub_1C28CCDC0();
    id v16 = a2;
    id v17 = a2;
    id v18 = sub_1C28CCE00();
    os_log_type_t v19 = sub_1C28CDCB0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v40 = a4;
      uint64_t v22 = v21;
      uint64_t v42 = v21;
      *(_DWORD *)uint64_t v20 = 136446466;
      uint64_t v39 = v8;
      uint64_t v23 = sub_1C28CE830();
      uint64_t v41 = sub_1C27D36AC(v23, v24, &v42);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2082;
      uint64_t v41 = (uint64_t)a2;
      id v25 = a2;
      sub_1C27C7060();
      uint64_t v26 = sub_1C28CD760();
      uint64_t v41 = sub_1C27D36AC(v26, v27, &v42);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v18, v19, "%{public}s Unable to get notification hold instructions: %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v22, -1, -1);
      MEMORY[0x1C87609B0](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    id v35 = a2;
    a3(a2, 1);
  }
  else
  {
    sub_1C28CCDC0();
    swift_bridgeObjectRetain_n();
    id v28 = sub_1C28CCE00();
    os_log_type_t v29 = sub_1C28CDCD0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v39 = v8;
      uint64_t v40 = a4;
      id v38 = a3;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v42 = v31;
      *(_DWORD *)uint64_t v30 = 136446466;
      uint64_t v32 = sub_1C28CE830();
      uint64_t v41 = sub_1C27D36AC(v32, v33, &v42);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2048;
      if (a1)
      {
        uint64_t v34 = a1[2];
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v34 = 0;
      }
      a3 = v38;
      uint64_t v41 = v34;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v28, v29, "%{public}s Fetched %ld hold instructions", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v31, -1, -1);
      MEMORY[0x1C87609B0](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v39);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    if (a1) {
      os_log_t v36 = a1;
    }
    else {
      os_log_t v36 = (uint64_t *)MEMORY[0x1E4FBC870];
    }
    swift_bridgeObjectRetain();
    a3(v36, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C286BD8C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C286BDC4(uint64_t *a1, void *a2)
{
  sub_1C286B8D0(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C286BDD0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_1C28CDB00();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C286BE70(uint64_t a1, uint64_t a2)
{
  sub_1C286AC54(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1C286BE7C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C286BEB4(uint64_t a1, char a2)
{
  return sub_1C287A5F8(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1C286BEC0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C286BF00(int a1, void *a2)
{
  sub_1C286AD84(a1, a2, *(void **)(v2 + 16), *(void (**)(void, void))(v2 + 24));
}

void sub_1C286BF0C(id a1, char a2)
{
  if (a2) {
}
  }

id FirstRestoreNotInProgressPrecondition.__allocating_init(healthStore:shouldProceedOnErrorRequiringUserAction:waitUntilShouldProceed:completionQueue:)(void *a1, char a2, char a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = sub_1C286CE50(a1, a2, a3, a4);

  return v10;
}

id FirstRestoreNotInProgressPrecondition.init(healthStore:shouldProceedOnErrorRequiringUserAction:waitUntilShouldProceed:completionQueue:)(void *a1, char a2, char a3, void *a4)
{
  id v6 = sub_1C286CE50(a1, a2, a3, a4);

  return v6;
}

id FirstRestoreNotInProgressPrecondition.__deallocating_deinit()
{
  swift_retain();
  sub_1C28CC620();
  swift_release();
  sub_1C286C2A0();
  swift_retain();
  sub_1C28CC630();
  swift_release();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FirstRestoreNotInProgressPrecondition();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C286C170(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_retain();
  sub_1C28CC620();
  swift_release();
  id v6 = (void *)(v2 + OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion);
  *id v6 = a1;
  v6[1] = a2;
  swift_retain();
  sub_1C27C0290(v7);
  swift_retain();
  sub_1C28CC610();
  swift_release();
  uint64_t v8 = OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver;
  id v9 = *(void **)(v3 + OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver);
  if (!v9)
  {
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AD38]), sel_initWithHealthStore_delegate_, *(void *)(v3 + OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_healthStore), v3);
    uint64_t v11 = *(void **)(v3 + v8);
    *(void *)(v3 + v8) = v10;

    id v9 = *(void **)(v3 + v8);
  }
  id v12 = v9;
  swift_retain();
  sub_1C28CC630();
  swift_release();
  objc_msgSend(v12, sel_startObservingSyncStatus);
}

uint64_t sub_1C286C2A0()
{
  uint64_t v1 = sub_1C28CCE10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C28CC610();
  swift_release();
  sub_1C28CCDC0();
  uint64_t v5 = v0;
  id v6 = sub_1C28CCE00();
  os_log_type_t v7 = sub_1C28CDCD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v25 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v24 = v2;
    id v9 = (uint8_t *)v8;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v27 = v23;
    *(_DWORD *)id v9 = 136446210;
    uint64_t v22 = v9 + 4;
    id v10 = v5;
    id v11 = objc_msgSend(v10, sel_description);
    uint64_t v12 = sub_1C28CD730();
    unint64_t v14 = v13;

    uint64_t v26 = sub_1C27D36AC(v12, v14, &v27);
    sub_1C28CDF90();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v6, v7, "%{public}s: cleaning up precondition", v9, 0xCu);
    uint64_t v15 = v23;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v15, -1, -1);
    MEMORY[0x1C87609B0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v16 = OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver;
  id v17 = *(void **)&v5[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver];
  if (v17)
  {
    objc_msgSend(v17, sel_setDelegate_, 0);
    id v18 = *(void **)&v5[v16];
  }
  else
  {
    id v18 = 0;
  }
  *(void *)&v5[v16] = 0;

  os_log_type_t v19 = &v5[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  uint64_t v20 = *(void *)&v5[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  *(void *)os_log_type_t v19 = 0;
  *((void *)v19 + 1) = 0;
  return sub_1C27C0290(v20);
}

uint64_t sub_1C286C5C8()
{
  return 0;
}

id FirstRestoreNotInProgressPrecondition.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void FirstRestoreNotInProgressPrecondition.init()()
{
}

void sub_1C286C724(uint64_t a1, uint64_t a2)
{
}

uint64_t FirstRestoreNotInProgressPrecondition.cloudSyncObserverStatusUpdated(_:status:)(uint64_t a1, void *a2)
{
  return sub_1C286CF9C(a2);
}

uint64_t sub_1C286C768(void *a1)
{
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v49 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1C28CC450();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C286E1B4(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v42[-v11];
  unsigned int v13 = objc_msgSend(a1, sel_syncEnabled);
  id v14 = objc_msgSend(a1, sel_restoreCompletionDate);
  if (!v14)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    id v18 = v5;
    goto LABEL_5;
  }
  uint64_t v15 = v14;
  sub_1C28CC430();

  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v12, v9, v6);
  int v16 = 1;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  int v17 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  id v18 = v5;
  if (v17 == 1) {
LABEL_5:
  }
    int v16 = 0;
  sub_1C281B8AC((uint64_t)v12);
  id v19 = objc_msgSend(a1, sel_errorRequiringUserAction);
  if (v19)
  {

    int v20 = v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_shouldProceedOnErrorRequiringUserAction];
    int v21 = v16 | v13 ^ 1;
    int v22 = v21 ^ 1 | v20;
    v13 |= v21 ^ 1;
    uint64_t v23 = 1;
    if (v21 & 1) != 0 || (v20) {
      goto LABEL_13;
    }
    int v22 = 0;
  }
  else
  {
    int v22 = v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_shouldProceedOnErrorRequiringUserAction];
    if ((v16 | v13 ^ 1))
    {
      uint64_t v23 = 1;
      goto LABEL_13;
    }
  }
  uint64_t v23 = 0;
  unsigned int v13 = 1;
LABEL_13:
  int v48 = v16;
  sub_1C28CCDC0();
  uint64_t v24 = v1;
  id v25 = a1;
  uint64_t v26 = v24;
  id v27 = v25;
  id v28 = sub_1C28CCE00();
  os_log_type_t v29 = sub_1C28CDCD0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    uint64_t v51 = v45;
    *(_DWORD *)uint64_t v30 = 136447490;
    id v46 = v18;
    uint64_t v31 = v26;
    id v32 = objc_msgSend(v31, sel_description);
    unsigned int v47 = v23;
    id v33 = v32;
    uint64_t v34 = sub_1C28CD730();
    int v43 = v22;
    uint64_t v35 = v34;
    uint64_t v44 = v3;
    unint64_t v37 = v36;

    id v50 = (id)sub_1C27D36AC(v35, v37, &v51);
    sub_1C28CDF90();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 1024;
    LODWORD(v50) = v13;
    sub_1C28CDF90();
    *(_WORD *)(v30 + 18) = 1024;
    LODWORD(v50) = v48;
    sub_1C28CDF90();
    *(_WORD *)(v30 + 24) = 2080;
    id v50 = objc_msgSend(v27, sel_errorRequiringUserAction);
    sub_1C286E1B4(0, &qword_1EBB77158, (uint64_t (*)(uint64_t))sub_1C27C7060, MEMORY[0x1E4FBB718]);
    uint64_t v38 = sub_1C28CD750();
    id v50 = (id)sub_1C27D36AC(v38, v39, &v51);
    sub_1C28CDF90();

    uint64_t v23 = v47;
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 34) = 1024;

    LODWORD(v50) = v43;
    sub_1C28CDF90();

    *(_WORD *)(v30 + 40) = 1024;
    LODWORD(v50) = v23;
    sub_1C28CDF90();
    _os_log_impl(&dword_1C27B7000, v28, v29, "[%{public}s]: Received cloud sync status update, syncEnabled: %{BOOL}d, restoreCompleted: %{BOOL}d, errorRequiringUserAction: %s, shouldProceedOnErrorRequiringUserAction: %{BOOL}d, shouldProceed: %{BOOL}d", (uint8_t *)v30, 0x2Eu);
    uint64_t v40 = v45;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v40, -1, -1);
    MEMORY[0x1C87609B0](v30, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v46, v44);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v18, v3);
  }
  return v23;
}

id sub_1C286CE50(void *a1, char a2, char a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver] = 0;
  id v9 = &v4[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_lock;
  sub_1C28CC650();
  swift_allocObject();
  uint64_t v11 = v4;
  *(void *)&v4[v10] = sub_1C28CC640();
  *(void *)&v11[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_healthStore] = a1;
  v11[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_shouldProceedOnErrorRequiringUserAction] = a2;
  v11[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_waitUntilShouldProceed] = a3;
  *(void *)&v11[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_completionQueue] = a4;
  id v12 = a4;
  id v13 = a1;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for FirstRestoreNotInProgressPrecondition();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for FirstRestoreNotInProgressPrecondition()
{
  return self;
}

unint64_t sub_1C286CF64()
{
  unint64_t result = qword_1EBB769A0;
  if (!qword_1EBB769A0)
  {
    type metadata accessor for FirstRestoreNotInProgressPrecondition();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB769A0);
  }
  return result;
}

uint64_t sub_1C286CF9C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)v55 - v8;
  uint64_t v10 = sub_1C28CD500();
  uint64_t v60 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C28CD520();
  os_log_t v58 = *(uint8_t **)(v13 - 8);
  uint64_t v59 = v13;
  MEMORY[0x1F4188790](v13);
  objc_super v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1C28CC620();
  swift_release();
  swift_retain();
  sub_1C28CC610();
  swift_release();
  int v16 = *(void (**)(uint64_t))&v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  if (v16)
  {
    int v17 = *(uint8_t **)&v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion
                         + 8];
    id v18 = *(void **)&v2[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_completionQueue];
    id v56 = v18;
    uint64_t v57 = v17;
    sub_1C27C4380((uint64_t)v16);
    char v19 = sub_1C286C768(a1);
    char v20 = v19;
    if (v2[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_waitUntilShouldProceed] == 1)
    {
      if ((v19 & 1) == 0)
      {
        sub_1C28CCD80();
        uint64_t v41 = v2;
        uint64_t v42 = sub_1C28CCE00();
        os_log_type_t v43 = sub_1C28CDCD0();
        int v44 = v43;
        if (os_log_type_enabled(v42, v43))
        {
          LODWORD(v60) = v44;
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          uint64_t v59 = swift_slowAlloc();
          uint64_t aBlock = v59;
          os_log_t v58 = v45;
          *(_DWORD *)uint64_t v45 = 136446210;
          v55[1] = v45 + 4;
          id v46 = v41;
          id v47 = objc_msgSend(v46, sel_description);
          uint64_t v48 = sub_1C28CD730();
          unint64_t v50 = v49;

          uint64_t v69 = sub_1C27D36AC(v48, v50, &aBlock);
          sub_1C28CDF90();

          swift_bridgeObjectRelease();
          uint64_t v51 = v58;
          _os_log_impl(&dword_1C27B7000, v42, (os_log_type_t)v60, "[%{public}s]: First restore status in-progress; deferring precondition callback until restore is completed",
            v58,
            0xCu);
          uint64_t v52 = v59;
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v52, -1, -1);
          MEMORY[0x1C87609B0](v51, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v9, v62);
        id v54 = v56;
        swift_retain();
        sub_1C28CC630();

        goto LABEL_18;
      }
      sub_1C286C2A0();
      swift_retain();
      sub_1C28CC630();
      swift_release();
      if (v18)
      {
        uint64_t v21 = swift_allocObject();
        int v22 = v57;
        *(void *)(v21 + 16) = v16;
        *(void *)(v21 + 24) = v22;
        *(unsigned char *)(v21 + 32) = 1;
        long long v67 = sub_1C286E0A0;
        uint64_t v68 = v21;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v64 = 1107296256;
        uint64_t v23 = &block_descriptor_25;
LABEL_10:
        long long v65 = sub_1C27BC934;
        unsigned __int8 v66 = v23;
        uint64_t v38 = _Block_copy(&aBlock);
        id v39 = v56;
        sub_1C27C4380((uint64_t)v16);
        sub_1C28CD510();
        uint64_t v69 = MEMORY[0x1E4FBC860];
        sub_1C286E0A4();
        sub_1C286E1B4(0, (unint64_t *)&qword_1EBB77300, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
        sub_1C286E0FC();
        sub_1C28CE020();
        MEMORY[0x1C875F420](0, v15, v12, v38);
        _Block_release(v38);

        (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v10);
        (*((void (**)(char *, uint64_t))v58 + 1))(v15, v59);

LABEL_18:
        swift_release();
        return sub_1C27C0290((uint64_t)v16);
      }
      uint64_t v53 = 1;
    }
    else
    {
      sub_1C286C2A0();
      swift_retain();
      sub_1C28CC630();
      swift_release();
      if (v18)
      {
        uint64_t v36 = swift_allocObject();
        unint64_t v37 = v57;
        *(void *)(v36 + 16) = v16;
        *(void *)(v36 + 24) = v37;
        *(unsigned char *)(v36 + 32) = v20 & 1;
        long long v67 = sub_1C286E0A0;
        uint64_t v68 = v36;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v64 = 1107296256;
        uint64_t v23 = &block_descriptor_18_0;
        goto LABEL_10;
      }
      uint64_t v53 = v20 & 1;
    }
    v16(v53);
    return sub_1C27C0290((uint64_t)v16);
  }
  else
  {
    sub_1C28CCDC0();
    uint64_t v24 = v1;
    id v25 = sub_1C28CCE00();
    os_log_type_t v26 = sub_1C28CDCB0();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      LODWORD(v60) = v27;
      id v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t aBlock = v59;
      *(_DWORD *)id v28 = 136446210;
      uint64_t v57 = v28 + 4;
      os_log_t v58 = v28;
      os_log_type_t v29 = v24;
      id v30 = objc_msgSend(v29, sel_description);
      uint64_t v31 = sub_1C28CD730();
      unint64_t v33 = v32;

      uint64_t v69 = sub_1C27D36AC(v31, v33, &aBlock);
      sub_1C28CDF90();

      swift_bridgeObjectRelease();
      uint64_t v34 = v58;
      _os_log_impl(&dword_1C27B7000, v25, (os_log_type_t)v60, "[%{public}s]: Received cloud sync status update without a preconditionCompletion; shutting down observer",
        v58,
        0xCu);
      uint64_t v35 = v59;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v35, -1, -1);
      MEMORY[0x1C87609B0](v34, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v62);
    sub_1C286C2A0();
    swift_retain();
    sub_1C28CC630();
    return swift_release();
  }
}

uint64_t _s16HealthExperience37FirstRestoreNotInProgressPreconditionC17cloudSyncObserver_32didFailToPopulateStatusWithErrorySo07HKCloudjK0C_s0R0_ptF_0()
{
  id v1 = v0;
  uint64_t v2 = sub_1C28CD500();
  uint64_t v65 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v68 = (uint8_t *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1C28CD520();
  long long v67 = *(uint8_t **)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  unsigned __int8 v66 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C28CCE10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_lock;
  swift_retain();
  sub_1C28CC620();
  swift_release();
  swift_retain();
  sub_1C28CC610();
  swift_release();
  uint64_t v13 = *(void (**)(void))&v0[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  if (!v13)
  {
    uint64_t v70 = v6;
    sub_1C28CCDC0();
    uint64_t v34 = v1;
    uint64_t v35 = sub_1C28CCE00();
    os_log_type_t v36 = sub_1C28CDCB0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v62 = v12;
      unint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = (void (*)(void))swift_slowAlloc();
      aBlock[0] = (uint64_t)v69;
      uint64_t v61 = v5;
      *(_DWORD *)unint64_t v37 = 136446210;
      long long v67 = v37 + 4;
      uint64_t v68 = v37;
      uint64_t v38 = v34;
      id v39 = objc_msgSend(v38, sel_description);
      uint64_t v40 = sub_1C28CD730();
      unint64_t v42 = v41;

      uint64_t v72 = sub_1C27D36AC(v40, v42, aBlock);
      sub_1C28CDF90();

      swift_bridgeObjectRelease();
      os_log_type_t v43 = v68;
      _os_log_impl(&dword_1C27B7000, v35, v36, "[%{public}s]: Received cloud sync status did fail to populate without a preconditionCompletion; shutting down observer",
        v68,
        0xCu);
      int v44 = v69;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v44, -1, -1);
      MEMORY[0x1C87609B0](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v70 + 8))(v9, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v70 + 8))(v9, v5);
    }
    sub_1C286C2A0();
    swift_retain();
    sub_1C28CC630();
    return swift_release();
  }
  uint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion
                     + 8];
  id v60 = *(id *)&v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_completionQueue];
  id v63 = v60;
  uint64_t v69 = v13;
  sub_1C27C4380((uint64_t)v13);
  sub_1C28CCDC0();
  objc_super v15 = v1;
  int v16 = sub_1C28CCE00();
  os_log_type_t v17 = sub_1C28CDCB0();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v61 = v5;
    uint64_t v19 = swift_slowAlloc();
    int v57 = v18;
    char v20 = (uint8_t *)v19;
    uint64_t v58 = swift_slowAlloc();
    aBlock[0] = v58;
    uint64_t v62 = v12;
    id v56 = v20;
    *(_DWORD *)char v20 = 136446210;
    uint64_t v55 = v20 + 4;
    uint64_t v21 = v15;
    int v22 = v15;
    id v23 = objc_msgSend(v22, sel_description);
    uint64_t v70 = v6;
    id v24 = v23;
    uint64_t v25 = sub_1C28CD730();
    os_log_t v54 = v16;
    uint64_t v26 = v14;
    uint64_t v27 = v25;
    uint64_t v59 = v2;
    unint64_t v29 = v28;

    uint64_t v30 = v27;
    uint64_t v14 = v26;
    objc_super v15 = v21;
    uint64_t v72 = sub_1C27D36AC(v30, v29, aBlock);
    sub_1C28CDF90();

    uint64_t v2 = v59;
    swift_bridgeObjectRelease();
    os_log_t v31 = v54;
    unint64_t v32 = v56;
    _os_log_impl(&dword_1C27B7000, v54, (os_log_type_t)v57, "[%{public}s]: Received cloud sync status did fail to populate", v56, 0xCu);
    uint64_t v33 = v58;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v33, -1, -1);
    MEMORY[0x1C87609B0](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v61);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  if (v15[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_waitUntilShouldProceed] == 1)
  {
    swift_retain();
    sub_1C28CC630();

    sub_1C27C0290((uint64_t)v69);
    return swift_release();
  }
  sub_1C286C2A0();
  swift_retain();
  sub_1C28CC630();
  swift_release();
  if (v60)
  {
    uint64_t v45 = swift_allocObject();
    id v46 = v69;
    *(void *)(v45 + 16) = v69;
    *(void *)(v45 + 24) = v14;
    *(unsigned char *)(v45 + 32) = 0;
    aBlock[4] = (uint64_t)sub_1C286E0A0;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C27BC934;
    aBlock[3] = (uint64_t)&block_descriptor_11;
    id v47 = _Block_copy(aBlock);
    id v48 = v63;
    sub_1C27C4380((uint64_t)v46);
    unint64_t v49 = v66;
    sub_1C28CD510();
    uint64_t v72 = MEMORY[0x1E4FBC860];
    sub_1C286E0A4();
    sub_1C286E1B4(0, (unint64_t *)&qword_1EBB77300, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C286E0FC();
    unint64_t v50 = v68;
    sub_1C28CE020();
    MEMORY[0x1C875F420](0, v49, v50, v47);
    _Block_release(v47);

    (*(void (**)(uint8_t *, uint64_t))(v65 + 8))(v50, v2);
    (*((void (**)(char *, uint64_t))v67 + 1))(v49, v64);

    swift_release();
    return sub_1C27C0290((uint64_t)v46);
  }
  else
  {
    uint64_t v52 = v69;
    v69(0);
    return sub_1C27C0290((uint64_t)v52);
  }
}

uint64_t method lookup function for FirstRestoreNotInProgressPrecondition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FirstRestoreNotInProgressPrecondition);
}

uint64_t dispatch thunk of FirstRestoreNotInProgressPrecondition.__allocating_init(healthStore:shouldProceedOnErrorRequiringUserAction:waitUntilShouldProceed:completionQueue:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of FirstRestoreNotInProgressPrecondition.evaluate(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t sub_1C286E068()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1C286E0A4()
{
  unint64_t result = qword_1EBB772F8;
  if (!qword_1EBB772F8)
  {
    sub_1C28CD500();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB772F8);
  }
  return result;
}

unint64_t sub_1C286E0FC()
{
  unint64_t result = qword_1EBB77308;
  if (!qword_1EBB77308)
  {
    sub_1C286E1B4(255, (unint64_t *)&qword_1EBB77300, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB77308);
  }
  return result;
}

uint64_t sub_1C286E184()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

void sub_1C286E1B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t SuggestedAction.feedItemUniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static SuggestedAction.organDonation.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x80000001C28DCE80;
}

void static SuggestedAction.medicalIDForPrimaryProfile.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000003ALL;
  a1[1] = 0x80000001C28DCEA0;
}

id static SuggestedAction.medicalID(for:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C28CC4B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(a1, sel_type);
  if (result == (id)1)
  {
    unint64_t v9 = 0xD00000000000003ALL;
    unint64_t v10 = 0x80000001C28DCEA0;
  }
  else
  {
    id v11 = objc_msgSend(a1, sel_identifier);
    sub_1C28CC490();

    sub_1C28CC460();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unint64_t v12 = 0xD000000000000016;
    unint64_t v13 = 0x80000001C28DCEE0;
    sub_1C28CD7C0();
    id result = (id)swift_bridgeObjectRelease();
    unint64_t v9 = v12;
    unint64_t v10 = v13;
  }
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t static SummarySharingSuggestedAction.onboardingPrefix.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_1EA310F90;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SummarySharingSuggestedAction.onboardingPrefix.setter(uint64_t a1, void *a2)
{
  qword_1EA310F90 = a1;
  off_1EA310F98 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SummarySharingSuggestedAction.onboardingPrefix.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C286E51C()
{
  swift_beginAccess();
  uint64_t v1 = qword_1EA310F90;
  uint64_t v2 = off_1EA310F98;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C28CD7C0();
  qword_1EBB75CB8 = v1;
  qword_1EBB75CC0 = (uint64_t)v2;
  return result;
}

uint64_t static SummarySharingSuggestedAction.sharingTabOnboardingTileUniqueIdentifier.getter()
{
  if (qword_1EBB75CD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_1EBB75CB8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SummarySharingSuggestedAction.sharingTabOnboardingTileUniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1EBB75CD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB75CB8 = a1;
  qword_1EBB75CC0 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SummarySharingSuggestedAction.sharingTabOnboardingTileUniqueIdentifier.modify())()
{
  if (qword_1EBB75CD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static SummarySharingSuggestedAction.sharingTabOnboardingTile.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBB75CD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_1EBB75CC0;
  *a1 = qword_1EBB75CB8;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

unint64_t static SummarySharingSuggestedAction.stateManagerDomain.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t dispatch thunk of SuggestedActionDelegate.didCompleteSuggestedAction(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SuggestedActionDelegate.didCancelSuggestedAction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for SuggestedAction()
{
  return &type metadata for SuggestedAction;
}

ValueMetadata *type metadata accessor for SummarySharingSuggestedAction()
{
  return &type metadata for SummarySharingSuggestedAction;
}

uint64_t type metadata accessor for ThreadsafeHKCalendarCache()
{
  return self;
}

id ThreadsafeHKCalendarCache.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id ThreadsafeHKCalendarCache.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC16HealthExperience25ThreadsafeHKCalendarCache_lock;
  sub_1C28CC9F0();
  swift_allocObject();
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_1C28CC9E0();

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ThreadsafeHKCalendarCache();
  return objc_msgSendSuper2(&v4, sel_init);
}

id ThreadsafeHKCalendarCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThreadsafeHKCalendarCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of AdvertisableFeatureSourceDelegate.advertisableFeatureSource(_:didUpdateAdvertisementStateTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.makeConfiguration(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.determineShouldAdvertise(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.performPrerequisiteWorkIfNecessary(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.commitEnablement(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.determinePostCommitWorkItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1C286EDB0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C286EE1C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t (*sub_1C286EE70())()
{
  return j__swift_endAccess;
}

id UserDefaultsObserver.__allocating_init(userDefaults:key:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v4 = v3;
  unint64_t v8 = (char *)objc_allocWithZone(v3);
  uint64_t v9 = OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue;
  sub_1C27CDFB4();
  swift_allocObject();
  unint64_t v10 = v8;
  *(void *)&v8[v9] = sub_1C28CD140();
  *(void *)&v10[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_userDefaults] = a1;
  id v11 = &v10[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_key];
  *(void *)id v11 = a2;
  *((void *)v11 + 1) = a3;
  id v12 = a1;
  swift_bridgeObjectRetain();

  v16.receiver = v10;
  v16.super_class = v4;
  id v13 = objc_msgSendSuper2(&v16, sel_init);
  uint64_t v14 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_addObserver_forKeyPath_options_context_, v13, v14, 3, 0);

  return v13;
}

id UserDefaultsObserver.__deallocating_deinit()
{
  id v1 = *(id *)&v0[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_userDefaults];
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_removeObserver_forKeyPath_, v0, v2);

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for UserDefaultsObserver();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1C286F1A0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = a2;
  if (!a2)
  {
LABEL_13:
    sub_1C27B9E94(a3, (uint64_t)&v24);
    uint64_t v15 = *((void *)&v25 + 1);
    if (*((void *)&v25 + 1))
    {
      objc_super v16 = __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
      uint64_t v17 = *(void *)(v15 - 8);
      MEMORY[0x1F4188790](v16);
      uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v17 + 16))(v19);
      uint64_t v20 = sub_1C28CE630();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
      if (!a4)
      {
LABEL_16:
        uint64_t v21 = (objc_class *)type metadata accessor for UserDefaultsObserver();
        v23.receiver = v5;
        v23.super_class = v21;
        objc_msgSendSuper2(&v23, sel_observeValueForKeyPath_ofObject_change_context_, v9, v20, a4, a5);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v20 = 0;
      if (!a4) {
        goto LABEL_16;
      }
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_1C27DE670();
    a4 = (void *)sub_1C28CD5F0();
    goto LABEL_16;
  }
  BOOL v10 = *(void *)&v5[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_key] == a1
     && *(void *)&v5[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_key + 8] == (void)a2;
  if (!v10 && (sub_1C28CE640() & 1) == 0)
  {
    uint64_t v9 = (void *)sub_1C28CD6F0();
    goto LABEL_13;
  }
  swift_beginAccess();
  if (a4 && a4[2])
  {
    id v11 = (void *)*MEMORY[0x1E4F284C8];
    swift_retain();
    id v12 = v11;
    unint64_t v13 = sub_1C2872494((uint64_t)v12);
    if (v14)
    {
      sub_1C27D3780(a4[7] + 32 * v13, (uint64_t)&v24);
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
    }
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
    swift_retain();
  }
  sub_1C28CD130();
  swift_release();
  sub_1C27B9E38((uint64_t)&v24);
}

id UserDefaultsObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void UserDefaultsObserver.init()()
{
}

uint64_t sub_1C286F5EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t method lookup function for UserDefaultsObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserDefaultsObserver);
}

uint64_t dispatch thunk of UserDefaultsObserver.currentValue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of UserDefaultsObserver.currentValue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UserDefaultsObserver.__allocating_init(userDefaults:key:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

Swift::Void __swiftcall ExternalDeepLink.open()()
{
  sub_1C27C3244();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C28CC330();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC320();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1C27F1154((uint64_t)v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    id v7 = objc_msgSend(self, sel_defaultWorkspace);
    if (v7)
    {
      unint64_t v8 = v7;
      uint64_t v9 = (void *)sub_1C28CC2B0();
      sub_1C28067C0(MEMORY[0x1E4FBC860]);
      BOOL v10 = (void *)sub_1C28CD5F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_openSensitiveURL_withOptions_, v9, v10);
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t ExternalDeepLink.url.getter()
{
  return sub_1C28CC320();
}

BOOL static ExternalDeepLink.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ExternalDeepLink.hash(into:)()
{
  return sub_1C28CE710();
}

uint64_t ExternalDeepLink.hashValue.getter()
{
  return sub_1C28CE740();
}

unint64_t sub_1C286FADC()
{
  unint64_t result = qword_1EA310FC0;
  if (!qword_1EA310FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310FC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExternalDeepLink(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C286FBFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalDeepLink()
{
  return &type metadata for ExternalDeepLink;
}

uint64_t FamilyMemberPhotoFetcher.fetchPhoto(forFamilyMemberDSID:imageSize:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  *(void *)(v5 + 48) = a3;
  *(void *)(v5 + 56) = v4;
  *(void *)(v5 + 40) = a2;
  *(double *)(v5 + 32) = a4;
  *(void *)(v5 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1C286FC60, 0, 0);
}

uint64_t sub_1C286FC60()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v4 + 32) = v1;
  *(void *)(v4 + 40) = v3;
  *(void *)(v4 + 48) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  sub_1C28700A4();
  void *v5 = v0;
  v5[1] = sub_1C286FD7C;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000002ALL, 0x80000001C28DD0D0, sub_1C2870094, v4, v6);
}

uint64_t sub_1C286FD7C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C286FEB4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C286FE98;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C286FE98()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1C286FEB4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C286FF18(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C2870528();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  (*(void (**)(uint64_t, uint64_t (*)(void *, char), uint64_t, uint64_t, uint64_t, double))(a6 + 8))(a4, sub_1C2870628, v16, a5, a6, a2);
  return swift_release();
}

uint64_t sub_1C2870094(uint64_t a1)
{
  return sub_1C286FF18(a1, *(double *)(v1 + 48), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C28700A4()
{
  if (!qword_1EBB75CA8)
  {
    sub_1C2819D3C();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75CA8);
    }
  }
}

uint64_t sub_1C28700FC(id a1, char a2)
{
  if (a2)
  {
    id v5 = a1;
    sub_1C2870528();
    return sub_1C28CDA50();
  }
  else
  {
    sub_1C2870528();
    id v3 = a1;
    return sub_1C28CDA60();
  }
}

void FamilyCirclePhotoFetcher.fetchPhoto(forFamilyMemberDSID:imageSize:completion:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (void *)sub_1C28CDB60();
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F61860]), sel_initWithFamilyMemberDSID_size_localFallback_, v7, 1, 1);

  if (v8)
  {
    objc_msgSend(v8, sel_setUseMonogramAsLastResort_, 0);
    objc_msgSend(v8, sel_setMonogramDiameter_, a1);
    uint64_t v9 = swift_allocObject();
    *(double *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a3;
    *(void *)(v9 + 32) = a4;
    v11[4] = sub_1C2870434;
    void v11[5] = v9;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 1107296256;
    v11[2] = sub_1C2870440;
    v11[3] = &block_descriptor_12;
    BOOL v10 = _Block_copy(v11);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_startRequestWithCompletionHandler_, v10);
    _Block_release(v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C28702D4(uint64_t a1, unint64_t a2, int a3, objc_class *a4, __n128 a5, void (*a6)(Class, BOOL))
{
  Class isa = a4;
  if (!a4)
  {
    if (a2 >> 60 != 15)
    {
      unsigned __int8 v10 = a5.n128_u8[0];
      id v12 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
      sub_1C27E2B38(a1, a2);
      uint64_t v13 = (void *)sub_1C28CC380();
      id v14 = objc_msgSend(v12, sel_initWithData_, v13);

      if (v14)
      {
        unsigned __int8 v17 = v10;
        Class isa = UIImage.withCircularCrop(adjustedSize:)(*(CGSize_optional *)&v15).super.isa;
        sub_1C2808A44(a1, a2);

        goto LABEL_7;
      }
      sub_1C2808A44(a1, a2);
    }
    Class isa = 0;
  }
LABEL_7:
  uint64_t v18 = a4;
  a6(isa, a4 != 0);

  sub_1C2817718(isa);
}

uint64_t sub_1C28703FC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C2870434(uint64_t a1, unint64_t a2, int a3, objc_class *a4, __n128 a5)
{
  a5.n128_u64[0] = *(void *)(v5 + 16);
  sub_1C28702D4(a1, a2, a3, a4, a5, *(void (**)(Class, BOOL))(v5 + 24));
}

uint64_t sub_1C2870440(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a2;
  id v7 = *(void (**)(void *, unint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v8 = v6;
    uint64_t v6 = (void *)sub_1C28CC390();
    unint64_t v10 = v9;
  }
  else
  {
    swift_retain();
    unint64_t v10 = 0xF000000000000000;
  }
  id v11 = a4;
  v7(v6, v10, a3, a4);

  sub_1C2808A44((uint64_t)v6, v10);

  return swift_release();
}

void sub_1C28704FC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
}

uint64_t dispatch thunk of FamilyMemberPhotoFetcher.fetchPhoto(forFamilyMemberDSID:imageSize:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void sub_1C2870528()
{
  if (!qword_1EA310FD0)
  {
    sub_1C28700A4();
    sub_1C27C7060();
    unint64_t v0 = sub_1C28CDA70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310FD0);
    }
  }
}

uint64_t sub_1C2870598()
{
  sub_1C2870528();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1C2870628(void *a1, char a2)
{
  char v3 = a2 & 1;
  sub_1C2870528();

  return sub_1C28700FC(a1, v3);
}

HealthExperience::NotificationSettingsSupport::Defaults_optional __swiftcall NotificationSettingsSupport.Defaults.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (HealthExperience::NotificationSettingsSupport::Defaults_optional)rawValue;
}

uint64_t NotificationSettingsSupport.Defaults.rawValue.getter()
{
  return *v0;
}

char *sub_1C28706CC()
{
  return NotificationSettingsSupport.Defaults.orderedElements.getter();
}

uint64_t sub_1C28706E4()
{
  char v1 = *v0;
  NotificationSettingsSupport.Defaults.orderedElements.getter();
  char v9 = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C27D922C(v2);
  v8[2] = &v9;
  uint64_t v4 = sub_1C27D74B8((uint64_t (*)(char *))sub_1C28038DC, (uint64_t)v8, v3);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

HealthExperience::NotificationSettingsSupport::Features_optional __swiftcall NotificationSettingsSupport.Features.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 8;
  if ((unint64_t)rawValue < 8) {
    char v2 = rawValue;
  }
  *char v1 = v2;
  return (HealthExperience::NotificationSettingsSupport::Features_optional)rawValue;
}

uint64_t NotificationSettingsSupport.Features.rawValue.getter()
{
  return *v0;
}

HealthExperience::NotificationSettingsSupport::Features_optional sub_1C2870798(Swift::Int *a1)
{
  return NotificationSettingsSupport.Features.init(rawValue:)(*a1);
}

char *sub_1C28707A0()
{
  return NotificationSettingsSupport.Features.orderedElements.getter();
}

uint64_t sub_1C28707B8()
{
  char v1 = *v0;
  NotificationSettingsSupport.Features.orderedElements.getter();
  char v9 = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C27D9214(v2);
  v8[2] = &v9;
  uint64_t v4 = sub_1C27D74B8((uint64_t (*)(char *))sub_1C28038BC, (uint64_t)v8, v3);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

unint64_t sub_1C2870854()
{
  unint64_t result = qword_1EA310FD8;
  if (!qword_1EA310FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310FD8);
  }
  return result;
}

uint64_t sub_1C28708A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C28709AC(a1, a2, a3, (uint64_t (*)(void))sub_1C2870854, (uint64_t (*)(void))sub_1C28708D4);
}

unint64_t sub_1C28708D4()
{
  unint64_t result = qword_1EA310FE0;
  if (!qword_1EA310FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310FE0);
  }
  return result;
}

unint64_t sub_1C287092C()
{
  unint64_t result = qword_1EA310FE8;
  if (!qword_1EA310FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310FE8);
  }
  return result;
}

uint64_t sub_1C2870980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C28709AC(a1, a2, a3, (uint64_t (*)(void))sub_1C287092C, (uint64_t (*)(void))sub_1C28709E8);
}

uint64_t sub_1C28709AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C28709E8()
{
  unint64_t result = qword_1EA310FF0;
  if (!qword_1EA310FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310FF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsSupport()
{
  return &type metadata for NotificationSettingsSupport;
}

unsigned char *storeEnumTagSinglePayload for NotificationSettingsSupport.Defaults(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2870B18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationSettingsSupport.Features(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2870C0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t ContactsProfileInformation.firstName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactsProfileInformation.lastName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *ContactsProfileInformation.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void ContactsProfileInformation.image.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*ContactsProfileInformation.image.modify())()
{
  return nullsub_1;
}

uint64_t ContactsProfileInformation.icloudAccount.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactsProfileInformation.init(firstName:lastName:icloudAccount:image:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a7;
  a8[5] = a5;
  a8[6] = a6;
  return result;
}

void *sub_1C2870D4C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t destroy for ContactsProfileInformation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContactsProfileInformation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  unsigned int v6 = (void *)a2[4];
  uint64_t v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContactsProfileInformation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactsProfileInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactsProfileInformation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactsProfileInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactsProfileInformation()
{
  return &type metadata for ContactsProfileInformation;
}

uint64_t AnchoredChangeSet.aggregated(with:)@<X0>(uint64_t a1@<X8>)
{
  v65[3] = a1;
  uint64_t v2 = sub_1C28CC7D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C28CC7C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  if (!v6) {
    uint64_t v6 = sub_1C28CC7C0();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v7 = sub_1C28CC7B0();
  uint64_t v8 = sub_1C28CC7B0();
  unint64_t v9 = v8;
  v65[2] = v6;
  if ((v8 & 0xC000000000000001) != 0)
  {
    uint64_t v10 = sub_1C28CE2A0();
    uint64_t v67 = 0;
    uint64_t v11 = 0;
    unint64_t v12 = 0;
    unint64_t v9 = v10 | 0x8000000000000000;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(v8 + 32);
    uint64_t v14 = *(void *)(v8 + 64);
    uint64_t v67 = v8 + 64;
    uint64_t v11 = ~v13;
    uint64_t v15 = -v13;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v12 = v16 & v14;
  }
  v65[1] = v11;
  uint64_t v17 = 0;
  v65[5] = v9 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v66 = (unint64_t)(v11 + 64) >> 6;
  v65[4] = MEMORY[0x1E4FBC838] + 8;
  while (1)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      uint64_t v22 = sub_1C28CE330();
      if (!v22) {
        goto LABEL_62;
      }
      uint64_t v24 = v23;
      uint64_t v68 = v22;
      sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v25 = v69;
      swift_unknownObjectRelease();
      uint64_t v68 = v24;
      sub_1C27D1C9C(0, &qword_1EBB76DB8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v26 = v69;
      swift_unknownObjectRelease();
      uint64_t v21 = v17;
      uint64_t v19 = v12;
      if (!v25) {
        goto LABEL_62;
      }
    }
    else
    {
      if (v12)
      {
        uint64_t v19 = (v12 - 1) & v12;
        unint64_t v20 = __clz(__rbit64(v12)) | (v17 << 6);
        uint64_t v21 = v17;
      }
      else
      {
        int64_t v27 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_66;
        }
        if (v27 >= v66) {
          goto LABEL_62;
        }
        unint64_t v28 = *(void *)(v67 + 8 * v27);
        uint64_t v21 = v17 + 1;
        if (!v28)
        {
          uint64_t v21 = v17 + 2;
          if (v17 + 2 >= v66) {
            goto LABEL_62;
          }
          unint64_t v28 = *(void *)(v67 + 8 * v21);
          if (!v28)
          {
            uint64_t v21 = v17 + 3;
            if (v17 + 3 >= v66) {
              goto LABEL_62;
            }
            unint64_t v28 = *(void *)(v67 + 8 * v21);
            if (!v28)
            {
              uint64_t v21 = v17 + 4;
              if (v17 + 4 >= v66) {
                goto LABEL_62;
              }
              unint64_t v28 = *(void *)(v67 + 8 * v21);
              if (!v28)
              {
                uint64_t v29 = v17 + 5;
                while (v66 != v29)
                {
                  unint64_t v28 = *(void *)(v67 + 8 * v29++);
                  if (v28)
                  {
                    uint64_t v21 = v29 - 1;
                    goto LABEL_32;
                  }
                }
LABEL_62:
                sub_1C27D9684();
                swift_bridgeObjectRetain();
                sub_1C28CC7A0();
                return swift_bridgeObjectRelease();
              }
            }
          }
        }
LABEL_32:
        uint64_t v19 = (v28 - 1) & v28;
        unint64_t v20 = __clz(__rbit64(v28)) + (v21 << 6);
      }
      uint64_t v30 = 8 * v20;
      os_log_t v31 = *(void **)(*(void *)(v9 + 56) + v30);
      id v25 = *(id *)(*(void *)(v9 + 48) + v30);
      id v26 = v31;
      if (!v25) {
        goto LABEL_62;
      }
    }
    if ((v7 & 0xC000000000000001) != 0) {
      break;
    }
    if (!*(void *)(v7 + 16)) {
      goto LABEL_50;
    }
    id v39 = v25;
    unint64_t v40 = sub_1C2872308((uint64_t)v39);
    if ((v41 & 1) == 0)
    {

LABEL_50:
      id v48 = v25;
      id v49 = v26;
      goto LABEL_51;
    }
    id v34 = *(id *)(*(void *)(v7 + 56) + 8 * v40);

    if (!v34) {
      goto LABEL_50;
    }
    unint64_t v42 = (void *)HKSampleTypeChange.aggregated(with:)(v26);
    id v43 = v39;
    id v37 = v42;
LABEL_45:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v69 = (void *)v7;
    sub_1C2874198((uint64_t)v37, v25, isUniquelyReferenced_nonNull_native);
    uint64_t v7 = (uint64_t)v69;

LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v17 = v21;
    unint64_t v12 = v19;
  }
  if (v7 >= 0) {
    v7 &= 0xFFFFFFFFFFFFFF8uLL;
  }
  id v32 = v25;
  uint64_t v33 = sub_1C28CE320();
  if (v33)
  {
    uint64_t v68 = v33;
    sub_1C27D1C9C(0, &qword_1EBB76DB8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v34 = v69;
    swift_unknownObjectRelease();

    if (!v34) {
      goto LABEL_47;
    }
    uint64_t v35 = (void *)HKSampleTypeChange.aggregated(with:)(v26);
    id v36 = v32;
    id v37 = v35;
    uint64_t v38 = sub_1C28CE060();
    if (__OFADD__(v38, 1)) {
      goto LABEL_67;
    }
    uint64_t v7 = sub_1C28726A4(v7, v38 + 1);
    goto LABEL_45;
  }

LABEL_47:
  id v45 = v32;
  id v46 = v26;
  uint64_t v47 = sub_1C28CE060();
  if (__OFADD__(v47, 1)) {
    goto LABEL_64;
  }
  uint64_t v7 = sub_1C28726A4(v7, v47 + 1);
LABEL_51:
  char v50 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v69 = (void *)v7;
  unint64_t v52 = sub_1C2872308((uint64_t)v25);
  uint64_t v53 = *(void *)(v7 + 16);
  BOOL v54 = (v51 & 1) == 0;
  uint64_t v55 = v53 + v54;
  if (!__OFADD__(v53, v54))
  {
    char v56 = v51;
    if (*(void *)(v7 + 24) >= v55)
    {
      if (v50)
      {
        uint64_t v7 = (uint64_t)v69;
        if ((v51 & 1) == 0) {
          goto LABEL_58;
        }
      }
      else
      {
        sub_1C2875680();
        uint64_t v7 = (uint64_t)v69;
        if ((v56 & 1) == 0) {
          goto LABEL_58;
        }
      }
    }
    else
    {
      sub_1C28728F4(v55, v50);
      unint64_t v57 = sub_1C2872308((uint64_t)v25);
      if ((v56 & 1) != (v58 & 1)) {
        goto LABEL_68;
      }
      unint64_t v52 = v57;
      uint64_t v7 = (uint64_t)v69;
      if ((v56 & 1) == 0)
      {
LABEL_58:
        *(void *)(v7 + 8 * (v52 >> 6) + 64) |= 1 << v52;
        uint64_t v59 = 8 * v52;
        *(void *)(*(void *)(v7 + 48) + v59) = v25;
        *(void *)(*(void *)(v7 + 56) + v59) = v26;
        uint64_t v60 = *(void *)(v7 + 16);
        BOOL v61 = __OFADD__(v60, 1);
        uint64_t v62 = v60 + 1;
        if (v61) {
          goto LABEL_65;
        }
        *(void *)(v7 + 16) = v62;
        id v63 = v25;
        goto LABEL_11;
      }
    }
    uint64_t v18 = *(void *)(v7 + 56);

    *(void *)(v18 + 8 * v52) = v26;
LABEL_11:

    goto LABEL_12;
  }
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
  uint64_t result = sub_1C28CE680();
  __break(1u);
  return result;
}

void AnchoredTypeChangeSet.aggregated(with:)()
{
  uint64_t v1 = sub_1C28CCAB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCA80();
  uint64_t v5 = sub_1C28CCAA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  if (!v5) {
    sub_1C28CCAA0();
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v6 = (void *)sub_1C28CCA90();
  uint64_t v7 = sub_1C28CCA90();
  uint64_t v8 = (void *)v7;
  if (v6 && v7)
  {
    HKSampleTypeChange.aggregated(with:)(v6);
    sub_1C28CCA70();
  }
  else
  {
    sub_1C28CCA70();
  }
}

void *sub_1C28717D4(void *a1, uint64_t a2)
{
  return sub_1C27D2D28(a1, a2, (uint64_t (*)(void))sub_1C2872308, &qword_1EBB76DB8);
}

uint64_t HKSampleTypeChange.aggregated(with:)(void *a1)
{
  uint64_t v3 = sub_1C28CC450();
  uint64_t v97 = *(void *)(v3 - 8);
  uint64_t v98 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  v96 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  v95 = (char *)&v91 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v94 = (char *)&v91 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v93 = (char *)&v91 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v92 = (char *)&v91 - v13;
  MEMORY[0x1F4188790](v12);
  v103 = (char *)&v91 - v14;
  uint64_t v15 = sub_1C28CBFB0();
  v111 = *(void **)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  v105 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  v104 = (char *)&v91 - v18;
  sub_1C2875824();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v19);
  v109 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C283A074();
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  v108 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v100 = (uint64_t)&v91 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v101 = (char **)((char *)&v91 - v28);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v102 = (uint64_t)&v91 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  v99 = (char **)((char *)&v91 - v32);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v91 = (char *)&v91 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  id v37 = (char *)&v91 - v36;
  uint64_t v38 = MEMORY[0x1F4188790](v35);
  unint64_t v40 = (char *)&v91 - v39;
  uint64_t v41 = MEMORY[0x1F4188790](v38);
  id v43 = (char *)&v91 - v42;
  MEMORY[0x1F4188790](v41);
  uint64_t v107 = (uint64_t)&v91 - v44;
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77130);
  id v110 = v1;
  id v45 = objc_msgSend(v1, sel_sampleType);
  id v46 = objc_msgSend(a1, sel_sampleType);
  char v47 = sub_1C28CDF30();

  if ((v47 & 1) == 0)
  {
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
    sub_1C28CE120();
    sub_1C28CD7C0();
    id v87 = objc_msgSend(v110, sel_sampleType);
    id v88 = objc_msgSend(v87, sel_description);
    sub_1C28CD730();

    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    sub_1C28CD7C0();
    id v89 = objc_msgSend(a1, sel_sampleType);
    id v90 = objc_msgSend(v89, sel_description);
    sub_1C28CD730();

    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C28CE360();
    __break(1u);
    return result;
  }
  if (objc_msgSend(v110, sel_hasUnfrozenSeries)) {
    unsigned int v106 = 1;
  }
  else {
    unsigned int v106 = objc_msgSend(a1, sel_hasUnfrozenSeries);
  }
  id v48 = objc_msgSend(v110, sel_dateInterval);
  if (v48)
  {
    id v49 = v48;
    sub_1C28CBF70();

    char v50 = (char **)v111[7];
    ((void (*)(char *, void, uint64_t, uint64_t))v50)(v43, 0, 1, v15);
  }
  else
  {
    char v50 = (char **)v111[7];
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v50)(v43, 1, 1, v15);
  }
  id v51 = objc_msgSend(a1, sel_dateInterval);
  if (v51)
  {
    unint64_t v52 = v51;
    sub_1C28CBF70();

    uint64_t v53 = 0;
  }
  else
  {
    uint64_t v53 = 1;
  }
  uint64_t v54 = (uint64_t)v109;
  uint64_t v55 = v111;
  uint64_t v56 = (uint64_t)(v111 + 7);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v50)(v40, v53, 1, v15);
  uint64_t v57 = v54 + *(int *)(v20 + 48);
  sub_1C2875888((uint64_t)v43, v54);
  sub_1C2875888((uint64_t)v40, v57);
  char v58 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v55[6];
  if (v58(v54, 1, v15) != 1)
  {
    sub_1C2817440(v54, (uint64_t)v37);
    if (v58(v57, 1, v15) != 1)
    {
      uint64_t v68 = (void (*)(void))v111[4];
      v68();
      ((void (*)(char *, uint64_t, uint64_t))v68)(v105, v57, v15);
      uint64_t v69 = v92;
      sub_1C28CBFA0();
      uint64_t v102 = v56;
      uint64_t v70 = v93;
      sub_1C28CBFA0();
      uint64_t v100 = sub_1C27C7638(&qword_1EBB75860, MEMORY[0x1E4F27928]);
      v101 = v50;
      uint64_t v71 = v98;
      char v72 = sub_1C28CD6B0();
      uint64_t v73 = v97;
      long long v74 = *(char ***)(v97 + 16);
      v99 = v74;
      if (v72) {
        long long v75 = v70;
      }
      else {
        long long v75 = v69;
      }
      ((void (*)(char *, char *, uint64_t))v74)(v103, v75, v71);
      uint64_t v76 = *(void (**)(char *, uint64_t))(v73 + 8);
      v76(v70, v71);
      v76(v69, v71);
      long long v77 = v95;
      sub_1C28CBF80();
      long long v78 = v96;
      sub_1C28CBF80();
      if (sub_1C28CD6C0()) {
        long long v79 = v78;
      }
      else {
        long long v79 = v77;
      }
      ((void (*)(char *, char *, uint64_t))v99)(v94, v79, v71);
      v76(v78, v71);
      v76(v77, v71);
      uint64_t v80 = (uint64_t)v91;
      sub_1C28CBF90();
      long long v81 = (void (*)(char *, uint64_t))v111[1];
      v81(v105, v15);
      v81(v104, v15);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v101)(v80, 0, 1, v15);
      uint64_t v60 = v107;
      sub_1C2875888(v80, v107);
      uint64_t v61 = (uint64_t)v109;
      goto LABEL_26;
    }
    ((void (*)(char *, uint64_t))v111[1])(v37, v15);
LABEL_16:
    uint64_t v62 = (void (*)(void, void, void))v99;
    sub_1C2875888(v54, (uint64_t)v99);
    id v63 = (void (*)(void, void, void, void))v101;
    sub_1C2875888(v57, (uint64_t)v101);
    uint64_t v64 = v100;
    sub_1C2875888((uint64_t)v62, v100);
    BOOL v65 = v58((uint64_t)v63, 1, v15) == 1;
    uint64_t v66 = (uint64_t)v108;
    uint64_t v67 = v64;
    if (v65)
    {
      uint64_t v82 = v102;
      sub_1C2875888(v67, v102);
      sub_1C283A0CC((uint64_t)v63);
    }
    else
    {
      sub_1C283A0CC(v64);
      uint64_t v82 = v102;
      ((void (*)(uint64_t, void (*)(void, void, void, void), uint64_t))v111[4])(v102, v63, v15);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v50)(v82, 0, 1, v15);
    }
    uint64_t v60 = v107;
    sub_1C2875888(v82, v107);
    goto LABEL_28;
  }
  if (v58(v57, 1, v15) != 1) {
    goto LABEL_16;
  }
  uint64_t v59 = v107;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50)(v107, 1, 1, v15);
  uint64_t v60 = v59;
  uint64_t v61 = v54;
LABEL_26:
  sub_1C283A0CC(v61);
  uint64_t v66 = (uint64_t)v108;
LABEL_28:
  id v83 = objc_msgSend(v110, sel_sampleType);
  sub_1C2817440(v60, v66);
  if (v58(v66, 1, v15) == 1)
  {
    long long v84 = 0;
  }
  else
  {
    long long v84 = (void *)sub_1C28CBF60();
    ((void (*)(uint64_t, uint64_t))v111[1])(v66, v15);
  }
  id v85 = objc_msgSend(self, sel_sampleTypeChangeWithSampleType_dateInterval_hasUnfrozenSeries_, v83, v84, v106);

  sub_1C283A0CC(v60);
  return (uint64_t)v85;
}

unint64_t sub_1C2872308(uint64_t a1)
{
  uint64_t v2 = sub_1C28CDF20();
  return sub_1C287556C(a1, v2, (unint64_t *)&qword_1EBB76D90);
}

unint64_t sub_1C2872358(uint64_t a1)
{
  sub_1C28CE700();
  type metadata accessor for CFString(0);
  sub_1C27C7638(&qword_1EA310FF8, type metadata accessor for CFString);
  sub_1C28CC5F0();
  uint64_t v2 = sub_1C28CE740();

  return sub_1C2874ED0(a1, v2);
}

unint64_t sub_1C287240C(uint64_t a1)
{
  uint64_t v2 = sub_1C28CE0A0();

  return sub_1C287502C(a1, v2);
}

unint64_t sub_1C2872450(uint64_t a1)
{
  uint64_t v2 = sub_1C28CE6F0();

  return sub_1C28750F4(a1, v2);
}

unint64_t sub_1C2872494(uint64_t a1)
{
  sub_1C28CD730();
  sub_1C28CE700();
  sub_1C28CD790();
  uint64_t v2 = sub_1C28CE740();
  swift_bridgeObjectRelease();

  return sub_1C2875190(a1, v2);
}

unint64_t sub_1C2872528(unsigned __int8 a1)
{
  sub_1C28CE700();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C28CE740();

  return sub_1C2875308(a1, v2);
}

unint64_t sub_1C2872654(uint64_t a1)
{
  uint64_t v2 = sub_1C28CDF20();
  return sub_1C287556C(a1, v2, (unint64_t *)&qword_1EBB76F60);
}

uint64_t sub_1C28726A4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C2876D6C();
    uint64_t v2 = sub_1C28CE3E0();
    uint64_t v18 = v2;
    sub_1C28CE2A0();
    uint64_t v3 = sub_1C28CE330();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
      do
      {
        swift_dynamicCast();
        sub_1C27D1C9C(0, &qword_1EBB76DB8);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1C28728F4(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1C28CDF20();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C28CE330();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1C28728F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2876D6C();
  uint64_t v6 = sub_1C28CE3D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1C28CDF20();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2872BC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C28080E8();
  uint64_t v6 = sub_1C28CE3D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  id v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    int64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    uint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2)
    {
      sub_1C2807E74(v23, v35);
    }
    else
    {
      sub_1C27D3780((uint64_t)v23, (uint64_t)v35);
      id v24 = v22;
    }
    sub_1C28CE700();
    type metadata accessor for CFString(0);
    sub_1C27C7638(&qword_1EA310FF8, type metadata accessor for CFString);
    sub_1C28CC5F0();
    uint64_t result = sub_1C28CE740();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_1C2807E74(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C2872EFC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_1C28CC9B0();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  id v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1C2876D04();
  int v47 = a2;
  uint64_t v8 = sub_1C28CE3D0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  id v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  int64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    uint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    char v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_1C28CE700();
    sub_1C28CD790();
    uint64_t result = sub_1C28CE740();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *uint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  uint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_1C28732E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2808060(0, &qword_1EBB74CA0);
  uint64_t result = sub_1C28CE3D0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  uint64_t *v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      char v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1C28CE6F0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      int64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *int64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C28735B4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2808060(0, (unint64_t *)&qword_1EBB742E8);
  char v6 = a2;
  uint64_t v7 = sub_1C28CE3D0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34) {
          goto LABEL_34;
        }
        unint64_t v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v20 = v35[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v20 = v35[v14];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      int64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      BOOL v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (v6)
      {
        sub_1C2807E74(v25, v36);
      }
      else
      {
        sub_1C27D3780((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1C28CE700();
      sub_1C28CD790();
      uint64_t result = sub_1C28CE740();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      unint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *unint64_t v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_1C2807E74(v36, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

unint64_t sub_1C28738D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C28078A4();
  char v6 = (void *)sub_1C28CE3D0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      unint64_t result = sub_1C2874A14(v19, v20, v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_1C2873AB8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2807C18();
  char v6 = (void *)sub_1C28CE3D0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_20;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_20;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_20:
              swift_release();
              if (a2)
              {
                uint64_t v19 = 1 << *(unsigned char *)(v5 + 32);
                if (v19 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v19;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_27;
                }
                if (v13 >= v11) {
                  goto LABEL_20;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t result = sub_1C2874B8C(*(unsigned char *)(*(void *)(v5 + 48) + v15), *(unsigned char *)(*(void *)(v5 + 56) + v15), v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1C2873C78(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = sub_1C28CC450();
  uint64_t v5 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v54 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C28CC4B0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_1C27BA390(0, (unint64_t *)&qword_1EA310608, MEMORY[0x1E4F27928]);
  int v51 = a2;
  uint64_t v12 = sub_1C28CE3D0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v53 = v7;
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  id v45 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v43 = v2;
  int64_t v44 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v46 = v5 + 16;
  int v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  int64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v50 = v5;
  unint64_t v52 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  uint64_t v48 = v11;
  uint64_t v49 = v8;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44) {
      break;
    }
    uint64_t v26 = v45;
    unint64_t v27 = v45[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v27 = v45[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v51 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v44) {
              goto LABEL_34;
            }
            unint64_t v27 = v45[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v8 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v51)
    {
      (*v18)(v10, v30, v53);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v50 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 32))(v54, v31 + v32 * v24, v55);
    }
    else
    {
      (*v47)(v10, v30, v53);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v50 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v54, v33 + v32 * v24, v55);
    }
    sub_1C27C7638(&qword_1EBB77070, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C28CD670();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v8 = v49;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      uint64_t v8 = v49;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v53);
    uint64_t result = (*v52)(*(void *)(v13 + 56) + v32 * v22, v54, v55);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
  }
  swift_release();
  uint64_t v3 = v43;
  uint64_t v26 = v45;
  if ((v51 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

void sub_1C2874198(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1C2872308((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C2875680();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1C28728F4(v12, a3 & 1);
  unint64_t v17 = sub_1C2872308((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
    sub_1C28CE680();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v15[2] = v22;

  id v23 = a2;
}

_OWORD *sub_1C287430C(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1C2872358((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1C28758EC();
      goto LABEL_7;
    }
    sub_1C2872BC4(v12, a3 & 1);
    unint64_t v18 = sub_1C2872358((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for CFString(0);
    uint64_t result = (_OWORD *)sub_1C28CE680();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    return sub_1C2807E74(a1, v16);
  }
LABEL_13:
  sub_1C2874D08(v9, (uint64_t)a2, a1, v15);

  return a2;
}

_OWORD *sub_1C2874450(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C27D3320(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C28761E8();
      goto LABEL_7;
    }
    sub_1C28735B4(v15, a4 & 1);
    unint64_t v21 = sub_1C27D3320(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1C28CE680();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    char v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    return sub_1C2807E74(a1, v19);
  }
LABEL_13:
  sub_1C2874D70(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1C28745A4(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1C2872528(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C287640C();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C28738D8(result, a3 & 1);
  uint64_t result = sub_1C2872528(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C28CE680();
  __break(1u);
  return result;
}

uint64_t sub_1C28746DC(char a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1C2872528(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C28765AC();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(unsigned char *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(unsigned char *)(v16[7] + v10) = a1 & 1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      void v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C2873AB8(result, a3 & 1);
  uint64_t result = sub_1C2872528(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C28CE680();
  __break(1u);
  return result;
}

uint64_t sub_1C2874810(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C28CC4B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_1C27C75A0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1C28768F0();
      goto LABEL_7;
    }
    sub_1C2873C78(v17, a3 & 1);
    unint64_t v28 = sub_1C27C75A0(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1C2874DDC(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1C28CE680();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = sub_1C28CC450();
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;

  return v24(v26, a1, v25);
}

unint64_t sub_1C2874A14(char a1, uint64_t a2, void *a3)
{
  sub_1C28CE700();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  sub_1C28CE740();
  unint64_t result = sub_1C28CE040();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_1C2874B8C(char a1, char a2, void *a3)
{
  sub_1C28CE700();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  sub_1C28CE740();
  unint64_t result = sub_1C28CE040();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(unsigned char *)(a3[7] + result) = a2 & 1;
  ++a3[2];
  return result;
}

_OWORD *sub_1C2874D08(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  unint64_t result = sub_1C2807E74(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_1C2874D70(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_1C2807E74(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1C2874DDC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C28CC4B0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_1C28CC450();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_1C2874ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_1C27C7638(&qword_1EA310FF8, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_1C28CC5E0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_1C28CC5E0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1C287502C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1C27F50FC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1C875F640](v9, a1);
      sub_1C2876CB0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C28750F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C2875190(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1C28CD730();
    uint64_t v8 = v7;
    if (v6 == sub_1C28CD730() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1C28CD730();
          uint64_t v15 = v14;
          if (v13 == sub_1C28CD730() && v15 == v16) {
            break;
          }
          char v18 = sub_1C28CE640();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1C2875308(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xD00000000000001CLL;
      unint64_t v8 = 0x80000001C28DAC20;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xD000000000000019;
          uint64_t v9 = "lowCardioFitnessNotification";
          goto LABEL_9;
        case 2:
          unint64_t v7 = 0xD000000000000018;
          uint64_t v9 = "highHeartRateNotification";
          goto LABEL_9;
        case 3:
          unint64_t v8 = 0x80000001C28DAC80;
          unint64_t v7 = 0xD000000000000011;
          break;
        case 4:
          unint64_t v7 = 0xD00000000000001DLL;
          uint64_t v9 = "trendNotification";
          goto LABEL_9;
        case 5:
          unint64_t v7 = 0xD00000000000001ELL;
          uint64_t v9 = "walkingSteadinessNotification";
LABEL_9:
          unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xD00000000000001CLL;
      unint64_t v11 = 0x80000001C28DAC20;
      switch(v6)
      {
        case 1:
          unint64_t v12 = 0xD000000000000019;
          uint64_t v13 = "lowCardioFitnessNotification";
          goto LABEL_18;
        case 2:
          unint64_t v12 = 0xD000000000000018;
          uint64_t v13 = "highHeartRateNotification";
          goto LABEL_18;
        case 3:
          unint64_t v11 = 0x80000001C28DAC80;
          unint64_t v10 = 0xD000000000000011;
          goto LABEL_14;
        case 4:
          unint64_t v12 = 0xD00000000000001DLL;
          uint64_t v13 = "trendNotification";
          goto LABEL_18;
        case 5:
          unint64_t v12 = 0xD00000000000001ELL;
          uint64_t v13 = "walkingSteadinessNotification";
LABEL_18:
          unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
          if (v7 == v12) {
            goto LABEL_19;
          }
          goto LABEL_20;
        default:
LABEL_14:
          if (v7 != v10) {
            goto LABEL_20;
          }
LABEL_19:
          if (v8 == v11)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_20:
          char v14 = sub_1C28CE640();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v14) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1C287556C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1C27D1C9C(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1C28CDF30();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1C28CDF30();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

id sub_1C2875680()
{
  uint64_t v1 = v0;
  sub_1C2876D6C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C28CE3C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    char v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1C2875824()
{
  if (!qword_1EBB75858)
  {
    sub_1C283A074();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB75858);
    }
  }
}

uint64_t sub_1C2875888(uint64_t a1, uint64_t a2)
{
  sub_1C283A074();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1C28758EC()
{
  uint64_t v1 = v0;
  sub_1C28080E8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C28CE3C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1C27D3780(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1C2807E74(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C2875AB0()
{
  uint64_t v1 = sub_1C28CC4B0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BA390(0, &qword_1EBB77138, (void (*)(uint64_t))type metadata accessor for MedicalIDCache);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C28CE3C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1C2875D60()
{
  uint64_t v36 = sub_1C28CC9B0();
  uint64_t v1 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2876D04();
  uint64_t v31 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1C28CE3C0();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v37 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v29 = v37;
    unint64_t v28 = v31;
LABEL_28:
    *unint64_t v28 = v29;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v37;
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  uint64_t v32 = v4 + 64;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v34 = v1 + 32;
  uint64_t v35 = v1 + 16;
  uint64_t v15 = v36;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    int64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v22, v15);
    uint64_t v23 = v37;
    uint64_t v24 = (void *)(*(void *)(v37 + 48) + v18);
    *uint64_t v24 = v20;
    v24[1] = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v23 + 56) + v22, v3, v15);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    id result = (void *)swift_release();
    unint64_t v28 = v31;
    uint64_t v29 = v37;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C287601C()
{
  uint64_t v1 = v0;
  sub_1C2808060(0, &qword_1EBB74CA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C28CE3C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    unint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    void *v22 = v21;
    v22[1] = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C28761E8()
{
  uint64_t v1 = v0;
  sub_1C2808060(0, (unint64_t *)&qword_1EBB742E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C28CE3C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1C27D3780(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_1C2807E74(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C28763F0()
{
  return sub_1C2876734(&qword_1EBB77140, (unint64_t *)&qword_1EBB77130);
}

void *sub_1C287640C()
{
  uint64_t v1 = v0;
  sub_1C28078A4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C28CE3C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C28765AC()
{
  uint64_t v1 = v0;
  sub_1C2807C18();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C28CE3C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C2876734(unint64_t *a1, unint64_t *a2)
{
  uint64_t v3 = v2;
  sub_1C27D40A0(0, a1, a2);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1C28CE3C0();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v3 = v6;
    return result;
  }
  id result = (id)(v5 + 64);
  uint64_t v8 = v4 + 64;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v8 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    int64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = v19[1];
    uint64_t v21 = 8 * v17;
    int64_t v22 = *(void **)(*(void *)(v4 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v6 + 48) + v18);
    *unint64_t v23 = *v19;
    v23[1] = v20;
    *(void *)(*(void *)(v6 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v8 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C28768F0()
{
  uint64_t v42 = sub_1C28CC450();
  uint64_t v45 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1C28CC4B0();
  uint64_t v44 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  BOOL v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BA390(0, (unint64_t *)&qword_1EA310608, MEMORY[0x1E4F27928]);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1C28CE3C0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v31 = v46;
    uint64_t v30 = v32;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  unint64_t v16 = v39;
  uint64_t v15 = v40;
  unint64_t v17 = v41;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v16, *(void *)(v21 + 48) + v22, v15);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    uint64_t v25 = v42;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v17, v24, v42);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v16, v15);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v17, v25);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C2876CB0(uint64_t a1)
{
  return a1;
}

void sub_1C2876D04()
{
  if (!qword_1EBB74C98)
  {
    sub_1C28CC9B0();
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74C98);
    }
  }
}

void sub_1C2876D6C()
{
  if (!qword_1EBB757F8)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76D90);
    sub_1C27D1C9C(255, &qword_1EBB76DB8);
    sub_1C2807F90();
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB757F8);
    }
  }
}

id ContactsMonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BA40]), sel_init);
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_1C28CD6F0();
    objc_msgSend(v14, sel_setGivenName_, v15);
    swift_bridgeObjectRelease();
  }
  if (a7)
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = (void *)sub_1C28CD6F0();
    objc_msgSend(v14, sel_setFamilyName_, v16);
    swift_bridgeObjectRelease();
  }
  id v17 = objc_msgSend(self, sel_defaultSettingsWithCacheSize_skipContactLookup_, 0, 1);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BB20]), sel_initWithSettings_, v17);
  id v19 = objc_msgSend(self, sel_scopeWithPointSize_scale_rightToLeft_style_, a8 & 1, 0, a1, a2, a3);
  sub_1C27D87FC();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C28D19D0;
  *(void *)(v20 + 32) = v14;
  sub_1C28CD940();
  sub_1C2877028();
  id v21 = v14;
  unint64_t v22 = (void *)sub_1C28CD910();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v18, sel_avatarImageForContacts_scope_, v22, v19);

  swift_unknownObjectRelease();
  return v23;
}

unint64_t sub_1C2877028()
{
  unint64_t result = qword_1EBB76F80;
  if (!qword_1EBB76F80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB76F80);
  }
  return result;
}

id sub_1C2877068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6, double a7, double a8)
{
  return ContactsMonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(a6, a7, a8, a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of MonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

ValueMetadata *type metadata accessor for ContactsMonogramRenderer()
{
  return &type metadata for ContactsMonogramRenderer;
}

uint64_t ElectrocardiogramAlgorithmVersionPublisher.init(healthStore:queue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ElectrocardiogramAlgorithmVersionPublisher.receive<A>(subscriber:)(uint64_t a1)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void **)(v1 + 8);
  uint64_t v5 = type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner();
  id v6 = v3;
  id v7 = v4;
  id v8 = sub_1C28781BC(a1, v6, v7);

  void v10[3] = v5;
  void v10[4] = swift_getWitnessTable();
  v10[0] = v8;
  sub_1C28CD000();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
}

uint64_t type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2877190@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68);
  swift_beginAccess();
  uint64_t v4 = sub_1C28CCCD0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C2877264(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x68);
  swift_beginAccess();
  uint64_t v4 = sub_1C28CCCD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1C2877340())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C28773B8()
{
  return sub_1C2877774((uint64_t)&unk_1F1DDF858, (uint64_t)sub_1C28784A8, (uint64_t)&block_descriptor_11);
}

void sub_1C28773E0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8760AB0](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_1C287746C();
    objc_msgSend(*(id *)((char *)v3 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x78)), sel_addHeartRhythmAvailabilityObserver_, v3);
  }
}

uint64_t sub_1C287746C()
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  sub_1C28CCCB0();
  swift_getWitnessTable();
  uint64_t v2 = sub_1C28CE7E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - v4;
  id v6 = self;
  uint64_t v7 = *(void *)((char *)v0 + *(void *)((*v1 & *v0) + 0x70));
  id v14 = 0;
  id v8 = objc_msgSend(v6, sel_versionWithHealthStore_error_, v7, &v14);
  int64_t v9 = v8;
  if (v14)
  {
    id v10 = v14;

    swift_willThrow();
    id v14 = 0;
    BOOL v15 = 1;
    type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner();
    swift_getWitnessTable();
    sub_1C28CCC70();
  }
  else
  {
    if (v8) {
      id v11 = objc_msgSend(v8, sel_integerValue);
    }
    else {
      id v11 = 0;
    }
    id v14 = v11;
    BOOL v15 = v9 == 0;
    type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner();
    swift_getWitnessTable();
    sub_1C28CCC70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1C2877714()
{
  return objc_msgSend(*(id *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78)), sel_removeHeartRhythmAvailabilityObserver_, v0);
}

uint64_t sub_1C287774C()
{
  return sub_1C2877774((uint64_t)&unk_1F1DDF808, (uint64_t)sub_1C287849C, (uint64_t)&block_descriptor_13);
}

uint64_t sub_1C2877774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v17[0] = a3;
  uint64_t v5 = (void *)(*MEMORY[0x1E4FBC8C8] & *v3);
  uint64_t v6 = sub_1C28CD500();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C28CD520();
  uint64_t v10 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  unint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)((char *)v3 + v5[16]);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v14 = (void *)swift_allocObject();
  v14[2] = v5[10];
  v14[3] = v5[11];
  v14[4] = v13;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C27BC934;
  aBlock[3] = v17[0];
  BOOL v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1C28CD510();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1C28784B4((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
  sub_1C281D538();
  sub_1C28784B4((unint64_t *)&qword_1EBB77308, (void (*)(uint64_t))sub_1C281D538);
  sub_1C28CE020();
  MEMORY[0x1C875F420](0, v12, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

void sub_1C2877AB0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8760AB0](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_1C287746C();
  }
}

void sub_1C2877B04(void *a1)
{
  id v1 = a1;
  sub_1C287774C();
}

void sub_1C2877B4C()
{
}

id sub_1C2877B90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2877C04(void *a1)
{
  objc_super v2 = (void *)MEMORY[0x1E4FBC8C8];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x60));
  uint64_t v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x68);
  uint64_t v4 = sub_1C28CCCD0();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = *(void **)((char *)a1 + *(void *)((*v2 & *a1) + 0x80));
}

void (*sub_1C2877D5C(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C2877340();
  return sub_1C27F17E4;
}

uint64_t sub_1C2877DB4()
{
  type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner();

  return sub_1C28CCC70();
}

uint64_t sub_1C2877E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner();

  return MEMORY[0x1F411F0C0](a1, v5, a3);
}

uint64_t sub_1C2877E7C()
{
  return sub_1C28CCCA0();
}

uint64_t sub_1C2877ED4()
{
  return sub_1C28CCC90();
}

id sub_1C2877F20(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a3;
  uint64_t v22 = a1;
  uint64_t v6 = *MEMORY[0x1E4FBC8C8] & *(void *)v3;
  uint64_t v21 = sub_1C28CCCD0();
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  int64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = (uint64_t *)&v4[*(void *)(v6 + 96)];
  uint64_t v11 = sub_1C28CC650();
  swift_allocObject();
  unint64_t v12 = v4;
  uint64_t v13 = sub_1C28CC640();
  void v10[3] = v11;
  void v10[4] = sub_1C28784B4(qword_1EBB75F38, MEMORY[0x1E4F66F68]);
  *uint64_t v10 = v13;
  id v14 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)&v12[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v12) + 0x70)] = a2;
  *(void *)&v12[*(void *)((*v14 & *(void *)v12) + 0x78)] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0F8]), sel_initWithHealthStore_, a2);
  BOOL v15 = v20;
  *(void *)&v12[*(void *)((*v14 & *(void *)v12) + 0x80)] = v20;
  id v16 = v15;
  sub_1C28CCCC0();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[*(void *)((*v14 & *(void *)v12) + 0x68)], v9, v21);

  id v17 = (objc_class *)type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner();
  v23.receiver = v12;
  v23.super_class = v17;
  return objc_msgSendSuper2(&v23, sel_init);
}

id sub_1C28781BC(uint64_t a1, void *a2, void *a3)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner());
  return sub_1C2877F20(a1, a2, a3);
}

void *initializeBufferWithCopyOfBuffer for ElectrocardiogramAlgorithmVersionPublisher(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ElectrocardiogramAlgorithmVersionPublisher(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for ElectrocardiogramAlgorithmVersionPublisher(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ElectrocardiogramAlgorithmVersionPublisher(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher()
{
  return &type metadata for ElectrocardiogramAlgorithmVersionPublisher;
}

uint64_t sub_1C2878328()
{
  uint64_t result = sub_1C28CCCD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C28783D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C28783F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2878410()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C287842C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C2878464()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C287849C()
{
  sub_1C2877AB0(*(void *)(v0 + 32));
}

void sub_1C28784A8()
{
  sub_1C28773E0(*(void *)(v0 + 32));
}

uint64_t sub_1C28784B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t NSFileManager.setExtendedAttribute<A>(named:at:with:)()
{
  return sub_1C28CC300();
}

uint64_t NSFileManager.uint64ExtendedAttribute(named:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C28CC300();
  if (!v3)
  {
    a3 = v6;
    sub_1C27E2870(v6, v7);
  }
  return a3;
}

unint64_t NSFileManager.ExtendedAttributeError.errorDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CBE50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NSFileManager.ExtendedAttributeError();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C287A408(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *((void *)v8 + 2);
    sub_1C27EAF00();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v10 + 64)], v2);
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1C28CE120();
    sub_1C28CD7C0();
    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    sub_1C28CD7C0();
    v13[1] = v9;
    sub_1C28CE610();
    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    sub_1C28CD7C0();
    sub_1C28CE270();
    unint64_t v11 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1C28CE120();
    swift_bridgeObjectRelease();
    unint64_t v14 = 0xD000000000000019;
    unint64_t v15 = 0x80000001C28DD240;
    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    sub_1C28CD7C0();
    return v14;
  }
  return v11;
}

uint64_t sub_1C28788C8@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = sub_1C28CD770();
  ssize_t v10 = getxattr(a1, (const char *)(v9 + 32), 0, 0, 0, 0);
  swift_release();
  if (v10 < 1)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    sub_1C287A354(&qword_1EA310198, (void (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError);
    swift_allocError();
    *unint64_t v14 = a2;
    v14[1] = a3;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    uint64_t v15 = sub_1C287A534(v10);
    unint64_t v16 = v11;
    swift_bridgeObjectRetain();
    sub_1C2879488(&v15, a1, a2, a3, v10);
    uint64_t result = v15;
    unint64_t v13 = v16;
    if (v4)
    {
      return sub_1C27E2870(v15, v16);
    }
    else
    {
      *a4 = v15;
      a4[1] = v13;
    }
  }
  return result;
}

void sub_1C2878A24(void *a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, size_t a6)
{
  uint64_t v11 = sub_1C28CD770();
  ssize_t v12 = getxattr(a3, (const char *)(v11 + 32), a1, a6, 0, 0);
  swift_release();
  if (v12 < 1)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    sub_1C287A354(&qword_1EA310198, (void (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError);
    unint64_t v13 = (void *)swift_allocError();
    *unint64_t v14 = a4;
    v14[1] = a5;
    v14[2] = v12;
    uint64_t v15 = swift_bridgeObjectRetain();
    MEMORY[0x1C875E3D0](v15);
    if ((sub_1C28CCE20() & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      sub_1C27EAF00();
      sub_1C28CBE50();
      sub_1C287918C(MEMORY[0x1E4FBC860]);
      sub_1C287A354(&qword_1EA3101A8, MEMORY[0x1E4F26C30]);
      sub_1C28CC270();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

uint64_t sub_1C2878BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = MEMORY[0x1F4188790]();
  unint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v12, v12 + *(void *)(*(void *)(v15 - 8) + 64), v14);
  if (v8) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  }
  return result;
}

void sub_1C2878CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v16[2] = a1;
  v16[3] = a3;
  v16[4] = a4;
  sub_1C2878BD4(a2, (uint64_t)sub_1C287A5D4, (uint64_t)v16, a5, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC150], MEMORY[0x1E4FBC278], a8);
  uint64_t v10 = v17;
  if (v17 < 0)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    sub_1C287A354(&qword_1EA310198, (void (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError);
    uint64_t v11 = (void *)swift_allocError();
    *uint64_t v12 = a3;
    v12[1] = a4;
    v12[2] = v10;
    uint64_t v13 = swift_bridgeObjectRetain();
    MEMORY[0x1C875E3D0](v13);
    uint64_t v14 = sub_1C28CCE20();
    if ((v14 & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      int v15 = v14;
      sub_1C27EAF00();
      sub_1C28CBE50();
      int v17 = v15;
      sub_1C287918C(MEMORY[0x1E4FBC860]);
      sub_1C287A354(&qword_1EA3101A8, MEMORY[0x1E4F26C30]);
      sub_1C28CC270();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

void sub_1C2878E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1C2878CC8(a1, v8[3], v8[4], v8[5], v8[2], a6, a7, a8);
}

uint64_t type metadata accessor for NSFileManager.ExtendedAttributeError()
{
  uint64_t result = qword_1EA311060;
  if (!qword_1EA311060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2878EF0@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, int *a4@<X8>)
{
  if (a1) {
    size_t v7 = a2 - (void)a1;
  }
  else {
    size_t v7 = 0;
  }
  uint64_t v8 = sub_1C28CD770();
  int v9 = setxattr(a3, (const char *)(v8 + 32), a1, v7, 0, 0);
  uint64_t result = swift_release();
  *a4 = v9;
  return result;
}

uint64_t NSFileManager.removeExtendedAttribute(named:at:)()
{
  return sub_1C28CC300();
}

uint64_t sub_1C2878FCC(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CD770();
  int v7 = removexattr(a1, (const char *)(v6 + 32), 0);
  uint64_t result = swift_release();
  if (v7 < 0)
  {
    MEMORY[0x1C875E3D0](result);
    uint64_t result = sub_1C28CCE20();
    if ((result & 0x100000000) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_1C28CBE40();
      int v9 = sub_1C28CCE30();
      uint64_t result = sub_1C28CCE30();
      if (v9 != result)
      {
        type metadata accessor for NSFileManager.ExtendedAttributeError();
        sub_1C287A354(&qword_1EA310198, (void (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError);
        swift_allocError();
        uint64_t v11 = v10;
        sub_1C27EAF00();
        *uint64_t v11 = a2;
        v11[1] = a3;
        v11[2] = v7;
        sub_1C28CBE50();
        swift_bridgeObjectRetain();
        sub_1C287918C(MEMORY[0x1E4FBC860]);
        sub_1C287A354(&qword_1EA3101A8, MEMORY[0x1E4F26C30]);
        sub_1C28CC270();
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
    }
  }
  return result;
}

unint64_t sub_1C287918C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C287A39C();
  uint64_t v2 = sub_1C28CE3F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C287A408(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_1C27E6AA4);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C28792C8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C2807E74(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C28792C8(uint64_t a1, uint64_t a2)
{
  sub_1C28CE700();
  sub_1C28CD790();
  uint64_t v4 = sub_1C28CE740();

  return sub_1C2879340(a1, a2, v4);
}

unint64_t sub_1C2879340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1C28CE640() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1C28CE640() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1C28CE640()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1C2879488(void *a1, const char *a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = a1[1];
  switch(v5 >> 62)
  {
    case 1uLL:
      *(void *)&long long v31 = *a1;
      *((void *)&v31 + 1) = v5 & 0x3FFFFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain();
      sub_1C2879730((int *)&v31, a2, a3, a4, a5);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v17 = *((void *)&v31 + 1) | 0x4000000000000000;
      *a1 = v31;
      a1[1] = v17;
      return result;
    case 2uLL:
      *(void *)&long long v31 = *a1;
      *((void *)&v31 + 1) = v5 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1C28CC340();
      uint64_t v18 = *((void *)&v31 + 1);
      uint64_t v19 = *(void *)(v31 + 16);
      uint64_t v30 = *(void *)(v31 + 24);
      uint64_t v20 = sub_1C28CC070();
      if (!v20)
      {
        __break(1u);
        JUMPOUT(0x1C2879720);
      }
      uint64_t v21 = v20;
      uint64_t v22 = sub_1C28CC0A0();
      uint64_t v23 = v19 - v22;
      if (__OFSUB__(v19, v22))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v24 = __OFSUB__(v30, v19);
      uint64_t v25 = v30 - v19;
      if (v24) {
        goto LABEL_14;
      }
      uint64_t v26 = sub_1C28CC090();
      if (v26 >= v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = v26;
      }
      sub_1C2878A24((void *)(v21 + v23), v21 + v23 + v27, a2, a3, a4, a5);
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v31;
      a1[1] = v18 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v31 + 7) = 0;
      *(void *)&long long v31 = 0;
      sub_1C2878A24(&v31, (uint64_t)&v31, a2, a3, a4, a5);
      return swift_bridgeObjectRelease();
    default:
      *(void *)&long long v31 = *a1;
      WORD4(v31) = v5;
      BYTE10(v31) = BYTE2(v5);
      BYTE11(v31) = BYTE3(v5);
      BYTE12(v31) = BYTE4(v5);
      BYTE13(v31) = BYTE5(v5);
      BYTE14(v31) = BYTE6(v5);
      sub_1C2878A24(&v31, (uint64_t)&v31 + BYTE6(v5), a2, a3, a4, a5);
      uint64_t v11 = v31;
      uint64_t v12 = DWORD2(v31);
      uint64_t v13 = BYTE12(v31);
      uint64_t v14 = BYTE13(v31);
      uint64_t v15 = BYTE14(v31);
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = v11;
      a1[1] = v12 | (v13 << 32) | (v14 << 40) | (v15 << 48);
      return result;
  }
}

uint64_t sub_1C2879730(int *a1, const char *a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t result = sub_1C28CC350();
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  if ((int)v11 < (int)v12)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v18 = a4;
  uint64_t v19 = a2;
  uint64_t result = sub_1C28CC070();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v13 = result;
  uint64_t result = sub_1C28CC0A0();
  uint64_t v14 = v12 - result;
  if (__OFSUB__(v12, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v15 = v11 - v12;
  uint64_t v16 = sub_1C28CC090();
  if (v16 >= v15) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = v16;
  }
  sub_1C2878A24((void *)(v13 + v14), v13 + v14 + v17, v19, a3, v18, a5);
  return swift_bridgeObjectRelease();
}

uint64_t _sSo13NSFileManagerC16HealthExperienceE22ExtendedAttributeErrorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_1C28CBE50();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = type metadata accessor for NSFileManager.ExtendedAttributeError();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v45 - v13);
  sub_1C287A470();
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = &v18[*(int *)(v16 + 56)];
  sub_1C287A408(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError);
  sub_1C287A408(v50, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = v49;
    int64_t v47 = v6;
    uint64_t v48 = v8;
    uint64_t v50 = v3;
    sub_1C287A408((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError);
    uint64_t v21 = *(void *)v12;
    uint64_t v22 = *((void *)v12 + 1);
    uint64_t v23 = *((void *)v12 + 2);
    sub_1C27EAF00();
    uint64_t v25 = *(int *)(v24 + 64);
    uint64_t v26 = &v12[v25];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v27 = *((void *)v19 + 1);
      uint64_t v45 = *((void *)v19 + 2);
      uint64_t v46 = v23;
      int64_t v29 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      uint64_t v30 = v50;
      v29(v48, v26, v50);
      long long v31 = v47;
      v29(v47, &v19[v25], v30);
      if (v21 == v28 && v22 == v27)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v35 = v48;
        uint64_t v34 = v49;
      }
      else
      {
        char v33 = sub_1C28CE640();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = v48;
        uint64_t v34 = v49;
        if ((v33 & 1) == 0) {
          goto LABEL_20;
        }
      }
      if (v46 == v45)
      {
        sub_1C287A354(&qword_1EA3101A8, MEMORY[0x1E4F26C30]);
        LOBYTE(v40) = sub_1C28CC240();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v34 + 8);
        v42(v31, v30);
        v42(v35, v30);
LABEL_22:
        uint64_t v41 = (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError;
        goto LABEL_23;
      }
LABEL_20:
      uint64_t v43 = *(void (**)(char *, uint64_t))(v34 + 8);
      v43(v31, v30);
      v43(v35, v30);
      LOBYTE(v40) = 0;
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(&v12[v25], v50);
  }
  else
  {
    sub_1C287A408((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError);
    uint64_t v36 = *v14;
    uint64_t v37 = v14[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v36 == *(void *)v19 && v37 == *((void *)v19 + 1))
      {
        swift_bridgeObjectRelease_n();
        LOBYTE(v40) = 1;
      }
      else
      {
        int v39 = sub_1C28CE640();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v40 = v39 << 31 >> 31;
      }
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  LOBYTE(v40) = 0;
  uint64_t v41 = (uint64_t (*)(void))sub_1C287A470;
LABEL_23:
  sub_1C287A4D4((uint64_t)v18, v41);
  return v40 & 1;
}

uint64_t sub_1C2879C98(const char *a1)
{
  return sub_1C2878FCC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C2879CB4()
{
  return sub_1C287A354(&qword_1EA310198, (void (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError);
}

uint64_t *_s22ExtendedAttributeErrorOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      sub_1C27EAF00();
      uint64_t v9 = *(int *)(v8 + 64);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1C28CBE50();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s22ExtendedAttributeErrorOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C27EAF00();
    uint64_t v5 = a1 + *(int *)(v4 + 64);
    uint64_t v6 = sub_1C28CBE50();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

void *_s22ExtendedAttributeErrorOwcp(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    a1[2] = a2[2];
    sub_1C27EAF00();
    uint64_t v7 = *(int *)(v6 + 64);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C28CBE50();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s22ExtendedAttributeErrorOwca(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C287A4D4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      sub_1C27EAF00();
      uint64_t v6 = *(int *)(v5 + 64);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1C28CBE50();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s22ExtendedAttributeErrorOwtk(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    sub_1C27EAF00();
    uint64_t v7 = *(int *)(v6 + 64);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C28CBE50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s22ExtendedAttributeErrorOwta(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C287A4D4((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      sub_1C27EAF00();
      uint64_t v7 = *(int *)(v6 + 64);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C28CBE50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C287A2A0()
{
  v2[4] = &unk_1C28D7B58;
  uint64_t result = sub_1C28CBE50();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C287A354(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C287A39C()
{
  if (!qword_1EBB742E8)
  {
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB742E8);
    }
  }
}

uint64_t sub_1C287A408(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C287A470()
{
  if (!qword_1EA311070)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA311070);
    }
  }
}

uint64_t sub_1C287A4D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C287A534(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_1C28CC0B0();
      swift_allocObject();
      sub_1C28CC080();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1C28CC370();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1C287A5D4@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, int *a3@<X8>)
{
  return sub_1C2878EF0(a1, a2, *(const char **)(v3 + 16), a3);
}

uint64_t sub_1C287A5F8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1C287A640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2881588(a1, a2, a3);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C28CDF70();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(a1, v4);
}

uint64_t HKKeyValueDomainAccessor.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2881588(a1, a2, a3);
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C28CDF70();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(a1, v4);
}

void (*sub_1C287A774(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HKKeyValueDomainAccessor.value.modify(v6, a2, a3);
  return sub_1C27F17E4;
}

void (*HKKeyValueDomainAccessor.value.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *uint64_t v7 = a2;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C28CDF70();
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v7[6] = v11;
  _s16HealthExperience24HKKeyValueDomainAccessorPAAE5value0D0QzSgvg_0(a2, a3, (uint64_t)v11);
  return sub_1C287A8E8;
}

void sub_1C287A8E8(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v7 = (uint64_t (**)(void, id))(*a1)[1];
  uint64_t v8 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_1C287D430((uint64_t)v3, v8, v7);
    uint64_t v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    sub_1C287D430((*a1)[6], v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_1C287A9E0()
{
  uint64_t v1 = sub_1C28CCE10();
  MEMORY[0x1F4188790](v1);
  id v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C28CDD90();

  swift_bridgeObjectRelease();
  sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB75698);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 2;
  }
}

uint64_t sub_1C287AD38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C28CCE10();
  MEMORY[0x1F4188790](v3);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v4);
  id v5 = *(id *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1C28CDDB0();

  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C28CC450();
  if (swift_dynamicCast())
  {
    uint64_t v7 = a1;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v7, v8, 1, v6);
}

uint64_t sub_1C287B11C()
{
  uint64_t v1 = sub_1C28CCE10();
  MEMORY[0x1F4188790](v1);
  id v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C28CDDE0();

  swift_bridgeObjectRelease();
  sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB76D80);
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C287B468()
{
  uint64_t v1 = sub_1C28CCE10();
  MEMORY[0x1F4188790](v1);
  id v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C28CDDD0();

  swift_bridgeObjectRelease();
  sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB769F0);
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t _s16HealthExperience24HKKeyValueDomainAccessorPAAE5value0D0QzSgvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v9);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = AssociatedTypeWitness;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  uint64_t v49 = v6;
  uint64_t v50 = a3;
  if (AssociatedTypeWitness == MEMORY[0x1E4FBB1A0])
  {
    uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    uint64_t v15 = sub_1C28CDDD0();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();

    uint64_t v51 = v15;
    uint64_t v52 = v17;
    uint64_t v18 = &qword_1EBB769F0;
LABEL_16:
    sub_1C27EDD7C(0, (unint64_t *)v18);
    uint64_t v41 = v50;
    int v42 = swift_dynamicCast();
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v34 = v42 ^ 1u;
    uint64_t v33 = v41;
    goto LABEL_17;
  }
  uint64_t v12 = MEMORY[0x1E4FBB550];
  if (AssociatedTypeWitness == MEMORY[0x1E4FBB550])
  {
    uint64_t v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    uint64_t v38 = sub_1C28CDDE0();
    char v40 = v39;
    swift_bridgeObjectRelease();

    uint64_t v51 = v38;
    LOBYTE(v52) = v40 & 1;
    uint64_t v18 = &qword_1EBB76D80;
    goto LABEL_16;
  }
  uint64_t v12 = MEMORY[0x1E4FBB390];
  if (AssociatedTypeWitness == MEMORY[0x1E4FBB390])
  {
    uint64_t v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    char v44 = sub_1C28CDD90();
    swift_bridgeObjectRelease();

    LOBYTE(v51) = v44;
    sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB75698);
    int v45 = swift_dynamicCast();
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v34 = v45 ^ 1u;
    uint64_t v33 = a3;
LABEL_17:
    uint64_t v35 = v12;
    return v32(v33, v34, 1, v35);
  }
  if (AssociatedTypeWitness == sub_1C28CC450())
  {
    uint64_t v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    id v47 = v37;
    sub_1C28CDDB0();
    swift_bridgeObjectRelease();

    int v46 = swift_dynamicCast();
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    if (v46)
    {
      uint64_t v33 = a3;
      uint64_t v34 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    sub_1C2881B74();
    uint64_t v13 = (void *)swift_allocError();
    swift_willThrow();
    sub_1C28CCDC0();
    id v20 = v13;
    id v21 = v13;
    uint64_t v22 = sub_1C28CCE00();
    os_log_type_t v23 = sub_1C28CDCB0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v51 = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t v53 = a1;
      swift_getMetatypeMetadata();
      uint64_t v27 = sub_1C28CD750();
      uint64_t v53 = sub_1C27D36AC(v27, v28, &v51);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v53 = (uint64_t)v13;
      id v29 = v13;
      sub_1C27C7060();
      uint64_t v30 = sub_1C28CD750();
      uint64_t v53 = sub_1C27D36AC(v30, v31, &v51);
      sub_1C28CDF90();
      a3 = v50;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v22, v23, "[%{public}s]: Unable to Get Value. Error: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v26, -1, -1);
      MEMORY[0x1C87609B0](v25, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v49);
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  }
  uint64_t v33 = a3;
  uint64_t v34 = 1;
LABEL_13:
  uint64_t v35 = v11;
  return v32(v33, v34, 1, v35);
}

id sub_1C287BE34(unsigned __int8 a1)
{
  int v2 = a1;
  v27[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(id *)(v1 + 16);
  swift_bridgeObjectRetain();
  if (v2 == 2)
  {
    uint64_t v8 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    v27[0] = 0;
    unsigned int v9 = objc_msgSend(v7, sel_setString_forKey_error_, 0, v8, v27);

    id v10 = v27[0];
    if (v9)
    {
      return v10;
    }
    else
    {
      v25[1] = v27[0];
      id v12 = v27[0];
      uint64_t v13 = (void *)sub_1C28CC290();

      swift_willThrow();
      sub_1C28CCDC0();
      id v14 = v13;
      id v15 = v13;
      uint64_t v16 = sub_1C28CCE00();
      os_log_type_t v17 = sub_1C28CDCB0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = (void *)swift_slowAlloc();
        v27[0] = v19;
        *(_DWORD *)uint64_t v18 = 136446466;
        uint64_t v26 = type metadata accessor for HKKeyValueDomainBoolValue();
        sub_1C2881BC8(0, &qword_1EA3110A8, (void (*)(void))type metadata accessor for HKKeyValueDomainBoolValue);
        uint64_t v20 = sub_1C28CD750();
        uint64_t v26 = sub_1C27D36AC(v20, v21, (uint64_t *)v27);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2080;
        uint64_t v26 = (uint64_t)v13;
        id v22 = v13;
        sub_1C27C7060();
        uint64_t v23 = sub_1C28CD750();
        uint64_t v26 = sub_1C27D36AC(v23, v24, (uint64_t *)v27);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C27B7000, v16, v17, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v19, -1, -1);
        MEMORY[0x1C87609B0](v18, -1, -1);
      }
      else
      {
      }
      return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    sub_1C28CDE00();

    return (id)swift_bridgeObjectRelease();
  }
}

id sub_1C287C25C(uint64_t a1)
{
  uint64_t v2 = v1;
  v79[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C2881AF4(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v73 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  MEMORY[0x1F4188790](v6);
  long long v77 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  uint64_t v71 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v69 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v66 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v68 = (char *)&v66 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v70 = (uint64_t)&v66 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v66 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v66 - v24;
  sub_1C27BBDA4(a1, (uint64_t)&v66 - v24);
  uint64_t v26 = sub_1C28CC450();
  long long v74 = *(void **)(v26 - 8);
  uint64_t v27 = (uint64_t (*)(char *, uint64_t, uint64_t))v74[6];
  int v28 = v27(v25, 1, v26);
  sub_1C2881B14((uint64_t)v25, (uint64_t (*)(void))sub_1C27BBE08);
  if (v28 != 1)
  {
    sub_1C27BBDA4(a1, (uint64_t)v23);
    int v34 = v27(v23, 1, v26);
    sub_1C2881B14((uint64_t)v23, (uint64_t (*)(void))sub_1C27BBE08);
    if (v34 == 1)
    {
      id v35 = *(id *)(v2 + 16);
      swift_bridgeObjectRetain();
      sub_1C28CDD80();
    }
    else
    {
      sub_1C27BBDA4(a1, (uint64_t)v20);
      int v50 = v27(v20, 1, v26);
      sub_1C2881B14((uint64_t)v20, (uint64_t (*)(void))sub_1C27BBE08);
      if (v50 != 1)
      {
        sub_1C27BBDA4(a1, (uint64_t)v13);
        if (v27(v13, 1, v26) == 1)
        {
          sub_1C2881B14((uint64_t)v13, (uint64_t (*)(void))sub_1C27BBE08);
          uint64_t v51 = (uint64_t)v73;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v74[7])(v73, 1, 1, v26);
          uint64_t v38 = v77;
        }
        else
        {
          uint64_t v52 = v74;
          uint64_t v53 = (uint64_t)v68;
          uint64_t v67 = (void (*)(char *, char *, uint64_t))v74[4];
          v67(v68, v13, v26);
          uint64_t v54 = (void (*)(uint64_t, void, uint64_t, uint64_t))v52[7];
          v54(v53, 0, 1, v26);
          int v55 = v27((char *)v53, 1, v26);
          uint64_t v38 = v77;
          uint64_t v51 = (uint64_t)v73;
          if (v55 == 1)
          {
            sub_1C2881B14(v53, (uint64_t (*)(void))sub_1C27BBE08);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v51, 1, 1, v72);
            sub_1C2881B14(v51, (uint64_t (*)(void))sub_1C2881AF4);
            sub_1C2881B74();
            uint64_t v37 = (void *)swift_allocError();
            swift_willThrow();
            goto LABEL_9;
          }
          v67(v73, (char *)v53, v26);
          v54(v51, 0, 1, v26);
        }
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v51, 0, 1, v72);
        uint64_t v56 = v70;
        sub_1C288179C(v51, v70);
        uint64_t v57 = *(void **)(v2 + 16);
        uint64_t v58 = v69;
        sub_1C27BBDA4(v56, v69);
        int v59 = v27((char *)v58, 1, v26);
        id v60 = v57;
        if (v59 == 1)
        {
          uint64_t v61 = 0;
        }
        else
        {
          uint64_t v61 = (void *)sub_1C28CC3F0();
          ((void (*)(uint64_t, uint64_t))v74[1])(v58, v26);
        }
        swift_bridgeObjectRetain();
        uint64_t v62 = (void *)sub_1C28CD6F0();
        swift_bridgeObjectRelease();
        v79[0] = 0;
        unsigned int v63 = objc_msgSend(v60, sel_setDate_forKey_error_, v61, v62, v79);

        id v64 = v79[0];
        if (v63) {
          return (id)sub_1C2881B14(v56, (uint64_t (*)(void))sub_1C27BBE08);
        }
        BOOL v65 = v64;
        uint64_t v37 = (void *)sub_1C28CC290();

        swift_willThrow();
        sub_1C2881B14(v56, (uint64_t (*)(void))sub_1C27BBE08);
        goto LABEL_9;
      }
      id v35 = *(id *)(v2 + 16);
      swift_bridgeObjectRetain();
      sub_1C28CDE00();
    }

    return (id)swift_bridgeObjectRelease();
  }
  id v29 = *(id *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v30 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  v79[0] = 0;
  unsigned int v31 = objc_msgSend(v29, sel_setString_forKey_error_, 0, v30, v79);

  id v32 = v79[0];
  if (v31)
  {
    return v32;
  }
  long long v74 = v79[0];
  id v36 = v79[0];
  uint64_t v37 = (void *)sub_1C28CC290();

  swift_willThrow();
  uint64_t v38 = v77;
LABEL_9:
  sub_1C28CCDC0();
  id v39 = v37;
  id v40 = v37;
  uint64_t v41 = sub_1C28CCE00();
  os_log_type_t v42 = sub_1C28CDCB0();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    char v44 = (void *)swift_slowAlloc();
    v79[0] = v44;
    *(_DWORD *)uint64_t v43 = 136446466;
    uint64_t v78 = type metadata accessor for HKKeyValueDomainDateValue();
    sub_1C2881BC8(0, &qword_1EA3110A0, (void (*)(void))type metadata accessor for HKKeyValueDomainDateValue);
    uint64_t v45 = sub_1C28CD750();
    uint64_t v78 = sub_1C27D36AC(v45, v46, (uint64_t *)v79);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    uint64_t v78 = (uint64_t)v37;
    id v47 = v37;
    sub_1C27C7060();
    uint64_t v48 = sub_1C28CD750();
    uint64_t v78 = sub_1C27D36AC(v48, v49, (uint64_t *)v79);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v41, v42, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v44, -1, -1);
    MEMORY[0x1C87609B0](v43, -1, -1);
  }
  else
  {
  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v38, v76);
}

id sub_1C287CC34(uint64_t a1, char a2)
{
  v28[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(id *)(v2 + 16);
  swift_bridgeObjectRetain();
  if (a2)
  {
    uint64_t v9 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    v28[0] = 0;
    unsigned int v10 = objc_msgSend(v8, sel_setString_forKey_error_, 0, v9, v28);

    id v11 = v28[0];
    if (v10)
    {
      return v11;
    }
    else
    {
      v26[1] = v28[0];
      id v13 = v28[0];
      uint64_t v14 = (void *)sub_1C28CC290();

      swift_willThrow();
      sub_1C28CCDC0();
      id v15 = v14;
      id v16 = v14;
      uint64_t v17 = sub_1C28CCE00();
      os_log_type_t v18 = sub_1C28CDCB0();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = (void *)swift_slowAlloc();
        v28[0] = v20;
        *(_DWORD *)uint64_t v19 = 136446466;
        uint64_t v27 = type metadata accessor for HKKeyValueDomainIntegerValue();
        sub_1C2881BC8(0, &qword_1EA311098, (void (*)(void))type metadata accessor for HKKeyValueDomainIntegerValue);
        uint64_t v21 = sub_1C28CD750();
        uint64_t v27 = sub_1C27D36AC(v21, v22, (uint64_t *)v28);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2080;
        uint64_t v27 = (uint64_t)v14;
        id v23 = v14;
        sub_1C27C7060();
        uint64_t v24 = sub_1C28CD750();
        uint64_t v27 = sub_1C27D36AC(v24, v25, (uint64_t *)v28);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C27B7000, v17, v18, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v20, -1, -1);
        MEMORY[0x1C87609B0](v19, -1, -1);
      }
      else
      {
      }
      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    sub_1C28CDD80();

    return (id)swift_bridgeObjectRelease();
  }
}

id sub_1C287D05C(uint64_t a1, uint64_t a2)
{
  v30[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *(void **)(v2 + 16);
  id v9 = v8;
  if (a2)
  {
    swift_bridgeObjectRetain();
    unsigned int v10 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v10 = 0;
  }
  swift_bridgeObjectRetain();
  id v11 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  v30[0] = 0;
  unsigned int v12 = objc_msgSend(v8, sel_setString_forKey_error_, v10, v11, v30);

  id v13 = v30[0];
  if (v12)
  {
    return v13;
  }
  else
  {
    v28[1] = v30[0];
    id v15 = v30[0];
    id v16 = (void *)sub_1C28CC290();

    swift_willThrow();
    sub_1C28CCDC0();
    id v17 = v16;
    id v18 = v16;
    uint64_t v19 = sub_1C28CCE00();
    os_log_type_t v20 = sub_1C28CDCB0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      unint64_t v22 = (void *)swift_slowAlloc();
      v30[0] = v22;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v29 = type metadata accessor for HKKeyValueDomainStringValue();
      sub_1C2881BC8(0, &qword_1EA311088, (void (*)(void))type metadata accessor for HKKeyValueDomainStringValue);
      uint64_t v23 = sub_1C28CD750();
      uint64_t v29 = sub_1C27D36AC(v23, v24, (uint64_t *)v30);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v29 = (uint64_t)v16;
      id v25 = v16;
      sub_1C27C7060();
      uint64_t v26 = sub_1C28CD750();
      uint64_t v29 = sub_1C27D36AC(v26, v27, (uint64_t *)v30);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v19, v20, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v22, -1, -1);
      MEMORY[0x1C87609B0](v21, -1, -1);
    }
    else
    {
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_1C287D430(uint64_t a1, uint64_t a2, uint64_t (**a3)(void, id))
{
  v92[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v87 = v6;
  MEMORY[0x1F4188790](v6);
  id v90 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2881AF4(0);
  MEMORY[0x1F4188790](v8 - 8);
  id v83 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  uint64_t v81 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v79 = (uint64_t)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v78 = (char *)&v78 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v80 = (uint64_t)&v78 - v15;
  id v88 = a3;
  uint64_t v89 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_1C28CDF70();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  long long v84 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v78 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v78 - v25;
  MEMORY[0x1F4188790](v24);
  int v28 = (char *)&v78 - v27;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v85 = a1;
  v29((char *)&v78 - v27, a1, v17);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48);
  if (v30(v28, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v28, v17);
    id v31 = 0;
LABEL_5:
    id v32 = v88;
    uint64_t v33 = v89;
    int v34 = (void *)v88[2](v89, v88);
    id v35 = v90;
    if (v31)
    {
      id v36 = (void *)sub_1C28CD6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v36 = 0;
    }
    v32[3](v33, v32);
    uint64_t v37 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    v92[0] = 0;
    unsigned int v38 = objc_msgSend(v34, sel_setString_forKey_error_, v36, v37, v92);

    id v39 = v92[0];
    if (v38)
    {
      id v40 = v39;
      return;
    }
    id v88 = (uint64_t (**)(void, id))v92[0];
    id v41 = v92[0];
    os_log_type_t v42 = (void *)sub_1C28CC290();

    goto LABEL_13;
  }
  if (swift_dynamicCast())
  {
    id v31 = v92[1];
    goto LABEL_5;
  }
  v29(v26, v85, v17);
  if (v30(v26, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v17);
LABEL_17:
    uint64_t v43 = v88;
    uint64_t v44 = v89;
    uint64_t v45 = (void *)v88[2](v89, v88);
    v43[3](v44, v43);
    sub_1C28CDD80();
LABEL_27:
    swift_bridgeObjectRelease();

    return;
  }
  if (swift_dynamicCast()) {
    goto LABEL_17;
  }
  v29(v23, v85, v17);
  if (v30(v23, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
LABEL_26:
    uint64_t v57 = v88;
    uint64_t v58 = v89;
    uint64_t v45 = (void *)v88[2](v89, v88);
    v57[3](v58, v57);
    sub_1C28CDE00();
    goto LABEL_27;
  }
  if (swift_dynamicCast()) {
    goto LABEL_26;
  }
  int v59 = v84;
  v29(v84, v85, v17);
  if (v30(v59, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v59, v17);
    uint64_t v60 = sub_1C28CC450();
    uint64_t v61 = *(void *)(v60 - 8);
    uint64_t v62 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v83, 1, 1, v60);
    uint64_t v33 = v89;
    id v35 = v90;
    uint64_t v64 = v81;
    uint64_t v63 = v82;
LABEL_30:
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v62, 0, 1, v63);
    uint64_t v65 = v80;
    sub_1C288179C(v62, v80);
    uint64_t v66 = v88;
    uint64_t v67 = (void *)v88[2](v33, v88);
    uint64_t v68 = v79;
    sub_1C27BBDA4(v65, v79);
    sub_1C28CC450();
    uint64_t v69 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v68, 1, v60) != 1)
    {
      uint64_t v69 = (void *)sub_1C28CC3F0();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v68, v60);
    }
    v66[3](v33, v66);
    uint64_t v70 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    v92[0] = 0;
    unsigned __int8 v71 = objc_msgSend(v67, sel_setDate_forKey_error_, v69, v70, v92);

    id v72 = v92[0];
    if (v71)
    {
      sub_1C2881B14(v65, (uint64_t (*)(void))sub_1C27BBE08);
      return;
    }
    long long v77 = v72;
    os_log_type_t v42 = (void *)sub_1C28CC290();

    swift_willThrow();
    sub_1C2881B14(v65, (uint64_t (*)(void))sub_1C27BBE08);
    goto LABEL_18;
  }
  uint64_t v60 = sub_1C28CC450();
  uint64_t v73 = (uint64_t)v78;
  int v74 = swift_dynamicCast();
  uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56);
  id v35 = v90;
  if (v74)
  {
    uint64_t v61 = *(void *)(v60 - 8);
    v75(v73, 0, 1, v60);
    int v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v73, 1, v60);
    uint64_t v33 = v89;
    uint64_t v63 = v82;
    uint64_t v62 = (uint64_t)v83;
    uint64_t v64 = v81;
    if (v76 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v83, v73, v60);
      v75(v62, 0, 1, v60);
      goto LABEL_30;
    }
  }
  else
  {
    v75(v73, 1, 1, v60);
    uint64_t v33 = v89;
    uint64_t v63 = v82;
    uint64_t v62 = (uint64_t)v83;
    uint64_t v64 = v81;
  }
  sub_1C2881B14(v73, (uint64_t (*)(void))sub_1C27BBE08);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v62, 1, 1, v63);
  sub_1C2881B14(v62, (uint64_t (*)(void))sub_1C2881AF4);
  sub_1C2881B74();
  os_log_type_t v42 = (void *)swift_allocError();
LABEL_13:
  swift_willThrow();
LABEL_18:
  sub_1C28CCDC0();
  id v46 = v42;
  id v47 = v42;
  uint64_t v48 = sub_1C28CCE00();
  os_log_type_t v49 = sub_1C28CDCB0();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v51 = (void *)swift_slowAlloc();
    v92[0] = v51;
    *(_DWORD *)uint64_t v50 = 136446466;
    uint64_t v91 = v33;
    swift_getMetatypeMetadata();
    uint64_t v52 = sub_1C28CD750();
    uint64_t v91 = sub_1C27D36AC(v52, v53, (uint64_t *)v92);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2080;
    uint64_t v91 = (uint64_t)v42;
    id v54 = v42;
    sub_1C27C7060();
    uint64_t v55 = sub_1C28CD750();
    uint64_t v91 = sub_1C27D36AC(v55, v56, (uint64_t *)v92);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v48, v49, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v51, -1, -1);
    MEMORY[0x1C87609B0](v50, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v86 + 8))(v35, v87);
}

uint64_t sub_1C287E09C@<X0>(uint64_t a1@<X8>)
{
  sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB769F0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  int v3 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a1, v3 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_1C287E17C@<X0>(uint64_t a1@<X8>)
{
  sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB76D80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a1, v3 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_1C287E254@<X0>(uint64_t a1@<X8>)
{
  sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB75698);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v3 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a1, v3 ^ 1u, 1, AssociatedTypeWitness);
}

Swift::Void __swiftcall HKKeyValueDomainAccessor.reset()()
{
  uint64_t v2 = v1;
  int v3 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v9 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))((char *)&v9 - v7, 1, 1, AssociatedTypeWitness);
  sub_1C287EDF4((uint64_t)v8, 0, 0, v3, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C287E460(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v87 = a3;
  sub_1C2881AF4(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v81 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  uint64_t v80 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v76 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v78 = (uint64_t)&v71 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v75 = (char *)&v71 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v77 = (uint64_t)&v71 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v83 = (uint64_t)&v71 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v84 = (uint64_t)&v71 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v71 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v71 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v71 - v28;
  sub_1C27BBDA4(a1, (uint64_t)&v71 - v28);
  sub_1C27BBDA4((uint64_t)v29, (uint64_t)v27);
  uint64_t v79 = v9;
  unint64_t v30 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v31 = (v10 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  sub_1C288179C((uint64_t)v29, v32 + v30);
  *(void *)(v32 + v31) = v3;
  uint64_t v33 = (void *)(v32 + ((v31 + 15) & 0xFFFFFFFFFFFFFFF8));
  int v34 = a2;
  uint64_t v35 = v87;
  void *v33 = a2;
  v33[1] = v35;
  uint64_t v86 = a1;
  sub_1C27BBDA4(a1, (uint64_t)v24);
  uint64_t v36 = sub_1C28CC450();
  uint64_t v82 = *(void *)(v36 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v82 + 48);
  uint64_t v85 = v36;
  int v38 = v37(v24, 1);
  uint64_t v39 = v3;
  swift_retain();
  if (v38 == 1)
  {
    sub_1C27C4380((uint64_t)v34);
    sub_1C2881B14((uint64_t)v24, (uint64_t (*)(void))sub_1C27BBE08);
    sub_1C2881B14((uint64_t)v27, (uint64_t (*)(void))sub_1C27BBE08);
    id v40 = *(id *)(v3 + 16);
    swift_bridgeObjectRetain();
    id v41 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    v92 = sub_1C2881ED4;
    uint64_t v93 = v32;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v89 = 1107296256;
    id v90 = sub_1C289A718;
    uint64_t v91 = &block_descriptor_14;
    os_log_type_t v42 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v40, sel_setString_forKey_completion_, 0, v41, v42);
    swift_release();
    _Block_release(v42);

    return;
  }
  uint64_t v73 = v32;
  int v74 = v27;
  swift_retain();
  id v72 = v34;
  sub_1C27C4380((uint64_t)v34);
  sub_1C2881B14((uint64_t)v24, (uint64_t (*)(void))sub_1C27BBE08);
  uint64_t v43 = v86;
  uint64_t v44 = v84;
  sub_1C27BBDA4(v86, v84);
  uint64_t v45 = v85;
  int v46 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v37)(v44, 1, v85);
  sub_1C2881B14(v44, (uint64_t (*)(void))sub_1C27BBE08);
  if (v46 == 1)
  {
    swift_release();
    sub_1C2881B14((uint64_t)v74, (uint64_t (*)(void))sub_1C27BBE08);
    id v47 = *(id *)(v39 + 16);
    swift_bridgeObjectRetain();
    sub_1C28CDD70();
LABEL_7:

    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  uint64_t v48 = v83;
  sub_1C27BBDA4(v43, v83);
  int v49 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v37)(v48, 1, v45);
  sub_1C2881B14(v48, (uint64_t (*)(void))sub_1C27BBE08);
  if (v49 == 1)
  {
    swift_release();
    sub_1C2881B14((uint64_t)v74, (uint64_t (*)(void))sub_1C27BBE08);
    id v47 = *(id *)(v39 + 16);
    swift_bridgeObjectRetain();
    sub_1C28CDDF0();
    goto LABEL_7;
  }
  uint64_t v50 = v43;
  uint64_t v51 = v78;
  sub_1C27BBDA4(v50, v78);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v37)(v51, 1, v45) == 1)
  {
    sub_1C2881B14(v51, (uint64_t (*)(void))sub_1C27BBE08);
    uint64_t v52 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v81, 1, 1, v45);
LABEL_13:
    uint64_t v62 = v73;
    uint64_t v63 = (uint64_t)v74;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v52, 0, 1, v80);
    swift_release();
    sub_1C2881B14(v63, (uint64_t (*)(void))sub_1C27BBE08);
    uint64_t v64 = v77;
    sub_1C288179C(v52, v77);
    uint64_t v65 = *(void **)(v39 + 16);
    uint64_t v66 = v76;
    sub_1C27BBDA4(v64, v76);
    LODWORD(v63) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v37)(v66, 1, v45);
    id v67 = v65;
    if (v63 == 1)
    {
      uint64_t v68 = 0;
    }
    else
    {
      uint64_t v68 = (void *)sub_1C28CC3F0();
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v66, v45);
    }
    swift_bridgeObjectRetain();
    uint64_t v69 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    v92 = sub_1C2881ED4;
    uint64_t v93 = v62;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v89 = 1107296256;
    id v90 = sub_1C289A718;
    uint64_t v91 = &block_descriptor_38;
    uint64_t v70 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v67, sel_setDate_forKey_completion_, v68, v69, v70);
    _Block_release(v70);
    swift_release();

    uint64_t v61 = v64;
    goto LABEL_17;
  }
  uint64_t v53 = v82;
  id v54 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 32);
  uint64_t v55 = (uint64_t)v75;
  v54(v75, v51, v45);
  unint64_t v56 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56);
  v56(v55, 0, 1, v45);
  int v57 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v37)(v55, 1, v45);
  uint64_t v52 = (uint64_t)v81;
  if (v57 != 1)
  {
    v54(v81, v55, v45);
    v56(v52, 0, 1, v45);
    goto LABEL_13;
  }
  sub_1C2881B14(v55, (uint64_t (*)(void))sub_1C27BBE08);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v52, 1, 1, v80);
  sub_1C2881B14(v52, (uint64_t (*)(void))sub_1C2881AF4);
  sub_1C2881B74();
  uint64_t v58 = (void *)swift_allocError();
  uint64_t v59 = v39;
  uint64_t v60 = (uint64_t)v74;
  sub_1C2882820(v58, (uint64_t)v74, v59, v72, v87);

  swift_release();
  swift_release();
  uint64_t v61 = v60;
LABEL_17:
  sub_1C2881B14(v61, (uint64_t (*)(void))sub_1C27BBE08);
}

void sub_1C287EDF4(uint64_t a1, void (*a2)(void *), uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v135 = a5;
  v129 = a2;
  uint64_t v130 = a3;
  uint64_t v138 = a1;
  sub_1C2881AF4(0);
  MEMORY[0x1F4188790](v6 - 8);
  v118 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  uint64_t v120 = v8;
  uint64_t v119 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v117 = (uint64_t)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v115 = (char *)&v114 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v116 = (uint64_t)&v114 - v14;
  uint64_t v15 = *((void *)a4 - 1);
  uint64_t v128 = *(void *)(v15 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  v137 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v114 - v18;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = sub_1C28CDF70();
  uint64_t v136 = *(void *)(v20 - 8);
  uint64_t v21 = v136;
  uint64_t v22 = *(void *)(v136 + 64);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  v121 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  v122 = (char *)&v114 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v123 = (char *)&v114 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v127 = (char *)&v114 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v114 - v31;
  MEMORY[0x1F4188790](v30);
  v125 = (char *)&v114 - v33;
  int v34 = *(void (**)(void))(v21 + 16);
  uint64_t v132 = v20;
  v34();
  v131 = v34;
  uint64_t v35 = *(void (**)(char *, uint64_t, char *))(v15 + 16);
  v126 = v19;
  v35(v19, v134, a4);
  v124 = v32;
  uint64_t v36 = v32;
  uint64_t v37 = v125;
  ((void (*)(char *, char *, uint64_t))v34)(v36, v125, v20);
  int v38 = a4;
  v35(v137, (uint64_t)v19, a4);
  uint64_t v39 = v136;
  unint64_t v40 = (*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80);
  uint64_t v41 = v15;
  unint64_t v42 = (v22 + *(unsigned __int8 *)(v15 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v43 = (v128 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v135;
  *(void *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v45;
  unint64_t v46 = v44 + v40;
  id v47 = v37;
  uint64_t v48 = v130;
  int v49 = v131;
  uint64_t v50 = v132;
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v46, v47, v132);
  uint64_t v128 = v41;
  uint64_t v51 = *(void (**)(unint64_t, char *, char *))(v41 + 32);
  uint64_t v52 = v126;
  uint64_t v53 = v38;
  v126 = v38;
  id v54 = v129;
  v51(v44 + v42, v52, v53);
  uint64_t v55 = (void (**)(void *))(v44 + v43);
  *uint64_t v55 = v54;
  v55[1] = (void (*)(void *))v48;
  unint64_t v56 = v127;
  uint64_t v57 = v138;
  ((void (*)(char *))v49)(v127);
  uint64_t v58 = *(unsigned int (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48);
  if (v58(v56, 1) == 1)
  {
    sub_1C27C4380((uint64_t)v54);
    uint64_t v59 = v136;
    (*(void (**)(char *, uint64_t))(v136 + 8))(v56, v50);
    uint64_t v60 = 0;
    uint64_t v61 = v126;
    uint64_t v62 = v135;
    uint64_t v63 = v128;
    uint64_t v64 = v50;
    uint64_t v65 = (uint64_t)v137;
LABEL_5:
    uint64_t v66 = (uint64_t)v124;
    (*(void (**)(uint64_t, char *))(v63 + 8))(v65, v61);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v66, v64);
    id v67 = (void *)(*(uint64_t (**)(char *, uint64_t))(v62 + 16))(v61, v62);
    if (v60)
    {
      uint64_t v68 = (void *)sub_1C28CD6F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v68 = 0;
    }
    (*(void (**)(char *, uint64_t))(v62 + 24))(v61, v62);
    uint64_t v69 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    v143 = sub_1C2883B38;
    uint64_t v144 = v44;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v140 = 1107296256;
    v141 = sub_1C289A718;
    v142 = &block_descriptor_58;
    uint64_t v70 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v67, sel_setString_forKey_completion_, v68, v69, v70);
    swift_release();
    _Block_release(v70);

    return;
  }
  v125 = (char *)v44;
  sub_1C27C4380((uint64_t)v54);
  if (swift_dynamicCast())
  {
    uint64_t v60 = v140;
    uint64_t v44 = (uint64_t)v125;
    uint64_t v61 = v126;
    uint64_t v62 = v135;
    uint64_t v63 = v128;
    uint64_t v64 = v132;
    uint64_t v59 = v136;
    uint64_t v65 = (uint64_t)v137;
    goto LABEL_5;
  }
  uint64_t v71 = v123;
  id v72 = v131;
  uint64_t v73 = v132;
  ((void (*)(char *, uint64_t, uint64_t))v131)(v123, v57, v132);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v58)(v71, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v74 = v136;
    (*(void (**)(char *, uint64_t))(v136 + 8))(v71, v73);
    uint64_t v75 = v126;
    uint64_t v76 = v135;
    uint64_t v77 = v128;
LABEL_13:
    uint64_t v78 = (uint64_t)v124;
    (*(void (**)(char *, char *))(v77 + 8))(v137, v75);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v78, v73);
    uint64_t v79 = (void *)(*(uint64_t (**)(char *, uint64_t))(v76 + 16))(v75, v76);
    (*(void (**)(char *, uint64_t))(v76 + 24))(v75, v76);
    sub_1C28CDD70();

LABEL_14:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  if (swift_dynamicCast())
  {
    uint64_t v75 = v126;
    uint64_t v76 = v135;
    uint64_t v77 = v128;
    uint64_t v74 = v136;
    goto LABEL_13;
  }
  uint64_t v80 = v122;
  uint64_t v81 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v72)(v122, v57, v73);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v58)(v80, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v82 = v136;
    (*(void (**)(char *, uint64_t))(v136 + 8))(v80, v73);
    uint64_t v83 = v126;
    uint64_t v84 = v135;
    uint64_t v85 = v128;
LABEL_20:
    uint64_t v86 = (uint64_t)v124;
    (*(void (**)(char *, char *))(v85 + 8))(v137, v83);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v86, v81);
    uint64_t v87 = (void *)(*(uint64_t (**)(char *, uint64_t))(v84 + 16))(v83, v84);
    (*(void (**)(char *, uint64_t))(v84 + 24))(v83, v84);
    sub_1C28CDDF0();

    goto LABEL_14;
  }
  if (swift_dynamicCast())
  {
    uint64_t v83 = v126;
    uint64_t v84 = v135;
    uint64_t v85 = v128;
    uint64_t v82 = v136;
    goto LABEL_20;
  }
  id v88 = v121;
  ((void (*)(char *, uint64_t, uint64_t))v72)(v121, v57, v73);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v58)(v88, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v90 = sub_1C28CC450();
    uint64_t v95 = (uint64_t)v115;
    int v96 = swift_dynamicCast();
    uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56);
    v92 = v125;
    if (v96)
    {
      uint64_t v98 = *(void *)(v90 - 8);
      v97(v95, 0, 1, v90);
      int v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v95, 1, v90);
      uint64_t v100 = (uint64_t)v126;
      uint64_t v101 = v135;
      if (v99 != 1)
      {
        uint64_t v91 = (uint64_t)v118;
        (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v118, v95, v90);
        v97(v91, 0, 1, v90);
        uint64_t v94 = v101;
        uint64_t v73 = v132;
        uint64_t v89 = v136;
        uint64_t v93 = v100;
        goto LABEL_26;
      }
    }
    else
    {
      v97(v95, 1, 1, v90);
      uint64_t v100 = (uint64_t)v126;
      uint64_t v101 = v135;
    }
    sub_1C2881B14(v95, (uint64_t (*)(void))sub_1C27BBE08);
    uint64_t v110 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v119 + 56))(v118, 1, 1, v120);
    sub_1C2881B14(v110, (uint64_t (*)(void))sub_1C2881AF4);
    sub_1C2881B74();
    v111 = (void *)swift_allocError();
    uint64_t v112 = (uint64_t)v124;
    uint64_t v113 = (uint64_t)v137;
    sub_1C2881F80(v111, (uint64_t)v124, (uint64_t)v137, v129, v130, v100, v101);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v113, v100);
    (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v112, v132);
    return;
  }
  uint64_t v89 = v136;
  (*(void (**)(char *, uint64_t))(v136 + 8))(v88, v73);
  uint64_t v90 = sub_1C28CC450();
  uint64_t v91 = (uint64_t)v118;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v118, 1, 1, v90);
  v92 = v125;
  uint64_t v93 = (uint64_t)v126;
  uint64_t v94 = v135;
LABEL_26:
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v91, 0, 1, v120);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v137, v93);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v124, v73);
  uint64_t v102 = v116;
  sub_1C288179C(v91, v116);
  v103 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v94 + 16))(v93, v94);
  uint64_t v104 = v117;
  sub_1C27BBDA4(v102, v117);
  sub_1C28CC450();
  uint64_t v105 = v94;
  uint64_t v106 = *(void *)(v90 - 8);
  uint64_t v107 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v104, 1, v90) != 1)
  {
    uint64_t v107 = (void *)sub_1C28CC3F0();
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v90);
  }
  (*(void (**)(uint64_t, uint64_t))(v105 + 24))(v93, v105);
  v108 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  v143 = sub_1C2883B38;
  uint64_t v144 = (uint64_t)v92;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v140 = 1107296256;
  v141 = sub_1C289A718;
  v142 = &block_descriptor_61;
  v109 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v103, sel_setDate_forKey_completion_, v107, v108, v109);
  _Block_release(v109);
  swift_release();

  sub_1C2881B14(v102, (uint64_t (*)(void))sub_1C27BBE08);
}

uint64_t HKKeyValueDomainAccessor.resetPublisher()(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))((char *)&v11 - v7, 1, 1, AssociatedTypeWitness);
  uint64_t v9 = sub_1C287FDF8((uint64_t)v8, a1, a2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1C287FDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v26 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = *(void *)(a2 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28816E4();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v18 = (v11 + v17 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v28;
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v12, a2);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v19 + v18, v9, v26);
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2881C8C(0, &qword_1EBB747D0, MEMORY[0x1E4F1AAE0]);
  sub_1C2881D00(&qword_1EBB747C8, &qword_1EBB747D0, v21);
  sub_1C28CD260();
  sub_1C27C6D2C(&qword_1EA311080, (void (*)(uint64_t))sub_1C28816E4);
  uint64_t v22 = v29;
  uint64_t v23 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v22);
  return v23;
}

uint64_t sub_1C288016C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C28CDF70();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void *)(a3 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v24;
  *(void *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18 + v16, v15, a3);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, v12, v8);
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2881C8C(0, (unint64_t *)&qword_1EBB76AF8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  uint64_t v26 = sub_1C28CD250();
  sub_1C2881D00((unint64_t *)&unk_1EBB76D40, (unint64_t *)&qword_1EBB76AF8, v20);
  uint64_t v21 = sub_1C28CD300();
  uint64_t result = swift_release();
  *uint64_t v25 = v21;
  return result;
}

uint64_t sub_1C2880430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C2881D7C;
  *(void *)(v12 + 24) = v11;
  swift_retain();
  sub_1C287EDF4(a4, (void (*)(void *))sub_1C2883E38, v12, a5, a6);

  return swift_release();
}

void sub_1C288050C(void *a1, void (*a2)(void *, uint64_t))
{
  if (a1)
  {
    id v4 = a1;
    a2(a1, 1);
  }
  else
  {
    sub_1C27C7060();
    sub_1C28CE7C0();
    a2(v5, v6);
    sub_1C286BF0C(v5, v6);
  }
}

id HKKeyValueDomainBoolValue.keyValueDomain.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t HKKeyValueDomainBoolValue.key.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C28805F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned __int8 v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  char v7 = sub_1C287A9E0();
  swift_release();
  if (v7 == 2)
  {
    sub_1C28CCDC0();
    swift_retain_n();
    uint64_t v8 = sub_1C28CCE00();
    os_log_type_t v9 = sub_1C28CDCB0();
    int v10 = v9;
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v11 = swift_slowAlloc();
      int v23 = v10;
      uint64_t v12 = v11;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v24 = v22;
      uint64_t v25 = v2;
      *(_DWORD *)uint64_t v12 = 136446466;
      swift_getMetatypeMetadata();
      uint64_t v13 = sub_1C28CD750();
      uint64_t v25 = sub_1C27D36AC(v13, v14, &v24);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      uint64_t v16 = v1[3];
      unint64_t v15 = v1[4];
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1C27D36AC(v16, v15, &v24);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v8, (os_log_type_t)v23, "[%{public}s]: Cannot toggle nil value. Key %s", (uint8_t *)v12, 0x16u);
      uint64_t v17 = v22;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v17, -1, -1);
      MEMORY[0x1C87609B0](v12, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    LOBYTE(v25) = (v7 & 1) == 0;
    uint64_t v18 = (void *)swift_allocObject();
    sub_1C288165C((uint64_t)&v25, (uint64_t)(v18 + 2));
    v18[4] = 0;
    v18[5] = 0;
    v18[3] = v1;
    uint64_t v19 = (void *)v1[2];
    swift_retain();
    id v20 = v19;
    swift_bridgeObjectRetain();
    sub_1C28CDDF0();

    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t HKKeyValueDomainBoolValue.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C2880968@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C287A9E0();
  *a1 = result;
  return result;
}

id sub_1C2880994(unsigned __int8 *a1)
{
  return sub_1C287BE34(*a1);
}

id (*sub_1C28809BC(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1C287A9E0();
  return sub_1C2880A08;
}

id sub_1C2880A08(uint64_t a1)
{
  return sub_1C287BE34(*(unsigned char *)(a1 + 8));
}

uint64_t sub_1C2880A38()
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC440();
  uint64_t v3 = sub_1C28CC450();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  sub_1C287E460((uint64_t)v2, 0, 0);
  return sub_1C2881B14((uint64_t)v2, (uint64_t (*)(void))sub_1C27BBE08);
}

uint64_t sub_1C2880B10()
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC440();
  uint64_t v3 = sub_1C28CC450();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  sub_1C287C25C((uint64_t)v2);
  return sub_1C2881B14((uint64_t)v2, (uint64_t (*)(void))sub_1C27BBE08);
}

uint64_t sub_1C2880BE0()
{
  uint64_t v1 = v0;
  sub_1C28816E4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v11 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - v12;
  sub_1C28CC440();
  uint64_t v14 = sub_1C28CC450();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  sub_1C27BBDA4((uint64_t)v13, (uint64_t)v11);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v1;
  sub_1C288179C((uint64_t)v11, v16 + v15);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2881C8C(0, &qword_1EBB747D0, MEMORY[0x1E4F1AAE0]);
  sub_1C2881D00(&qword_1EBB747C8, &qword_1EBB747D0, v17);
  swift_retain();
  sub_1C28CD260();
  sub_1C27C6D2C(&qword_1EA311080, (void (*)(uint64_t))sub_1C28816E4);
  uint64_t v18 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C2881B14((uint64_t)v13, (uint64_t (*)(void))sub_1C27BBE08);
  return v18;
}

uint64_t sub_1C2880EC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C287AD38(a1);
}

uint64_t sub_1C2880EE4(uint64_t a1)
{
  return sub_1C2881B14(a1, (uint64_t (*)(void))sub_1C27BBE08);
}

void (*sub_1C2880F28(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  sub_1C27BBE08();
  size_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  uint64_t v5 = malloc(v4);
  a1[2] = v5;
  sub_1C287AD38((uint64_t)v5);
  return sub_1C2880FB4;
}

void sub_1C2880FB4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  if (a2)
  {
    sub_1C27BBDA4(*(void *)(a1 + 16), (uint64_t)v2);
    sub_1C287C25C((uint64_t)v2);
    sub_1C2881B14((uint64_t)v2, (uint64_t (*)(void))sub_1C27BBE08);
  }
  else
  {
    sub_1C287C25C(*(void *)(a1 + 16));
  }
  sub_1C2881B14((uint64_t)v3, (uint64_t (*)(void))sub_1C27BBE08);
  free(v3);

  free(v2);
}

uint64_t sub_1C2881068@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C287B11C();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

id sub_1C288109C(uint64_t a1)
{
  return sub_1C287CC34(*(void *)a1, *(unsigned char *)(a1 + 8));
}

id (*sub_1C28810CC(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)a1 = sub_1C287B11C();
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return sub_1C2881120;
}

id sub_1C2881120(uint64_t a1)
{
  return sub_1C287CC34(*(void *)a1, *(unsigned char *)(a1 + 8));
}

void *_s16HealthExperience020HKKeyValueDomainBoolD0C03keydE00G0ACSo0cdE0C_SStcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

uint64_t _s16HealthExperience020HKKeyValueDomainBoolD0CfD_0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C28811E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C287B468();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C2881210(uint64_t *a1)
{
  sub_1C287D05C(*a1, a1[1]);

  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C2881254(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = sub_1C287B468();
  a1[1] = v3;
  return sub_1C28812A0;
}

uint64_t sub_1C28812A0(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C287D05C(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C287D05C(*a1, v2);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2881314@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1C27BBE08();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = *a1;
  sub_1C27BBDA4(a2, (uint64_t)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  sub_1C288179C((uint64_t)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2881C8C(0, (unint64_t *)&qword_1EBB76AF8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  v15[1] = sub_1C28CD250();
  sub_1C2881D00((unint64_t *)&unk_1EBB76D40, (unint64_t *)&qword_1EBB76AF8, v12);
  uint64_t v13 = sub_1C28CD300();
  uint64_t result = swift_release();
  *a3 = v13;
  return result;
}

uint64_t sub_1C28814C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C2881D7C;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  sub_1C287E460(a4, (void (*)(void))sub_1C2881D80, v8);

  return swift_release();
}

uint64_t sub_1C288158C()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1C2881614()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1C288165C(uint64_t a1, uint64_t a2)
{
  sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB75698);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C28816D0(uint64_t a1, void *a2)
{
  sub_1C2882F30(a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40));
}

void sub_1C28816E4()
{
  if (!qword_1EA311078)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2881C8C(255, &qword_1EBB747D0, MEMORY[0x1E4F1AAE0]);
    sub_1C2881D00(&qword_1EBB747C8, &qword_1EBB747D0, v0);
    unint64_t v1 = sub_1C28CD270();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA311078);
    }
  }
}

uint64_t sub_1C288179C(uint64_t a1, uint64_t a2)
{
  sub_1C27BBE08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2881800@<X0>(uint64_t *a1@<X8>)
{
  sub_1C27BBE08();
  uint64_t v4 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  return sub_1C2881314((uint64_t *)(v1 + 16), v4, a1);
}

uint64_t sub_1C2881874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HKKeyValueDomainAccessor.value.getter(*(void *)(a3 + a2 - 16), *(void *)(a3 + a2 - 8));
}

uint64_t sub_1C28818A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2881588(a1, *(void *)(a4 + a3 - 16), *(void *)(a4 + a3 - 8));
}

uint64_t sub_1C28818CC()
{
  return 16;
}

__n128 sub_1C28818D8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.keyValueDomain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.value.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for HKKeyValueDomainBoolValue()
{
  return self;
}

uint64_t method lookup function for HKKeyValueDomainBoolValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HKKeyValueDomainBoolValue);
}

uint64_t dispatch thunk of HKKeyValueDomainBoolValue.__allocating_init(keyValueDomain:key:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of HKKeyValueDomainBoolValue.toggle()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t method lookup function for HKKeyValueDomainDateValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HKKeyValueDomainDateValue);
}

uint64_t dispatch thunk of HKKeyValueDomainDateValue.__allocating_init(keyValueDomain:key:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of HKKeyValueDomainDateValue.setToNow()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of HKKeyValueDomainDateValue.setToNowSynchronously()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of HKKeyValueDomainDateValue.setToNowPublisher()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t type metadata accessor for HKKeyValueDomainIntegerValue()
{
  return self;
}

uint64_t method lookup function for HKKeyValueDomainIntegerValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HKKeyValueDomainIntegerValue);
}

uint64_t dispatch thunk of HKKeyValueDomainIntegerValue.__allocating_init(keyValueDomain:key:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for HKKeyValueDomainStringValue()
{
  return self;
}

uint64_t method lookup function for HKKeyValueDomainStringValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HKKeyValueDomainStringValue);
}

uint64_t dispatch thunk of HKKeyValueDomainStringValue.__allocating_init(keyValueDomain:key:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1C2881AF4(uint64_t a1)
{
}

uint64_t sub_1C2881B14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C2881B74()
{
  unint64_t result = qword_1EA311090;
  if (!qword_1EA311090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311090);
  }
  return result;
}

uint64_t sub_1C2881BC8(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a2;
  if (!*a2)
  {
    a3();
    uint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1C2881C08(uint64_t a1, uint64_t a2)
{
  sub_1C27BBE08();
  uint64_t v6 = v2
     + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));

  return sub_1C28814C8(a1, a2, v2 + 16, v6);
}

void sub_1C2881C8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C27C7060();
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBC848] + 8, v6, MEMORY[0x1E4FBC0F0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2881D00(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2881C8C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2881D44()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C2881D80(void *a1)
{
  sub_1C288050C(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1C2881D88()
{
  sub_1C27BBE08();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = (((*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_1C28CC450();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_release();
  if (*(void *)(v0 + v3)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1C2881ED4(uint64_t a1, void *a2)
{
  sub_1C27BBE08();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = *(void (**)(void))v9;
  uint64_t v12 = *(void *)(v9 + 8);

  sub_1C2882820(a2, v8, v10, v11, v12);
}

void sub_1C2881F80(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v76 = a5;
  uint64_t v79 = a3;
  uint64_t v84 = *(void *)(a6 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  uint64_t v82 = &v71[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  uint64_t v78 = &v71[-v13];
  uint64_t v15 = v14;
  swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1C28CDF70();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v74 = &v71[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = &v71[-v21];
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = &v71[-v23];
  uint64_t v25 = sub_1C28CCE10();
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v83 = &v71[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = &v71[-v29];
  uint64_t v80 = v31;
  uint64_t v81 = v28;
  uint64_t v75 = a7;
  if (a1)
  {
    uint64_t v77 = a4;
    id v32 = a1;
    sub_1C28CCDC0();
    uint64_t v33 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16);
    v33(v22, a2, v16);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v84 + 16))(v82, v79, v15);
    id v34 = a1;
    id v35 = a1;
    uint64_t v36 = sub_1C28CCE00();
    os_log_type_t v37 = sub_1C28CDCB0();
    int v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v78 = (unsigned char *)swift_slowAlloc();
      uint64_t v85 = v15;
      uint64_t v86 = v78;
      *(_DWORD *)uint64_t v39 = 136446978;
      os_log_t v73 = v36;
      swift_getMetatypeMetadata();
      int v72 = v38;
      uint64_t v40 = sub_1C28CD750();
      uint64_t v79 = v15;
      uint64_t v85 = sub_1C27D36AC(v40, v41, (uint64_t *)&v86);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      v33(v74, (uint64_t)v22, v16);
      uint64_t v42 = sub_1C28CD750();
      uint64_t v85 = sub_1C27D36AC(v42, v43, (uint64_t *)&v86);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v22, v16);
      *(_WORD *)(v39 + 22) = 2080;
      uint64_t v44 = v82;
      uint64_t v45 = v79;
      uint64_t v46 = (*(uint64_t (**)(uint64_t))(v75 + 24))(v79);
      uint64_t v85 = sub_1C27D36AC(v46, v47, (uint64_t *)&v86);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v44, v45);
      *(_WORD *)(v39 + 32) = 2080;
      uint64_t v85 = (uint64_t)a1;
      id v48 = a1;
      sub_1C27C7060();
      uint64_t v49 = sub_1C28CD750();
      uint64_t v85 = sub_1C27D36AC(v49, v50, (uint64_t *)&v86);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      os_log_t v51 = v73;
      _os_log_impl(&dword_1C27B7000, v73, (os_log_type_t)v72, "[%{public}s]: Unable to Set Async Value %s. Key %s: %s", (uint8_t *)v39, 0x2Au);
      uint64_t v52 = v78;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v52, -1, -1);
      MEMORY[0x1C87609B0](v39, -1, -1);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v22, v16);
      (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v82, v15);
    }
    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v83, v81);
    uint64_t v69 = v77;
    if (v77)
    {
      id v70 = a1;
      v69(a1);
    }
  }
  else
  {
    sub_1C28CCDC0();
    uint64_t v53 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16);
    v53(v24, a2, v16);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v84 + 16))(v78, v79, v15);
    id v54 = sub_1C28CCE00();
    os_log_type_t v55 = sub_1C28CDCD0();
    int v56 = v55;
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v57 = swift_slowAlloc();
      LODWORD(v82) = v56;
      uint64_t v58 = v57;
      uint64_t v83 = (unsigned char *)swift_slowAlloc();
      uint64_t v85 = v15;
      uint64_t v86 = v83;
      *(_DWORD *)uint64_t v58 = 136446722;
      os_log_t v73 = v54;
      swift_getMetatypeMetadata();
      uint64_t v79 = v15;
      uint64_t v59 = sub_1C28CD750();
      uint64_t v77 = a4;
      uint64_t v85 = sub_1C27D36AC(v59, v60, (uint64_t *)&v86);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v58 + 12) = 2080;
      v53(v74, (uint64_t)v24, v16);
      uint64_t v61 = sub_1C28CD750();
      uint64_t v85 = sub_1C27D36AC(v61, v62, (uint64_t *)&v86);
      sub_1C28CDF90();
      a4 = v77;
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v24, v16);
      *(_WORD *)(v58 + 22) = 2080;
      uint64_t v63 = v78;
      uint64_t v64 = v79;
      uint64_t v65 = (*(uint64_t (**)(uint64_t))(v75 + 24))(v79);
      uint64_t v85 = sub_1C27D36AC(v65, v66, (uint64_t *)&v86);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v63, v64);
      os_log_t v67 = v73;
      _os_log_impl(&dword_1C27B7000, v73, (os_log_type_t)v82, "[%{public}s]: Set Async Value %s. Key %s", (uint8_t *)v58, 0x20u);
      uint64_t v68 = v83;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v68, -1, -1);
      MEMORY[0x1C87609B0](v58, -1, -1);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v24, v16);
      (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v78, v15);
    }
    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v30, v81);
    if (a4) {
      a4(0);
    }
  }
}

void sub_1C2882820(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v64 = a5;
  sub_1C27BBE08();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v59 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v59 - v16;
  uint64_t v18 = sub_1C28CCE10();
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v59 - v23;
  uint64_t v65 = v25;
  uint64_t v66 = v22;
  if (a1)
  {
    id v26 = a1;
    sub_1C28CCDC0();
    sub_1C27BBDA4(a2, (uint64_t)v17);
    id v27 = a1;
    swift_retain();
    id v28 = a1;
    swift_retain();
    uint64_t v29 = sub_1C28CCE00();
    os_log_type_t v30 = sub_1C28CDCB0();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v63 = a4;
      uint64_t v33 = v32;
      uint64_t v62 = swift_slowAlloc();
      uint64_t v68 = v62;
      *(_DWORD *)uint64_t v33 = 136446978;
      int v61 = v31;
      uint64_t v67 = type metadata accessor for HKKeyValueDomainDateValue();
      sub_1C2881BC8(0, &qword_1EA3110A0, (void (*)(void))type metadata accessor for HKKeyValueDomainDateValue);
      os_log_t v60 = v29;
      uint64_t v34 = sub_1C28CD750();
      uint64_t v67 = sub_1C27D36AC(v34, v35, &v68);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      sub_1C27BBDA4((uint64_t)v17, (uint64_t)v12);
      uint64_t v36 = sub_1C28CD750();
      uint64_t v67 = sub_1C27D36AC(v36, v37, &v68);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C2881B14((uint64_t)v17, (uint64_t (*)(void))sub_1C27BBE08);
      *(_WORD *)(v33 + 22) = 2080;
      uint64_t v38 = *(void *)(a3 + 24);
      unint64_t v39 = *(void *)(a3 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1C27D36AC(v38, v39, &v68);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 32) = 2080;
      uint64_t v67 = (uint64_t)a1;
      id v40 = a1;
      sub_1C27C7060();
      uint64_t v41 = sub_1C28CD750();
      uint64_t v67 = sub_1C27D36AC(v41, v42, &v68);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      os_log_t v43 = v60;
      _os_log_impl(&dword_1C27B7000, v60, (os_log_type_t)v61, "[%{public}s]: Unable to Set Async Value %s. Key %s: %s", (uint8_t *)v33, 0x2Au);
      uint64_t v44 = v62;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v44, -1, -1);
      uint64_t v45 = v33;
      a4 = v63;
      MEMORY[0x1C87609B0](v45, -1, -1);
    }
    else
    {
      sub_1C2881B14((uint64_t)v17, (uint64_t (*)(void))sub_1C27BBE08);
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v66);
    if (a4)
    {
      id v58 = a1;
      a4(a1);
    }
  }
  else
  {
    sub_1C28CCDC0();
    sub_1C27BBDA4(a2, (uint64_t)v15);
    swift_retain_n();
    uint64_t v46 = sub_1C28CCE00();
    os_log_type_t v47 = sub_1C28CDCD0();
    int v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v49 = swift_slowAlloc();
      int v61 = v48;
      uint64_t v50 = v49;
      uint64_t v62 = swift_slowAlloc();
      uint64_t v68 = v62;
      *(_DWORD *)uint64_t v50 = 136446722;
      uint64_t v67 = type metadata accessor for HKKeyValueDomainDateValue();
      sub_1C2881BC8(0, &qword_1EA3110A0, (void (*)(void))type metadata accessor for HKKeyValueDomainDateValue);
      uint64_t v63 = a4;
      uint64_t v51 = sub_1C28CD750();
      uint64_t v67 = sub_1C27D36AC(v51, v52, &v68);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      sub_1C27BBDA4((uint64_t)v15, (uint64_t)v12);
      uint64_t v53 = sub_1C28CD750();
      uint64_t v67 = sub_1C27D36AC(v53, v54, &v68);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C2881B14((uint64_t)v15, (uint64_t (*)(void))sub_1C27BBE08);
      *(_WORD *)(v50 + 22) = 2080;
      uint64_t v55 = *(void *)(a3 + 24);
      unint64_t v56 = *(void *)(a3 + 32);
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1C27D36AC(v55, v56, &v68);
      a4 = v63;
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v46, (os_log_type_t)v61, "[%{public}s]: Set Async Value %s. Key %s", (uint8_t *)v50, 0x20u);
      uint64_t v57 = v62;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v57, -1, -1);
      MEMORY[0x1C87609B0](v50, -1, -1);
    }
    else
    {
      sub_1C2881B14((uint64_t)v15, (uint64_t (*)(void))sub_1C27BBE08);

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v66);
    if (a4) {
      a4(0);
    }
  }
}

void sub_1C2882F30(void *a1, char a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = sub_1C28CCE10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v47 - v15;
  if (a1)
  {
    id v17 = a1;
    sub_1C28CCDC0();
    id v18 = a1;
    swift_retain();
    id v19 = a1;
    swift_retain();
    uint64_t v20 = sub_1C28CCE00();
    os_log_type_t v21 = sub_1C28CDCB0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v50 = v11;
      uint64_t v23 = v22;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v54 = v48;
      *(_DWORD *)uint64_t v23 = 136446978;
      unint64_t v52 = a4;
      uint64_t v53 = type metadata accessor for HKKeyValueDomainBoolValue();
      sub_1C2881BC8(0, &qword_1EA3110A8, (void (*)(void))type metadata accessor for HKKeyValueDomainBoolValue);
      uint64_t v51 = a5;
      uint64_t v24 = sub_1C28CD750();
      uint64_t v49 = v10;
      uint64_t v53 = sub_1C27D36AC(v24, v25, &v54);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      LOBYTE(v53) = a2;
      sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB75698);
      uint64_t v26 = sub_1C28CD750();
      uint64_t v53 = sub_1C27D36AC(v26, v27, &v54);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2080;
      uint64_t v29 = *(void *)(a3 + 24);
      unint64_t v28 = *(void *)(a3 + 32);
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1C27D36AC(v29, v28, &v54);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 32) = 2080;
      uint64_t v53 = (uint64_t)a1;
      id v30 = a1;
      sub_1C27C7060();
      uint64_t v31 = sub_1C28CD750();
      uint64_t v53 = sub_1C27D36AC(v31, v32, &v54);
      a4 = v52;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v20, v21, "[%{public}s]: Unable to Set Async Value %s. Key %s: %s", (uint8_t *)v23, 0x2Au);
      uint64_t v33 = v48;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v33, -1, -1);
      MEMORY[0x1C87609B0](v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v49);
      if (!a4) {
        goto LABEL_10;
      }
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      if (!a4)
      {
LABEL_10:

        return;
      }
    }
    id v46 = a1;
    a4(a1);

    goto LABEL_10;
  }
  sub_1C28CCDC0();
  swift_retain_n();
  uint64_t v34 = sub_1C28CCE00();
  uint64_t v35 = sub_1C28CDCD0();
  if (!os_log_type_enabled(v34, (os_log_type_t)v35))
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (!a4) {
      return;
    }
    goto LABEL_12;
  }
  uint64_t v36 = swift_slowAlloc();
  uint64_t v51 = a5;
  uint64_t v37 = v36;
  uint64_t v38 = swift_slowAlloc();
  uint64_t v50 = v11;
  uint64_t v39 = v38;
  uint64_t v54 = v38;
  *(_DWORD *)uint64_t v37 = 136446722;
  unint64_t v52 = a4;
  uint64_t v53 = type metadata accessor for HKKeyValueDomainBoolValue();
  sub_1C2881BC8(0, &qword_1EA3110A8, (void (*)(void))type metadata accessor for HKKeyValueDomainBoolValue);
  uint64_t v40 = sub_1C28CD750();
  uint64_t v49 = v10;
  uint64_t v53 = sub_1C27D36AC(v40, v41, &v54);
  sub_1C28CDF90();
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 12) = 2080;
  LOBYTE(v53) = a2;
  sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB75698);
  uint64_t v42 = sub_1C28CD750();
  uint64_t v53 = sub_1C27D36AC(v42, v43, &v54);
  sub_1C28CDF90();
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 22) = 2080;
  uint64_t v44 = *(void *)(a3 + 24);
  unint64_t v45 = *(void *)(a3 + 32);
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_1C27D36AC(v44, v45, &v54);
  a4 = v52;
  sub_1C28CDF90();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C27B7000, v34, (os_log_type_t)v35, "[%{public}s]: Set Async Value %s. Key %s", (uint8_t *)v37, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x1C87609B0](v39, -1, -1);
  MEMORY[0x1C87609B0](v37, -1, -1);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v49);
  if (a4) {
LABEL_12:
  }
    a4(0);
}

uint64_t sub_1C288359C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  unint64_t v6 = v5 + *(void *)(*(void *)(v3 - 8) + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(sub_1C28CDF70() - 8);
  uint64_t v8 = v1 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1C288016C(v1 + v5, v8, v3, v4, a1);
}

uint64_t objectdestroy_40Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(sub_1C28CDF70() - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v7, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v7, AssociatedTypeWitness); {

  }
  return swift_deallocObject();
}

uint64_t sub_1C2883854(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(char **)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  unint64_t v7 = (*(unsigned __int8 *)(*((void *)v5 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  unint64_t v8 = v7 + *(void *)(*((void *)v5 - 1) + 64);
  swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(sub_1C28CDF70() - 8);
  uint64_t v10 = v2 + ((v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_1C2880430(a1, a2, v2 + v7, v10, v5, v6);
}

uint64_t sub_1C2883968()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(sub_1C28CDF70() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 - 8);
  unint64_t v6 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v0 + v4;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v4, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, AssociatedTypeWitness); {
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  }
  if (*(void *)(v0 + v7)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1C2883B38(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(sub_1C28CDF70() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (v7 + *(void *)(v6 + 64) + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v9 = v2 + ((*(void *)(*(void *)(v4 - 8) + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void (**)(void *))v9;
  uint64_t v11 = *(void *)(v9 + 8);

  sub_1C2881F80(a2, v2 + v7, v2 + v8, v10, v11, v4, v5);
}

uint64_t sub_1C2883C64()
{
  return swift_deallocObject();
}

uint64_t sub_1C2883C74()
{
  return swift_deallocObject();
}

uint64_t sub_1C2883C84@<X0>(uint64_t a1@<X8>)
{
  return sub_1C287E254(a1);
}

uint64_t sub_1C2883C8C()
{
  return swift_deallocObject();
}

uint64_t sub_1C2883C9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C287E17C(a1);
}

uint64_t sub_1C2883CA4()
{
  return swift_deallocObject();
}

uint64_t sub_1C2883CB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C287E09C(a1);
}

unsigned char *storeEnumTagSinglePayload for HKKeyValueDomainAccessorError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2883D58);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HKKeyValueDomainAccessorError()
{
  return &type metadata for HKKeyValueDomainAccessorError;
}

unint64_t sub_1C2883D94()
{
  unint64_t result = qword_1EA3110B0;
  if (!qword_1EA3110B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3110B0);
  }
  return result;
}

uint64_t Array<A>.hx_asyncMap<A>(mapFunction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_1C2883E64, 0, 0);
}

uint64_t sub_1C2883E64()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_1C28CDA30();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  long long v7 = *(_OWORD *)(v0 + 24);
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  *(void *)(v6 + 32) = v3;
  *(_OWORD *)(v6 + 40) = v7;
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  *unint64_t v8 = v0;
  v8[1] = sub_1C286FD7C;
  return MEMORY[0x1F4188080](v0 + 16, TupleTypeMetadata2, v5, 0, 0, &unk_1EA3110C8, v6, TupleTypeMetadata2);
}

uint64_t sub_1C2883FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[17] = TupleTypeMetadata2;
  v7[18] = *(void *)(TupleTypeMetadata2 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  uint64_t v10 = *(void *)(a6 - 8);
  v7[21] = v10;
  v7[22] = *(void *)(v10 + 64);
  v7[23] = swift_task_alloc();
  sub_1C2846DA4();
  v7[24] = swift_task_alloc();
  sub_1C28CDF70();
  v7[25] = swift_task_alloc();
  v7[26] = sub_1C27C7060();
  uint64_t v11 = sub_1C28CDAE0();
  v7[27] = v11;
  v7[28] = *(void *)(v11 - 8);
  v7[29] = swift_task_alloc();
  uint64_t v12 = sub_1C28CDF70();
  v7[30] = v12;
  v7[31] = *(void *)(v12 - 8);
  v7[32] = swift_task_alloc();
  v7[33] = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_1C28CDF70();
  v7[34] = v13;
  v7[35] = *(void *)(v13 - 8);
  v7[36] = swift_task_alloc();
  v7[37] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C28842D4, 0, 0);
}

uint64_t sub_1C28842D4()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 168);
  *(void *)(v0 + 48) = *(void *)(v0 + 96);
  uint64_t v4 = sub_1C28CDA30();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C875EDE0](v4, WitnessTable);
  *(void *)(v0 + 56) = *(void *)(v0 + 40);
  sub_1C28CE3A0();
  sub_1C28CE370();
  uint64_t v33 = v3;
  uint64_t v34 = v2;
  uint64_t v35 = v2 - 8;
  sub_1C28CE390();
  while (1)
  {
    uint64_t v7 = *(void *)(v0 + 288);
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v9 = *(void *)(v0 + 264);
    uint64_t v8 = *(void *)(v0 + 272);
    sub_1C28CE380();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v6, v7, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v35 + 48))(v6, 1, v9) == 1) {
      break;
    }
    uint64_t v10 = *(uint64_t **)(v0 + 296);
    uint64_t v11 = *(char **)(v0 + 184);
    uint64_t v12 = *(void *)(v0 + 192);
    uint64_t v13 = *(void *)(v0 + 112);
    uint64_t v14 = (char *)v10 + *(int *)(v34 + 48);
    uint64_t v36 = *v10;
    uint64_t v37 = *(void *)(v0 + 104);
    uint64_t v15 = sub_1C28CDA90();
    long long v38 = *(_OWORD *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    uint64_t v16 = *(void (**)(char *, char *, void))(v33 + 32);
    v16(v11, v14, v38);
    unint64_t v17 = (*(unsigned __int8 *)(v33 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 0;
    *(void *)(v18 + 24) = 0;
    *(_OWORD *)(v18 + 32) = v38;
    *(void *)(v18 + 48) = v36;
    *(void *)(v18 + 56) = v37;
    *(void *)(v18 + 64) = v13;
    v16((char *)(v18 + v17), v11, v38);
    sub_1C28CDAF0();
    swift_retain();
    sub_1C2884F5C(v12, (uint64_t)&unk_1EA311100, v18);
    sub_1C2848530(v12);
  }
  uint64_t v19 = *(void *)(v0 + 248);
  uint64_t v20 = *(void *)(v0 + 256);
  uint64_t v21 = *(void *)(v0 + 240);
  uint64_t v22 = *(void *)(v0 + 128);
  uint64_t v23 = *(void *)(v0 + 120);
  uint64_t v24 = *(void *)(v0 + 96);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v22 - 8);
  *(void *)(v0 + 304) = v25;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
  *(void *)(v0 + 312) = v26;
  *(void *)(v0 + 320) = (v25 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v26(v20, 1, 1, v22);
  uint64_t v27 = MEMORY[0x1C875EF70](v24, v23);
  uint64_t v28 = sub_1C28862E8(v20, v27, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  *(void *)(v0 + 64) = v28;
  swift_checkMetadataState();
  sub_1C28CDAC0();
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_1C2884708;
  uint64_t v30 = *(void *)(v0 + 216);
  uint64_t v31 = *(void *)(v0 + 200);
  return MEMORY[0x1F4187E48](v31, 0, 0, v30, v0 + 72);
}

uint64_t sub_1C2884708()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_1C2884B54;
  }
  else
  {
    uint64_t v1 = sub_1C2884820;
  }
  return MEMORY[0x1F4188298](v1, 0, 0);
}

uint64_t sub_1C2884820()
{
  uint64_t v1 = (unint64_t *)v0[25];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = (uint64_t *)v0[10];
    (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
    uint64_t v5 = sub_1C28CE260();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v5;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    uint64_t v8 = v0[38];
    uint64_t v21 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[39];
    uint64_t v20 = (char *)v0[32];
    uint64_t v23 = v0[31];
    uint64_t v22 = v0[30];
    uint64_t v9 = (unint64_t *)v0[19];
    uint64_t v25 = (unint64_t *)v0[20];
    uint64_t v10 = v0[16];
    uint64_t v11 = *(int *)(v2 + 48);
    uint64_t v24 = v3;
    uint64_t v12 = (char *)v25 + v11;
    unint64_t v13 = *v1;
    *uint64_t v25 = *v1;
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v14((char *)v25 + v11, (char *)v1 + v11, v10);
    uint64_t v15 = (char *)v9 + *(int *)(v2 + 48);
    unint64_t *v9 = v13;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v12, v10);
    v14(v20, v15, v10);
    v21((uint64_t)v20, 0, 1, v10);
    sub_1C28CDA30();
    sub_1C28CD990();
    uint64_t v16 = v0[8];
    sub_1C2886294(v13, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v23 + 40))(v16+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v13, v20, v22);
    (*(void (**)(unint64_t *, uint64_t))(v24 + 8))(v25, v2);
    unint64_t v17 = (void *)swift_task_alloc();
    v0[41] = v17;
    *unint64_t v17 = v0;
    v17[1] = sub_1C2884708;
    uint64_t v18 = v0[27];
    uint64_t v19 = v0[25];
    return MEMORY[0x1F4187E48](v19, 0, 0, v18, v0 + 9);
  }
}

uint64_t sub_1C2884B54()
{
  (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C2884C50(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1C284858C;
  return sub_1C2883FA4(a1, a2, v8, v9, v10, v6, v7);
}

uint64_t sub_1C2884D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a7;
  v7[7] = v9;
  v7[4] = a5;
  v7[5] = a6;
  v7[2] = a1;
  v7[3] = a4;
  return MEMORY[0x1F4188298](sub_1C2884D58, 0, 0);
}

uint64_t sub_1C2884D58()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (int *)v0[4];
  uint64_t v3 = (void *)v0[2];
  uint64_t v4 = (char *)v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *uint64_t v3 = v2;
  uint64_t v8 = (uint64_t (*)(char *, uint64_t))((char *)v1 + *v1);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  void *v5 = v0;
  v5[1] = sub_1C2884E68;
  uint64_t v6 = v0[6];
  return v8(v4, v6);
}

uint64_t sub_1C2884E68()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C2884F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C2846DA4();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2886568(a1, (uint64_t)v9);
  uint64_t v10 = sub_1C28CDA90();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1C2848530((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1C28CDA40();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C28CDA80();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t Array<A>.hx_asyncCompactMap<A>(mapFunction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return MEMORY[0x1F4188298](sub_1C2885154, 0, 0);
}

uint64_t sub_1C2885154()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  sub_1C28CDF70();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_1C28CDA30();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  long long v7 = *(_OWORD *)(v0 + 24);
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  *(void *)(v6 + 32) = v3;
  *(_OWORD *)(v6 + 40) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C28852A0;
  return MEMORY[0x1F4188080](v0 + 16, TupleTypeMetadata2, v5, 0, 0, &unk_1EA3110E0, v6, TupleTypeMetadata2);
}

uint64_t sub_1C28852A0()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C28867A8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C28867A0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C28853BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  uint64_t v9 = sub_1C28CDF70();
  v7[18] = v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[19] = TupleTypeMetadata2;
  v7[20] = *(void *)(TupleTypeMetadata2 - 8);
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  uint64_t v11 = *(void *)(a6 - 8);
  v7[23] = v11;
  v7[24] = *(void *)(v11 + 64);
  v7[25] = swift_task_alloc();
  sub_1C2846DA4();
  v7[26] = swift_task_alloc();
  sub_1C28CDF70();
  v7[27] = swift_task_alloc();
  v7[28] = sub_1C27C7060();
  uint64_t v12 = sub_1C28CDAE0();
  v7[29] = v12;
  v7[30] = *(void *)(v12 - 8);
  v7[31] = swift_task_alloc();
  v7[32] = *(void *)(v9 - 8);
  v7[33] = swift_task_alloc();
  v7[34] = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_1C28CDF70();
  v7[35] = v13;
  v7[36] = *(void *)(v13 - 8);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C28856EC, 0, 0);
}

uint64_t sub_1C28856EC()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 184);
  *(void *)(v0 + 48) = *(void *)(v0 + 104);
  uint64_t v4 = sub_1C28CDA30();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C875EDE0](v4, WitnessTable);
  *(void *)(v0 + 56) = *(void *)(v0 + 40);
  sub_1C28CE3A0();
  sub_1C28CE370();
  uint64_t v31 = v3;
  uint64_t v32 = v2;
  uint64_t v33 = v2 - 8;
  sub_1C28CE390();
  while (1)
  {
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v6 = *(void *)(v0 + 304);
    uint64_t v9 = *(void *)(v0 + 272);
    uint64_t v8 = *(void *)(v0 + 280);
    sub_1C28CE380();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v6, v7, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v33 + 48))(v6, 1, v9) == 1) {
      break;
    }
    uint64_t v10 = *(uint64_t **)(v0 + 304);
    uint64_t v11 = *(char **)(v0 + 200);
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v14 = (char *)v10 + *(int *)(v32 + 48);
    uint64_t v34 = *v10;
    uint64_t v35 = *(void *)(v0 + 112);
    uint64_t v15 = sub_1C28CDA90();
    long long v36 = *(_OWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    uint64_t v16 = *(void (**)(char *, char *, void))(v31 + 32);
    v16(v11, v14, v36);
    unint64_t v17 = (*(unsigned __int8 *)(v31 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 0;
    *(void *)(v18 + 24) = 0;
    *(_OWORD *)(v18 + 32) = v36;
    *(void *)(v18 + 48) = v34;
    *(void *)(v18 + 56) = v35;
    *(void *)(v18 + 64) = v13;
    v16((char *)(v18 + v17), v11, v36);
    sub_1C28CDAF0();
    swift_retain();
    sub_1C2884F5C(v12, (uint64_t)&unk_1EA3110F0, v18);
    sub_1C2848530(v12);
  }
  uint64_t v19 = *(void *)(v0 + 256);
  uint64_t v20 = *(void *)(v0 + 264);
  uint64_t v21 = *(void *)(v0 + 144);
  uint64_t v23 = *(void *)(v0 + 128);
  uint64_t v22 = *(void *)(v0 + 136);
  uint64_t v24 = *(void *)(v0 + 104);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 1, 1, v22);
  uint64_t v25 = MEMORY[0x1C875EF70](v24, v23);
  uint64_t v26 = sub_1C28862E8(v20, v25, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  *(void *)(v0 + 64) = v26;
  swift_checkMetadataState();
  sub_1C28CDAC0();
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1C2885AFC;
  uint64_t v28 = *(void *)(v0 + 232);
  uint64_t v29 = *(void *)(v0 + 216);
  return MEMORY[0x1F4187E48](v29, 0, 0, v28, v0 + 72);
}

uint64_t sub_1C2885AFC()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C2885F74;
  }
  else
  {
    uint64_t v2 = sub_1C2885C18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2885C18()
{
  uint64_t v1 = (unint64_t *)v0[27];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[17];
    uint64_t v5 = v0[16];
    uint64_t v21 = (uint64_t *)v0[11];
    (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
    v0[10] = v0[8];
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    sub_1C28CDA30();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v7 = sub_1C28CD840();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v21 = v7;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v0[32];
    uint64_t v11 = (unint64_t *)v0[21];
    uint64_t v22 = (unint64_t *)v0[22];
    uint64_t v12 = v0[18];
    uint64_t v13 = *(int *)(v2 + 48);
    uint64_t v14 = (char *)v22 + v13;
    unint64_t v15 = *v1;
    unint64_t *v22 = *v1;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v22 + v13, (char *)v1 + v13, v12);
    uint64_t v16 = (char *)v11 + *(int *)(v2 + 48);
    *uint64_t v11 = v15;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v14, v12);
    sub_1C28CDA30();
    sub_1C28CD990();
    uint64_t v17 = v0[8];
    sub_1C2886294(v15, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 40))(v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v15, v16, v12);
    (*(void (**)(unint64_t *, uint64_t))(v3 + 8))(v22, v2);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[39] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1C2885AFC;
    uint64_t v19 = v0[29];
    uint64_t v20 = v0[27];
    return MEMORY[0x1F4187E48](v20, 0, 0, v19, v0 + 9);
  }
}

uint64_t sub_1C2885F74()
{
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C2886070(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1C284858C;
  return sub_1C28853BC(a1, a2, v8, v9, v10, v6, v7);
}

uint64_t sub_1C2886148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a7;
  v7[7] = v9;
  v7[4] = a5;
  v7[5] = a6;
  v7[2] = a1;
  v7[3] = a4;
  return MEMORY[0x1F4188298](sub_1C2886178, 0, 0);
}

uint64_t sub_1C2886178()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = (int *)v0[4];
  uint64_t v3 = (void *)v0[2];
  sub_1C28CDF70();
  uint64_t v4 = (char *)v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *uint64_t v3 = v2;
  uint64_t v8 = (uint64_t (*)(char *, uint64_t))((char *)v1 + *v1);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  void *v5 = v0;
  v5[1] = sub_1C28867A4;
  uint64_t v6 = v0[6];
  return v8(v4, v6);
}

uint64_t sub_1C2886294(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1C28862E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C28CD9A0();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    if (a2)
    {
      uint64_t v9 = v7;
      uint64_t v10 = *(void *)(a3 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      uint64_t v12 = a2 - 1;
      if (v12)
      {
        uint64_t v13 = *(void *)(v10 + 72);
        uint64_t v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    sub_1C28CDA30();
    return v8;
  }
  return result;
}

uint64_t sub_1C28863EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C28CDF70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_1C2886464(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80));
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v1 + 56);
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = sub_1C284858C;
  *(void *)(v7 + 48) = v6;
  *(void *)(v7 + 56) = v4;
  *(_OWORD *)(v7 + 32) = v8;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v5;
  return MEMORY[0x1F4188298](sub_1C2886178, 0, 0);
}

uint64_t sub_1C2886568(uint64_t a1, uint64_t a2)
{
  sub_1C2846DA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1C288669C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 32) - 8) + 80));
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(v1 + 56);
  *(void *)(v2 + 16) = v7;
  *(void *)uint64_t v7 = v2;
  *(void *)(v7 + 8) = sub_1C28475CC;
  *(void *)(v7 + 48) = v6;
  *(void *)(v7 + 56) = v4;
  *(_OWORD *)(v7 + 32) = v8;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v5;
  return MEMORY[0x1F4188298](sub_1C2884D58, 0, 0);
}

uint64_t CurrentOSVersionProviding.evaluateVersionUpdateDates(currentDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v53 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  uint64_t v12 = v11;
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  uint64_t v14 = v13(a2, a3);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v10 == v14 && v12 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v17 = sub_1C28CE640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_9:
    uint64_t v18 = sub_1C28CC450();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v53, a1, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v20, 0, 1, v18);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 80))(v20, a2, a3);
    uint64_t v21 = v13(a2, a3);
    (*(void (**)(uint64_t))(a3 + 32))(v21);
  }
LABEL_11:
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  uint64_t v49 = a1;
  if (v22)
  {
    uint64_t v23 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
  }
  HKNSOperatingSystemVersionFromString();
  uint64_t v25 = v57;
  uint64_t v24 = v58;
  uint64_t v26 = v59;

  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  uint64_t v27 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  HKNSOperatingSystemVersionFromString();
  uint64_t v29 = v57;
  uint64_t v28 = v58;
  uint64_t v30 = v59;

  uint64_t v57 = v29;
  uint64_t v58 = v28;
  uint64_t v59 = v30;
  if ((HKNSOperatingSystemVersionIsUnknown() & 1) == 0)
  {
    uint64_t v57 = v25;
    uint64_t v58 = v24;
    uint64_t v59 = v26;
    if ((HKNSOperatingSystemVersionIsUnknown() & 1) == 0)
    {
      uint64_t v57 = v25;
      uint64_t v58 = v24;
      uint64_t v59 = v26;
      uint64_t v54 = v29;
      uint64_t v55 = v28;
      uint64_t v56 = v30;
      uint64_t result = HKNSOperatingSystemVersionsEqual();
      if (result) {
        return result;
      }
    }
    if (v25 == v29)
    {
      if (v24 == v28)
      {
LABEL_25:
        uint64_t v57 = v29;
        uint64_t v58 = v28;
        uint64_t v59 = v30;
        id v44 = (id)HKNSOperatingSystemVersionString();
        uint64_t v45 = sub_1C28CD730();
        uint64_t v47 = v46;

        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56))(v45, v47, a2, a3);
      }
      uint64_t v36 = sub_1C28CC450();
      uint64_t v37 = *(void *)(v36 - 8);
      long long v38 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v53, v49, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
    }
    else
    {
      uint64_t v39 = sub_1C28CC450();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v52 = v30;
      uint64_t v41 = v40;
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
      long long v38 = v53;
      v42(v53, v49, v39);
      uint64_t v51 = v28;
      unint64_t v43 = *(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56);
      v43(v38, 0, 1, v39);
      (*(void (**)(char *, uint64_t, uint64_t))(a3 + 104))(v38, a2, a3);
      v42(v38, v49, v39);
      v43(v38, 0, 1, v39);
      uint64_t v28 = v51;
      uint64_t v30 = v52;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 128))(v38, a2, a3);
    goto LABEL_25;
  }
  uint64_t v31 = v50;
  sub_1C28CCDC0();
  uint64_t v32 = sub_1C28CCE00();
  os_log_type_t v33 = sub_1C28CDCB0();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl(&dword_1C27B7000, v32, v33, "Current OS Version is unknown; cannot evaluate version update dates",
      v34,
      2u);
    MEMORY[0x1C87609B0](v34, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v31, v52);
}

id CurrentOSUpdateDateProvider.currentOSVersion.getter()
{
  return sub_1C2886DD8((SEL *)&selRef_currentOSVersion);
}

id CurrentOSUpdateDateProvider.currentOSBuild.getter()
{
  return sub_1C2886DD8((SEL *)&selRef_currentOSBuild);
}

id sub_1C2886DD8(SEL *a1)
{
  id result = [self *a1];
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1C28CD730();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CurrentOSUpdateDateProvider.previousOSBuild.getter()
{
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  sub_1C28CC680();
  return v1;
}

uint64_t sub_1C2886EA0()
{
  return sub_1C28CC690();
}

uint64_t CurrentOSUpdateDateProvider.previousOSBuild.setter()
{
  return sub_1C28CC690();
}

void (*CurrentOSUpdateDateProvider.previousOSBuild.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

uint64_t CurrentOSUpdateDateProvider.previousOSVersion.getter()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  sub_1C28CC680();
  return v1;
}

double sub_1C28870A0@<D0>(_OWORD *a1@<X8>)
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  sub_1C28CC680();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1C288712C()
{
  return sub_1C28CC690();
}

uint64_t CurrentOSUpdateDateProvider.previousOSVersion.setter()
{
  return sub_1C28CC690();
}

void (*CurrentOSUpdateDateProvider.previousOSVersion.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

uint64_t CurrentOSUpdateDateProvider.currentOSBuildUpdateDate.getter()
{
  return sub_1C28CC680();
}

uint64_t sub_1C2887358(uint64_t a1)
{
  sub_1C27BBE08();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1C27BBDA4(a1, (uint64_t)&v9 - v6);
  sub_1C27BBDA4((uint64_t)v7, (uint64_t)v5);
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC((uint64_t)v7);
}

uint64_t CurrentOSUpdateDateProvider.currentOSBuildUpdateDate.setter(uint64_t a1)
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C27BBDA4(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC(a1);
}

void (*CurrentOSUpdateDateProvider.currentOSBuildUpdateDate.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

uint64_t CurrentOSUpdateDateProvider.currentOSVersionMajorUpdateDate.getter()
{
  return sub_1C28CC680();
}

uint64_t sub_1C2887650(uint64_t a1)
{
  sub_1C27BBE08();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1C27BBDA4(a1, (uint64_t)&v9 - v6);
  sub_1C27BBDA4((uint64_t)v7, (uint64_t)v5);
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC((uint64_t)v7);
}

uint64_t CurrentOSUpdateDateProvider.currentOSVersionMajorUpdateDate.setter(uint64_t a1)
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C27BBDA4(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC(a1);
}

void (*CurrentOSUpdateDateProvider.currentOSVersionMajorUpdateDate.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

uint64_t CurrentOSUpdateDateProvider.currentOSVersionMinorUpdateDate.getter()
{
  return sub_1C28CC680();
}

uint64_t sub_1C2887948(uint64_t a1)
{
  sub_1C27BBE08();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1C27BBDA4(a1, (uint64_t)&v9 - v6);
  sub_1C27BBDA4((uint64_t)v7, (uint64_t)v5);
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC((uint64_t)v7);
}

uint64_t CurrentOSUpdateDateProvider.currentOSVersionMinorUpdateDate.setter(uint64_t a1)
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C27BBDA4(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC(a1);
}

void (*CurrentOSUpdateDateProvider.currentOSVersionMinorUpdateDate.modify(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

id sub_1C2887BD0(uint64_t a1, uint64_t a2)
{
  return sub_1C2887BE8(a1, a2, (SEL *)&selRef_currentOSBuild);
}

id sub_1C2887BDC(uint64_t a1, uint64_t a2)
{
  return sub_1C2887BE8(a1, a2, (SEL *)&selRef_currentOSVersion);
}

id sub_1C2887BE8(uint64_t a1, uint64_t a2, SEL *a3)
{
  id result = [self *a3];
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_1C28CD730();

    return (id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2887C50()
{
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  sub_1C28CC680();
  return v1;
}

uint64_t sub_1C2887CB0()
{
  return sub_1C28CC690();
}

void (*sub_1C2887D14(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

uint64_t sub_1C2887DAC()
{
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  sub_1C28CC680();
  return v1;
}

uint64_t sub_1C2887E1C()
{
  return sub_1C28CC690();
}

void (*sub_1C2887E90(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

uint64_t sub_1C2887F34()
{
  return sub_1C28CC680();
}

uint64_t sub_1C2887F9C(uint64_t a1)
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C27BBDA4(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC(a1);
}

void (*sub_1C2888070(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

uint64_t sub_1C2888114()
{
  return sub_1C28CC680();
}

uint64_t sub_1C288817C(uint64_t a1)
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C27BBDA4(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC(a1);
}

void (*sub_1C2888250(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

uint64_t sub_1C28882F4()
{
  return sub_1C28CC680();
}

uint64_t sub_1C288835C(uint64_t a1)
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C27BBDA4(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  sub_1C28CC690();
  return sub_1C281B8AC(a1);
}

void (*sub_1C2888430(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
  v2[4] = sub_1C28CC670();
  return sub_1C2887024;
}

double sub_1C28884D4@<D0>(_OWORD *a1@<X8>)
{
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  sub_1C28CC680();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1C2888554()
{
  return sub_1C28CC680();
}

uint64_t sub_1C28885D4()
{
  return sub_1C28CC680();
}

uint64_t sub_1C2888654()
{
  return sub_1C28CC680();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSBuild.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSBuild.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSBuild.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSBuild.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSVersion.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSVersion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSBuildUpdateDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSBuildUpdateDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSBuildUpdateDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMajorUpdateDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMajorUpdateDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMajorUpdateDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMinorUpdateDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMinorUpdateDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMinorUpdateDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t assignWithCopy for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F67098];
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24);
  v9(a1, a2, v7);
  v9(a1 + a3[5], a2 + a3[5], v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, v6);
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v15(v11, v12, v13);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  return a1;
}

uint64_t initializeWithTake for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F67098];
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);
  v9(a1, a2, v7);
  v9(a1 + a3[5], a2 + a3[5], v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, v6);
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  v15(v11, v12, v13);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  return a1;
}

uint64_t assignWithTake for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F67098];
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40);
  v9(a1, a2, v7);
  v9(a1 + a3[5], a2 + a3[5], v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, v6);
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40);
  v15(v11, v12, v13);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2888CA4);
}

uint64_t sub_1C2888CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2888E10);
}

uint64_t sub_1C2888E10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1C2888F74()
{
  sub_1C27D0AD8(319, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  if (v0 <= 0x3F)
  {
    sub_1C27D0AD8(319, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C28890A0()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28891B0()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2889298()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28893B8()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28894C4()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2889618()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28896FC()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2889818()
{
  sub_1C28CCBA0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C28CCB80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProfileInformation.localizedFullName.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C2889968(a1, a2, MEMORY[0x1E4F65790]);
}

uint64_t sub_1C28898C8()
{
  sub_1C28CCBA0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C28CCB80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProfileInformation.localizedShortName.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C2889968(a1, a2, MEMORY[0x1E4F65798]);
}

uint64_t sub_1C2889968(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1C28CCBA0();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v8 = v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  uint64_t v11 = a3(v6, v8, v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t ProfileInformation.makeMonogramImage(monogramRenderer:size:scale:rightToLeft:)(void *a1, int a2, uint64_t a3, uint64_t (**a4)(void, void), double a5, double a6, double a7)
{
  int v48 = a2;
  uint64_t v13 = a1;
  uint64_t v14 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_1C28CCE10();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = &v41[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C28CCDD0();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v47 = v7;
  v21(v16, v7, a3);
  uint64_t v22 = sub_1C28CCE00();
  os_log_type_t v23 = sub_1C28CDCD0();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v45 = v17;
    uint64_t v26 = v25;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v50 = v44;
    *(_DWORD *)uint64_t v26 = 136315394;
    int v42 = v24;
    uint64_t v27 = sub_1C28CE830();
    uint64_t v46 = v13;
    uint64_t v49 = sub_1C27D36AC(v27, v28, &v50);
    uint64_t v43 = v18;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v29 = a4[4](a3, a4);
    uint64_t v49 = sub_1C27D36AC(v29, v30, &v50);
    uint64_t v13 = v46;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, a3);
    _os_log_impl(&dword_1C27B7000, v22, (os_log_type_t)v42, "[%s] Creating monogram image with full name '%s'", (uint8_t *)v26, 0x16u);
    uint64_t v31 = v44;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v31, -1, -1);
    MEMORY[0x1C87609B0](v26, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v20, v45);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, a3);

    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
  }
  uint64_t v32 = v13[3];
  uint64_t v33 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v32);
  uint64_t v34 = a4[1](a3, a4);
  uint64_t v36 = v35;
  uint64_t v37 = a4[2](a3, a4);
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, double, double, double))(v33 + 8))(v34, v36, v37, v38, v48 & 1, v32, v33, a5, a6, a7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v39;
}

double ProfileInformation.defaultFetchImageSize.getter()
{
  return 150.0;
}

unint64_t sub_1C2889E54(char a1)
{
  unint64_t result = 0x6D614E7473726966;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 2:
      unint64_t result = 0x616D496F746F6870;
      break;
    case 3:
      unint64_t result = 0x6564496573756572;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C2889F2C(char a1)
{
  unint64_t result = 0x6D614E7473726966;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 2:
      unint64_t result = 0x616D496F746F6870;
      break;
    case 3:
      unint64_t result = 0x6564496573756572;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C288A004(unsigned __int8 *a1, char *a2)
{
  return sub_1C27F2608(*a1, *a2);
}

uint64_t sub_1C288A010()
{
  return sub_1C2889298();
}

uint64_t sub_1C288A018()
{
  return sub_1C289AB64();
}

uint64_t sub_1C288A020()
{
  return sub_1C28896FC();
}

uint64_t sub_1C288A028@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C288BF58();
  *a1 = result;
  return result;
}

unint64_t sub_1C288A058@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C2889E54(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C288A084()
{
  return sub_1C2889F2C(*v0);
}

uint64_t sub_1C288A08C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C288BF58();
  *a1 = result;
  return result;
}

uint64_t sub_1C288A0B4(uint64_t a1)
{
  unint64_t v2 = sub_1C288C184();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C288A0F0(uint64_t a1)
{
  unint64_t v2 = sub_1C288C184();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C288A12C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C288A18C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C288A1D8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C288A22C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C288A280(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C288A2E0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C288A32C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C288A380())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C288A3D4()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1C288A408(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_1C288A448())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C288A49C@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_1C288BD70(v2);
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_1C288A500(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  sub_1C288BEA8();
}

uint64_t sub_1C288A58C()
{
  swift_getKeyPath();
  uint64_t v0 = swift_retain();
  uint64_t v1 = sub_1C288BD70(v0);
  swift_release();
  swift_release();
  return v1;
}

void sub_1C288A5E8(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C288BEA8();
}

void (*sub_1C288A668(uint64_t *a1))(id *a1, char a2)
{
  a1[1] = v1;
  a1[2] = swift_getKeyPath();
  a1[3] = swift_getKeyPath();
  uint64_t v3 = swift_retain();
  *a1 = sub_1C288BD70(v3);
  swift_release();
  return sub_1C288A6F0;
}

void sub_1C288A6F0(id *a1, char a2)
{
  id v4 = *a1;
  if (a2)
  {
    id v2 = v4;
    swift_retain();
    sub_1C288BEA8();

    uint64_t v3 = v2;
  }
  else
  {
    swift_retain();
    sub_1C288BEA8();
    uint64_t v3 = v4;
  }
}

void sub_1C288A790(void **a1, uint64_t *a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  id v4 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v2;
  id v5 = v2;
}

void *sub_1C288A7E8()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void sub_1C288A82C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 64);
  *(void *)(v1 + 64) = a1;
}

uint64_t (*sub_1C288A874())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C288A8C8()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = (uint64_t)v1;
  if (!v1)
  {
    swift_getKeyPath();
    uint64_t v3 = swift_retain();
    uint64_t v2 = sub_1C288BD70(v3);
    swift_release();
    swift_release();
  }
  id v4 = v1;
  return v2;
}

uint64_t sub_1C288A950(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 72) = v3;
  *(void *)(v4 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C288A9B0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C288A9FC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C288AA50())()
{
  return j_j__swift_endAccess;
}

uint64_t ProfileImageInformation.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProfileImageInformation.__allocating_init(firstName:lastName:photoImage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  swift_allocObject();
  uint64_t v10 = sub_1C288BFA4(a1, a2, a3, a4, a5);

  return v10;
}

uint64_t ProfileImageInformation.init(firstName:lastName:photoImage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = sub_1C288BFA4(a1, a2, a3, a4, a5);

  return v6;
}

id sub_1C288AB7C(char a1, double a2, double a3)
{
  swift_beginAccess();
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  swift_beginAccess();
  uint64_t v10 = v3[4];
  uint64_t v9 = v3[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = ContactsMonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(a2, a2, a3, v7, v8, v10, v9, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C288AC44()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v0 + 64);
  if (v2
    && (uint64_t v3 = (CGImage *)objc_msgSend(v2, sel_CGImage)) != 0
    && (uint64_t v4 = v3, v5 = CGImageGetDataProvider(v3), v4, v5)
    && (CFDataRef v6 = CGDataProviderCopyData(v5), v5, v6))
  {
    sub_1C28CE720();
    type metadata accessor for CFData(0);
    sub_1C288C440(&qword_1EA311108, 255, type metadata accessor for CFData);
    CFDataRef v7 = v6;
    sub_1C28CC5F0();
  }
  else
  {
    sub_1C28CE720();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*(void *)(v1 + 40)) {
    return sub_1C28CE720();
  }
  sub_1C28CE720();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  return swift_bridgeObjectRelease();
}

uint64_t ProfileImageInformation.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProfileImageInformation.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C288AEAC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C288C22C(0, &qword_1EBB74830, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C288C184();
  sub_1C28CE800();
  swift_beginAccess();
  char v15 = 0;
  swift_bridgeObjectRetain();
  sub_1C28CE5A0();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v14 = 1;
    swift_bridgeObjectRetain();
    sub_1C28CE560();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v13 = *(void *)(v3 + 64);
    char v12 = 2;
    sub_1C288C1D8();
    sub_1C28CE5E0();
    swift_beginAccess();
    char v12 = 3;
    swift_bridgeObjectRetain();
    sub_1C28CE5A0();
    swift_bridgeObjectRelease();
    char v12 = 4;
    sub_1C28CE5A0();
    swift_beginAccess();
    v11[7] = 5;
    sub_1C28CE5B0();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1C288B1AC()
{
  return sub_1C28CE740();
}

uint64_t ProfileImageInformation.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ProfileImageInformation.init(from:)(a1);
  return v2;
}

void *ProfileImageInformation.init(from:)(void *a1)
{
  uint64_t v2 = (void *)v1;
  sub_1C288C22C(0, &qword_1EBB75CB0, MEMORY[0x1E4FBBDC0]);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v26 - v5;
  sub_1C288C338(0, &qword_1EBB75A78, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy);
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 48) = 0;
  uint64_t v7 = (unsigned char *)(v1 + 48);
  *(void *)(v1 + 40) = 0;
  uint64_t v8 = swift_allocObject();
  sub_1C288C2B4();
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 36) = 0;
  *(void *)(v9 + 16) = sub_1C288BA38;
  *(void *)(v9 + 24) = 0;
  *(unsigned char *)(v9 + 32) = 0;
  *(void *)(v8 + 16) = v9;
  v2[9] = 0xD000000000000016;
  v2[7] = v8;
  v2[10] = 0x80000001C28DD490;
  uint64_t v10 = a1[3];
  unint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1C288C184();
  id v11 = v34;
  sub_1C28CE7F0();
  if (v11)
  {
    uint64_t v14 = (uint64_t)v30;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    type metadata accessor for ProfileImageInformation();
    swift_deallocPartialClassInstance();
    uint64_t v25 = v14;
  }
  else
  {
    uint64_t v34 = v7;
    uint64_t v12 = v28;
    uint64_t v13 = v29;
    char v33 = 0;
    v2[2] = sub_1C28CE4E0();
    v2[3] = v16;
    char v33 = 1;
    uint64_t v17 = sub_1C28CE4A0();
    uint64_t v27 = v18;
    swift_beginAccess();
    uint64_t v19 = v27;
    v2[4] = v17;
    v2[5] = v19;
    swift_bridgeObjectRelease();
    char v31 = 2;
    sub_1C288C3A4();
    sub_1C28CE520();
    v2[8] = v32;
    LOBYTE(v32) = 3;
    uint64_t v20 = sub_1C28CE4E0();
    uint64_t v22 = v21;
    swift_beginAccess();
    v2[9] = v20;
    v2[10] = v22;
    swift_bridgeObjectRelease();
    char v31 = 4;
    v2[11] = sub_1C28CE4E0();
    v2[12] = v23;
    char v31 = 5;
    LOBYTE(v20) = sub_1C28CE4F0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v13);
    int v24 = v34;
    swift_beginAccess();
    *int v24 = v20 & 1;
    uint64_t v25 = (uint64_t)v30;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v25);
  return v2;
}

uint64_t sub_1C288B678()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 72);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C288B6C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C288B6FC()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C288B74C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C288B79C()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 64);
  uint64_t v3 = (uint64_t)v2;
  if (!v2)
  {
    swift_getKeyPath();
    uint64_t v4 = swift_retain();
    uint64_t v3 = sub_1C288BD70(v4);
    swift_release();
    swift_release();
  }
  id v5 = v2;
  return v3;
}

uint64_t sub_1C288B828()
{
  return sub_1C28CE740();
}

uint64_t sub_1C288B86C()
{
  return sub_1C288AC44();
}

uint64_t sub_1C288B890()
{
  return sub_1C28CE740();
}

uint64_t sub_1C288B8D0(void **a1, void **a2)
{
  return _s16HealthExperience23ProfileImageInformationC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

void *sub_1C288B8DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for ProfileImageInformation();
  uint64_t v5 = swift_allocObject();
  uint64_t result = ProfileImageInformation.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C288B934(void *a1)
{
  return sub_1C288AEAC(a1);
}

uint64_t static ProfileImageInformation.empty.getter()
{
  return sub_1C288BFA4(0, 0xE000000000000000, 0, 0, 0);
}

uint64_t ProfileImageInformation.profileImageInformation.getter()
{
  return swift_retain();
}

uint64_t sub_1C288B9A8()
{
  return swift_retain();
}

uint64_t sub_1C288B9B0()
{
  sub_1C28CCBA0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1C28CCB80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C288BA38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)*a1;
  id v4 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v4, sel_scale);
  double v6 = v5;

  LOBYTE(v4) = objc_msgSend(self, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, 0) == (id)1;
  swift_beginAccess();
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  swift_beginAccess();
  uint64_t v9 = v3[4];
  uint64_t v10 = v3[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = ContactsMonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(150.0, 150.0, v6, v7, v8, v9, v10, (char)v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v11;
  return result;
}

void (*sub_1C288BB5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>))(void *__return_ptr, uint64_t *)
{
  void (*v4)(void *__return_ptr, uint64_t *);
  uint64_t v6;
  uint64_t v8;
  void (*v9)(void *__return_ptr, uint64_t *);

  uint64_t v8 = *a2;
  id v4 = *(void (**)(void *__return_ptr, uint64_t *))a1;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    double v6 = *(void *)(a1 + 8);
    v4(&v9, &v8);
    sub_1C288CD28(v4, v6, 0);
    id v4 = v9;
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
  }
  *a3 = v4;
  return v4;
}

uint64_t _s16HealthExperience23ProfileImageInformationC2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  swift_beginAccess();
  id v4 = (void *)a1[8];
  swift_beginAccess();
  double v5 = (void *)a2[8];
  if (v4)
  {
    if (v5)
    {
      sub_1C2819D3C();
      id v6 = v5;
      id v7 = v4;
      char v8 = sub_1C28CDF30();

      if (v8) {
        goto LABEL_4;
      }
    }
LABEL_13:
    char v12 = 0;
    return v12 & 1;
  }
  if (v5) {
    goto LABEL_13;
  }
LABEL_4:
  swift_beginAccess();
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  swift_beginAccess();
  if (v9 == a2[2] && v10 == a2[3] || (char v11 = sub_1C28CE640(), v12 = 0, (v11 & 1) != 0))
  {
    swift_beginAccess();
    uint64_t v13 = a1[4];
    uint64_t v14 = a1[5];
    swift_beginAccess();
    uint64_t v15 = a2[5];
    char v12 = (v14 | v15) == 0;
    if (v14 && v15)
    {
      if (v13 == a2[4] && v14 == v15) {
        char v12 = 1;
      }
      else {
        char v12 = sub_1C28CE640();
      }
    }
  }
  return v12 & 1;
}

uint64_t sub_1C288BD70(uint64_t a1)
{
  v7[3] = a1;
  swift_getAtKeyPath();
  v7[1] = a1;
  uint64_t v2 = *(os_unfair_lock_s **)(v7[2] + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  id v4 = v2 + 9;
  os_unfair_lock_lock(v2 + 9);
  sub_1C288CD38(v3, v7);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v7[0];
  swift_release();
  return v5;
}

uint64_t sub_1C288BE10(uint64_t a1)
{
  v7[3] = a1;
  swift_getAtKeyPath();
  v7[1] = a1;
  uint64_t v2 = *(os_unfair_lock_s **)(v7[2] + 16);
  uint64_t v3 = (uint64_t)&v2[4];
  id v4 = v2 + 9;
  os_unfair_lock_lock(v2 + 9);
  sub_1C288CCB4(v3, v7);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v7[0];
  swift_release();
  return v5;
}

uint64_t sub_1C288BEA8()
{
  swift_getAtKeyPath();
  uint64_t v0 = *(os_unfair_lock_s **)(v4 + 16);
  uint64_t v1 = (uint64_t)&v0[4];
  uint64_t v2 = v0 + 9;
  os_unfair_lock_lock(v0 + 9);
  sub_1C288CCD0(v1);
  os_unfair_lock_unlock(v2);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C288BF58()
{
  unint64_t v0 = sub_1C28CE460();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C288BFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  sub_1C288C338(0, &qword_1EBB75A78, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy);
  *(void *)(v6 + 40) = 0;
  *(unsigned char *)(v6 + 48) = 0;
  *(void *)(v6 + 32) = 0;
  uint64_t v12 = swift_allocObject();
  sub_1C288C2B4();
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 36) = 0;
  *(void *)(v13 + 16) = sub_1C288BA38;
  *(void *)(v13 + 24) = 0;
  *(unsigned char *)(v13 + 32) = 0;
  *(void *)(v12 + 16) = v13;
  *(void *)(v6 + 56) = v12;
  *(void *)(v6 + 72) = 0xD000000000000016;
  *(void *)(v6 + 80) = 0x80000001C28DD490;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_beginAccess();
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v6 + 64) = a5;
  id v14 = a5;
  uint64_t v17 = sub_1C28CE830();
  uint64_t v18 = v15;
  sub_1C28CD7C0();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C27D962C();
  sub_1C28CD750();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  *(void *)(v6 + 88) = v17;
  *(void *)(v6 + 96) = v18;
  return v6;
}

unint64_t sub_1C288C184()
{
  unint64_t result = qword_1EBB75B18;
  if (!qword_1EBB75B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75B18);
  }
  return result;
}

unint64_t sub_1C288C1D8()
{
  unint64_t result = qword_1EBB768F8;
  if (!qword_1EBB768F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB768F8);
  }
  return result;
}

void sub_1C288C22C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C288C184();
    unint64_t v7 = a3(a1, &type metadata for ProfileImageInformation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for ProfileImageInformation()
{
  return self;
}

void sub_1C288C2B4()
{
  if (!qword_1EBB767F8)
  {
    sub_1C288C338(255, qword_1EBB75FC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy.State);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C28CE1A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB767F8);
    }
  }
}

void sub_1C288C338(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for ProfileImageInformation();
    sub_1C28700A4();
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C288C3A4()
{
  unint64_t result = qword_1EBB77000;
  if (!qword_1EBB77000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB77000);
  }
  return result;
}

uint64_t sub_1C288C3F8(uint64_t a1, uint64_t a2)
{
  return sub_1C288C440(&qword_1EA311110, a2, (void (*)(uint64_t))type metadata accessor for ProfileImageInformation);
}

uint64_t sub_1C288C440(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C288C488@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C288C4D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C288C528@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 48);
  return result;
}

uint64_t sub_1C288C570(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 48) = v2;
  return result;
}

id sub_1C288C5B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 64);
  *a2 = v4;

  return v4;
}

uint64_t sub_1C288C610@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 80);
  *a2 = *(void *)(v3 + 72);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of ProfileInformation.firstName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProfileInformation.lastName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ProfileInformation.image.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ProfileInformation.localizedFullName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for ProfileImageInformation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProfileImageInformation);
}

uint64_t dispatch thunk of ProfileImageInformation.firstName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ProfileImageInformation.firstName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ProfileImageInformation.firstName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ProfileImageInformation.lastName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ProfileImageInformation.lastName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ProfileImageInformation.lastName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of ProfileImageInformation.isPrimaryProfile.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ProfileImageInformation.isPrimaryProfile.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ProfileImageInformation.isPrimaryProfile.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ProfileImageInformation.monogramImage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of ProfileImageInformation.monogramImage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ProfileImageInformation.monogramImage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ProfileImageInformation.photoImage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of ProfileImageInformation.photoImage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ProfileImageInformation.photoImage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ProfileImageInformation.image.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of ProfileImageInformation.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of ProfileImageInformation.reuseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of ProfileImageInformation.reuseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of ProfileImageInformation.__allocating_init(firstName:lastName:photoImage:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of ProfileImageInformation.renderMonogram(size:scale:rightToLeft:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of ProfileImageInformation.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of ProfileImageInformation.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of ProfileImageInformation.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of ProfileImageInformation.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of ProfileImageInformationProviding.profileImageInformation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *storeEnumTagSinglePayload for ProfileImageInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C288CB74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProfileImageInformation.CodingKeys()
{
  return &type metadata for ProfileImageInformation.CodingKeys;
}

unint64_t sub_1C288CBB0()
{
  unint64_t result = qword_1EA311118;
  if (!qword_1EA311118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311118);
  }
  return result;
}

unint64_t sub_1C288CC08()
{
  unint64_t result = qword_1EBB75B28[0];
  if (!qword_1EBB75B28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB75B28);
  }
  return result;
}

unint64_t sub_1C288CC60()
{
  unint64_t result = qword_1EBB75B20;
  if (!qword_1EBB75B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75B20);
  }
  return result;
}

uint64_t sub_1C288CCB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C28996E8(a1, *(uint64_t **)(v2 + 16), a2);
}

id sub_1C288CCD0(uint64_t a1)
{
  int v3 = **(void ***)(v1 + 16);
  sub_1C288CD28(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  return v3;
}

void sub_1C288CD28(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

void (*sub_1C288CD38@<X0>(uint64_t a1@<X0>, void *a2@<X8>))(void *__return_ptr, uint64_t *)
{
  return sub_1C288BB5C(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t CodableRawRepresentable.init(representableValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, 1, 1, a2);
  uint64_t v5 = sub_1C28CDF70();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(a3, a1, v5);
}

uint64_t CodableRawRepresentable.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C28CDF70();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t CodableRawRepresentable.wrappedValue.setter(uint64_t a1)
{
  uint64_t v3 = sub_1C28CDF70();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*CodableRawRepresentable.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C288CF00(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001C28DD520)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1C288CF88()
{
  return 0xD000000000000012;
}

uint64_t sub_1C288CFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_1C288CF00(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1C288CFD4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C28016F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C288D00C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C288D060(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t CodableRawRepresentable.encode(to:)(void *a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = a2[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = AssociatedTypeWitness;
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v27 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v28 = v8;
  uint64_t v29 = (char *)&v26 - v12;
  uint64_t v13 = a2[4];
  uint64_t v14 = a2[5];
  uint64_t v36 = v4;
  uint64_t v37 = v8;
  uint64_t v38 = v13;
  uint64_t v39 = v14;
  uint64_t v26 = v14;
  type metadata accessor for CodableRawRepresentable.CodingKeys();
  swift_getWitnessTable();
  uint64_t v15 = sub_1C28CE5F0();
  uint64_t v35 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = v32;
  sub_1C28CE800();
  uint64_t v19 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v7, v34, v33);
  uint64_t v20 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
  }
  else
  {
    uint64_t v21 = v27;
    sub_1C28CD8A0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v4);
    uint64_t v23 = v29;
    uint64_t v22 = v30;
    uint64_t v24 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v29, v21, v31);
    sub_1C28CE5E0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v17, v15);
}

uint64_t type metadata accessor for CodableRawRepresentable.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t CodableRawRepresentable.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v63 = a6;
  uint64_t v54 = sub_1C28CDF70();
  uint64_t v53 = *(void *)(v54 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v54);
  int v61 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v57 = (char *)&v51 - v14;
  uint64_t v60 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v52 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v56 = sub_1C28CDF70();
  uint64_t v66 = *(void *)(v56 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v56);
  id v70 = (char *)&v51 - v18;
  uint64_t v71 = AssociatedTypeWitness;
  uint64_t v65 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v55 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v68 = (char *)&v51 - v21;
  uint64_t v72 = a2;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  type metadata accessor for CodableRawRepresentable.CodingKeys();
  swift_getWitnessTable();
  uint64_t v69 = sub_1C28CE540();
  uint64_t v64 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v23 = (char *)&v51 - v22;
  uint64_t v58 = a3;
  uint64_t v59 = a2;
  uint64_t v72 = a2;
  uint64_t v73 = a3;
  uint64_t v67 = a4;
  uint64_t v74 = a4;
  uint64_t v75 = a5;
  uint64_t v24 = type metadata accessor for CodableRawRepresentable();
  uint64_t v62 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v51 - v25;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v27 = (uint64_t)v76;
  sub_1C28CE7F0();
  uint64_t v28 = (uint64_t)a1;
  if (!v27)
  {
    uint64_t v29 = v66;
    uint64_t v76 = v26;
    uint64_t v30 = v68;
    uint64_t v51 = v24;
    uint64_t v32 = v64;
    uint64_t v31 = v65;
    uint64_t v33 = (char *)v28;
    sub_1C28CE4D0();
    uint64_t v67 = v23;
    uint64_t v34 = v31;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v70, 1, v71) == 1)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v70, v56);
      uint64_t v35 = v33;
      uint64_t v36 = v63;
      uint64_t v38 = v60;
      uint64_t v37 = (uint64_t)v61;
      uint64_t v39 = v59;
      uint64_t v40 = v51;
    }
    else
    {
      uint64_t v41 = v30;
      uint64_t v42 = v71;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v30, v70, v71);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v55, v30, v42);
      uint64_t v43 = v57;
      uint64_t v39 = v59;
      sub_1C28CD8B0();
      uint64_t v44 = v34;
      uint64_t v38 = v60;
      int v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48))(v43, 1, v39);
      id v70 = v33;
      uint64_t v37 = (uint64_t)v61;
      uint64_t v40 = v51;
      if (v45 != 1)
      {
        uint64_t v49 = v52;
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v52, v43, v39);
        (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v37, v49, v39);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v37, 0, 1, v39);
        uint64_t v46 = (uint64_t)v76;
        CodableRawRepresentable.init(representableValue:)(v37, v39, (uint64_t)v76);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v49, v39);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v68, v71);
        uint64_t v47 = v67;
        uint64_t v48 = v62;
        uint64_t v36 = v63;
        uint64_t v35 = v70;
        goto LABEL_8;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v71);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v43, v54);
      uint64_t v35 = v70;
      uint64_t v36 = v63;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v37, 1, 1, v39);
    uint64_t v46 = (uint64_t)v76;
    CodableRawRepresentable.init(representableValue:)(v37, v39, (uint64_t)v76);
    uint64_t v47 = v67;
    uint64_t v48 = v62;
LABEL_8:
    (*(void (**)(char *, uint64_t))(v32 + 8))(v47, v69);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v36, v46, v40);
    uint64_t v28 = (uint64_t)v35;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v28);
}

uint64_t type metadata accessor for CodableRawRepresentable()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C288DBA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CodableRawRepresentable.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(char **)(a2 + 32), *(void *)(a2 + 40), a3);
}

uint64_t sub_1C288DBCC(void *a1, void *a2)
{
  return CodableRawRepresentable.encode(to:)(a1, a2);
}

uint64_t static CodableRawRepresentable<>.== infix(_:_:)(char *a1, char *a2, char *a3, uint64_t a4)
{
  uint64_t v38 = a4;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v5 = *((void *)a3 - 1);
  MEMORY[0x1F4188790](a1);
  uint64_t v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C28CDF70();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v39 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = *(void *)(v7 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v9);
  uint64_t v44 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v35 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v20((char *)&v35 - v18, v42, v7);
  v20(v17, v43, v7);
  uint64_t v40 = TupleTypeMetadata2;
  uint64_t v21 = &v11[*(int *)(TupleTypeMetadata2 + 48)];
  v20(v11, v19, v7);
  uint64_t v42 = v21;
  v20(v21, v17, v7);
  uint64_t v41 = v5;
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v43 = a3;
  if (v22(v11, 1, (uint64_t)a3) != 1)
  {
    uint64_t v36 = v12;
    v20(v44, v11, v7);
    uint64_t v26 = v42;
    uint64_t v25 = v43;
    int v27 = v22(v42, 1, (uint64_t)v43);
    uint64_t v28 = v41;
    uint64_t v29 = (void (**)(char *, uint64_t))(v41 + 8);
    if (v27 != 1)
    {
      uint64_t v31 = v37;
      (*(void (**)(char *, char *, char *))(v41 + 32))(v37, v26, v25);
      char v24 = sub_1C28CD6E0();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v28 + 8);
      v32(v31, (uint64_t)v25);
      uint64_t v33 = *(void (**)(char *, uint64_t))(v36 + 8);
      v33(v17, v7);
      v33(v19, v7);
      v32(v44, (uint64_t)v25);
      v33(v11, v7);
      return v24 & 1;
    }
    uint64_t v30 = *(void (**)(char *, uint64_t))(v36 + 8);
    v30(v17, v7);
    v30(v19, v7);
    (*v29)(v44, (uint64_t)v25);
    goto LABEL_6;
  }
  uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v17, v7);
  v23(v19, v7);
  if (v22(v42, 1, (uint64_t)v43) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
    char v24 = 0;
    return v24 & 1;
  }
  v23(v11, v7);
  char v24 = 1;
  return v24 & 1;
}

uint64_t sub_1C288E050(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  return static CodableRawRepresentable<>.== infix(_:_:)(a1, a2, *(char **)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t sub_1C288E05C()
{
  uint64_t result = sub_1C28CDF70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C288E0EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1C288E228(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1C288E2EC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C288E3E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_1C288E550(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C288E648(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_1C288E7B4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1C288E954(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1C288EB90);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

unsigned char *sub_1C288EBB8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C288EC54);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C288EC7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C288EC98()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C288ECB4()
{
  return swift_getWitnessTable();
}

Swift::String __swiftcall Double.secondsAgoDescription()()
{
  double v1 = v0;
  sub_1C288ED60();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C28D23F0;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v4 = MEMORY[0x1E4FBB460];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB3D0];
  *(void *)(v2 + 64) = v4;
  *(CFAbsoluteTime *)(v2 + 32) = Current - v1;

  uint64_t v5 = sub_1C28CD740();
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

void sub_1C288ED60()
{
  if (!qword_1EBB75988)
  {
    sub_1C288EDB8();
    unint64_t v0 = sub_1C28CE620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75988);
    }
  }
}

unint64_t sub_1C288EDB8()
{
  unint64_t result = qword_1EBB75990;
  if (!qword_1EBB75990)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB75990);
  }
  return result;
}

uint64_t LockedCancellables.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC870];
  sub_1C28CC650();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_1C28CC640();
  return v0;
}

uint64_t sub_1C288EE70(uint64_t (*a1)(uint64_t))
{
  sub_1C28CC620();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C28CE050();
    sub_1C28CD0F0();
    sub_1C288F24C();
    uint64_t result = sub_1C28CDB30();
    uint64_t v3 = v24;
    uint64_t v21 = v25;
    uint64_t v6 = v26;
    uint64_t v5 = v27;
    unint64_t v7 = v28;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
    uint64_t v21 = v3 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v3 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v20 = (unint64_t)(v6 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_1C28CE080()) {
      goto LABEL_35;
    }
    sub_1C28CD0F0();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v14 = v22;
    swift_unknownObjectRelease();
    uint64_t v13 = v5;
    uint64_t v11 = v7;
    if (!v22) {
      goto LABEL_35;
    }
LABEL_31:
    if (a1(v14))
    {
      swift_beginAccess();
      uint64_t v18 = sub_1C27CF210();
      swift_endAccess();
      if (v18)
      {
        uint64_t v19 = swift_retain();
        MEMORY[0x1C875EE90](v19);
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C28CD970();
        }
        sub_1C28CD9D0();
        sub_1C28CD940();
        swift_release();
      }
    }
    uint64_t result = swift_release();
    uint64_t v5 = v13;
    unint64_t v7 = v11;
  }
  if (v7)
  {
    uint64_t v11 = (v7 - 1) & v7;
    unint64_t v12 = __clz(__rbit64(v7)) | (v5 << 6);
    uint64_t v13 = v5;
LABEL_30:
    uint64_t v14 = *(void *)(*(void *)(v3 + 48) + 8 * v12);
    swift_retain();
    if (!v14) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  int64_t v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v20) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v21 + 8 * v15);
    uint64_t v13 = v5 + 1;
    if (!v16)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v20) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v20) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v21 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v20) {
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v21 + 8 * v13);
          if (!v16)
          {
            uint64_t v17 = v5 + 5;
            while (v20 != v17)
            {
              unint64_t v16 = *(void *)(v21 + 8 * v17++);
              if (v16)
              {
                uint64_t v13 = v17 - 1;
                goto LABEL_29;
              }
            }
LABEL_35:
            sub_1C27D9684();
            sub_1C28CC630();
            return v23;
          }
        }
      }
    }
LABEL_29:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t LockedCancellables.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LockedCancellables.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

unint64_t sub_1C288F24C()
{
  unint64_t result = qword_1EBB755B8;
  if (!qword_1EBB755B8)
  {
    sub_1C28CD0F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB755B8);
  }
  return result;
}

uint64_t method lookup function for LockedCancellables(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LockedCancellables);
}

uint64_t dispatch thunk of LockedCancellables.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of LockedCancellables.removeAll(where:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

void NSUserActivity.addUserInfoEntriesFromKeys<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v19 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = sub_1C288F4D4;
  void v14[6] = &v15;
  uint64_t v6 = sub_1C28CD640();
  sub_1C2807E14(0, (unint64_t *)&qword_1EBB74070);
  uint64_t v8 = v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  if (*(void *)(sub_1C2833270((void (*)(char *, char *))sub_1C288F538, (uint64_t)v14, v6, v8, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v10)+ 16))
  {
    sub_1C2890ADC(0, (unint64_t *)&qword_1EBB742E8);
    uint64_t v11 = sub_1C28CE3F0();
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBC868];
  }
  uint64_t v19 = v11;
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_1C28906C8(v12, 1, &v19);
  swift_bridgeObjectRelease();
  sub_1C288F5B8(v19);
  swift_release();
  uint64_t v13 = (void *)sub_1C28CD5F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_addUserInfoEntriesFromDictionary_, v13);
}

uint64_t sub_1C288F4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C28CD8A0();
  sub_1C27D3780(a3, a1);
  return v6;
}

uint64_t sub_1C288F538@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v2 + 40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = v5(a2 + 2, a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_1C288F5B8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C2890ADC(0, &qword_1EBB742F0);
    uint64_t v2 = sub_1C28CE3F0();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1C27D3780(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1C2807E74(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1C2807E74(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1C2807E74(v36, v37);
    sub_1C2807E74(v37, &v33);
    uint64_t result = sub_1C28CE0A0();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1C2807E74(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1C27D9684();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

double sub_1C288F994@<D0>(_OWORD *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_userInfo);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C28CD610();

    sub_1C28CCB50();
    sub_1C2890A84();
    sub_1C28CD8A0();
    sub_1C28CE0C0();
    if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1C287240C((uint64_t)v9), (v7 & 1) != 0))
    {
      sub_1C27D3780(*(void *)(v5 + 56) + 32 * v6, (uint64_t)a1);
    }
    else
    {
      *a1 = 0u;
      a1[1] = 0u;
    }
    sub_1C2876CB0((uint64_t)v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

double NSUserActivity.retrieveUserInfoValueForKey<A>(_:)@<D0>(_OWORD *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_userInfo);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1C28CD610();

    sub_1C28CD8A0();
    sub_1C28CE0C0();
    if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1C287240C((uint64_t)v9), (v7 & 1) != 0))
    {
      sub_1C27D3780(*(void *)(v5 + 56) + 32 * v6, (uint64_t)a1);
    }
    else
    {
      *a1 = 0u;
      a1[1] = 0u;
    }
    sub_1C2876CB0((uint64_t)v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t NSUserActivity.getDate(for:)@<X0>(uint64_t a1@<X8>)
{
  sub_1C288F994(&v5);
  if (v6)
  {
    if (swift_dynamicCast())
    {
      sub_1C28CC3B0();
      uint64_t v2 = sub_1C28CC450();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 0, 1, v2);
    }
  }
  else
  {
    sub_1C27B9E38((uint64_t)&v5);
  }
  uint64_t v4 = sub_1C28CC450();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 1, 1, v4);
}

uint64_t NSUserActivity.addProfileIdentifier(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  v37[15] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C28CCB70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = self;
  v37[0] = 0;
  id v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v37);
  id v14 = v37[0];
  if (v13)
  {
    uint64_t v15 = sub_1C28CC390();
    unint64_t v17 = v16;

    sub_1C280742C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C28D23F0;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F656E8], v8);
    uint64_t v19 = (void *)sub_1C28CCB60();
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v37[0] = v19;
    v37[1] = v21;
    sub_1C28CE0C0();
    *(void *)(inited + 96) = MEMORY[0x1E4F277C0];
    *(void *)(inited + 72) = v15;
    *(void *)(inited + 80) = v17;
    sub_1C27E2B38(v15, v17);
    sub_1C2806454(inited);
    unint64_t v22 = (void *)sub_1C28CD5F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v22);

    return sub_1C27E2870(v15, v17);
  }
  else
  {
    unint64_t v24 = v14;
    BOOL v25 = (void *)sub_1C28CC290();

    swift_willThrow();
    sub_1C28CCDC0();
    id v26 = v25;
    id v27 = v25;
    uint64_t v28 = sub_1C28CCE00();
    os_log_type_t v29 = sub_1C28CDCB0();
    if (os_log_type_enabled(v28, v29))
    {
      long long v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v37[0] = v31;
      *(_DWORD *)long long v30 = 136315138;
      uint64_t v35 = v30 + 4;
      uint64_t v36 = (uint64_t)v25;
      id v32 = v25;
      sub_1C27C7060();
      uint64_t v33 = sub_1C28CD750();
      uint64_t v36 = sub_1C27D36AC(v33, v34, (uint64_t *)v37);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v28, v29, "Failed to encode profileIdentifier. Error: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v31, -1, -1);
      MEMORY[0x1C87609B0](v30, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t NSUserActivity.fetchProfileIdentifier()()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = sub_1C28CCB70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(v0, sel_userInfo);
  uint64_t v30 = v2;
  if (!v11)
  {
    long long v34 = 0u;
    long long v35 = 0u;
LABEL_10:
    sub_1C27B9E38((uint64_t)&v34);
    goto LABEL_11;
  }
  unint64_t v12 = v11;
  uint64_t v13 = sub_1C28CD610();

  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F656E8], v7);
  uint64_t v14 = sub_1C28CCB60();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v31 = v14;
  uint64_t v32 = v16;
  sub_1C28CE0C0();
  if (*(void *)(v13 + 16) && (unint64_t v17 = sub_1C287240C((uint64_t)v33), (v18 & 1) != 0))
  {
    sub_1C27D3780(*(void *)(v13 + 56) + 32 * v17, (uint64_t)&v34);
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  sub_1C2876CB0((uint64_t)v33);
  swift_bridgeObjectRelease();
  if (!*((void *)&v35 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v20 = v33[0];
    unint64_t v19 = v33[1];
    sub_1C27D1C9C(0, &qword_1EBB75980);
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77120);
    uint64_t v28 = sub_1C28CDE30();
    sub_1C27E2870(v20, v19);
    return v28;
  }
LABEL_11:
  sub_1C28CCDC0();
  unint64_t v21 = sub_1C28CCE00();
  os_log_type_t v22 = sub_1C28CDCA0();
  if (os_log_type_enabled(v21, v22))
  {
    char v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(void *)&long long v34 = v24;
    *(_DWORD *)char v23 = 136446210;
    v33[0] = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v25 = sub_1C28CD750();
    v33[0] = sub_1C27D36AC(v25, v26, (uint64_t *)&v34);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v21, v22, "[%{public}s]: Profile Identifier is missing from UserActivity", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v24, -1, -1);
    MEMORY[0x1C87609B0](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v30);
  return 0;
}

void sub_1C28906C8(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_1C2890B34(a1 + 32, (uint64_t)&v44);
  uint64_t v7 = v44;
  uint64_t v8 = v45;
  uint64_t v42 = v44;
  uint64_t v43 = v45;
  sub_1C2807E74(v46, v41);
  uint64_t v9 = (void *)*a3;
  unint64_t v11 = sub_1C27D3320(v7, v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C28761E8();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    unint64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
    *unint64_t v21 = v7;
    v21[1] = v8;
    sub_1C2807E74(v41, (_OWORD *)(v20[7] + 32 * v11));
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = a1 + 80;
    while (1)
    {
      sub_1C2890B34(v26, (uint64_t)&v44);
      uint64_t v27 = v44;
      uint64_t v28 = v45;
      uint64_t v42 = v44;
      uint64_t v43 = v45;
      sub_1C2807E74(v46, v41);
      uint64_t v29 = (void *)*a3;
      unint64_t v30 = sub_1C27D3320(v27, v28);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_1C28735B4(v34, 1);
        unint64_t v30 = sub_1C27D3320(v27, v28);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      uint64_t v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      *uint64_t v38 = v27;
      v38[1] = v28;
      sub_1C2807E74(v41, (_OWORD *)(v37[7] + 32 * v30));
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v37[2] = v40;
      v26 += 48;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C28735B4(v14, a2 & 1);
  unint64_t v16 = sub_1C27D3320(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    char v18 = (void *)swift_allocError();
    swift_willThrow();
    id v47 = v18;
    id v19 = v18;
    sub_1C27C7060();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1C28CE680();
  __break(1u);
LABEL_26:
  sub_1C28CE120();
  sub_1C28CD7C0();
  sub_1C28CE270();
  sub_1C28CD7C0();
  sub_1C28CE360();
  __break(1u);
}

unint64_t sub_1C2890A84()
{
  unint64_t result = qword_1EA311120;
  if (!qword_1EA311120)
  {
    sub_1C28CCB50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311120);
  }
  return result;
}

void sub_1C2890ADC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C28CE400();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C2890B34(uint64_t a1, uint64_t a2)
{
  sub_1C2807E14(0, (unint64_t *)&qword_1EBB74070);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static CGImageRef.createThumbnailImage(from:maximumDimension:)(double a1)
{
}

CGImageRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CGImageRef.circularCrop()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CC5D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t Width = CGImageGetWidth(v0);
  int64_t Height = CGImageGetHeight(v0);
  CGBitmapInfo BitmapInfo = CGImageGetBitmapInfo(v0);
  size_t v7 = CGImageGetWidth(v0);
  size_t v8 = CGImageGetHeight(v1);
  size_t BitsPerComponent = CGImageGetBitsPerComponent(v1);
  char v10 = CGImageGetColorSpace(v1);
  if (v10 || (CGImageRef result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC98]), (v10 = result) != 0))
  {
    uint64_t v12 = CGBitmapContextCreate(0, v7, v8, BitsPerComponent, 0, v10, BitmapInfo & 0xFFFFFFE0 | 1);

    if (v12)
    {
      CGFloat v13 = (double)Width;
      CGFloat v14 = (double)Height;
      CGContextBeginPath(v12);
      v24.origin.x = 0.0;
      v24.origin.y = 0.0;
      v24.size.width = v13;
      v24.size.height = v14;
      CGContextAddEllipseInRect(v12, v24);
      CGContextClosePath(v12);
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F1DA40], v2);
      sub_1C28CDC00();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1C28CDC10();
      CGImageRef Image = CGBitmapContextCreateImage(v12);
      if (Image)
      {
        unint64_t v16 = Image;
      }
      else
      {
        type metadata accessor for ImageGenerationError();
        sub_1C2892358(&qword_1EA311128, (void (*)(uint64_t))type metadata accessor for ImageGenerationError);
        swift_allocError();
        unint64_t v16 = v19;
        sub_1C289183C();
        (*(void (**)(CGImage *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 4, 6, v20);
        swift_willThrow();
      }
    }
    else
    {
      type metadata accessor for ImageGenerationError();
      sub_1C2892358(&qword_1EA311128, (void (*)(uint64_t))type metadata accessor for ImageGenerationError);
      swift_allocError();
      unint64_t v16 = v17;
      sub_1C289183C();
      (*(void (**)(CGImage *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 3, 6, v18);
      swift_willThrow();
    }
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CGImageRef.write(to:imageType:)(uint64_t a1)
{
  uint64_t v2 = v1;
  CFURLRef v4 = (const __CFURL *)sub_1C28CC2B0();
  sub_1C28CCCE0();
  uint64_t v5 = (__CFString *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  uint64_t v6 = CGImageDestinationCreateWithURL(v4, v5, 1uLL, 0);

  if (v6)
  {
    CGImageDestinationAddImage(v6, v2, 0);
    if (!CGImageDestinationFinalize(v6))
    {
      type metadata accessor for ImageGenerationError();
      sub_1C2892358(&qword_1EA311128, (void (*)(uint64_t))type metadata accessor for ImageGenerationError);
      swift_allocError();
      uint64_t v12 = v11;
      sub_1C289183C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 6, 6, v13);
      swift_willThrow();
    }
  }
  else
  {
    type metadata accessor for ImageGenerationError();
    sub_1C2892358(&qword_1EA311128, (void (*)(uint64_t))type metadata accessor for ImageGenerationError);
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C28CC330();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
    sub_1C289183C();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 6, v10);
    swift_willThrow();
  }
}

void static CGImageRef.createThumbnailImage(from:maximumSize:)(double a1, double a2)
{
}

void sub_1C28911A0(double a1, double a2)
{
  CFDataRef v4 = (const __CFData *)sub_1C28CC380();
  uint64_t v5 = CGImageSourceCreateWithData(v4, 0);

  if (!v5)
  {
    type metadata accessor for ImageGenerationError();
    sub_1C2892358(&qword_1EA311128, (void (*)(uint64_t))type metadata accessor for ImageGenerationError);
    swift_allocError();
    uint64_t v14 = v13;
    sub_1C289183C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 6, v15);
    swift_willThrow();
    return;
  }
  sub_1C2892300();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C28D23F0;
  uint64_t v7 = (void *)*MEMORY[0x1E4F2FF08];
  *(void *)(inited + 32) = *MEMORY[0x1E4F2FF08];
  *(void *)(inited + 64) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 40) = 0;
  id v8 = v7;
  unint64_t v9 = sub_1C2806328(inited);
  if (a1 > a2) {
    a2 = a1;
  }
  type metadata accessor for CFString(0);
  sub_1C2892358(&qword_1EA30FF70, type metadata accessor for CFString);
  swift_bridgeObjectRetain();
  CFDictionaryRef v10 = (const __CFDictionary *)sub_1C28CD5F0();
  swift_bridgeObjectRelease();
  CFDictionaryRef v11 = CGImageSourceCopyPropertiesAtIndex(v5, 0, v10);

  if (v11)
  {
    *(void *)&long long v45 = 0;
    type metadata accessor for CFNumber(0);
    sub_1C28CD600();
  }
  uint64_t v12 = (void *)sub_1C28CDB60();
  unint64_t v16 = (void *)sub_1C28CDB60();
  id v17 = v12;
  uint64_t v18 = sub_1C28CDB50();

  id v19 = v16;
  uint64_t v20 = sub_1C28CDB50();

  double v21 = (double)v18;
  if ((double)v18 <= (double)v20) {
    double v21 = (double)v20;
  }
  double v22 = floor(log2(v21 / a2));
  if ((~*(void *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    return;
  }
  BOOL v23 = (void *)*MEMORY[0x1E4F2FF58];
  uint64_t v46 = MEMORY[0x1E4FBB550];
  *(void *)&long long v45 = (uint64_t)v22;
  sub_1C2807E74(&v45, v44);
  id v24 = v23;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v47 = v9;
  sub_1C287430C(v44, v24, isUniquelyReferenced_nonNull_native);
  unint64_t v26 = v47;

  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)*MEMORY[0x1E4F2FF68];
  uint64_t v46 = MEMORY[0x1E4FBC958];
  *(double *)&long long v45 = a2;
  sub_1C2807E74(&v45, v44);
  id v28 = v27;
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v47 = v26;
  sub_1C287430C(v44, v28, v29);
  unint64_t v30 = v47;

  swift_bridgeObjectRelease();
  char v31 = (void *)*MEMORY[0x1E4F2FE38];
  uint64_t v32 = MEMORY[0x1E4FBB390];
  uint64_t v46 = MEMORY[0x1E4FBB390];
  LOBYTE(v45) = 1;
  sub_1C2807E74(&v45, v44);
  id v33 = v31;
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v47 = v30;
  sub_1C287430C(v44, v33, v34);
  unint64_t v35 = v47;

  swift_bridgeObjectRelease();
  char v36 = (void *)*MEMORY[0x1E4F2FE48];
  uint64_t v46 = v32;
  LOBYTE(v45) = 1;
  sub_1C2807E74(&v45, v44);
  id v37 = v36;
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v47 = v35;
  sub_1C287430C(v44, v37, v38);

  swift_bridgeObjectRelease();
  CFDictionaryRef v39 = (const __CFDictionary *)sub_1C28CD5F0();
  swift_bridgeObjectRelease();
  CGImageRef ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v5, 0, v39);

  if (ThumbnailAtIndex)
  {
  }
  else
  {
    type metadata accessor for ImageGenerationError();
    sub_1C2892358(&qword_1EA311128, (void (*)(uint64_t))type metadata accessor for ImageGenerationError);
    swift_allocError();
    uint64_t v42 = v41;
    sub_1C289183C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 2, 6, v43);
    swift_willThrow();
  }
}

uint64_t type metadata accessor for ImageGenerationError()
{
  uint64_t result = qword_1EA311138;
  if (!qword_1EA311138) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C289183C()
{
  if (!qword_1EA311130)
  {
    unint64_t v0 = sub_1C28CC330();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311130);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageGenerationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_1C289183C();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 6, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = sub_1C28CC330();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 6, v8);
    }
  }
  return a1;
}

uint64_t destroy for ImageGenerationError(uint64_t a1)
{
  sub_1C289183C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 6, v2);
  if (!result)
  {
    uint64_t v4 = sub_1C28CC330();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for ImageGenerationError(void *a1, const void *a2, uint64_t a3)
{
  sub_1C289183C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 6, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C28CC330();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 6, v7);
  }
  return a1;
}

void *assignWithCopy for ImageGenerationError(void *a1, void *a2, uint64_t a3)
{
  sub_1C289183C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 6, v6);
  int v11 = v9(a2, 6, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_1C28CC330();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 24))(a1, a2, v14);
      return a1;
    }
    sub_1C2891D70((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1C28CC330();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 6, v7);
  return a1;
}

uint64_t sub_1C2891D70(uint64_t a1)
{
  sub_1C289183C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for ImageGenerationError(void *a1, const void *a2, uint64_t a3)
{
  sub_1C289183C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 6, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C28CC330();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 6, v7);
  }
  return a1;
}

void *assignWithTake for ImageGenerationError(void *a1, void *a2, uint64_t a3)
{
  sub_1C289183C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 6, v6);
  int v11 = v9(a2, 6, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_1C28CC330();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      return a1;
    }
    sub_1C2891D70((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1C28CC330();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageGenerationError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C28920AC);
}

uint64_t sub_1C28920AC(uint64_t a1, uint64_t a2)
{
  sub_1C289183C();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 7) {
    return v5 - 6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ImageGenerationError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C289212C);
}

uint64_t sub_1C289212C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 6);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1C289183C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C28921B0(uint64_t a1)
{
  sub_1C289183C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 6, v2);
}

uint64_t sub_1C2892218(uint64_t a1, uint64_t a2)
{
  sub_1C289183C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 6, v4);
}

uint64_t sub_1C2892288()
{
  uint64_t result = sub_1C28CC330();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1C2892300()
{
  if (!qword_1EA311148)
  {
    sub_1C2808188();
    unint64_t v0 = sub_1C28CE620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311148);
    }
  }
}

uint64_t sub_1C2892358(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void static LegacyObservable.run(on:_:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  int v10 = static LegacyObservable.create()(v16);
  uint64_t v12 = v11;
  uint64_t v13 = v16[0];
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a4;
  v14[3] = v10;
  v14[4] = v12;
  v14[5] = a2;
  void v14[6] = a3;
  v16[4] = sub_1C28925F8;
  void v16[5] = v14;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  void v16[2] = sub_1C27BC934;
  v16[3] = &block_descriptor_15;
  uint64_t v15 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_addOperationWithBlock_, v15);
  swift_release();
  _Block_release(v15);
  *a5 = v13;
}

uint64_t sub_1C28924D8(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void *)(a5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790]();
  int v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11(v8);
  a1(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a5);
}

uint64_t sub_1C28925B8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28925F8()
{
  return sub_1C28924D8(*(void (**)(char *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

uint64_t sub_1C2892608(uint64_t result)
{
  int64_t v1 = 0;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v2 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t i = v4 & *(void *)(result + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  if (i) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v7 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    if (v7 < v6)
    {
      uint64_t v8 = *(void *)(v2 + 8 * v7);
      ++v1;
      if (v8) {
        goto LABEL_22;
      }
      int64_t v1 = v7 + 1;
      if (v7 + 1 >= v6) {
        goto LABEL_26;
      }
      uint64_t v8 = *(void *)(v2 + 8 * v1);
      if (v8) {
        goto LABEL_22;
      }
      int64_t v1 = v7 + 2;
      if (v7 + 2 >= v6) {
        goto LABEL_26;
      }
      uint64_t v8 = *(void *)(v2 + 8 * v1);
      if (v8) {
        goto LABEL_22;
      }
      int64_t v1 = v7 + 3;
      if (v7 + 3 >= v6) {
        goto LABEL_26;
      }
      uint64_t v8 = *(void *)(v2 + 8 * v1);
      if (v8)
      {
LABEL_22:
        for (uint64_t i = (v8 - 1) & v8; ; i &= i - 1)
        {
          swift_retain();
          swift_retain();
          sub_1C28CCB10();
          swift_release();
          if (v10 == 1)
          {
            sub_1C28CE1C0();
            sub_1C28CE200();
            sub_1C28CE210();
            uint64_t result = sub_1C28CE1D0();
            if (!i) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_release();
            if (!i) {
              goto LABEL_7;
            }
          }
LABEL_6:
          ;
        }
      }
      int64_t v9 = v7 + 4;
      if (v9 < v6)
      {
        uint64_t v8 = *(void *)(v2 + 8 * v9);
        if (v8)
        {
          int64_t v1 = v9;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v1 = v9 + 1;
          if (__OFADD__(v9, 1)) {
            goto LABEL_28;
          }
          if (v1 >= v6) {
            break;
          }
          uint64_t v8 = *(void *)(v2 + 8 * v1);
          ++v9;
          if (v8) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_26:
    swift_release();
    return v11;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

double static AdvertisableFeatureManager.Constants.defaultTimeout.getter()
{
  return 5.0;
}

uint64_t sub_1C28927F4()
{
  swift_beginAccess();
  return MEMORY[0x1C8760AB0](v0 + 16);
}

uint64_t sub_1C289283C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1C28928A0(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C8760AB0](v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1C2892920;
}

uint64_t AdvertisableFeatureManager.__allocating_init(location:sources:analyticsEventSubmissionManager:queue:timeout:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = swift_allocObject();
  AdvertisableFeatureManager.init(location:sources:analyticsEventSubmissionManager:queue:timeout:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t AdvertisableFeatureManager.init(location:sources:analyticsEventSubmissionManager:queue:timeout:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v6 = v5;
  char v11 = *a1;
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_1C2899504(0, &qword_1EA311150, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy);
  uint64_t v12 = swift_allocObject();
  sub_1C2899480();
  uint64_t v13 = swift_allocObject();
  *(_DWORD *)(v13 + 36) = 0;
  *(void *)(v13 + 16) = sub_1C28993C4;
  *(void *)(v13 + 24) = 0;
  *(unsigned char *)(v13 + 32) = 0;
  *(void *)(v12 + 16) = v13;
  *(void *)(v6 + 48) = v12;
  sub_1C28CC650();
  swift_allocObject();
  *(void *)(v6 + 56) = sub_1C28CC640();
  *(unsigned char *)(v6 + 64) = 0;
  unint64_t v14 = sub_1C280692C(MEMORY[0x1E4FBC860]);
  *(void *)(v6 + 40) = a2;
  *(unsigned char *)(v6 + 32) = v11;
  *(void *)(v6 + 72) = v14;
  *(void *)(v6 + 80) = a3;
  *(void *)(v6 + 88) = a4;
  *(double *)(v6 + 96) = a5;
  return v6;
}

uint64_t sub_1C2892AAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)v0;
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C28CD4F0();
  uint64_t v60 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v58 = (uint64_t *)((char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1C28CD540();
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  int v61 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)&v50 - v12;
  uint64_t v13 = swift_allocObject();
  unint64_t v14 = sub_1C2806A24(MEMORY[0x1E4FBC860]);
  uint64_t v67 = v13;
  *(void *)(v13 + 16) = v14;
  uint64_t v15 = v13 + 16;
  sub_1C28CC650();
  swift_allocObject();
  uint64_t v16 = sub_1C28CC640();
  dispatch_group_t v17 = dispatch_group_create();
  uint64_t v68 = *((void *)v1 + 5);
  uint64_t v18 = *(void *)(v68 + 16);
  uint64_t v56 = v3;
  uint64_t v55 = v4;
  uint64_t v54 = v6;
  uint64_t v66 = v16;
  uint64_t v69 = v17;
  if (v18)
  {
    uint64_t v51 = v9;
    uint64_t v52 = v7;
    uint64_t v53 = v15;
    int v65 = *((unsigned __int8 *)v1 + 32);
    uint64_t v64 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = 0;
    uint64_t v62 = v1;
    uint64_t v63 = v2;
    uint64_t v20 = v69;
    uint64_t v21 = v66;
    uint64_t v22 = v67;
    do
    {
      uint64_t v23 = v68 + 16 * v19++;
      long long v70 = *(_OWORD *)(v23 + 32);
      swift_unknownObjectRetain();
      dispatch_group_enter(v20);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v20;
      uint64_t v26 = *((void *)&v70 + 1);
      *(_OWORD *)(v25 + 24) = v70;
      *(void *)(v25 + 40) = v21;
      *(void *)(v25 + 48) = v22;
      *(unsigned char *)(v25 + 56) = v65;
      *(void *)(v25 + 64) = v2;
      uint64_t v27 = v26;
      id v28 = *(void (**)(void (*)(unsigned char *), uint64_t, uint64_t, uint64_t))(v26 + 48);
      swift_unknownObjectRetain();
      char v29 = v20;
      swift_retain();
      swift_retain();
      v28(sub_1C2899BC0, v25, ObjectType, v27);
      uint64_t v1 = v62;
      swift_release();
      unint64_t v30 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v27 + 24);
      uint64_t v31 = swift_unknownObjectRetain();
      v30(v31, &protocol witness table for AdvertisableFeatureManager, ObjectType, v27);
      uint64_t v2 = v63;
      swift_unknownObjectRelease();
    }
    while (v64 != v19);
    swift_bridgeObjectRelease();
    uint64_t v7 = v52;
    uint64_t v9 = v51;
  }
  uint64_t result = sub_1C28CD530();
  double v33 = v1[12];
  double v34 = v33 * 1000.0;
  if ((~COERCE__INT64(v33 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v34 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  unint64_t v35 = v58;
  *uint64_t v58 = (uint64_t)v34;
  uint64_t v36 = v60;
  (*(void (**)(void *, void, uint64_t))(v60 + 104))(v35, *MEMORY[0x1E4FBCAC8], v7);
  id v37 = v57;
  char v38 = v61;
  MEMORY[0x1C875EAE0](v61, v35);
  (*(void (**)(void *, uint64_t))(v36 + 8))(v35, v7);
  CFDictionaryRef v39 = *(void (**)(char *, uint64_t))(v59 + 8);
  v39(v38, v9);
  char v40 = sub_1C28CDE40();
  v39(v37, v9);
  uint64_t v41 = v67;
  if (v40)
  {
    uint64_t v42 = v54;
    sub_1C28CCD90();
    swift_retain_n();
    uint64_t v43 = sub_1C28CCE00();
    os_log_type_t v44 = sub_1C28CDCB0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v72[0] = v46;
      *(_DWORD *)uint64_t v45 = 136315394;
      uint64_t v47 = sub_1C28CE830();
      uint64_t v71 = sub_1C27D36AC(v47, v48, v72);
      sub_1C28CDF90();
      uint64_t v41 = v67;
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2048;
      uint64_t v71 = *(void *)&v33;
      sub_1C28CDF90();
      swift_release_n();
      _os_log_impl(&dword_1C27B7000, v43, v44, "[%s] Operation timed out after %f seconds", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v46, -1, -1);
      MEMORY[0x1C87609B0](v45, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v56);
  }
  sub_1C28CC620();
  swift_beginAccess();
  uint64_t v49 = *(void *)(v41 + 16);
  swift_bridgeObjectRetain();
  sub_1C28CC630();
  swift_release();
  swift_release();

  return v49;
}

void sub_1C289318C(unsigned char *a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  void (*v25)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unsigned __int8 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  long long v31;
  long long v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  dispatch_group_t v36;
  uint64_t v37;
  char v38;
  _OWORD v39[2];
  uint64_t v40;
  uint64_t v41;

  *(void *)&uint64_t v32 = a8;
  unint64_t v35 = a5;
  uint64_t v36 = a2;
  double v33 = sub_1C28CCE10();
  uint64_t v12 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  unint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[16]) {
    double v34 = 0;
  }
  else {
    double v34 = *a1 & 1;
  }
  sub_1C28CCD90();
  swift_unknownObjectRetain_n();
  uint64_t v15 = sub_1C28CCE00();
  os_log_type_t v16 = sub_1C28CDCD0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    *(void *)&uint64_t v31 = swift_slowAlloc();
    *(void *)&v39[0] = v31;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v18 = sub_1C28CE830();
    LODWORD(v32) = a7;
    id v37 = sub_1C27D36AC(v18, v19, (uint64_t *)v39);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v37, ObjectType, a4);
    uint64_t v21 = sub_1C28CD750();
    id v37 = sub_1C27D36AC(v21, v22, (uint64_t *)v39);
    LOBYTE(a7) = v32;
    sub_1C28CDF90();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v15, v16, "[%s] Source with identifier %{public}s returned", (uint8_t *)v17, 0x16u);
    uint64_t v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v23, -1, -1);
    MEMORY[0x1C87609B0](v17, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
  double v33 = a6 + 16;
  sub_1C28CC620();
  uint64_t v24 = swift_getObjectType();
  uint64_t v25 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  v25(&v41, v24, a4);
  uint64_t v26 = v41;
  v25(&v37, v24, a4);
  uint64_t v27 = v37;
  char v38 = a7 & 1;
  (*(void (**)(_OWORD *__return_ptr, char *, uint64_t, uint64_t))(a4 + 40))(v39, &v38, v24, a4);
  uint64_t v31 = v39[1];
  uint64_t v32 = v39[0];
  id v28 = v40;
  type metadata accessor for AdvertisableFeatureModel();
  char v29 = swift_allocObject();
  *(unsigned char *)(v29 + 16) = v27;
  *(_OWORD *)(v29 + 24) = v32;
  *(_OWORD *)(v29 + 40) = v31;
  *(void *)(v29 + 56) = v28;
  char v38 = v34;
  sub_1C289A27C(0, (unint64_t *)&qword_1EBB73CC0, MEMORY[0x1E4FBB390], MEMORY[0x1E4F674D8]);
  swift_allocObject();
  *(void *)(v29 + 72) = sub_1C28CCB40();
  char v38 = 1;
  swift_allocObject();
  *(void *)(v29 + 64) = sub_1C28CCB40();
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v37 = *(void *)(a6 + 16);
  *(void *)(a6 + 16) = 0x8000000000000000;
  sub_1C28745A4(v29, v26, isUniquelyReferenced_nonNull_native);
  *(void *)(a6 + 16) = v37;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1C28CC630();
  dispatch_group_leave(v36);
}

uint64_t sub_1C28935F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C28CD500();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C28CD520();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a1;
  v13[3] = a2;
  v13[4] = v2;
  aBlock[4] = sub_1C28995B0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C27BC934;
  aBlock[3] = &block_descriptor_16;
  unint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C28CD510();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1C28995BC((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
  sub_1C281D538();
  sub_1C28995BC((unint64_t *)&qword_1EBB77308, (void (*)(uint64_t))sub_1C281D538);
  sub_1C28CE020();
  MEMORY[0x1C875F420](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1C28938C4(void (*a1)(void *))
{
  swift_getKeyPath();
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_1C288BE10(v2);
  swift_release();
  swift_release();
  unint64_t v4 = sub_1C2892608(v3);
  uint64_t v5 = sub_1C27E4E60(v4);
  swift_bridgeObjectRelease();
  v7[0] = v5;
  v7[1] = 0;
  char v8 = 0;
  a1(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2893980(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  v7[3] = a2;
  void v7[4] = v5;
  char v8 = (void *)swift_allocObject();
  v8[2] = 0xD000000000000011;
  v8[3] = 0x80000001C28DD590;
  v8[4] = sub_1C2899614;
  void v8[5] = v6;
  v8[6] = v2;
  v8[7] = sub_1C2899654;
  v8[8] = v7;
  v8[9] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C2895C34((uint64_t)sub_1C2899664, (uint64_t)v8);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t (*sub_1C2893AD8(uint64_t a1, uint64_t a2))()
{
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD90();
  swift_unknownObjectRetain_n();
  char v8 = sub_1C28CCE00();
  os_log_type_t v9 = sub_1C28CDC90();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v22 = v4;
    uint64_t v11 = v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v13 = sub_1C28CE830();
    uint64_t v23 = sub_1C27D36AC(v13, v14, &v24);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v23, ObjectType, a2);
    uint64_t v16 = sub_1C28CD750();
    uint64_t v23 = sub_1C27D36AC(v16, v17, &v24);
    sub_1C28CDF90();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v8, v9, "[%s] Performing prerequisite work on %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v12, -1, -1);
    MEMORY[0x1C87609B0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C2899F24;
  *(void *)(v19 + 24) = v18;
  swift_unknownObjectRetain();
  return sub_1C2899F8C;
}

uint64_t sub_1C2893DCC(uint64_t a1, void (*a2)(void), uint64_t a3, NSObject *a4)
{
  os_log_t v32 = a4;
  uint64_t v7 = sub_1C28CCE10();
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  MEMORY[0x1F4188790](v7);
  os_log_type_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  char v12 = *(unsigned char *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  sub_1C28CCD90();
  sub_1C2899FB4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2899FB4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v34 = v9;
  unint64_t v17 = sub_1C28CCE00();
  os_log_type_t v18 = sub_1C28CDCD0();
  int v33 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v30 = a3;
    uint64_t v20 = v19;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v44 = v29;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v31 = a2;
    uint64_t v21 = sub_1C28CE830();
    os_log_t v32 = v17;
    uint64_t v37 = sub_1C27D36AC(v21, v22, &v44);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    v28[1] = v20 + 14;
    uint64_t v37 = v10;
    uint64_t v38 = v11;
    char v39 = v12;
    uint64_t v40 = v13;
    uint64_t v41 = v14;
    uint64_t v42 = v16;
    uint64_t v43 = v15;
    sub_1C2899FB4();
    sub_1C289A27C(0, &qword_1EA311170, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for AdvertisableFeatureManager.CollectionResult);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C28CD750();
    uint64_t v37 = sub_1C27D36AC(v23, v24, &v44);
    a2 = v31;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    sub_1C289A01C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C289A01C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_t v25 = v32;
    _os_log_impl(&dword_1C27B7000, v32, (os_log_type_t)v33, "[%s] Completed performing prerequisite work: %{public}s", (uint8_t *)v20, 0x16u);
    uint64_t v26 = v29;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v26, -1, -1);
    MEMORY[0x1C87609B0](v20, -1, -1);
  }
  else
  {
    sub_1C289A01C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C289A01C();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
  if (v12)
  {
    uint64_t v37 = v10;
    uint64_t v38 = v11;
    char v39 = 1;
    swift_bridgeObjectRetain();
    a2(&v37);
    return sub_1C289A01C();
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    char v39 = 0;
    return ((uint64_t (*)(uint64_t *))a2)(&v37);
  }
}

uint64_t sub_1C2894210(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  os_log_type_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(self, sel_isAppleInternalInstall)) {
    goto LABEL_6;
  }
  id v10 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v26 = a1;
  id v11 = v10;
  char v12 = (void *)sub_1C28CD6F0();
  unsigned int v13 = objc_msgSend(v11, sel_BOOLForKey_, v12);

  a1 = v26;
  if (v13)
  {
    sub_1C28CCD90();
    uint64_t v14 = sub_1C28CCE00();
    os_log_type_t v15 = sub_1C28CDCB0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v28[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      os_log_t v25 = v16 + 4;
      uint64_t v18 = sub_1C28CE830();
      uint64_t v27 = sub_1C27D36AC(v18, v19, v28);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v14, v15, "[%s] Commit enablement returning forced error due to HKHealthFeatureEnablementCommitShouldReturnErrorOverride default", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v17, -1, -1);
      uint64_t v20 = v16;
      a1 = v26;
      MEMORY[0x1C87609B0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v28[0] = 0xD000000000000017;
    v28[1] = 0x80000001C28DD610;
    char v29 = 1;
    return a1(v28);
  }
  else
  {
LABEL_6:
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v5;
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v2;
    v23[3] = a1;
    v23[4] = a2;
    v23[5] = v5;
    unint64_t v24 = (void *)swift_allocObject();
    v24[2] = 0xD000000000000011;
    v24[3] = 0x80000001C28DD5B0;
    v24[4] = sub_1C2899678;
    v24[5] = v22;
    v24[6] = v2;
    v24[7] = sub_1C2899698;
    v24[8] = v23;
    v24[9] = v5;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C2895C34((uint64_t)sub_1C2899664, (uint64_t)v24);
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t (*sub_1C2894600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  void v8[5] = a4;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1C2899CB0;
}

uint64_t sub_1C2894688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v29 = sub_1C28CCE10();
  uint64_t v6 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD90();
  swift_unknownObjectRetain_n();
  swift_retain_n();
  os_log_type_t v9 = sub_1C28CCE00();
  os_log_type_t v10 = sub_1C28CDC90();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v28 = a2;
    uint64_t v12 = v11;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v12 = 136315651;
    uint64_t v13 = sub_1C28CE830();
    uint64_t v31 = sub_1C27D36AC(v13, v14, &v32);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v31, ObjectType, a4);
    uint64_t v16 = sub_1C28CD750();
    uint64_t v31 = sub_1C27D36AC(v16, v17, &v32);
    sub_1C28CDF90();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2081;
    swift_retain();
    sub_1C28CCB10();
    swift_release();
    if ((_BYTE)v31) {
      uint64_t v18 = 1702195828;
    }
    else {
      uint64_t v18 = 0x65736C6166;
    }
    if ((_BYTE)v31) {
      unint64_t v19 = 0xE400000000000000;
    }
    else {
      unint64_t v19 = 0xE500000000000000;
    }
    uint64_t v31 = sub_1C27D36AC(v18, v19, &v32);
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v9, v10, "[%s] Committing enablement for %{public}s: %{private}s", (uint8_t *)v12, 0x20u);
    uint64_t v20 = v27;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v20, -1, -1);
    uint64_t v21 = v12;
    a2 = v28;
    MEMORY[0x1C87609B0](v21, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  uint64_t v22 = swift_getObjectType();
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  uint64_t v23 = v32;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v30;
  *(void *)(v24 + 24) = a2;
  os_log_t v25 = *(void (**)(uint64_t, uint64_t (*)(long long *), uint64_t, uint64_t, uint64_t))(a4 + 64);
  swift_retain();
  v25(v23, sub_1C2899CBC, v24, v22, a4);
  return swift_release();
}

uint64_t sub_1C2894A5C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, NSObject *a5)
{
  os_log_t v33 = a5;
  uint64_t v35 = a2;
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x1F4188790](v8);
  os_log_type_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  char v13 = *(unsigned char *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  sub_1C28CCD90();
  sub_1C2899FB4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2899FB4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = v10;
  uint64_t v18 = sub_1C28CCE00();
  os_log_type_t v19 = sub_1C28CDCD0();
  int v34 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v31 = a4;
    uint64_t v21 = v20;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v46 = v30;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v32 = a3;
    uint64_t v22 = sub_1C28CE830();
    os_log_t v33 = v18;
    uint64_t v39 = sub_1C27D36AC(v22, v23, &v46);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v29 = v21 + 14;
    uint64_t v39 = v11;
    uint64_t v40 = v12;
    char v41 = v13;
    uint64_t v42 = v14;
    uint64_t v43 = v15;
    uint64_t v44 = v17;
    uint64_t v45 = v16;
    sub_1C2899FB4();
    sub_1C289A27C(0, &qword_1EA311170, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for AdvertisableFeatureManager.CollectionResult);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C28CD750();
    uint64_t v39 = sub_1C27D36AC(v24, v25, &v46);
    a3 = v32;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    sub_1C289A01C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C289A01C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_t v26 = v33;
    _os_log_impl(&dword_1C27B7000, v33, (os_log_type_t)v34, "[%s] Completed committing enablement: %{public}s", (uint8_t *)v21, 0x16u);
    uint64_t v27 = v30;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v27, -1, -1);
    MEMORY[0x1C87609B0](v21, -1, -1);
  }
  else
  {
    sub_1C289A01C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C289A01C();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
  if (v13)
  {
    uint64_t v39 = v11;
    uint64_t v40 = v12;
    char v41 = 1;
    swift_bridgeObjectRetain();
    a3(&v39);
    return sub_1C289A01C();
  }
  else
  {
    sub_1C2897F34();
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    char v41 = 0;
    return ((uint64_t (*)(uint64_t *))a3)(&v39);
  }
}

uint64_t sub_1C2894EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_1C2895C34((uint64_t)sub_1C28996E0, v4);

  return swift_release();
}

uint64_t sub_1C2894F2C(uint64_t a1, void (*a2)(void *))
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    v36[0] = MEMORY[0x1E4FBC860];
    sub_1C2829428(0, v2, 0);
    uint64_t v4 = v36[0];
    uint64_t v5 = a1 + 48;
    do
    {
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_1C28CCB10();
      swift_release();
      uint64_t v8 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v6 + 72))(v38, ObjectType, v6);
      swift_release();
      swift_unknownObjectRelease();
      v36[0] = v4;
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v9 = *(void *)(v4 + 24);
      unint64_t v11 = v10 + 1;
      if (v10 >= v9 >> 1)
      {
        sub_1C2829428(v9 > 1, v10 + 1, 1);
        uint64_t v4 = v36[0];
      }
      *(void *)(v4 + 16) = v11;
      *(void *)(v4 + 8 * v10 + 32) = v8;
      v5 += 24;
      --v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    unint64_t v12 = MEMORY[0x1E4FBC860];
    if (!v11)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      v36[0] = v12;
      v36[1] = 0;
      char v37 = 0;
      a2(v36);
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  unint64_t v12 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v14 = *(void *)(v4 + 8 * v13 + 32);
    uint64_t v15 = *(void *)(v14 + 16);
    int64_t v16 = *(void *)(v12 + 16);
    int64_t v17 = v16 + v15;
    if (__OFADD__(v16, v15)) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v17 <= *(void *)(v12 + 24) >> 1)
    {
      if (*(void *)(v14 + 16)) {
        goto LABEL_20;
      }
    }
    else
    {
      if (v16 <= v17) {
        int64_t v19 = v16 + v15;
      }
      else {
        int64_t v19 = v16;
      }
      unint64_t v12 = sub_1C2802210(isUniquelyReferenced_nonNull_native, v19, 1, v12);
      if (*(void *)(v14 + 16))
      {
LABEL_20:
        uint64_t v20 = *(void *)(v12 + 16);
        uint64_t v21 = (*(void *)(v12 + 24) >> 1) - v20;
        uint64_t v22 = *(void *)(type metadata accessor for AdvertisableFeaturePostCommitWorkItem() - 8);
        uint64_t v23 = *(void *)(v22 + 72);
        if (v21 < v15) {
          goto LABEL_33;
        }
        unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        unint64_t v25 = v12 + v24 + v23 * v20;
        unint64_t v26 = v14 + v24;
        uint64_t v27 = v23 * v15;
        unint64_t v28 = v25 + v27;
        unint64_t v29 = v26 + v27;
        if (v26 < v28 && v25 < v29) {
          goto LABEL_35;
        }
        swift_arrayInitWithCopy();
        if (v15)
        {
          uint64_t v31 = *(void *)(v12 + 16);
          BOOL v32 = __OFADD__(v31, v15);
          uint64_t v33 = v31 + v15;
          if (v32) {
            goto LABEL_34;
          }
          *(void *)(v12 + 16) = v33;
        }
        goto LABEL_10;
      }
    }
    if (v15) {
      goto LABEL_32;
    }
LABEL_10:
    ++v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11 == v13)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C289526C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void v40[2];
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  int v43;
  uint64_t v44;
  long long v45;
  uint64_t v46;
  void (**v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56[4];
  uint64_t v57;
  uint64_t v58;

  uint64_t v42 = a2;
  char v41 = a1;
  uint64_t v46 = *v2;
  uint64_t v49 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v2[5];
  uint64_t v7 = *(void *)(result + 16);
  if (v7)
  {
    uint64_t v50 = (uint64_t)v2;
    uint64_t v8 = result;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v43 = 0;
    uint64_t v47 = (void (**)(char *, uint64_t))(v3 + 8);
    v40[1] = v8;
    unint64_t v9 = (uint64_t *)(v8 + 40);
    *(void *)&long long v10 = 136315394;
    uint64_t v45 = v10;
    uint64_t v44 = MEMORY[0x1E4FBC840] + 8;
    unint64_t v48 = v5;
    do
    {
      uint64_t v55 = v7;
      uint64_t v12 = *(v9 - 1);
      uint64_t v11 = *v9;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 8);
      swift_unknownObjectRetain();
      uint64_t v52 = ObjectType;
      uint64_t v53 = v11;
      uint64_t v51 = v14;
      uint64_t v15 = ((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))v14)(&v58, ObjectType, v11);
      uint64_t v54 = v58;
      v56[0] = v50;
      MEMORY[0x1F4188790](v15);
      v40[-2] = v56;
      int64_t v17 = (uint64_t)&v16[4];
      uint64_t v18 = v16 + 9;
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v18);
      sub_1C288CCB4(v17, &v57);
      os_unfair_lock_unlock(v18);
      int64_t v19 = v57;
      swift_release();
      swift_release();
      if (*(void *)(v19 + 16) && (uint64_t v20 = sub_1C2872528(v54), (v21 & 1) != 0))
      {
        uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1C28CCB10();
        swift_release();
        if (LOBYTE(v56[0]) == 1)
        {
          uint64_t v23 = v41(v12, v53, v22);
          swift_unknownObjectRelease();
          swift_release();
          v43 |= v23;
        }
        else
        {
          swift_unknownObjectRelease();
          swift_release();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v24 = v48;
        sub_1C28CCD90();
        swift_unknownObjectRetain_n();
        unint64_t v25 = sub_1C28CCE00();
        unint64_t v26 = sub_1C28CDCC0();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = swift_slowAlloc();
          unint64_t v28 = swift_slowAlloc();
          v56[0] = v28;
          *(_DWORD *)uint64_t v27 = v45;
          unint64_t v29 = sub_1C28CE830();
          *(void *)(v27 + 4) = sub_1C27D36AC(v29, v30, v56);
          swift_bridgeObjectRelease();
          *(_WORD *)(v27 + 12) = 2082;
          v51(&v57, v52, v53);
          LOBYTE(v58) = v57;
          uint64_t v31 = sub_1C28CD750();
          *(void *)(v27 + 14) = sub_1C27D36AC(v31, v32, v56);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C27B7000, v25, v26, "[%s] Unable to find source identifier %{public}s in advertisable feature dictionary", (uint8_t *)v27, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v28, -1, -1);
          MEMORY[0x1C87609B0](v27, -1, -1);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*v47)(v24, v49);
      }
      v9 += 2;
      uint64_t v7 = v55 - 1;
    }
    while (v55 != 1);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v33 = v50;
    if (v43)
    {
      swift_beginAccess();
      uint64_t result = MEMORY[0x1C8760AB0](v33 + 16);
      if (result)
      {
        int v34 = *(void *)(v33 + 24);
        uint64_t v35 = swift_getObjectType();
        swift_getKeyPath();
        uint64_t v36 = swift_retain();
        char v37 = sub_1C288BE10(v36);
        swift_release();
        swift_release();
        unsigned __int8 v38 = sub_1C2892608(v37);
        uint64_t v39 = sub_1C27E4E60(v38);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8))(v33, v39, v35, v34);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1C28957D4()
{
  swift_retain();
  sub_1C28CC620();
  swift_release();
  *(unsigned char *)(v0 + 64) = 1;
  swift_retain();
  sub_1C28CC630();

  return swift_release();
}

uint64_t sub_1C2895838()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_1C28CC620();
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v28 = *(void *)(v2 + 16);
  uint64_t v29 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  uint64_t v31 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v7 = 0;
  int64_t v30 = (unint64_t)(v3 + 63) >> 6;
  if (v5) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  if (v7 < v30)
  {
    unint64_t v11 = *(void *)(v29 + 8 * v7);
    if (v11)
    {
LABEL_17:
      unint64_t v5 = (v11 - 1) & v11;
      for (unint64_t i = __clz(__rbit64(v11)) + (v7 << 6); ; unint64_t i = v8 | (v7 << 6))
      {
        unsigned __int8 v13 = *(unsigned char *)(*(void *)(v31 + 48) + i);
        MEMORY[0x1F4188790](result);
        uint64_t v15 = (uint64_t)&v14[4];
        uint64_t v16 = v1;
        int64_t v17 = v14 + 9;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v17);
        sub_1C289A2F8(v15, &v32);
        uint64_t v18 = v17;
        uint64_t v1 = v16;
        os_unfair_lock_unlock(v18);
        uint64_t v19 = v32;
        swift_release();
        swift_release();
        if (*(void *)(v19 + 16) && (sub_1C2872528(v13), (v20 & 1) != 0))
        {
          swift_retain();
          uint64_t v21 = swift_bridgeObjectRelease();
          MEMORY[0x1F4188790](v21);
          swift_retain();
          sub_1C28CCB20();
          swift_release();
          uint64_t result = swift_release();
          if (!v5) {
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t result = swift_bridgeObjectRelease();
          if (!v5) {
            goto LABEL_7;
          }
        }
LABEL_6:
        unint64_t v8 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
      }
    }
    int64_t v12 = v7 + 1;
    if (v7 + 1 < v30)
    {
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (v11) {
        goto LABEL_16;
      }
      int64_t v12 = v7 + 2;
      if (v7 + 2 >= v30) {
        goto LABEL_26;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (v11)
      {
LABEL_16:
        int64_t v7 = v12;
        goto LABEL_17;
      }
      int64_t v12 = v7 + 3;
      if (v7 + 3 < v30)
      {
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (v11) {
          goto LABEL_16;
        }
        while (1)
        {
          int64_t v7 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            goto LABEL_31;
          }
          if (v7 >= v30) {
            break;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v7);
          ++v12;
          if (v11) {
            goto LABEL_17;
          }
        }
      }
    }
  }
LABEL_26:
  swift_release();
  *(void *)(v1 + 72) = sub_1C280692C(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1C28CC630();
  uint64_t result = swift_release();
  if (v28)
  {
    swift_beginAccess();
    uint64_t result = MEMORY[0x1C8760AB0](v1 + 16);
    if (result)
    {
      uint64_t v22 = *(void *)(v1 + 24);
      uint64_t ObjectType = swift_getObjectType();
      swift_getKeyPath();
      uint64_t v24 = swift_retain();
      uint64_t v25 = sub_1C288BE10(v24);
      swift_release();
      swift_release();
      unint64_t v26 = sub_1C2892608(v25);
      uint64_t v27 = sub_1C27E4E60(v26);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8))(v1, v27, ObjectType, v22);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C2895C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1C28CD500();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C28CD520();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = v3[11];
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = v6;
  aBlock[4] = sub_1C2899D60;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C27BC934;
  aBlock[3] = &block_descriptor_78;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C28CD510();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_1C28995BC((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
  sub_1C281D538();
  sub_1C28995BC((unint64_t *)&qword_1EBB77308, (void (*)(uint64_t))sub_1C281D538);
  sub_1C28CE020();
  MEMORY[0x1C875F420](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1C2895F38(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4)
{
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v16;
  unsigned __int8 v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  void *v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void v40[2];
  void (*v41)(void *);
  uint64_t v42;
  long long v43;
  uint64_t v44;
  void *v45;
  void (**v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  long long v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  uint64_t v44 = a4;
  unint64_t v48 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v51 = *(void *)(v10 + 16);
  if (v51)
  {
    v40[1] = a3;
    char v41 = a2;
    uint64_t v50 = a1;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v11 = 0;
    uint64_t v46 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
    *(void *)&long long v12 = 136315394;
    uint64_t v43 = v12;
    uint64_t v42 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v47 = v9;
    uint64_t v49 = v10;
    do
    {
      uint64_t v55 = v11;
      uint64_t v56 = *(_OWORD *)(v10 + 16 * v11 + 32);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v14 = *((void *)&v56 + 1);
      uint64_t v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*((void *)&v56 + 1) + 8);
      swift_unknownObjectRetain();
      uint64_t v53 = v14;
      uint64_t v54 = ObjectType;
      uint64_t v52 = v15;
      uint64_t v16 = ((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))v15)(&v59, ObjectType, v14);
      int64_t v17 = v59;
      uint64_t v58 = v50;
      MEMORY[0x1F4188790](v16);
      v40[-2] = &v58;
      uint64_t v19 = (uint64_t)&v18[4];
      char v20 = v18 + 9;
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v20);
      sub_1C289A2F8(v19, &v57);
      os_unfair_lock_unlock(v20);
      uint64_t v21 = v57;
      swift_release();
      swift_release();
      if (*(void *)(v21 + 16) && (uint64_t v22 = sub_1C2872528(v17), (v23 & 1) != 0))
      {
        uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1C28CCB10();
        swift_release();
        if (v58 == 1)
        {
          swift_unknownObjectRetain();
          swift_retain();
          uint64_t v25 = v45;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v25 = sub_1C2802258(0, v25[2] + 1, 1, v25);
          }
          uint64_t v27 = v25[2];
          unint64_t v26 = v25[3];
          uint64_t v45 = v25;
          if (v27 >= v26 >> 1) {
            uint64_t v45 = sub_1C2802258((void *)(v26 > 1), v27 + 1, 1, v45);
          }
          uint64_t v28 = v45;
          v45[2] = v27 + 1;
          uint64_t v29 = &v28[3 * v27];
          *((_OWORD *)v29 + 2) = v56;
          v29[6] = v24;
        }
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        int64_t v30 = v47;
        sub_1C28CCD90();
        swift_unknownObjectRetain_n();
        uint64_t v31 = sub_1C28CCE00();
        uint64_t v32 = sub_1C28CDCC0();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = swift_slowAlloc();
          int v34 = swift_slowAlloc();
          uint64_t v58 = v34;
          *(_DWORD *)uint64_t v33 = v43;
          uint64_t v35 = sub_1C28CE830();
          *(void *)(v33 + 4) = sub_1C27D36AC(v35, v36, &v58);
          swift_bridgeObjectRelease();
          *(_WORD *)(v33 + 12) = 2082;
          v52(&v57, v54, v53);
          LOBYTE(v59) = v57;
          char v37 = sub_1C28CD750();
          *(void *)(v33 + 14) = sub_1C27D36AC(v37, v38, &v58);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C27B7000, v31, v32, "[%s] Unable to find source identifier %{public}s in advertisable feature dictionary", (uint8_t *)v33, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v34, -1, -1);
          MEMORY[0x1C87609B0](v33, -1, -1);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*v46)(v30, v48);
      }
      uint64_t v10 = v49;
      uint64_t v11 = v55 + 1;
    }
    while (v51 != v55 + 1);
    swift_bridgeObjectRelease();
    v41(v45);
  }
  else
  {
    a2((void *)MEMORY[0x1E4FBC860]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2896454()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  sub_1C28CE120();
  sub_1C2899FB4();
  sub_1C28CDA30();
  sub_1C28037EC();
  sub_1C28CE7E0();
  sub_1C28CD750();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C2896638(v2);
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C2896638(v1);
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C2896638(v4);
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C2896638(v3);
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  return 0;
}

uint64_t sub_1C2896638(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C27D8968(0, v1, 0);
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = v23;
    unint64_t v5 = (unint64_t)"lowCardioFitnessNotification";
    unint64_t v6 = (unint64_t)"highHeartRateNotification";
    unint64_t v7 = (unint64_t)"lowHeartRateNotification";
    unint64_t v8 = (unint64_t)"trendNotification";
    unint64_t v9 = (unint64_t)"walkingSteadinessNotification";
    do
    {
      int v10 = *v3++;
      unint64_t v11 = 0xD00000000000001CLL;
      unint64_t v12 = 0x80000001C28DAC20;
      switch(v10)
      {
        case 1:
          unint64_t v11 = 0xD000000000000019;
          unint64_t v12 = v5 | 0x8000000000000000;
          break;
        case 2:
          unint64_t v11 = 0xD000000000000018;
          unint64_t v12 = v6 | 0x8000000000000000;
          break;
        case 3:
          unint64_t v12 = v7 | 0x8000000000000000;
          unint64_t v11 = 0xD000000000000011;
          break;
        case 4:
          unint64_t v11 = 0xD00000000000001DLL;
          unint64_t v12 = v8 | 0x8000000000000000;
          break;
        case 5:
          unint64_t v11 = 0xD00000000000001ELL;
          unint64_t v12 = v9 | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v24 = v4;
      unint64_t v14 = *(void *)(v4 + 16);
      unint64_t v13 = *(void *)(v4 + 24);
      if (v14 >= v13 >> 1)
      {
        uint64_t v16 = (const char *)v5;
        uint64_t v21 = (const char *)v7;
        uint64_t v22 = (const char *)v6;
        uint64_t v19 = (const char *)v9;
        char v20 = (const char *)v8;
        sub_1C27D8968(v13 > 1, v14 + 1, 1);
        unint64_t v9 = (unint64_t)v19;
        unint64_t v8 = (unint64_t)v20;
        unint64_t v7 = (unint64_t)v21;
        unint64_t v6 = (unint64_t)v22;
        unint64_t v5 = (unint64_t)v16;
        uint64_t v4 = v24;
      }
      *(void *)(v4 + 16) = v14 + 1;
      uint64_t v15 = v4 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      --v1;
    }
    while (v1);
  }
  sub_1C289A27C(0, (unint64_t *)&qword_1EBB76F58, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C283A290();
  uint64_t v17 = sub_1C28CD690();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C2896850(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8, uint64_t a9)
{
  void (*v62)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v63;
  unint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t *);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  long long v84;
  void (**v85)(char *, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  dispatch_group_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  int64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;

  uint64_t v79 = a8;
  uint64_t v89 = a4;
  uint64_t v90 = a5;
  uint64_t v98 = a3;
  id v88 = a2;
  uint64_t v94 = a9;
  uint64_t v12 = sub_1C28CD4F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_1C28CD540();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v81 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v76 = (char *)&v68 - v20;
  uint64_t v87 = sub_1C28CCE10();
  uint64_t v97 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v86 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = swift_allocObject();
  v92 = v22;
  *(void *)(v22 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v77 = v22 + 16;
  uint64_t v78 = sub_1C28CC650();
  swift_allocObject();
  uint64_t v91 = sub_1C28CC640();
  uint64_t v93 = dispatch_group_create();
  int64_t v23 = *(void *)(a1 + 16);
  uint64_t v80 = a7;
  uint64_t v82 = a6;
  if (v23)
  {
    uint64_t v69 = v15;
    long long v70 = v17;
    uint64_t v71 = v13;
    uint64_t v72 = v16;
    uint64_t v73 = v12;
    uint64_t v85 = (void (**)(char *, uint64_t))(v97 + 8);
    swift_bridgeObjectRetain();
    uint64_t v75 = a1;
    uint64_t v24 = (void *)(a1 + 48);
    *(void *)&long long v25 = 136315650;
    uint64_t v84 = v25;
    uint64_t v83 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v74 = v23;
    do
    {
      uint64_t v97 = v23;
      uint64_t v36 = *(v24 - 2);
      uint64_t v37 = *(v24 - 1);
      uint64_t v95 = v24;
      uint64_t v38 = *v24;
      swift_unknownObjectRetain();
      int v96 = v38;
      swift_retain();
      uint64_t v39 = v86;
      sub_1C28CCD90();
      swift_unknownObjectRetain_n();
      unint64_t v40 = v98;
      swift_bridgeObjectRetain_n();
      char v41 = sub_1C28CCE00();
      os_log_type_t v42 = sub_1C28CDCD0();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v101 = v44;
        *(_DWORD *)uint64_t v43 = v84;
        uint64_t v45 = sub_1C28CE830();
        *(void *)(v43 + 4) = sub_1C27D36AC(v45, v46, &v101);
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v26 = v88;
        *(void *)(v43 + 14) = sub_1C27D36AC(v88, v40, &v101);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v43 + 22) = 2082;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v37 + 8))(&v100, ObjectType, v37);
        int v99 = v100;
        uint64_t v48 = sub_1C28CD750();
        *(void *)(v43 + 24) = sub_1C27D36AC(v48, v49, &v101);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C27B7000, v41, v42, "[%s:%{public}s] Source with identifier %{public}s entering", (uint8_t *)v43, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v44, -1, -1);
        uint64_t v50 = v39;
        uint64_t v27 = v94;
        MEMORY[0x1C87609B0](v43, -1, -1);

        (*v85)(v50, v87);
      }
      else
      {

        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*v85)(v39, v87);
        uint64_t v26 = v88;
        uint64_t v27 = v94;
      }
      dispatch_group_t v28 = v93;
      dispatch_group_enter(v93);
      uint64_t v29 = (void (*)(void (*)(uint64_t), void *))v89(v36, v37, v96);
      int64_t v30 = (void *)swift_allocObject();
      uint64_t v31 = v37;
      unint64_t v32 = v98;
      id v30[2] = v26;
      v30[3] = v32;
      v30[4] = v36;
      v30[5] = v31;
      uint64_t v34 = v91;
      uint64_t v33 = v92;
      v30[6] = v28;
      v30[7] = v34;
      v30[8] = v33;
      v30[9] = v27;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v35 = v28;
      swift_retain();
      swift_retain();
      v29(sub_1C2899DC4, v30);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v24 = v95 + 3;
      int64_t v23 = v97 - 1;
    }
    while (v97 != 1);
    a1 = v75;
    swift_bridgeObjectRelease();
    a6 = v82;
    int64_t v23 = v74;
    uint64_t v12 = v73;
    uint64_t v16 = v72;
    uint64_t v13 = v71;
    uint64_t v17 = v70;
    uint64_t v15 = v69;
  }
  uint64_t v51 = v81;
  uint64_t result = sub_1C28CD530();
  double v53 = *(double *)(a6 + 96) * 1000.0;
  if ((~*(void *)&v53 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v53 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v53 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  *uint64_t v15 = (uint64_t)v53;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCAC8], v12);
  uint64_t v54 = v76;
  MEMORY[0x1C875EAE0](v51, v15);
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v17 + 8);
  v55(v51, v16);
  sub_1C28CDE40();
  uint64_t v56 = ((uint64_t (*)(char *, uint64_t))v55)(v54, v16);
  uint64_t v57 = MEMORY[0x1E4FBC860];
  if (v23)
  {
    uint64_t v101 = MEMORY[0x1E4FBC860];
    sub_1C2829408(0, v23, 0);
    uint64_t v57 = v101;
    uint64_t v58 = a1 + 48;
    do
    {
      int64_t v59 = v23;
      uint64_t v60 = *(void *)(v58 - 8);
      uint64_t v61 = swift_getObjectType();
      uint64_t v62 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v60 + 8);
      swift_unknownObjectRetain();
      swift_retain();
      v62(&v100, v61, v60);
      swift_release();
      uint64_t v56 = swift_unknownObjectRelease();
      uint64_t v63 = v100;
      uint64_t v101 = v57;
      int v65 = *(void *)(v57 + 16);
      uint64_t v64 = *(void *)(v57 + 24);
      if (v65 >= v64 >> 1)
      {
        uint64_t v56 = sub_1C2829408(v64 > 1, v65 + 1, 1);
        uint64_t v57 = v101;
      }
      *(void *)(v57 + 16) = v65 + 1;
      *(unsigned char *)(v57 + v65 + 32) = v63;
      v58 += 24;
      int64_t v23 = v59 - 1;
    }
    while (v59 != 1);
    a6 = v82;
  }
  uint64_t v100 = v91;
  MEMORY[0x1F4188790](v56);
  *(&v68 - 6) = v77;
  *((unsigned char *)&v68 - 40) = v66;
  *(&v68 - 4) = a6;
  *(&v68 - 3) = v57;
  *(&v68 - 2) = v67;
  sub_1C289A27C(0, &qword_1EA311170, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for AdvertisableFeatureManager.CollectionResult);
  sub_1C28995BC(qword_1EBB75F38, MEMORY[0x1E4F66F68]);
  sub_1C28CCBE0();
  swift_bridgeObjectRelease();
  v80(&v101);
  swift_release();

  sub_1C289A01C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C2897204(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, NSObject *a8, uint64_t a9, uint64_t a10)
{
  sub_1C28CC620();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a7 + 8))(&v25, ObjectType, a7);
  char v16 = v25;
  swift_beginAccess();
  uint64_t v17 = *(void **)(a10 + 16);
  sub_1C2899E20(a1, a2, a3 & 1);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a10 + 16) = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v17 = sub_1C28020BC(0, v17[2] + 1, 1, v17);
    *(void *)(a10 + 16) = v17;
  }
  unint64_t v20 = v17[2];
  unint64_t v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    uint64_t v17 = sub_1C28020BC((void *)(v19 > 1), v20 + 1, 1, v17);
    *(void *)(a10 + 16) = v17;
  }
  void v17[2] = v20 + 1;
  uint64_t v21 = &v17[4 * v20];
  *((unsigned char *)v21 + 32) = v16;
  v21[5] = a1;
  v21[6] = a2;
  *((unsigned char *)v21 + 56) = a3 & 1;
  swift_endAccess();
  sub_1C28CC630();
  sub_1C289737C(a4, a5, a6, a7, a8);
}

void sub_1C289737C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v25 = a1;
  uint64_t v26 = a4;
  uint64_t v7 = sub_1C28CCE10();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD90();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  unint64_t v11 = sub_1C28CCE00();
  os_log_type_t v12 = sub_1C28CDCD0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = v7;
    uint64_t v14 = v13;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v28 = v22;
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v15 = sub_1C28CE830();
    uint64_t v27 = sub_1C27D36AC(v15, v16, &v28);
    uint64_t v24 = a5;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C27D36AC(v25, a2, &v28);
    sub_1C28CDF90();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2082;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v26 + 8))(&v27, ObjectType);
    uint64_t v18 = sub_1C28CD750();
    uint64_t v27 = sub_1C27D36AC(v18, v19, &v28);
    a5 = v24;
    sub_1C28CDF90();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v11, v12, "[%s:%{public}s] Source with identifier %{public}s returned", (uint8_t *)v14, 0x20u);
    uint64_t v20 = v22;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v20, -1, -1);
    MEMORY[0x1C87609B0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  dispatch_group_leave(a5);
}

uint64_t sub_1C2897684@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v64 = a5;
  uint64_t v73 = a6;
  uint64_t v74 = a4;
  uint64_t v66 = a3;
  int v75 = a2;
  uint64_t v7 = sub_1C28CCE10();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  int v65 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v67 = (char *)&v62 - v10;
  swift_beginAccess();
  uint64_t v11 = *a1;
  uint64_t v12 = *(void *)(*a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  if (v12)
  {
    unint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = v11 + 56;
    uint64_t v62 = v12 - 1;
    uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v19 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v80 = (char *)MEMORY[0x1E4FBC860];
    int v76 = 255;
    uint64_t v77 = v12;
    uint64_t v78 = v11;
    uint64_t v63 = v11 + 56;
    do
    {
      uint64_t v71 = v15;
      uint64_t v72 = v16;
      long long v70 = v19;
      uint64_t v21 = (unsigned char *)(v17 + 32 * v14);
      unint64_t v22 = v14;
      while (1)
      {
        if (v22 >= *(void *)(v11 + 16))
        {
          __break(1u);
          return result;
        }
        LODWORD(v79) = *(v21 - 24);
        uint64_t v23 = *((void *)v21 - 2);
        uint64_t v24 = *((void *)v21 - 1);
        LOBYTE(v81[0]) = *v21;
        sub_1C2899E20(v23, v24, v81[0]);
        char v25 = v81[0];
        if (LOBYTE(v81[0]) == 255) {
          goto LABEL_30;
        }
        sub_1C2899E20(v23, v24, v81[0] & 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v80 = sub_1C28021FC(0, *((void *)v80 + 2) + 1, 1, v80);
        }
        unint64_t v27 = *((void *)v80 + 2);
        unint64_t v26 = *((void *)v80 + 3);
        if (v27 >= v26 >> 1) {
          uint64_t v80 = sub_1C28021FC((char *)(v26 > 1), v27 + 1, 1, v80);
        }
        uint64_t v28 = v80;
        *((void *)v80 + 2) = v27 + 1;
        v28[v27 + 32] = v79;
        sub_1C2899EDC(v23, v24, v25 & 1);
        if (v25) {
          break;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_1C28021E4(0, *((void *)v18 + 2) + 1, 1, v18);
        }
        uint64_t v29 = v77;
        unint64_t v31 = *((void *)v18 + 2);
        unint64_t v30 = *((void *)v18 + 3);
        unint64_t v32 = v31 + 1;
        if (v31 >= v30 >> 1) {
          uint64_t v18 = sub_1C28021E4((char *)(v30 > 1), v31 + 1, 1, v18);
        }
        *((void *)v18 + 2) = v32;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1C28021FC(0, *(void *)(v20 + 16) + 1, 1, (char *)v20);
          uint64_t v20 = result;
        }
        unint64_t v34 = *(void *)(v20 + 16);
        unint64_t v33 = *(void *)(v20 + 24);
        if (v34 >= v33 >> 1)
        {
          uint64_t result = (uint64_t)sub_1C28021FC((char *)(v33 > 1), v34 + 1, 1, (char *)v20);
          uint64_t v20 = result;
        }
        ++v22;
        *(void *)(v20 + 16) = v34 + 1;
        *(unsigned char *)(v20 + v34 + 32) = v79;
        v21 += 32;
        uint64_t v11 = v78;
        if (v29 == v22)
        {
LABEL_30:
          unint64_t v19 = v70;
          uint64_t v15 = v71;
          uint64_t v16 = v72;
          goto LABEL_32;
        }
      }
      int v35 = v76;
      if ((_BYTE)v76 == 0xFF)
      {
        swift_bridgeObjectRetain();
        int v35 = 1;
        uint64_t v71 = v24;
        uint64_t v72 = v23;
      }
      swift_bridgeObjectRetain();
      unint64_t v19 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1C28021FC(0, *((void *)v19 + 2) + 1, 1, v19);
      }
      unint64_t v37 = *((void *)v19 + 2);
      unint64_t v36 = *((void *)v19 + 3);
      int v76 = v35;
      if (v37 >= v36 >> 1) {
        unint64_t v19 = sub_1C28021FC((char *)(v36 > 1), v37 + 1, 1, v19);
      }
      unint64_t v14 = v22 + 1;
      *((void *)v19 + 2) = v37 + 1;
      v19[v37 + 32] = v79;
      sub_1C2899EDC(v23, v24, 1);
      uint64_t result = sub_1C2899EDC(v23, v24, 1);
      BOOL v38 = v62 == v22;
      uint64_t v15 = v71;
      uint64_t v16 = v72;
      uint64_t v11 = v78;
      uint64_t v17 = v63;
    }
    while (!v38);
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v15 = 0;
    unint64_t v19 = (char *)MEMORY[0x1E4FBC860];
    int v76 = 255;
    uint64_t v80 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  }
LABEL_32:
  swift_bridgeObjectRelease();
  if (v75)
  {
    swift_bridgeObjectRelease();
    sub_1C2899E30(v16, v15, v76);
    uint64_t v51 = v67;
    sub_1C28CCD90();
    uint64_t v52 = v66;
    swift_retain_n();
    double v53 = sub_1C28CCE00();
    os_log_type_t v54 = sub_1C28CDCB0();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v81[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315394;
      uint64_t v57 = sub_1C28CE830();
      uint64_t v83 = sub_1C27D36AC(v57, v58, v81);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2048;
      uint64_t v83 = *(void *)(v52 + 96);
      uint64_t v16 = 0xD000000000000013;
      sub_1C28CDF90();
      swift_release_n();
      _os_log_impl(&dword_1C27B7000, v53, v54, "[%s] Operation timed out after %f seconds", (uint8_t *)v55, 0x16u);
      char v40 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v56, -1, -1);
      MEMORY[0x1C87609B0](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
      uint64_t v15 = 0x80000001C28DBE70;
    }
    else
    {
      uint64_t v16 = 0xD000000000000013;

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v51, v69);
      uint64_t v15 = 0x80000001C28DBE70;
      char v40 = 1;
    }
  }
  else
  {
    unsigned __int8 v39 = v76;
    if ((_BYTE)v76 == 0xFF)
    {
      uint64_t v15 = 0;
      char v40 = 0;
      uint64_t v16 = (uint64_t)v18;
    }
    else
    {
      swift_bridgeObjectRelease();
      char v40 = v39 & 1;
      char v41 = v65;
      sub_1C28CCD90();
      sub_1C2899FB4();
      sub_1C2899FB4();
      os_log_type_t v42 = sub_1C28CCE00();
      os_log_type_t v43 = sub_1C28CDCB0();
      int v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v78 = swift_slowAlloc();
        uint64_t v83 = v78;
        *(_DWORD *)uint64_t v45 = 136315394;
        uint64_t v79 = v20;
        uint64_t v46 = sub_1C28CE830();
        v81[0] = sub_1C27D36AC(v46, v47, &v83);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2080;
        v81[0] = v16;
        v81[1] = v15;
        char v82 = v39 & 1;
        sub_1C2899FB4();
        sub_1C2899E48();
        LODWORD(v77) = v44;
        uint64_t v48 = sub_1C28CD750();
        v81[0] = sub_1C27D36AC(v48, v49, &v83);
        sub_1C28CDF90();
        uint64_t v20 = v79;
        swift_bridgeObjectRelease();
        sub_1C2899E30(v16, v15, v39);
        sub_1C2899E30(v16, v15, v39);
        _os_log_impl(&dword_1C27B7000, v42, (os_log_type_t)v77, "[%s] Error with one or more advertisable feature sources, first is %s", (uint8_t *)v45, 0x16u);
        uint64_t v50 = v78;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v50, -1, -1);
        MEMORY[0x1C87609B0](v45, -1, -1);

        (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v69);
      }
      else
      {
        sub_1C2899E30(v16, v15, v39);
        sub_1C2899E30(v16, v15, v39);

        (*(void (**)(char *, uint64_t))(v68 + 8))(v41, v69);
      }
    }
  }
  uint64_t v60 = v73;
  uint64_t v59 = v74;
  *uint64_t v73 = v16;
  v60[1] = v15;
  *((unsigned char *)v60 + 16) = v40;
  uint64_t v61 = v80;
  v60[3] = v59;
  v60[4] = (uint64_t)v61;
  v60[5] = v20;
  v60[6] = (uint64_t)v19;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2897F34()
{
  int64_t v1 = v0;
  uint64_t v2 = *v0;
  char v3 = *((unsigned char *)v0 + 32);
  swift_getKeyPath();
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_1C288BE10(v4);
  swift_release();
  swift_release();
  unint64_t v6 = sub_1C27E41F8(v5);
  swift_bridgeObjectRelease();
  type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = (void *)v1[10];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  v12[4] = sub_1C2899B30;
  v12[5] = v9;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C289A718;
  v12[3] = &block_descriptor_44;
  uint64_t v10 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_submitEvent_completion_, v7, v10);
  _Block_release(v10);
  return swift_release_n();
}

uint64_t sub_1C28980C0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_1C28CCE10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v10 = a2;
    sub_1C28CCD90();
    id v11 = a2;
    id v12 = a2;
    uint64_t v13 = sub_1C28CCE00();
    os_log_type_t v14 = sub_1C28CDCB0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v22 = v16;
      uint64_t v23 = a3;
      *(_DWORD *)uint64_t v15 = 136446466;
      swift_getMetatypeMetadata();
      uint64_t v17 = sub_1C28CD750();
      uint64_t v23 = sub_1C27D36AC(v17, v18, &v22);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v23 = (uint64_t)a2;
      id v19 = a2;
      sub_1C27C7060();
      uint64_t v20 = sub_1C28CD750();
      uint64_t v23 = sub_1C27D36AC(v20, v21, &v22);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v13, v14, "[%{public}s] Error when submitting analytics event: %{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v16, -1, -1);
      MEMORY[0x1C87609B0](v15, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t AdvertisableFeatureManager.deinit()
{
  sub_1C2899788(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t AdvertisableFeatureManager.__deallocating_deinit()
{
  sub_1C2899788(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1C2898404(uint64_t a1, char a2)
{
  char v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_1C289848C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  v7[3] = a2;
  void v7[4] = v5;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0xD000000000000011;
  v8[3] = 0x80000001C28DD590;
  v8[4] = sub_1C289A310;
  void v8[5] = v6;
  v8[6] = v2;
  v8[7] = sub_1C289A2CC;
  v8[8] = v7;
  v8[9] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C2895C34((uint64_t)sub_1C2899664, (uint64_t)v8);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1C28985E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_1C2895C34((uint64_t)sub_1C289A2F4, v4);

  return swift_release();
}

uint64_t AdvertisableFeatureManager.advertisableFeatureSource(_:didUpdateAdvertisementStateTo:)(uint64_t a1, uint64_t a2, int a3)
{
  void (*v26)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  NSObject *v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  void (*v42)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  os_log_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v68;
  unsigned __int8 v69;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  os_log_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  void (*v97)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100[3];
  uint64_t v101;

  uint64_t v4 = v3;
  uint64_t v97 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))v3;
  uint64_t v7 = sub_1C28CCE10();
  uint64_t v98 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v89 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v89 - v15;
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v89 - v17;
  swift_retain();
  sub_1C28CC620();
  swift_release();
  if (*(unsigned char *)(v3 + 64) == 1)
  {
    sub_1C28CCD90();
    swift_unknownObjectRetain_n();
    id v19 = sub_1C28CCE00();
    os_log_type_t v20 = sub_1C28CDC90();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v100[0] = v94;
      *(_DWORD *)uint64_t v22 = 136315650;
      uint64_t v93 = v19;
      uint64_t v23 = sub_1C28CE830();
      uint64_t v101 = sub_1C27D36AC(v23, v24, v100);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v26 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8);
      int v96 = v7;
      uint64_t v97 = v26;
      LODWORD(v92) = v21;
      unint64_t v27 = a2;
      v26(&v101, ObjectType, a2);
      uint64_t v28 = sub_1C28CD750();
      uint64_t v101 = sub_1C27D36AC(v28, v29, v100);
      sub_1C28CDF90();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2080;
      if (a3) {
        unint64_t v30 = 1702195828;
      }
      else {
        unint64_t v30 = 0x65736C6166;
      }
      if (a3) {
        unint64_t v31 = 0xE400000000000000;
      }
      else {
        unint64_t v31 = 0xE500000000000000;
      }
      uint64_t v101 = sub_1C27D36AC(v30, v31, v100);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      unint64_t v32 = v93;
      _os_log_impl(&dword_1C27B7000, v93, (os_log_type_t)v92, "[%s] Received updated advertisement state for %{public}s but we're currently frozen: %s", (uint8_t *)v22, 0x20u);
      unint64_t v33 = v94;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v33, -1, -1);
      MEMORY[0x1C87609B0](v22, -1, -1);

      unint64_t v34 = v97;
      (*(void (**)(char *, uint64_t))(v98 + 8))(v18, v96);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v18, v7);
      unint64_t v27 = a2;
      unint64_t v34 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8);
    }
    uint64_t v68 = swift_getObjectType();
    v34(&v99, v68, v27);
    uint64_t v69 = v99;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v101 = *(void *)(v4 + 72);
    *(void *)(v4 + 72) = 0x8000000000000000;
    sub_1C28746DC(a3 & 1, v69, isUniquelyReferenced_nonNull_native);
    *(void *)(v4 + 72) = v101;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_retain();
    sub_1C28CC630();
    return swift_release();
  }
  uint64_t v95 = a3;
  int v96 = v7;
  swift_retain();
  sub_1C28CC630();
  swift_release();
  int v35 = swift_getObjectType();
  unint64_t v36 = *(NSObject **)(a2 + 8);
  v92 = v35;
  uint64_t v93 = v36;
  uint64_t v94 = a2;
  ((void (*)(uint64_t *__return_ptr))v36)(v100);
  unint64_t v37 = v100[0];
  swift_getKeyPath();
  BOOL v38 = swift_retain();
  unsigned __int8 v39 = sub_1C288BE10(v38);
  swift_release();
  swift_release();
  if (*(void *)(v39 + 16) && (char v40 = sub_1C2872528(v37), (v41 & 1) != 0))
  {
    os_log_type_t v42 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)(v39 + 56) + 8 * v40);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1C28CCB10();
    swift_release();
    os_log_type_t v43 = v95;
    if (LOBYTE(v100[0]) != (v95 & 1))
    {
      sub_1C28CCD90();
      swift_unknownObjectRetain_n();
      swift_retain_n();
      int v44 = sub_1C28CCE00();
      uint64_t v45 = sub_1C28CDC90();
      uint64_t v46 = v45;
      if (os_log_type_enabled(v44, v45))
      {
        unint64_t v47 = swift_slowAlloc();
        uint64_t v91 = swift_slowAlloc();
        v100[0] = v91;
        *(_DWORD *)unint64_t v47 = 136315906;
        uint64_t v90 = v44;
        uint64_t v48 = sub_1C28CE830();
        LODWORD(v97) = v46;
        uint64_t v101 = sub_1C27D36AC(v48, v49, v100);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2082;
        ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v93)(&v101, v92, v94);
        uint64_t v50 = sub_1C28CD750();
        uint64_t v101 = sub_1C27D36AC(v50, v51, v100);
        sub_1C28CDF90();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 22) = 2080;
        swift_retain();
        sub_1C28CCB10();
        swift_release();
        if ((_BYTE)v101) {
          uint64_t v52 = 1702195828;
        }
        else {
          uint64_t v52 = 0x65736C6166;
        }
        if ((_BYTE)v101) {
          double v53 = 0xE400000000000000;
        }
        else {
          double v53 = 0xE500000000000000;
        }
        uint64_t v101 = sub_1C27D36AC(v52, v53, v100);
        sub_1C28CDF90();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 32) = 2080;
        if (v95) {
          os_log_type_t v54 = 1702195828;
        }
        else {
          os_log_type_t v54 = 0x65736C6166;
        }
        if (v95) {
          uint64_t v55 = 0xE400000000000000;
        }
        else {
          uint64_t v55 = 0xE500000000000000;
        }
        os_log_type_t v43 = v95;
        uint64_t v101 = sub_1C27D36AC(v54, v55, v100);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        uint64_t v56 = v90;
        _os_log_impl(&dword_1C27B7000, v90, (os_log_type_t)v97, "[%s] Received updated advertisement state for %{public}s: %s -> %s", (uint8_t *)v47, 0x2Au);
        uint64_t v57 = v91;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v57, -1, -1);
        MEMORY[0x1C87609B0](v47, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_unknownObjectRelease_n();
      }
      char v82 = (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v16, v96);
      MEMORY[0x1F4188790](v82);
      *((unsigned char *)&v89 - 16) = v43 & 1;
      swift_retain();
      sub_1C28CCB20();
      swift_release();
      swift_beginAccess();
      if (MEMORY[0x1C8760AB0](v4 + 16))
      {
        uint64_t v83 = *(void *)(v4 + 24);
        uint64_t v84 = swift_getObjectType();
        swift_getKeyPath();
        uint64_t v85 = swift_retain();
        uint64_t v86 = sub_1C288BE10(v85);
        swift_release();
        swift_release();
        uint64_t v87 = sub_1C2892608(v86);
        id v88 = sub_1C27E4E60(v87);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 8))(v4, v88, v84, v83);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      return swift_release();
    }
    sub_1C28CCD90();
    swift_unknownObjectRetain_n();
    uint64_t v71 = sub_1C28CCE00();
    uint64_t v72 = sub_1C28CDC90();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      v100[0] = v91;
      *(_DWORD *)uint64_t v73 = 136315650;
      uint64_t v74 = sub_1C28CE830();
      uint64_t v101 = sub_1C27D36AC(v74, v75, v100);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2082;
      uint64_t v97 = v42;
      int v76 = v98;
      ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v93)(&v101, v92, v94);
      uint64_t v77 = sub_1C28CD750();
      uint64_t v101 = sub_1C27D36AC(v77, v78, v100);
      sub_1C28CDF90();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 22) = 2080;
      if (v95) {
        uint64_t v79 = 1702195828;
      }
      else {
        uint64_t v79 = 0x65736C6166;
      }
      if (v95) {
        uint64_t v80 = 0xE400000000000000;
      }
      else {
        uint64_t v80 = 0xE500000000000000;
      }
      uint64_t v101 = sub_1C27D36AC(v79, v80, v100);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v71, v72, "[%s] Received updated advertisement state for %{public}s but did not change: %s", (uint8_t *)v73, 0x20u);
      uint64_t v81 = v91;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v81, -1, -1);
      MEMORY[0x1C87609B0](v73, -1, -1);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v13, v96);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v13, v96);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C28CCD90();
    swift_unknownObjectRetain_n();
    unint64_t v58 = sub_1C28CCE00();
    uint64_t v59 = sub_1C28CDCC0();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      v100[0] = v61;
      *(_DWORD *)uint64_t v60 = 136315394;
      uint64_t v62 = sub_1C28CE830();
      uint64_t v101 = sub_1C27D36AC(v62, v63, v100);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2082;
      uint64_t v64 = v98;
      ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v93)(&v101, v92, v94);
      int v65 = sub_1C28CD750();
      uint64_t v101 = sub_1C27D36AC(v65, v66, v100);
      sub_1C28CDF90();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v58, v59, "[%s] Unable to find source identifier %{public}s in advertisable feature dictionary", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v61, -1, -1);
      MEMORY[0x1C87609B0](v60, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v10, v96);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v10, v96);
    }
  }
}

uint64_t sub_1C28993C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C2892AAC();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for AdvertisableFeatureManager()
{
  return self;
}

void sub_1C2899414()
{
  if (!qword_1EA311158)
  {
    type metadata accessor for AdvertisableFeatureModel();
    sub_1C2807910();
    unint64_t v0 = sub_1C28CD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311158);
    }
  }
}

void sub_1C2899480()
{
  if (!qword_1EA311160)
  {
    sub_1C2899504(255, &qword_1EA311168, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy.State);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C28CE1A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311160);
    }
  }
}

void sub_1C2899504(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for AdvertisableFeatureManager();
    sub_1C2899414();
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2899570()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28995B0()
{
  return sub_1C28938C4(*(void (**)(void *))(v0 + 16));
}

uint64_t sub_1C28995BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2899604()
{
  return swift_deallocObject();
}

uint64_t (*sub_1C2899614(uint64_t a1, uint64_t a2))()
{
  return sub_1C2893AD8(a1, a2);
}

uint64_t sub_1C289961C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2899654(uint64_t a1)
{
  return sub_1C2893DCC(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_1C2899668()
{
  return swift_deallocObject();
}

uint64_t (*sub_1C2899678(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  return sub_1C2894600(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1C2899680()
{
  return objectdestroy_14Tm_0(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C2899698(uint64_t a1)
{
  return sub_1C2894A5C(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t sub_1C28996A8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28996E0(uint64_t a1)
{
  return sub_1C2894F2C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1C28996E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  void (*v4)(void *__return_ptr, uint64_t *);
  uint64_t v6;
  uint64_t v8;
  void (*v9)(void *__return_ptr, uint64_t *);

  unint64_t v8 = *a2;
  uint64_t v4 = *(void (**)(void *__return_ptr, uint64_t *))a1;
  if (*(unsigned char *)(a1 + 16) != 1)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    v4(&v9, &v8);
    sub_1C2899C70((uint64_t)v4, v6, 0);
    uint64_t v4 = v9;
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 1;
  }
  *a3 = v4;
  return swift_bridgeObjectRetain();
}

unsigned char *sub_1C2899780(unsigned char *a1)
{
  return sub_1C27D80E0(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_1C2899788(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C28997B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8760AB0](v4);
  uint64_t v6 = *(void *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1C289980C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of AdvertisableFeatureManagerDelegate.advertisableFeatureManager(_:didUpdateCurrentAdvertisedFeatures:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.determineCurrentAdvertisedFeatures(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.performPrerequisiteWork(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.commitEnablement(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.determinePostCommitWorkItems(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.modifyAdvertisedModels(modifierBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.freezeAdvertisementState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.unfreezeAdvertisementState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t method lookup function for AdvertisableFeatureManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AdvertisableFeatureManager);
}

uint64_t dispatch thunk of AdvertisableFeatureManager.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.__allocating_init(location:sources:analyticsEventSubmissionManager:queue:timeout:)()
{
  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.determineCurrentAdvertisedFeatures(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.performPrerequisiteWork(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.commitEnablement(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.determinePostCommitWorkItems(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.modifyAdvertisedModels(modifierBlock:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.freezeAdvertisementState()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.unfreezeAdvertisementState()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

ValueMetadata *type metadata accessor for AdvertisableFeatureManager.Constants()
{
  return &type metadata for AdvertisableFeatureManager.Constants;
}

uint64_t sub_1C2899B20()
{
  return swift_deallocObject();
}

uint64_t sub_1C2899B30(uint64_t a1, void *a2)
{
  return sub_1C28980C0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C2899B38()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2899B70()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1C2899BC0(unsigned char *a1)
{
  sub_1C289318C(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_1C2899BD8()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2899C3C(uint64_t a1)
{
  return sub_1C2896850(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(uint64_t *))(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1C2899C70(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t type metadata accessor for AdvertisableFeatureManager.CollectionResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2899C98()
{
  return objectdestroy_14Tm_0(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C2899CB0(uint64_t a1, uint64_t a2)
{
  return sub_1C2894688(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C2899CBC(long long *a1)
{
  uint64_t v2 = *(uint64_t (**)(long long *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 16);
  long long v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

uint64_t sub_1C2899D00()
{
  return objectdestroy_14Tm_0(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_14Tm_0(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2899D60()
{
  return sub_1C2895F38(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C2899D6C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1C2899DC4(uint64_t a1)
{
  sub_1C2897204(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(NSObject **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_1C2899E0C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2897684(*(uint64_t **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_1C2899E20(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C2899E30(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1C289A01C();
  }
  return result;
}

void sub_1C2899E48()
{
  if (!qword_1EA311178)
  {
    sub_1C289A27C(255, (unint64_t *)&qword_1EA310880, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBB320]);
    sub_1C28037EC();
    unint64_t v0 = sub_1C28CE7E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311178);
    }
  }
}

uint64_t sub_1C2899EDC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2899EEC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2899F24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, a2, ObjectType, v5);
}

uint64_t sub_1C2899F8C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C2899FB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2899FC0()
{
  sub_1C289A01C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C289A01C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C289A028(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_1C2899FB4();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  uint64_t v9 = a2[5];
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C289A0AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_1C2899FB4();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1C289A01C();
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C289A170(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_1C289A01C();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C289A1E8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C289A230(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_1C289A27C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C289A2F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C288CCB4(a1, a2);
}

uint64_t AppStoreDataProvider.SleepCategories.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = result + 24;
  if ((unint64_t)(result - 1000) >= 9) {
    char v2 = 9;
  }
  *a2 = v2;
  return result;
}

void *static AppStoreDataProvider.SleepCategories.allCases.getter()
{
  return &unk_1F1DD9CF8;
}

uint64_t AppStoreDataProvider.SleepCategories.rawValue.getter()
{
  return *v0 + 1000;
}

unint64_t sub_1C289A348()
{
  unint64_t result = qword_1EA311200;
  if (!qword_1EA311200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311200);
  }
  return result;
}

uint64_t sub_1C289A39C()
{
  return sub_1C28CE740();
}

uint64_t sub_1C289A3E4()
{
  return sub_1C28CE710();
}

uint64_t sub_1C289A414()
{
  return sub_1C28CE740();
}

uint64_t sub_1C289A458@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return AppStoreDataProvider.SleepCategories.init(rawValue:)(*a1, a2);
}

void sub_1C289A460(void *a1@<X8>)
{
  *a1 = *v1 + 1000;
}

unint64_t sub_1C289A474()
{
  unint64_t result = qword_1EA311208;
  if (!qword_1EA311208)
  {
    sub_1C289A4CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311208);
  }
  return result;
}

void sub_1C289A4CC()
{
  if (!qword_1EA311210)
  {
    unint64_t v0 = sub_1C28CDA30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311210);
    }
  }
}

void sub_1C289A524(void *a1@<X8>)
{
  *a1 = &unk_1F1DD9CF8;
}

uint64_t _s15SleepCategoriesOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15SleepCategoriesOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C289A690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.SleepCategories()
{
  return &type metadata for AppStoreDataProvider.SleepCategories;
}

uint64_t sub_1C289A6C8()
{
  unint64_t v0 = sub_1C2807C7C(qword_1F1DD96B0);
  sub_1C283BB24();
  uint64_t result = swift_arrayDestroy();
  qword_1EBB7F3A0 = v0;
  return result;
}

void sub_1C289A718(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t ManagedProfileConnection.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ManagedProfileConnection.init()()
{
  return v0;
}

uint64_t sub_1C289A7A8()
{
  id v0 = objc_msgSend(self, sel_sharedConnection);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_isWheelchairDataSubmissionAllowed);

    return (uint64_t)v2;
  }
  else
  {
    uint64_t result = sub_1C28CE360();
    __break(1u);
  }
  return result;
}

void sub_1C289A858(char a1)
{
  id v2 = self;
  uint64_t v3 = *MEMORY[0x1E4F65848];
  v5[4] = nullsub_1;
  v5[5] = 0;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = sub_1C289A718;
  v5[3] = &block_descriptor_17;
  unsigned int v4 = _Block_copy(v5);
  objc_msgSend(v2, sel_setUserDidAccept_currentAgreement_completion_, a1 & 1, v3, v4);
  _Block_release(v4);
}

void sub_1C289A92C(char a1)
{
  id v2 = objc_msgSend(self, sel_sharedConnection);
  objc_msgSend(v2, sel_setWheelchairDataSubmissionAllowed_, a1 & 1);
}

uint64_t ManagedProfileConnection.deinit()
{
  return v0;
}

uint64_t ManagedProfileConnection.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for ManagedProfileConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ManagedProfileConnection);
}

uint64_t dispatch thunk of ManagedProfileConnection.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ManagedProfileConnection.isImproveHealthDataAllowed.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ManagedProfileConnection.isImproveWheelchairDataAllowed.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ManagedProfileConnection.setImproveHealthData(value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ManagedProfileConnection.setImproveWheelchairData(value:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1C289AA70()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C289AB64()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C289AC70()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C289AD44()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C289AE88()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t AdvertisableFeatureModel.shouldAdvertise.getter()
{
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  return v1;
}

uint64_t AdvertisableFeatureModel.shouldEnable.getter()
{
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  return v1;
}

uint64_t AdvertisableFeatureModel.__allocating_init(identifier:configuration:shouldAdvertise:shouldEnable:)(unsigned char *a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  long long v5 = *a2;
  long long v6 = a2[1];
  uint64_t v7 = *((void *)a2 + 4);
  *(unsigned char *)(v4 + 16) = *a1;
  *(_OWORD *)(v4 + 24) = v5;
  *(_OWORD *)(v4 + 40) = v6;
  *(void *)(v4 + 56) = v7;
  sub_1C289B50C();
  swift_allocObject();
  *(void *)(v4 + 72) = sub_1C28CCB40();
  swift_allocObject();
  *(void *)(v4 + 64) = sub_1C28CCB40();
  return v4;
}

unint64_t static AdvertisableFeatureModel.Constants.cellReuseIdentifier.getter()
{
  return 0xD000000000000016;
}

void AdvertisableFeatureModel.identifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t AdvertisableFeatureModel.configuration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  long long v5 = (void *)v1[7];
  *a1 = v1[3];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  id v6 = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C289B1B4@<X0>(unsigned char *a1@<X8>)
{
  swift_retain();
  sub_1C28CCB10();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C289B204()
{
  return swift_release();
}

uint64_t AdvertisableFeatureModel.shouldEnable.setter()
{
  return swift_release();
}

uint64_t (*AdvertisableFeatureModel.shouldEnable.modify(uint64_t a1))()
{
  *(void *)a1 = v1;
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return sub_1C289B32C;
}

uint64_t sub_1C289B32C()
{
  return swift_release();
}

uint64_t sub_1C289B3B8@<X0>(unsigned char *a1@<X8>)
{
  swift_retain();
  sub_1C28CCB10();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C289B408()
{
  return swift_release();
}

uint64_t AdvertisableFeatureModel.init(identifier:configuration:shouldAdvertise:shouldEnable:)(unsigned char *a1, long long *a2)
{
  long long v3 = *a2;
  long long v4 = a2[1];
  uint64_t v5 = *((void *)a2 + 4);
  *(unsigned char *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 24) = v3;
  *(_OWORD *)(v2 + 40) = v4;
  *(void *)(v2 + 56) = v5;
  sub_1C289B50C();
  swift_allocObject();
  *(void *)(v2 + 72) = sub_1C28CCB40();
  swift_allocObject();
  *(void *)(v2 + 64) = sub_1C28CCB40();
  return v2;
}

void sub_1C289B50C()
{
  if (!qword_1EBB73CC0)
  {
    unint64_t v0 = sub_1C28CCB30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB73CC0);
    }
  }
}

unsigned char *sub_1C289B564(unsigned char *result)
{
  *uint64_t result = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t AdvertisableFeatureModel.hash(into:)()
{
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  sub_1C28CE720();
  if (v1)
  {
    id v3 = v2;
    sub_1C28CDF40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  sub_1C28CE720();
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  return sub_1C28CE720();
}

uint64_t AdvertisableFeatureModel.deinit()
{
  uint64_t v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t AdvertisableFeatureModel.__deallocating_deinit()
{
  uint64_t v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t AdvertisableFeatureModel.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t sub_1C289B888()
{
  return sub_1C28CE740();
}

uint64_t sub_1C289B8CC()
{
  return AdvertisableFeatureModel.hash(into:)();
}

uint64_t sub_1C289B8F0()
{
  return sub_1C28CE740();
}

uint64_t sub_1C289B930(uint64_t *a1, uint64_t *a2)
{
  return _s16HealthExperience24AdvertisableFeatureModelC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t AdvertisableFeatureModel.uniqueIdentifier.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t AdvertisableFeatureModel.reuseIdentifier.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_1C289BA14()
{
  return 0xD000000000000016;
}

unint64_t sub_1C289BA30()
{
  return AdvertisableFeatureModel.uniqueIdentifier.getter();
}

uint64_t _s16HealthExperience24AdvertisableFeatureModelC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1C27F2440(*(unsigned char *)(a1 + 16), *(unsigned char *)(a2 + 16)) & 1) == 0) {
    goto LABEL_4;
  }
  long long v4 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  v14[0] = *(_OWORD *)(a1 + 24);
  v14[1] = v4;
  uint64_t v15 = v5;
  long long v6 = *(_OWORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  v12[0] = *(_OWORD *)(a2 + 24);
  v12[1] = v6;
  uint64_t v13 = v7;
  if ((_s16HealthExperience32AdvertisableFeatureConfigurationV2eeoiySbAC_ACtFZ_0(v14, v12) & 1) == 0) {
    goto LABEL_4;
  }
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  int v8 = LOBYTE(v14[0]);
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  if (v8 == LOBYTE(v14[0]))
  {
    swift_retain();
    sub_1C28CCB10();
    swift_release();
    char v11 = v14[0];
    swift_retain();
    sub_1C28CCB10();
    swift_release();
    char v9 = v11 ^ LOBYTE(v14[0]) ^ 1;
  }
  else
  {
LABEL_4:
    char v9 = 0;
  }
  return v9 & 1;
}

unint64_t sub_1C289BB74()
{
  unint64_t result = qword_1EA311218;
  if (!qword_1EA311218)
  {
    type metadata accessor for AdvertisableFeatureModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311218);
  }
  return result;
}

uint64_t type metadata accessor for AdvertisableFeatureModel()
{
  return self;
}

uint64_t method lookup function for AdvertisableFeatureModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AdvertisableFeatureModel);
}

uint64_t dispatch thunk of AdvertisableFeatureModel.__allocating_init(identifier:configuration:shouldAdvertise:shouldEnable:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for AdvertisableFeatureModel.Constants()
{
  return &type metadata for AdvertisableFeatureModel.Constants;
}

uint64_t static HKProfileStore.ProfileCreationError.== infix(_:_:)()
{
  return 1;
}

uint64_t HKProfileStore.ProfileCreationError.hash(into:)()
{
  return sub_1C28CE710();
}

uint64_t HKProfileStore.ProfileCreationError.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t HKProfileStore.createNewProfilePublisher(of:displayName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C289BE68();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v3;
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = a3;
  sub_1C289BEFC();
  sub_1C289C060(&qword_1EA311230, (void (*)(uint64_t))sub_1C289BEFC);
  id v13 = v3;
  swift_bridgeObjectRetain();
  sub_1C28CD260();
  sub_1C289C060(&qword_1EA311238, (void (*)(uint64_t))sub_1C289BE68);
  uint64_t v14 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v14;
}

void sub_1C289BE68()
{
  if (!qword_1EA311220)
  {
    sub_1C289BEFC();
    sub_1C289C060(&qword_1EA311230, (void (*)(uint64_t))sub_1C289BEFC);
    unint64_t v0 = sub_1C28CD270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311220);
    }
  }
}

void sub_1C289BEFC()
{
  if (!qword_1EA311228)
  {
    sub_1C289BF6C();
    sub_1C27C7060();
    unint64_t v0 = sub_1C28CD240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311228);
    }
  }
}

unint64_t sub_1C289BF6C()
{
  unint64_t result = qword_1EBB77120;
  if (!qword_1EBB77120)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB77120);
  }
  return result;
}

uint64_t sub_1C289BFAC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  void v10[3] = a2;
  void v10[4] = a3;
  void v10[5] = a4;
  sub_1C289BEFC();
  swift_allocObject();
  id v11 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C28CD250();
  *a5 = result;
  return result;
}

uint64_t sub_1C289C054@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C289BFAC(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1C289C060(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C289C0A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  uint64_t v9 = (void *)sub_1C28CD6F0();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C285BEA8;
  *(void *)(v10 + 24) = v8;
  v12[4] = sub_1C289C484;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_1C27BCB7C;
  v12[3] = &block_descriptor_18;
  id v11 = _Block_copy(v12);
  swift_release();
  objc_msgSend(a3, sel_createProfileOfType_displayName_completion_, a4, v9, v11);
  _Block_release(v11);
}

void sub_1C289C1EC(void *a1, id a2, void (*a3)(uint64_t, uint64_t))
{
  if (a2)
  {
    id v4 = a2;
    id v5 = a2;
    uint64_t v6 = (uint64_t)v4;
    goto LABEL_3;
  }
  if (!a1)
  {
    sub_1C289C48C();
    uint64_t v6 = swift_allocError();
    id v4 = (id)v6;
LABEL_3:
    a3(v6, 1);
    uint64_t v7 = v4;
    goto LABEL_5;
  }
  id v9 = a1;
  a3((uint64_t)a1, 0);
  uint64_t v7 = v9;

LABEL_5:
}

uint64_t sub_1C289C2C0()
{
  return swift_deallocObject();
}

unint64_t sub_1C289C2D4()
{
  unint64_t result = qword_1EA311240;
  if (!qword_1EA311240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311240);
  }
  return result;
}

unsigned char *_s20ProfileCreationErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C289C3C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HKProfileStore.ProfileCreationError()
{
  return &type metadata for HKProfileStore.ProfileCreationError;
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1C289C440(uint64_t a1, uint64_t a2)
{
  sub_1C289C0A8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C289C44C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C289C484(void *a1, void *a2)
{
  sub_1C289C1EC(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

unint64_t sub_1C289C48C()
{
  unint64_t result = qword_1EA311248;
  if (!qword_1EA311248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311248);
  }
  return result;
}

uint64_t HKBiologicalSex.stringValue.getter()
{
  return 0x6E776F6E6B6E75;
}

uint64_t static CNContactStore.termsOfAddressKey.getter()
{
  return sub_1C289C750(MEMORY[0x1E4F1AD88]);
}

id CNContactStore.findContact(for:keysToFetch:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = __swift_project_boxed_opaque_existential_1(a1, v4);

  return sub_1C289EB74((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_1C289C5DC(uint64_t a1)
{
  return sub_1C289C61C(a1, &qword_1EBB74EA0, MEMORY[0x1E4F671C8]);
}

uint64_t sub_1C289C5FC(uint64_t a1)
{
  return sub_1C289C61C(a1, (unint64_t *)&unk_1EBB74EB0, MEMORY[0x1E4F67318]);
}

uint64_t sub_1C289C61C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C289F370(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 24) = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 32) = v5;
  *(_WORD *)(v4 + 40) = 256;
  sub_1C28CC9F0();
  swift_allocObject();
  *(void *)(v4 + 48) = sub_1C28CC9E0();
  *(void *)(v4 + 16) = a1;
  return v4;
}

uint64_t sub_1C289C6AC(uint64_t a1)
{
  sub_1C289F758(0, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 24) = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 32) = v3;
  *(_WORD *)(v2 + 40) = 256;
  sub_1C28CC9F0();
  swift_allocObject();
  *(void *)(v2 + 48) = sub_1C28CC9E0();
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t static CNContactStore.imageOnlyKey.getter()
{
  return sub_1C289C750(MEMORY[0x1E4F1AF98]);
}

uint64_t sub_1C289C750(void **a1)
{
  sub_1C27D87FC();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C28D19D0;
  uint64_t v3 = *a1;
  *(void *)(v2 + 32) = *a1;
  uint64_t v6 = v2;
  sub_1C28CD940();
  id v4 = v3;
  return v6;
}

uint64_t static CNContactStore.namesAndIdentifierOnlyKey.getter()
{
  sub_1C27D87FC();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = (void **)MEMORY[0x1E4F1ADF0];
  *(_OWORD *)(v0 + 16) = xmmword_1C28D5EA0;
  uint64_t v2 = *v1;
  uint64_t v3 = (void *)*MEMORY[0x1E4F1ADE0];
  *(void *)(v0 + 32) = *v1;
  *(void *)(v0 + 40) = v3;
  id v4 = (void *)*MEMORY[0x1E4F1AE08];
  *(void *)(v0 + 48) = *MEMORY[0x1E4F1AE08];
  uint64_t v9 = v0;
  sub_1C28CD940();
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  return v9;
}

BOOL static CNContactStore.canUseCustomContactPicker.getter()
{
  return objc_msgSend(self, sel_authorizationStatusForEntityType_, 0) == (id)3;
}

id CNContactStore.findContactOrCreate(for:keysToFetch:)(void *a1, uint64_t a2)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  id v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  v15[3] = v5;
  v15[4] = v6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(boxed_opaque_existential_0, v7, v5);
  id v9 = sub_1C289EB74((uint64_t)boxed_opaque_existential_0, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  if (v9) {
    return v9;
  }
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  id v13 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_contactWithDisplayName_emailOrPhoneNumber_, 0, v13);

  return v14;
}

uint64_t sub_1C289C9D4()
{
  return sub_1C28CD750();
}

uint64_t CNContactStore.contactFetchPublisher(matching:keysToFetch:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v30 = a3;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C28A0420(0, &qword_1EBB756B0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v28 - v9;
  sub_1C289EFD0();
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C289F100(0, (unint64_t *)&unk_1EA311280, (void (*)(uint64_t))sub_1C289EFD0, (void (*)(void))sub_1C289F1A8);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v31 = v14;
  uint64_t v32 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v28 - v16;
  sub_1C27CE8A4(a1, (uint64_t)v33);
  unint64_t v18 = (void *)swift_allocObject();
  sub_1C27CAE60(v33, (uint64_t)(v18 + 2));
  v18[7] = v4;
  v18[8] = a2;
  v18[9] = ObjectType;
  id v19 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C289F370(0, &qword_1EA311260, (uint64_t (*)(uint64_t))sub_1C289F098, MEMORY[0x1E4F1AAE0]);
  sub_1C289F46C(&qword_1EA311278, &qword_1EA311260, v19);
  id v20 = v4;
  swift_bridgeObjectRetain();
  sub_1C28CD260();
  *(void *)&v33[0] = v30;
  uint64_t v21 = sub_1C28CDE50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 1, 1, v21);
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77310);
  sub_1C289F1A8();
  sub_1C289F1DC();
  uint64_t v22 = v29;
  sub_1C28CD400();
  sub_1C289F29C((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v22);
  *(void *)(swift_allocObject() + 16) = 1;
  sub_1C289F370(0, &qword_1EA3112A0, (uint64_t (*)(uint64_t))sub_1C289F098, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  sub_1C289F3E4();
  sub_1C289F46C(&qword_1EA3112B0, &qword_1EA3112A0, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  uint64_t v23 = v31;
  uint64_t v24 = sub_1C28CD3F0();
  swift_release();
  *(void *)&v33[0] = v24;
  sub_1C289F4C8();
  sub_1C289F5E8();
  uint64_t v25 = sub_1C28CD190();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v23);
  *(void *)&v33[0] = v25;
  sub_1C289FAFC(0, &qword_1EA3112C8, (void (*)(uint64_t))sub_1C289F4C8, (void (*)(void))sub_1C289F5E8);
  sub_1C289F61C();
  uint64_t v26 = sub_1C28CD300();
  swift_release();
  return v26;
}

uint64_t sub_1C289CEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v24 = a2;
  unint64_t v27 = a5;
  sub_1C28A0168(0, (unint64_t *)&unk_1EA3113B8, (uint64_t)&qword_1EA310300, (uint64_t)&protocol descriptor for ContactLookUpInformationProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27CAE78);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - v9;
  sub_1C28A02B4();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A0334();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CE8A4(a1, (uint64_t)v30);
  sub_1C27CAE78(0, &qword_1EA310300);
  sub_1C28CD210();
  uint64_t v28 = v24;
  uint64_t v29 = v25;
  sub_1C289F098();
  sub_1C28CD1F0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C27CE8A4(a1, (uint64_t)v30);
  uint64_t v21 = swift_allocObject();
  sub_1C27CAE60(v30, v21 + 16);
  *(void *)(v21 + 56) = v26;
  sub_1C28A0420(0, &qword_1EA3113D8, (uint64_t (*)(uint64_t))sub_1C289F098, MEMORY[0x1E4F1AC08]);
  sub_1C28A05B0(&qword_1EA3113E0, (void (*)(uint64_t))sub_1C28A02B4);
  sub_1C28A0484();
  sub_1C28CD350();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C28A05B0(&qword_1EA3113F0, (void (*)(uint64_t))sub_1C28A0334);
  uint64_t v22 = sub_1C28CD300();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  *unint64_t v27 = v22;
  return result;
}

uint64_t sub_1C289D2C8(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_1C28CCDC0();
  sub_1C27CE8A4(a2, (uint64_t)v29);
  id v9 = v8;
  id v10 = v8;
  uint64_t v11 = sub_1C28CCE00();
  os_log_type_t v12 = sub_1C28CDCB0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v26 = v4;
    uint64_t v14 = v13;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v28 = v25;
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v15 = sub_1C28CE830();
    v27[0] = sub_1C27D36AC(v15, v16, &v28);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_1C27CE8A4((uint64_t)v29, (uint64_t)v27);
    sub_1C27CAE78(0, &qword_1EA310300);
    uint64_t v17 = sub_1C28CD750();
    v27[0] = sub_1C27D36AC(v17, v18, &v28);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    *(_WORD *)(v14 + 22) = 2080;
    v27[0] = (uint64_t)v8;
    id v19 = v8;
    sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
    uint64_t v20 = sub_1C28CD760();
    v27[0] = sub_1C27D36AC(v20, v21, &v28);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v11, v12, "[%s] Could not fetch CNContact data that matches '%s': %s", (uint8_t *)v14, 0x20u);
    uint64_t v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v22, -1, -1);
    MEMORY[0x1C87609B0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v29[0] = 0;
  sub_1C289F098();
  return sub_1C28CD210();
}

uint64_t CNContactStore.contactFetchOrCreatePublisher(matching:keysToFetch:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v30 = a3;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C28A0420(0, &qword_1EBB756B0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v29 - v9;
  sub_1C289F6A4();
  uint64_t v29 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C289F100(0, &qword_1EA3112F0, (void (*)(uint64_t))sub_1C289F6A4, (void (*)(void))sub_1C289F81C);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v29 - v17;
  sub_1C289F850(a1, (uint64_t)v33);
  uint64_t v19 = swift_allocObject();
  sub_1C289F8B8(v33, (_OWORD *)(v19 + 16));
  *(void *)(v19 + 64) = v4;
  *(void *)(v19 + 72) = a2;
  *(void *)(v19 + 80) = ObjectType;
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C289F758(0, &qword_1EA3112E0, MEMORY[0x1E4F1AAE0]);
  sub_1C289F7D8(&qword_1EA3112E8, &qword_1EA3112E0, v20);
  id v21 = v4;
  swift_bridgeObjectRetain();
  sub_1C28CD260();
  *(void *)&v33[0] = v30;
  uint64_t v22 = sub_1C28CDE50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 1, 1, v22);
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77310);
  sub_1C289F81C();
  sub_1C289F1DC();
  uint64_t v23 = v29;
  sub_1C28CD400();
  sub_1C289F29C((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  *(void *)(swift_allocObject() + 16) = 1;
  sub_1C289F758(0, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  sub_1C289F934();
  sub_1C289F7D8(&qword_1EA311310, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  uint64_t v24 = v31;
  uint64_t v25 = sub_1C28CD3F0();
  swift_release();
  *(void *)&v33[0] = v25;
  sub_1C289F9BC();
  sub_1C289FAC8();
  uint64_t v26 = sub_1C28CD190();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v24);
  *(void *)&v33[0] = v26;
  sub_1C289FAFC(0, &qword_1EA311328, (void (*)(uint64_t))sub_1C289F9BC, (void (*)(void))sub_1C289FAC8);
  sub_1C289FB6C();
  uint64_t v27 = sub_1C28CD300();
  swift_release();
  return v27;
}

uint64_t sub_1C289DAD0@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *a1;
  sub_1C28CCDC0();
  sub_1C289F850((uint64_t)a2, (uint64_t)v42);
  id v11 = v10;
  id v12 = v10;
  uint64_t v13 = sub_1C28CCE00();
  os_log_type_t v14 = sub_1C28CDCB0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v39 = a3;
    uint64_t v16 = v15;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v41 = v37;
    *(_DWORD *)uint64_t v16 = 136315651;
    uint64_t v38 = v6;
    uint64_t v17 = sub_1C28CE830();
    v40[0] = sub_1C27D36AC(v17, v18, &v41);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2081;
    sub_1C289F850((uint64_t)v42, (uint64_t)v40);
    sub_1C289FF90();
    uint64_t v19 = sub_1C28CD750();
    v40[0] = sub_1C27D36AC(v19, v20, &v41);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
    *(_WORD *)(v16 + 22) = 2080;
    v40[0] = (uint64_t)v10;
    id v21 = v10;
    sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
    uint64_t v22 = sub_1C28CD760();
    v40[0] = sub_1C27D36AC(v22, v23, &v41);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v13, v14, "[%s] Could not fetch CNContact data that matches '%{private}s': %s", (uint8_t *)v16, 0x20u);
    uint64_t v24 = v37;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v24, -1, -1);
    MEMORY[0x1C87609B0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v38);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v25 = a2[3];
  uint64_t v26 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  uint64_t v27 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(self, sel_contactWithDisplayName_emailOrPhoneNumber_, 0, v27);

  uint64_t v29 = a2[3];
  uint64_t v30 = a2[5];
  __swift_project_boxed_opaque_existential_1(a2, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  uint64_t v31 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setGivenName_, v31);

  uint64_t v32 = a2[3];
  uint64_t v33 = a2[5];
  __swift_project_boxed_opaque_existential_1(a2, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
  if (v34)
  {
    int v35 = (void *)sub_1C28CD6F0();
    objc_msgSend(v28, sel_setFamilyName_, v35);
    swift_bridgeObjectRelease();
  }
  v42[0] = v28;
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F80);
  return sub_1C28CD210();
}

uint64_t CNContactStore.contactFetchOrCreatePublisherNonAsync(matching:keysToFetch:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C289F6A4();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C289F850(a1, (uint64_t)v19);
  uint64_t v12 = swift_allocObject();
  sub_1C289F8B8(v19, (_OWORD *)(v12 + 16));
  *(void *)(v12 + 64) = v3;
  *(void *)(v12 + 72) = a2;
  *(void *)(v12 + 80) = ObjectType;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C289F758(0, &qword_1EA3112E0, MEMORY[0x1E4F1AAE0]);
  sub_1C289F7D8(&qword_1EA3112E8, &qword_1EA3112E0, v13);
  id v14 = v3;
  swift_bridgeObjectRetain();
  sub_1C28CD260();
  *(void *)(swift_allocObject() + 16) = 1;
  sub_1C289F758(0, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  sub_1C289F81C();
  sub_1C289F7D8(&qword_1EA311310, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  uint64_t v15 = sub_1C28CD3F0();
  swift_release();
  *(void *)&v19[0] = v15;
  sub_1C289FC78();
  sub_1C289FD54();
  uint64_t v16 = sub_1C28CD190();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(void *)&v19[0] = v16;
  sub_1C289FAFC(0, &qword_1EA311348, (void (*)(uint64_t))sub_1C289FC78, (void (*)(void))sub_1C289FD54);
  sub_1C289FD88();
  uint64_t v17 = sub_1C28CD300();
  swift_release();
  return v17;
}

uint64_t sub_1C289E248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v33 = a7;
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v34 = a8;
  sub_1C28A0420(0, &qword_1EA311370, (uint64_t (*)(uint64_t))sub_1C289FF90, MEMORY[0x1E4F1AC08]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v27 - v12;
  sub_1C289FFF0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A0080();
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C289F850(a1, (uint64_t)v37);
  sub_1C289FF90();
  sub_1C28CD210();
  uint64_t v35 = v28;
  uint64_t v36 = v29;
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F80);
  sub_1C28CD1F0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1C289F850(a1, (uint64_t)v37);
  uint64_t v24 = swift_allocObject();
  sub_1C289F8B8(v37, (_OWORD *)(v24 + 16));
  *(void *)(v24 + 64) = v32;
  sub_1C28A0168(0, &qword_1EA310730, (uint64_t)&qword_1EBB76F80, 0x1E4F1B8F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D1C9C);
  sub_1C28A05B0(&qword_1EA3113A0, (void (*)(uint64_t))sub_1C289FFF0);
  sub_1C28A01C4();
  sub_1C28CD350();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1C28A05B0(&qword_1EA3113B0, (void (*)(uint64_t))sub_1C28A0080);
  uint64_t v25 = sub_1C28CD300();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t *v34 = v25;
  return result;
}

void sub_1C289E600(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a1, v8);
  v16[3] = v8;
  v16[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, v10, v8);
  id v12 = sub_1C289EB74((uint64_t)boxed_opaque_existential_0, a3, a2, v8, v9);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  if (!v12)
  {
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    uint64_t v15 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(self, sel_contactWithDisplayName_emailOrPhoneNumber_, 0, v15);
  }
  *a4 = v12;
}

uint64_t sub_1C289E74C@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  sub_1C28CCDC0();
  sub_1C289F850((uint64_t)a2, (uint64_t)v35);
  id v11 = v10;
  id v12 = v10;
  uint64_t v13 = sub_1C28CCE00();
  os_log_type_t v14 = sub_1C28CDCB0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v32 = a3;
    uint64_t v16 = v15;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v34 = v30;
    *(_DWORD *)uint64_t v16 = 136315651;
    uint64_t v31 = v6;
    uint64_t v17 = sub_1C28CE830();
    v33[0] = sub_1C27D36AC(v17, v18, &v34);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2081;
    sub_1C289F850((uint64_t)v35, (uint64_t)v33);
    sub_1C289FF90();
    uint64_t v19 = sub_1C28CD750();
    v33[0] = sub_1C27D36AC(v19, v20, &v34);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
    *(_WORD *)(v16 + 22) = 2080;
    v33[0] = (uint64_t)v10;
    id v21 = v10;
    sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
    uint64_t v22 = sub_1C28CD760();
    v33[0] = sub_1C27D36AC(v22, v23, &v34);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v13, v14, "[%s] Could not fetch CNContact data that matches '%{private}s': %s", (uint8_t *)v16, 0x20u);
    uint64_t v24 = v30;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v24, -1, -1);
    MEMORY[0x1C87609B0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v25 = a2[3];
  uint64_t v26 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  uint64_t v27 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(self, sel_contactWithDisplayName_emailOrPhoneNumber_, 0, v27);

  v35[0] = v28;
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F80);
  return sub_1C28CD210();
}

uint64_t static ContactStoreError.== infix(_:_:)()
{
  return 1;
}

uint64_t ContactStoreError.hash(into:)()
{
  return sub_1C28CE710();
}

uint64_t ContactStoreError.hashValue.getter()
{
  return sub_1C28CE740();
}

id sub_1C289EB74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  v40[5] = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = sub_1C28CCE10();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[3] = a4;
  v40[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_0, a1, a4);
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  id v16 = v15;
  if (v15)
  {
    uint64_t v17 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    sub_1C27D8FA4();
    unint64_t v18 = (void *)sub_1C28CD910();
    v39[0] = 0;
    id v16 = objc_msgSend(a3, sel_unifiedContactWithIdentifier_keysToFetch_error_, v17, v18, v39);

    id v19 = v39[0];
    if (!v16)
    {
      unint64_t v20 = v19;
      id v21 = (void *)sub_1C28CC290();

      swift_willThrow();
      sub_1C28CCDC0();
      sub_1C27CE8A4((uint64_t)v40, (uint64_t)v39);
      id v22 = v21;
      id v23 = v21;
      uint64_t v24 = sub_1C28CCE00();
      os_log_type_t v25 = sub_1C28CDCB0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v38 = v36;
        *(_DWORD *)uint64_t v26 = 136315651;
        v37[0] = ObjectType;
        swift_getMetatypeMetadata();
        uint64_t v27 = sub_1C28CD750();
        v37[0] = sub_1C27D36AC(v27, v28, &v38);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2081;
        sub_1C27CE8A4((uint64_t)v39, (uint64_t)v37);
        sub_1C27CAE78(0, &qword_1EA310300);
        uint64_t v29 = sub_1C28CD750();
        v37[0] = sub_1C27D36AC(v29, v30, &v38);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
        *(_WORD *)(v26 + 22) = 2080;
        v37[0] = (uint64_t)v21;
        id v31 = v21;
        sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
        uint64_t v32 = sub_1C28CD760();
        v37[0] = sub_1C27D36AC(v32, v33, &v38);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C27B7000, v24, v25, "[%s] Could not fetch CNContact data for '%{private}s': %s", (uint8_t *)v26, 0x20u);
        uint64_t v34 = v36;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v34, -1, -1);
        MEMORY[0x1C87609B0](v26, -1, -1);
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      id v16 = 0;
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  return v16;
}

void sub_1C289EFD0()
{
  if (!qword_1EA311258)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C289F370(255, &qword_1EA311260, (uint64_t (*)(uint64_t))sub_1C289F098, MEMORY[0x1E4F1AAE0]);
    sub_1C289F46C(&qword_1EA311278, &qword_1EA311260, v0);
    unint64_t v1 = sub_1C28CD270();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA311258);
    }
  }
}

void sub_1C289F098()
{
  if (!qword_1EA311268)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76F80);
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311268);
    }
  }
}

void sub_1C289F100(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB77310);
    a4();
    sub_1C289F1DC();
    unint64_t v6 = sub_1C28CCED0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C289F1A8()
{
  return sub_1C28A05B0((unint64_t *)&unk_1EA311290, (void (*)(uint64_t))sub_1C289EFD0);
}

unint64_t sub_1C289F1DC()
{
  unint64_t result = qword_1EBB756B8;
  if (!qword_1EBB756B8)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB77310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB756B8);
  }
  return result;
}

uint64_t sub_1C289F244()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C289F28C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C289CEF0((uint64_t)(v1 + 2), v1[7], v1[8], v1[9], a1);
}

uint64_t sub_1C289F29C(uint64_t a1)
{
  sub_1C28A0420(0, &qword_1EBB756B0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C289F328()
{
  return swift_deallocObject();
}

uint64_t sub_1C289F338()
{
  return sub_1C289C61C(*(void *)(v0 + 16), &qword_1EA3112A0, (uint64_t (*)(uint64_t))sub_1C289F098);
}

void sub_1C289F370(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C289F3E4()
{
  unint64_t result = qword_1EA3112A8;
  if (!qword_1EA3112A8)
  {
    sub_1C289F100(255, (unint64_t *)&unk_1EA311280, (void (*)(uint64_t))sub_1C289EFD0, (void (*)(void))sub_1C289F1A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3112A8);
  }
  return result;
}

uint64_t sub_1C289F46C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C289F370(255, a2, (uint64_t (*)(uint64_t))sub_1C289F098, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C289F4C8()
{
  if (!qword_1EA3112B8)
  {
    sub_1C289F100(255, (unint64_t *)&unk_1EA311280, (void (*)(uint64_t))sub_1C289EFD0, (void (*)(void))sub_1C289F1A8);
    sub_1C289F370(255, &qword_1EA3112A0, (uint64_t (*)(uint64_t))sub_1C289F098, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    sub_1C289F3E4();
    sub_1C289F46C(&qword_1EA3112B0, &qword_1EA3112A0, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    unint64_t v0 = sub_1C28CCFD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3112B8);
    }
  }
}

uint64_t sub_1C289F5E8()
{
  return sub_1C28A05B0(&qword_1EA3112C0, (void (*)(uint64_t))sub_1C289F4C8);
}

unint64_t sub_1C289F61C()
{
  unint64_t result = qword_1EA3112D0;
  if (!qword_1EA3112D0)
  {
    sub_1C289FAFC(255, &qword_1EA3112C8, (void (*)(uint64_t))sub_1C289F4C8, (void (*)(void))sub_1C289F5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3112D0);
  }
  return result;
}

void sub_1C289F6A4()
{
  if (!qword_1EA3112D8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C289F758(255, &qword_1EA3112E0, MEMORY[0x1E4F1AAE0]);
    sub_1C289F7D8(&qword_1EA3112E8, &qword_1EA3112E0, v0);
    unint64_t v1 = sub_1C28CD270();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA3112D8);
    }
  }
}

void sub_1C289F758(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76F80);
    unint64_t v7 = a3(a1, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C289F7D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C289F758(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C289F81C()
{
  return sub_1C28A05B0(&qword_1EA3112F8, (void (*)(uint64_t))sub_1C289F6A4);
}

uint64_t sub_1C289F850(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_1C289F8B8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1C289F8D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C289E248((uint64_t)(v1 + 2), v1[8], v1[9], v1[10], (uint64_t)sub_1C28A028C, (uint64_t)&unk_1F1DE0830, (uint64_t)sub_1C28A02A8, a1);
}

uint64_t sub_1C289F924()
{
  return swift_deallocObject();
}

unint64_t sub_1C289F934()
{
  unint64_t result = qword_1EA311308;
  if (!qword_1EA311308)
  {
    sub_1C289F100(255, &qword_1EA3112F0, (void (*)(uint64_t))sub_1C289F6A4, (void (*)(void))sub_1C289F81C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311308);
  }
  return result;
}

void sub_1C289F9BC()
{
  if (!qword_1EA311318)
  {
    sub_1C289F100(255, &qword_1EA3112F0, (void (*)(uint64_t))sub_1C289F6A4, (void (*)(void))sub_1C289F81C);
    sub_1C289F758(255, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    sub_1C289F934();
    sub_1C289F7D8(&qword_1EA311310, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    unint64_t v0 = sub_1C28CCFD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311318);
    }
  }
}

uint64_t sub_1C289FAC8()
{
  return sub_1C28A05B0(&qword_1EA311320, (void (*)(uint64_t))sub_1C289F9BC);
}

void sub_1C289FAFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C28CCEB0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C289FB6C()
{
  unint64_t result = qword_1EA311330;
  if (!qword_1EA311330)
  {
    sub_1C289FAFC(255, &qword_1EA311328, (void (*)(uint64_t))sub_1C289F9BC, (void (*)(void))sub_1C289FAC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311330);
  }
  return result;
}

uint64_t sub_1C289FBF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C289E248((uint64_t)(v1 + 2), v1[8], v1[9], v1[10], (uint64_t)sub_1C28A05F8, (uint64_t)&unk_1F1DE0808, (uint64_t)sub_1C28A0280, a1);
}

uint64_t sub_1C289FC4C()
{
  return swift_deallocObject();
}

uint64_t sub_1C289FC5C()
{
  return sub_1C289C6AC(*(void *)(v0 + 16));
}

void sub_1C289FC78()
{
  if (!qword_1EA311338)
  {
    sub_1C289F6A4();
    sub_1C289F758(255, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    sub_1C289F81C();
    sub_1C289F7D8(&qword_1EA311310, &qword_1EA311300, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    unint64_t v0 = sub_1C28CCFD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311338);
    }
  }
}

uint64_t sub_1C289FD54()
{
  return sub_1C28A05B0(&qword_1EA311340, (void (*)(uint64_t))sub_1C289FC78);
}

unint64_t sub_1C289FD88()
{
  unint64_t result = qword_1EA311350;
  if (!qword_1EA311350)
  {
    sub_1C289FAFC(255, &qword_1EA311348, (void (*)(uint64_t))sub_1C289FC78, (void (*)(void))sub_1C289FD54);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311350);
  }
  return result;
}

unint64_t sub_1C289FE10()
{
  unint64_t result = qword_1EA311358;
  if (!qword_1EA311358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311358);
  }
  return result;
}

unint64_t sub_1C289FE68()
{
  unint64_t result = qword_1EA311368;
  if (!qword_1EA311368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311368);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactStoreError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C289FF58);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactStoreError()
{
  return &type metadata for ContactStoreError;
}

unint64_t sub_1C289FF90()
{
  unint64_t result = qword_1EA311378;
  if (!qword_1EA311378)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA311378);
  }
  return result;
}

void sub_1C289FFF0()
{
  if (!qword_1EA311380)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76F80);
    sub_1C27CAE78(255, (unint64_t *)&qword_1EBB77150);
    unint64_t v0 = sub_1C28CE7D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311380);
    }
  }
}

void sub_1C28A0080()
{
  if (!qword_1EA311390)
  {
    sub_1C289FFF0();
    sub_1C28A0168(255, &qword_1EA310730, (uint64_t)&qword_1EBB76F80, 0x1E4F1B8F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D1C9C);
    sub_1C28A05B0(&qword_1EA3113A0, (void (*)(uint64_t))sub_1C289FFF0);
    sub_1C28A01C4();
    unint64_t v0 = sub_1C28CCF20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311390);
    }
  }
}

void sub_1C28A0168(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C28CD200();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C28A01C4()
{
  unint64_t result = qword_1EA3113A8;
  if (!qword_1EA3113A8)
  {
    sub_1C28A0168(255, &qword_1EA310730, (uint64_t)&qword_1EBB76F80, 0x1E4F1B8F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D1C9C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3113A8);
  }
  return result;
}

uint64_t sub_1C28A0248()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C28A0280@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C289E74C(a1, (void *)(v2 + 16), a2);
}

void sub_1C28A028C(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C289E600(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C28A02A8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C289DAD0(a1, (void *)(v2 + 16), a2);
}

void sub_1C28A02B4()
{
  if (!qword_1EA3113C8)
  {
    sub_1C289F098();
    sub_1C27CAE78(255, (unint64_t *)&qword_1EBB77150);
    unint64_t v0 = sub_1C28CE7D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3113C8);
    }
  }
}

void sub_1C28A0334()
{
  if (!qword_1EA3113D0)
  {
    sub_1C28A02B4();
    sub_1C28A0420(255, &qword_1EA3113D8, (uint64_t (*)(uint64_t))sub_1C289F098, MEMORY[0x1E4F1AC08]);
    sub_1C28A05B0(&qword_1EA3113E0, (void (*)(uint64_t))sub_1C28A02B4);
    sub_1C28A0484();
    unint64_t v0 = sub_1C28CCF20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3113D0);
    }
  }
}

void sub_1C28A0420(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C28A0484()
{
  unint64_t result = qword_1EA3113E8;
  if (!qword_1EA3113E8)
  {
    sub_1C28A0420(255, &qword_1EA3113D8, (uint64_t (*)(uint64_t))sub_1C289F098, MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3113E8);
  }
  return result;
}

id sub_1C28A050C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void **)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  unint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  id result = sub_1C289EB74((uint64_t)v8, v4, v5, v6, v7);
  *a2 = result;
  return result;
}

uint64_t sub_1C28A056C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C28A05A4(void **a1)
{
  return sub_1C289D2C8(a1, v1 + 16);
}

uint64_t sub_1C28A05B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C28A05F8(void *a1@<X0>, void *a2@<X8>)
{
}

id static AnalyticsTransforming.nilNumberValue.getter()
{
  id v0 = objc_allocWithZone(NSNumber);

  return objc_msgSend(v0, sel_initWithInteger_, -1);
}

id static AnalyticsTransforming.transformedValue(for:)(uint64_t a1, char a2)
{
  if (a2)
  {
    id v4 = objc_allocWithZone(NSNumber);
    uint64_t v5 = sel_initWithInteger_;
  }
  else
  {
    double v2 = *(double *)&a1 / 0.01;
    if (*(double *)&a1 / 0.01 > 100.0) {
      double v2 = 100.0;
    }
    double v3 = round(v2);
    id v4 = objc_allocWithZone(NSNumber);
    uint64_t v5 = sel_initWithDouble_;
    double v6 = v3;
  }
  return objc_msgSend(v4, v5, v6);
}

id static AnalyticsTransforming.bucketedValue(for:bucketWidth:)(double a1, double a2)
{
  double v2 = a1 / a2;
  if (v2 > 100.0) {
    double v2 = 100.0;
  }
  double v3 = round(v2);
  id v4 = objc_allocWithZone(NSNumber);

  return objc_msgSend(v4, sel_initWithDouble_, v3);
}

id static AnalyticsTransforming.transformedValue(for:bucketWidth:)(void *a1, double a2)
{
  if (a1)
  {
    id v3 = a1;
    objc_msgSend(v3, sel_doubleValue);
    double v5 = v4 / a2;
    if (v5 > 100.0) {
      double v5 = 100.0;
    }
    id v6 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, round(v5));

    return v6;
  }
  else
  {
    id v8 = objc_allocWithZone(NSNumber);
    return objc_msgSend(v8, sel_initWithInteger_, -1);
  }
}

id static AnalyticsTransforming.joinedTupleString(from:)(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C27D8968(0, v1, 0);
    uint64_t v3 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C28CD7C0();
      sub_1C28CD7C0();
      swift_bridgeObjectRelease();
      unint64_t v5 = *(void *)(v11 + 16);
      unint64_t v4 = *(void *)(v11 + 24);
      if (v5 >= v4 >> 1) {
        sub_1C27D8968(v4 > 1, v5 + 1, 1);
      }
      v3 += 16;
      *(void *)(v11 + 16) = v5 + 1;
      uint64_t v6 = v11 + 16 * v5;
      *(void *)(v6 + 32) = 40;
      *(void *)(v6 + 40) = 0xE100000000000000;
      --v1;
    }
    while (v1);
  }
  sub_1C27D6D04(0, (unint64_t *)&qword_1EBB76F58, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C283A290();
  sub_1C28CD690();
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone(NSString);
  id v8 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v7, sel_initWithString_, v8);

  return v9;
}

id static AnalyticsTransforming.numberOrNilSentinel(for:nilSentinel:)(uint64_t a1, char a2, uint64_t a3)
{
  if (a2) {
    a1 = a3;
  }
  id v4 = objc_allocWithZone(NSNumber);

  return objc_msgSend(v4, sel_initWithInteger_, a1);
}

uint64_t static AnalyticsTransforming.activeWatchProductTypeString()(uint64_t a1, uint64_t a2)
{
  return sub_1C28A0A20(a1, a2, (SEL *)&selRef_activePairedDeviceProductType);
}

uint64_t static AnalyticsTransforming.activeWatchBuildString()(uint64_t a1, uint64_t a2)
{
  return sub_1C28A0A20(a1, a2, (SEL *)&selRef_activePairedDeviceSystemBuildVersion);
}

uint64_t sub_1C28A0A20(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [self *a3];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1C28CD730();
    uint64_t v7 = v6;

    *((void *)&v11 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v10 = v5;
    *((void *)&v10 + 1) = v7;
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  uint64_t v8 = static AnalyticsTransforming.valueOrNilString(for:)((uint64_t)&v10);
  sub_1C27B9E38((uint64_t)&v10);
  return v8;
}

uint64_t static AnalyticsTransforming.addDeviceContextPayloadValuesToEvent(from:event:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  long long v10 = (char *)&v42 - v9;
  if (!a1)
  {
    sub_1C28CCDE0();
    id v23 = sub_1C28CCE00();
    os_log_type_t v24 = sub_1C28CDCB0();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v43 = v4;
      uint64_t v27 = v26;
      uint64_t v45 = v26;
      *(_DWORD *)os_log_type_t v25 = 136315138;
      uint64_t v28 = sub_1C28CE830();
      uint64_t v44 = sub_1C27D36AC(v28, v29, &v45);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v23, v24, "%s Error adding devicecounts to event: input dictionary was nil or not provided. ", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v27, -1, -1);
      MEMORY[0x1C87609B0](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v43);
LABEL_25:
      swift_unknownObjectRetain();
      return a2;
    }

    uint64_t v39 = *(void (**)(char *, uint64_t))(v5 + 8);
    char v40 = v8;
LABEL_24:
    v39(v40, v4);
    goto LABEL_25;
  }
  swift_getObjectType();
  uint64_t v11 = swift_conformsToProtocol2();
  if (v11) {
    uint64_t v12 = (void (**)(void, void, void))v11;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v11) {
    uint64_t v13 = a2;
  }
  else {
    uint64_t v13 = 0;
  }
  if (!v13)
  {
    sub_1C28CCDE0();
    swift_unknownObjectRetain_n();
    unint64_t v30 = sub_1C28CCE00();
    os_log_type_t v31 = sub_1C28CDCB0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v43 = v4;
      uint64_t v34 = v33;
      uint64_t v45 = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v35 = sub_1C28CE830();
      uint64_t v44 = sub_1C27D36AC(v35, v36, &v45);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v44 = a2;
      sub_1C28A1054();
      swift_unknownObjectRetain();
      uint64_t v37 = sub_1C28CD750();
      uint64_t v44 = sub_1C27D36AC(v37, v38, &v45);
      sub_1C28CDF90();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v30, v31, "%s Error adding device counts to event: %s - event was not of type DeviceCountAnalyticsProviding", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v34, -1, -1);
      MEMORY[0x1C87609B0](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v43);
      goto LABEL_25;
    }

    swift_unknownObjectRelease_n();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v5 + 8);
    char v40 = v10;
    goto LABEL_24;
  }
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F60);
  swift_unknownObjectRetain();
  os_log_type_t v14 = (void *)sub_1C28CDF10();
  uint64_t v15 = (uint64_t)sub_1C27D2D00(v14, a1);

  if (!v15) {
    uint64_t v15 = sub_1C28CDF10();
  }
  uint64_t ObjectType = swift_getObjectType();
  v12[2](v15, ObjectType, v12);
  uint64_t v17 = (void *)sub_1C28CDF10();
  uint64_t v18 = (uint64_t)sub_1C27D2D00(v17, a1);

  if (!v18) {
    uint64_t v18 = sub_1C28CDF10();
  }
  v12[5](v18, ObjectType, v12);
  id v19 = (void *)sub_1C28CDF10();
  uint64_t v20 = (uint64_t)sub_1C27D2D00(v19, a1);

  if (!v20) {
    uint64_t v20 = sub_1C28CDF10();
  }
  v12[8](v20, ObjectType, v12);
  id v21 = (void *)sub_1C28CDF10();
  uint64_t v22 = (uint64_t)sub_1C27D2D00(v21, a1);

  if (!v22) {
    uint64_t v22 = sub_1C28CDF10();
  }
  v12[11](v22, ObjectType, v12);
  return v13;
}

unint64_t sub_1C28A1054()
{
  unint64_t result = qword_1EA3113F8;
  if (!qword_1EA3113F8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA3113F8);
  }
  return result;
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPhone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPhone.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPhone.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedWatch.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedWatch.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedWatch.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPad.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPad.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPad.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedVisionPro.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedVisionPro.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedVisionPro.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

unint64_t sub_1C28A119C()
{
  return 0xD000000000000023;
}

unint64_t HealthSharingFeatureManager.Configuration.rawValue.getter()
{
  unint64_t result = 0x6C62697369567369;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000020;
      break;
    case 7:
      unint64_t result = 0xD000000000000017;
      break;
    case 8:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t HealthSharingFeatureManager.Configuration.userDefault.getter()
{
  return sub_1C28CC6A0();
}

HealthExperience::HealthSharingFeatureManager::Configuration_optional __swiftcall HealthSharingFeatureManager.Configuration.init(rawValue:)(Swift::String rawValue)
{
  double v2 = v1;
  unint64_t v3 = sub_1C28CE460();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *double v2 = v5;
  return result;
}

uint64_t sub_1C28A1508(unsigned __int8 *a1, char *a2)
{
  return sub_1C27F31B4(*a1, *a2);
}

uint64_t sub_1C28A1514()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28A155C()
{
  return sub_1C289AE88();
}

uint64_t sub_1C28A1564()
{
  return sub_1C28CE740();
}

HealthExperience::HealthSharingFeatureManager::Configuration_optional sub_1C28A15A8(Swift::String *a1)
{
  return HealthSharingFeatureManager.Configuration.init(rawValue:)(*a1);
}

unint64_t sub_1C28A15B4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = HealthSharingFeatureManager.Configuration.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void static HealthSharingFeatureManager.isFeatureFlagEnabled.getter()
{
  id v0 = objc_msgSend(self, sel_sharedBehavior);
  if (v0)
  {
    int64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_features);

    if (v2)
    {
      objc_msgSend(v2, sel_sharingPlus);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void static HealthSharingFeatureManager.isFeatureVisible(_:)(char *a1)
{
  sub_1C28A18A0();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *a1;
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_8:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_sharingPlus);

  if (v11)
  {
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_1C28CE120();
    swift_bridgeObjectRelease();
    sub_1C27D8FFC();
    sub_1C28CDD00();
    LOBYTE(v13[0]) = 0;
    sub_1C28CC6A0();
    sub_1C28CC680();
    uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
    v12(v6, v3);
    if (LOBYTE(v13[0]) == 1)
    {
      LOBYTE(v13[0]) = v7;
      sub_1C28A119C();
      sub_1C28CDD00();
      LOBYTE(v13[0]) = 0;
      sub_1C28CC6A0();
      sub_1C28CC680();
      v12(v6, v3);
    }
  }
}

void sub_1C28A18A0()
{
  if (!qword_1EBB74848)
  {
    unint64_t v0 = sub_1C28CC6B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74848);
    }
  }
}

unint64_t sub_1C28A18FC()
{
  unint64_t result = qword_1EA311400;
  if (!qword_1EA311400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311400);
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthSharingFeatureManager()
{
  return &type metadata for HealthSharingFeatureManager;
}

unsigned char *storeEnumTagSinglePayload for HealthSharingFeatureManager.Configuration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C28A1A2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthSharingFeatureManager.Configuration()
{
  return &type metadata for HealthSharingFeatureManager.Configuration;
}

uint64_t sub_1C28A1A68()
{
  uint64_t v1 = type metadata accessor for SharingEntryProfileInformation();
  MEMORY[0x1F4188790](v1);
  int v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C28CC450();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A6220(v0 + *(int *)(v1 + 40), (uint64_t)v6, (uint64_t (*)(void))sub_1C27BBE08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C28A2234((uint64_t)v6, (uint64_t (*)(void))sub_1C27BBE08);
    sub_1C28A6220(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SharingEntryProfileInformation);
    unsigned int v11 = &v3[*(int *)(v1 + 60)];
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_1C28A2234((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SharingEntryProfileInformation);
    if ((v13 & 1) != 0 || v12 <= 0)
    {
      if (qword_1EBB75700 != -1) {
        swift_once();
      }
      return sub_1C28CC200();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (qword_1EA30FCC8 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)qword_1EA31C2B8;
    id v16 = (void *)sub_1C28CC3F0();
    id v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

    uint64_t v14 = sub_1C28CD730();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v14;
}

uint64_t SyncStatusProviding.localizedSyncStatus.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C28CC450();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C28A2234((uint64_t)v10, (uint64_t (*)(void))sub_1C27BBE08);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
    sub_1C28A21DC();
    if (swift_dynamicCast())
    {
      uint64_t v15 = *((void *)&v26 + 1);
      uint64_t v16 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
      char v19 = v18;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
      if ((v19 & 1) == 0 && v17 > 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v27 = 0;
      long long v25 = 0u;
      long long v26 = 0u;
      sub_1C28A2234((uint64_t)&v25, (uint64_t (*)(void))sub_1C28A2294);
    }
    if (qword_1EBB75700 != -1) {
      swift_once();
    }
    return sub_1C28CC200();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    if (qword_1EA30FCC8 != -1) {
      swift_once();
    }
    id v21 = (void *)qword_1EA31C2B8;
    uint64_t v22 = (void *)sub_1C28CC3F0();
    id v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

    uint64_t v20 = sub_1C28CD730();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v20;
}

unint64_t sub_1C28A21DC()
{
  unint64_t result = qword_1EA311408;
  if (!qword_1EA311408)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA311408);
  }
  return result;
}

uint64_t sub_1C28A2234(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C28A2294(uint64_t a1)
{
}

uint64_t HKCloudSyncObserverStatus.lastPushOrPullDate.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  double v53 = a1;
  uint64_t v3 = sub_1C28CC450();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v55 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (char *)&v49 - v7;
  sub_1C27BBE08();
  uint64_t v52 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v54 = (uint64_t)&v49 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v49 - v16;
  MEMORY[0x1F4188790](v15);
  char v19 = (char *)&v49 - v18;
  sub_1C27D0B3C(0, &qword_1EA311418, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4FBBE00]);
  uint64_t v20 = *(void *)(v9 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C28D5110;
  uint64_t v51 = v22;
  uint64_t v56 = v22 + v21;
  id v23 = objc_msgSend(v2, sel_lastPushDate);
  if (v23)
  {
    os_log_type_t v24 = v23;
    sub_1C28CC430();

    long long v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v25(v19, 0, 1, v3);
  }
  else
  {
    long long v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v25(v19, 1, 1, v3);
  }
  uint64_t v26 = v4;
  sub_1C288179C((uint64_t)v19, v56);
  id v27 = objc_msgSend(v2, sel_lastPullDate);
  uint64_t v28 = v53;
  if (v27)
  {
    unint64_t v29 = v27;
    sub_1C28CC430();

    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = 1;
  }
  v25(v17, v30, 1, v3);
  uint64_t v31 = v56;
  uint64_t v32 = v56 + v20;
  sub_1C288179C((uint64_t)v17, v56 + v20);
  uint64_t v33 = v31;
  uint64_t v34 = v54;
  sub_1C28A6220(v33, v54, (uint64_t (*)(void))sub_1C27BBE08);
  sub_1C288179C(v34, (uint64_t)v12);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  unint64_t v36 = (void (**)(char *, char *, uint64_t))(v26 + 32);
  if (v35(v12, 1, v3) == 1)
  {
    sub_1C28A2234((uint64_t)v12, (uint64_t (*)(void))sub_1C27BBE08);
    uint64_t v37 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v49 = v26;
    unint64_t v38 = *v36;
    uint64_t v39 = v50;
    (*v36)(v50, v12, v3);
    v38(v55, v39, v3);
    uint64_t v37 = MEMORY[0x1E4FBC860];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v37 = sub_1C2801C88(0, *(void *)(v37 + 16) + 1, 1, v37);
    }
    unint64_t v41 = *(void *)(v37 + 16);
    unint64_t v40 = *(void *)(v37 + 24);
    if (v41 >= v40 >> 1) {
      uint64_t v37 = sub_1C2801C88(v40 > 1, v41 + 1, 1, v37);
    }
    *(void *)(v37 + 16) = v41 + 1;
    uint64_t v42 = v49;
    v38((char *)(v37+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v49 + 72) * v41), v55, v3);
    uint64_t v26 = v42;
    uint64_t v28 = v53;
  }
  uint64_t v43 = v54;
  sub_1C28A6220(v32, v54, (uint64_t (*)(void))sub_1C27BBE08);
  sub_1C288179C(v43, (uint64_t)v12);
  if (v35(v12, 1, v3) == 1)
  {
    sub_1C28A2234((uint64_t)v12, (uint64_t (*)(void))sub_1C27BBE08);
  }
  else
  {
    uint64_t v44 = *v36;
    uint64_t v45 = v50;
    (*v36)(v50, v12, v3);
    v44(v55, v45, v3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v37 = sub_1C2801C88(0, *(void *)(v37 + 16) + 1, 1, v37);
    }
    unint64_t v47 = *(void *)(v37 + 16);
    unint64_t v46 = *(void *)(v37 + 24);
    if (v47 >= v46 >> 1) {
      uint64_t v37 = sub_1C2801C88(v46 > 1, v47 + 1, 1, v37);
    }
    *(void *)(v37 + 16) = v47 + 1;
    v44((char *)(v37+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v47), v55, v3);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C28A41F0(v37, v28);
  return swift_bridgeObjectRelease();
}

id sub_1C28A28C0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  objc_msgSend(v0, sel_setTimeStyle_, 1);
  id result = objc_msgSend(v0, sel_setDoesRelativeDateFormatting_, 1);
  qword_1EA31C2B8 = (uint64_t)v0;
  return result;
}

uint64_t CloudSyncStatusProviding.showSyncActivity.getter(uint64_t a1, uint64_t a2)
{
  sub_1C28A479C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 32))(a1);
  if (v8)
  {
    char v13 = 0;
  }
  else
  {
    uint64_t v9 = v7;
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    uint64_t v10 = type metadata accessor for CloudSyncResponse();
    int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v6, 1, v10);
    uint64_t v12 = (uint64_t (*)(void))sub_1C28A479C;
    if (v11 == 1)
    {
      char v13 = 0;
    }
    else
    {
      char v13 = CloudSyncResponse.showSyncActivity(for:)(v9, 0);
      uint64_t v12 = (uint64_t (*)(void))type metadata accessor for CloudSyncResponse;
    }
    sub_1C28A2234((uint64_t)v6, v12);
  }
  return v13 & 1;
}

uint64_t CloudSyncResponse.showSyncActivity(for:)(uint64_t a1, char a2)
{
  uint64_t v57 = sub_1C28CC6F0();
  uint64_t v55 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v51 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A481C();
  uint64_t v53 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v56 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A4880(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v52 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = (char *)&v51 - v11;
  uint64_t v12 = type metadata accessor for CloudSyncResponse();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v58 = (uint64_t)&v51 - v17;
  MEMORY[0x1F4188790](v16);
  char v19 = (char *)&v51 - v18;
  uint64_t v20 = sub_1C28CC450();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  id v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    goto LABEL_23;
  }
  if ((unint64_t)(a1 - 2) < 2)
  {
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    id v27 = (void *)sub_1C28CD570();
    id v28 = objc_msgSend(v27, sel_dataUploadRequestStatus);

    sub_1C28A6220(v2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
    if (v28 == (id)3) {
      char v29 = v15[*(int *)(v12 + 24)] ^ 1;
    }
    else {
      char v29 = 0;
    }
    uint64_t v35 = (uint64_t (*)(void))type metadata accessor for CloudSyncResponse;
    uint64_t v36 = (uint64_t)v15;
    goto LABEL_12;
  }
  if (a1 != 1
    || (sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288),
        uint64_t v30 = (void *)sub_1C28CD570(),
        unsigned int v31 = objc_msgSend(v30, sel_syncEnabled),
        v30,
        !v31))
  {
LABEL_23:
    char v29 = 0;
    return v29 & 1;
  }
  uint64_t v32 = (void *)sub_1C28CD570();
  id v33 = objc_msgSend(v32, sel_restoreCompletionDate);

  if (v33)
  {
    sub_1C28CC430();

    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v23, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v26, 0, 1, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v26, 1, v20) != 1)
    {
      sub_1C28A2234((uint64_t)v26, (uint64_t (*)(void))sub_1C27BBE08);
      sub_1C28A6220(v2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
      sub_1C28A2234((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
      uint64_t v34 = v58;
      sub_1C28A6220(v2, v58, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v26, 1, 1, v20);
  }
  sub_1C28A2234((uint64_t)v26, (uint64_t (*)(void))sub_1C27BBE08);
  sub_1C28A6220(v2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
  char v37 = v19[*(int *)(v12 + 24)];
  sub_1C28A2234((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
  uint64_t v34 = v58;
  sub_1C28A6220(v2, v58, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
  if ((v37 & 1) == 0)
  {
    uint64_t v45 = (uint64_t (*)(void))type metadata accessor for CloudSyncResponse;
    uint64_t v46 = v34;
    goto LABEL_19;
  }
LABEL_15:
  uint64_t v38 = v34 + *(int *)(v12 + 20);
  uint64_t v40 = (uint64_t)v54;
  uint64_t v39 = v55;
  uint64_t v41 = v57;
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, *MEMORY[0x1E4F67120], v57);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v41);
  uint64_t v42 = v56;
  uint64_t v43 = v56 + *(int *)(v53 + 48);
  sub_1C28A6220(v38, v56, (uint64_t (*)(void))sub_1C28A4880);
  sub_1C28A6220(v40, v43, (uint64_t (*)(void))sub_1C28A4880);
  uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v44(v42, 1, v41) == 1)
  {
    sub_1C28A2234(v40, (uint64_t (*)(void))sub_1C28A4880);
    sub_1C28A2234(v34, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
    if (v44(v43, 1, v41) == 1)
    {
      uint64_t v45 = (uint64_t (*)(void))sub_1C28A4880;
      uint64_t v46 = v42;
LABEL_19:
      sub_1C28A2234(v46, v45);
      char v29 = 1;
      return v29 & 1;
    }
    goto LABEL_22;
  }
  uint64_t v47 = v52;
  sub_1C28A6220(v42, v52, (uint64_t (*)(void))sub_1C28A4880);
  if (v44(v43, 1, v41) == 1)
  {
    sub_1C28A2234(v40, (uint64_t (*)(void))sub_1C28A4880);
    sub_1C28A2234(v34, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v47, v41);
LABEL_22:
    sub_1C28A2234(v42, (uint64_t (*)(void))sub_1C28A481C);
    goto LABEL_23;
  }
  uint64_t v49 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v51, v43, v41);
  sub_1C28A6288(&qword_1EA311428, MEMORY[0x1E4F67128]);
  char v29 = sub_1C28CD6E0();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v39 + 8);
  v50(v49, v41);
  sub_1C28A2234(v40, (uint64_t (*)(void))sub_1C28A4880);
  sub_1C28A2234(v34, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
  v50((char *)v47, v41);
  uint64_t v36 = v42;
  uint64_t v35 = (uint64_t (*)(void))sub_1C28A4880;
LABEL_12:
  sub_1C28A2234(v36, v35);
  return v29 & 1;
}

uint64_t CloudSyncResponse.observerStatus.getter()
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);

  return sub_1C28CD570();
}

uint64_t CloudSyncResponse.observerStatus.setter()
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);

  return sub_1C28CD580();
}

void (*CloudSyncResponse.observerStatus.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  v2[4] = sub_1C28CD560();
  return sub_1C282CB98;
}

uint64_t CloudSyncResponse.activeSyncState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CloudSyncResponse();
  return sub_1C28A6220(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))sub_1C28A4880);
}

uint64_t CloudSyncResponse.activeSyncState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CloudSyncResponse() + 20);

  return sub_1C28A48B4(a1, v3);
}

uint64_t (*CloudSyncResponse.activeSyncState.modify())(void)
{
  return nullsub_1;
}

uint64_t CloudSyncResponse.timedOut.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudSyncResponse() + 24));
}

uint64_t CloudSyncResponse.timedOut.setter(char a1)
{
  uint64_t result = type metadata accessor for CloudSyncResponse();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*CloudSyncResponse.timedOut.modify())(void)
{
  return nullsub_1;
}

uint64_t CloudSyncResponse.init(_:activeSyncState:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CloudSyncResponse();
  uint64_t v5 = a2 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1C28CC6F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(unsigned char *)(a2 + *(int *)(v4 + 24)) = 0;
  sub_1C27D1C9C(0, &qword_1EBB77288);
  sub_1C28CD5B0();

  return sub_1C28A48B4(a1, v5);
}

BOOL HKCloudSyncObserverStatus.isDataUploadRequestOngoing.getter()
{
  return objc_msgSend(v0, sel_dataUploadRequestStatus) == (id)3;
}

uint64_t CloudSyncResponse.hash(into:)()
{
  uint64_t v1 = sub_1C28CC6F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A4880(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  sub_1C28A4918();
  sub_1C28CD680();
  uint64_t v8 = type metadata accessor for CloudSyncResponse();
  sub_1C28A6220(v0 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t (*)(void))sub_1C28A4880);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1C28CE720();
    sub_1C28A6288(&qword_1EA311440, MEMORY[0x1E4F67128]);
    sub_1C28CD680();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1C28CE720();
}

uint64_t sub_1C28A38DC()
{
  uint64_t v1 = 0x7953657669746361;
  if (*v0 != 1) {
    uint64_t v1 = 0x74754F64656D6974;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726576726573626FLL;
  }
}

uint64_t sub_1C28A3950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28A6080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28A3978(uint64_t a1)
{
  unint64_t v2 = sub_1C28A4EBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28A39B4(uint64_t a1)
{
  unint64_t v2 = sub_1C28A4EBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CloudSyncResponse.encode(to:)(void *a1)
{
  sub_1C28A4F10(0, &qword_1EBB75750, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28A4EBC();
  sub_1C28CE800();
  v9[15] = 0;
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  sub_1C28A4F74(&qword_1EBB74C68);
  sub_1C28CE5E0();
  if (!v1)
  {
    type metadata accessor for CloudSyncResponse();
    v9[14] = 1;
    sub_1C28CC6F0();
    sub_1C28A6288(&qword_1EBB75810, MEMORY[0x1E4F67128]);
    sub_1C28CE590();
    v9[13] = 2;
    sub_1C28CE5B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CloudSyncResponse.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t CloudSyncResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  sub_1C28A4880(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  uint64_t v34 = v6;
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v33 = (char *)&v28 - v7;
  sub_1C28A4F10(0, &qword_1EBB76800, MEMORY[0x1E4FBBDC0]);
  uint64_t v35 = v8;
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for CloudSyncResponse();
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 28)];
  uint64_t v16 = sub_1C28CC6F0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v36 = v15;
  v17(v15, 1, 1, v16);
  uint64_t v18 = *(int *)(v12 + 32);
  v14[v18] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28A4EBC();
  char v19 = v37;
  sub_1C28CE7F0();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t v26 = (uint64_t (*)(void))sub_1C28A4880;
    uint64_t v27 = v36;
  }
  else
  {
    uint64_t v29 = v18;
    char v37 = v5;
    uint64_t v20 = v32;
    char v40 = 0;
    sub_1C28A4F74(&qword_1EBB75EE0);
    uint64_t v21 = v33;
    sub_1C28CE520();
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v14, v21, v34);
    char v39 = 1;
    sub_1C28A6288(&qword_1EBB75808, MEMORY[0x1E4F67128]);
    uint64_t v23 = (uint64_t)v37;
    sub_1C28CE4D0();
    sub_1C28A48B4(v23, v36);
    char v38 = 2;
    char v24 = sub_1C28CE4F0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v35);
    uint64_t v25 = v30;
    v14[v29] = v24 & 1;
    sub_1C28A6220((uint64_t)v14, v25, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    uint64_t v26 = (uint64_t (*)(void))type metadata accessor for CloudSyncResponse;
    uint64_t v27 = (uint64_t)v14;
  }
  return sub_1C28A2234(v27, v26);
}

uint64_t sub_1C28A413C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CloudSyncResponse.init(from:)(a1, a2);
}

uint64_t sub_1C28A4154(void *a1)
{
  return CloudSyncResponse.encode(to:)(a1);
}

uint64_t sub_1C28A416C()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28A41B0()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28A41F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1C27BBE08();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_1C28CC450();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  char v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    char v19 = v38;
LABEL_5:
    sub_1C28A2234((uint64_t)v9, (uint64_t (*)(void))sub_1C27BBE08);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  uint64_t v30 = a2;
  id v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    char v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_1C28A6288(&qword_1EBB75860, MEMORY[0x1E4F27928]);
      char v27 = sub_1C28CD6B0();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1C28A2234((uint64_t)v7, (uint64_t (*)(void))sub_1C27BBE08);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_1C28A4628(uint64_t a1)
{
  uint64_t v3 = v1;
  sub_1C28A479C(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v7 = (void *)sub_1C28CD570();
  id v8 = objc_msgSend(v7, sel_type);

  sub_1C28A6220(v3 + *(int *)(a1 + 48), (uint64_t)v6, (uint64_t (*)(void))sub_1C28A479C);
  uint64_t v9 = type metadata accessor for CloudSyncResponse();
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9);
  uint64_t v11 = (uint64_t (*)(void))sub_1C28A479C;
  if (v10 == 1)
  {
    char v12 = 0;
  }
  else
  {
    char v12 = CloudSyncResponse.showSyncActivity(for:)((uint64_t)v8, 0);
    uint64_t v11 = (uint64_t (*)(void))type metadata accessor for CloudSyncResponse;
  }
  sub_1C28A2234((uint64_t)v6, v11);
  return v12 & 1;
}

void sub_1C28A479C(uint64_t a1)
{
}

uint64_t type metadata accessor for CloudSyncResponse()
{
  uint64_t result = qword_1EBB75A30;
  if (!qword_1EBB75A30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C28A481C()
{
  if (!qword_1EA311420)
  {
    sub_1C28A4880(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA311420);
    }
  }
}

void sub_1C28A4880(uint64_t a1)
{
}

uint64_t sub_1C28A48B4(uint64_t a1, uint64_t a2)
{
  sub_1C28A4880(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C28A4918()
{
  unint64_t result = qword_1EA311430;
  if (!qword_1EA311430)
  {
    sub_1C27CBEB0(255, &qword_1EBB75EE8, &qword_1EBB77288);
    sub_1C28A49BC(&qword_1EA311438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311430);
  }
  return result;
}

uint64_t sub_1C28A49BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27D1C9C(255, &qword_1EBB77288);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16HealthExperience17CloudSyncResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC6F0();
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A481C();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  int v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A4880(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v31 - v16;
  MEMORY[0x1F4188790](v15);
  char v19 = (char *)&v31 - v18;
  sub_1C27D1C9C(0, &qword_1EBB77288);
  sub_1C28A49BC(&qword_1EA311458);
  if ((sub_1C28CD590() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v32 = v6;
  uint64_t v20 = type metadata accessor for CloudSyncResponse();
  uint64_t v21 = *(int *)(v20 + 20);
  uint64_t v34 = a1;
  sub_1C28A6220(a1 + v21, (uint64_t)v19, (uint64_t (*)(void))sub_1C28A4880);
  uint64_t v33 = v20;
  uint64_t v22 = *(int *)(v20 + 20);
  uint64_t v35 = a2;
  sub_1C28A6220(a2 + v22, (uint64_t)v17, (uint64_t (*)(void))sub_1C28A4880);
  uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1C28A6220((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(void))sub_1C28A4880);
  sub_1C28A6220((uint64_t)v17, v23, (uint64_t (*)(void))sub_1C28A4880);
  uint64_t v24 = v36;
  unint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v25((uint64_t)v10, 1, v4) == 1)
  {
    sub_1C28A2234((uint64_t)v17, (uint64_t (*)(void))sub_1C28A4880);
    sub_1C28A2234((uint64_t)v19, (uint64_t (*)(void))sub_1C28A4880);
    if (v25(v23, 1, v4) == 1)
    {
      sub_1C28A2234((uint64_t)v10, (uint64_t (*)(void))sub_1C28A4880);
LABEL_11:
      char v26 = *(unsigned char *)(v34 + *(int *)(v33 + 24)) ^ *(unsigned char *)(v35 + *(int *)(v33 + 24)) ^ 1;
      return v26 & 1;
    }
    goto LABEL_7;
  }
  sub_1C28A6220((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))sub_1C28A4880);
  if (v25(v23, 1, v4) == 1)
  {
    sub_1C28A2234((uint64_t)v17, (uint64_t (*)(void))sub_1C28A4880);
    sub_1C28A2234((uint64_t)v19, (uint64_t (*)(void))sub_1C28A4880);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v4);
LABEL_7:
    sub_1C28A2234((uint64_t)v10, (uint64_t (*)(void))sub_1C28A481C);
    goto LABEL_8;
  }
  uint64_t v28 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v32, v23, v4);
  sub_1C28A6288(&qword_1EA311428, MEMORY[0x1E4F67128]);
  char v29 = sub_1C28CD6E0();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  v30(v28, v4);
  sub_1C28A2234((uint64_t)v17, (uint64_t (*)(void))sub_1C28A4880);
  sub_1C28A2234((uint64_t)v19, (uint64_t (*)(void))sub_1C28A4880);
  v30(v14, v4);
  sub_1C28A2234((uint64_t)v10, (uint64_t (*)(void))sub_1C28A4880);
  if (v29) {
    goto LABEL_11;
  }
LABEL_8:
  char v26 = 0;
  return v26 & 1;
}

unint64_t sub_1C28A4EBC()
{
  unint64_t result = qword_1EBB761D0;
  if (!qword_1EBB761D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761D0);
  }
  return result;
}

void sub_1C28A4F10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C28A4EBC();
    unint64_t v7 = a3(a1, &type metadata for CloudSyncResponse.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C28A4F74(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27CBEB0(255, &qword_1EBB75EE8, &qword_1EBB77288);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C28A4FD0()
{
  return sub_1C28A6288(&qword_1EA311448, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
}

uint64_t sub_1C28A5018@<X0>(uint64_t *a1@<X8>)
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  uint64_t result = sub_1C28CD570();
  *a1 = result;
  return result;
}

uint64_t sub_1C28A5064(void **a1)
{
  uint64_t v1 = *a1;
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  id v2 = v1;
  return sub_1C28CD580();
}

uint64_t dispatch thunk of AuthorizationTopicsNumberProviding.numTopicsSharing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SyncStatusProviding.dateUpdated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SyncStatusProviding.localizedSyncStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SyncStatusProviding.showSyncActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SyncStatusProviding.profileType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CloudSyncStatusProviding.cloudSyncResponse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void *initializeBufferWithCopyOfBuffer for CloudSyncResponse(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C28CC6F0();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1C28A4880(0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for CloudSyncResponse(uint64_t a1, uint64_t a2)
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1C28CC6F0();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t initializeWithCopy for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C28CC6F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C28A4880(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C28CC6F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C28A4880(0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C28CC6F0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C28A4880(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C28CC6F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C28A4880(0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C28A5B14);
}

uint64_t sub_1C28A5B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    sub_1C28A4880(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C28A5C64);
}

void sub_1C28A5C64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_1C28A4880(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

void sub_1C28A5D8C()
{
  sub_1C27CBEB0(319, &qword_1EBB75EE8, &qword_1EBB77288);
  if (v0 <= 0x3F)
  {
    sub_1C28A4880(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CloudSyncResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C28A5F40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncResponse.CodingKeys()
{
  return &type metadata for CloudSyncResponse.CodingKeys;
}

unint64_t sub_1C28A5F7C()
{
  unint64_t result = qword_1EA311450;
  if (!qword_1EA311450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311450);
  }
  return result;
}

unint64_t sub_1C28A5FD4()
{
  unint64_t result = qword_1EBB761E0;
  if (!qword_1EBB761E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761E0);
  }
  return result;
}

unint64_t sub_1C28A602C()
{
  unint64_t result = qword_1EBB761D8;
  if (!qword_1EBB761D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761D8);
  }
  return result;
}

uint64_t sub_1C28A6080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726576726573626FLL && a2 == 0xEE00737574617453;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7953657669746361 && a2 == 0xEF6574617453636ELL || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74754F64656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C28A6220(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C28A6288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C28A62D0(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  sub_1C28A8730(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1C28CC450();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1C281B8AC(a1);
    sub_1C28A8560(a2, (uint64_t)v8);
    uint64_t v13 = sub_1C28CC4B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1C281B8AC((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1C2874810((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *int v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C28CC4B0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1C28A6514()
{
  sub_1C2806C3C(MEMORY[0x1E4FBC860]);
  sub_1C28A8730(0, &qword_1EA311468, (uint64_t (*)(uint64_t))sub_1C28A8794, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  uint64_t result = sub_1C28CCB40();
  qword_1EA311460 = result;
  return result;
}

void *ProfileSyncHandler.__allocating_init(healthStore:)(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AD28]), sel_initWithHealthStore_, a1);
  type metadata accessor for ProfileSyncHandler();
  uint64_t result = (void *)swift_allocObject();
  uint64_t v4 = MEMORY[0x1E4FBC870];
  result[3] = v2;
  result[4] = v4;
  result[2] = a1;
  return result;
}

uint64_t type metadata accessor for ProfileSyncHandler()
{
  return self;
}

uint64_t sub_1C28A6624()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C28CDED0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_defaultCenter);
  sub_1C28CDEE0();

  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v1;
  sub_1C27CD510(&qword_1EBB76DC0, MEMORY[0x1E4F27FC8]);
  sub_1C28CD440();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  sub_1C28CD0D0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C28A6834()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C28A686C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C28CC450();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = ((char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1C28CCE10();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2 + 16;
  sub_1C28CCDF0();
  uint64_t v14 = sub_1C28CCE00();
  os_log_type_t v15 = sub_1C28CDCD0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v27 = v5;
    uint64_t v16 = swift_slowAlloc();
    v25[0] = v9;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = a3;
    uint64_t v20 = v18;
    uint64_t v28 = v18;
    uint64_t v29 = v19;
    v25[1] = v13;
    char v26 = v8;
    *(_DWORD *)uint64_t v17 = 136446210;
    swift_getMetatypeMetadata();
    uint64_t v21 = sub_1C28CD750();
    uint64_t v29 = sub_1C27D36AC(v21, v22, &v28);
    uint64_t v8 = v26;
    sub_1C28CDF90();
    uint64_t v5 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v14, v15, "[%{public}s]: application foregrounded, triggering sync if needed", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v20, -1, -1);
    MEMORY[0x1C87609B0](v17, -1, -1);

    (*(void (**)(char *, void))(v10 + 8))(v12, v25[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C28CC440();
    char v24 = sub_1C28A6CB4(v8);
    (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v8, v5);
    if (v24) {
      sub_1C28A77C0(0, 0);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C28A6B68()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28A6BA0(uint64_t a1)
{
  return sub_1C28A686C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C28A6BA8(void (*a1)(void), uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = ((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C28CC440();
  char v8 = sub_1C28A6CB4(v7);
  (*(void (**)(NSObject *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    sub_1C28A77C0((uint64_t)a1, a2);
  }
  else if (a1)
  {
    a1(0);
  }
}

uint64_t sub_1C28A6CB4(NSObject *a1)
{
  uint64_t v2 = v1;
  os_log_t v69 = a1;
  uint64_t v67 = *v1;
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  long long v70 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v68 = &v63[-v6];
  sub_1C28A8730(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v63[-v8];
  uint64_t v10 = sub_1C28CC4B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v63[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1C28CC450();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  int v65 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v71 = &v63[-v18];
  if (qword_1EA30FCD0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  uint64_t v19 = v75;
  id v66 = (id)v2[2];
  id v20 = objc_msgSend(v66, sel_profileIdentifier);
  id v21 = objc_msgSend(v20, sel_identifier);

  sub_1C28CC490();
  if (*(void *)(v19 + 16) && (unint64_t v22 = sub_1C27C75A0((uint64_t)v13), (v23 & 1) != 0))
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v15 + 16))(v9, *(void *)(v19 + 56) + *(void *)(v15 + 72) * v22, v14);
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v9, v24, 1, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
  {
    sub_1C281B8AC((uint64_t)v9);
    unint64_t v25 = v70;
    sub_1C28CCDF0();
    swift_retain_n();
    char v26 = sub_1C28CCE00();
    os_log_type_t v27 = sub_1C28CDCD0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v71 = (unsigned char *)swift_slowAlloc();
      uint64_t v74 = v71;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v75 = v67;
      swift_getMetatypeMetadata();
      uint64_t v29 = sub_1C28CD750();
      uint64_t v75 = sub_1C27D36AC(v29, v30, (uint64_t *)&v74);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      os_log_t v69 = (os_log_t)(v28 + 14);
      id v31 = objc_msgSend(v66, sel_profileIdentifier);
      id v32 = objc_msgSend(v31, sel_description);
      uint64_t v33 = sub_1C28CD730();
      unint64_t v35 = v34;

      uint64_t v75 = sub_1C27D36AC(v33, v35, (uint64_t *)&v74);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v26, v27, "[%{public}s]: Last sync date is nil for profile %s.", (uint8_t *)v28, 0x16u);
      uint64_t v36 = v71;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v36, -1, -1);
      MEMORY[0x1C87609B0](v28, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v25, v73);
    return 1;
  }
  uint64_t v37 = v71;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v71, v9, v14);
  sub_1C28CC410();
  double v39 = v38;
  sub_1C28CC410();
  if (v39 - v40 > 120.0)
  {
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v37, v14);
    return 1;
  }
  uint64_t v42 = v68;
  sub_1C28CCDF0();
  uint64_t v43 = v65;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(v65, v37, v14);
  swift_retain_n();
  uint64_t v44 = sub_1C28CCE00();
  os_log_type_t v45 = sub_1C28CDCD0();
  int v46 = v45;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v47 = swift_slowAlloc();
    os_log_t v69 = v44;
    uint64_t v48 = v47;
    long long v70 = (unsigned char *)swift_slowAlloc();
    uint64_t v74 = v70;
    *(_DWORD *)uint64_t v48 = 136446722;
    int v64 = v46;
    uint64_t v75 = v67;
    swift_getMetatypeMetadata();
    uint64_t v49 = sub_1C28CD750();
    uint64_t v75 = sub_1C27D36AC(v49, v50, (uint64_t *)&v74);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    uint64_t v67 = v48 + 14;
    id v51 = objc_msgSend(v66, sel_profileIdentifier);
    id v52 = objc_msgSend(v51, sel_description);
    uint64_t v53 = v43;
    uint64_t v54 = sub_1C28CD730();
    unint64_t v56 = v55;

    uint64_t v75 = sub_1C27D36AC(v54, v56, (uint64_t *)&v74);
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 22) = 2082;
    sub_1C27CD510(&qword_1EBB757F0, MEMORY[0x1E4F27928]);
    uint64_t v57 = sub_1C28CE610();
    uint64_t v75 = sub_1C27D36AC(v57, v58, (uint64_t *)&v74);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
    v59(v53, v14);
    os_log_t v60 = v69;
    _os_log_impl(&dword_1C27B7000, v69, (os_log_type_t)v64, "[%{public}s]: The threshold for syncing profile %s has not been met. Last sync date: %{public}s", (uint8_t *)v48, 0x20u);
    uint64_t v61 = v70;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v61, -1, -1);
    MEMORY[0x1C87609B0](v48, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v68, v73);
    v59(v71, v14);
  }
  else
  {

    uint64_t v62 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
    v62(v43, v14);
    swift_release_n();
    (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v42, v73);
    v62(v37, v14);
  }
  return 0;
}

uint64_t sub_1C28A7604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C28A8730(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = sub_1C28CC4B0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(*(id *)(a2 + 16), sel_profileIdentifier);
  id v12 = objc_msgSend(v11, sel_identifier);

  sub_1C28CC490();
  uint64_t v13 = sub_1C28CC450();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, a3, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
  return sub_1C28A62D0((uint64_t)v7, (uint64_t)v10);
}

void sub_1C28A77C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1C28CCE10();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCDF0();
  swift_retain_n();
  id v11 = sub_1C28CCE00();
  os_log_type_t v12 = sub_1C28CDCD0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v32 = v13;
    uint64_t v15 = v14;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v36 = v31;
    uint64_t aBlock = v6;
    *(_DWORD *)uint64_t v15 = 136446466;
    uint64_t v34 = v8;
    swift_getMetatypeMetadata();
    uint64_t v33 = v7;
    uint64_t v16 = sub_1C28CD750();
    uint64_t v35 = a2;
    uint64_t aBlock = sub_1C27D36AC(v16, v17, &v36);
    v30[1] = v38;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v30[0] = v15 + 14;
    id v18 = objc_msgSend((id)v3[2], sel_profileIdentifier, v15 + 14);
    uint64_t v19 = v6;
    uint64_t v20 = a1;
    id v21 = objc_msgSend(v18, sel_description);
    uint64_t v22 = sub_1C28CD730();
    unint64_t v24 = v23;

    a2 = v35;
    a1 = v20;
    uint64_t v6 = v19;
    uint64_t aBlock = sub_1C27D36AC(v22, v24, &v36);
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v11, (os_log_type_t)v32, "[%{public}s]: Requesting data refresh for profile: %s.", (uint8_t *)v15, 0x16u);
    uint64_t v25 = v31;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v25, -1, -1);
    MEMORY[0x1C87609B0](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v33);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  char v26 = (void *)v3[3];
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v28[2] = v27;
  v28[3] = a1;
  v28[4] = a2;
  v28[5] = v6;
  v38[3] = sub_1C28A854C;
  v38[4] = v28;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  v38[0] = 1107296256;
  v38[1] = sub_1C289A718;
  _OWORD v38[2] = &block_descriptor_19;
  uint64_t v29 = _Block_copy(&aBlock);
  sub_1C27C4380(a1);
  swift_release();
  objc_msgSend(v26, sel_requestDataRefreshWithCompletion_, v29);
  _Block_release(v29);
}

uint64_t sub_1C28A7B98(int a1, void *a2, uint64_t a3, void (*a4)(unint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v70 = a5;
  uint64_t v71 = a4;
  LODWORD(v8) = a1;
  uint64_t v9 = sub_1C28CC450();
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1C28CCE10();
  uint64_t v12 = *(void *)(v72 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v72);
  uint64_t v15 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  id v18 = (char *)v63 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v63 - v19;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = Strong;
    if (v8)
    {
      sub_1C28CCDF0();
      swift_retain_n();
      unint64_t v23 = sub_1C28CCE00();
      os_log_type_t v24 = sub_1C28CDCD0();
      int v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v26 = swift_slowAlloc();
        LODWORD(v66) = v25;
        uint64_t v27 = v26;
        uint64_t v65 = swift_slowAlloc();
        uint64_t v73 = v65;
        *(_DWORD *)uint64_t v27 = 136446466;
        uint64_t v74 = a6;
        swift_getMetatypeMetadata();
        uint64_t v28 = sub_1C28CD750();
        uint64_t v67 = v12;
        uint64_t v74 = sub_1C27D36AC(v28, v29, &v73);
        int v64 = &v75;
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2080;
        v63[1] = v27 + 14;
        id v30 = objc_msgSend(*(id *)(v22 + 16), sel_profileIdentifier);
        id v31 = objc_msgSend(v30, sel_description);
        uint64_t v32 = sub_1C28CD730();
        unint64_t v34 = v33;

        uint64_t v74 = sub_1C27D36AC(v32, v34, &v73);
        sub_1C28CDF90();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C27B7000, v23, (os_log_type_t)v66, "[%{public}s]: Data refresh for profile: %s, completed with success", (uint8_t *)v27, 0x16u);
        uint64_t v35 = v65;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v35, -1, -1);
        MEMORY[0x1C87609B0](v27, -1, -1);

        (*(void (**)(char *, uint64_t))(v67 + 8))(v15, v72);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v72);
      }
      uint64_t v61 = sub_1C28CC440();
      if (qword_1EA30FCD0 != -1) {
        uint64_t v61 = swift_once();
      }
      MEMORY[0x1F4188790](v61);
      v63[-2] = v22;
      v63[-1] = v11;
      swift_retain();
      sub_1C28CCB20();
      swift_release();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v11, v69);
    }
    else
    {
      sub_1C28CCDF0();
      swift_retain();
      id v43 = a2;
      swift_retain();
      id v44 = a2;
      os_log_type_t v45 = sub_1C28CCE00();
      os_log_type_t v46 = sub_1C28CDCB0();
      int v47 = v46;
      if (!os_log_type_enabled(v45, v46))
      {
        swift_release_n();

        (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v72);
        uint64_t v62 = v71;
        if (!v71) {
          return swift_release();
        }
        goto LABEL_16;
      }
      uint64_t v48 = swift_slowAlloc();
      os_log_t v66 = v45;
      uint64_t v49 = v48;
      uint64_t v68 = swift_slowAlloc();
      uint64_t v73 = v68;
      *(_DWORD *)uint64_t v49 = 136446722;
      LODWORD(v69) = v8;
      uint64_t v74 = a6;
      swift_getMetatypeMetadata();
      uint64_t v67 = v12;
      uint64_t v50 = sub_1C28CD750();
      uint64_t v74 = sub_1C27D36AC(v50, v51, &v73);
      LODWORD(v65) = v47;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      int v64 = (uint64_t *)(v49 + 14);
      id v52 = objc_msgSend(*(id *)(v22 + 16), sel_profileIdentifier);
      id v53 = objc_msgSend(v52, sel_description);
      uint64_t v54 = sub_1C28CD730();
      unint64_t v8 = v55;

      uint64_t v74 = sub_1C27D36AC(v54, v8, &v73);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2080;
      uint64_t v74 = (uint64_t)a2;
      id v56 = a2;
      sub_1C28A8730(0, &qword_1EBB77158, (uint64_t (*)(uint64_t))sub_1C27C7060, MEMORY[0x1E4FBB718]);
      uint64_t v57 = sub_1C28CD750();
      uint64_t v74 = sub_1C27D36AC(v57, v58, &v73);
      sub_1C28CDF90();
      LOBYTE(v8) = v69;
      swift_bridgeObjectRelease();

      os_log_t v59 = v66;
      _os_log_impl(&dword_1C27B7000, v66, (os_log_type_t)v65, "[%{public}s]: Data refresh for profile: %s, completed with error: %s", (uint8_t *)v49, 0x20u);
      uint64_t v60 = v68;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v60, -1, -1);
      MEMORY[0x1C87609B0](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v18, v72);
    }
    uint64_t v62 = v71;
    if (!v71) {
      return swift_release();
    }
LABEL_16:
    v62(v8 & 1);
    return swift_release();
  }
  sub_1C28CCDF0();
  uint64_t v36 = sub_1C28CCE00();
  os_log_type_t v37 = sub_1C28CDCB0();
  if (os_log_type_enabled(v36, v37))
  {
    double v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v73 = v39;
    *(_DWORD *)double v38 = 136446210;
    uint64_t v74 = a6;
    swift_getMetatypeMetadata();
    uint64_t v40 = sub_1C28CD750();
    uint64_t v74 = sub_1C27D36AC(v40, v41, &v73);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v36, v37, "[%{public}s]: We've been deallocated.", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v39, -1, -1);
    MEMORY[0x1C87609B0](v38, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v72);
}

uint64_t ProfileSyncHandler.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProfileSyncHandler.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t method lookup function for ProfileSyncHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProfileSyncHandler);
}

uint64_t dispatch thunk of ProfileSyncHandler.beginListeningForAppForegrounding()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ProfileSyncHandler.triggerSyncIfNeeded(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_1C28A8504()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1C28A854C(int a1, void *a2)
{
  return sub_1C28A7B98(a1, a2, *(void *)(v2 + 16), *(void (**)(unint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C28A8558(uint64_t a1)
{
  return sub_1C28A7604(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C28A8560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C27C75A0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C28768F0();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1C28CC4B0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_1C28CC450();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_1C28BE07C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1C28CC450();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

void sub_1C28A8730(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C28A8794()
{
  if (!qword_1EA311470)
  {
    sub_1C28CC4B0();
    sub_1C28CC450();
    sub_1C27CD510(&qword_1EBB77070, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C28CD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311470);
    }
  }
}

uint64_t FeatureStatusAdvertisableFeatureSourceProviding.queue_performPrerequisiteWorkIfNecessaryForStagedDeliveryFeature(_:logger:completion:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a5;
  uint64_t v33 = a6;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v28 = a2;
  id v31 = a1;
  uint64_t v7 = *(void *)(a5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C28CCE10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(&a1[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider], *(void *)&a1[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider + 24]);
  id v32 = (id)sub_1C28CCC00();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v28, v9);
  uint64_t v13 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v29);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + v15 + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v33;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v14, v12, v9);
  uint64_t v20 = (void *)(v18 + v15);
  uint64_t v21 = v35;
  *uint64_t v20 = v34;
  v20[1] = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v27, v13);
  uint64_t v22 = v31;
  *(void *)(v18 + v17) = v31;
  aBlock[4] = sub_1C28A9964;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C27BCB7C;
  aBlock[3] = &block_descriptor_20;
  unint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  id v24 = v22;
  swift_release();
  objc_msgSend(v32, sel_isCurrentOnboardingVersionCompletedWithCompletion_, v23);
  _Block_release(v23);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C28A8B38(void *a1, char *a2, uint64_t a3, void (*a4)(char **), uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, char *, uint64_t), uint64_t a9)
{
  uint64_t v96 = a7;
  uint64_t v105 = a4;
  uint64_t v106 = a5;
  uint64_t v115 = *MEMORY[0x1E4F143B8];
  uint64_t v103 = *((void *)a8 - 1);
  uint64_t v104 = a8;
  MEMORY[0x1F4188790](a1);
  uint64_t v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1C28CCAC0();
  uint64_t v95 = *(void *)(v98 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v98);
  uint64_t v97 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v92 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v102 = (char *)&v92 - v19;
  uint64_t v94 = sub_1C28CC450();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C28CCAF0();
  uint64_t v101 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v100 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A9FDC();
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v92 = v21;
    uint64_t v27 = a6;
    id v99 = a1;
    if (objc_msgSend(v99, sel_BOOLValue))
    {
      uint64_t v28 = v103;
      uint64_t v29 = v104;
      (*(void (**)(char *, uint64_t, void))(v103 + 16))(v13, v27, v104);
      uint64_t v30 = sub_1C28CCE00();
      os_log_type_t v31 = sub_1C28CDCD0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        uint64_t v102 = (char *)swift_slowAlloc();
        uint64_t aBlock = v102;
        *(_DWORD *)uint64_t v32 = 136446466;
        uint64_t v33 = sub_1C28CE830();
        v107[0] = sub_1C27D36AC(v33, v34, (uint64_t *)&aBlock);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        uint64_t v35 = (void *)(*(uint64_t (**)(void (*)(char *, char *, uint64_t), uint64_t))(a9 + 16))(v29, a9);
        uint64_t v36 = sub_1C28CD730();
        unint64_t v38 = v37;

        v107[0] = sub_1C27D36AC(v36, v38, (uint64_t *)&aBlock);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v103 + 8))(v13, v29);
        _os_log_impl(&dword_1C27B7000, v30, v31, "[%{public}s] %s already onboarded, no need to onboard again", (uint8_t *)v32, 0x16u);
        uint64_t v39 = v102;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v39, -1, -1);
        MEMORY[0x1C87609B0](v32, -1, -1);
      }
      else
      {

        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v28 + 8))(v13, v29);
      }
      sub_1C28037EC();
      sub_1C28CE7C0();
      uint64_t v69 = (uint64_t)aBlock;
      uint64_t v70 = v110;
      char v71 = (char)v111;
      v107[0] = aBlock;
      v107[1] = v110;
      char v108 = (char)v111;
      v105((char **)v107);

      return sub_1C2899EDC(v69, v70, v71);
    }
    else
    {
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(a9 + 24))(v104, a9);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v51 = v95;
        id v52 = v102;
        uint64_t v53 = v98;
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v102, v26, v98);
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
        v54(v18, v52, v53);
        unint64_t v55 = sub_1C28CCE00();
        os_log_type_t v56 = sub_1C28CDCD0();
        int v57 = v56;
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v58 = swift_slowAlloc();
          LODWORD(v101) = v57;
          uint64_t v59 = v58;
          uint64_t v103 = swift_slowAlloc();
          uint64_t aBlock = (char *)v103;
          *(_DWORD *)uint64_t v59 = 136446466;
          uint64_t v60 = sub_1C28CE830();
          v107[0] = sub_1C27D36AC(v60, v61, (uint64_t *)&aBlock);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          *(_WORD *)(v59 + 12) = 2080;
          uint64_t v62 = v51;
          uint64_t v63 = v97;
          v54(v97, v18, v53);
          uint64_t v64 = sub_1C28CD750();
          uint64_t v104 = v54;
          v107[0] = sub_1C27D36AC(v64, v65, (uint64_t *)&aBlock);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          os_log_t v66 = *(void (**)(char *, uint64_t))(v62 + 8);
          v66(v18, v53);
          _os_log_impl(&dword_1C27B7000, v55, (os_log_type_t)v101, "[%{public}s] failed to retrieve country code with error: %s", (uint8_t *)v59, 0x16u);
          uint64_t v67 = v103;
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v67, -1, -1);
          MEMORY[0x1C87609B0](v59, -1, -1);

          uint64_t v68 = v104;
        }
        else
        {

          os_log_t v66 = *(void (**)(char *, uint64_t))(v51 + 8);
          v66(v18, v53);
          uint64_t v63 = v97;
          uint64_t v68 = v54;
        }
        id v88 = v102;
        v68(v63, v102, v53);
        uint64_t aBlock = (char *)sub_1C28CD750();
        uint64_t v110 = v89;
        LOBYTE(v111) = 1;
        v105(&aBlock);
        swift_bridgeObjectRelease();

        return ((uint64_t (*)(char *, uint64_t))v66)(v88, v53);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v100, v26, v22);
        uint64_t v73 = sub_1C28CCE00();
        os_log_type_t v74 = sub_1C28CDCD0();
        if (os_log_type_enabled(v73, v74))
        {
          uint64_t v75 = (uint8_t *)swift_slowAlloc();
          uint64_t v76 = swift_slowAlloc();
          uint64_t aBlock = (char *)v76;
          *(_DWORD *)uint64_t v75 = 136446210;
          uint64_t v77 = sub_1C28CE830();
          v107[0] = sub_1C27D36AC(v77, v78, (uint64_t *)&aBlock);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C27B7000, v73, v74, "[%{public}s] country code record retrieval success", v75, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v76, -1, -1);
          MEMORY[0x1C87609B0](v75, -1, -1);
        }

        __swift_project_boxed_opaque_existential_1((void *)(v96+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider), *(void *)(v96+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider+ 24));
        uint64_t v79 = (void *)sub_1C28CCC00();
        uint64_t v80 = v100;
        sub_1C28CCAD0();
        uint64_t v81 = (void *)sub_1C28CD6F0();
        swift_bridgeObjectRelease();
        uint64_t v82 = sub_1C28CCAE0();
        uint64_t v83 = v92;
        sub_1C28CC440();
        uint64_t v84 = (void *)sub_1C28CC3F0();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v83, v94);
        uint64_t v85 = swift_allocObject();
        uint64_t v86 = v106;
        *(void *)(v85 + 16) = v105;
        *(void *)(v85 + 24) = v86;
        uint64_t v113 = sub_1C28AD280;
        uint64_t v114 = v85;
        uint64_t aBlock = (char *)MEMORY[0x1E4F143A8];
        uint64_t v110 = 1107296256;
        v111 = sub_1C289A718;
        uint64_t v112 = &block_descriptor_40;
        uint64_t v87 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v79, sel_setCurrentOnboardingVersionCompletedForCountryCode_countryCodeProvenance_date_settings_completion_, v81, v82, v84, 0, v87);
        _Block_release(v87);

        swift_unknownObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v80, v22);
      }
    }
  }
  else
  {
    uint64_t v40 = a2;
    unint64_t v41 = a2;
    uint64_t v42 = sub_1C28CCE00();
    os_log_type_t v43 = sub_1C28CDCB0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      os_log_type_t v45 = (void *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t aBlock = (char *)v46;
      *(_DWORD *)uint64_t v44 = 136446466;
      uint64_t v47 = sub_1C28CE830();
      v107[0] = sub_1C27D36AC(v47, v48, (uint64_t *)&aBlock);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2112;
      if (a2)
      {
        uint64_t v49 = a2;
        uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
        v107[0] = v50;
        sub_1C28CDF90();
      }
      else
      {
        v107[0] = 0;
        sub_1C28CDF90();
        uint64_t v50 = 0;
      }
      *os_log_type_t v45 = v50;

      _os_log_impl(&dword_1C27B7000, v42, v43, "[%{public}s] Error while retrieving whether onboarding was completed: %@", (uint8_t *)v44, 0x16u);
      sub_1C28AD1E0();
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v45, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v46, -1, -1);
      MEMORY[0x1C87609B0](v44, -1, -1);
    }
    else
    {
    }
    uint64_t aBlock = a2;
    uint64_t v90 = a2;
    sub_1C28AC8DC(0, &qword_1EBB77158, (uint64_t (*)(uint64_t))sub_1C27C7060, MEMORY[0x1E4FBB718]);
    uint64_t aBlock = (char *)sub_1C28CD750();
    uint64_t v110 = v91;
    LOBYTE(v111) = 1;
    v105(&aBlock);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C28A9824()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 - 8);
  unint64_t v6 = (((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);

  return swift_deallocObject();
}

uint64_t sub_1C28A9964(void *a1, char *a2)
{
  uint64_t v5 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(sub_1C28CCE10() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + *(unsigned __int8 *)(*((void *)v5 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  return sub_1C28A8B38(a1, a2, v2 + v8, *(void (**)(char **))(v2 + v9), *(void *)(v2 + v9 + 8), v2 + v10, *(void *)(v2 + ((*(void *)(*((void *)v5 - 1) + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_1C28A9A88(char a1, id a2, void (*a3)(uint64_t *))
{
  if (a1)
  {
    sub_1C28037EC();
    sub_1C28CE7C0();
    uint64_t v4 = v12;
    uint64_t v5 = v13;
    char v6 = v14;
    v10[0] = v12;
    v10[1] = v13;
    char v11 = v14;
    a3(v10);
    return sub_1C2899EDC(v4, v5, v6);
  }
  else
  {
    id v8 = a2;
    sub_1C28AC8DC(0, &qword_1EBB77158, (uint64_t (*)(uint64_t))sub_1C27C7060, MEMORY[0x1E4FBB718]);
    uint64_t v12 = sub_1C28CD750();
    uint64_t v13 = v9;
    char v14 = 1;
    a3(&v12);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C28A9B84()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 24);
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t FeatureStatusAdvertisableFeatureSource.featureStatusProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C27CE8A4(v1 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider, a1);
}

id FeatureStatusAdvertisableFeatureSource.__allocating_init(context:advertisableFeatureSourceProvider:)(id *a1, void *a2)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_1C28CCAC0();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C28CCAF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28A9FDC();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = (uint64_t)a1[6];
  uint64_t v17 = (void (**)(uint64_t, id))a1[7];
  unint64_t v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1 + 3, v16);
  v17[1](v16, v17);
  uint64_t v40 = v15;
  sub_1C28AA088((uint64_t)v15, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = v37;
    uint64_t v18 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v5, v13, v38);
    sub_1C28ACE34(&qword_1EA311490, MEMORY[0x1E4F67348]);
    swift_willThrowTypedImpl();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v18);
    uint64_t v38 = 0;
    uint64_t v20 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    uint64_t v38 = sub_1C28CCAD0();
    uint64_t v20 = v21;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v22 = v39;
  uint64_t v23 = v41;
  id v24 = v41[1];
  uint64_t v25 = v39[3];
  uint64_t v26 = v39[4];
  __swift_project_boxed_opaque_existential_1(v39, v25);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 16);
  id v28 = v24;
  uint64_t v29 = (void *)v27(v25, v26);
  id v30 = *v23;
  id v31 = *v23;
  if (v20)
  {
    uint64_t v32 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = 0;
  }
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B068]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v29, v30, v32);

  sub_1C27CE8A4((uint64_t)v22, (uint64_t)v42);
  unint64_t v34 = (char *)objc_allocWithZone((Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource());
  id v35 = sub_1C28AC37C(v28, (uint64_t)v33, (uint64_t)v42, v34);

  sub_1C28AC4B4((uint64_t)v40);
  sub_1C28AC510((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  return v35;
}

void sub_1C28A9FDC()
{
  if (!qword_1EA311488)
  {
    sub_1C28CCAF0();
    sub_1C28CCAC0();
    sub_1C28ACE34(&qword_1EA311490, MEMORY[0x1E4F67348]);
    unint64_t v0 = sub_1C28CE7E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA311488);
    }
  }
}

uint64_t sub_1C28AA088(uint64_t a1, uint64_t a2)
{
  sub_1C28A9FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id FeatureStatusAdvertisableFeatureSource.__allocating_init(queue:featureStatusProvider:advertisableFeatureSourceProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a2, v7);
  id v10 = sub_1C28AC708(a1, v9, a3, v3, v7, v8);

  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  return v10;
}

uint64_t type metadata accessor for FeatureStatusAdvertisableFeatureSource()
{
  return self;
}

id FeatureStatusAdvertisableFeatureSource.init(queue:featureStatusProvider:advertisableFeatureSourceProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1(a2, v7);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  id v13 = sub_1C28AC5B4(a1, (uint64_t)v11, a3, v3, v7, v8);

  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  return v13;
}

uint64_t sub_1C28AA294()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  return MEMORY[0x1C8760AB0](v1);
}

uint64_t sub_1C28AA2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1C28AA350(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8760AB0](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C28AA3D8;
}

uint64_t sub_1C28AA3DC(uint64_t a1, uint64_t a2)
{
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = sub_1C28CCBB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1C28AA4D4((uint64_t)v6, a1, a2);
  return sub_1C28AC804((uint64_t)v6);
}

uint64_t sub_1C28AA4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C28CD500();
  uint64_t v27 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1C28CD520();
  uint64_t v8 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v15 = (char *)&v22 - v14;
  uint64_t v26 = *(void *)(v3 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C28ACCF8(v23, (uint64_t)v15);
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v24;
  void v18[2] = v16;
  v18[3] = v19;
  void v18[4] = a3;
  sub_1C28AD088((uint64_t)v15, (uint64_t)v18 + v17);
  *(void *)((char *)v18 + ((v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  aBlock[4] = sub_1C28AD11C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C27BC934;
  aBlock[3] = &block_descriptor_34;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C28CD510();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1C28ACE34((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
  sub_1C28AC8DC(0, (unint64_t *)&qword_1EBB77300, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C286E0FC();
  sub_1C28CE020();
  MEMORY[0x1C875F420](0, v10, v7, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v28);
  swift_release();
  return swift_release();
}

void sub_1C28AA8D4(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8760AB0](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_1C28ABA5C(a4, a2, a3);
  }
  else
  {
    sub_1C28CE120();
    swift_bridgeObjectRelease();
    v10[0] = 91;
    v10[1] = 0xE100000000000000;
    sub_1C28CE830();
    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    sub_1C28CD7C0();
    sub_1C28CD7C0();
    sub_1C28CD7C0();
    char v11 = 1;
    a2(v10);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C28AAA24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1C28CD500();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C28CD520();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(void *)(v3 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  uint64_t v15[5] = ObjectType;
  aBlock[4] = sub_1C28AC8D0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C27BC934;
  aBlock[3] = &block_descriptor_9;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C28CD510();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1C28ACE34((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
  sub_1C28AC8DC(0, (unint64_t *)&qword_1EBB77300, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C286E0FC();
  sub_1C28CE020();
  MEMORY[0x1C875F420](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

void sub_1C28AAD44(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8760AB0](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = (void *)(v6
                  + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider);
    uint64_t v9 = v8[3];
    uint64_t v10 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(void *, void (*)(void *), uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, a2, a3, v9, v10);
  }
  else
  {
    sub_1C28CE120();
    swift_bridgeObjectRelease();
    v11[0] = 91;
    v11[1] = 0xE100000000000000;
    sub_1C28CE830();
    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    sub_1C28CD7C0();
    sub_1C28CD7C0();
    sub_1C28CD7C0();
    char v12 = 1;
    a2(v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C28AAEBC(int a1, uint64_t a2, uint64_t a3)
{
  int v19 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1C28CD500();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_1C28CD520();
  uint64_t v11 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(unsigned char *)(v15 + 40) = v19;
  *(void *)(v15 + 48) = ObjectType;
  aBlock[4] = sub_1C28AC948;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C27BC934;
  aBlock[3] = &block_descriptor_16;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C28CD510();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1C28ACE34((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
  sub_1C28AC8DC(0, (unint64_t *)&qword_1EBB77300, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C286E0FC();
  sub_1C28CE020();
  MEMORY[0x1C875F420](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v21);
  swift_release();
  return swift_release();
}

void sub_1C28AB1E8(uint64_t a1, void (*a2)(void *), uint64_t a3, char a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8760AB0](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = (void *)(v8
                   + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider);
    uint64_t v11 = v10[3];
    uint64_t v12 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(void *, void, void (*)(void *), uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, a4 & 1, a2, a3, v11, v12);
  }
  else
  {
    sub_1C28CE120();
    swift_bridgeObjectRelease();
    v13[0] = 91;
    v13[1] = 0xE100000000000000;
    sub_1C28CE830();
    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    sub_1C28CD7C0();
    sub_1C28CD7C0();
    sub_1C28CD7C0();
    char v14 = 1;
    a2(v13);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C28AB36C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 24);
  uint64_t v4 = *(void *)(v1
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 64))(v1, a1, v3, v4);
}

uint64_t sub_1C28AB3D8(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *(void *)(v1
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 24);
  uint64_t v4 = *(void *)(v1
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider), v3);
  char v6 = v2;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v6, v3, v4);
}

uint64_t sub_1C28AB458()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = ObjectType;
  sub_1C28ACDCC();
  sub_1C28ACE34(&qword_1EA3114C8, (void (*)(uint64_t))sub_1C28ACDCC);
  swift_retain();
  uint64_t v5 = sub_1C28CD440();
  swift_release();
  swift_release();
  *(void *)(v1 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusChange) = v5;
  return swift_release();
}

uint64_t sub_1C28AB588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - v7;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8760AB0](a2 + 16);
  if (result)
  {
    uint64_t v10 = (void *)result;
    uint64_t v11 = sub_1C28CCBB0();
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, a1, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = a3;
    id v14 = v10;
    sub_1C28AA4D4((uint64_t)v8, (uint64_t)sub_1C28ACEB4, v13);

    swift_release();
    return sub_1C28AC804((uint64_t)v8);
  }
  return result;
}

uint64_t sub_1C28AB744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)a1;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v9 = *(void *)(a1 + 8);
    sub_1C28CCDB0();
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_1C28CCE00();
    os_log_type_t v11 = sub_1C28CDCB0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = v23;
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v13 = sub_1C28CE830();
      uint64_t v24 = sub_1C27D36AC(v13, v14, &v27);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      uint64_t v24 = v8;
      uint64_t v25 = v9;
      char v26 = 1;
      sub_1C28ACEBC();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1C28CD750();
      uint64_t v24 = sub_1C27D36AC(v15, v16, &v27);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C2899EDC(v8, v9, 1);
      sub_1C2899EDC(v8, v9, 1);
      _os_log_impl(&dword_1C27B7000, v10, v11, "[%s] Unable to determine should advertise after feature status manager observer called (%s, not notifying delegate", (uint8_t *)v12, 0x16u);
      uint64_t v17 = v23;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v17, -1, -1);
      MEMORY[0x1C87609B0](v12, -1, -1);
    }
    else
    {
      sub_1C2899EDC(v8, v9, 1);
      sub_1C2899EDC(v8, v9, 1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    uint64_t v18 = a2 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
    swift_beginAccess();
    uint64_t result = MEMORY[0x1C8760AB0](v18);
    if (result)
    {
      uint64_t v20 = *(void *)(v18 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v20 + 8))(a2, &protocol witness table for FeatureStatusAdvertisableFeatureSource, v8 & 1, ObjectType, v20);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C28ABA5C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v37 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = sub_1C28CCBB0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28ACCF8(a1, (uint64_t)v13);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  uint64_t v36 = v8;
  uint64_t v34 = ObjectType;
  if (v18 == 1)
  {
    uint64_t v33 = a3;
    __swift_project_boxed_opaque_existential_1((void *)(v4 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider), *(void *)(v4+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider+ 24));
    sub_1C28CCC10();
    sub_1C28AC804((uint64_t)v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  }
  int v19 = v37;
  uint64_t v20 = v38;
  uint64_t v21 = (void *)(v4
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider);
  uint64_t v22 = *(void *)(v4
                  + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                  + 24);
  uint64_t v23 = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v22);
  uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 40))(v17, v22, v23);
  sub_1C28CCD90();
  uint64_t v25 = sub_1C28CCE00();
  os_log_type_t v26 = sub_1C28CDCD0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v40[0] = v33;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v28 = sub_1C28CE830();
    uint64_t v39 = sub_1C27D36AC(v28, v29, v40);
    uint64_t v34 = v24;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v39 = sub_1C27D36AC(0xD000000000000039, 0x80000001C28DDB30, v40);
    LOBYTE(v24) = v34;
    uint64_t v20 = v38;
    sub_1C28CDF90();
    _os_log_impl(&dword_1C27B7000, v25, v26, "[%s.%s] Successfully determine should advertise status", (uint8_t *)v27, 0x16u);
    uint64_t v30 = v33;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v30, -1, -1);
    MEMORY[0x1C87609B0](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v36);
  }
  v40[0] = v24 & 1;
  v40[1] = 0;
  char v41 = 0;
  v20(v40);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1C28AC140()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusChange))
  {
    swift_retain();
    sub_1C28CD0E0();
    return swift_release();
  }
  return result;
}

id FeatureStatusAdvertisableFeatureSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void FeatureStatusAdvertisableFeatureSource.init()()
{
}

id FeatureStatusAdvertisableFeatureSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C28AC2EC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

id sub_1C28AC37C(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  v13[3] = sub_1C27D1C9C(0, &qword_1EA3114D8);
  v13[4] = MEMORY[0x1E4F66930];
  v13[0] = a2;
  *(void *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusChange] = 0;
  *(void *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue] = a1;
  sub_1C27CE8A4(a3, (uint64_t)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider]);
  sub_1C27CE8A4((uint64_t)v13, (uint64_t)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider]);
  uint64_t v8 = a4;
  id v9 = a1;
  *(void *)&v8[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusPublisher] = sub_1C28CCC30();

  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource();
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_1C28AB458();

  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  return v10;
}

uint64_t sub_1C28AC4B4(uint64_t a1)
{
  sub_1C28A9FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C28AC510(uint64_t a1)
{
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id sub_1C28AC5B4(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  v17[3] = a5;
  v17[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_0, a2, a5);
  *(void *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusChange] = 0;
  *(void *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue] = a1;
  sub_1C27CE8A4(a3, (uint64_t)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider]);
  sub_1C27CE8A4((uint64_t)v17, (uint64_t)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider]);
  objc_super v12 = a4;
  id v13 = a1;
  *(void *)&v12[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusPublisher] = sub_1C28CCC20();

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource();
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  sub_1C28AB458();

  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return v14;
}

id sub_1C28AC708(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  id v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (char *)objc_allocWithZone((Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource());
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, a5);
  return sub_1C28AC5B4(a1, (uint64_t)v13, a3, v14, a5, a6);
}

uint64_t sub_1C28AC804(uint64_t a1)
{
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C28AC890()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C28AC8C8()
{
  return objectdestroy_5Tm_2();
}

void sub_1C28AC8D0()
{
  sub_1C28AAD44(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(void *)(v0 + 32));
}

void sub_1C28AC8DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C28AC940()
{
  return objectdestroy_5Tm_2();
}

void sub_1C28AC948()
{
  sub_1C28AB1E8(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1C28AC95C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8760AB0](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1C28AC9B8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.featureIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.currentCountry.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.makeConfiguration(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.queue_determineShouldAdvertise(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.queue_performPrerequisiteWorkIfNecessary(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.queue_commitEnablement(_:enabled:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.determinePostCommitWorkItems(_:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t method lookup function for FeatureStatusAdvertisableFeatureSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeatureStatusAdvertisableFeatureSource);
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.__allocating_init(queue:featureStatusProvider:advertisableFeatureSourceProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.determineShouldAdvertise(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.performPrerequisiteWorkIfNecessary(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.commitEnablement(_:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.determinePostCommitWorkItems(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.makeConfiguration(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.stopObservation()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t sub_1C28ACCF8(uint64_t a1, uint64_t a2)
{
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C28ACD8C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28ACDC4(uint64_t a1)
{
  return sub_1C28AB588(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C28ACDCC()
{
  if (!qword_1EA3114C0)
  {
    sub_1C28CCBB0();
    unint64_t v0 = sub_1C28CD0A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3114C0);
    }
  }
}

uint64_t sub_1C28ACE34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C28ACE7C()
{
  return swift_deallocObject();
}

uint64_t sub_1C28ACEB4(uint64_t a1)
{
  return sub_1C28AB744(a1, *(void *)(v1 + 16));
}

void sub_1C28ACEBC()
{
  if (!qword_1EA3114D0)
  {
    sub_1C28037EC();
    unint64_t v0 = sub_1C28CE7E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3114D0);
    }
  }
}

uint64_t sub_1C28ACF20()
{
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  uint64_t v3 = sub_1C28CCBB0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_1C28AD088(uint64_t a1, uint64_t a2)
{
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C28AD11C()
{
  sub_1C28AC8DC(0, &qword_1EA3114A0, MEMORY[0x1E4F66798], MEMORY[0x1E4FBB718]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = v0[2];
  uint64_t v4 = (void (*)(uint64_t *))v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  sub_1C28AA8D4(v3, v4, v5, v6);
}

void sub_1C28AD1E0()
{
  if (!qword_1EBB75EF0)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB77130);
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75EF0);
    }
  }
}

uint64_t sub_1C28AD248()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28AD280(char a1, void *a2)
{
  return sub_1C28A9A88(a1, a2, *(void (**)(uint64_t *))(v2 + 16));
}

BOOL static FeatureStatusKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t FeatureStatusKind.analyticsString.getter()
{
  unint64_t result = 0x657669746361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6576697463616E69;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x766552736465656ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C28AD378(char a1)
{
  unint64_t result = 0x657669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6576697463616E69;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x766552736465656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C28AD438(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADE68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28AD474(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADE68();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1C28AD4B0()
{
  return sub_1C28AD378(*v0);
}

uint64_t sub_1C28AD4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28AF9D4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C28AD4E0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1C28AD4EC(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADEBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28AD528(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADEBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28AD564(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADE14();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28AD5A0(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADE14();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28AD5DC(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADD18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28AD618(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADD18();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28AD654(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADDC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28AD690(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADDC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28AD6CC(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADD6C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28AD708(uint64_t a1)
{
  unint64_t v2 = sub_1C28ADD6C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeatureStatusKind.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C28AE67C(0, &qword_1EBB74818, (uint64_t (*)(void))sub_1C28ADD18, (uint64_t)&type metadata for FeatureStatusKind.NeedsReviewCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)&v26 - v6;
  sub_1C28AE67C(0, &qword_1EBB74820, (uint64_t (*)(void))sub_1C28ADD6C, (uint64_t)&type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys, v4);
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v35 = (char *)&v26 - v8;
  sub_1C28AE67C(0, &qword_1EBB74828, (uint64_t (*)(void))sub_1C28ADDC0, (uint64_t)&type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys, v4);
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v32 = (char *)&v26 - v10;
  sub_1C28AE67C(0, &qword_1EBB74810, (uint64_t (*)(void))sub_1C28ADE14, (uint64_t)&type metadata for FeatureStatusKind.InactiveCodingKeys, v4);
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v29 = (char *)&v26 - v12;
  sub_1C28AE67C(0, &qword_1EBB74808, (uint64_t (*)(void))sub_1C28ADE68, (uint64_t)&type metadata for FeatureStatusKind.ActiveCodingKeys, v4);
  uint64_t v27 = *(void *)(v13 - 8);
  uint64_t v28 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v26 - v14;
  sub_1C28AE67C(0, &qword_1EBB74800, (uint64_t (*)(void))sub_1C28ADEBC, (uint64_t)&type metadata for FeatureStatusKind.CodingKeys, v4);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v26 - v19;
  uint64_t v21 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28ADEBC();
  sub_1C28CE800();
  switch(v21)
  {
    case 1:
      char v42 = 1;
      sub_1C28ADE14();
      uint64_t v22 = v29;
      sub_1C28CE550();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 2:
      char v43 = 2;
      sub_1C28ADDC0();
      uint64_t v22 = v32;
      sub_1C28CE550();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 3:
      char v44 = 3;
      sub_1C28ADD6C();
      uint64_t v22 = v35;
      sub_1C28CE550();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
      goto LABEL_7;
    case 4:
      char v45 = 4;
      sub_1C28ADD18();
      uint64_t v22 = v38;
      sub_1C28CE550();
      uint64_t v24 = v39;
      uint64_t v23 = v40;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
      break;
    default:
      char v41 = 0;
      sub_1C28ADE68();
      sub_1C28CE550();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v28);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

unint64_t sub_1C28ADD18()
{
  unint64_t result = qword_1EBB74368;
  if (!qword_1EBB74368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74368);
  }
  return result;
}

unint64_t sub_1C28ADD6C()
{
  unint64_t result = qword_1EBB74380;
  if (!qword_1EBB74380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74380);
  }
  return result;
}

unint64_t sub_1C28ADDC0()
{
  unint64_t result = qword_1EBB74398;
  if (!qword_1EBB74398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74398);
  }
  return result;
}

unint64_t sub_1C28ADE14()
{
  unint64_t result = qword_1EBB74350;
  if (!qword_1EBB74350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74350);
  }
  return result;
}

unint64_t sub_1C28ADE68()
{
  unint64_t result = qword_1EBB74338;
  if (!qword_1EBB74338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74338);
  }
  return result;
}

unint64_t sub_1C28ADEBC()
{
  unint64_t result = qword_1EBB74320;
  if (!qword_1EBB74320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74320);
  }
  return result;
}

uint64_t FeatureStatusKind.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v48 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C28AE67C(0, &qword_1EA311560, (uint64_t (*)(void))sub_1C28ADD18, (uint64_t)&type metadata for FeatureStatusKind.NeedsReviewCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v52 = v4;
  uint64_t v45 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&v36 - v5;
  sub_1C28AE67C(0, &qword_1EA311568, (uint64_t (*)(void))sub_1C28ADD6C, (uint64_t)&type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys, v3);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v51 = (char *)&v36 - v7;
  sub_1C28AE67C(0, &qword_1EA311570, (uint64_t (*)(void))sub_1C28ADDC0, (uint64_t)&type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys, v3);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v46 = (char *)&v36 - v9;
  sub_1C28AE67C(0, &qword_1EA311578, (uint64_t (*)(void))sub_1C28ADE14, (uint64_t)&type metadata for FeatureStatusKind.InactiveCodingKeys, v3);
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v50 = (char *)&v36 - v11;
  sub_1C28AE67C(0, &qword_1EA311580, (uint64_t (*)(void))sub_1C28ADE68, (uint64_t)&type metadata for FeatureStatusKind.ActiveCodingKeys, v3);
  uint64_t v13 = v12;
  uint64_t v38 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v36 - v14;
  sub_1C28AE67C(0, &qword_1EA311588, (uint64_t (*)(void))sub_1C28ADEBC, (uint64_t)&type metadata for FeatureStatusKind.CodingKeys, v3);
  uint64_t v17 = v16;
  uint64_t v49 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v36 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28ADEBC();
  uint64_t v20 = v53;
  sub_1C28CE7F0();
  if (!v20)
  {
    uint64_t v53 = v15;
    uint64_t v37 = v13;
    uint64_t v21 = v50;
    uint64_t v22 = v51;
    uint64_t v23 = v52;
    uint64_t v24 = v19;
    uint64_t v25 = sub_1C28CE530();
    if (*(void *)(v25 + 16) == 1)
    {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 32);
      uint64_t v36 = v26;
      switch(v26)
      {
        case 1:
          char v55 = 1;
          sub_1C28ADE14();
          sub_1C28CE480();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v40);
          break;
        case 2:
          char v56 = 2;
          sub_1C28ADDC0();
          uint64_t v33 = v46;
          sub_1C28CE480();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v42);
          break;
        case 3:
          char v57 = 3;
          sub_1C28ADD6C();
          uint64_t v27 = v22;
          sub_1C28CE480();
          uint64_t v29 = v43;
          uint64_t v28 = v44;
          goto LABEL_9;
        case 4:
          char v58 = 4;
          sub_1C28ADD18();
          uint64_t v34 = v47;
          sub_1C28CE480();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v23);
          break;
        default:
          char v54 = 0;
          sub_1C28ADE68();
          uint64_t v27 = v53;
          sub_1C28CE480();
          uint64_t v28 = v37;
          uint64_t v29 = v38;
LABEL_9:
          (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
          break;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v17);
      *unint64_t v48 = v36;
    }
    else
    {
      uint64_t v30 = sub_1C28CE180();
      swift_allocError();
      uint64_t v32 = v31;
      sub_1C27E29F8();
      void *v32 = &type metadata for FeatureStatusKind;
      sub_1C28CE490();
      sub_1C28CE160();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v17);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1C28AE67C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C28AE6E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FeatureStatusKind.init(from:)(a1, a2);
}

uint64_t sub_1C28AE6FC(void *a1)
{
  return FeatureStatusKind.encode(to:)(a1);
}

uint64_t FeatureStatusKind.hash(into:)()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t FeatureStatusKind.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28AE910()
{
  FeatureStatusKind.analyticsString.getter();
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C28AE974()
{
  return sub_1C28CE740();
}

id static FeatureStatusSupport.hasMultipleWatches()()
{
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_getPairedDevices);
    if (v2)
    {
      uint64_t v3 = v2;
      sub_1C28AEB60();
      unint64_t v4 = sub_1C28CD920();

      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_1C28CE3B0();

        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
      }
      return (id)(v5 > 1);
    }
    else
    {

      return 0;
    }
  }
  return result;
}

unint64_t sub_1C28AEB60()
{
  unint64_t result = qword_1EBB756F8;
  if (!qword_1EBB756F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB756F8);
  }
  return result;
}

uint64_t sub_1C28AEBA4()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EBB74FB0 = result;
  unk_1EBB74FB8 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.enableDescription.getter()
{
  return sub_1C28AF4C0(&qword_1EBB74FC8, &qword_1EBB74FB0);
}

uint64_t sub_1C28AEC78()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EA3114E0 = result;
  *(void *)algn_1EA3114E8 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.setUpDescription.getter()
{
  return sub_1C28AF4C0(&qword_1EA30FCE0, &qword_1EA3114E0);
}

uint64_t sub_1C28AED4C()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EA3114F0 = result;
  *(void *)algn_1EA3114F8 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.openSettingsDescription.getter()
{
  return sub_1C28AF4C0(&qword_1EA30FCE8, &qword_1EA3114F0);
}

uint64_t sub_1C28AEE20()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EBB74FD0 = result;
  *(void *)algn_1EBB74FD8 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.learnMoreDescription.getter()
{
  return sub_1C28AF4C0(&qword_1EBB74FE0, &qword_1EBB74FD0);
}

uint64_t sub_1C28AEEF4()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EBB74FE8 = result;
  unk_1EBB74FF0 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.privacySettingsDescription.getter()
{
  return sub_1C28AF4C0(qword_1EBB74FF8, &qword_1EBB74FE8);
}

uint64_t sub_1C28AEFC8()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EA311500 = result;
  *(void *)algn_1EA311508 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.privacySettingsDescriptionFooterMarkdown.getter()
{
  return sub_1C28AF4C0(&qword_1EA30FCF0, &qword_1EA311500);
}

uint64_t sub_1C28AF09C()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EA311510 = result;
  *(void *)algn_1EA311518 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.passcodeSettingsDescription.getter()
{
  return sub_1C28AF4C0(&qword_1EA30FCF8, &qword_1EA311510);
}

uint64_t sub_1C28AF170()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EA311520 = result;
  *(void *)algn_1EA311528 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.passcodeSettingsDescriptionFooterMarkdown.getter()
{
  return sub_1C28AF4C0(&qword_1EA30FD00, &qword_1EA311520);
}

uint64_t sub_1C28AF244()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EA311530 = result;
  *(void *)algn_1EA311538 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.phoneOnlyDescription.getter()
{
  return sub_1C28AF4C0(&qword_1EA30FD08, &qword_1EA311530);
}

uint64_t sub_1C28AF318()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EA311540 = result;
  *(void *)algn_1EA311548 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.watchOnlyDescription.getter()
{
  return sub_1C28AF4C0(&qword_1EA30FD10, &qword_1EA311540);
}

uint64_t sub_1C28AF3EC()
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  uint64_t result = sub_1C28CC200();
  qword_1EA311550 = result;
  *(void *)algn_1EA311558 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.phoneAndWatchDescription.getter()
{
  return sub_1C28AF4C0(&qword_1EA30FD18, &qword_1EA311550);
}

uint64_t sub_1C28AF4C0(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t static FeatureStatusSupport.secondaryDescription(for:isAvailableOnPhone:isAvailableOnWatch:customInvalidSettingsString:)(char *a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  char v11 = *a1;
  char v9 = objc_msgSend(self, sel_hasPairedWatch);
  return sub_1C28AFD20(&v11, a2, v9, a3, a4, a5);
}

uint64_t static FeatureStatusSupport.dataTypeDetailFooterDescription(with:from:appendLearnMoreString:)(unsigned char *a1, void *a2, char a3)
{
  if ((*a1 & 0xFE) != 2 || a2[2] != 1) {
    return 0;
  }
  uint64_t v3 = a2[4];
  uint64_t v4 = a2[5];
  if (a3)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _s16HealthExperience20FeatureStatusSupportV26learnMoreFooterDescription20unavailabilityStringS2S_tFZ_0(v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t static FeatureStatusSupport.settingsDeviceStatus(for:isPhoneOnly:isWatchOnly:hasPairedWatch:)(unsigned __int8 *a1, char a2, char a3, char a4)
{
  unsigned int v4 = *a1;
  if (v4 > 1)
  {
    char v6 = v4 == 4;
    if ((a2 & 1) == 0)
    {
      char v5 = 0;
      a4 &= v6;
      if ((a3 & 1) == 0) {
        return _s16HealthExperience20FeatureStatusSupportV014settingsDeviceD018isAvailableOnPhone0h7EnabledjK00hiJ5Watch0hljM0SSSgSb_S3btFZ_0(v6, v5, a4 & 1, v5);
      }
LABEL_11:
      if (a4)
      {
        uint64_t v14 = (uint64_t)_s16HealthExperience20FeatureStatusSupportV22activePairedDeviceNameSSSgyFZ_0();
        if (v15) {
          goto LABEL_16;
        }
        if (qword_1EBB75700 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_1C28CC200();
        if (v15)
        {
LABEL_16:
          uint64_t v16 = v14;
          uint64_t v17 = v15;
          uint64_t v18 = qword_1EBB75700;
          swift_bridgeObjectRetain();
          if (v5)
          {
            if (v18 != -1) {
              swift_once();
            }
          }
          else if (v18 != -1)
          {
            swift_once();
          }
          sub_1C28CC200();
          sub_1C288ED60();
          uint64_t v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = xmmword_1C28D23F0;
          *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
          *(void *)(v21 + 64) = sub_1C28B076C();
          *(void *)(v21 + 32) = v16;
          *(void *)(v21 + 40) = v17;
          uint64_t v7 = sub_1C28CD700();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return 0;
    }
    char v8 = 0;
    if (v4 != 4)
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
      char v5 = 0;
LABEL_25:
      uint64_t v7 = sub_1C28B008C(v8, v5, v11, v13, 0, 0, 0, 0);
LABEL_26:
      swift_bridgeObjectRelease();
      return v7;
    }
    char v5 = 0;
LABEL_8:
    id v9 = objc_msgSend(self, sel_currentDeviceDisplayName);
    if (v9)
    {
      unint64_t v10 = v9;
      uint64_t v11 = sub_1C28CD730();
      uint64_t v13 = v12;
    }
    else
    {
      if (qword_1EBB75700 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1C28CC200();
      uint64_t v13 = v19;
    }
    char v8 = 1;
    goto LABEL_25;
  }
  char v5 = v4 == 0;
  if (a2) {
    goto LABEL_8;
  }
  char v6 = 1;
  if (a3) {
    goto LABEL_11;
  }
  return _s16HealthExperience20FeatureStatusSupportV014settingsDeviceD018isAvailableOnPhone0h7EnabledjK00hiJ5Watch0hljM0SSSgSb_S3btFZ_0(v6, v5, a4 & 1, v5);
}

uint64_t sub_1C28AF9D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657669746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576697463616E69 && a2 == 0xE800000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C28DCAA0 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C28DCA80 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x766552736465656ELL && a2 == 0xEB00000000776569)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

id _s16HealthExperience20FeatureStatusSupportV22activePairedDeviceNameSSSgyFZ_0()
{
  id result = objc_msgSend(self, sel_sharedInstance);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v1 = result;
  id v2 = objc_msgSend(result, sel_getActivePairedDevice);

  if (!v2)
  {
    long long v4 = 0u;
    long long v5 = 0u;
LABEL_12:
    sub_1C27B9E38((uint64_t)&v4);
    return 0;
  }
  if (objc_msgSend(v2, sel_valueForProperty_, *MEMORY[0x1E4F79E08]))
  {
    sub_1C28CE000();
    swift_unknownObjectRelease();
  }
  else
  {

    memset(v3, 0, sizeof(v3));
  }
  sub_1C2804FA0((uint64_t)v3, (uint64_t)&v4);
  if (!*((void *)&v5 + 1)) {
    goto LABEL_12;
  }
  if (swift_dynamicCast()) {
    return *(id *)&v3[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_1C28AFD20(unsigned char *a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  switch(*a1)
  {
    case 2:
      uint64_t v7 = a5;
      if (!a6)
      {
        if (qword_1EA30FCE8 != -1) {
          swift_once();
        }
        uint64_t v7 = qword_1EA3114F0;
        swift_bridgeObjectRetain();
      }
      goto LABEL_25;
    case 3:
      if (qword_1EBB74FE0 != -1) {
        swift_once();
      }
      char v6 = &qword_1EBB74FD0;
      goto LABEL_24;
    default:
      if (a2)
      {
        if (a4)
        {
          if (a3)
          {
            if (qword_1EA30FD18 != -1) {
              swift_once();
            }
            char v6 = &qword_1EA311550;
            goto LABEL_24;
          }
          return 0;
        }
        if ((a3 & 1) == 0) {
          return 0;
        }
        if (qword_1EA30FD08 != -1) {
          swift_once();
        }
        char v6 = &qword_1EA311530;
      }
      else
      {
        uint64_t v7 = 0;
        if ((a4 & 1) == 0 || (a3 & 1) == 0) {
          return v7;
        }
        if (qword_1EA30FD10 != -1) {
          swift_once();
        }
        char v6 = &qword_1EA311540;
      }
LABEL_24:
      uint64_t v7 = *v6;
LABEL_25:
      swift_bridgeObjectRetain();
      return v7;
  }
}

uint64_t _s16HealthExperience20FeatureStatusSupportV26learnMoreFooterDescription20unavailabilityStringS2S_tFZ_0(uint64_t a1, uint64_t a2)
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  sub_1C28CC200();
  sub_1C288ED60();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C28D5110;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1C28B076C();
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  uint64_t v7 = qword_1EBB74FE0;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EBB74FD0;
  uint64_t v8 = *(void *)algn_1EBB74FD8;
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v6;
  *(void *)(v4 + 72) = v9;
  *(void *)(v4 + 80) = v8;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C28CD740();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C28B008C(char a1, char a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    uint64_t v11 = a4;
    if ((a5 & 1) == 0)
    {
      if (!a4) {
        return v11;
      }
      uint64_t v16 = qword_1EBB75700;
      swift_bridgeObjectRetain();
      if (a2)
      {
        if (v16 != -1) {
          swift_once();
        }
      }
      else if (v16 != -1)
      {
        swift_once();
      }
      sub_1C28CC200();
      sub_1C288ED60();
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C28D23F0;
      *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v18 + 64) = sub_1C28B076C();
      *(void *)(v18 + 32) = a3;
      *(void *)(v18 + 40) = v11;
      goto LABEL_39;
    }
    if (!a4) {
      return v11;
    }
    if (a8)
    {
      uint64_t v14 = qword_1EBB75700;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (a2)
      {
        if (a6)
        {
          if (v14 != -1) {
            swift_once();
          }
        }
        else if (v14 != -1)
        {
          swift_once();
        }
      }
      else if (a6)
      {
        if (v14 != -1) {
          swift_once();
        }
      }
      else if (v14 != -1)
      {
        swift_once();
      }
      sub_1C28CC200();
      sub_1C288ED60();
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C28D5110;
      uint64_t v20 = MEMORY[0x1E4FBB1A0];
      *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v21 = sub_1C28B076C();
      *(void *)(v19 + 32) = a3;
      *(void *)(v19 + 40) = v11;
      *(void *)(v19 + 96) = v20;
      *(void *)(v19 + 104) = v21;
      *(void *)(v19 + 64) = v21;
      *(void *)(v19 + 72) = a7;
      *(void *)(v19 + 80) = a8;
LABEL_39:
      uint64_t v11 = sub_1C28CD700();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11;
    }
    return 0;
  }
  else
  {
    uint64_t v11 = 0;
    if ((a5 & 1) != 0 && a8)
    {
      uint64_t v15 = qword_1EBB75700;
      swift_bridgeObjectRetain();
      if (a6)
      {
        if (v15 != -1) {
          swift_once();
        }
      }
      else if (v15 != -1)
      {
        swift_once();
      }
      sub_1C28CC200();
      sub_1C288ED60();
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1C28D23F0;
      *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v17 + 64) = sub_1C28B076C();
      *(void *)(v17 + 32) = a7;
      *(void *)(v17 + 40) = a8;
      goto LABEL_39;
    }
  }
  return v11;
}

uint64_t _s16HealthExperience20FeatureStatusSupportV014settingsDeviceD018isAvailableOnPhone0h7EnabledjK00hiJ5Watch0hljM0SSSgSb_S3btFZ_0(char a1, char a2, char a3, char a4)
{
  if (a1)
  {
    id v8 = objc_msgSend(self, sel_currentDeviceDisplayName);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C28CD730();
      uint64_t v12 = v11;

      if ((a3 & 1) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      if (qword_1EBB75700 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1C28CC200();
      uint64_t v12 = v17;
      if ((a3 & 1) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    if ((a3 & 1) == 0)
    {
LABEL_14:
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      goto LABEL_15;
    }
  }
  uint64_t v13 = (uint64_t)_s16HealthExperience20FeatureStatusSupportV22activePairedDeviceNameSSSgyFZ_0();
  if (!v14)
  {
    if (qword_1EBB75700 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C28CC200();
  }
  uint64_t v15 = v13;
  uint64_t v16 = v14;
LABEL_15:
  uint64_t v18 = sub_1C28B008C(a1 & 1, a2 & 1, v10, v12, a3 & 1, a4 & 1, v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1C28B076C()
{
  unint64_t result = qword_1EBB75970;
  if (!qword_1EBB75970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75970);
  }
  return result;
}

unint64_t sub_1C28B07C4()
{
  unint64_t result = qword_1EA311590;
  if (!qword_1EA311590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311590);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport()
{
  return &type metadata for FeatureStatusSupport;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.CodingKeys()
{
  return &type metadata for FeatureStatusKind.CodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.ActiveCodingKeys()
{
  return &type metadata for FeatureStatusKind.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.InactiveCodingKeys()
{
  return &type metadata for FeatureStatusKind.InactiveCodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys()
{
  return &type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.UnavailableNotSupportedCodingKeys()
{
  return &type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.NeedsReviewCodingKeys()
{
  return &type metadata for FeatureStatusKind.NeedsReviewCodingKeys;
}

unint64_t sub_1C28B08B4()
{
  unint64_t result = qword_1EA311598;
  if (!qword_1EA311598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311598);
  }
  return result;
}

unint64_t sub_1C28B090C()
{
  unint64_t result = qword_1EBB74330;
  if (!qword_1EBB74330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74330);
  }
  return result;
}

unint64_t sub_1C28B0964()
{
  unint64_t result = qword_1EBB74328;
  if (!qword_1EBB74328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74328);
  }
  return result;
}

unint64_t sub_1C28B09BC()
{
  unint64_t result = qword_1EBB74348;
  if (!qword_1EBB74348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74348);
  }
  return result;
}

unint64_t sub_1C28B0A14()
{
  unint64_t result = qword_1EBB74340;
  if (!qword_1EBB74340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74340);
  }
  return result;
}

unint64_t sub_1C28B0A6C()
{
  unint64_t result = qword_1EBB74360;
  if (!qword_1EBB74360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74360);
  }
  return result;
}

unint64_t sub_1C28B0AC4()
{
  unint64_t result = qword_1EBB74358;
  if (!qword_1EBB74358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74358);
  }
  return result;
}

unint64_t sub_1C28B0B1C()
{
  unint64_t result = qword_1EBB743A8;
  if (!qword_1EBB743A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB743A8);
  }
  return result;
}

unint64_t sub_1C28B0B74()
{
  unint64_t result = qword_1EBB743A0;
  if (!qword_1EBB743A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB743A0);
  }
  return result;
}

unint64_t sub_1C28B0BCC()
{
  unint64_t result = qword_1EBB74390;
  if (!qword_1EBB74390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74390);
  }
  return result;
}

unint64_t sub_1C28B0C24()
{
  unint64_t result = qword_1EBB74388;
  if (!qword_1EBB74388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74388);
  }
  return result;
}

unint64_t sub_1C28B0C7C()
{
  unint64_t result = qword_1EBB74378;
  if (!qword_1EBB74378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74378);
  }
  return result;
}

unint64_t sub_1C28B0CD4()
{
  unint64_t result = qword_1EBB74370;
  if (!qword_1EBB74370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74370);
  }
  return result;
}

uint64_t ActivityMoveModeState.activityMoveMode.getter()
{
  return *(void *)v0;
}

uint64_t ActivityMoveModeState.activityMoveMode.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ActivityMoveModeState.activityMoveMode.modify())()
{
  return nullsub_1;
}

uint64_t ActivityMoveModeState.hasDataInOtherActivityMoveMode.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ActivityMoveModeState.hasDataInOtherActivityMoveMode.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*ActivityMoveModeState.hasDataInOtherActivityMoveMode.modify())()
{
  return nullsub_1;
}

uint64_t ActivityMoveModeState.init(activityMoveMode:hasDataInOtherActivityMoveMode:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

void static ActivityMoveModeState.default.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t static ActivityMoveModeState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2) {
    return (*(unsigned __int8 *)(a2 + 8) ^ *(unsigned __int8 *)(a1 + 8) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t ActivityMoveModeState.hash(into:)()
{
  return sub_1C28CE720();
}

unint64_t sub_1C28B0E14()
{
  if (*v0) {
    return 0xD00000000000001ELL;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1C28B0E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28B7E08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28B0E7C(uint64_t a1)
{
  unint64_t v2 = sub_1C28B4FB8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28B0EB8(uint64_t a1)
{
  unint64_t v2 = sub_1C28B4FB8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActivityMoveModeState.encode(to:)(void *a1)
{
  sub_1C28B5AD0(0, &qword_1EBB76920, (uint64_t (*)(void))sub_1C28B4FB8, (uint64_t)&type metadata for ActivityMoveModeState.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *v1;
  v11[3] = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28B4FB8();
  sub_1C28CE800();
  uint64_t v15 = v8;
  char v14 = 0;
  type metadata accessor for HKActivityMoveMode(0);
  sub_1C28B5CEC(&qword_1EBB76908, type metadata accessor for HKActivityMoveMode);
  uint64_t v9 = v12;
  sub_1C28CE5E0();
  if (!v9)
  {
    char v13 = 1;
    sub_1C28CE5B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ActivityMoveModeState.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t ActivityMoveModeState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  sub_1C28B5AD0(0, &qword_1EBB77058, (uint64_t (*)(void))sub_1C28B4FB8, (uint64_t)&type metadata for ActivityMoveModeState.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28B4FB8();
  sub_1C28CE7F0();
  if (!v2)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v14;
    type metadata accessor for HKActivityMoveMode(0);
    char v16 = 0;
    sub_1C28B5CEC((unint64_t *)&unk_1EBB77030, type metadata accessor for HKActivityMoveMode);
    sub_1C28CE520();
    uint64_t v11 = v17;
    char v15 = 1;
    char v13 = sub_1C28CE4F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    *(void *)uint64_t v10 = v11;
    *(unsigned char *)(v10 + 8) = v13 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C28B1374@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityMoveModeState.init(from:)(a1, a2);
}

uint64_t sub_1C28B138C(void *a1)
{
  return ActivityMoveModeState.encode(to:)(a1);
}

uint64_t sub_1C28B13A4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2) {
    return (*(unsigned __int8 *)(a2 + 8) ^ *(unsigned __int8 *)(a1 + 8) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C28B13D4()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28B1434()
{
  return sub_1C28CE720();
}

uint64_t sub_1C28B1474()
{
  return sub_1C28CE740();
}

uint64_t HealthKitProfileInformation.firstName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C28B1500(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  uint64_t v5 = a2[6];
  swift_beginAccess();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t HealthKitProfileInformation.firstName.setter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  uint64_t v5 = v2[6];
  swift_beginAccess();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*HealthKitProfileInformation.firstName.modify(uint64_t a1))(uint64_t result, char a2)
{
  *(void *)(a1 + 24) = v1;
  return sub_1C28B1610;
}

uint64_t sub_1C28B1610(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v3 = *(uint64_t **)(result + 24);
    uint64_t v4 = v3[6];
    uint64_t v6 = *v3;
    uint64_t v5 = v3[1];
    swift_beginAccess();
    *(void *)(v4 + 16) = v6;
    *(void *)(v4 + 24) = v5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t HealthKitProfileInformation.lastName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C28B16B4(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a2[2] = v4;
  a2[3] = v3;
  uint64_t v5 = a2[6];
  swift_beginAccess();
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t HealthKitProfileInformation.lastName.setter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v5 = v2[6];
  swift_beginAccess();
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*HealthKitProfileInformation.lastName.modify(uint64_t a1))(uint64_t result, char a2)
{
  *(void *)(a1 + 24) = v1;
  return sub_1C28B17C4;
}

uint64_t sub_1C28B17C4(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v3 = *(void **)(result + 24);
    uint64_t v4 = v3[6];
    uint64_t v6 = v3[2];
    uint64_t v5 = v3[3];
    swift_beginAccess();
    *(void *)(v4 + 32) = v6;
    *(void *)(v4 + 40) = v5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t HealthKitProfileInformation.dsid.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t HealthKitProfileInformation.dsid.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*HealthKitProfileInformation.dsid.modify())()
{
  return nullsub_1;
}

uint64_t HealthKitProfileInformation.profileImageInformation.getter()
{
  return swift_retain();
}

void HealthKitProfileInformation.activityMoveModeState.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 64);
  *(void *)a1 = *(void *)(v1 + 56);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t HealthKitProfileInformation.activityMoveModeState.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 56) = *(void *)result;
  *(unsigned char *)(v1 + 64) = v2;
  return result;
}

uint64_t (*HealthKitProfileInformation.activityMoveModeState.modify())()
{
  return nullsub_1;
}

uint64_t HealthKitProfileInformation.image.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_beginAccess();
  char v2 = *(void **)(v1 + 64);
  uint64_t v3 = (uint64_t)v2;
  if (!v2)
  {
    swift_getKeyPath();
    uint64_t v4 = swift_retain();
    uint64_t v3 = sub_1C288BD70(v4);
    swift_release();
    swift_release();
  }
  id v5 = v2;
  return v3;
}

uint64_t HealthKitProfileInformation.profileIdentifier.getter()
{
  return sub_1C28CD570();
}

uint64_t sub_1C28B19A0(void **a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for HealthKitProfileInformation();
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  id v2 = v1;
  return sub_1C28CD580();
}

uint64_t HealthKitProfileInformation.profileIdentifier.setter()
{
  return sub_1C28CD580();
}

void (*HealthKitProfileInformation.profileIdentifier.modify(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for HealthKitProfileInformation();
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  v2[4] = sub_1C28CD560();
  return sub_1C282CB98;
}

id HealthKitProfileInformation.profileType.getter()
{
  type metadata accessor for HealthKitProfileInformation();
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v0 = (void *)sub_1C28CD570();
  id v1 = objc_msgSend(v0, sel_type);

  return v1;
}

uint64_t HealthKitProfileInformation.uniqueIdentifier.getter()
{
  uint64_t v0 = sub_1C28CC4B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0xD00000000000001CLL;
  v7[1] = 0x80000001C28DDFB0;
  type metadata accessor for HealthKitProfileInformation();
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v4 = (void *)sub_1C28CD570();
  id v5 = objc_msgSend(v4, sel_identifier);

  sub_1C28CC490();
  sub_1C28B5CEC(&qword_1EBB76FC0, MEMORY[0x1E4F27990]);
  sub_1C28CE610();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7[0];
}

uint64_t HealthKitProfileInformation.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HealthKitProfileInformation() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HealthKitProfileInformation.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + *(int *)(type metadata accessor for HealthKitProfileInformation() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HealthKitProfileInformation.reuseIdentifier.modify())(void)
{
  return nullsub_1;
}

void HealthKitProfileInformation.init(firstName:lastName:dsid:profileIdentifier:activityMoveModeState:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v25 = *a8;
  char v24 = *((unsigned char *)a8 + 8);
  uint64_t v17 = (int *)type metadata accessor for HealthKitProfileInformation();
  uint64_t v18 = (void *)(a9 + v17[10]);
  *uint64_t v18 = 0x4E656C69666F7250;
  v18[1] = 0xEF6C6C6543656D61;
  uint64_t v19 = a9 + v17[11];
  *(_OWORD *)uint64_t v19 = xmmword_1C28D1A20;
  *(unsigned char *)(v19 + 16) = 0;
  uint64_t v20 = a9 + v17[12];
  uint64_t v21 = type metadata accessor for CloudSyncResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = a6 & 1;
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = a7;
  sub_1C28CD5B0();
  type metadata accessor for ProfileImageInformation();
  swift_allocObject();
  uint64_t v23 = sub_1C288BFA4(a1, a2, a3, a4, 0);

  *(void *)(a9 + 48) = v23;
  *(void *)(a9 + 56) = v25;
  *(unsigned char *)(a9 + 64) = v24;
}

id static HealthKitProfileInformation.makeImage(photoFetcherResult:size:)(void *a1, unint64_t a2, char a3, double a4, double a5)
{
  uint64_t v10 = sub_1C28CCE10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v16 = (char *)&v47 - v15;
  if (a3)
  {
    id v24 = a1;
    sub_1C28CCD80();
    id v25 = a1;
    id v26 = a1;
    isEscapingClosureAtFileLocation = sub_1C28CCE00();
    os_log_type_t v28 = sub_1C28CDCD0();
    if (!os_log_type_enabled(isEscapingClosureAtFileLocation, v28))
    {
LABEL_10:
      sub_1C28B5690(a1, a2, 1);
      sub_1C28B5690(a1, a2, 1);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      return 0;
    }
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446466;
    uint64_t v49 = v10;
    aBlock[0] = v30;
    uint64_t v51 = type metadata accessor for HealthKitProfileInformation();
    sub_1C28B569C();
    uint64_t v31 = sub_1C28CD750();
    uint64_t v51 = sub_1C27D36AC(v31, v32, aBlock);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2082;
    uint64_t v51 = (uint64_t)a1;
    id v33 = a1;
    sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
    uint64_t v34 = sub_1C28CD750();
    uint64_t v51 = sub_1C27D36AC(v34, v35, aBlock);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    sub_1C28B5690(a1, a2, 1);
    sub_1C28B5690(a1, a2, 1);
    _os_log_impl(&dword_1C27B7000, isEscapingClosureAtFileLocation, v28, "[%{public}s]: Failed to fetch photo: %{public}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v30, -1, -1);
    MEMORY[0x1C87609B0](v29, -1, -1);

    sub_1C28B5690(a1, a2, 1);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v49);
    return 0;
  }
  sub_1C27E2B38((uint64_t)a1, a2);
  sub_1C28CCD80();
  uint64_t v17 = sub_1C28CCE00();
  os_log_type_t v18 = sub_1C28CDCD0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v49 = v10;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    aBlock[0] = v20;
    unint64_t v48 = a2;
    *(_DWORD *)uint64_t v19 = 136446210;
    uint64_t v51 = type metadata accessor for HealthKitProfileInformation();
    sub_1C28B569C();
    uint64_t v21 = sub_1C28CD750();
    uint64_t v51 = sub_1C27D36AC(v21, v22, aBlock);
    a2 = v48;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v17, v18, "[%{public}s]: Photo fetched", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v20, -1, -1);
    MEMORY[0x1C87609B0](v19, -1, -1);

    uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
    v11 += 8;
    v23(v16, v49);
  }
  else
  {

    uint64_t v36 = *(void (**)(char *, uint64_t))(v11 + 8);
    v11 += 8;
    v36(v16, v10);
  }
  id v37 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  sub_1C27E2B38((uint64_t)a1, a2);
  uint64_t v38 = (void *)sub_1C28CC380();
  id v39 = objc_msgSend(v37, sel_initWithData_, v38);
  sub_1C28B5690(a1, a2, 0);

  if (!v39)
  {
    sub_1C28B5690(a1, a2, 0);
    return 0;
  }
  id v40 = objc_allocWithZone(MEMORY[0x1E4FB17D8]);
  id v41 = v39;
  id v42 = objc_msgSend(v40, sel_initWithSize_, a4, a5);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = v41;
  *((double *)v14 + 3) = a4;
  *((double *)v14 + 4) = a5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C28B5710;
  *(void *)(v10 + 24) = v14;
  aBlock[4] = (uint64_t)sub_1C28B573C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C2808570;
  aBlock[3] = (uint64_t)&block_descriptor_21;
  uint64_t v43 = _Block_copy(aBlock);
  id v44 = v41;
  swift_retain();
  swift_release();
  id v45 = objc_msgSend(v42, sel_imageWithActions_, v43);

  _Block_release(v43);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  sub_1C28B5690(a1, a2, 0);

  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  return v45;
}

uint64_t static HealthKitProfileInformation.pluginFeedItemUniqueIdentifierPrefix.getter()
{
  return 0x5F656C69666F7250;
}

uint64_t static HealthKitProfileInformation.pluginFeedItemUniqueIdentifier(for:)(void *a1)
{
  uint64_t v2 = sub_1C28CC4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0x5F656C69666F7250;
  v8[1] = 0xE800000000000000;
  id v6 = objc_msgSend(a1, sel_identifier);
  sub_1C28CC490();

  sub_1C28B5CEC(&qword_1EBB76FC0, MEMORY[0x1E4F27990]);
  sub_1C28CE610();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8[0];
}

uint64_t static HealthKitProfileInformation.decode(from:)()
{
  return swift_release();
}

uint64_t HealthKitProfileInformation.encode()()
{
  sub_1C28CBEE0();
  swift_allocObject();
  sub_1C28CBED0();
  type metadata accessor for HealthKitProfileInformation();
  sub_1C28B5CEC(&qword_1EBB768F0, (void (*)(uint64_t))type metadata accessor for HealthKitProfileInformation);
  uint64_t v0 = sub_1C28CBEC0();
  swift_release();
  return v0;
}

__n128 HealthKitProfileInformation.endSharingRelationshipState.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for HealthKitProfileInformation() + 44));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

uint64_t HealthKitProfileInformation.endSharingRelationshipState.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = type metadata accessor for HealthKitProfileInformation();
  uint64_t v6 = v1 + *(int *)(result + 44);
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = v3;
  *(unsigned char *)(v6 + 16) = v4;
  return result;
}

uint64_t (*HealthKitProfileInformation.endSharingRelationshipState.modify())(void)
{
  return nullsub_1;
}

uint64_t HealthKitProfileInformation.cloudSyncResponse.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HealthKitProfileInformation();
  return sub_1C28B59BC(v1 + *(int *)(v3 + 48), a1, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
}

uint64_t HealthKitProfileInformation.cloudSyncResponse.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HealthKitProfileInformation() + 48);

  return sub_1C28B5798(a1, v3);
}

uint64_t (*HealthKitProfileInformation.cloudSyncResponse.modify())(void)
{
  return nullsub_1;
}

void HealthKitProfileInformation.dateUpdated.getter(char *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1C28B5744(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - v5;
  sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = type metadata accessor for HealthKitProfileInformation();
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v14 = (void *)sub_1C28CD570();
  id v15 = objc_msgSend(v14, sel_type);

  uint64_t v16 = v2 + *(int *)(v13 + 48);
  if (v15 == (id)1)
  {
    sub_1C28B59BC(v16, (uint64_t)v12, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    uint64_t v17 = type metadata accessor for CloudSyncResponse();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v12, 1, v17) == 1)
    {
      uint64_t v18 = (uint64_t)v12;
LABEL_6:
      sub_1C28B58FC(v18, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      uint64_t v20 = sub_1C28CC450();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
      return;
    }
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    uint64_t v21 = (void *)sub_1C28CD570();
    sub_1C28B8310((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
    HKCloudSyncObserverStatus.lastPushOrPullDate.getter(a1);
  }
  else
  {
    sub_1C28B59BC(v16, (uint64_t)v10, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    uint64_t v19 = type metadata accessor for CloudSyncResponse();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v10, 1, v19) == 1)
    {
      uint64_t v18 = (uint64_t)v10;
      goto LABEL_6;
    }
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    unint64_t v22 = (void *)sub_1C28CD570();
    sub_1C28B8310((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
    id v23 = objc_msgSend(v22, sel_lastPulledUpdateDate);

    if (v23)
    {
      sub_1C28CC430();

      uint64_t v24 = sub_1C28CC450();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 0, 1, v24);
    }
    else
    {
      uint64_t v25 = sub_1C28CC450();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 1, 1, v25);
    }
    sub_1C288179C((uint64_t)v6, (uint64_t)a1);
  }
}

uint64_t HealthKitProfileInformation.localizedSyncStatus.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CC450();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v47 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28B5818();
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28B5744(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v46 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v45 - v10;
  sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  id v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = type metadata accessor for HealthKitProfileInformation();
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v19 = (void *)sub_1C28CD570();
  id v20 = objc_msgSend(v19, sel_type);

  uint64_t v21 = v1 + *(int *)(v18 + 48);
  sub_1C28B59BC(v21, (uint64_t)v17, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  uint64_t v22 = type metadata accessor for CloudSyncResponse();
  id v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  if (v23(v17, 1, v22) == 1)
  {
    sub_1C28B58FC((uint64_t)v17, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    goto LABEL_7;
  }
  char v24 = CloudSyncResponse.showSyncActivity(for:)((uint64_t)v20, 0);
  sub_1C28B8310((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
  if ((v24 & 1) == 0)
  {
LABEL_7:
    sub_1C28B59BC(v21, (uint64_t)v15, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    if (v23(v15, 1, v22) == 1)
    {
      sub_1C28B58FC((uint64_t)v15, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      unsigned int v26 = 2;
    }
    else
    {
      sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
      uint64_t v27 = (void *)sub_1C28CD570();
      sub_1C28B8310((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
      unsigned int v26 = objc_msgSend(v27, sel_syncEnabled);
    }
    HealthKitProfileInformation.dateUpdated.getter(v11);
    uint64_t v28 = (uint64_t)&v6[*(int *)(v48 + 48)];
    *uint64_t v6 = v26;
    sub_1C288179C((uint64_t)v11, v28);
    uint64_t v30 = v49;
    uint64_t v29 = v50;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v28, 1, v50) == 1)
    {
      if (!v26)
      {
        if (qword_1EBB75700 != -1) {
          swift_once();
        }
        sub_1C28CC200();
        uint64_t v25 = sub_1C28CD700();
        goto LABEL_25;
      }
      if (v26 != 2)
      {
        if (qword_1EBB75700 != -1) {
          swift_once();
        }
        sub_1C28CC200();
        sub_1C288ED60();
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1C28D23F0;
        uint64_t v32 = sub_1C28CC200();
        uint64_t v34 = v33;
        *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v31 + 64) = sub_1C28B076C();
        *(void *)(v31 + 32) = v32;
        *(void *)(v31 + 40) = v34;
        uint64_t v25 = sub_1C28CD700();
        swift_bridgeObjectRelease();
LABEL_25:
        swift_bridgeObjectRelease();
LABEL_34:
        sub_1C28B58FC(v28, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
        return v25;
      }
      goto LABEL_19;
    }
    uint64_t v35 = v46;
    sub_1C28B59BC(v28, v46, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    if (v26)
    {
      if (v26 == 2)
      {
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v35, v29);
LABEL_19:
        if (qword_1EBB75700 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_1C28CC200();
        sub_1C28B8310((uint64_t)v6, (uint64_t (*)(void))sub_1C28B5818);
        return v25;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v47, v35, v29);
      if (qword_1EBB75700 != -1) {
        swift_once();
      }
      sub_1C28CC200();
      sub_1C288ED60();
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1C28D23F0;
      if (qword_1EA30FCC8 == -1)
      {
LABEL_33:
        id v37 = (void *)qword_1EA31C2B8;
        uint64_t v38 = v47;
        id v39 = (void *)sub_1C28CC3F0();
        id v40 = objc_msgSend(v37, sel_stringFromDate_, v39);

        uint64_t v41 = sub_1C28CD730();
        uint64_t v43 = v42;

        *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v36 + 64) = sub_1C28B076C();
        *(void *)(v36 + 32) = v41;
        *(void *)(v36 + 40) = v43;
        uint64_t v25 = sub_1C28CD700();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v38, v29);
        goto LABEL_34;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v47, v35, v29);
      if (qword_1EBB75700 != -1) {
        swift_once();
      }
      sub_1C28CC200();
      sub_1C288ED60();
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1C28D23F0;
      if (qword_1EA30FCC8 == -1) {
        goto LABEL_33;
      }
    }
    swift_once();
    goto LABEL_33;
  }
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  return sub_1C28CC200();
}

uint64_t HealthKitProfileInformation.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CC6F0();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v25 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v26 = (uint64_t)&v25 - v5;
  uint64_t v30 = type metadata accessor for CloudSyncResponse();
  uint64_t v6 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v27 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_1C28CC4B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 24))
  {
    sub_1C28CE720();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C28CE720();
  }
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE710();
  }
  uint64_t v15 = type metadata accessor for HealthKitProfileInformation();
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v16 = (void *)sub_1C28CD570();
  id v17 = objc_msgSend(v16, sel_identifier);

  sub_1C28CC490();
  sub_1C28B5CEC(&qword_1EBB77070, MEMORY[0x1E4F27990]);
  sub_1C28CD680();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1C28B59BC(v1 + *(int *)(v15 + 48), (uint64_t)v10, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  uint64_t v18 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v10, 1, v30) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    uint64_t v19 = v27;
    sub_1C28B5958((uint64_t)v10, v27);
    sub_1C28CE720();
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    sub_1C28A4918();
    sub_1C28CD680();
    uint64_t v20 = v26;
    sub_1C28B59BC(v19 + *(int *)(v18 + 20), v26, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
    uint64_t v22 = v28;
    uint64_t v21 = v29;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v20, 1, v29) == 1)
    {
      sub_1C28CE720();
    }
    else
    {
      id v23 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v25, v20, v21);
      sub_1C28CE720();
      sub_1C28B5CEC(&qword_1EA311440, MEMORY[0x1E4F67128]);
      sub_1C28CD680();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v21);
    }
    sub_1C28CE720();
    sub_1C28B8310(v19, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
  }
  swift_retain();
  sub_1C288AC44();
  swift_release();
  sub_1C28CE710();
  return sub_1C28CE720();
}

unint64_t sub_1C28B3FCC(char a1)
{
  unint64_t result = 0x6D614E7473726966;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 2:
      unint64_t result = 1684632420;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x6564496573756572;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C28B40F8()
{
  return sub_1C28B3FCC(*v0);
}

uint64_t sub_1C28B4100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28B7EF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C28B4128(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1C28B4134(uint64_t a1)
{
  unint64_t v2 = sub_1C28B5A28();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28B4170(uint64_t a1)
{
  unint64_t v2 = sub_1C28B5A28();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HealthKitProfileInformation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C28B5AD0(0, &qword_1EBB76910, (uint64_t (*)(void))sub_1C28B5A28, (uint64_t)&type metadata for HealthKitProfileInformation.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28B5A28();
  sub_1C28CE800();
  LOBYTE(v15) = 0;
  sub_1C28CE5A0();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1C28CE560();
    LOBYTE(v15) = 2;
    sub_1C28CE580();
    *(void *)&long long v15 = *(void *)(v3 + 48);
    char v17 = 3;
    type metadata accessor for ProfileImageInformation();
    sub_1C28B5CEC(qword_1EBB74460, (void (*)(uint64_t))type metadata accessor for ProfileImageInformation);
    sub_1C28CE5E0();
    char v10 = *(unsigned char *)(v3 + 64);
    *(void *)&long long v15 = *(void *)(v3 + 56);
    BYTE8(v15) = v10;
    char v17 = 4;
    sub_1C28B5A7C();
    sub_1C28CE5E0();
    uint64_t v11 = type metadata accessor for HealthKitProfileInformation();
    LOBYTE(v15) = 5;
    sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
    sub_1C28B5B8C(&qword_1EBB74C60);
    sub_1C28CE5E0();
    LOBYTE(v15) = 6;
    sub_1C28CE5A0();
    uint64_t v12 = (long long *)(v3 + *(int *)(v11 + 44));
    char v13 = *((unsigned char *)v12 + 16);
    long long v15 = *v12;
    char v16 = v13;
    char v17 = 7;
    sub_1C27FB8A0();
    sub_1C28CE590();
    LOBYTE(v15) = 8;
    type metadata accessor for CloudSyncResponse();
    sub_1C28B5CEC(&qword_1EBB74318, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    sub_1C28CE590();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t HealthKitProfileInformation.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t HealthKitProfileInformation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v41 = (char *)&v38 - v4;
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v50 = v5;
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v38 - v6;
  sub_1C28B5AD0(0, &qword_1EBB77048, (uint64_t (*)(void))sub_1C28B5A28, (uint64_t)&type metadata for HealthKitProfileInformation.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v38 - v9;
  uint64_t v11 = type metadata accessor for HealthKitProfileInformation();
  uint64_t v12 = (int *)MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v14 + 2) = 0;
  *((void *)v14 + 3) = 0;
  *((void *)v14 + 4) = 0;
  v14[40] = 1;
  long long v15 = &v14[v12[10]];
  *(void *)long long v15 = 0x4E656C69666F7250;
  *((void *)v15 + 1) = 0xEF6C6C6543656D61;
  uint64_t v48 = v15;
  char v16 = &v14[v12[11]];
  *(_OWORD *)char v16 = xmmword_1C28D1A20;
  v16[16] = 0;
  uint64_t v42 = v12;
  uint64_t v17 = (uint64_t)&v14[v12[12]];
  uint64_t v18 = type metadata accessor for CloudSyncResponse();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v47 = v17;
  v19(v17, 1, 1, v18);
  uint64_t v20 = a1[3];
  uint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1C28B5A28();
  uint64_t v46 = v10;
  uint64_t v21 = v51;
  sub_1C28CE7F0();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    swift_bridgeObjectRelease();
    uint64_t v26 = v47;
    swift_bridgeObjectRelease();
    return sub_1C28B58FC(v26, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  }
  else
  {
    id v39 = v16;
    uint64_t v51 = v18;
    uint64_t v22 = v7;
    uint64_t v23 = v44;
    LOBYTE(v52) = 0;
    uint64_t v24 = sub_1C28CE4E0();
    uint64_t v25 = v50;
    *(void *)uint64_t v14 = v24;
    *((void *)v14 + 1) = v27;
    LOBYTE(v52) = 1;
    uint64_t v28 = sub_1C28CE4A0();
    uint64_t v29 = (uint64_t *)v48;
    *((void *)v14 + 2) = v28;
    *((void *)v14 + 3) = v30;
    LOBYTE(v52) = 2;
    *((void *)v14 + 4) = sub_1C28CE4C0();
    v14[40] = v31 & 1;
    type metadata accessor for ProfileImageInformation();
    char v54 = 3;
    sub_1C28B5CEC(&qword_1EBB75A40, (void (*)(uint64_t))type metadata accessor for ProfileImageInformation);
    sub_1C28CE520();
    *((void *)v14 + 6) = v52;
    char v54 = 4;
    sub_1C28B5B38();
    sub_1C28CE520();
    char v32 = BYTE8(v52);
    *((void *)v14 + 7) = v52;
    v14[64] = v32;
    LOBYTE(v52) = 5;
    sub_1C28B5B8C(&qword_1EBB75ED8);
    sub_1C28CE520();
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v14[v42[9]], v22, v25);
    LOBYTE(v52) = 6;
    *uint64_t v29 = sub_1C28CE4E0();
    v29[1] = v33;
    char v54 = 7;
    sub_1C27FBCC8();
    sub_1C28CE4D0();
    char v34 = v53;
    uint64_t v35 = v39;
    *(_OWORD *)id v39 = v52;
    v35[16] = v34;
    LOBYTE(v52) = 8;
    sub_1C28B5CEC(qword_1EBB75A80, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    uint64_t v36 = (uint64_t)v41;
    sub_1C28CE4D0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v46, v45);
    sub_1C28B5798(v36, v47);
    sub_1C28B5BE8((uint64_t)v14, v40);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    return sub_1C28B8310((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for HealthKitProfileInformation);
  }
}

uint64_t sub_1C28B4D68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HealthKitProfileInformation.init(from:)(a1, a2);
}

uint64_t sub_1C28B4D80(void *a1)
{
  return HealthKitProfileInformation.encode(to:)(a1);
}

uint64_t sub_1C28B4D98()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 64);
  uint64_t v3 = (uint64_t)v2;
  if (!v2)
  {
    swift_getKeyPath();
    uint64_t v4 = swift_retain();
    uint64_t v3 = sub_1C288BD70(v4);
    swift_release();
    swift_release();
  }
  id v5 = v2;
  return v3;
}

uint64_t sub_1C28B4E24(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C28B4E60()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28B4EA4()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28B4EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C28B59BC(v2 + *(int *)(a1 + 48), a2, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
}

__n128 sub_1C28B4F20@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(v2 + *(int *)(a1 + 44));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_1C28B4F3C()
{
  return swift_retain();
}

id sub_1C28B4F50()
{
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v0 = (void *)sub_1C28CD570();
  id v1 = objc_msgSend(v0, sel_type);

  return v1;
}

unint64_t sub_1C28B4FB8()
{
  unint64_t result = qword_1EBB77008;
  if (!qword_1EBB77008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB77008);
  }
  return result;
}

uint64_t _s16HealthExperience0A21KitProfileInformationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CloudSyncResponse();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28B8290();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  long long v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v43 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v43 - v19;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v21 = sub_1C28CE640(), uint64_t result = 0, (v21 & 1) != 0))
  {
    uint64_t v23 = *(void *)(a1 + 24);
    uint64_t v24 = *(void *)(a2 + 24);
    if (v23)
    {
      if (!v24) {
        return 0;
      }
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v23 != v24)
      {
        char v25 = sub_1C28CE640();
        uint64_t result = 0;
        if ((v25 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v24)
    {
      return 0;
    }
    char v26 = *(unsigned char *)(a2 + 40);
    if (*(unsigned char *)(a1 + 40))
    {
      if (!*(unsigned char *)(a2 + 40)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
        char v26 = 1;
      }
      if (v26) {
        return 0;
      }
    }
    if (_s16HealthExperience23ProfileImageInformationC2eeoiySbAC_ACtFZ_0(*(void **)(a1 + 48), *(void **)(a2 + 48)))
    {
      uint64_t result = 0;
      if (*(void *)(a1 + 56) != *(void *)(a2 + 56)
        || ((*(unsigned __int8 *)(a1 + 64) ^ *(unsigned __int8 *)(a2 + 64)) & 1) != 0)
      {
        return result;
      }
      v43[0] = type metadata accessor for HealthKitProfileInformation();
      uint64_t v27 = *(int *)(v43[0] + 36);
      v43[2] = a2 + v27;
      v43[3] = a1 + v27;
      v43[1] = sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77120);
      sub_1C27D0F4C(&qword_1EA310480, (unint64_t *)&qword_1EBB77120);
      if (sub_1C28CD590())
      {
        uint64_t v28 = v43[0];
        uint64_t v29 = *(int *)(v43[0] + 40);
        uint64_t v30 = *(void *)(a1 + v29);
        uint64_t v31 = *(void *)(a1 + v29 + 8);
        char v32 = (void *)(a2 + v29);
        if (v30 != *v32 || v31 != v32[1])
        {
          char v33 = sub_1C28CE640();
          uint64_t v28 = v43[0];
          char v34 = v33;
          uint64_t result = 0;
          if ((v34 & 1) == 0) {
            return result;
          }
        }
        uint64_t v35 = *(int *)(v28 + 44);
        uint64_t v36 = a1 + v35;
        uint64_t v37 = *(unsigned __int8 *)(a1 + v35);
        uint64_t v38 = (unsigned __int8 *)(a2 + v35);
        uint64_t v39 = *v38;
        if (v37 == 2)
        {
          if (v39 != 2) {
            return 0;
          }
        }
        else
        {
          if (v39 == 2 || ((((v39 & 1) == 0) ^ v37) & 1) == 0) {
            return 0;
          }
          if (*(unsigned char *)(v36 + 16))
          {
            if ((v38[16] & 1) == 0) {
              return 0;
            }
          }
          else
          {
            uint64_t result = 0;
            if ((v38[16] & 1) != 0 || *(void *)(v36 + 8) != *((void *)v38 + 1)) {
              return result;
            }
          }
        }
        sub_1C28B59BC(a1 + *(int *)(v28 + 48), (uint64_t)v20, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        sub_1C28B59BC(a2 + *(int *)(v43[0] + 48), (uint64_t)v18, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        uint64_t v40 = (uint64_t)&v11[*(int *)(v9 + 48)];
        sub_1C28B59BC((uint64_t)v20, (uint64_t)v11, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        sub_1C28B59BC((uint64_t)v18, v40, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v41((uint64_t)v11, 1, v4) == 1)
        {
          sub_1C28B58FC((uint64_t)v18, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
          sub_1C28B58FC((uint64_t)v20, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
          if (v41(v40, 1, v4) == 1)
          {
            sub_1C28B58FC((uint64_t)v11, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
            return 1;
          }
          goto LABEL_37;
        }
        sub_1C28B59BC((uint64_t)v11, (uint64_t)v15, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        if (v41(v40, 1, v4) == 1)
        {
          sub_1C28B58FC((uint64_t)v18, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
          sub_1C28B58FC((uint64_t)v20, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
          sub_1C28B8310((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
LABEL_37:
          sub_1C28B8310((uint64_t)v11, (uint64_t (*)(void))sub_1C28B8290);
          return 0;
        }
        sub_1C28B5958(v40, (uint64_t)v7);
        char v42 = _s16HealthExperience17CloudSyncResponseV2eeoiySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)v7);
        sub_1C28B8310((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
        sub_1C28B58FC((uint64_t)v18, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        sub_1C28B58FC((uint64_t)v20, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        sub_1C28B8310((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
        sub_1C28B58FC((uint64_t)v11, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        if (v42) {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for HealthKitProfileInformation()
{
  uint64_t result = qword_1EBB771E8;
  if (!qword_1EBB771E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C28B5690(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_1C27E2870((uint64_t)a1, a2);
  }
}

unint64_t sub_1C28B569C()
{
  unint64_t result = qword_1EA3115A0;
  if (!qword_1EA3115A0)
  {
    type metadata accessor for HealthKitProfileInformation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA3115A0);
  }
  return result;
}

uint64_t sub_1C28B56D8()
{
  return swift_deallocObject();
}

id sub_1C28B5710()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_drawInRect_, 0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1C28B572C()
{
  return swift_deallocObject();
}

uint64_t sub_1C28B573C(uint64_t a1)
{
  return sub_1C2808510(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1C28B5744(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C28B5798(uint64_t a1, uint64_t a2)
{
  sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C28B5818()
{
  if (!qword_1EA3115A8)
  {
    sub_1C28B58A4();
    sub_1C28B5744(255, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA3115A8);
    }
  }
}

void sub_1C28B58A4()
{
  if (!qword_1EBB75698)
  {
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75698);
    }
  }
}

uint64_t sub_1C28B58FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C28B5744(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C28B5958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CloudSyncResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C28B59BC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C28B5744(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C28B5A28()
{
  unint64_t result = qword_1EBB76FC8;
  if (!qword_1EBB76FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76FC8);
  }
  return result;
}

unint64_t sub_1C28B5A7C()
{
  unint64_t result = qword_1EBB76900;
  if (!qword_1EBB76900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76900);
  }
  return result;
}

void sub_1C28B5AD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C28B5B38()
{
  unint64_t result = qword_1EBB77020;
  if (!qword_1EBB77020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB77020);
  }
  return result;
}

uint64_t sub_1C28B5B8C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27CBEB0(255, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C28B5BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthKitProfileInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C28B5C50()
{
  unint64_t result = qword_1EA3115B0;
  if (!qword_1EA3115B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3115B0);
  }
  return result;
}

uint64_t sub_1C28B5CA4()
{
  return sub_1C28B5CEC(&qword_1EA3115B8, (void (*)(uint64_t))type metadata accessor for HealthKitProfileInformation);
}

uint64_t sub_1C28B5CEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C28B5D34@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C28B5D44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C28B5D54@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HealthKitProfileInformation();
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t result = sub_1C28CD570();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityMoveModeState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityMoveModeState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityMoveModeState()
{
  return &type metadata for ActivityMoveModeState;
}

void *initializeBufferWithCopyOfBuffer for HealthKitProfileInformation(uint64_t a1, uint64_t *a2, int *a3)
{
  BOOL v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a3[9];
    uint64_t v39 = a1 + v11;
    uint64_t v12 = (uint64_t)a2 + v11;
    *(void *)(a1 + 16) = v8;
    sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
    uint64_t v14 = v13;
    long long v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v15(v39, v12, v14);
    uint64_t v16 = a3[10];
    uint64_t v17 = a3[11];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    char v21 = (char *)v4 + v17;
    uint64_t v22 = (uint64_t)a2 + v17;
    v21[16] = *(unsigned char *)(v22 + 16);
    *(_OWORD *)char v21 = *(_OWORD *)v22;
    uint64_t v23 = a3[12];
    uint64_t v24 = (char *)v4 + v23;
    char v25 = (char *)a2 + v23;
    uint64_t v26 = type metadata accessor for CloudSyncResponse();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    if (v28(v25, 1, v26))
    {
      sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v24, v25, v31);
      uint64_t v32 = *(int *)(v26 + 20);
      char v33 = &v24[v32];
      char v34 = &v25[v32];
      uint64_t v35 = sub_1C28CC6F0();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
        memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v24[*(int *)(v26 + 24)] = v25[*(int *)(v26 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
  }
  return v4;
}

uint64_t destroy for HealthKitProfileInformation(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 48);
  uint64_t v7 = type metadata accessor for CloudSyncResponse();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
    uint64_t v10 = v6 + *(int *)(v7 + 20);
    uint64_t v11 = sub_1C28CC6F0();
    uint64_t v13 = *(void *)(v11 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      return v12(v10, v11);
    }
  }
  return result;
}

uint64_t initializeWithCopy for HealthKitProfileInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = a3[9];
  uint64_t v37 = a1 + v10;
  uint64_t v11 = a2 + v10;
  *(void *)(a1 + 16) = v7;
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  uint64_t v13 = v12;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v14(v37, v11, v13);
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  uint64_t v22 = a3[12];
  uint64_t v23 = (char *)(a1 + v22);
  uint64_t v24 = (char *)(a2 + v22);
  uint64_t v25 = type metadata accessor for CloudSyncResponse();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  if (v27(v24, 1, v25))
  {
    sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v23, v24, v29);
    uint64_t v30 = *(int *)(v25 + 20);
    uint64_t v31 = &v23[v30];
    uint64_t v32 = &v24[v30];
    uint64_t v33 = sub_1C28CC6F0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v23[*(int *)(v25 + 24)] = v24[*(int *)(v25 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

uint64_t assignWithCopy for HealthKitProfileInformation(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (long long *)(a2 + v14);
  long long v17 = *v16;
  *(unsigned char *)(v15 + 16) = *((unsigned char *)v16 + 16);
  *(_OWORD *)uint64_t v15 = v17;
  uint64_t v18 = a3[12];
  uint64_t v19 = (unsigned char *)(a1 + v18);
  uint64_t v20 = (unsigned char *)(a2 + v18);
  uint64_t v21 = type metadata accessor for CloudSyncResponse();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48);
  LODWORD(v9) = v23(v19, 1, v21);
  int v24 = v23(v20, 1, v21);
  if (!v9)
  {
    if (v24)
    {
      sub_1C28B8310((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
      goto LABEL_7;
    }
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 24))(v19, v20, v33);
    uint64_t v34 = *(int *)(v21 + 20);
    uint64_t v35 = &v19[v34];
    uint64_t v36 = &v20[v34];
    uint64_t v37 = sub_1C28CC6F0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    uint64_t v46 = v35;
    LODWORD(v35) = v39(v35, 1, v37);
    int v40 = v39(v36, 1, v37);
    if (v35)
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v46, v36, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v46, 0, 1, v37);
        goto LABEL_18;
      }
      sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
      size_t v42 = *(void *)(*(void *)(v41 - 8) + 64);
      uint64_t v43 = v46;
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v38 + 24))(v46, v36, v37);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v38 + 8))(v46, v37);
      sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
      size_t v42 = *(void *)(*(void *)(v44 - 8) + 64);
      uint64_t v43 = v46;
    }
    memcpy(v43, v36, v42);
LABEL_18:
    v19[*(int *)(v21 + 24)] = v20[*(int *)(v21 + 24)];
    return a1;
  }
  if (v24)
  {
LABEL_7:
    sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    memcpy(v19, v20, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 16))(v19, v20, v25);
  uint64_t v26 = *(int *)(v21 + 20);
  uint64_t v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  uint64_t v29 = sub_1C28CC6F0();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v19[*(int *)(v21 + 24)] = v20[*(int *)(v21 + 24)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t initializeWithTake for HealthKitProfileInformation(uint64_t a1, long long *a2, int *a3)
{
  long long v6 = *a2;
  long long v7 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  uint64_t v8 = *((void *)a2 + 7);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(long long *)((char *)a2 + a3[10]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  uint64_t v16 = a3[12];
  long long v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for CloudSyncResponse();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v17, v18, v22);
    uint64_t v23 = *(int *)(v19 + 20);
    int v24 = &v17[v23];
    uint64_t v25 = &v18[v23];
    uint64_t v26 = sub_1C28CC6F0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v17[*(int *)(v19 + 24)] = v18[*(int *)(v19 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t assignWithTake for HealthKitProfileInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[11];
  uint64_t v18 = a3[12];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v21 = (unsigned char *)(a1 + v18);
  uint64_t v22 = (unsigned char *)(a2 + v18);
  uint64_t v23 = type metadata accessor for CloudSyncResponse();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v10) = v25(v21, 1, v23);
  int v26 = v25(v22, 1, v23);
  if (!v10)
  {
    if (v26)
    {
      sub_1C28B8310((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CloudSyncResponse);
      goto LABEL_7;
    }
    sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 40))(v21, v22, v35);
    uint64_t v36 = *(int *)(v23 + 20);
    uint64_t v37 = &v21[v36];
    uint64_t v38 = &v22[v36];
    uint64_t v39 = sub_1C28CC6F0();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
    uint64_t v48 = v37;
    LODWORD(v37) = v41(v37, 1, v39);
    int v42 = v41(v38, 1, v39);
    if (v37)
    {
      if (!v42)
      {
        (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v48, v38, v39);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v48, 0, 1, v39);
        goto LABEL_18;
      }
      sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
      size_t v44 = *(void *)(*(void *)(v43 - 8) + 64);
      uint64_t v45 = v48;
    }
    else
    {
      if (!v42)
      {
        (*(void (**)(void *, char *, uint64_t))(v40 + 40))(v48, v38, v39);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v40 + 8))(v48, v39);
      sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
      size_t v44 = *(void *)(*(void *)(v46 - 8) + 64);
      uint64_t v45 = v48;
    }
    memcpy(v45, v38, v44);
LABEL_18:
    v21[*(int *)(v23 + 24)] = v22[*(int *)(v23 + 24)];
    return a1;
  }
  if (v26)
  {
LABEL_7:
    sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    memcpy(v21, v22, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  sub_1C27CBEB0(0, &qword_1EBB75EE8, &qword_1EBB77288);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(v21, v22, v27);
  uint64_t v28 = *(int *)(v23 + 20);
  uint64_t v29 = &v21[v28];
  uint64_t v30 = &v22[v28];
  uint64_t v31 = sub_1C28CC6F0();
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    sub_1C28B5744(0, &qword_1EBB768A0, MEMORY[0x1E4F67128]);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v21[*(int *)(v23 + 24)] = v22[*(int *)(v23 + 24)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthKitProfileInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C28B75DC);
}

uint64_t sub_1C28B75DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 48);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for HealthKitProfileInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C28B7750);
}

uint64_t sub_1C28B7750(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C27CBEB0(0, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1C28B5744(0, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C28B78B0()
{
  sub_1C27CBEB0(319, qword_1EBB75CF0, (unint64_t *)&qword_1EBB77120);
  if (v0 <= 0x3F)
  {
    sub_1C28B5744(319, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for HealthKitProfileInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C28B7ABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthKitProfileInformation.CodingKeys()
{
  return &type metadata for HealthKitProfileInformation.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ActivityMoveModeState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C28B7BC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityMoveModeState.CodingKeys()
{
  return &type metadata for ActivityMoveModeState.CodingKeys;
}

unint64_t sub_1C28B7BFC()
{
  unint64_t result = qword_1EA3115C0;
  if (!qword_1EA3115C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3115C0);
  }
  return result;
}

unint64_t sub_1C28B7C54()
{
  unint64_t result = qword_1EA3115C8;
  if (!qword_1EA3115C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3115C8);
  }
  return result;
}

unint64_t sub_1C28B7CAC()
{
  unint64_t result = qword_1EBB76FD8;
  if (!qword_1EBB76FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76FD8);
  }
  return result;
}

unint64_t sub_1C28B7D04()
{
  unint64_t result = qword_1EBB76FD0;
  if (!qword_1EBB76FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76FD0);
  }
  return result;
}

unint64_t sub_1C28B7D5C()
{
  unint64_t result = qword_1EBB77018;
  if (!qword_1EBB77018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB77018);
  }
  return result;
}

unint64_t sub_1C28B7DB4()
{
  unint64_t result = qword_1EBB77010;
  if (!qword_1EBB77010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB77010);
  }
  return result;
}

uint64_t sub_1C28B7E08(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C28DC300 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001C28DE030)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C28B7EF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E7473726966 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xE800000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684632420 && a2 == 0xE400000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C28DE050 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C28DE070 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C28DB8F0 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C28DB8D0 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C28DE090)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

void sub_1C28B8290()
{
  if (!qword_1EA3115D0)
  {
    sub_1C28B5744(255, &qword_1EBB75AB8, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA3115D0);
    }
  }
}

uint64_t sub_1C28B8310(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ObservableConvertible.then<A>(on:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v13 = static LegacyObservable.create()(&v21);
  uint64_t v15 = v14;
  uint64_t v19 = v21;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 16))(&v21, a4, a6);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  uint64_t v16[5] = a2;
  void v16[6] = a3;
  v16[7] = a1;
  v16[8] = v13;
  v16[9] = v15;
  id v17 = a1;
  swift_retain();
  swift_retain();
  sub_1C27D1FA8();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a7 = v19;
  return result;
}

uint64_t sub_1C28B848C(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v3);
  swift_retain();
  sub_1C27D1FA8();
  return swift_release_n();
}

uint64_t sub_1C28B84FC()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28B8544(uint64_t a1)
{
  return sub_1C28B848C(a1, *(void (**)(uint64_t *__return_ptr))(v1 + 40));
}

uint64_t ObservableConvertible.then<A>(on:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, void *a6@<X8>)
{
  uint64_t v11 = static LegacyObservable.create()(&v18);
  uint64_t v13 = v12;
  uint64_t v16 = v18;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16))(&v18, a3, a5);
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = v11;
  void v14[6] = v13;
  v14[7] = a1;
  void v14[8] = a2;
  swift_retain();
  swift_retain();
  sub_1C27D1FA8();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a6 = v16;
  return result;
}

uint64_t sub_1C28B8690(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void *)(a7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790]();
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v10);
  a2(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a7);
}

uint64_t sub_1C28B8770()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28B87B0(uint64_t a1)
{
  return sub_1C28B8D6C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1C28B8690);
}

uint64_t ObservableConvertible.joinWith<A>(on:_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v10 = *a2;
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v11 = static LegacyObservable.create()(&v22);
  uint64_t v13 = v12;
  uint64_t v14 = v22;
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  uint64_t v15[5] = v11;
  v15[6] = v13;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  uint64_t v16[5] = v10;
  void v16[6] = a1;
  v16[7] = sub_1C28B8B24;
  v16[8] = v15;
  id v17 = self;
  id v18 = a1;
  swift_retain();
  swift_retain();
  id v19 = objc_msgSend(v17, sel_currentQueue);
  ObservableConvertible.afterChange(on:_:)((uint64_t)v19, (uint64_t)sub_1C28B8D54, (uint64_t)v16, a3, a5);
  swift_release();
  swift_release();

  uint64_t result = swift_release();
  *a6 = v14;
  return result;
}

uint64_t sub_1C28B895C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))((char *)&v16 - v13, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(&v14[*(int *)(TupleTypeMetadata2 + 48)], a2, a6);
  a3(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, TupleTypeMetadata2);
}

uint64_t sub_1C28B8AEC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28B8B24(uint64_t a1, uint64_t a2)
{
  return sub_1C28B895C(a1, a2, *(void (**)(char *))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C28B8B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a4;
  uint64_t v25 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v17 = (char *)&v24 - v16;
  uint64_t v26 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v24 - v16, a1, AssociatedTypeWitness);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  id v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a6;
  *((void *)v19 + 3) = a7;
  uint64_t v20 = v24;
  *((void *)v19 + 4) = a8;
  *((void *)v19 + 5) = v20;
  *((void *)v19 + 6) = a5;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v19[v18], v17, AssociatedTypeWitness);
  uint64_t v21 = type metadata accessor for LegacyObservable();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  ObservableConvertible.afterChange(on:_:)(v25, (uint64_t)sub_1C28B9FDC, (uint64_t)v19, v21, WitnessTable);
  swift_release();
  return swift_release();
}

uint64_t sub_1C28B8D0C()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28B8D54(uint64_t a1)
{
  return sub_1C28B8D6C(a1, sub_1C28B8B34);
}

uint64_t sub_1C28B8D6C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[7], v2[8], v2[2], v2[3], v2[4]);
}

uint64_t ObservableConvertible.joinWith<A, B>(on:_:_:)@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void *a7@<X8>)
{
  uint64_t v11 = *a2;
  uint64_t v25 = *a1;
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_currentQueue);
  ObservableConvertible.joinWith<A>(on:_:)(v13, &v25, a3, a4, a6, &v24);

  v23[0] = v11;
  v23[1] = v24;
  id v14 = objc_msgSend(v12, sel_currentQueue);
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v15 = type metadata accessor for LegacyObservable();
  uint64_t WitnessTable = swift_getWitnessTable();
  ObservableConvertible.joinWith<A>(on:_:)(v14, v23, v15, a5, WitnessTable, &v25);
  swift_release();

  uint64_t v24 = v25;
  id v17 = (void *)swift_allocObject();
  void v17[2] = a3;
  v17[3] = a4;
  v17[4] = a5;
  uint64_t v17[5] = a6;
  swift_getTupleTypeMetadata2();
  uint64_t v18 = type metadata accessor for LegacyObservable();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v20 = swift_getWitnessTable();
  ObservableConvertible.then<A>(on:_:)((uint64_t)sub_1C28B9424, (uint64_t)v17, v18, TupleTypeMetadata3, v20, a7);
  swift_release();
  return swift_release();
}

uint64_t sub_1C28B8FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v48 = TupleTypeMetadata2;
  uint64_t v10 = swift_getTupleTypeMetadata2() - 8;
  uint64_t v47 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v63 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v61 = (char *)&v43 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v43 - v15;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v18 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v49 = a4;
  uint64_t v51 = &a4[v18];
  char v53 = &a4[*(int *)(TupleTypeMetadata3 + 64)];
  uint64_t v19 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v20 = &v16[v19];
  char v54 = &v16[v19];
  uint64_t v55 = AssociatedTypeWitness;
  uint64_t v21 = *(int *)(v10 + 56);
  uint64_t v22 = &v16[v21];
  long long v52 = &v16[v21];
  uint64_t v23 = a1 + v21;
  uint64_t v44 = a1 + v21;
  uint64_t v24 = a1 + v19;
  uint64_t v60 = a1;
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v50 = v25;
  uint64_t v26 = *(void (**)(void))(v25 + 16);
  uint64_t v58 = v24;
  uint64_t v59 = v26;
  ((void (*)(char *, uint64_t, uint64_t))v26)(v16, a1, AssociatedTypeWitness);
  uint64_t v46 = a2;
  uint64_t v62 = *(void *)(a2 - 8);
  char v57 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v57(v20, v24, a2);
  uint64_t v45 = a3;
  uint64_t v27 = *(void *)(a3 - 8);
  char v56 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v56(v22, v23, a3);
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v49, v16, v55);
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  uint64_t v30 = &v61[*(int *)(v48 + 48)];
  uint64_t v49 = &v61[*(int *)(v47 + 56)];
  uint64_t v31 = v49;
  v59();
  uint64_t v32 = v46;
  v57(v30, v58, v46);
  uint64_t v33 = v31;
  uint64_t v34 = v44;
  uint64_t v35 = v45;
  v56(v33, v44, v45);
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v51, v30, v32);
  uint64_t v36 = &v63[*(int *)(v29 + 48)];
  uint64_t v37 = &v63[*(int *)(v28 + 56)];
  uint64_t v38 = v55;
  v59();
  v57(v36, v58, v32);
  v56(v37, v34, v35);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v53, v37, v35);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v62 + 8);
  v39(v36, v32);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v50 + 8);
  v40(v63, v38);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v27 + 8);
  v41(v49, v35);
  v40(v61, v38);
  v41(v52, v35);
  return ((uint64_t (*)(char *, uint64_t))v39)(v54, v32);
}

uint64_t sub_1C28B9414()
{
  return swift_deallocObject();
}

uint64_t sub_1C28B9424@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1C28B8FB0(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t ObservableConvertible.joinWith<A, B, C>(on:_:_:_:)@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  uint64_t v13 = *a2;
  uint64_t v27 = *a3;
  v31[0] = *a1;
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_currentQueue);
  uint64_t v28 = a4;
  ObservableConvertible.joinWith<A>(on:_:)(v15, v31, a4, a5, a9, &v34);

  uint64_t v32 = v13;
  uint64_t v33 = v34;
  id v16 = [v14 aA];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v17 = type metadata accessor for LegacyObservable();
  uint64_t WitnessTable = swift_getWitnessTable();
  ObservableConvertible.joinWith<A>(on:_:)(v16, &v32, v17, a6, WitnessTable, v31);
  swift_release();

  uint64_t v32 = v27;
  uint64_t v33 = v31[0];
  id v19 = objc_msgSend(v14, sel_currentQueue);
  swift_getTupleTypeMetadata2();
  uint64_t v20 = type metadata accessor for LegacyObservable();
  uint64_t v21 = swift_getWitnessTable();
  ObservableConvertible.joinWith<A>(on:_:)(v19, &v32, v20, a7, v21, &v34);
  swift_release();

  uint64_t v33 = v34;
  uint64_t v22 = (void *)swift_allocObject();
  _OWORD v22[2] = v28;
  v22[3] = a5;
  v22[4] = a6;
  v22[5] = a7;
  v22[6] = a9;
  swift_getTupleTypeMetadata2();
  uint64_t v23 = type metadata accessor for LegacyObservable();
  v31[0] = AssociatedTypeWitness;
  v31[1] = a5;
  v31[2] = a6;
  v31[3] = a7;
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v25 = swift_getWitnessTable();
  ObservableConvertible.then<A>(on:_:)((uint64_t)sub_1C28B9EE8, (uint64_t)v22, v23, TupleTypeMetadata, v25, a8);
  swift_release();
  return swift_release();
}

uint64_t sub_1C28B9704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v91 = TupleTypeMetadata2;
  uint64_t v12 = a3;
  uint64_t v102 = a3;
  uint64_t v13 = swift_getTupleTypeMetadata2();
  uint64_t v103 = v13;
  uint64_t v107 = a4;
  uint64_t v14 = swift_getTupleTypeMetadata2() - 8;
  uint64_t v90 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  id v99 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v95 = (char *)&v74 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v96 = (char *)&v74 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v74 - v21;
  uint64_t v109 = AssociatedTypeWitness;
  uint64_t v110 = a2;
  uint64_t v111 = v12;
  uint64_t v112 = a4;
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v24 = TupleTypeMetadata[12];
  uint64_t v81 = a5;
  uint64_t v77 = &a5[v24];
  uint64_t v82 = &a5[TupleTypeMetadata[16]];
  uint64_t v83 = &a5[TupleTypeMetadata[20]];
  uint64_t v25 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v26 = &v22[v25];
  uint64_t v85 = &v22[v25];
  uint64_t v27 = *(int *)(v13 + 48);
  uint64_t v28 = &v22[v27];
  uint64_t v84 = &v22[v27];
  uint64_t v29 = *(int *)(v14 + 56);
  uint64_t v98 = &v22[v29];
  uint64_t v87 = a1 + v29;
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a1 + v25;
  uint64_t v104 = a1 + v27;
  uint64_t v105 = (uint64_t (*)(char *, uint64_t))(a1 + v25);
  uint64_t v32 = a1;
  uint64_t v88 = a1;
  uint64_t v100 = AssociatedTypeWitness;
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v80 = v33;
  uint64_t v34 = *(void (**)(void))(v33 + 16);
  uint64_t v89 = v33 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v34)(v22, v32, AssociatedTypeWitness);
  uint64_t v101 = a2;
  uint64_t v97 = *(void *)(a2 - 8);
  uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  uint64_t v94 = v97 + 16;
  v93(v26, v31, a2);
  uint64_t v35 = v102;
  uint64_t v108 = *(void *)(v102 - 8);
  uint64_t v86 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
  uint64_t v92 = v108 + 16;
  v86(v28, v30, v102);
  uint64_t v78 = *(void *)(v107 - 8);
  os_log_type_t v74 = *(void (**)(char *, uint64_t))(v78 + 16);
  uint64_t v106 = (void (*)(char *, uint64_t))(v78 + 16);
  uint64_t v36 = v87;
  v74(v98, v87);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v81, v22, v100);
  uint64_t v37 = v91;
  uint64_t v76 = &v96[*(int *)(v91 + 48)];
  uint64_t v38 = v76;
  uint64_t v81 = &v96[*(int *)(v103 + 48)];
  uint64_t v39 = v81;
  uint64_t v40 = v90;
  uint64_t v79 = &v96[*(int *)(v90 + 56)];
  uint64_t v41 = v79;
  uint64_t v75 = v34;
  v34();
  int v42 = v38;
  uint64_t v43 = v101;
  v93(v42, (uint64_t)v105, v101);
  uint64_t v44 = v35;
  uint64_t v45 = v86;
  v86(v39, v104, v44);
  uint64_t v46 = v36;
  uint64_t v47 = (void (*)(char *, uint64_t, uint64_t))v74;
  ((void (*)(char *, uint64_t, uint64_t))v74)(v41, v46, v107);
  uint64_t v48 = v43;
  (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v77, v76, v43);
  uint64_t v77 = &v95[*(int *)(v37 + 48)];
  uint64_t v49 = v77;
  uint64_t v50 = &v95[*(int *)(v103 + 48)];
  uint64_t v51 = &v95[*(int *)(v40 + 56)];
  uint64_t v76 = v51;
  v34();
  uint64_t v52 = v48;
  char v53 = v93;
  v93(v49, (uint64_t)v105, v52);
  uint64_t v54 = v102;
  v45(v50, v104, v102);
  uint64_t v55 = v51;
  uint64_t v56 = v87;
  v47(v55, v87, v107);
  char v57 = v50;
  uint64_t v58 = v54;
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v82, v57, v54);
  uint64_t v59 = &v99[*(int *)(v91 + 48)];
  uint64_t v60 = &v99[*(int *)(v103 + 48)];
  unint64_t v61 = &v99[*(int *)(v90 + 56)];
  v75();
  uint64_t v62 = v101;
  v53(v59, (uint64_t)v105, v101);
  v86(v60, v104, v58);
  uint64_t v63 = v107;
  v47(v61, v56, v107);
  uint64_t v64 = v78;
  uint64_t v65 = v63;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v83, v61, v63);
  os_log_t v66 = *(void (**)(char *, uint64_t))(v108 + 8);
  v108 += 8;
  uint64_t v106 = v66;
  v66(v60, v58);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v97 + 8);
  v67(v59, v62);
  uint64_t v105 = (uint64_t (*)(char *, uint64_t))v67;
  uint64_t v68 = *(void (**)(char *, uint64_t))(v80 + 8);
  uint64_t v69 = v100;
  v68(v99, v100);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v64 + 8);
  v70(v76, v65);
  v67(v77, v62);
  v68(v95, v69);
  v70(v79, v65);
  uint64_t v71 = v102;
  uint64_t v72 = v106;
  v106(v81, v102);
  v68(v96, v69);
  v70(v98, v65);
  v72(v84, v71);
  return v105(v85, v101);
}

uint64_t sub_1C28B9ED8()
{
  return swift_deallocObject();
}

uint64_t sub_1C28B9EE8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1C28B9704(a1, v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1C28B9EF8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1C28B9FDC(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v1 + 40))(v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

id sub_1C28BA064(uint64_t a1)
{
  return sub_1C28BA084(a1, 1, &qword_1EA31C2C0);
}

id sub_1C28BA074(uint64_t a1)
{
  return sub_1C28BA084(a1, 3, &qword_1EA31C2C8);
}

id sub_1C28BA084(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v5, sel_setDateStyle_, a2);
  id result = objc_msgSend(v5, sel_setTimeStyle_, a2);
  *a3 = v5;
  return result;
}

id sub_1C28BA0F4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  id result = objc_msgSend(v0, sel_setDoesRelativeDateFormatting_, 1);
  qword_1EA31C2D0 = (uint64_t)v0;
  return result;
}

id sub_1C28BA158()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 0);
  objc_msgSend(v0, sel_setTimeStyle_, 1);
  id result = objc_msgSend(v0, sel_setDoesRelativeDateFormatting_, 1);
  qword_1EA31C2D8 = (uint64_t)v0;
  return result;
}

Swift::String __swiftcall Displayable.shortStartDateString()()
{
  uint64_t v2 = sub_1C28BA2B4(v0, v1, &qword_1EA30FD20, (void **)&qword_1EA31C2C0, MEMORY[0x1E4F26E58], (uint64_t)sub_1C28BA064);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Displayable.shortEndDateString()()
{
  uint64_t v2 = sub_1C28BA2B4(v0, v1, &qword_1EA30FD20, (void **)&qword_1EA31C2C0, MEMORY[0x1E4F26E50], (uint64_t)sub_1C28BA064);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Displayable.longStartDateString()()
{
  uint64_t v2 = sub_1C28BA2B4(v0, v1, &qword_1EA30FD28, (void **)&qword_1EA31C2C8, MEMORY[0x1E4F26E58], (uint64_t)sub_1C28BA074);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Displayable.longEndDateString()()
{
  uint64_t v2 = sub_1C28BA2B4(v0, v1, &qword_1EA30FD28, (void **)&qword_1EA31C2C8, MEMORY[0x1E4F26E50], (uint64_t)sub_1C28BA074);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t sub_1C28BA2B4(uint64_t a1, uint64_t a2, void *a3, void **a4, void (*a5)(uint64_t), uint64_t a6)
{
  v23[1] = a6;
  uint64_t v24 = a1;
  uint64_t v25 = a5;
  uint64_t v9 = sub_1C28CC450();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C28CBFB0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v17 = *a4;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v24, a2);
  v25(v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v19 = (void *)sub_1C28CC3F0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v20 = objc_msgSend(v17, sel_stringFromDate_, v19);

  uint64_t v21 = sub_1C28CD730();
  return v21;
}

Swift::String __swiftcall Displayable.relativeStartDateString()()
{
  uint64_t v2 = sub_1C28BA4FC(v0, v1, MEMORY[0x1E4F26E58]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Displayable.relativeEndDateString()()
{
  uint64_t v2 = sub_1C28BA4FC(v0, v1, MEMORY[0x1E4F26E50]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t sub_1C28BA4FC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v35 = a3;
  uint64_t v34 = a1;
  uint64_t v4 = sub_1C28CBFB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C28CC450();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v29 - v13;
  sub_1C28CC440();
  sub_1C28CC3E0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  uint64_t v31 = a2 + 8;
  uint64_t v32 = a2;
  uint64_t v30 = v16;
  uint64_t v17 = v16(v34, a2);
  v35(v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v33 = v4;
  v18(v7, v4);
  char v19 = sub_1C28CC400();
  v15(v12, v8);
  v15(v14, v8);
  if (v19)
  {
    if (qword_1EA30FD30 != -1) {
      swift_once();
    }
    id v20 = (void *)qword_1EA31C2D0;
    uint64_t v21 = v30(v34, v32);
    v35(v21);
    v18(v7, v33);
    uint64_t v22 = (void *)sub_1C28CC3F0();
    v15(v14, v8);
  }
  if (qword_1EA30FD38 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)qword_1EA31C2D8;
  uint64_t v24 = v30(v34, v32);
  v35(v24);
  v18(v7, v33);
  uint64_t v25 = (void *)sub_1C28CC3F0();
  v15(v14, v8);
  id v26 = objc_msgSend(v23, sel_stringFromDate_, v25);

  uint64_t v27 = sub_1C28CD730();
  return v27;
}

uint64_t dispatch thunk of Displayable.dateRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Displayable.smallDescriptionString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Displayable.longDescriptionString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1C28BA8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C28CE050();
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
    sub_1C27D0F4C((unint64_t *)&qword_1EBB76B00, (unint64_t *)&qword_1EBB76D90);
    sub_1C28CDB30();
    uint64_t v2 = v60;
    uint64_t v57 = v61;
    uint64_t v4 = v62;
    uint64_t v5 = v63;
    unint64_t v6 = v64;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v57 = a2 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v56 = (unint64_t)(v4 + 64) >> 6;
LABEL_8:
  unint64_t v10 = a1 & 0xC000000000000001;
  uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0) {
    uint64_t v11 = a1;
  }
  uint64_t v58 = v11;
  while (1)
  {
    uint64_t v12 = v5;
    if (v2 < 0)
    {
      if (!sub_1C28CE080()) {
        goto LABEL_63;
      }
      sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v15 = v65;
      swift_unknownObjectRelease();
      if (!v65) {
        goto LABEL_63;
      }
      goto LABEL_34;
    }
    if (v6)
    {
      unint64_t v13 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_33;
    }
    int64_t v16 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_65;
    }
    if (v16 >= v56) {
      goto LABEL_63;
    }
    unint64_t v17 = *(void *)(v57 + 8 * v16);
    ++v5;
    if (!v17)
    {
      uint64_t v5 = v12 + 2;
      if (v12 + 2 >= v56) {
        goto LABEL_63;
      }
      unint64_t v17 = *(void *)(v57 + 8 * v5);
      if (!v17)
      {
        uint64_t v5 = v12 + 3;
        if (v12 + 3 >= v56) {
          goto LABEL_63;
        }
        unint64_t v17 = *(void *)(v57 + 8 * v5);
        if (!v17)
        {
          uint64_t v5 = v12 + 4;
          if (v12 + 4 >= v56) {
            goto LABEL_63;
          }
          unint64_t v17 = *(void *)(v57 + 8 * v5);
          if (!v17)
          {
            uint64_t v5 = v12 + 5;
            if (v12 + 5 >= v56) {
              goto LABEL_63;
            }
            unint64_t v17 = *(void *)(v57 + 8 * v5);
            if (!v17) {
              break;
            }
          }
        }
      }
    }
LABEL_32:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_33:
    id v15 = *(id *)(*(void *)(v2 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_63;
    }
LABEL_34:
    char v19 = self;
    swift_bridgeObjectRetain();
    id v20 = v15;
    id v21 = objc_msgSend(v19, sel_sampleTypeChangeWithSampleType_dateInterval_hasUnfrozenSeries_, v20, 0, 0);
    if (v21)
    {
      id v27 = v21;
      uint64_t v28 = (void *)a1;
      if (v10)
      {
        if (a1 < 0) {
          uint64_t v29 = a1;
        }
        else {
          uint64_t v29 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        uint64_t v30 = sub_1C28CE060();
        if (__OFADD__(v30, 1)) {
          goto LABEL_66;
        }
        uint64_t v28 = (void *)sub_1C28726A4(v29, v30 + 1);
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v65 = v28;
      unint64_t v33 = sub_1C2872308((uint64_t)v20);
      uint64_t v34 = v28[2];
      BOOL v35 = (v32 & 1) == 0;
      uint64_t v36 = v34 + v35;
      if (!__OFADD__(v34, v35))
      {
        if (v28[3] < v36)
        {
          char v59 = v32;
          sub_1C28728F4(v36, isUniquelyReferenced_nonNull_native);
          unint64_t v37 = sub_1C2872308((uint64_t)v20);
          if ((v59 & 1) != (v38 & 1))
          {
LABEL_69:
            sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
            uint64_t result = sub_1C28CE680();
            __break(1u);
            return result;
          }
          unint64_t v33 = v37;
          if ((v59 & 1) == 0) {
            goto LABEL_60;
          }
LABEL_55:
          uint64_t v45 = v28[7];
          uint64_t v46 = 8 * v33;

          *(void *)(v45 + v46) = v27;
          goto LABEL_62;
        }
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v32) {
            goto LABEL_55;
          }
        }
        else
        {
          char v49 = v32;
          sub_1C2875680();
          if (v49) {
            goto LABEL_55;
          }
        }
LABEL_60:
        v28[(v33 >> 6) + 8] |= 1 << v33;
        uint64_t v50 = 8 * v33;
        *(void *)(v28[6] + v50) = v20;
        *(void *)(v28[7] + v50) = v27;
        uint64_t v51 = v28[2];
        BOOL v52 = __OFADD__(v51, 1);
        uint64_t v53 = v51 + 1;
        if (v52)
        {
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        uint64_t v28[2] = v53;
        id v54 = v20;
LABEL_62:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        a1 = (uint64_t)v28;
        goto LABEL_8;
      }
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v10)
    {
      id v22 = v20;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C28CE320();

      if (v23)
      {
        swift_unknownObjectRelease();
        uint64_t v39 = sub_1C28CE060();
        uint64_t v40 = sub_1C28726A4(v58, v39);
        swift_retain();
        unint64_t v41 = sub_1C2872308((uint64_t)v22);
        char v43 = v42;
        swift_release();
        if (v43)
        {

          uint64_t v44 = *(void **)(*(void *)(v40 + 56) + 8 * v41);
          sub_1C28BDCF0(v41, v40);

          swift_bridgeObjectRelease_n();
          a1 = v40;
          goto LABEL_8;
        }
        goto LABEL_67;
      }

      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1C2872308((uint64_t)v20);
      char v26 = v25;
      swift_bridgeObjectRelease();
      if (v26)
      {
        uint64_t v65 = (void *)a1;
        uint64_t v47 = a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C2875680();
          uint64_t v47 = a1;
        }

        uint64_t v48 = *(void **)(*(void *)(v47 + 56) + 8 * v24);
        sub_1C28BDCF0(v24, v47);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v47;
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v18 = v12 + 6;
  while (v56 != v18)
  {
    unint64_t v17 = *(void *)(v57 + 8 * v18++);
    if (v17)
    {
      uint64_t v5 = v18 - 1;
      goto LABEL_32;
    }
  }
LABEL_63:
  sub_1C27D9684();
  return a1;
}

void sub_1C28BAF44(uint64_t a1)
{
}

void sub_1C28BAF68(uint64_t a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v2 = objc_msgSend(v1, sel__modificationDateForCharacteristicWithType_error_, a1, v7);
  id v3 = v7[0];
  if (v2)
  {
    uint64_t v4 = v2;
    sub_1C28CC430();
    id v5 = v3;
  }
  else
  {
    id v6 = v7[0];
    sub_1C28CC290();

    swift_willThrow();
  }
}

unint64_t sub_1C28BB034()
{
  unint64_t result = sub_1C28BB054();
  qword_1EBB75200 = result;
  return result;
}

unint64_t sub_1C28BB054()
{
  sub_1C27D1C9C(0, (unint64_t *)&unk_1EBB756A0);
  uint64_t v0 = (void *)MEMORY[0x1C875F280]((id)*MEMORY[0x1E4F2A918]);
  sub_1C28BF408(0, &qword_1EBB757B0, (uint64_t (*)(uint64_t))sub_1C28BF80C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C28D5110;
  id v2 = (void *)*MEMORY[0x1E4F298A8];
  *(void *)(inited + 32) = *MEMORY[0x1E4F298A8];
  sub_1C27D87FC();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C28D19D0;
  *(void *)(v3 + 32) = v0;
  uint64_t v10 = v3;
  sub_1C28CD940();
  uint64_t v4 = (void *)*MEMORY[0x1E4F298B8];
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 48) = v4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C28D19D0;
  *(void *)(v5 + 32) = v0;
  uint64_t v11 = v5;
  sub_1C28CD940();
  *(void *)(inited + 56) = v11;
  id v6 = v2;
  id v7 = v0;
  id v8 = v4;
  return sub_1C2806E70(inited);
}

uint64_t static CharacteristicChangePublisher.defaultMapping.getter()
{
  if (qword_1EBB75210 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicChangePublisher.CacheData.lastUpdatedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C28CC450();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t CharacteristicChangePublisher.CacheData.init(lastUpdatedDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C28CC450();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_1C28BB2DC()
{
  return 0x616470557473616CLL;
}

uint64_t sub_1C28BB300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x616470557473616CLL && a2 == 0xEF65746144646574)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C28CE640();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C28BB3BC(uint64_t a1)
{
  unint64_t v2 = sub_1C28BB5BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28BB3F8(uint64_t a1)
{
  unint64_t v2 = sub_1C28BB5BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CharacteristicChangePublisher.CacheData.encode(to:)(void *a1)
{
  sub_1C28BB8BC(0, &qword_1EA3115D8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28BB5BC();
  sub_1C28CE800();
  sub_1C28CC450();
  sub_1C28BB96C(&qword_1EA310368, MEMORY[0x1E4F27928]);
  sub_1C28CE5E0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C28BB5BC()
{
  unint64_t result = qword_1EA3115E0;
  if (!qword_1EA3115E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3115E0);
  }
  return result;
}

uint64_t CharacteristicChangePublisher.CacheData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_1C28CC450();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28BB8BC(0, &qword_1EA3115E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28BB5BC();
  sub_1C28CE7F0();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_1C28BB96C(&qword_1EA3103F8, MEMORY[0x1E4F27928]);
    sub_1C28CE520();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_1C28BB9B4((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1C28BB8BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C28BB5BC();
    unint64_t v7 = a3(a1, &type metadata for CharacteristicChangePublisher.CacheData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for CharacteristicChangePublisher.CacheData()
{
  uint64_t result = qword_1EBB75218;
  if (!qword_1EBB75218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C28BB96C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C28BB9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C28BBA18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CharacteristicChangePublisher.CacheData.init(from:)(a1, a2);
}

uint64_t sub_1C28BBA30(void *a1)
{
  sub_1C28BB8BC(0, &qword_1EA3115D8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28BB5BC();
  sub_1C28CE800();
  sub_1C28CC450();
  sub_1C28BB96C(&qword_1EA310368, MEMORY[0x1E4F27928]);
  sub_1C28CE5E0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CharacteristicChangePublisher.publisher.getter()
{
  return swift_retain();
}

void sub_1C28BBBC0(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1C28BF8A8(v4, a1);

  os_unfair_lock_unlock(v5);
}

uint64_t CharacteristicChangePublisher.__allocating_init(characteristicToAffectedSampleTypes:cacheData:healthStore:context:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  swift_allocObject();
  uint64_t v12 = sub_1C28BE3C4(a1, a2, a3, a4, a5, a6);

  return v12;
}

uint64_t CharacteristicChangePublisher.init(characteristicToAffectedSampleTypes:cacheData:healthStore:context:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = sub_1C28BE3C4(a1, a2, a3, a4, a5, a6);

  return v7;
}

uint64_t sub_1C28BBD28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v221 = a5;
  uint64_t v199 = a4;
  uint64_t v219 = a2;
  v217 = a1;
  uint64_t v205 = a6;
  uint64_t v7 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  MEMORY[0x1F4188790](v7 - 8);
  v204 = (char *)&v190 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C28CC450();
  uint64_t v10 = *(NSObject **)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v191 = (char *)&v190 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v196 = (char *)&v190 - v14;
  MEMORY[0x1F4188790](v13);
  v206 = (char *)&v190 - v15;
  uint64_t v16 = sub_1C28CCE10();
  uint64_t v17 = *(void (***)(char *, uint64_t))(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v201 = (char *)&v190 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v192 = (char *)&v190 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v193 = (char *)&v190 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  char v26 = (char *)&v190 - v25;
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  v202 = (char *)&v190 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  v222 = (char *)&v190 - v30;
  MEMORY[0x1F4188790](v29);
  char v32 = (char *)&v190 - v31;
  sub_1C28BF408(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v34 = MEMORY[0x1F4188790](v33 - 8);
  uint64_t v194 = (uint64_t)&v190 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v195 = (char *)&v190 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)&v190 - v39;
  uint64_t v41 = MEMORY[0x1F4188790](v38);
  v216 = (char *)&v190 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v215 = (char *)&v190 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v47 = (char *)&v190 - v46;
  MEMORY[0x1F4188790](v45);
  unint64_t v49 = (unint64_t)&v190 - v48;
  Class isa = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7].isa;
  uint64_t v233 = (uint64_t)&v10[7];
  isa((char *)&v190 - v48, 1, 1, v9);
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0) {
    goto LABEL_88;
  }
LABEL_2:
  uint64_t v207 = MEMORY[0x1E4FBC870];
LABEL_3:
  unint64_t v208 = v49;
  uint64_t v50 = *(void *)(v221 + 64);
  uint64_t v210 = v221 + 64;
  uint64_t v51 = 1 << *(unsigned char *)(v221 + 32);
  uint64_t v52 = -1;
  if (v51 < 64) {
    uint64_t v52 = ~(-1 << v51);
  }
  unint64_t v49 = v52 & v50;
  int64_t v211 = (unint64_t)(v51 + 63) >> 6;
  v234 = v17 + 1;
  v218 = v10 + 6;
  v200 = v10 + 4;
  v197 = v10 + 2;
  v203 = v10 + 1;
  swift_bridgeObjectRetain();
  int64_t v53 = 0;
  uint64_t v17 = 0;
  *(void *)&long long v54 = 136446723;
  long long v212 = v54;
  uint64_t v209 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v220 = v16;
  uint64_t v231 = v9;
  v213 = v26;
  v223 = v32;
  v198 = v40;
  v224 = v47;
  unint64_t v214 = a3;
  if (v49)
  {
LABEL_6:
    uint64_t v230 = (v49 - 1) & v49;
    int64_t v228 = v53;
    unint64_t v55 = __clz(__rbit64(v49)) | (v53 << 6);
    goto LABEL_18;
  }
  while (1)
  {
    BOOL v56 = __OFADD__(v53, 1);
    int64_t v57 = v53 + 1;
    if (v56)
    {
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      if (sub_1C28CE3B0())
      {
        sub_1C281C44C(MEMORY[0x1E4FBC860]);
        uint64_t v207 = v189;
        goto LABEL_3;
      }
      goto LABEL_2;
    }
    if (v57 >= v211) {
      goto LABEL_60;
    }
    unint64_t v58 = *(void *)(v210 + 8 * v57);
    if (v58) {
      goto LABEL_17;
    }
    int64_t v59 = v57 + 1;
    if (v57 + 1 >= v211) {
      goto LABEL_60;
    }
    unint64_t v58 = *(void *)(v210 + 8 * v59);
    if (!v58)
    {
      int64_t v59 = v57 + 2;
      if (v57 + 2 >= v211) {
        goto LABEL_60;
      }
      unint64_t v58 = *(void *)(v210 + 8 * v59);
      if (!v58) {
        break;
      }
    }
LABEL_16:
    int64_t v57 = v59;
LABEL_17:
    uint64_t v230 = (v58 - 1) & v58;
    int64_t v228 = v57;
    unint64_t v55 = __clz(__rbit64(v58)) + (v57 << 6);
LABEL_18:
    uint64_t v60 = 8 * v55;
    uint64_t v61 = *(void **)(*(void *)(v221 + 48) + v60);
    unint64_t v62 = *(void *)(*(void *)(v221 + 56) + v60);
    sub_1C27D1C9C(0, &qword_1EA311608);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    unint64_t v64 = v61;
    swift_bridgeObjectRetain();
    uint64_t v65 = (char *)objc_msgSend(ObjCClassFromMetadata, sel_characteristicTypeForIdentifier_, v64);
    if (!v65)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v119 = v202;
      sub_1C28CCD80();
      uint64_t v120 = v64;
      swift_bridgeObjectRetain_n();
      v121 = v120;
      v122 = sub_1C28CCE00();
      os_log_type_t v123 = sub_1C28CDCC0();
      if (os_log_type_enabled(v122, v123))
      {
        uint64_t v124 = swift_slowAlloc();
        uint64_t v125 = swift_slowAlloc();
        uint64_t v236 = v125;
        *(_DWORD *)uint64_t v124 = 136446722;
        uint64_t v126 = sub_1C28CE830();
        id v235 = (id)sub_1C27D36AC(v126, v127, &v236);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v124 + 12) = 2082;
        swift_bridgeObjectRetain();
        id v235 = (id)sub_1C27D36AC(v219, a3, &v236);
        sub_1C28CDF90();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v124 + 22) = 2082;
        uint64_t v128 = sub_1C28CD730();
        id v235 = (id)sub_1C27D36AC(v128, v129, &v236);
        sub_1C28CDF90();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C27B7000, v122, v123, "[%{public}s] %{public}s Unable to make characteristic type for identifier %{public}s", (uint8_t *)v124, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v125, -1, -1);
        MEMORY[0x1C87609B0](v124, -1, -1);

        (*v234)(v202, v16);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*v234)(v119, v16);
      }
      swift_release();
LABEL_75:
      sub_1C28BF6A8(v208, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      uint64_t v170 = v205;
      uint64_t v159 = sub_1C28CC7D0();
      v160 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56);
      uint64_t v161 = v170;
      return v160(v161, 1, 1, v159);
    }
    uint64_t v40 = v65;
    unint64_t v227 = v62;
    v229 = v64;
    isa(v47, 1, 1, v9);
    sub_1C28CCD80();
    swift_bridgeObjectRetain_n();
    os_log_t v66 = v40;
    uint64_t v67 = sub_1C28CCE00();
    os_log_type_t v68 = sub_1C28CDC90();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v70 = (void *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v236 = v71;
      *(_DWORD *)uint64_t v69 = v212;
      uint64_t v72 = sub_1C28CE830();
      *(void *)(v69 + 4) = sub_1C27D36AC(v72, v73, &v236);
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v69 + 14) = sub_1C27D36AC(v219, a3, &v236);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v69 + 22) = 2113;
      *(void *)(v69 + 24) = v66;
      *uint64_t v70 = v40;

      _os_log_impl(&dword_1C27B7000, v67, v68, "[%{public}s] %{public}s Getting modification for %{private}@", (uint8_t *)v69, 0x20u);
      sub_1C27D9154(0, (unint64_t *)&qword_1EBB75EF0, (unint64_t *)&qword_1EBB77130, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v70, -1, -1);
      swift_arrayDestroy();
      uint64_t v74 = v220;
      MEMORY[0x1C87609B0](v71, -1, -1);
      MEMORY[0x1C87609B0](v69, -1, -1);

      uint64_t v75 = *v234;
      uint64_t v76 = v223;
      uint64_t v77 = v74;
      uint64_t v78 = v74;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v75 = *v234;
      uint64_t v76 = v32;
      uint64_t v77 = v16;
      uint64_t v78 = v16;
    }
    v226 = v75;
    v75(v76, v78);
    uint64_t v79 = v217[3];
    uint64_t v80 = v217[4];
    __swift_project_boxed_opaque_existential_1(v217, v79);
    uint64_t v81 = (uint64_t)v215;
    uint64_t v82 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 8))(v66, v79, v80);
    uint64_t v83 = (uint64_t)v216;
    if (v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v130 = v201;
      sub_1C28CCD80();
      unint64_t v131 = v214;
      swift_bridgeObjectRetain();
      unint64_t v132 = v131;
      v133 = v66;
      uint64_t v134 = v17;
      swift_bridgeObjectRetain();
      uint64_t v135 = v133;
      uint64_t v136 = v17;
      v137 = sub_1C28CCE00();
      os_log_type_t v138 = sub_1C28CDCB0();
      if (os_log_type_enabled(v137, v138))
      {
        uint64_t v139 = swift_slowAlloc();
        Class isa = (void (*)(char *, uint64_t, uint64_t, uint64_t))swift_slowAlloc();
        uint64_t v233 = swift_slowAlloc();
        uint64_t v236 = v233;
        *(_DWORD *)uint64_t v139 = 136446979;
        uint64_t v140 = sub_1C28CE830();
        id v235 = (id)sub_1C27D36AC(v140, v141, &v236);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v139 + 12) = 2082;
        swift_bridgeObjectRetain();
        id v235 = (id)sub_1C27D36AC(v219, v132, &v236);
        sub_1C28CDF90();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v139 + 22) = 2113;
        id v235 = v135;
        v142 = v135;
        sub_1C28CDF90();
        v143 = isa;
        *(void *)Class isa = v40;

        *(_WORD *)(v139 + 32) = 2082;
        id v235 = v17;
        uint64_t v144 = v17;
        sub_1C27C7060();
        uint64_t v145 = sub_1C28CD750();
        id v235 = (id)sub_1C27D36AC(v145, v146, &v236);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C27B7000, v137, v138, "[%{public}s] %{public}s Error when retrieving modification date for %{private}@: %{public}s", (uint8_t *)v139, 0x2Au);
        sub_1C27D9154(0, (unint64_t *)&qword_1EBB75EF0, (unint64_t *)&qword_1EBB77130, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v143, -1, -1);
        uint64_t v147 = v233;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v147, -1, -1);
        MEMORY[0x1C87609B0](v139, -1, -1);

        (*v234)(v201, v220);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v226(v130, v220);
      }
      v158 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C28BF6A8((uint64_t)v224, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      swift_release();
      sub_1C28BF6A8(v208, (unint64_t *)&qword_1EBB771E0, v158);
      uint64_t v159 = sub_1C28CC7D0();
      v160 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56);
      uint64_t v161 = v205;
      return v160(v161, 1, 1, v159);
    }
    v225 = 0;
    uint64_t v84 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
    uint64_t v47 = v224;
    sub_1C28BF6A8((uint64_t)v224, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    uint64_t v85 = v231;
    isa((char *)v81, 0, 1, v231);
    sub_1C288179C(v81, (uint64_t)v47);
    sub_1C28BF718((uint64_t)v47, v83, (unint64_t *)&qword_1EBB771E0, v84);
    uint64_t v86 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v218->isa;
    unsigned int v87 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v218->isa)(v83, 1, v85);
    unint64_t v88 = v227;
    if (v87 == 1)
    {
      swift_bridgeObjectRelease();
      sub_1C28BF6A8(v83, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      uint64_t v89 = v222;
      sub_1C28CCD80();
      unint64_t v90 = v214;
      swift_bridgeObjectRetain_n();
      uint64_t v91 = v82;
      uint64_t v10 = sub_1C28CCE00();
      os_log_type_t v92 = sub_1C28CDCD0();
      if (os_log_type_enabled(v10, v92))
      {
        uint64_t v93 = swift_slowAlloc();
        uint64_t v94 = (void *)swift_slowAlloc();
        uint64_t v95 = swift_slowAlloc();
        uint64_t v236 = v95;
        *(_DWORD *)uint64_t v93 = v212;
        uint64_t v96 = sub_1C28CE830();
        *(void *)(v93 + 4) = sub_1C27D36AC(v96, v97, &v236);
        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v93 + 14) = sub_1C27D36AC(v219, v90, &v236);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v93 + 22) = 2113;
        *(void *)(v93 + 24) = v91;
        void *v94 = v40;

        _os_log_impl(&dword_1C27B7000, v10, v92, "[%{public}s] %{public}s No modification date found for %{private}@", (uint8_t *)v93, 0x20u);
        sub_1C27D9154(0, (unint64_t *)&qword_1EBB75EF0, (unint64_t *)&qword_1EBB77130, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        uint64_t v98 = v94;
        uint64_t v16 = v220;
        MEMORY[0x1C87609B0](v98, -1, -1);
        swift_arrayDestroy();
        uint64_t v99 = v95;
        uint64_t v47 = v224;
        MEMORY[0x1C87609B0](v99, -1, -1);
        uint64_t v100 = v93;
        uint64_t v9 = v231;
        MEMORY[0x1C87609B0](v100, -1, -1);

        v226(v222, v16);
        sub_1C28BF6A8((uint64_t)v47, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
        a3 = v90;
        char v26 = v213;
        char v32 = v223;
      }
      else
      {
        uint64_t v16 = v77;

        swift_bridgeObjectRelease_n();
        v226(v89, v77);
        sub_1C28BF6A8((uint64_t)v47, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
        a3 = v90;
        char v26 = v213;
        char v32 = v223;
        uint64_t v9 = v231;
      }
      int64_t v53 = v228;
      uint64_t v17 = (void (**)(char *, uint64_t))v225;
      unint64_t v49 = v230;
      if (v230) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v101 = (uint64_t (*)(char *, uint64_t, uint64_t))v200->isa;
      uint64_t v102 = v231;
      ((void (*)(char *, uint64_t, uint64_t))v200->isa)(v206, v83, v231);
      uint64_t v103 = (uint64_t)v198;
      sub_1C28BF718(v208, (uint64_t)v198, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      uint64_t v16 = v77;
      if (v86(v103, 1, v102) == 1)
      {
        uint64_t v104 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
        uint64_t v105 = v208;
        sub_1C28BF6A8(v208, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
        sub_1C28BF6A8(v103, (unint64_t *)&qword_1EBB771E0, v104);
        ((void (*)(uint64_t, char *, uint64_t))v197->isa)(v105, v206, v102);
        isa((char *)v105, 0, 1, v102);
      }
      else
      {
        uint64_t v106 = v196;
        v101(v196, v103, v102);
        sub_1C28BB96C(&qword_1EBB75860, MEMORY[0x1E4F27928]);
        uint64_t v107 = v206;
        if (sub_1C28CD6C0()) {
          uint64_t v108 = v107;
        }
        else {
          uint64_t v108 = v106;
        }
        uint64_t v109 = (uint64_t)v195;
        ((void (*)(char *, char *, uint64_t))v197->isa)(v195, v108, v102);
        ((void (*)(char *, uint64_t))v203->isa)(v106, v102);
        uint64_t v110 = v208;
        sub_1C28BF6A8(v208, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
        isa((char *)v109, 0, 1, v102);
        sub_1C288179C(v109, v110);
      }
      uint64_t v9 = v102;
      uint64_t v111 = v199 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v199 + 16);
      uint64_t v112 = (os_unfair_lock_s *)(v199 + ((*(unsigned int *)(*(void *)v199 + 48) + 3) & 0x1FFFFFFFCLL));
      os_unfair_lock_lock(v112);
      uint64_t v40 = v204;
      uint64_t v10 = 0;
      uint64_t v17 = (void (**)(char *, uint64_t))v225;
      sub_1C28BDC5C(v111, (uint64_t)v204);
      os_unfair_lock_unlock(v112);
      uint64_t result = sub_1C28CC400();
      if (result)
      {
        uint64_t v236 = v207;
        char v32 = v223;
        uint64_t v10 = v229;
        unint64_t v49 = v230;
        if (v88 >> 62)
        {
          swift_bridgeObjectRetain();
          unint64_t v49 = v230;
          uint64_t v114 = sub_1C28CE3B0();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v114) {
            goto LABEL_52;
          }
LABEL_42:
          if (v114 < 1)
          {
            __break(1u);
            return result;
          }
          if ((v88 & 0xC000000000000001) != 0)
          {
            for (uint64_t i = 0; i != v114; ++i)
            {
              uint64_t v116 = (void *)MEMORY[0x1C875F6E0](i, v88);
              sub_1C28265A8(&v235, v116);
            }
          }
          else
          {
            for (uint64_t j = 0; j != v114; ++j)
            {
              v118 = *(void **)(v88 + 8 * j + 32);
              sub_1C28265A8(&v235, v118);
            }
          }

          swift_bridgeObjectRelease();
          uint64_t v10 = v229;
          unint64_t v49 = v230;
        }
        else
        {
          uint64_t v114 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v114) {
            goto LABEL_42;
          }
LABEL_52:

          swift_bridgeObjectRelease();
        }

        uint64_t v207 = v236;
        char v26 = v213;
        uint64_t v47 = v224;
        goto LABEL_54;
      }

      swift_bridgeObjectRelease();
      char v26 = v213;
      char v32 = v223;
      uint64_t v47 = v224;
      unint64_t v49 = v230;
LABEL_54:
      a3 = v214;
      sub_1C28BF538((uint64_t)v204);
      ((void (*)(char *, uint64_t))v203->isa)(v206, v9);
      sub_1C28BF6A8((uint64_t)v47, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      int64_t v53 = v228;
      if (v49) {
        goto LABEL_6;
      }
    }
  }
  int64_t v59 = v57 + 3;
  if (v57 + 3 < v211)
  {
    unint64_t v58 = *(void *)(v210 + 8 * v59);
    if (!v58)
    {
      while (1)
      {
        int64_t v57 = v59 + 1;
        if (__OFADD__(v59, 1)) {
          goto LABEL_87;
        }
        if (v57 >= v211) {
          goto LABEL_60;
        }
        unint64_t v58 = *(void *)(v210 + 8 * v57);
        ++v59;
        if (v58) {
          goto LABEL_17;
        }
      }
    }
    goto LABEL_16;
  }
LABEL_60:
  swift_release();
  uint64_t v148 = v207;
  unint64_t v149 = v207 & 0xC000000000000001;
  if ((v207 & 0xC000000000000001) == 0)
  {
    if (*(void *)(v207 + 16)) {
      goto LABEL_62;
    }
LABEL_70:
    swift_bridgeObjectRelease();
    v162 = v192;
    sub_1C28CCD80();
    swift_bridgeObjectRetain_n();
    v163 = sub_1C28CCE00();
    os_log_type_t v164 = sub_1C28CDCD0();
    if (os_log_type_enabled(v163, v164))
    {
      uint64_t v165 = swift_slowAlloc();
      uint64_t v166 = swift_slowAlloc();
      uint64_t v236 = v166;
      *(_DWORD *)uint64_t v165 = 136446466;
      uint64_t v167 = sub_1C28CE830();
      id v235 = (id)sub_1C27D36AC(v167, v168, &v236);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v165 + 12) = 2082;
      swift_bridgeObjectRetain();
      id v235 = (id)sub_1C27D36AC(v219, a3, &v236);
      sub_1C28CDF90();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C27B7000, v163, v164, "[%{public}s] %{public}s Characteristic change detected but no relevant sample types affected", (uint8_t *)v165, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v166, -1, -1);
      MEMORY[0x1C87609B0](v165, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*v234)(v162, v16);
    goto LABEL_75;
  }
  if (!sub_1C28CE060()) {
    goto LABEL_70;
  }
LABEL_62:
  swift_bridgeObjectRetain();
  sub_1C28BA8FC(MEMORY[0x1E4FBC868], v148);
  swift_bridgeObjectRelease();
  sub_1C28CCD80();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v150 = sub_1C28CCE00();
  os_log_type_t v151 = sub_1C28CDCD0();
  if (os_log_type_enabled(v150, v151))
  {
    uint64_t v233 = (uint64_t)v17;
    uint64_t v152 = swift_slowAlloc();
    uint64_t v153 = swift_slowAlloc();
    uint64_t v236 = v153;
    *(_DWORD *)uint64_t v152 = 136446722;
    uint64_t v154 = sub_1C28CE830();
    id v235 = (id)sub_1C27D36AC(v154, v155, &v236);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v152 + 12) = 2082;
    swift_bridgeObjectRetain();
    id v235 = (id)sub_1C27D36AC(v219, a3, &v236);
    sub_1C28CDF90();
    unint64_t v156 = a3;
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v152 + 22) = 2050;
    if (v149) {
      v157 = (void *)sub_1C28CE060();
    }
    else {
      v157 = *(void **)(v207 + 16);
    }
    swift_bridgeObjectRelease();
    id v235 = v157;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v150, v151, "[%{public}s] %{public}s Emitting changes for %{public}ld sample type(s)", (uint8_t *)v152, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v153, -1, -1);
    MEMORY[0x1C87609B0](v152, -1, -1);

    v169 = *v234;
    (*v234)(v213, v220);
    a3 = v156;
    uint64_t v9 = v231;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v169 = *v234;
    (*v234)(v26, v220);
  }
  uint64_t v171 = v208;
  uint64_t v172 = v194;
  sub_1C28BF718(v208, v194, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v218->isa)(v172, 1, v9) == 1)
  {
    sub_1C28BF6A8(v172, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    v173 = v193;
    sub_1C28CCD80();
    swift_bridgeObjectRetain_n();
    v174 = sub_1C28CCE00();
    os_log_type_t v175 = sub_1C28CDCC0();
    if (os_log_type_enabled(v174, v175))
    {
      uint64_t v176 = swift_slowAlloc();
      uint64_t v177 = swift_slowAlloc();
      uint64_t v236 = v177;
      *(_DWORD *)uint64_t v176 = 136446466;
      uint64_t v178 = sub_1C28CE830();
      id v235 = (id)sub_1C27D36AC(v178, v179, &v236);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v176 + 12) = 2082;
      swift_bridgeObjectRetain();
      id v235 = (id)sub_1C27D36AC(v219, a3, &v236);
      sub_1C28CDF90();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C27B7000, v174, v175, "[%{public}s] %{public}s Had changes but somehow no updated date", (uint8_t *)v176, 0x16u);
      swift_arrayDestroy();
      uint64_t v180 = v177;
      uint64_t v171 = v208;
      MEMORY[0x1C87609B0](v180, -1, -1);
      MEMORY[0x1C87609B0](v176, -1, -1);

      v181 = v193;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v181 = v173;
    }
    v169(v181, v220);
  }
  else
  {
    v182 = v191;
    uint64_t v183 = ((uint64_t (*)(char *, uint64_t, uint64_t))v200->isa)(v191, v172, v9);
    MEMORY[0x1F4188790](v183);
    *(&v190 - 2) = (uint64_t)v182;
    uint64_t v184 = v199 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v199 + 16);
    v185 = (os_unfair_lock_s *)(v199 + ((*(unsigned int *)(*(void *)v199 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v185);
    sub_1C28BF798(v184);
    v186 = v185;
    uint64_t v171 = v208;
    os_unfair_lock_unlock(v186);
    ((void (*)(char *, uint64_t))v203->isa)(v182, v9);
  }
  uint64_t v187 = v205;
  sub_1C28CC7A0();
  sub_1C28BF6A8(v171, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v188 = sub_1C28CC7D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v188 - 8) + 56))(v187, 0, 1, v188);
}

uint64_t sub_1C28BDC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C28BF4D4(a1, a2);
}

uint64_t CharacteristicChangePublisher.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t CharacteristicChangePublisher.__deallocating_deinit()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1C28BDCF0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1C28CE030();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1C28CDF20();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *uint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C28BDEA4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C28CE030();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C28CE700();
        swift_bridgeObjectRetain();
        sub_1C28CD790();
        uint64_t v9 = sub_1C28CE740();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C28BE07C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC4B0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_1C28CE030();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_1C28BB96C(&qword_1EBB77070, MEMORY[0x1E4F27990]);
        uint64_t v19 = sub_1C28CD670();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(sub_1C28CC450() - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1C28BE3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v44 = a6;
  uint64_t v55 = a5;
  uint64_t v52 = a4;
  uint64_t v53 = a1;
  uint64_t v58 = a3;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C28BF408(0, &qword_1EBB756B0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v47 = (char *)&v44 - v9;
  uint64_t v48 = sub_1C28CDE70();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28BF25C();
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v49 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28BF35C();
  uint64_t v56 = *(void *)(v13 - 8);
  uint64_t v57 = v13;
  MEMORY[0x1F4188790](v13);
  long long v54 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C28CCC40();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  int64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28BF408(0, &qword_1EBB75228, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicChangePublisher.CacheData, v7);
  MEMORY[0x1F4188790](v19 - 8);
  BOOL v21 = (char *)&v44 - v20;
  uint64_t v22 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  int64_t v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a2;
  sub_1C28BF718(a2, (uint64_t)v21, &qword_1EBB75228, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicChangePublisher.CacheData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1C28CC440();
    sub_1C28BF6A8((uint64_t)v21, &qword_1EBB75228, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicChangePublisher.CacheData);
  }
  else
  {
    sub_1C28BB9B4((uint64_t)v21, (uint64_t)v25);
  }
  sub_1C28BF46C();
  uint64_t v26 = swift_allocObject();
  *(_DWORD *)(v26 + ((*(unsigned int *)(*(void *)v26 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1C28BF4D4((uint64_t)v25, v26 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v26 + 16));
  sub_1C28BF538((uint64_t)v25);
  uint64_t v27 = v60;
  *(void *)(v60 + 24) = v26;
  sub_1C28CCC60();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E4F667F0], v15);
  id v28 = v44;
  *(void *)&v61[0] = sub_1C28CCC50();
  uint64_t v29 = v45;
  sub_1C28CDE60();
  id v62 = v28;
  uint64_t v30 = sub_1C28CDE50();
  uint64_t v31 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v47, 1, 1, v30);
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77310);
  sub_1C28BB96C(&qword_1EBB767E0, MEMORY[0x1E4F66810]);
  sub_1C27D0F4C((unint64_t *)&qword_1EBB756B8, (unint64_t *)&qword_1EBB77310);
  uint64_t v32 = v49;
  sub_1C28CD3E0();
  sub_1C28BF6A8(v31, &qword_1EBB756B0, MEMORY[0x1E4FBCC28]);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v48);
  uint64_t v33 = *(void *)(v27 + 24);
  uint64_t v34 = v58;
  sub_1C27CE8A4(v58, (uint64_t)v61);
  uint64_t v35 = (void *)swift_allocObject();
  sub_1C27CAE60(v61, (uint64_t)(v35 + 2));
  uint64_t v36 = v55;
  v35[7] = v52;
  v35[8] = v36;
  uint64_t v37 = v53;
  v35[9] = v33;
  v35[10] = v37;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_1C28BF5E4;
  *(void *)(v38 + 24) = v35;
  sub_1C28CC7D0();
  sub_1C28BB96C(&qword_1EBB754F8, (void (*)(uint64_t))sub_1C28BF25C);
  swift_retain();
  unint64_t v39 = v54;
  uint64_t v40 = v51;
  sub_1C28CD310();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v40);
  sub_1C28BB96C(&qword_1EBB75358, (void (*)(uint64_t))sub_1C28BF35C);
  uint64_t v41 = v57;
  uint64_t v42 = sub_1C28CD300();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v34);
  sub_1C28BF6A8(v59, &qword_1EBB75228, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicChangePublisher.CacheData);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v41);
  *(void *)(v27 + 16) = v42;
  return v27;
}

uint64_t dispatch thunk of CharacteristicChangePublisherHealthStoreProxy._modificationDateForCharacteristic(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for CharacteristicChangePublisher()
{
  return self;
}

uint64_t method lookup function for CharacteristicChangePublisher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CharacteristicChangePublisher);
}

uint64_t dispatch thunk of CharacteristicChangePublisher.cacheData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of CharacteristicChangePublisher.__allocating_init(characteristicToAffectedSampleTypes:cacheData:healthStore:context:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t initializeBufferWithCopyOfBuffer for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for CharacteristicChangePublisher.CacheData(uint64_t a1)
{
  uint64_t v2 = sub_1C28CC450();
  int64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C28BEF04);
}

uint64_t sub_1C28BEF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C28BEF84);
}

uint64_t sub_1C28BEF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C28BEFF4()
{
  uint64_t result = sub_1C28CC450();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CharacteristicChangePublisher.CacheData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C28BF11CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicChangePublisher.CacheData.CodingKeys()
{
  return &type metadata for CharacteristicChangePublisher.CacheData.CodingKeys;
}

unint64_t sub_1C28BF158()
{
  unint64_t result = qword_1EA3115F0;
  if (!qword_1EA3115F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3115F0);
  }
  return result;
}

unint64_t sub_1C28BF1B0()
{
  unint64_t result = qword_1EA3115F8;
  if (!qword_1EA3115F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3115F8);
  }
  return result;
}

unint64_t sub_1C28BF208()
{
  unint64_t result = qword_1EA311600;
  if (!qword_1EA311600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311600);
  }
  return result;
}

void sub_1C28BF25C()
{
  if (!qword_1EBB75500)
  {
    sub_1C28CCC60();
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB77310);
    sub_1C28BB96C(&qword_1EBB767E0, MEMORY[0x1E4F66810]);
    sub_1C27D0F4C((unint64_t *)&qword_1EBB756B8, (unint64_t *)&qword_1EBB77310);
    unint64_t v0 = sub_1C28CCF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75500);
    }
  }
}

void sub_1C28BF35C()
{
  if (!qword_1EBB75360)
  {
    sub_1C28BF25C();
    sub_1C28CC7D0();
    sub_1C28BB96C(&qword_1EBB754F8, (void (*)(uint64_t))sub_1C28BF25C);
    unint64_t v0 = sub_1C28CCEA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75360);
    }
  }
}

void sub_1C28BF408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C28BF46C()
{
  if (!qword_1EBB75710)
  {
    type metadata accessor for CharacteristicChangePublisher.CacheData();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C28CE1A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75710);
    }
  }
}

uint64_t sub_1C28BF4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C28BF538(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C28BF594()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C28BF5E4@<X0>(uint64_t a1@<X8>)
{
  int v3 = v1 + 2;
  uint64_t v4 = v1[7];
  unint64_t v5 = v1[8];
  uint64_t v7 = v1[9];
  uint64_t v6 = v1[10];
  type metadata accessor for CharacteristicChangePublisher();
  return sub_1C28BBD28(v3, v4, v5, v7, v6, a1);
}

uint64_t sub_1C28BF648()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28BF680()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C28BF6A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C28BF408(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C28BF718(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C28BF408(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C28BF798(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1C28BF538(a1);
  uint64_t v4 = sub_1C28CC450();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_1C28BF80C()
{
  if (!qword_1EBB756F0)
  {
    type metadata accessor for HKCharacteristicTypeIdentifier(255);
    sub_1C27D9154(255, (unint64_t *)&qword_1EBB76D58, (unint64_t *)&qword_1EBB76D90, 0x1E4F2B448, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB756F0);
    }
  }
}

uint64_t sub_1C28BF8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C28BDC5C(a1, a2);
}

uint64_t PromotionalTileConfiguration.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PromotionalTileConfiguration.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PromotionalTileConfiguration.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PromotionalTileConfiguration.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:)()
{
  uint64_t v1 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CC160(v0, (uint64_t)v9, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    int v10 = v9[24];
    uint64_t v11 = *((void *)v9 + 5);
    sub_1C28CE710();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
    if (v10 == 1)
    {
      sub_1C28CE720();
      if (v11)
      {
LABEL_4:
        sub_1C28CE720();
        swift_bridgeObjectRetain();
        sub_1C28CD790();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      sub_1C28CE720();
      sub_1C28CE730();
      if (v11) {
        goto LABEL_4;
      }
    }
    sub_1C28CE720();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C28C4FAC();
    uint64_t v14 = (uint64_t)&v9[*(int *)(v13 + 80)];
    sub_1C27DB06C((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    sub_1C27DB06C(v14, (uint64_t)v3, type metadata accessor for ColorRepresentation);
    sub_1C28CE710();
    ImageRepresentation.hash(into:)();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
    ColorRepresentation.hash(into:)();
    sub_1C27CC1E8((uint64_t)v3, type metadata accessor for ColorRepresentation);
    return sub_1C27CC1E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  }
}

uint64_t sub_1C28BFCE4()
{
  if (*v0) {
    return 2003134838;
  }
  else {
    return 0x6567616D69;
  }
}

uint64_t sub_1C28BFD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28CB39C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28BFD3C(uint64_t a1)
{
  unint64_t v2 = sub_1C28C516C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28BFD78(uint64_t a1)
{
  unint64_t v2 = sub_1C28C516C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28BFDB4()
{
  uint64_t result = 0x6567616D69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x6C6961746564;
      break;
    case 3:
      uint64_t result = 0x6F436C6961746564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C28BFE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28CB478(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28BFE64(uint64_t a1)
{
  unint64_t v2 = sub_1C28C5118();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28BFEA0(uint64_t a1)
{
  unint64_t v2 = sub_1C28C5118();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28BFEDC(uint64_t a1)
{
  unint64_t v2 = sub_1C28C50C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28BFF18(uint64_t a1)
{
  unint64_t v2 = sub_1C28C50C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PromotionalTileConfiguration.Hero.WatchConfiguration.encode(to:)(void *a1)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C27BE3E8(0, &qword_1EA311618, (uint64_t (*)(void))sub_1C28C50C4, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v37 = v3;
  uint64_t v35 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v34 - v4;
  sub_1C27BE3E8(0, &qword_1EA311628, (uint64_t (*)(void))sub_1C28C5118, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys, v2);
  uint64_t v52 = v5;
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)&v34 - v6;
  uint64_t v7 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v38 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1F4188790](v36);
  uint64_t v40 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BE3E8(0, &qword_1EA311638, (uint64_t (*)(void))sub_1C28C516C, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys, v2);
  uint64_t v44 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v34 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28C516C();
  sub_1C28CE800();
  sub_1C27CC160(v43, (uint64_t)v12, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v39 = v14;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = *((void *)v12 + 1);
    uint64_t v52 = *(void *)v12;
    uint64_t v19 = *((void *)v12 + 2);
    char v20 = v12[24];
    uint64_t v22 = *((void *)v12 + 4);
    uint64_t v21 = *((void *)v12 + 5);
    LOBYTE(v46) = 1;
    sub_1C28C50C4();
    uint64_t v23 = v44;
    sub_1C28CE550();
    uint64_t v46 = v52;
    uint64_t v47 = v18;
    uint64_t v52 = v18;
    uint64_t v48 = v19;
    char v49 = v20;
    uint64_t v50 = v22;
    uint64_t v51 = v21;
    sub_1C28C51C0();
    uint64_t v24 = v37;
    sub_1C28CE5E0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v41, v24);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v23);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = (char *)v7;
    sub_1C28C4FAC();
    uint64_t v43 = *(void *)&v12[*(int *)(v26 + 48)];
    uint64_t v27 = (uint64_t)&v12[*(int *)(v26 + 80)];
    sub_1C27DB06C((uint64_t)v12, v40, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    uint64_t v28 = v38;
    sub_1C27DB06C(v27, v38, type metadata accessor for ColorRepresentation);
    LOBYTE(v46) = 0;
    sub_1C28C5118();
    uint64_t v29 = v44;
    sub_1C28CE550();
    LOBYTE(v46) = 0;
    sub_1C27DB0D4(&qword_1EBB74FA0, (void (*)(uint64_t))type metadata accessor for ImageRepresentation);
    uint64_t v30 = v42;
    sub_1C28CE5E0();
    if (v30)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v45, v52);
      sub_1C27CC1E8(v28, type metadata accessor for ColorRepresentation);
      sub_1C27CC1E8(v40, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v16, v29);
    }
    else
    {
      uint64_t v31 = v40;
      LOBYTE(v46) = 1;
      sub_1C28CE5A0();
      swift_bridgeObjectRelease();
      LOBYTE(v46) = 2;
      sub_1C28CE5A0();
      swift_bridgeObjectRelease();
      LOBYTE(v46) = 3;
      sub_1C27DB0D4(&qword_1EA310930, (void (*)(uint64_t))type metadata accessor for ColorRepresentation);
      uint64_t v32 = v38;
      sub_1C28CE5E0();
      uint64_t v33 = v39;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v45, v52);
      sub_1C27CC1E8(v32, type metadata accessor for ColorRepresentation);
      sub_1C27CC1E8(v31, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v44);
    }
  }
}

uint64_t PromotionalTileConfiguration.Hero.WatchConfiguration.hashValue.getter()
{
  return sub_1C28C3AB0((void (*)(unsigned char *))PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:));
}

uint64_t PromotionalTileConfiguration.Hero.WatchConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C27BE3E8(0, &qword_1EA311650, (uint64_t (*)(void))sub_1C28C50C4, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v55 = *(uint64_t **)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v60 = (char *)&v50 - v5;
  sub_1C27BE3E8(0, &qword_1EA311658, (uint64_t (*)(void))sub_1C28C5118, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys, v3);
  uint64_t v57 = v6;
  uint64_t v54 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v59 = (char *)&v50 - v7;
  sub_1C27BE3E8(0, &qword_1EA311660, (uint64_t (*)(void))sub_1C28C516C, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys, v3);
  uint64_t v9 = v8;
  uint64_t v58 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v50 - v10;
  uint64_t v12 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v50 - v17;
  MEMORY[0x1F4188790](v16);
  char v20 = (char *)&v50 - v19;
  uint64_t v21 = a1[3];
  uint64_t v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1C28C516C();
  uint64_t v22 = v66;
  sub_1C28CE7F0();
  if (!v22)
  {
    uint64_t v51 = v15;
    uint64_t v52 = v18;
    uint64_t v23 = v59;
    uint64_t v24 = v60;
    uint64_t v66 = v12;
    uint64_t v25 = sub_1C28CE530();
    uint64_t v26 = (char *)v25;
    uint64_t v27 = v9;
    if (*(void *)(v25 + 16) == 1)
    {
      if (*(unsigned char *)(v25 + 32))
      {
        LOBYTE(v62) = 1;
        sub_1C28C50C4();
        uint64_t v28 = v24;
        sub_1C28CE480();
        sub_1C28C5214();
        uint64_t v34 = v56;
        sub_1C28CE520();
        uint64_t v35 = v58;
        ((void (*)(char *, uint64_t))v55[1])(v28, v34);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v27);
        uint64_t v39 = v63;
        char v40 = v64;
        uint64_t v41 = (uint64_t)v51;
        *uint64_t v51 = v62;
        *(void *)(v41 + 16) = v39;
        *(unsigned char *)(v41 + 24) = v40;
        *(_OWORD *)(v41 + 32) = v65;
      }
      else
      {
        LOBYTE(v62) = 0;
        sub_1C28C5118();
        uint64_t v32 = v23;
        uint64_t v33 = v9;
        sub_1C28CE480();
        type metadata accessor for ImageRepresentation();
        LOBYTE(v62) = 0;
        sub_1C27DB0D4(qword_1EBB76350, (void (*)(uint64_t))type metadata accessor for ImageRepresentation);
        uint64_t v37 = v57;
        uint64_t v38 = v32;
        sub_1C28CE520();
        LOBYTE(v62) = 1;
        uint64_t v42 = sub_1C28CE4E0();
        uint64_t v60 = v26;
        uint64_t v44 = v43;
        sub_1C28C4FAC();
        uint64_t v56 = v45;
        uint64_t v46 = (uint64_t *)&v52[*(int *)(v45 + 48)];
        *uint64_t v46 = v42;
        v46[1] = v44;
        LOBYTE(v62) = 2;
        uint64_t v47 = sub_1C28CE4E0();
        uint64_t v55 = v46;
        uint64_t v48 = (uint64_t *)&v52[*(int *)(v56 + 64)];
        *uint64_t v48 = v47;
        v48[1] = v49;
        type metadata accessor for ColorRepresentation(0);
        LOBYTE(v62) = 3;
        sub_1C27DB0D4(&qword_1EA310928, (void (*)(uint64_t))type metadata accessor for ColorRepresentation);
        sub_1C28CE520();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v37);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v33);
        uint64_t v41 = (uint64_t)v52;
      }
      swift_storeEnumTagMultiPayload();
      sub_1C27DB06C(v41, (uint64_t)v20, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
      sub_1C27DB06C((uint64_t)v20, v53, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    }
    else
    {
      uint64_t v29 = sub_1C28CE180();
      swift_allocError();
      uint64_t v31 = v30;
      sub_1C27E29F8();
      *uint64_t v31 = v66;
      sub_1C28CE490();
      sub_1C28CE160();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x1E4FBBA70], v29);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
}

uint64_t sub_1C28C1068@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.Hero.WatchConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C28C1080(void *a1)
{
  return PromotionalTileConfiguration.Hero.WatchConfiguration.encode(to:)(a1);
}

uint64_t sub_1C28C109C(uint64_t a1, uint64_t a2)
{
  return sub_1C28C409C(a1, a2, (void (*)(unsigned char *))PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:));
}

uint64_t sub_1C28C10B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C28C4100(a1, a2, a3, (void (*)(unsigned char *))PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:));
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.imageData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C27CC160(v1, a1, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.imageHeight.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0) + 20));
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.imageInset.getter()
{
  return *(void *)(v0
                   + *(int *)(type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0) + 24));
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.init(imageData:imageHeight:imageInset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  sub_1C27DB06C(a1, a6, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  uint64_t result = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  uint64_t v12 = a6 + *(int *)(result + 20);
  *(void *)uint64_t v12 = a2;
  *(unsigned char *)(v12 + 8) = a3 & 1;
  uint64_t v13 = a6 + *(int *)(result + 24);
  *(void *)uint64_t v13 = a4;
  *(unsigned char *)(v13 + 8) = a5 & 1;
  return result;
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.hash(into:)()
{
  ImageRepresentation.hash(into:)();
  uint64_t v1 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  if (*(unsigned char *)(v0 + *(int *)(v1 + 20) + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE730();
  }
  if (*(unsigned char *)(v0 + *(int *)(v1 + 24) + 8) == 1) {
    return sub_1C28CE720();
  }
  sub_1C28CE720();
  return sub_1C28CE730();
}

uint64_t sub_1C28C12B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28CB634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28C12D8(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA474();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28C1314(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA474();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.hashValue.getter()
{
  sub_1C28CE700();
  ImageRepresentation.hash(into:)();
  uint64_t v1 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  if (*(unsigned char *)(v0 + *(int *)(v1 + 20) + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE730();
  }
  if (*(unsigned char *)(v0 + *(int *)(v1 + 24) + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE730();
  }
  return sub_1C28CE740();
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1F4188790](v23);
  uint64_t v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BE3E8(0, &qword_1EBB75F00, (uint64_t (*)(void))sub_1C27DA474, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v25 = v5;
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27DA474();
  sub_1C28CE7F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v11 = (uint64_t)a1;
  uint64_t v12 = v22;
  LOBYTE(v26) = 0;
  sub_1C27DB0D4(qword_1EBB76350, (void (*)(uint64_t))type metadata accessor for ImageRepresentation);
  uint64_t v13 = (uint64_t)v24;
  uint64_t v14 = v25;
  sub_1C28CE520();
  sub_1C27DB06C(v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  char v28 = 1;
  sub_1C28C530C();
  sub_1C28CE4D0();
  char v15 = v27;
  uint64_t v16 = &v10[*(int *)(v8 + 20)];
  *(void *)uint64_t v16 = v26;
  v16[8] = v15;
  char v28 = 2;
  sub_1C28CE4D0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v14);
  char v18 = v27;
  uint64_t v19 = &v10[*(int *)(v8 + 24)];
  *(void *)uint64_t v19 = v26;
  v19[8] = v18;
  sub_1C27CC160((uint64_t)v10, v21, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
  __swift_destroy_boxed_opaque_existential_1Tm(v11);
  return sub_1C27CC1E8((uint64_t)v10, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
}

uint64_t sub_1C28C1800@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.Hero.ImageConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C28C1820(uint64_t a1, uint64_t a2)
{
  ImageRepresentation.hash(into:)();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 20) + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE730();
  }
  if (*(unsigned char *)(v2 + *(int *)(a2 + 24) + 8) == 1) {
    return sub_1C28CE720();
  }
  sub_1C28CE720();
  return sub_1C28CE730();
}

uint64_t sub_1C28C18DC(uint64_t a1, uint64_t a2)
{
  sub_1C28CE700();
  ImageRepresentation.hash(into:)();
  if (*(unsigned char *)(v2 + *(int *)(a2 + 20) + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE730();
  }
  if (*(unsigned char *)(v2 + *(int *)(a2 + 24) + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE730();
  }
  return sub_1C28CE740();
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.viewName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.viewHeight.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void PromotionalTileConfiguration.Hero.ViewConfiguration.init(viewName:bundle:viewHeight:)(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  id v12 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_1C28CD730();
    uint64_t v16 = v15;
  }
  else
  {

    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  *(void *)a6 = a2;
  *(void *)(a6 + 8) = a3;
  *(void *)(a6 + 16) = a4;
  *(unsigned char *)(a6 + 24) = a5 & 1;
  *(void *)(a6 + 32) = v14;
  *(void *)(a6 + 40) = v16;
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  if (v1 != 1)
  {
    sub_1C28CE720();
    sub_1C28CE730();
    if (v2) {
      goto LABEL_3;
    }
    return sub_1C28CE720();
  }
  sub_1C28CE720();
  if (!v2) {
    return sub_1C28CE720();
  }
LABEL_3:
  sub_1C28CE720();
  swift_bridgeObjectRetain();
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C28C1BC0()
{
  unint64_t v1 = 0x6769654877656976;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656D614E77656976;
  }
}

uint64_t sub_1C28C1C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28CB7BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28C1C4C(uint64_t a1)
{
  unint64_t v2 = sub_1C28C5360();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28C1C88(uint64_t a1)
{
  unint64_t v2 = sub_1C28C5360();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.encode(to:)(void *a1)
{
  sub_1C27BE3E8(0, &qword_1EA311670, (uint64_t (*)(void))sub_1C28C5360, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  int v16 = *(unsigned __int8 *)(v1 + 24);
  v11[1] = *(void *)(v1 + 32);
  uint64_t v12 = v8;
  v11[0] = *(void *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28C5360();
  sub_1C28CE800();
  char v19 = 0;
  uint64_t v9 = v13;
  sub_1C28CE5A0();
  if (!v9)
  {
    uint64_t v14 = v12;
    char v15 = v16;
    char v18 = 1;
    sub_1C27DBAA4();
    sub_1C28CE590();
    char v17 = 2;
    sub_1C28CE560();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  sub_1C27BE3E8(0, &qword_1EA311680, (uint64_t (*)(void))sub_1C28C5360, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28C5360();
  sub_1C28CE7F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v22;
  char v28 = 0;
  uint64_t v11 = sub_1C28CE4E0();
  uint64_t v13 = v12;
  char v27 = 1;
  sub_1C28C530C();
  swift_bridgeObjectRetain();
  sub_1C28CE4D0();
  uint64_t v21 = v23;
  int v25 = v24;
  char v26 = 2;
  uint64_t v14 = sub_1C28CE4A0();
  uint64_t v17 = v16;
  char v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v20 = v14;
  v18(v8, v5);
  *(void *)uint64_t v10 = v11;
  *(void *)(v10 + 8) = v13;
  *(void *)(v10 + 16) = v21;
  *(unsigned char *)(v10 + 24) = v25;
  *(void *)(v10 + 32) = v20;
  *(void *)(v10 + 40) = v17;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C28C21D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.Hero.ViewConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C28C21E8(void *a1)
{
  return PromotionalTileConfiguration.Hero.ViewConfiguration.encode(to:)(a1);
}

uint64_t sub_1C28C2204()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28C226C()
{
  return sub_1C28CE740();
}

uint64_t PromotionalTileConfiguration.Hero.hash(into:)()
{
  uint64_t v1 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CC160(v0, (uint64_t)v9, type metadata accessor for PromotionalTileConfiguration.Hero);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C27DB06C((uint64_t)v9, (uint64_t)v3, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      sub_1C28CE710();
      ImageRepresentation.hash(into:)();
      if (v3[*(int *)(v1 + 20) + 8] == 1)
      {
        sub_1C28CE720();
      }
      else
      {
        sub_1C28CE720();
        sub_1C28CE730();
      }
      if (v3[*(int *)(v1 + 24) + 8] == 1)
      {
        sub_1C28CE720();
      }
      else
      {
        sub_1C28CE720();
        sub_1C28CE730();
      }
      uint64_t v11 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration;
      uint64_t v12 = (uint64_t)v3;
      return sub_1C27CC1E8(v12, v11);
    }
    int v13 = v9[24];
    uint64_t v14 = *((void *)v9 + 5);
    sub_1C28CE710();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
    if (v13 == 1)
    {
      sub_1C28CE720();
      if (v14)
      {
LABEL_8:
        sub_1C28CE720();
        swift_bridgeObjectRetain();
        sub_1C28CD790();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      sub_1C28CE720();
      sub_1C28CE730();
      if (v14) {
        goto LABEL_8;
      }
    }
    sub_1C28CE720();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1C27DB06C((uint64_t)v9, (uint64_t)v6, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  sub_1C28CE710();
  PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:)();
  uint64_t v11 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration;
  uint64_t v12 = (uint64_t)v6;
  return sub_1C27CC1E8(v12, v11);
}

uint64_t sub_1C28C261C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28CB91C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28C2644(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA37C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28C2680(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA37C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28C26BC(uint64_t a1)
{
  unint64_t v2 = sub_1C28C5408();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28C26F8(uint64_t a1)
{
  unint64_t v2 = sub_1C28C5408();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28C2734(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA1FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28C2770(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA1FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C28C27AC(uint64_t a1)
{
  unint64_t v2 = sub_1C28C53B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28C27E8(uint64_t a1)
{
  unint64_t v2 = sub_1C28C53B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PromotionalTileConfiguration.Hero.hashValue.getter()
{
  return sub_1C28C3AB0((void (*)(unsigned char *))PromotionalTileConfiguration.Hero.hash(into:));
}

uint64_t PromotionalTileConfiguration.Hero.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C27BE3E8(0, &qword_1EBB75F10, (uint64_t (*)(void))sub_1C28C53B4, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v54 = v4;
  uint64_t v57 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v59 = (char *)&v49 - v5;
  sub_1C27BE3E8(0, &qword_1EBB75F18, (uint64_t (*)(void))sub_1C27DA1FC, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys, v3);
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v63 = (char *)&v49 - v7;
  sub_1C27BE3E8(0, &qword_1EBB75F20, (uint64_t (*)(void))sub_1C28C5408, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys, v3);
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  MEMORY[0x1F4188790](v8);
  long long v62 = (char *)&v49 - v9;
  sub_1C27BE3E8(0, &qword_1EBB75F08, (uint64_t (*)(void))sub_1C27DA37C, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.CodingKeys, v3);
  uint64_t v65 = v10;
  uint64_t v61 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v60 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  uint64_t v13 = MEMORY[0x1F4188790](v60);
  char v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  char v18 = (char *)&v49 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v49 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v49 - v22;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27DA37C();
  char v64 = v12;
  unsigned __int8 v24 = v70;
  sub_1C28CE7F0();
  if (v24) {
    goto LABEL_9;
  }
  uint64_t v50 = v18;
  uint64_t v49 = v15;
  char v26 = v62;
  int v25 = v63;
  uint64_t v51 = v23;
  uint64_t v70 = a1;
  char v28 = v64;
  uint64_t v27 = v65;
  uint64_t v29 = sub_1C28CE530();
  if (*(void *)(v29 + 16) != 1)
  {
    uint64_t v31 = v27;
    uint64_t v32 = sub_1C28CE180();
    swift_allocError();
    uint64_t v34 = v33;
    sub_1C27E29F8();
    uint64_t *v34 = v60;
    sub_1C28CE490();
    sub_1C28CE160();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x1E4FBBA70], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v28, v31);
    a1 = v70;
LABEL_9:
    uint64_t v39 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v39);
  }
  if (*(unsigned char *)(v29 + 32))
  {
    if (*(unsigned char *)(v29 + 32) == 1)
    {
      LOBYTE(v66) = 1;
      sub_1C27DA1FC();
      uint64_t v30 = v25;
      sub_1C28CE480();
      type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      sub_1C27DB0D4(&qword_1EBB75E90, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      uint64_t v41 = (uint64_t)v50;
      uint64_t v42 = v56;
      sub_1C28CE520();
      uint64_t v43 = v61;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v30, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v65);
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v41;
    }
    else
    {
      LOBYTE(v66) = 2;
      sub_1C28C53B4();
      uint64_t v37 = v59;
      sub_1C28CE480();
      sub_1C28C5214();
      uint64_t v38 = v54;
      sub_1C28CE520();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v28, v27);
      uint64_t v44 = v67;
      char v45 = v68;
      uint64_t v46 = v49;
      *uint64_t v49 = v66;
      *((void *)v46 + 2) = v44;
      *((unsigned char *)v46 + 24) = v45;
      _OWORD v46[2] = v69;
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = (uint64_t)v46;
    }
  }
  else
  {
    LOBYTE(v66) = 0;
    sub_1C28C5408();
    sub_1C28CE480();
    type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    sub_1C27DB0D4(&qword_1EA311690, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    uint64_t v35 = v53;
    sub_1C28CE520();
    uint64_t v36 = v61;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v26, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v27);
    swift_storeEnumTagMultiPayload();
    uint64_t v47 = (uint64_t)v21;
  }
  uint64_t v48 = (uint64_t)v51;
  sub_1C27DB06C(v47, (uint64_t)v51, type metadata accessor for PromotionalTileConfiguration.Hero);
  sub_1C27DB06C(v48, v58, type metadata accessor for PromotionalTileConfiguration.Hero);
  uint64_t v39 = (uint64_t)v70;
  return __swift_destroy_boxed_opaque_existential_1Tm(v39);
}

uint64_t sub_1C28C3158@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.Hero.init(from:)(a1, a2);
}

uint64_t sub_1C28C3174(uint64_t a1, uint64_t a2)
{
  return sub_1C28C409C(a1, a2, (void (*)(unsigned char *))PromotionalTileConfiguration.Hero.hash(into:));
}

uint64_t sub_1C28C3190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C28C4100(a1, a2, a3, (void (*)(unsigned char *))PromotionalTileConfiguration.Hero.hash(into:));
}

uint64_t PromotionalTileConfiguration.hero.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PromotionalTileConfiguration(0);
  return sub_1C27CC160(v1 + *(int *)(v3 + 24), a1, type metadata accessor for PromotionalTileConfiguration.Hero);
}

uint64_t PromotionalTileConfiguration.body.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PromotionalTileConfiguration(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.linkTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PromotionalTileConfiguration(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.actionTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PromotionalTileConfiguration(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.init(reuseIdentifier:hero:title:body:linkTitle:actionTitle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a9[2] = a1;
  a9[3] = a2;
  char v18 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  sub_1C27CC160(a3, (uint64_t)a9 + v18[6], type metadata accessor for PromotionalTileConfiguration.Hero);
  uint64_t v19 = (void *)((char *)a9 + v18[7]);
  *uint64_t v19 = a4;
  v19[1] = a5;
  uint64_t v20 = (void *)((char *)a9 + v18[8]);
  *uint64_t v20 = a6;
  v20[1] = a7;
  uint64_t v21 = (void *)((char *)a9 + v18[9]);
  *uint64_t v21 = a8;
  v21[1] = a10;
  uint64_t v22 = (void *)((char *)a9 + v18[10]);
  void *v22 = a11;
  v22[1] = a12;
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C27CC1E8(a3, type metadata accessor for PromotionalTileConfiguration.Hero);
  *a9 = 0xD00000000000001DLL;
  a9[1] = 0x80000001C28DE110;
  return result;
}

void PromotionalTileConfiguration.init(reuseIdentifier:viewName:bundle:viewHeight:title:body:linkTitle:actionTitle:)(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, unint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  HIDWORD(v40) = a7;
  unint64_t v41 = a1;
  unint64_t v42 = a2;
  uint64_t v48 = a16;
  uint64_t v49 = a8;
  uint64_t v46 = a14;
  uint64_t v47 = a15;
  uint64_t v44 = a12;
  uint64_t v45 = a13;
  uint64_t v43 = a11;
  uint64_t v21 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v50 = a5;
  id v24 = objc_msgSend(a5, sel_bundleIdentifier);
  if (v24)
  {
    int v25 = v24;
    uint64_t v26 = sub_1C28CD730();
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v28 = 0;
  }
  *(void *)uint64_t v23 = a3;
  *((void *)v23 + 1) = a4;
  *((void *)v23 + 2) = a6;
  v23[24] = BYTE4(v40) & 1;
  *((void *)v23 + 4) = v26;
  *((void *)v23 + 5) = v28;
  swift_storeEnumTagMultiPayload();
  unint64_t v29 = v42;
  a9[2] = v41;
  a9[3] = v29;
  uint64_t v30 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  sub_1C27CC160((uint64_t)v23, (uint64_t)a9 + v30[6], type metadata accessor for PromotionalTileConfiguration.Hero);
  uint64_t v31 = (unint64_t *)((char *)a9 + v30[7]);
  *uint64_t v31 = v49;
  v31[1] = a10;
  uint64_t v32 = (unint64_t *)((char *)a9 + v30[8]);
  uint64_t v33 = v44;
  void *v32 = v43;
  v32[1] = v33;
  uint64_t v34 = (unint64_t *)((char *)a9 + v30[9]);
  uint64_t v35 = v46;
  void *v34 = v45;
  v34[1] = v35;
  uint64_t v36 = (unint64_t *)((char *)a9 + v30[10]);
  uint64_t v37 = v48;
  void *v36 = v47;
  v36[1] = v37;
  unint64_t v51 = 0xD00000000000001DLL;
  unint64_t v52 = 0x80000001C28DE110;
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  unint64_t v38 = v51;
  unint64_t v39 = v52;
  sub_1C27CC1E8((uint64_t)v23, type metadata accessor for PromotionalTileConfiguration.Hero);

  *a9 = v38;
  a9[1] = v39;
}

uint64_t PromotionalTileConfiguration.init(data:)(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t PromotionalTileConfiguration.encode()()
{
  sub_1C28CBEE0();
  swift_allocObject();
  sub_1C28CBED0();
  type metadata accessor for PromotionalTileConfiguration(0);
  sub_1C27DB0D4(&qword_1EA311698, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration);
  uint64_t v0 = sub_1C28CBEC0();
  swift_release();
  return v0;
}

uint64_t PromotionalTileConfiguration.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for PromotionalTileConfiguration(0);
  PromotionalTileConfiguration.Hero.hash(into:)();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + *(int *)(v1 + 36) + 8))
  {
    sub_1C28CE720();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C28CE720();
  }
  swift_bridgeObjectRetain();
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C28C39EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28CBA80(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C28C3A14(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1C28C3A20(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA624();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28C3A5C(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA624();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PromotionalTileConfiguration.hashValue.getter()
{
  return sub_1C28C3AB0((void (*)(unsigned char *))PromotionalTileConfiguration.hash(into:));
}

uint64_t sub_1C28C3AB0(void (*a1)(unsigned char *))
{
  sub_1C28CE700();
  a1(v3);
  return sub_1C28CE740();
}

uint64_t PromotionalTileConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BE3E8(0, &qword_1EBB76850, (uint64_t (*)(void))sub_1C27DA624, (uint64_t)&type metadata for PromotionalTileConfiguration.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v32 - v7;
  uint64_t v9 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1C27DA624();
  uint64_t v35 = v8;
  uint64_t v13 = v37;
  sub_1C28CE7F0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  }
  uint64_t v14 = v33;
  char v44 = 0;
  *uint64_t v11 = sub_1C28CE4E0();
  v11[1] = v15;
  char v43 = 1;
  void v11[2] = sub_1C28CE4E0();
  v11[3] = v16;
  char v42 = 2;
  sub_1C27DB0D4(&qword_1EBB75EC0, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero);
  sub_1C28CE520();
  sub_1C27DB06C((uint64_t)v5, (uint64_t)v11 + v9[6], type metadata accessor for PromotionalTileConfiguration.Hero);
  char v41 = 3;
  uint64_t v17 = sub_1C28CE4E0();
  char v18 = (uint64_t *)((char *)v11 + v9[7]);
  *char v18 = v17;
  v18[1] = v19;
  char v40 = 4;
  uint64_t v20 = sub_1C28CE4E0();
  uint64_t v21 = (uint64_t *)((char *)v11 + v9[8]);
  *uint64_t v21 = v20;
  v21[1] = v22;
  char v39 = 5;
  uint64_t v23 = sub_1C28CE4A0();
  id v24 = (uint64_t *)((char *)v11 + v9[9]);
  *id v24 = v23;
  v24[1] = v25;
  char v38 = 6;
  uint64_t v26 = v34;
  uint64_t v27 = sub_1C28CE4E0();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v35, v26);
  uint64_t v30 = (uint64_t *)((char *)v11 + v9[10]);
  *uint64_t v30 = v27;
  v30[1] = v29;
  sub_1C27CC160((uint64_t)v11, v32, type metadata accessor for PromotionalTileConfiguration);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  return sub_1C27CC1E8((uint64_t)v11, type metadata accessor for PromotionalTileConfiguration);
}

uint64_t sub_1C28C4068@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C28C4084(uint64_t a1, uint64_t a2)
{
  return sub_1C28C409C(a1, a2, (void (*)(unsigned char *))PromotionalTileConfiguration.hash(into:));
}

uint64_t sub_1C28C409C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_1C28CE700();
  a3(v5);
  return sub_1C28CE740();
}

uint64_t sub_1C28C40E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C28C4100(a1, a2, a3, (void (*)(unsigned char *))PromotionalTileConfiguration.hash(into:));
}

uint64_t sub_1C28C4100(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1C28CE700();
  a4(v6);
  return sub_1C28CE740();
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV4HeroO04ViewE0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  double v6 = *(double *)(a2 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v10 = sub_1C28CE640(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v3)
    {
      if (!v7) {
        return 0;
      }
    }
    else
    {
      if (v2 == v6) {
        char v12 = v7;
      }
      else {
        char v12 = 1;
      }
      if (v12) {
        return 0;
      }
    }
    if (v5)
    {
      if (!v8 || (v4 != v9 || v5 != v8) && (sub_1C28CE640() & 1) == 0) {
        return 0;
      }
    }
    else if (v8)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = sub_1C28CE640();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  if (a1[2] != a2[2] || a1[3] != a2[3])
  {
    char v8 = sub_1C28CE640();
    uint64_t result = 0;
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  uint64_t v9 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  if ((_s16HealthExperience28PromotionalTileConfigurationV4HeroO2eeoiySbAE_AEtFZ_0((uint64_t)a1 + v9[6], (uint64_t)a2 + v9[6]) & 1) == 0)return 0; {
  uint64_t v10 = v9[7];
  }
  uint64_t v11 = *(void *)((char *)a1 + v10);
  uint64_t v12 = *(void *)((char *)a1 + v10 + 8);
  uint64_t v13 = (void *)((char *)a2 + v10);
  if (v11 != *v13 || v12 != v13[1])
  {
    char v15 = sub_1C28CE640();
    uint64_t result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
  }
  uint64_t v16 = v9[8];
  uint64_t v17 = *(void *)((char *)a1 + v16);
  uint64_t v18 = *(void *)((char *)a1 + v16 + 8);
  uint64_t v19 = (void *)((char *)a2 + v16);
  if (v17 != *v19 || v18 != v19[1])
  {
    char v21 = sub_1C28CE640();
    uint64_t result = 0;
    if ((v21 & 1) == 0) {
      return result;
    }
  }
  uint64_t v22 = v9[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = *(void *)((char *)a1 + v22 + 8);
  uint64_t v25 = (void *)((char *)a2 + v22);
  uint64_t v26 = v25[1];
  if (!v24)
  {
    if (!v26)
    {
LABEL_31:
      uint64_t v28 = v9[10];
      uint64_t v29 = *(void *)((char *)a1 + v28);
      uint64_t v30 = *(void *)((char *)a1 + v28 + 8);
      uint64_t v31 = (void *)((char *)a2 + v28);
      if (v29 == *v31 && v30 == v31[1]) {
        return 1;
      }
      return sub_1C28CE640();
    }
    return 0;
  }
  if (!v26) {
    return 0;
  }
  if (*v23 == *v25 && v24 == v26) {
    goto LABEL_31;
  }
  char v27 = sub_1C28CE640();
  uint64_t result = 0;
  if (v27) {
    goto LABEL_31;
  }
  return result;
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV4HeroO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  MEMORY[0x1F4188790](v47);
  uint64_t v48 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1F4188790](v5 - 8);
  int v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v47 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v47 - v15;
  sub_1C28CBD84(0, &qword_1EBB76878, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v47 - v19;
  char v21 = (char *)&v47 + *(int *)(v18 + 56) - v19;
  sub_1C27CC160(a1, (uint64_t)&v47 - v19, type metadata accessor for PromotionalTileConfiguration.Hero);
  sub_1C27CC160(a2, (uint64_t)v21, type metadata accessor for PromotionalTileConfiguration.Hero);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C27CC160((uint64_t)v20, (uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v23 = v48;
        sub_1C27DB06C((uint64_t)v21, v48, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
        if (static ImageRepresentation.== infix(_:_:)((uint64_t)v14, v23))
        {
          uint64_t v24 = *(int *)(v47 + 20);
          uint64_t v25 = (double *)&v14[v24];
          char v26 = v14[v24 + 8];
          char v27 = (double *)(v23 + v24);
          int v28 = *(unsigned __int8 *)(v23 + v24 + 8);
          if (v26)
          {
            if (!v28) {
              goto LABEL_22;
            }
          }
          else
          {
            if (*v25 != *v27) {
              LOBYTE(v28) = 1;
            }
            if (v28) {
              goto LABEL_22;
            }
          }
          uint64_t v41 = *(int *)(v47 + 24);
          char v42 = (double *)&v14[v41];
          char v43 = v14[v41 + 8];
          char v44 = (double *)(v23 + v41);
          int v45 = *(unsigned __int8 *)(v23 + v41 + 8);
          if (v43)
          {
            if (!v45) {
              goto LABEL_22;
            }
          }
          else
          {
            if (*v42 != *v44) {
              LOBYTE(v45) = 1;
            }
            if (v45) {
              goto LABEL_22;
            }
          }
          sub_1C27CC1E8(v23, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
          sub_1C27CC1E8((uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
          sub_1C27CC1E8((uint64_t)v20, type metadata accessor for PromotionalTileConfiguration.Hero);
          char v40 = 1;
          return v40 & 1;
        }
LABEL_22:
        sub_1C27CC1E8(v23, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
        sub_1C27CC1E8((uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
        sub_1C27CC1E8((uint64_t)v20, type metadata accessor for PromotionalTileConfiguration.Hero);
        goto LABEL_23;
      }
      sub_1C27CC1E8((uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
LABEL_14:
      sub_1C28CBDE4((uint64_t)v20, &qword_1EBB76878, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero);
LABEL_23:
      char v40 = 0;
      return v40 & 1;
    }
    sub_1C27CC160((uint64_t)v20, (uint64_t)v11, type metadata accessor for PromotionalTileConfiguration.Hero);
    uint64_t v29 = *((void *)v11 + 1);
    uint64_t v30 = *((void *)v11 + 5);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    uint64_t v31 = *((void *)v11 + 4);
    char v32 = v11[24];
    uint64_t v33 = *((void *)v11 + 2);
    uint64_t v34 = *(void *)v21;
    uint64_t v35 = *((void *)v21 + 1);
    uint64_t v36 = *((void *)v21 + 2);
    char v37 = v21[24];
    uint64_t v38 = *((void *)v21 + 4);
    uint64_t v39 = *((void *)v21 + 5);
    v53[0] = *(void *)v11;
    v53[1] = v29;
    v53[2] = v33;
    char v54 = v32;
    uint64_t v55 = v31;
    uint64_t v56 = v30;
    v49[0] = v34;
    v49[1] = v35;
    v49[2] = v36;
    char v50 = v37;
    uint64_t v51 = v38;
    uint64_t v52 = v39;
    char v40 = _s16HealthExperience28PromotionalTileConfigurationV4HeroO04ViewE0V2eeoiySbAG_AGtFZ_0((uint64_t)v53, (uint64_t)v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C27CC160((uint64_t)v20, (uint64_t)v16, type metadata accessor for PromotionalTileConfiguration.Hero);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1C27CC1E8((uint64_t)v16, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
      goto LABEL_14;
    }
    sub_1C27DB06C((uint64_t)v21, (uint64_t)v7, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    char v40 = _s16HealthExperience28PromotionalTileConfigurationV4HeroO05WatchE0O2eeoiySbAG_AGtFZ_0((uint64_t)v16, (uint64_t)v7);
    sub_1C27CC1E8((uint64_t)v7, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    sub_1C27CC1E8((uint64_t)v16, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  }
  sub_1C27CC1E8((uint64_t)v20, type metadata accessor for PromotionalTileConfiguration.Hero);
  return v40 & 1;
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV4HeroO05WatchE0O2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  long long v62 = (char *)a2;
  uint64_t v3 = type metadata accessor for ColorRepresentation(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v54 - v7;
  uint64_t v9 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v54 - v16;
  sub_1C28CBD84(0, &qword_1EA311758, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  char v21 = (char *)&v54 - v20;
  uint64_t v22 = (char *)&v54 + *(int *)(v19 + 56) - v20;
  sub_1C27CC160(a1, (uint64_t)&v54 - v20, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  sub_1C27CC160((uint64_t)v62, (uint64_t)v22, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C27CC160((uint64_t)v21, (uint64_t)v15, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    uint64_t v23 = *((void *)v15 + 1);
    uint64_t v24 = *((void *)v15 + 5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = *((void *)v15 + 4);
      char v26 = v15[24];
      uint64_t v27 = *((void *)v15 + 2);
      uint64_t v28 = *(void *)v22;
      uint64_t v29 = *((void *)v22 + 1);
      uint64_t v30 = *((void *)v22 + 2);
      char v31 = v22[24];
      uint64_t v32 = *((void *)v22 + 4);
      uint64_t v33 = *((void *)v22 + 5);
      v67[0] = *(void *)v15;
      v67[1] = v23;
      v67[2] = v27;
      char v68 = v26;
      uint64_t v69 = v25;
      uint64_t v70 = v24;
      v63[0] = v28;
      v63[1] = v29;
      void v63[2] = v30;
      char v64 = v31;
      uint64_t v65 = v32;
      uint64_t v66 = v33;
      char v34 = _s16HealthExperience28PromotionalTileConfigurationV4HeroO04ViewE0V2eeoiySbAG_AGtFZ_0((uint64_t)v67, (uint64_t)v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      sub_1C27CC1E8((uint64_t)v21, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
      return v34 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v60 = v8;
  uint64_t v61 = v6;
  long long v62 = v21;
  sub_1C27CC160((uint64_t)v21, (uint64_t)v17, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  sub_1C28C4FAC();
  uint64_t v36 = v35[12];
  uint64_t v37 = *(void *)&v17[v36];
  uint64_t v38 = *(void *)&v17[v36 + 8];
  uint64_t v39 = v35[16];
  uint64_t v40 = *(void *)&v17[v39 + 8];
  uint64_t v58 = *(void *)&v17[v39];
  uint64_t v59 = v37;
  uint64_t v41 = v35[20];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v56 = v40;
    uint64_t v57 = v38;
    uint64_t v42 = *(void *)&v22[v36 + 8];
    uint64_t v55 = *(void *)&v22[v36];
    uint64_t v44 = *(void *)&v22[v39];
    uint64_t v43 = *(void *)&v22[v39 + 8];
    uint64_t v45 = (uint64_t)&v22[v41];
    sub_1C27DB06C((uint64_t)v22, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    uint64_t v46 = (uint64_t)&v17[v41];
    uint64_t v47 = (uint64_t)v60;
    sub_1C27DB06C(v46, (uint64_t)v60, type metadata accessor for ColorRepresentation);
    uint64_t v48 = (uint64_t)v61;
    sub_1C27DB06C(v45, (uint64_t)v61, type metadata accessor for ColorRepresentation);
    LOBYTE(v45) = static ImageRepresentation.== infix(_:_:)((uint64_t)v17, (uint64_t)v11);
    sub_1C27CC1E8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    if (v45)
    {
      if (v59 == v55 && v57 == v42)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v50 = sub_1C28CE640();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v50 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_16:
          swift_bridgeObjectRelease();
          sub_1C27CC1E8(v48, type metadata accessor for ColorRepresentation);
          sub_1C27CC1E8(v47, type metadata accessor for ColorRepresentation);
          sub_1C27CC1E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
          uint64_t v51 = (uint64_t)v62;
LABEL_17:
          sub_1C27CC1E8(v51, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
          goto LABEL_18;
        }
      }
      if (v58 == v44 && v56 == v43)
      {
        swift_bridgeObjectRelease_n();
        char v21 = v62;
      }
      else
      {
        char v52 = sub_1C28CE640();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v21 = v62;
        if ((v52 & 1) == 0)
        {
          sub_1C27CC1E8(v48, type metadata accessor for ColorRepresentation);
          sub_1C27CC1E8(v47, type metadata accessor for ColorRepresentation);
          sub_1C27CC1E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
          uint64_t v51 = (uint64_t)v21;
          goto LABEL_17;
        }
      }
      char v34 = _s16HealthExperience19ColorRepresentationO2eeoiySbAC_ACtFZ_0(v47, v48);
      sub_1C27CC1E8(v48, type metadata accessor for ColorRepresentation);
      sub_1C27CC1E8(v47, type metadata accessor for ColorRepresentation);
      sub_1C27CC1E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1C27CC1E8((uint64_t)&v17[v41], type metadata accessor for ColorRepresentation);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C27CC1E8((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  char v21 = v62;
LABEL_7:
  sub_1C28CBDE4((uint64_t)v21, &qword_1EA311758, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
LABEL_18:
  char v34 = 0;
  return v34 & 1;
}

void sub_1C28C4FAC()
{
  if (!qword_1EA311610)
  {
    MEMORY[0x1F4188790]();
    type metadata accessor for ImageRepresentation();
    type metadata accessor for ColorRepresentation(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA311610);
    }
  }
}

unint64_t sub_1C28C50C4()
{
  unint64_t result = qword_1EA311620;
  if (!qword_1EA311620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311620);
  }
  return result;
}

unint64_t sub_1C28C5118()
{
  unint64_t result = qword_1EA311630;
  if (!qword_1EA311630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311630);
  }
  return result;
}

unint64_t sub_1C28C516C()
{
  unint64_t result = qword_1EA311640;
  if (!qword_1EA311640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311640);
  }
  return result;
}

unint64_t sub_1C28C51C0()
{
  unint64_t result = qword_1EA311648;
  if (!qword_1EA311648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311648);
  }
  return result;
}

unint64_t sub_1C28C5214()
{
  unint64_t result = qword_1EA311668;
  if (!qword_1EA311668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311668);
  }
  return result;
}

BOOL _s16HealthExperience28PromotionalTileConfigurationV4HeroO05ImageE0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((static ImageRepresentation.== infix(_:_:)(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = (double *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 8);
  uint64_t v8 = (double *)(a2 + v5);
  int v9 = *(unsigned __int8 *)(a2 + v5 + 8);
  if (v7)
  {
    if (!v9) {
      return 0;
    }
  }
  else
  {
    if (*v6 != *v8) {
      LOBYTE(v9) = 1;
    }
    if (v9) {
      return 0;
    }
  }
  uint64_t v10 = *(int *)(v4 + 24);
  uint64_t v11 = (double *)(a1 + v10);
  char v12 = *(unsigned char *)(a1 + v10 + 8);
  uint64_t v13 = (double *)(a2 + v10);
  char v14 = *(unsigned char *)(a2 + v10 + 8);
  if ((v12 & 1) == 0)
  {
    if (*v11 != *v13) {
      char v14 = 1;
    }
    return (v14 & 1) == 0;
  }
  return (v14 & 1) != 0;
}

unint64_t sub_1C28C530C()
{
  unint64_t result = qword_1EBB75F28;
  if (!qword_1EBB75F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75F28);
  }
  return result;
}

unint64_t sub_1C28C5360()
{
  unint64_t result = qword_1EA311678;
  if (!qword_1EA311678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311678);
  }
  return result;
}

unint64_t sub_1C28C53B4()
{
  unint64_t result = qword_1EBB75EA8;
  if (!qword_1EBB75EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75EA8);
  }
  return result;
}

unint64_t sub_1C28C5408()
{
  unint64_t result = qword_1EBB76678;
  if (!qword_1EBB76678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76678);
  }
  return result;
}

uint64_t sub_1C28C545C()
{
  return sub_1C27DB0D4(&qword_1EA3116A0, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
}

uint64_t sub_1C28C54A4()
{
  return sub_1C27DB0D4(&qword_1EA3116A8, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
}

unint64_t sub_1C28C54F0()
{
  unint64_t result = qword_1EA3116B0;
  if (!qword_1EA3116B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3116B0);
  }
  return result;
}

uint64_t sub_1C28C5544()
{
  return sub_1C27DB0D4(&qword_1EA3116B8, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero);
}

uint64_t sub_1C28C558C()
{
  return sub_1C27DB0D4(&qword_1EA3116C0, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration);
}

uint64_t *initializeBufferWithCopyOfBuffer for PromotionalTileConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    type metadata accessor for PromotionalTileConfiguration.Hero(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = *((void *)v11 + 1);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v22;
      *((void *)v10 + 2) = *((void *)v11 + 2);
      v10[24] = v11[24];
      uint64_t v23 = *((void *)v11 + 5);
      *((void *)v10 + 4) = *((void *)v11 + 4);
      *((void *)v10 + 5) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for ImageRepresentation();
      int v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 2)
      {
        uint64_t v35 = *(void *)v11;
        unint64_t v36 = *((void *)v11 + 1);
        sub_1C27E2B38(*(void *)v11, v36);
        *(void *)uint64_t v10 = v35;
        *((void *)v10 + 1) = v36;
        *((void *)v10 + 2) = *((void *)v11 + 2);
      }
      else if (v13 == 1)
      {
        uint64_t v14 = *((void *)v11 + 1);
        *(void *)uint64_t v10 = *(void *)v11;
        *((void *)v10 + 1) = v14;
        sub_1C27CC3FC();
        uint64_t v16 = *(int *)(v15 + 48);
        uint64_t v85 = &v10[v16];
        uint64_t v17 = &v11[v16];
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v19 = v18;
        uint64_t v81 = *(void *)(v18 - 8);
        uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
        swift_bridgeObjectRetain();
        if (v83(v17, 1, v19))
        {
          sub_1C27CC580(0);
          memcpy(v85, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v85, v17, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v85, 0, 1, v19);
        }
      }
      else
      {
        uint64_t v37 = *((void *)v11 + 1);
        *(void *)uint64_t v10 = *(void *)v11;
        *((void *)v10 + 1) = v37;
        uint64_t v38 = *((void *)v11 + 3);
        *((void *)v10 + 2) = *((void *)v11 + 2);
        *((void *)v10 + 3) = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      uint64_t v44 = *(int *)(v43 + 20);
      uint64_t v45 = &v10[v44];
      uint64_t v46 = &v11[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      v45[8] = v46[8];
      uint64_t v47 = *(int *)(v43 + 24);
      uint64_t v48 = &v10[v47];
      uint64_t v49 = &v11[v47];
      v48[8] = v49[8];
      *(void *)uint64_t v48 = *(void *)v49;
    }
    else
    {
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v24 = *((void *)v11 + 1);
        *(void *)uint64_t v10 = *(void *)v11;
        *((void *)v10 + 1) = v24;
        *((void *)v10 + 2) = *((void *)v11 + 2);
        v10[24] = v11[24];
        uint64_t v25 = *((void *)v11 + 4);
        uint64_t v26 = *((void *)v11 + 5);
        *((void *)v10 + 4) = v25;
        *((void *)v10 + 5) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for ImageRepresentation();
        int v27 = swift_getEnumCaseMultiPayload();
        if (v27 == 2)
        {
          uint64_t v40 = *(void *)v11;
          unint64_t v39 = *((void *)v11 + 1);
          sub_1C27E2B38(*(void *)v11, v39);
          *(void *)uint64_t v10 = v40;
          *((void *)v10 + 1) = v39;
          *((void *)v10 + 2) = *((void *)v11 + 2);
        }
        else if (v27 == 1)
        {
          uint64_t v28 = *((void *)v11 + 1);
          *(void *)uint64_t v10 = *(void *)v11;
          *((void *)v10 + 1) = v28;
          sub_1C27CC3FC();
          uint64_t v30 = *(int *)(v29 + 48);
          uint64_t v84 = &v10[v30];
          char v31 = &v11[v30];
          sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
          uint64_t v33 = v32;
          uint64_t v80 = *(void *)(v32 - 8);
          uint64_t v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
          swift_bridgeObjectRetain();
          if (v82(v31, 1, v33))
          {
            sub_1C27CC580(0);
            memcpy(v84, v31, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v84, v31, v33);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v84, 0, 1, v33);
          }
        }
        else
        {
          uint64_t v41 = *((void *)v11 + 1);
          *(void *)uint64_t v10 = *(void *)v11;
          *((void *)v10 + 1) = v41;
          uint64_t v42 = *((void *)v11 + 3);
          *((void *)v10 + 2) = *((void *)v11 + 2);
          *((void *)v10 + 3) = v42;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        sub_1C28C4FAC();
        uint64_t v51 = v50[12];
        char v52 = &v10[v51];
        uint64_t v53 = &v11[v51];
        uint64_t v54 = *((void *)v53 + 1);
        *(void *)char v52 = *(void *)v53;
        *((void *)v52 + 1) = v54;
        uint64_t v55 = v50[16];
        uint64_t v56 = &v10[v55];
        uint64_t v57 = &v11[v55];
        uint64_t v58 = *((void *)v57 + 1);
        *(void *)uint64_t v56 = *(void *)v57;
        *((void *)v56 + 1) = v58;
        uint64_t v59 = v50[20];
        __dst = &v10[v59];
        uint64_t v60 = &v11[v59];
        uint64_t v61 = type metadata accessor for ColorRepresentation(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, v60, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(__dst, v60, v62);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v63 = a3[7];
    uint64_t v64 = a3[8];
    uint64_t v65 = (uint64_t *)((char *)v4 + v63);
    uint64_t v66 = (uint64_t *)((char *)a2 + v63);
    uint64_t v67 = v66[1];
    *uint64_t v65 = *v66;
    v65[1] = v67;
    char v68 = (uint64_t *)((char *)v4 + v64);
    uint64_t v69 = (uint64_t *)((char *)a2 + v64);
    uint64_t v70 = v69[1];
    *char v68 = *v69;
    v68[1] = v70;
    uint64_t v71 = a3[9];
    uint64_t v72 = a3[10];
    unint64_t v73 = (uint64_t *)((char *)v4 + v71);
    uint64_t v74 = (uint64_t *)((char *)a2 + v71);
    uint64_t v75 = v74[1];
    *unint64_t v73 = *v74;
    v73[1] = v75;
    uint64_t v76 = (uint64_t *)((char *)v4 + v72);
    uint64_t v77 = (uint64_t *)((char *)a2 + v72);
    uint64_t v78 = v77[1];
    *uint64_t v76 = *v77;
    v76[1] = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *assignWithCopy for PromotionalTileConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1C27CC1E8((uint64_t)a1 + v6, type metadata accessor for PromotionalTileConfiguration.Hero);
    type metadata accessor for PromotionalTileConfiguration.Hero(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      uint64_t v17 = *((void *)v8 + 2);
      v7[24] = v8[24];
      *((void *)v7 + 2) = v17;
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = *((void *)v8 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for ImageRepresentation();
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 2)
      {
        uint64_t v26 = *(void *)v8;
        unint64_t v27 = *((void *)v8 + 1);
        sub_1C27E2B38(*(void *)v8, v27);
        *(void *)uint64_t v7 = v26;
        *((void *)v7 + 1) = v27;
        *((void *)v7 + 2) = *((void *)v8 + 2);
      }
      else if (v10 == 1)
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        sub_1C27CC3FC();
        uint64_t v12 = *(int *)(v11 + 48);
        char v68 = &v7[v12];
        int v13 = &v8[v12];
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v15 = v14;
        uint64_t v64 = *(void *)(v14 - 8);
        uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
        swift_bridgeObjectRetain();
        if (v66(v13, 1, v15))
        {
          sub_1C27CC580(0);
          memcpy(v68, v13, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v68, v13, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v68, 0, 1, v15);
        }
      }
      else
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v30 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      uint64_t v31 = *(int *)(v30 + 20);
      uint64_t v32 = &v7[v31];
      uint64_t v33 = &v8[v31];
      char v34 = v33[8];
      *(void *)uint64_t v32 = *(void *)v33;
      _OWORD v32[8] = v34;
      uint64_t v35 = *(int *)(v30 + 24);
      unint64_t v36 = &v7[v35];
      uint64_t v37 = &v8[v35];
      char v38 = v37[8];
      *(void *)unint64_t v36 = *(void *)v37;
      v36[8] = v38;
    }
    else
    {
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        uint64_t v18 = *((void *)v8 + 2);
        v7[24] = v8[24];
        *((void *)v7 + 2) = v18;
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for ImageRepresentation();
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 2)
        {
          uint64_t v29 = *(void *)v8;
          unint64_t v28 = *((void *)v8 + 1);
          sub_1C27E2B38(*(void *)v8, v28);
          *(void *)uint64_t v7 = v29;
          *((void *)v7 + 1) = v28;
          *((void *)v7 + 2) = *((void *)v8 + 2);
        }
        else if (v19 == 1)
        {
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          sub_1C27CC3FC();
          uint64_t v21 = *(int *)(v20 + 48);
          uint64_t v67 = &v7[v21];
          uint64_t v22 = &v8[v21];
          sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
          uint64_t v24 = v23;
          uint64_t v63 = *(void *)(v23 - 8);
          uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
          swift_bridgeObjectRetain();
          if (v65(v22, 1, v24))
          {
            sub_1C27CC580(0);
            memcpy(v67, v22, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v67, v22, v24);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v67, 0, 1, v24);
          }
        }
        else
        {
          *(void *)uint64_t v7 = *(void *)v8;
          *((void *)v7 + 1) = *((void *)v8 + 1);
          *((void *)v7 + 2) = *((void *)v8 + 2);
          *((void *)v7 + 3) = *((void *)v8 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        sub_1C28C4FAC();
        uint64_t v40 = v39[12];
        uint64_t v41 = &v7[v40];
        uint64_t v42 = &v8[v40];
        *(void *)uint64_t v41 = *(void *)v42;
        *((void *)v41 + 1) = *((void *)v42 + 1);
        uint64_t v43 = v39[16];
        uint64_t v44 = &v7[v43];
        uint64_t v45 = &v8[v43];
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = *((void *)v45 + 1);
        uint64_t v46 = v39[20];
        __dst = &v7[v46];
        uint64_t v47 = &v8[v46];
        uint64_t v48 = type metadata accessor for ColorRepresentation(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dst, v47, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(__dst, v47, v49);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v50 = a3[7];
  uint64_t v51 = (void *)((char *)a1 + v50);
  char v52 = (void *)((char *)a2 + v50);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[8];
  uint64_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (void *)((char *)a2 + v53);
  void *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[9];
  uint64_t v57 = (void *)((char *)a1 + v56);
  uint64_t v58 = (void *)((char *)a2 + v56);
  *uint64_t v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[10];
  uint64_t v60 = (void *)((char *)a1 + v59);
  uint64_t v61 = (void *)((char *)a2 + v59);
  *uint64_t v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PromotionalTileConfiguration(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for ImageRepresentation();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      sub_1C27CC3FC();
      uint64_t v15 = *(int *)(v14 + 48);
      __dst = (char *)v8 + v15;
      uint64_t v16 = (char *)v9 + v15;
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
      {
        sub_1C27CC580(0);
        memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v16, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v28 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    uint64_t v29 = *(int *)(v28 + 20);
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = *(int *)(v28 + 24);
    uint64_t v33 = (char *)v8 + v32;
    char v34 = (char *)v9 + v32;
    _OWORD v33[8] = v34[8];
    *(void *)uint64_t v33 = *(void *)v34;
    goto LABEL_23;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v12 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v21 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v8 = *v9;
        sub_1C27CC3FC();
        uint64_t v23 = *(int *)(v22 + 48);
        __dsta = (char *)v8 + v23;
        uint64_t v24 = (char *)v9 + v23;
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v26 = v25;
        uint64_t v44 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v24, 1, v25))
        {
          sub_1C27CC580(0);
          memcpy(__dsta, v24, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(__dsta, v24, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(__dsta, 0, 1, v26);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
      }
      sub_1C28C4FAC();
      *(_OWORD *)((char *)v8 + v35[12]) = *(_OWORD *)((char *)v9 + v35[12]);
      *(_OWORD *)((char *)v8 + v35[16]) = *(_OWORD *)((char *)v9 + v35[16]);
      uint64_t v36 = v35[20];
      uint64_t v37 = (char *)v8 + v36;
      char v38 = (char *)v9 + v36;
      uint64_t v39 = type metadata accessor for ColorRepresentation(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_23:
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_24:
  uint64_t v41 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v41) = *(_OWORD *)((char *)a2 + v41);
  uint64_t v42 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v42) = *(_OWORD *)((char *)a2 + v42);
  return a1;
}

void *assignWithTake for PromotionalTileConfiguration(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    sub_1C27CC1E8((uint64_t)a1 + v8, type metadata accessor for PromotionalTileConfiguration.Hero);
    uint64_t v11 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        _OWORD *v9 = *v10;
        sub_1C27CC3FC();
        uint64_t v16 = *(int *)(v15 + 48);
        __dst = (char *)v9 + v16;
        uint64_t v17 = (char *)v10 + v16;
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v19 = v18;
        uint64_t v20 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
        {
          sub_1C27CC580(0);
          memcpy(__dst, v17, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v17, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      uint64_t v29 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      uint64_t v30 = *(int *)(v29 + 20);
      uint64_t v31 = (char *)v9 + v30;
      uint64_t v32 = (char *)v10 + v30;
      *(void *)uint64_t v31 = *(void *)v32;
      _OWORD v31[8] = v32[8];
      uint64_t v33 = *(int *)(v29 + 24);
      char v34 = (char *)v9 + v33;
      uint64_t v35 = (char *)v10 + v33;
      v34[8] = v35[8];
      *(void *)char v34 = *(void *)v35;
      goto LABEL_24;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v13 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v22 = type metadata accessor for ImageRepresentation();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          _OWORD *v9 = *v10;
          sub_1C27CC3FC();
          uint64_t v24 = *(int *)(v23 + 48);
          __dsta = (char *)v9 + v24;
          uint64_t v25 = (char *)v10 + v24;
          sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
          uint64_t v27 = v26;
          uint64_t v63 = *(void *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v25, 1, v26))
          {
            sub_1C27CC580(0);
            memcpy(__dsta, v25, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v63 + 32))(__dsta, v25, v27);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(__dsta, 0, 1, v27);
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
        }
        sub_1C28C4FAC();
        *(_OWORD *)((char *)v9 + v36[12]) = *(_OWORD *)((char *)v10 + v36[12]);
        *(_OWORD *)((char *)v9 + v36[16]) = *(_OWORD *)((char *)v10 + v36[16]);
        uint64_t v37 = v36[20];
        char v38 = (char *)v9 + v37;
        uint64_t v39 = (char *)v10 + v37;
        uint64_t v40 = type metadata accessor for ColorRepresentation(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v38, v39, v41);
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_24:
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
LABEL_25:
  uint64_t v42 = a3[7];
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[8];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *uint64_t v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[9];
  uint64_t v53 = (void *)((char *)a1 + v52);
  uint64_t v54 = (void *)((char *)a2 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[10];
  uint64_t v58 = (void *)((char *)a1 + v57);
  uint64_t v59 = (void *)((char *)a2 + v57);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  *uint64_t v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C28C6E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C28C6EB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C28C6F60()
{
  uint64_t result = type metadata accessor for PromotionalTileConfiguration.Hero(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for PromotionalTileConfiguration.Hero(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v18 = *(void *)(a2 + 32);
      uint64_t v19 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v18;
      *(void *)(a1 + 40) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for ImageRepresentation();
      int v7 = swift_getEnumCaseMultiPayload();
      if (v7 == 2)
      {
        uint64_t v32 = *(void *)a2;
        unint64_t v33 = *(void *)(a2 + 8);
        sub_1C27E2B38(*(void *)a2, v33);
        *(void *)a1 = v32;
        *(void *)(a1 + 8) = v33;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
      }
      else if (v7 == 1)
      {
        uint64_t v8 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v8;
        sub_1C27CC3FC();
        uint64_t v10 = *(int *)(v9 + 48);
        uint64_t v62 = (const void *)(a2 + v10);
        __dst = (void *)(a1 + v10);
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v12 = v11;
        uint64_t v13 = *(void *)(v11 - 8);
        uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        if (v14(v62, 1, v12))
        {
          sub_1C27CC580(0);
          memcpy(__dst, v62, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(__dst, v62, v12);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
        }
      }
      else
      {
        uint64_t v34 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v34;
        uint64_t v35 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      uint64_t v41 = *(int *)(v40 + 20);
      uint64_t v42 = a1 + v41;
      uint64_t v43 = a2 + v41;
      *(void *)uint64_t v42 = *(void *)v43;
      *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
      uint64_t v44 = *(int *)(v40 + 24);
      uint64_t v45 = a1 + v44;
      uint64_t v46 = a2 + v44;
      *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
      *(void *)uint64_t v45 = *(void *)v46;
    }
    else
    {
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v20 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v20;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        uint64_t v21 = *(void *)(a2 + 32);
        uint64_t v22 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = v21;
        *(void *)(a1 + 40) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for ImageRepresentation();
        int v23 = swift_getEnumCaseMultiPayload();
        if (v23 == 2)
        {
          uint64_t v36 = *(void *)a2;
          unint64_t v37 = *(void *)(a2 + 8);
          sub_1C27E2B38(*(void *)a2, v37);
          *(void *)a1 = v36;
          *(void *)(a1 + 8) = v37;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
        }
        else if (v23 == 1)
        {
          uint64_t v63 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v63;
          sub_1C27CC3FC();
          uint64_t v25 = *(int *)(v24 + 48);
          __dsta = (void *)(a1 + v25);
          uint64_t v26 = (const void *)(a2 + v25);
          sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
          uint64_t v28 = v27;
          uint64_t v29 = *(void *)(v27 - 8);
          uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
          swift_bridgeObjectRetain();
          if (v30(v26, 1, v28))
          {
            sub_1C27CC580(0);
            memcpy(__dsta, v26, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(__dsta, v26, v28);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dsta, 0, 1, v28);
          }
        }
        else
        {
          uint64_t v38 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v38;
          uint64_t v39 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v39;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        sub_1C28C4FAC();
        uint64_t v48 = v47[12];
        uint64_t v49 = (void *)(a1 + v48);
        uint64_t v50 = (void *)(a2 + v48);
        uint64_t v51 = v50[1];
        *uint64_t v49 = *v50;
        v49[1] = v51;
        uint64_t v52 = v47[16];
        uint64_t v53 = (void *)(a1 + v52);
        uint64_t v54 = (void *)(a2 + v52);
        uint64_t v55 = v54[1];
        *uint64_t v53 = *v54;
        v53[1] = v55;
        uint64_t v56 = v47[20];
        uint64_t v57 = (void *)(a1 + v56);
        uint64_t v58 = (const void *)(a2 + v56);
        uint64_t v59 = type metadata accessor for ColorRepresentation(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v57, v58, v60);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for PromotionalTileConfiguration.Hero(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_1C27CC1E8(a1, type metadata accessor for PromotionalTileConfiguration.Hero);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = a2[1];
      uint64_t v13 = a2[2];
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for ImageRepresentation();
      int v5 = swift_getEnumCaseMultiPayload();
      if (v5 == 2)
      {
        uint64_t v24 = *a2;
        unint64_t v25 = a2[1];
        sub_1C27E2B38(*a2, v25);
        *(void *)a1 = v24;
        *(void *)(a1 + 8) = v25;
        *(void *)(a1 + 16) = a2[2];
      }
      else if (v5 == 1)
      {
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        sub_1C27CC3FC();
        uint64_t v7 = *(int *)(v6 + 48);
        uint64_t v50 = (char *)a2 + v7;
        __dst = (void *)(a1 + v7);
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v9 = v8;
        uint64_t v10 = *(void *)(v8 - 8);
        uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
        swift_bridgeObjectRetain();
        if (v11(v50, 1, v9))
        {
          sub_1C27CC580(0);
          memcpy(__dst, v50, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v10 + 16))(__dst, v50, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
        }
      }
      else
      {
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      uint64_t v29 = *(int *)(v28 + 20);
      uint64_t v30 = a1 + v29;
      uint64_t v31 = (uint64_t)a2 + v29;
      char v32 = *(unsigned char *)(v31 + 8);
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v32;
      uint64_t v33 = *(int *)(v28 + 24);
      uint64_t v34 = a1 + v33;
      uint64_t v35 = (uint64_t)a2 + v33;
      char v36 = *(unsigned char *)(v35 + 8);
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v36;
    }
    else
    {
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        uint64_t v14 = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        *(void *)(a1 + 16) = v14;
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for ImageRepresentation();
        int v15 = swift_getEnumCaseMultiPayload();
        if (v15 == 2)
        {
          uint64_t v26 = *a2;
          unint64_t v27 = a2[1];
          sub_1C27E2B38(*a2, v27);
          *(void *)a1 = v26;
          *(void *)(a1 + 8) = v27;
          *(void *)(a1 + 16) = a2[2];
        }
        else if (v15 == 1)
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          sub_1C27CC3FC();
          uint64_t v17 = *(int *)(v16 + 48);
          __dsta = (void *)(a1 + v17);
          uint64_t v18 = (char *)a2 + v17;
          sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
          uint64_t v20 = v19;
          uint64_t v21 = *(void *)(v19 - 8);
          uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
          swift_bridgeObjectRetain();
          if (v22(v18, 1, v20))
          {
            sub_1C27CC580(0);
            memcpy(__dsta, v18, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v21 + 16))(__dsta, v18, v20);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dsta, 0, 1, v20);
          }
        }
        else
        {
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = a2[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        sub_1C28C4FAC();
        uint64_t v38 = v37[12];
        uint64_t v39 = (void *)(a1 + v38);
        uint64_t v40 = (uint64_t *)((char *)a2 + v38);
        *uint64_t v39 = *v40;
        v39[1] = v40[1];
        uint64_t v41 = v37[16];
        uint64_t v42 = (void *)(a1 + v41);
        uint64_t v43 = (uint64_t *)((char *)a2 + v41);
        void *v42 = *v43;
        v42[1] = v43[1];
        uint64_t v44 = v37[20];
        uint64_t v45 = (void *)(a1 + v44);
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = type metadata accessor for ColorRepresentation(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v45, v46, v48);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PromotionalTileConfiguration.Hero(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for ImageRepresentation();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1C27CC3FC();
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        sub_1C27CC580(0);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    uint64_t v26 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    uint64_t v27 = *(int *)(v26 + 20);
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = *(int *)(v26 + 24);
    uint64_t v31 = (char *)a1 + v30;
    char v32 = (char *)a2 + v30;
    _OWORD v31[8] = v32[8];
    *(void *)uint64_t v31 = *(void *)v32;
    goto LABEL_23;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        sub_1C27CC3FC();
        uint64_t v19 = *(int *)(v18 + 48);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v23 = v22;
        uint64_t v24 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22))
        {
          sub_1C27CC580(0);
          memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v21, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      sub_1C28C4FAC();
      *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
      *(_OWORD *)((char *)a1 + v33[16]) = *(_OWORD *)((char *)a2 + v33[16]);
      uint64_t v34 = v33[20];
      uint64_t v35 = (char *)a1 + v34;
      char v36 = (char *)a2 + v34;
      uint64_t v37 = type metadata accessor for ColorRepresentation(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_23:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for PromotionalTileConfiguration.Hero(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C27CC1E8((uint64_t)a1, type metadata accessor for PromotionalTileConfiguration.Hero);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        sub_1C27CC3FC();
        uint64_t v10 = *(int *)(v9 + 48);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v14 = v13;
        uint64_t v15 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
        {
          sub_1C27CC580(0);
          memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      uint64_t v26 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      uint64_t v27 = *(int *)(v26 + 20);
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = *(int *)(v26 + 24);
      uint64_t v31 = (char *)a1 + v30;
      char v32 = (char *)a2 + v30;
      _OWORD v31[8] = v32[8];
      *(void *)uint64_t v31 = *(void *)v32;
      goto LABEL_24;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        uint64_t v17 = type metadata accessor for ImageRepresentation();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *a1 = *a2;
          sub_1C27CC3FC();
          uint64_t v19 = *(int *)(v18 + 48);
          uint64_t v20 = (char *)a1 + v19;
          uint64_t v21 = (char *)a2 + v19;
          sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
          uint64_t v23 = v22;
          uint64_t v24 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22))
          {
            sub_1C27CC580(0);
            memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v21, v23);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        sub_1C28C4FAC();
        *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
        *(_OWORD *)((char *)a1 + v33[16]) = *(_OWORD *)((char *)a2 + v33[16]);
        uint64_t v34 = v33[20];
        uint64_t v35 = (char *)a1 + v34;
        char v36 = (char *)a2 + v34;
        uint64_t v37 = type metadata accessor for ColorRepresentation(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_24:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C28C8558()
{
  uint64_t result = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for PromotionalTileConfiguration.Hero.WatchConfiguration(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v7 = *(void *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ImageRepresentation();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v19 = *(void *)a2;
        unint64_t v20 = *(void *)(a2 + 8);
        sub_1C27E2B38(*(void *)a2, v20);
        *(void *)a1 = v19;
        *(void *)(a1 + 8) = v20;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v11 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v11;
        sub_1C27CC3FC();
        uint64_t v13 = *(int *)(v12 + 48);
        uint64_t v38 = (const void *)(a2 + v13);
        __dst = (void *)(a1 + v13);
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v15 = v14;
        uint64_t v16 = *(void *)(v14 - 8);
        uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
        swift_bridgeObjectRetain();
        if (v17(v38, 1, v15))
        {
          sub_1C27CC580(0);
          memcpy(__dst, v38, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(__dst, v38, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
        }
      }
      else
      {
        uint64_t v21 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v21;
        uint64_t v22 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C28C4FAC();
      uint64_t v24 = v23[12];
      uint64_t v25 = (void *)(a1 + v24);
      uint64_t v26 = (void *)(a2 + v24);
      uint64_t v27 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v27;
      uint64_t v28 = v23[16];
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (void *)(a2 + v28);
      uint64_t v31 = v30[1];
      *uint64_t v29 = *v30;
      v29[1] = v31;
      uint64_t v32 = v23[20];
      uint64_t v33 = (void *)(a1 + v32);
      uint64_t v34 = (const void *)(a2 + v32);
      uint64_t v35 = type metadata accessor for ColorRepresentation(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v33, v34, v36);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PromotionalTileConfiguration.Hero.WatchConfiguration(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for ImageRepresentation();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        sub_1C27E2870(*(void *)a1, *(void *)(a1 + 8));
        break;
      case 1:
        swift_bridgeObjectRelease();
        sub_1C27CC3FC();
        uint64_t v5 = a1 + *(int *)(v4 + 48);
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)(v6 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6)) {
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
        }
        break;
      case 0:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
    sub_1C28C4FAC();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = a1 + *(int *)(v10 + 80);
    type metadata accessor for ColorRepresentation(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (!result)
    {
      sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
      return v13(v11, v12);
    }
  }
  return result;
}

uint64_t initializeWithCopy for PromotionalTileConfiguration.Hero.WatchConfiguration(uint64_t a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v5 = a2[4];
    uint64_t v6 = a2[5];
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    type metadata accessor for ImageRepresentation();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = *a2;
      unint64_t v17 = a2[1];
      sub_1C27E2B38(*a2, v17);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v8;
      sub_1C27CC3FC();
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v35 = (char *)a2 + v10;
      __dst = (void *)(a1 + v10);
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v35, 1, v12))
      {
        sub_1C27CC580(0);
        memcpy(__dst, v35, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v35, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
    }
    else
    {
      uint64_t v18 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v18;
      uint64_t v19 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    sub_1C28C4FAC();
    uint64_t v21 = v20[12];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v20[16];
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = v20[20];
    uint64_t v30 = (void *)(a1 + v29);
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = type metadata accessor for ColorRepresentation(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v30, v31, v33);
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for PromotionalTileConfiguration.Hero.WatchConfiguration(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_1C27CC1E8(a1, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = a2[1];
      uint64_t v4 = a2[2];
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ImageRepresentation();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v13 = *a2;
        unint64_t v14 = a2[1];
        sub_1C27E2B38(*a2, v14);
        *(void *)a1 = v13;
        *(void *)(a1 + 8) = v14;
        *(void *)(a1 + 16) = a2[2];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        sub_1C27CC3FC();
        uint64_t v7 = *(int *)(v6 + 48);
        uint64_t v28 = (char *)a2 + v7;
        __dst = (void *)(a1 + v7);
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v9 = v8;
        uint64_t v10 = *(void *)(v8 - 8);
        uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
        swift_bridgeObjectRetain();
        if (v11(v28, 1, v9))
        {
          sub_1C27CC580(0);
          memcpy(__dst, v28, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v10 + 16))(__dst, v28, v9);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
        }
      }
      else
      {
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = a2[1];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C28C4FAC();
      uint64_t v16 = v15[12];
      unint64_t v17 = (void *)(a1 + v16);
      uint64_t v18 = (uint64_t *)((char *)a2 + v16);
      *unint64_t v17 = *v18;
      v17[1] = v18[1];
      uint64_t v19 = v15[16];
      unint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (uint64_t *)((char *)a2 + v19);
      *unint64_t v20 = *v21;
      v20[1] = v21[1];
      uint64_t v22 = v15[20];
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = type metadata accessor for ColorRepresentation(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v23, v24, v26);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PromotionalTileConfiguration.Hero.WatchConfiguration(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for ImageRepresentation();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1C27CC3FC();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
      {
        sub_1C27CC580(0);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    sub_1C28C4FAC();
    *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
    *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
    uint64_t v16 = v15[20];
    unint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for ColorRepresentation(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for PromotionalTileConfiguration.Hero.WatchConfiguration(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C27CC1E8((uint64_t)a1, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        sub_1C27CC3FC();
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v12 = v11;
        uint64_t v13 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
        {
          sub_1C27CC580(0);
          memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      sub_1C28C4FAC();
      *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
      *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
      uint64_t v16 = v15[20];
      unint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for ColorRepresentation(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C28C97C8()
{
  uint64_t result = type metadata accessor for ImageRepresentation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ColorRepresentation(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      uint64_t v4 = &v3;
      uint64_t v5 = "0";
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for ImageRepresentation();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = *a2;
      unint64_t v18 = a2[1];
      sub_1C27E2B38(*a2, v18);
      *a1 = v17;
      a1[1] = v18;
      a1[2] = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      sub_1C27CC3FC();
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v28 = (char *)a2 + v10;
      __dst = (char *)a1 + v10;
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v28, 1, v12))
      {
        sub_1C27CC580(0);
        memcpy(__dst, v28, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v28, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
    }
    else
    {
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      uint64_t v20 = a2[3];
      a1[2] = a2[2];
      a1[3] = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = *(int *)(a3 + 24);
    uint64_t v23 = (char *)a1 + v21;
    uint64_t v24 = (char *)a2 + v21;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = (char *)a1 + v22;
    uint64_t v26 = (char *)a2 + v22;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
  }
  return a1;
}

uint64_t *initializeWithCopy for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  type metadata accessor for ImageRepresentation();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v15 = *a2;
    unint64_t v16 = a2[1];
    sub_1C27E2B38(*a2, v16);
    *a1 = v15;
    a1[1] = v16;
    a1[2] = a2[2];
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    sub_1C27CC3FC();
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v26 = (char *)a2 + v9;
    __dst = (char *)a1 + v9;
    sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v26, 1, v11))
    {
      sub_1C27CC580(0);
      memcpy(__dst, v26, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v26, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
  }
  else
  {
    uint64_t v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    uint64_t v18 = a2[3];
    a1[2] = a2[2];
    a1[3] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = (char *)a1 + v19;
  uint64_t v22 = (char *)a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = (char *)a1 + v20;
  uint64_t v24 = (char *)a2 + v20;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  return a1;
}

uint64_t *assignWithCopy for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C27CC1E8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    type metadata accessor for ImageRepresentation();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = *a2;
      unint64_t v15 = a2[1];
      sub_1C27E2B38(*a2, v15);
      *a1 = v14;
      a1[1] = v15;
      a1[2] = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1C27CC3FC();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v25 = (char *)a2 + v8;
      __dst = (char *)a1 + v8;
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)(v9 - 8);
      uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v25, 1, v10))
      {
        sub_1C27CC580(0);
        memcpy(__dst, v25, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v25, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  _OWORD v17[8] = v18[8];
  *(void *)uint64_t v17 = v19;
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)v22;
  v21[8] = v22[8];
  *(void *)uint64_t v21 = v23;
  return a1;
}

_OWORD *initializeWithTake for PromotionalTileConfiguration.Hero.ImageConfiguration(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ImageRepresentation();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1C27CC3FC();
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
    {
      sub_1C27CC580(0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  _OWORD v17[8] = v18[8];
  uint64_t v19 = (char *)a1 + v16;
  uint64_t v20 = (char *)a2 + v16;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  return a1;
}

_OWORD *assignWithTake for PromotionalTileConfiguration.Hero.ImageConfiguration(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C27CC1E8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    uint64_t v6 = type metadata accessor for ImageRepresentation();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1C27CC3FC();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
      {
        sub_1C27CC580(0);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  _OWORD v17[8] = v18[8];
  uint64_t v19 = (char *)a1 + v16;
  uint64_t v20 = (char *)a2 + v16;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C28CA350);
}

uint64_t sub_1C28CA350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageRepresentation();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C28CA3D0);
}

uint64_t sub_1C28CA3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageRepresentation();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C28CA440()
{
  uint64_t result = type metadata accessor for ImageRepresentation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for PromotionalTileConfiguration.Hero.ViewConfiguration()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PromotionalTileConfiguration.Hero.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PromotionalTileConfiguration.Hero.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PromotionalTileConfiguration.Hero.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ViewConfiguration()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.CodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ImageCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ViewCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C28CA7D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C28CA8DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys;
}

unint64_t sub_1C28CA950()
{
  unint64_t result = qword_1EA3116C8;
  if (!qword_1EA3116C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3116C8);
  }
  return result;
}

unint64_t sub_1C28CA9A8()
{
  unint64_t result = qword_1EA3116D0;
  if (!qword_1EA3116D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3116D0);
  }
  return result;
}

unint64_t sub_1C28CAA00()
{
  unint64_t result = qword_1EA3116D8;
  if (!qword_1EA3116D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3116D8);
  }
  return result;
}

unint64_t sub_1C28CAA58()
{
  unint64_t result = qword_1EA3116E0;
  if (!qword_1EA3116E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3116E0);
  }
  return result;
}

unint64_t sub_1C28CAAB0()
{
  unint64_t result = qword_1EA3116E8;
  if (!qword_1EA3116E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3116E8);
  }
  return result;
}

unint64_t sub_1C28CAB08()
{
  unint64_t result = qword_1EA3116F0;
  if (!qword_1EA3116F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3116F0);
  }
  return result;
}

unint64_t sub_1C28CAB60()
{
  unint64_t result = qword_1EA3116F8;
  if (!qword_1EA3116F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3116F8);
  }
  return result;
}

unint64_t sub_1C28CABB8()
{
  unint64_t result = qword_1EA311700;
  if (!qword_1EA311700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311700);
  }
  return result;
}

unint64_t sub_1C28CAC10()
{
  unint64_t result = qword_1EA311708;
  if (!qword_1EA311708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311708);
  }
  return result;
}

unint64_t sub_1C28CAC68()
{
  unint64_t result = qword_1EA311710;
  if (!qword_1EA311710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311710);
  }
  return result;
}

unint64_t sub_1C28CACC0()
{
  unint64_t result = qword_1EBB76590;
  if (!qword_1EBB76590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76590);
  }
  return result;
}

unint64_t sub_1C28CAD18()
{
  unint64_t result = qword_1EBB76588;
  if (!qword_1EBB76588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76588);
  }
  return result;
}

unint64_t sub_1C28CAD70()
{
  unint64_t result = qword_1EBB76658;
  if (!qword_1EBB76658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76658);
  }
  return result;
}

unint64_t sub_1C28CADC8()
{
  unint64_t result = qword_1EBB76650;
  if (!qword_1EBB76650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76650);
  }
  return result;
}

unint64_t sub_1C28CAE20()
{
  unint64_t result = qword_1EBB76688;
  if (!qword_1EBB76688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76688);
  }
  return result;
}

unint64_t sub_1C28CAE78()
{
  unint64_t result = qword_1EBB76680;
  if (!qword_1EBB76680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76680);
  }
  return result;
}

unint64_t sub_1C28CAED0()
{
  unint64_t result = qword_1EBB76670;
  if (!qword_1EBB76670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76670);
  }
  return result;
}

unint64_t sub_1C28CAF28()
{
  unint64_t result = qword_1EBB76668;
  if (!qword_1EBB76668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76668);
  }
  return result;
}

unint64_t sub_1C28CAF80()
{
  unint64_t result = qword_1EBB75EB8;
  if (!qword_1EBB75EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75EB8);
  }
  return result;
}

unint64_t sub_1C28CAFD8()
{
  unint64_t result = qword_1EBB75EB0;
  if (!qword_1EBB75EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75EB0);
  }
  return result;
}

unint64_t sub_1C28CB030()
{
  unint64_t result = qword_1EA311718;
  if (!qword_1EA311718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311718);
  }
  return result;
}

unint64_t sub_1C28CB088()
{
  unint64_t result = qword_1EA311720;
  if (!qword_1EA311720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311720);
  }
  return result;
}

unint64_t sub_1C28CB0E0()
{
  unint64_t result = qword_1EBB765A8;
  if (!qword_1EBB765A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB765A8);
  }
  return result;
}

unint64_t sub_1C28CB138()
{
  unint64_t result = qword_1EBB765A0;
  if (!qword_1EBB765A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB765A0);
  }
  return result;
}

unint64_t sub_1C28CB190()
{
  unint64_t result = qword_1EA311728;
  if (!qword_1EA311728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311728);
  }
  return result;
}

unint64_t sub_1C28CB1E8()
{
  unint64_t result = qword_1EA311730;
  if (!qword_1EA311730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311730);
  }
  return result;
}

unint64_t sub_1C28CB240()
{
  unint64_t result = qword_1EA311738;
  if (!qword_1EA311738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311738);
  }
  return result;
}

unint64_t sub_1C28CB298()
{
  unint64_t result = qword_1EA311740;
  if (!qword_1EA311740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311740);
  }
  return result;
}

unint64_t sub_1C28CB2F0()
{
  unint64_t result = qword_1EA311748;
  if (!qword_1EA311748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311748);
  }
  return result;
}

unint64_t sub_1C28CB348()
{
  unint64_t result = qword_1EA311750;
  if (!qword_1EA311750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA311750);
  }
  return result;
}

uint64_t sub_1C28CB39C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2003134838 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C28CB478(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6961746564 && a2 == 0xE600000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F436C6961746564 && a2 == 0xEB00000000726F6CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C28CB634(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446567616D69 && a2 == 0xE900000000000061;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6965486567616D69 && a2 == 0xEB00000000746867 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E496567616D69 && a2 == 0xEA00000000007465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C28CB7BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E77656976 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6769654877656976 && a2 == 0xEA00000000007468 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C28DB0B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C28CB91C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465646465626D65 && a2 == 0xED00006863746157;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2003134838 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C28CBA80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C28DAE80 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1869768040 && a2 == 0xE400000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C7469546B6E696CLL && a2 == 0xE900000000000065 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69546E6F69746361 && a2 == 0xEB00000000656C74)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void sub_1C28CBD84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C28CBDE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C28CBD84(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C28CBE40()
{
  return MEMORY[0x1F40E2E20]();
}

uint64_t sub_1C28CBE50()
{
  return MEMORY[0x1F40E2E50]();
}

uint64_t sub_1C28CBE60()
{
  return MEMORY[0x1F40E2EA8]();
}

uint64_t sub_1C28CBE70()
{
  return MEMORY[0x1F40E2ED8]();
}

uint64_t sub_1C28CBE80()
{
  return MEMORY[0x1F40E2F60]();
}

uint64_t sub_1C28CBE90()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1C28CBEA0()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1C28CBEB0()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1C28CBEC0()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1C28CBED0()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1C28CBEE0()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1C28CBEF0()
{
  return MEMORY[0x1F40E32B0]();
}

uint64_t sub_1C28CBF00()
{
  return MEMORY[0x1F40E32D8]();
}

uint64_t sub_1C28CBF10()
{
  return MEMORY[0x1F40E32F8]();
}

uint64_t sub_1C28CBF20()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_1C28CBF30()
{
  return MEMORY[0x1F40E3380]();
}

uint64_t sub_1C28CBF40()
{
  return MEMORY[0x1F40E33F0]();
}

uint64_t sub_1C28CBF50()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1C28CBF60()
{
  return MEMORY[0x1F40E34A0]();
}

uint64_t sub_1C28CBF70()
{
  return MEMORY[0x1F40E34C0]();
}

uint64_t sub_1C28CBF80()
{
  return MEMORY[0x1F40E34D0]();
}

uint64_t sub_1C28CBF90()
{
  return MEMORY[0x1F40E34E8]();
}

uint64_t sub_1C28CBFA0()
{
  return MEMORY[0x1F40E34F8]();
}

uint64_t sub_1C28CBFB0()
{
  return MEMORY[0x1F40E3530]();
}

uint64_t sub_1C28CBFC0()
{
  return MEMORY[0x1F40E35B0]();
}

uint64_t sub_1C28CBFD0()
{
  return MEMORY[0x1F40E35D8]();
}

uint64_t sub_1C28CBFE0()
{
  return MEMORY[0x1F40E3658]();
}

uint64_t sub_1C28CBFF0()
{
  return MEMORY[0x1F40E3670]();
}

uint64_t sub_1C28CC000()
{
  return MEMORY[0x1F40E3688]();
}

uint64_t sub_1C28CC010()
{
  return MEMORY[0x1F40E36D8]();
}

uint64_t sub_1C28CC020()
{
  return MEMORY[0x1F40E36F8]();
}

uint64_t sub_1C28CC030()
{
  return MEMORY[0x1F40E3718]();
}

uint64_t sub_1C28CC040()
{
  return MEMORY[0x1F40E3760]();
}

uint64_t sub_1C28CC050()
{
  return MEMORY[0x1F40E37A8]();
}

uint64_t sub_1C28CC060()
{
  return MEMORY[0x1F40E37B8]();
}

uint64_t sub_1C28CC070()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1C28CC080()
{
  return MEMORY[0x1F40E37F0]();
}

uint64_t sub_1C28CC090()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1C28CC0A0()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1C28CC0B0()
{
  return MEMORY[0x1F40E3830]();
}

uint64_t sub_1C28CC0C0()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_1C28CC0D0()
{
  return MEMORY[0x1F40E3908]();
}

uint64_t sub_1C28CC0E0()
{
  return MEMORY[0x1F40E3938]();
}

uint64_t sub_1C28CC0F0()
{
  return MEMORY[0x1F40E3948]();
}

uint64_t sub_1C28CC100()
{
  return MEMORY[0x1F40E3958]();
}

uint64_t sub_1C28CC110()
{
  return MEMORY[0x1F40E3970]();
}

uint64_t sub_1C28CC120()
{
  return MEMORY[0x1F40E3978]();
}

uint64_t sub_1C28CC130()
{
  return MEMORY[0x1F40E3988]();
}

uint64_t sub_1C28CC140()
{
  return MEMORY[0x1F40E3990]();
}

uint64_t sub_1C28CC150()
{
  return MEMORY[0x1F40E39B0]();
}

uint64_t sub_1C28CC160()
{
  return MEMORY[0x1F40E39B8]();
}

uint64_t sub_1C28CC170()
{
  return MEMORY[0x1F40E39C8]();
}

uint64_t sub_1C28CC180()
{
  return MEMORY[0x1F40E39D8]();
}

uint64_t sub_1C28CC190()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1C28CC1A0()
{
  return MEMORY[0x1F40E3A90]();
}

uint64_t sub_1C28CC1B0()
{
  return MEMORY[0x1F40E3A98]();
}

uint64_t sub_1C28CC1C0()
{
  return MEMORY[0x1F40E3AC0]();
}

uint64_t sub_1C28CC1D0()
{
  return MEMORY[0x1F40E3C88]();
}

uint64_t sub_1C28CC1E0()
{
  return MEMORY[0x1F40E3C90]();
}

uint64_t sub_1C28CC1F0()
{
  return MEMORY[0x1F40E3F28]();
}

uint64_t sub_1C28CC200()
{
  return MEMORY[0x1F40E3F58]();
}

uint64_t sub_1C28CC240()
{
  return MEMORY[0x1F40E44B8]();
}

uint64_t sub_1C28CC260()
{
  return MEMORY[0x1F40E44F0]();
}

uint64_t sub_1C28CC270()
{
  return MEMORY[0x1F40E44F8]();
}

uint64_t sub_1C28CC280()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1C28CC290()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1C28CC2A0()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1C28CC2B0()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1C28CC2C0()
{
  return MEMORY[0x1F4187840]();
}

uint64_t sub_1C28CC2D0()
{
  return MEMORY[0x1F40E49E0]();
}

uint64_t sub_1C28CC2E0()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_1C28CC2F0()
{
  return MEMORY[0x1F40E4A50]();
}

uint64_t sub_1C28CC300()
{
  return MEMORY[0x1F40E4A58]();
}

uint64_t sub_1C28CC310()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1C28CC320()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_1C28CC330()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1C28CC340()
{
  return MEMORY[0x1F40E4BC8]();
}

uint64_t sub_1C28CC350()
{
  return MEMORY[0x1F40E4C08]();
}

uint64_t sub_1C28CC360()
{
  return MEMORY[0x1F40E4C30]();
}

uint64_t sub_1C28CC370()
{
  return MEMORY[0x1F40E4C80]();
}

uint64_t sub_1C28CC380()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1C28CC390()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1C28CC3A0()
{
  return MEMORY[0x1F40E4DB8]();
}

uint64_t sub_1C28CC3B0()
{
  return MEMORY[0x1F40E4ED0]();
}

uint64_t sub_1C28CC3C0()
{
  return MEMORY[0x1F40E5088]();
}

uint64_t sub_1C28CC3D0()
{
  return MEMORY[0x1F40E50A8]();
}

uint64_t sub_1C28CC3E0()
{
  return MEMORY[0x1F40E5158]();
}

uint64_t sub_1C28CC3F0()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1C28CC400()
{
  return MEMORY[0x1F40E5198]();
}

uint64_t sub_1C28CC410()
{
  return MEMORY[0x1F40E52B0]();
}

uint64_t sub_1C28CC420()
{
  return MEMORY[0x1F40E52C0]();
}

uint64_t sub_1C28CC430()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_1C28CC440()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1C28CC450()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1C28CC460()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1C28CC470()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_1C28CC480()
{
  return MEMORY[0x1F40E53E8]();
}

uint64_t sub_1C28CC490()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1C28CC4A0()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1C28CC4B0()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1C28CC4C0()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1C28CC4D0()
{
  return MEMORY[0x1F40E58D0]();
}

uint64_t sub_1C28CC4E0()
{
  return MEMORY[0x1F40E5978]();
}

uint64_t sub_1C28CC4F0()
{
  return MEMORY[0x1F40E59E0]();
}

uint64_t sub_1C28CC500()
{
  return MEMORY[0x1F40E5A18]();
}

uint64_t sub_1C28CC510()
{
  return MEMORY[0x1F40E5A40]();
}

uint64_t sub_1C28CC520()
{
  return MEMORY[0x1F40E5A58]();
}

uint64_t sub_1C28CC530()
{
  return MEMORY[0x1F40E5A90]();
}

uint64_t sub_1C28CC540()
{
  return MEMORY[0x1F40E5AA0]();
}

uint64_t sub_1C28CC550()
{
  return MEMORY[0x1F40E5AB8]();
}

uint64_t sub_1C28CC560()
{
  return MEMORY[0x1F40E5AE0]();
}

uint64_t sub_1C28CC570()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_1C28CC580()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_1C28CC590()
{
  return MEMORY[0x1F40E5D28]();
}

uint64_t sub_1C28CC5A0()
{
  return MEMORY[0x1F40E5D50]();
}

uint64_t sub_1C28CC5B0()
{
  return MEMORY[0x1F40E5D60]();
}

uint64_t sub_1C28CC5C0()
{
  return MEMORY[0x1F40E5D70]();
}

uint64_t sub_1C28CC5D0()
{
  return MEMORY[0x1F40D9648]();
}

uint64_t sub_1C28CC5E0()
{
  return MEMORY[0x1F4186958]();
}

uint64_t sub_1C28CC5F0()
{
  return MEMORY[0x1F4186968]();
}

uint64_t sub_1C28CC600()
{
  return MEMORY[0x1F4186978]();
}

uint64_t sub_1C28CC610()
{
  return MEMORY[0x1F411FF08]();
}

uint64_t sub_1C28CC620()
{
  return MEMORY[0x1F411FF10]();
}

uint64_t sub_1C28CC630()
{
  return MEMORY[0x1F411FF18]();
}

uint64_t sub_1C28CC640()
{
  return MEMORY[0x1F411FF20]();
}

uint64_t sub_1C28CC650()
{
  return MEMORY[0x1F411FF28]();
}

uint64_t sub_1C28CC660()
{
  return MEMORY[0x1F411FF68]();
}

uint64_t sub_1C28CC670()
{
  return MEMORY[0x1F411FF90]();
}

uint64_t sub_1C28CC680()
{
  return MEMORY[0x1F411FF98]();
}

uint64_t sub_1C28CC690()
{
  return MEMORY[0x1F411FFA0]();
}

uint64_t sub_1C28CC6A0()
{
  return MEMORY[0x1F411FFA8]();
}

uint64_t sub_1C28CC6B0()
{
  return MEMORY[0x1F411FFB8]();
}

uint64_t sub_1C28CC6C0()
{
  return MEMORY[0x1F4120008]();
}

uint64_t sub_1C28CC6D0()
{
  return MEMORY[0x1F4120048]();
}

uint64_t sub_1C28CC6E0()
{
  return MEMORY[0x1F4120100]();
}

uint64_t sub_1C28CC6F0()
{
  return MEMORY[0x1F41201C0]();
}

uint64_t sub_1C28CC700()
{
  return MEMORY[0x1F41201D8]();
}

uint64_t sub_1C28CC710()
{
  return MEMORY[0x1F4120290]();
}

uint64_t sub_1C28CC720()
{
  return MEMORY[0x1F4120298]();
}

uint64_t sub_1C28CC730()
{
  return MEMORY[0x1F41202A0]();
}

uint64_t sub_1C28CC740()
{
  return MEMORY[0x1F41202A8]();
}

uint64_t sub_1C28CC750()
{
  return MEMORY[0x1F41202C8]();
}

uint64_t sub_1C28CC760()
{
  return MEMORY[0x1F41202D0]();
}

uint64_t sub_1C28CC770()
{
  return MEMORY[0x1F41202D8]();
}

uint64_t sub_1C28CC780()
{
  return MEMORY[0x1F41202E8]();
}

uint64_t sub_1C28CC790()
{
  return MEMORY[0x1F41202F0]();
}

uint64_t sub_1C28CC7A0()
{
  return MEMORY[0x1F4120300]();
}

uint64_t sub_1C28CC7B0()
{
  return MEMORY[0x1F4120308]();
}

uint64_t sub_1C28CC7C0()
{
  return MEMORY[0x1F4120310]();
}

uint64_t sub_1C28CC7D0()
{
  return MEMORY[0x1F4120318]();
}

uint64_t sub_1C28CC7E0()
{
  return MEMORY[0x1F4120320]();
}

uint64_t sub_1C28CC7F0()
{
  return MEMORY[0x1F4120328]();
}

uint64_t sub_1C28CC800()
{
  return MEMORY[0x1F4120330]();
}

uint64_t sub_1C28CC810()
{
  return MEMORY[0x1F4120338]();
}

uint64_t sub_1C28CC8F0()
{
  return MEMORY[0x1F41205E0]();
}

uint64_t sub_1C28CC900()
{
  return MEMORY[0x1F41205F0]();
}

uint64_t sub_1C28CC920()
{
  return MEMORY[0x1F4120600]();
}

uint64_t sub_1C28CC930()
{
  return MEMORY[0x1F4120618]();
}

uint64_t sub_1C28CC940()
{
  return MEMORY[0x1F4120620]();
}

uint64_t sub_1C28CC950()
{
  return MEMORY[0x1F4120628]();
}

uint64_t sub_1C28CC960()
{
  return MEMORY[0x1F4120638]();
}

uint64_t sub_1C28CC970()
{
  return MEMORY[0x1F4120640]();
}

uint64_t sub_1C28CC980()
{
  return MEMORY[0x1F4120648]();
}

uint64_t sub_1C28CC990()
{
  return MEMORY[0x1F4120650]();
}

uint64_t sub_1C28CC9A0()
{
  return MEMORY[0x1F4120658]();
}

uint64_t sub_1C28CC9B0()
{
  return MEMORY[0x1F4120660]();
}

uint64_t sub_1C28CC9C0()
{
  return MEMORY[0x1F4120668]();
}

uint64_t sub_1C28CC9D0()
{
  return MEMORY[0x1F4120670]();
}

uint64_t sub_1C28CC9E0()
{
  return MEMORY[0x1F4120678]();
}

uint64_t sub_1C28CC9F0()
{
  return MEMORY[0x1F4120680]();
}

uint64_t sub_1C28CCA00()
{
  return MEMORY[0x1F4120770]();
}

uint64_t sub_1C28CCA10()
{
  return MEMORY[0x1F4120778]();
}

uint64_t sub_1C28CCA20()
{
  return MEMORY[0x1F4120798]();
}

uint64_t sub_1C28CCA30()
{
  return MEMORY[0x1F41207A0]();
}

uint64_t sub_1C28CCA40()
{
  return MEMORY[0x1F41207A8]();
}

uint64_t sub_1C28CCA50()
{
  return MEMORY[0x1F41207B0]();
}

uint64_t sub_1C28CCA60()
{
  return MEMORY[0x1F41207B8]();
}

uint64_t sub_1C28CCA70()
{
  return MEMORY[0x1F41207C0]();
}

uint64_t sub_1C28CCA80()
{
  return MEMORY[0x1F41207C8]();
}

uint64_t sub_1C28CCA90()
{
  return MEMORY[0x1F41207D0]();
}

uint64_t sub_1C28CCAA0()
{
  return MEMORY[0x1F41207D8]();
}

uint64_t sub_1C28CCAB0()
{
  return MEMORY[0x1F41207E0]();
}

uint64_t sub_1C28CCAC0()
{
  return MEMORY[0x1F41207F8]();
}

uint64_t sub_1C28CCAD0()
{
  return MEMORY[0x1F4120890]();
}

uint64_t sub_1C28CCAE0()
{
  return MEMORY[0x1F4120898]();
}

uint64_t sub_1C28CCAF0()
{
  return MEMORY[0x1F41208A0]();
}

uint64_t sub_1C28CCB00()
{
  return MEMORY[0x1F4120930]();
}

uint64_t sub_1C28CCB10()
{
  return MEMORY[0x1F4120A98]();
}

uint64_t sub_1C28CCB20()
{
  return MEMORY[0x1F4120AA0]();
}

uint64_t sub_1C28CCB30()
{
  return MEMORY[0x1F4120AA8]();
}

uint64_t sub_1C28CCB40()
{
  return MEMORY[0x1F4120AB8]();
}

uint64_t sub_1C28CCB50()
{
  return MEMORY[0x1F411CF58]();
}

uint64_t sub_1C28CCB60()
{
  return MEMORY[0x1F411CF70]();
}

uint64_t sub_1C28CCB70()
{
  return MEMORY[0x1F411CF78]();
}

uint64_t sub_1C28CCB80()
{
  return MEMORY[0x1F411D030]();
}

uint64_t sub_1C28CCB90()
{
  return MEMORY[0x1F411D038]();
}

uint64_t sub_1C28CCBA0()
{
  return MEMORY[0x1F411D040]();
}

uint64_t sub_1C28CCBB0()
{
  return MEMORY[0x1F411F000]();
}

uint64_t sub_1C28CCBC0()
{
  return MEMORY[0x1F411F018]();
}

uint64_t sub_1C28CCBD0()
{
  return MEMORY[0x1F411F020]();
}

uint64_t sub_1C28CCBE0()
{
  return MEMORY[0x1F411F028]();
}

uint64_t sub_1C28CCBF0()
{
  return MEMORY[0x1F411F030]();
}

uint64_t sub_1C28CCC00()
{
  return MEMORY[0x1F411F058]();
}

uint64_t sub_1C28CCC10()
{
  return MEMORY[0x1F411F060]();
}

uint64_t sub_1C28CCC20()
{
  return MEMORY[0x1F411F068]();
}

uint64_t sub_1C28CCC30()
{
  return MEMORY[0x1F411F080]();
}

uint64_t sub_1C28CCC40()
{
  return MEMORY[0x1F411F098]();
}

uint64_t sub_1C28CCC50()
{
  return MEMORY[0x1F411F0A0]();
}

uint64_t sub_1C28CCC60()
{
  return MEMORY[0x1F411F0B0]();
}

uint64_t sub_1C28CCC70()
{
  return MEMORY[0x1F411F0B8]();
}

uint64_t sub_1C28CCC90()
{
  return MEMORY[0x1F411F0C8]();
}

uint64_t sub_1C28CCCA0()
{
  return MEMORY[0x1F411F0D0]();
}

uint64_t sub_1C28CCCB0()
{
  return MEMORY[0x1F411F128]();
}

uint64_t sub_1C28CCCC0()
{
  return MEMORY[0x1F411F130]();
}

uint64_t sub_1C28CCCD0()
{
  return MEMORY[0x1F411F138]();
}

uint64_t sub_1C28CCCE0()
{
  return MEMORY[0x1F4187858]();
}

uint64_t sub_1C28CCCF0()
{
  return MEMORY[0x1F4187948]();
}

uint64_t sub_1C28CCD00()
{
  return MEMORY[0x1F4187A18]();
}

uint64_t sub_1C28CCD10()
{
  return MEMORY[0x1F4188570]();
}

uint64_t sub_1C28CCD20()
{
  return MEMORY[0x1F4188578]();
}

uint64_t sub_1C28CCD30()
{
  return MEMORY[0x1F4188580]();
}

uint64_t sub_1C28CCD40()
{
  return MEMORY[0x1F4188590]();
}

uint64_t sub_1C28CCD50()
{
  return MEMORY[0x1F41885B0]();
}

uint64_t sub_1C28CCD60()
{
  return MEMORY[0x1F41885D0]();
}

uint64_t sub_1C28CCD70()
{
  return MEMORY[0x1F4120BF0]();
}

uint64_t sub_1C28CCD80()
{
  return MEMORY[0x1F4120BF8]();
}

uint64_t sub_1C28CCD90()
{
  return MEMORY[0x1F4120C28]();
}

uint64_t sub_1C28CCDA0()
{
  return MEMORY[0x1F4120C38]();
}

uint64_t sub_1C28CCDB0()
{
  return MEMORY[0x1F4120C40]();
}

uint64_t sub_1C28CCDC0()
{
  return MEMORY[0x1F4120C68]();
}

uint64_t sub_1C28CCDD0()
{
  return MEMORY[0x1F4120C78]();
}

uint64_t sub_1C28CCDE0()
{
  return MEMORY[0x1F4120C80]();
}

uint64_t sub_1C28CCDF0()
{
  return MEMORY[0x1F4120C88]();
}

uint64_t sub_1C28CCE00()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1C28CCE10()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1C28CCE20()
{
  return MEMORY[0x1F4188490]();
}

uint64_t sub_1C28CCE30()
{
  return MEMORY[0x1F41884A0]();
}

uint64_t sub_1C28CCE40()
{
  return MEMORY[0x1F41884A8]();
}

uint64_t sub_1C28CCE50()
{
  return MEMORY[0x1F40D65E0]();
}

uint64_t sub_1C28CCE60()
{
  return MEMORY[0x1F40D65E8]();
}

uint64_t sub_1C28CCE70()
{
  return MEMORY[0x1F40D65F0]();
}

uint64_t sub_1C28CCE80()
{
  return MEMORY[0x1F40D6608]();
}

uint64_t sub_1C28CCE90()
{
  return MEMORY[0x1F40D6610]();
}

uint64_t sub_1C28CCEA0()
{
  return MEMORY[0x1F40D6658]();
}

uint64_t sub_1C28CCEB0()
{
  return MEMORY[0x1F40D6670]();
}

uint64_t sub_1C28CCEC0()
{
  return MEMORY[0x1F40D6680]();
}

uint64_t sub_1C28CCED0()
{
  return MEMORY[0x1F40D6688]();
}

uint64_t sub_1C28CCEE0()
{
  return MEMORY[0x1F40D66C8]();
}

uint64_t sub_1C28CCEF0()
{
  return MEMORY[0x1F40D66D8]();
}

uint64_t sub_1C28CCF00()
{
  return MEMORY[0x1F40D6718]();
}

uint64_t sub_1C28CCF10()
{
  return MEMORY[0x1F40D6728]();
}

uint64_t sub_1C28CCF20()
{
  return MEMORY[0x1F40D6768]();
}

uint64_t sub_1C28CCF30()
{
  return MEMORY[0x1F40D6778]();
}

uint64_t sub_1C28CCF40()
{
  return MEMORY[0x1F40D67C0]();
}

uint64_t sub_1C28CCF50()
{
  return MEMORY[0x1F40D67E8]();
}

uint64_t sub_1C28CCF60()
{
  return MEMORY[0x1F40D67F8]();
}

uint64_t sub_1C28CCF70()
{
  return MEMORY[0x1F40D6810]();
}

uint64_t sub_1C28CCF80()
{
  return MEMORY[0x1F40D6820]();
}

uint64_t sub_1C28CCF90()
{
  return MEMORY[0x1F40D6850]();
}

uint64_t sub_1C28CCFA0()
{
  return MEMORY[0x1F40D6870]();
}

uint64_t sub_1C28CCFB0()
{
  return MEMORY[0x1F40D6878]();
}

uint64_t sub_1C28CCFC0()
{
  return MEMORY[0x1F40D6880]();
}

uint64_t sub_1C28CCFD0()
{
  return MEMORY[0x1F40D6890]();
}

uint64_t sub_1C28CCFE0()
{
  return MEMORY[0x1F40D68A0]();
}

uint64_t sub_1C28CCFF0()
{
  return MEMORY[0x1F40D68A8]();
}

uint64_t sub_1C28CD000()
{
  return MEMORY[0x1F40D68B0]();
}

uint64_t sub_1C28CD010()
{
  return MEMORY[0x1F40D68B8]();
}

uint64_t sub_1C28CD020()
{
  return MEMORY[0x1F40D68C8]();
}

uint64_t sub_1C28CD030()
{
  return MEMORY[0x1F40D68E0]();
}

uint64_t sub_1C28CD040()
{
  return MEMORY[0x1F4120CA8]();
}

uint64_t sub_1C28CD050()
{
  return MEMORY[0x1F4120CB0]();
}

uint64_t sub_1C28CD060()
{
  return MEMORY[0x1F40D68E8]();
}

uint64_t sub_1C28CD070()
{
  return MEMORY[0x1F40D68F8]();
}

uint64_t sub_1C28CD080()
{
  return MEMORY[0x1F40D6900]();
}

uint64_t sub_1C28CD090()
{
  return MEMORY[0x1F40D6908]();
}

uint64_t sub_1C28CD0A0()
{
  return MEMORY[0x1F40D6918]();
}

uint64_t sub_1C28CD0B0()
{
  return MEMORY[0x1F40D6928]();
}

uint64_t sub_1C28CD0C0()
{
  return MEMORY[0x1F40D6930]();
}

uint64_t sub_1C28CD0D0()
{
  return MEMORY[0x1F40D6940]();
}

uint64_t sub_1C28CD0E0()
{
  return MEMORY[0x1F40D6950]();
}

uint64_t sub_1C28CD0F0()
{
  return MEMORY[0x1F40D6960]();
}

uint64_t sub_1C28CD100()
{
  return MEMORY[0x1F40D6968]();
}

uint64_t sub_1C28CD110()
{
  return MEMORY[0x1F40D69C8]();
}

uint64_t sub_1C28CD120()
{
  return MEMORY[0x1F40D69D0]();
}

uint64_t sub_1C28CD130()
{
  return MEMORY[0x1F40D6A08]();
}

uint64_t sub_1C28CD140()
{
  return MEMORY[0x1F40D6A20]();
}

uint64_t sub_1C28CD150()
{
  return MEMORY[0x1F40D6A28]();
}

uint64_t sub_1C28CD160()
{
  return MEMORY[0x1F40D6A40]();
}

uint64_t sub_1C28CD170()
{
  return MEMORY[0x1F40D6A68]();
}

uint64_t sub_1C28CD180()
{
  return MEMORY[0x1F40D6A78]();
}

uint64_t sub_1C28CD190()
{
  return MEMORY[0x1F40D6A80]();
}

uint64_t sub_1C28CD1A0()
{
  return MEMORY[0x1F40D6AD0]();
}

uint64_t sub_1C28CD1B0()
{
  return MEMORY[0x1F40D6AD8]();
}

uint64_t sub_1C28CD1C0()
{
  return MEMORY[0x1F40D6AE0]();
}

uint64_t sub_1C28CD1D0()
{
  return MEMORY[0x1F40D6AF0]();
}

uint64_t sub_1C28CD1E0()
{
  return MEMORY[0x1F40D6AF8]();
}

uint64_t sub_1C28CD1F0()
{
  return MEMORY[0x1F40D6B08]();
}

uint64_t sub_1C28CD200()
{
  return MEMORY[0x1F40D6B10]();
}

uint64_t sub_1C28CD210()
{
  return MEMORY[0x1F40D6B18]();
}

uint64_t sub_1C28CD220()
{
  return MEMORY[0x1F40D6B20]();
}

uint64_t sub_1C28CD230()
{
  return MEMORY[0x1F40D6B28]();
}

uint64_t sub_1C28CD240()
{
  return MEMORY[0x1F40D6B30]();
}

uint64_t sub_1C28CD250()
{
  return MEMORY[0x1F40D6B48]();
}

uint64_t sub_1C28CD260()
{
  return MEMORY[0x1F40D6B70]();
}

uint64_t sub_1C28CD270()
{
  return MEMORY[0x1F40D6B78]();
}

uint64_t sub_1C28CD280()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t sub_1C28CD290()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t sub_1C28CD2A0()
{
  return MEMORY[0x1F40D6B90]();
}

uint64_t sub_1C28CD2B0()
{
  return MEMORY[0x1F40D6B98]();
}

uint64_t sub_1C28CD2C0()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t sub_1C28CD2D0()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t sub_1C28CD2E0()
{
  return MEMORY[0x1F4120CC8]();
}

uint64_t sub_1C28CD2F0()
{
  return MEMORY[0x1F411F178]();
}

uint64_t sub_1C28CD300()
{
  return MEMORY[0x1F40D6BD8]();
}

uint64_t sub_1C28CD310()
{
  return MEMORY[0x1F40D6BE0]();
}

uint64_t sub_1C28CD320()
{
  return MEMORY[0x1F40D6C10]();
}

uint64_t sub_1C28CD330()
{
  return MEMORY[0x1F40D6C50]();
}

uint64_t sub_1C28CD340()
{
  return MEMORY[0x1F40D6C98]();
}

uint64_t sub_1C28CD350()
{
  return MEMORY[0x1F40D6CA0]();
}

uint64_t sub_1C28CD360()
{
  return MEMORY[0x1F40D6CC0]();
}

uint64_t sub_1C28CD370()
{
  return MEMORY[0x1F40D6D00]();
}

uint64_t sub_1C28CD380()
{
  return MEMORY[0x1F40D6D10]();
}

uint64_t sub_1C28CD390()
{
  return MEMORY[0x1F40D6D30]();
}

uint64_t sub_1C28CD3A0()
{
  return MEMORY[0x1F40D6D58]();
}

uint64_t sub_1C28CD3B0()
{
  return MEMORY[0x1F40D6D60]();
}

uint64_t sub_1C28CD3C0()
{
  return MEMORY[0x1F40D6D68]();
}

uint64_t sub_1C28CD3D0()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t sub_1C28CD3E0()
{
  return MEMORY[0x1F40D6D90]();
}

uint64_t sub_1C28CD3F0()
{
  return MEMORY[0x1F40D6DC8]();
}

uint64_t sub_1C28CD400()
{
  return MEMORY[0x1F40D6DD0]();
}

uint64_t sub_1C28CD410()
{
  return MEMORY[0x1F40D6DE0]();
}

uint64_t sub_1C28CD420()
{
  return MEMORY[0x1F40D6DF8]();
}

uint64_t sub_1C28CD430()
{
  return MEMORY[0x1F40D6E08]();
}

uint64_t sub_1C28CD440()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1C28CD450()
{
  return MEMORY[0x1F40D6E38]();
}

uint64_t sub_1C28CD460()
{
  return MEMORY[0x1F40FC2E0]();
}

uint64_t sub_1C28CD480()
{
  return MEMORY[0x1F40FC310]();
}

uint64_t sub_1C28CD4B0()
{
  return MEMORY[0x1F40FC4A8]();
}

uint64_t sub_1C28CD4C0()
{
  return MEMORY[0x1F40FC530]();
}

uint64_t sub_1C28CD4D0()
{
  return MEMORY[0x1F40FC550]();
}

uint64_t sub_1C28CD4E0()
{
  return MEMORY[0x1F40FC600]();
}

uint64_t sub_1C28CD4F0()
{
  return MEMORY[0x1F4186C60]();
}

uint64_t sub_1C28CD500()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1C28CD510()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1C28CD520()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1C28CD530()
{
  return MEMORY[0x1F4186E28]();
}

uint64_t sub_1C28CD540()
{
  return MEMORY[0x1F4186E60]();
}

uint64_t sub_1C28CD550()
{
  return MEMORY[0x1F4186F08]();
}

uint64_t sub_1C28CD560()
{
  return MEMORY[0x1F40E7800]();
}

uint64_t sub_1C28CD570()
{
  return MEMORY[0x1F40E7808]();
}

uint64_t sub_1C28CD580()
{
  return MEMORY[0x1F40E7810]();
}

uint64_t sub_1C28CD590()
{
  return MEMORY[0x1F40E7818]();
}

uint64_t sub_1C28CD5A0()
{
  return MEMORY[0x1F40E7820]();
}

uint64_t sub_1C28CD5B0()
{
  return MEMORY[0x1F40E7828]();
}

uint64_t sub_1C28CD5C0()
{
  return MEMORY[0x1F4183270]();
}

uint64_t sub_1C28CD5D0()
{
  return MEMORY[0x1F4183280]();
}

uint64_t sub_1C28CD5E0()
{
  return MEMORY[0x1F4183288]();
}

uint64_t sub_1C28CD5F0()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1C28CD600()
{
  return MEMORY[0x1F40E6018]();
}

uint64_t sub_1C28CD610()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1C28CD620()
{
  return MEMORY[0x1F41833C0]();
}

uint64_t sub_1C28CD630()
{
  return MEMORY[0x1F41833C8]();
}

uint64_t sub_1C28CD640()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1C28CD650()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1C28CD660()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1C28CD670()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1C28CD680()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1C28CD690()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1C28CD6A0()
{
  return MEMORY[0x1F4183738]();
}

uint64_t sub_1C28CD6B0()
{
  return MEMORY[0x1F4183740]();
}

uint64_t sub_1C28CD6C0()
{
  return MEMORY[0x1F4183748]();
}

uint64_t sub_1C28CD6D0()
{
  return MEMORY[0x1F41837D8]();
}

uint64_t sub_1C28CD6E0()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1C28CD6F0()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1C28CD700()
{
  return MEMORY[0x1F40E61A0]();
}

uint64_t sub_1C28CD710()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1C28CD720()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1C28CD730()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1C28CD740()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1C28CD750()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1C28CD760()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_1C28CD770()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t sub_1C28CD780()
{
  return MEMORY[0x1F4183908]();
}

uint64_t sub_1C28CD790()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1C28CD7A0()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1C28CD7B0()
{
  return MEMORY[0x1F4183A28]();
}

uint64_t sub_1C28CD7C0()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1C28CD7D0()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1C28CD7E0()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1C28CD7F0()
{
  return MEMORY[0x1F4183AA8]();
}

uint64_t sub_1C28CD800()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1C28CD810()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1C28CD820()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1C28CD830()
{
  return MEMORY[0x1F40D6E68]();
}

uint64_t sub_1C28CD840()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1C28CD850()
{
  return MEMORY[0x1F4183BF0]();
}

uint64_t sub_1C28CD860()
{
  return MEMORY[0x1F4183C48]();
}

uint64_t sub_1C28CD870()
{
  return MEMORY[0x1F4183C70]();
}

uint64_t sub_1C28CD880()
{
  return MEMORY[0x1F4183C78]();
}

uint64_t sub_1C28CD890()
{
  return MEMORY[0x1F4183C80]();
}

uint64_t sub_1C28CD8A0()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_1C28CD8B0()
{
  return MEMORY[0x1F4183D78]();
}

uint64_t sub_1C28CD8C0()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1C28CD8D0()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_1C28CD8E0()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1C28CD8F0()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_1C28CD900()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1C28CD910()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1C28CD920()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1C28CD930()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1C28CD940()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1C28CD950()
{
  return MEMORY[0x1F4183EA0]();
}

uint64_t sub_1C28CD960()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t sub_1C28CD970()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1C28CD980()
{
  return MEMORY[0x1F4183ED8]();
}

uint64_t sub_1C28CD990()
{
  return MEMORY[0x1F4183EE8]();
}

uint64_t sub_1C28CD9A0()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1C28CD9B0()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1C28CD9C0()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t sub_1C28CD9D0()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1C28CD9E0()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1C28CD9F0()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_1C28CDA00()
{
  return MEMORY[0x1F4183F70]();
}

uint64_t sub_1C28CDA10()
{
  return MEMORY[0x1F4183F78]();
}

uint64_t sub_1C28CDA20()
{
  return MEMORY[0x1F4183F80]();
}

uint64_t sub_1C28CDA30()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1C28CDA40()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1C28CDA50()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1C28CDA60()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_1C28CDA70()
{
  return MEMORY[0x1F4187C10]();
}

uint64_t sub_1C28CDA80()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1C28CDA90()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1C28CDAB0()
{
  return MEMORY[0x1F4187D98]();
}

uint64_t sub_1C28CDAC0()
{
  return MEMORY[0x1F4187E28]();
}

uint64_t sub_1C28CDAE0()
{
  return MEMORY[0x1F4187E50]();
}

uint64_t sub_1C28CDAF0()
{
  return MEMORY[0x1F4187E60]();
}

uint64_t sub_1C28CDB00()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_1C28CDB10()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1C28CDB20()
{
  return MEMORY[0x1F41841A8]();
}

uint64_t sub_1C28CDB30()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_1C28CDB40()
{
  return MEMORY[0x1F4184230]();
}

uint64_t sub_1C28CDB50()
{
  return MEMORY[0x1F40E6468]();
}

uint64_t sub_1C28CDB60()
{
  return MEMORY[0x1F40E6478]();
}

uint64_t sub_1C28CDB70()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1C28CDB80()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1C28CDB90()
{
  return MEMORY[0x1F4184330]();
}

uint64_t sub_1C28CDBA0()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1C28CDBB0()
{
  return MEMORY[0x1F41843D0]();
}

uint64_t sub_1C28CDBC0()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1C28CDBD0()
{
  return MEMORY[0x1F41844A0]();
}

uint64_t sub_1C28CDBE0()
{
  return MEMORY[0x1F4184580]();
}

uint64_t sub_1C28CDBF0()
{
  return MEMORY[0x1F41845B0]();
}

uint64_t sub_1C28CDC00()
{
  return MEMORY[0x1F40D9680]();
}

uint64_t sub_1C28CDC10()
{
  return MEMORY[0x1F40D9688]();
}

uint64_t sub_1C28CDC20()
{
  return MEMORY[0x1F411F1B0]();
}

uint64_t sub_1C28CDC30()
{
  return MEMORY[0x1F411F1B8]();
}

uint64_t sub_1C28CDC40()
{
  return MEMORY[0x1F411F1C0]();
}

uint64_t sub_1C28CDC50()
{
  return MEMORY[0x1F411F1C8]();
}

uint64_t sub_1C28CDC60()
{
  return MEMORY[0x1F411F1D0]();
}

uint64_t sub_1C28CDC70()
{
  return MEMORY[0x1F411F1E0]();
}

uint64_t sub_1C28CDC80()
{
  return MEMORY[0x1F411F220]();
}

uint64_t sub_1C28CDC90()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1C28CDCA0()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1C28CDCB0()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1C28CDCC0()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1C28CDCD0()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1C28CDCE0()
{
  return MEMORY[0x1F411F228]();
}

uint64_t sub_1C28CDCF0()
{
  return MEMORY[0x1F40E7960]();
}

uint64_t sub_1C28CDD00()
{
  return MEMORY[0x1F4120D80]();
}

uint64_t sub_1C28CDD10()
{
  return MEMORY[0x1F411F240]();
}

uint64_t sub_1C28CDD20()
{
  return MEMORY[0x1F411F250]();
}

uint64_t sub_1C28CDD30()
{
  return MEMORY[0x1F411F278]();
}

uint64_t sub_1C28CDD40()
{
  return MEMORY[0x1F411F280]();
}

uint64_t sub_1C28CDD50()
{
  return MEMORY[0x1F411F2A0]();
}

uint64_t sub_1C28CDD60()
{
  return MEMORY[0x1F40E7980]();
}

uint64_t sub_1C28CDD70()
{
  return MEMORY[0x1F40E7988]();
}

uint64_t sub_1C28CDD80()
{
  return MEMORY[0x1F40E7990]();
}

uint64_t sub_1C28CDD90()
{
  return MEMORY[0x1F40E7998]();
}

uint64_t sub_1C28CDDA0()
{
  return MEMORY[0x1F40E79A0]();
}

uint64_t sub_1C28CDDB0()
{
  return MEMORY[0x1F40E79A8]();
}

uint64_t sub_1C28CDDC0()
{
  return MEMORY[0x1F40E79B0]();
}

uint64_t sub_1C28CDDD0()
{
  return MEMORY[0x1F40E79B8]();
}

uint64_t sub_1C28CDDE0()
{
  return MEMORY[0x1F40E79C0]();
}

uint64_t sub_1C28CDDF0()
{
  return MEMORY[0x1F40E79C8]();
}

uint64_t sub_1C28CDE00()
{
  return MEMORY[0x1F40E79D0]();
}

uint64_t sub_1C28CDE10()
{
  return MEMORY[0x1F40E6670]();
}

uint64_t sub_1C28CDE20()
{
  return MEMORY[0x1F4120DA0]();
}

uint64_t sub_1C28CDE30()
{
  return MEMORY[0x1F40E66C8]();
}

uint64_t sub_1C28CDE40()
{
  return MEMORY[0x1F4186F90]();
}

uint64_t sub_1C28CDE50()
{
  return MEMORY[0x1F4187040]();
}

uint64_t sub_1C28CDE60()
{
  return MEMORY[0x1F4187058]();
}

uint64_t sub_1C28CDE70()
{
  return MEMORY[0x1F4187088]();
}

uint64_t sub_1C28CDE80()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1C28CDE90()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1C28CDEA0()
{
  return MEMORY[0x1F4188708]();
}

uint64_t sub_1C28CDEB0()
{
  return MEMORY[0x1F4188710]();
}

uint64_t sub_1C28CDEC0()
{
  return MEMORY[0x1F40E6780]();
}

uint64_t sub_1C28CDED0()
{
  return MEMORY[0x1F40E6798]();
}

uint64_t sub_1C28CDEE0()
{
  return MEMORY[0x1F40E67A0]();
}

uint64_t sub_1C28CDEF0()
{
  return MEMORY[0x1F411F330]();
}

uint64_t sub_1C28CDF00()
{
  return MEMORY[0x1F411F338]();
}

uint64_t sub_1C28CDF10()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_1C28CDF20()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_1C28CDF30()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1C28CDF40()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_1C28CDF50()
{
  return MEMORY[0x1F41874E0]();
}

uint64_t sub_1C28CDF60()
{
  return MEMORY[0x1F40E6928]();
}

uint64_t sub_1C28CDF70()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1C28CDF80()
{
  return MEMORY[0x1F4184798]();
}

uint64_t sub_1C28CDF90()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1C28CDFA0()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1C28CDFB0()
{
  return MEMORY[0x1F40E6BA8]();
}

uint64_t sub_1C28CDFC0()
{
  return MEMORY[0x1F40E6BF0]();
}

uint64_t sub_1C28CDFD0()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_1C28CDFE0()
{
  return MEMORY[0x1F40E6CD8]();
}

uint64_t sub_1C28CDFF0()
{
  return MEMORY[0x1F40E6D38]();
}

uint64_t sub_1C28CE000()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1C28CE020()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1C28CE030()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1C28CE040()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1C28CE050()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_1C28CE060()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_1C28CE070()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_1C28CE080()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_1C28CE090()
{
  return MEMORY[0x1F4184BC8]();
}

uint64_t sub_1C28CE0A0()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1C28CE0B0()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_1C28CE0C0()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_1C28CE0D0()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1C28CE0E0()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1C28CE0F0()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_1C28CE100()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1C28CE110()
{
  return MEMORY[0x1F4184CB0]();
}

uint64_t sub_1C28CE120()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1C28CE130()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1C28CE140()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t sub_1C28CE150()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1C28CE160()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1C28CE170()
{
  return MEMORY[0x1F4184DE8]();
}

uint64_t sub_1C28CE180()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1C28CE190()
{
  return MEMORY[0x1F4184E28]();
}

uint64_t sub_1C28CE1A0()
{
  return MEMORY[0x1F4184E38]();
}

uint64_t sub_1C28CE1B0()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1C28CE1C0()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1C28CE1D0()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1C28CE1E0()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1C28CE1F0()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1C28CE200()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1C28CE210()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1C28CE220()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1C28CE230()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1C28CE240()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1C28CE250()
{
  return MEMORY[0x1F4184FF8]();
}

uint64_t sub_1C28CE260()
{
  return MEMORY[0x1F4185048]();
}

uint64_t sub_1C28CE270()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1C28CE280()
{
  return MEMORY[0x1F41850C8]();
}

uint64_t sub_1C28CE290()
{
  return MEMORY[0x1F41851F0]();
}

uint64_t sub_1C28CE2A0()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_1C28CE2B0()
{
  return MEMORY[0x1F4185200]();
}

uint64_t sub_1C28CE2C0()
{
  return MEMORY[0x1F4185208]();
}

uint64_t sub_1C28CE2D0()
{
  return MEMORY[0x1F4185210]();
}

uint64_t sub_1C28CE2E0()
{
  return MEMORY[0x1F4185228]();
}

uint64_t sub_1C28CE2F0()
{
  return MEMORY[0x1F4185230]();
}

uint64_t sub_1C28CE300()
{
  return MEMORY[0x1F4185238]();
}

uint64_t sub_1C28CE310()
{
  return MEMORY[0x1F4185240]();
}

uint64_t sub_1C28CE320()
{
  return MEMORY[0x1F4185260]();
}

uint64_t sub_1C28CE330()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_1C28CE340()
{
  return MEMORY[0x1F4185290]();
}

uint64_t sub_1C28CE350()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1C28CE360()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1C28CE370()
{
  return MEMORY[0x1F41852E8]();
}

uint64_t sub_1C28CE380()
{
  return MEMORY[0x1F41852F0]();
}

uint64_t sub_1C28CE390()
{
  return MEMORY[0x1F41852F8]();
}

uint64_t sub_1C28CE3A0()
{
  return MEMORY[0x1F4185300]();
}

uint64_t sub_1C28CE3B0()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1C28CE3C0()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1C28CE3D0()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1C28CE3E0()
{
  return MEMORY[0x1F4185378]();
}

uint64_t sub_1C28CE3F0()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1C28CE400()
{
  return MEMORY[0x1F4185388]();
}

uint64_t sub_1C28CE410()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1C28CE420()
{
  return MEMORY[0x1F41853A8]();
}

uint64_t sub_1C28CE440()
{
  return MEMORY[0x1F4185498]();
}

uint64_t sub_1C28CE450()
{
  return MEMORY[0x1F41854B8]();
}

uint64_t sub_1C28CE460()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1C28CE480()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1C28CE490()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1C28CE4A0()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1C28CE4B0()
{
  return MEMORY[0x1F4185500]();
}

uint64_t sub_1C28CE4C0()
{
  return MEMORY[0x1F4185518]();
}

uint64_t sub_1C28CE4D0()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1C28CE4E0()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1C28CE4F0()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_1C28CE500()
{
  return MEMORY[0x1F4185578]();
}

uint64_t sub_1C28CE510()
{
  return MEMORY[0x1F4185588]();
}

uint64_t sub_1C28CE520()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1C28CE530()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1C28CE540()
{
  return MEMORY[0x1F41855F0]();
}

uint64_t sub_1C28CE550()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_1C28CE560()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1C28CE570()
{
  return MEMORY[0x1F4185630]();
}

uint64_t sub_1C28CE580()
{
  return MEMORY[0x1F4185648]();
}

uint64_t sub_1C28CE590()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_1C28CE5A0()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1C28CE5B0()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_1C28CE5C0()
{
  return MEMORY[0x1F41856A0]();
}

uint64_t sub_1C28CE5D0()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_1C28CE5E0()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1C28CE5F0()
{
  return MEMORY[0x1F4185710]();
}

uint64_t sub_1C28CE600()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1C28CE610()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1C28CE620()
{
  return MEMORY[0x1F4185768]();
}

uint64_t sub_1C28CE630()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1C28CE640()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1C28CE660()
{
  return MEMORY[0x1F4185D50]();
}

uint64_t sub_1C28CE670()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1C28CE680()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1C28CE6B0()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1C28CE6C0()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1C28CE6D0()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1C28CE6E0()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1C28CE6F0()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1C28CE700()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1C28CE710()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1C28CE720()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1C28CE730()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1C28CE740()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1C28CE750()
{
  return MEMORY[0x1F4185F08]();
}

uint64_t sub_1C28CE760()
{
  return MEMORY[0x1F4185F10]();
}

uint64_t sub_1C28CE770()
{
  return MEMORY[0x1F4185F28]();
}

uint64_t sub_1C28CE780()
{
  return MEMORY[0x1F4185F38]();
}

uint64_t sub_1C28CE790()
{
  return MEMORY[0x1F4185F40]();
}

uint64_t sub_1C28CE7A0()
{
  return MEMORY[0x1F4185F48]();
}

uint64_t sub_1C28CE7B0()
{
  return MEMORY[0x1F4185F60]();
}

uint64_t sub_1C28CE7C0()
{
  return MEMORY[0x1F411F360]();
}

uint64_t sub_1C28CE7D0()
{
  return MEMORY[0x1F40D6E78]();
}

uint64_t sub_1C28CE7E0()
{
  return MEMORY[0x1F4185F68]();
}

uint64_t sub_1C28CE7F0()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1C28CE800()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1C28CE830()
{
  return MEMORY[0x1F4186318]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1F41138A0]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1F410C8D0]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x1F40D70A8]();
  return result;
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1F40D9808](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1F40D9818](context);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9B60](name);
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextBeginPath(CGContextRef c)
{
}

void CGContextClosePath(CGContextRef c)
{
}

CFDataRef CGDataProviderCopyData(CGDataProviderRef provider)
{
  return (CFDataRef)MEMORY[0x1F40DA2E8](provider);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1F40E9758](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1F40E9760](idst);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1F40DA8D8](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1F40DA8E0](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1F40DA908](image);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return (CGDataProviderRef)MEMORY[0x1F40DA920](image);
}

uint64_t CGImageGetHash()
{
  return MEMORY[0x1F40E9778]();
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1F40DA948](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1F40DA9B8](image);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x1F40E9938](isrc, index, options);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1F40E9988](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1F40E9998](data, options);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x1F40DB280]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x1F40DB288]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t HKActivityMoveModeToString()
{
  return MEMORY[0x1F40E7A18]();
}

uint64_t HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge()
{
  return MEMORY[0x1F40E7A40]();
}

uint64_t HKAnalyticsPropertyValueForBiologicalSex()
{
  return MEMORY[0x1F40E7A70]();
}

uint64_t HKDisplayCategoryIdentifierToString()
{
  return MEMORY[0x1F4121548]();
}

uint64_t HKImproveHealthAndActivityAnalyticsAllowed()
{
  return MEMORY[0x1F40E7D50]();
}

uint64_t HKNSOperatingSystemVersionFromString()
{
  return MEMORY[0x1F40E7E28]();
}

uint64_t HKNSOperatingSystemVersionIsUnknown()
{
  return MEMORY[0x1F40E7E30]();
}

uint64_t HKNSOperatingSystemVersionString()
{
  return MEMORY[0x1F40E7E38]();
}

uint64_t HKNSOperatingSystemVersionsEqual()
{
  return MEMORY[0x1F40E7E40]();
}

uint64_t HKStringForMessageDirection()
{
  return MEMORY[0x1F40E7FB0]();
}

uint64_t HKStringForNotificationStatus()
{
  return MEMORY[0x1F40E7FB8]();
}

uint64_t HKStringForSharingStatus()
{
  return MEMORY[0x1F40E7FC0]();
}

uint64_t HKStringForSharingType()
{
  return MEMORY[0x1F40E7FC8]();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1F4166CC0](image);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1F4186340]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

dispatch_workloop_t dispatch_workloop_create(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x1F40CBD50](label);
}

void free(void *a1)
{
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CC590](path, name, value, size, *(void *)&position, *(void *)&options);
}

long double log2(long double __x)
{
  MEMORY[0x1F40CC8A8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int removexattr(const char *path, const char *name, int options)
{
  return MEMORY[0x1F40CDD48](path, name, *(void *)&options);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1F40CDFD8](path, name, value, size, *(void *)&position, *(void *)&options);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1F4186498]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x1F4186588]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1F4186590]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x1F41865C0]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x1F41865C8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1F4186630]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1F4186638]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1F4186640]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1F4186658]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1F41866C0]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1F41868E8]();
}